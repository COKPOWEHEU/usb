
res/firmware.elf:     file format elf32-littlearm


Disassembly of section .isr_vector:

08000000 <g_pfnVectors>:
 8000000:	20005000 	andcs	r5, r0, r0
 8000004:	080008fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, fp}
 8000008:	08000941 	stmdaeq	r0, {r0, r6, r8, fp}
 800000c:	08000941 	stmdaeq	r0, {r0, r6, r8, fp}
 8000010:	08000941 	stmdaeq	r0, {r0, r6, r8, fp}
 8000014:	08000941 	stmdaeq	r0, {r0, r6, r8, fp}
 8000018:	08000941 	stmdaeq	r0, {r0, r6, r8, fp}
	...
 800002c:	08000941 	stmdaeq	r0, {r0, r6, r8, fp}
 8000030:	08000941 	stmdaeq	r0, {r0, r6, r8, fp}
 8000034:	00000000 	andeq	r0, r0, r0
 8000038:	08000941 	stmdaeq	r0, {r0, r6, r8, fp}
 800003c:	08000941 	stmdaeq	r0, {r0, r6, r8, fp}
 8000040:	08000941 	stmdaeq	r0, {r0, r6, r8, fp}
 8000044:	08000941 	stmdaeq	r0, {r0, r6, r8, fp}
 8000048:	08000941 	stmdaeq	r0, {r0, r6, r8, fp}
 800004c:	08000941 	stmdaeq	r0, {r0, r6, r8, fp}
 8000050:	08000941 	stmdaeq	r0, {r0, r6, r8, fp}
 8000054:	08000941 	stmdaeq	r0, {r0, r6, r8, fp}
 8000058:	08000941 	stmdaeq	r0, {r0, r6, r8, fp}
 800005c:	08000941 	stmdaeq	r0, {r0, r6, r8, fp}
 8000060:	08000941 	stmdaeq	r0, {r0, r6, r8, fp}
 8000064:	08000941 	stmdaeq	r0, {r0, r6, r8, fp}
 8000068:	08000941 	stmdaeq	r0, {r0, r6, r8, fp}
 800006c:	08000941 	stmdaeq	r0, {r0, r6, r8, fp}
 8000070:	08000941 	stmdaeq	r0, {r0, r6, r8, fp}
 8000074:	08000941 	stmdaeq	r0, {r0, r6, r8, fp}
 8000078:	08000941 	stmdaeq	r0, {r0, r6, r8, fp}
 800007c:	08000941 	stmdaeq	r0, {r0, r6, r8, fp}
 8000080:	08000941 	stmdaeq	r0, {r0, r6, r8, fp}
 8000084:	08000941 	stmdaeq	r0, {r0, r6, r8, fp}
 8000088:	08000941 	stmdaeq	r0, {r0, r6, r8, fp}
 800008c:	08000941 	stmdaeq	r0, {r0, r6, r8, fp}
 8000090:	0800047d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, sl}
 8000094:	08000941 	stmdaeq	r0, {r0, r6, r8, fp}
 8000098:	08000941 	stmdaeq	r0, {r0, r6, r8, fp}
 800009c:	08000941 	stmdaeq	r0, {r0, r6, r8, fp}
 80000a0:	08000941 	stmdaeq	r0, {r0, r6, r8, fp}
 80000a4:	08000941 	stmdaeq	r0, {r0, r6, r8, fp}
 80000a8:	08000941 	stmdaeq	r0, {r0, r6, r8, fp}
 80000ac:	08000941 	stmdaeq	r0, {r0, r6, r8, fp}
 80000b0:	08000941 	stmdaeq	r0, {r0, r6, r8, fp}
 80000b4:	08000941 	stmdaeq	r0, {r0, r6, r8, fp}
 80000b8:	08000941 	stmdaeq	r0, {r0, r6, r8, fp}
 80000bc:	08000941 	stmdaeq	r0, {r0, r6, r8, fp}
 80000c0:	08000941 	stmdaeq	r0, {r0, r6, r8, fp}
 80000c4:	08000941 	stmdaeq	r0, {r0, r6, r8, fp}
 80000c8:	08000941 	stmdaeq	r0, {r0, r6, r8, fp}
 80000cc:	08000941 	stmdaeq	r0, {r0, r6, r8, fp}
 80000d0:	08000941 	stmdaeq	r0, {r0, r6, r8, fp}
 80000d4:	08000941 	stmdaeq	r0, {r0, r6, r8, fp}
 80000d8:	08000941 	stmdaeq	r0, {r0, r6, r8, fp}
 80000dc:	08000941 	stmdaeq	r0, {r0, r6, r8, fp}
 80000e0:	08000941 	stmdaeq	r0, {r0, r6, r8, fp}
 80000e4:	08000941 	stmdaeq	r0, {r0, r6, r8, fp}
 80000e8:	08000941 	stmdaeq	r0, {r0, r6, r8, fp}
	...
 8000108:	f108f85f 			; <UNDEFINED> instruction: 0xf108f85f

Disassembly of section .text:

0800010c <SysClockMax-0x14>:
 800010c:	08000a40 	stmdaeq	r0, {r6, r9, fp}
 8000110:	20000000 	andcs	r0, r0, r0
 8000114:	20000004 	andcs	r0, r0, r4
 8000118:	20000004 	andcs	r0, r0, r4
 800011c:	2000005c 	andcs	r0, r0, ip, asr r0

08000120 <SysClockMax>:
#define F_CPU 72000000
//F_HSE = 8 MHz
int8_t SysClockMax(){
  int i;
  uint32_t tmp;
  RCC->CR &=~RCC_CR_HSEON;
 8000120:	4b27      	ldr	r3, [pc, #156]	; (80001c0 <SysClockMax+0xa0>)
 8000122:	681a      	ldr	r2, [r3, #0]
 8000124:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8000128:	601a      	str	r2, [r3, #0]
  RCC->CR &=~RCC_CR_HSEBYP;
 800012a:	681a      	ldr	r2, [r3, #0]
 800012c:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8000130:	601a      	str	r2, [r3, #0]
  RCC->CR |= RCC_CR_HSEON;
 8000132:	681a      	ldr	r2, [r3, #0]
 8000134:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8000138:	601a      	str	r2, [r3, #0]
 800013a:	f640 72ff 	movw	r2, #4095	; 0xfff
  for(i=0;i<0x0FFF;i++){
    if(RCC->CR & RCC_CR_HSERDY){i=0x1FFF; break;}
 800013e:	6819      	ldr	r1, [r3, #0]
 8000140:	0388      	lsls	r0, r1, #14
 8000142:	d416      	bmi.n	8000172 <SysClockMax+0x52>
  for(i=0;i<0x0FFF;i++){
 8000144:	3a01      	subs	r2, #1
 8000146:	d1fa      	bne.n	800013e <SysClockMax+0x1e>
  }
  if(i != 0x1FFF)return SCME_HSE; //can not start HSE
 8000148:	2001      	movs	r0, #1
 800014a:	4770      	bx	lr
  RCC->CFGR = tmp;
  for(i=0;i<0x0FFF;i++){
    if((RCC->CFGR & RCC_CFGR_SWS)==RCC_CFGR_SWS_PLL){i=0x1FFF; break;}
  }
  if(i != 0x1FFF)return SCME_SW;
  return SCME_OK;
 800014c:	2000      	movs	r0, #0
}
 800014e:	4770      	bx	lr
  tmp = RCC->CFGR;
 8000150:	685a      	ldr	r2, [r3, #4]
  tmp &=~RCC_CFGR_SW;
 8000152:	f022 0203 	bic.w	r2, r2, #3
  tmp |= RCC_CFGR_SW_PLL;
 8000156:	f042 0202 	orr.w	r2, r2, #2
  RCC->CFGR = tmp;
 800015a:	605a      	str	r2, [r3, #4]
 800015c:	f640 72ff 	movw	r2, #4095	; 0xfff
    if((RCC->CFGR & RCC_CFGR_SWS)==RCC_CFGR_SWS_PLL){i=0x1FFF; break;}
 8000160:	6859      	ldr	r1, [r3, #4]
 8000162:	f001 010c 	and.w	r1, r1, #12
 8000166:	2908      	cmp	r1, #8
 8000168:	d0f0      	beq.n	800014c <SysClockMax+0x2c>
  for(i=0;i<0x0FFF;i++){
 800016a:	3a01      	subs	r2, #1
 800016c:	d1f8      	bne.n	8000160 <SysClockMax+0x40>
  if(i != 0x1FFF)return SCME_SW;
 800016e:	2003      	movs	r0, #3
 8000170:	4770      	bx	lr
  FLASH->ACR &=~FLASH_ACR_PRFTBE;
 8000172:	4a14      	ldr	r2, [pc, #80]	; (80001c4 <SysClockMax+0xa4>)
 8000174:	6811      	ldr	r1, [r2, #0]
 8000176:	f021 0110 	bic.w	r1, r1, #16
 800017a:	6011      	str	r1, [r2, #0]
  FLASH->ACR |= FLASH_ACR_PRFTBE;
 800017c:	6811      	ldr	r1, [r2, #0]
 800017e:	f041 0110 	orr.w	r1, r1, #16
 8000182:	6011      	str	r1, [r2, #0]
  FLASH->ACR &=~FLASH_ACR_LATENCY;
 8000184:	6811      	ldr	r1, [r2, #0]
 8000186:	f021 0107 	bic.w	r1, r1, #7
 800018a:	6011      	str	r1, [r2, #0]
  FLASH->ACR |= FLASH_ACR_LATENCY_2;
 800018c:	6811      	ldr	r1, [r2, #0]
 800018e:	f041 0104 	orr.w	r1, r1, #4
 8000192:	6011      	str	r1, [r2, #0]
  tmp = RCC->CFGR;
 8000194:	6859      	ldr	r1, [r3, #4]
  tmp &=~RCC_CFGR_PPRE1;
 8000196:	4a0c      	ldr	r2, [pc, #48]	; (80001c8 <SysClockMax+0xa8>)
 8000198:	400a      	ands	r2, r1
  tmp |= RCC_CFGR_PPRE1_DIV2;
 800019a:	f442 12e8 	orr.w	r2, r2, #1900544	; 0x1d0000
 800019e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
  RCC->CFGR = tmp;
 80001a2:	605a      	str	r2, [r3, #4]
  RCC->CR |= RCC_CR_PLLON;
 80001a4:	681a      	ldr	r2, [r3, #0]
 80001a6:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 80001aa:	601a      	str	r2, [r3, #0]
 80001ac:	f640 72ff 	movw	r2, #4095	; 0xfff
    if(RCC->CR & RCC_CR_PLLRDY){i=0x1FFF; break;}
 80001b0:	6819      	ldr	r1, [r3, #0]
 80001b2:	0189      	lsls	r1, r1, #6
 80001b4:	d4cc      	bmi.n	8000150 <SysClockMax+0x30>
  for(i=0;i<0x0FFF;i++){
 80001b6:	3a01      	subs	r2, #1
 80001b8:	d1fa      	bne.n	80001b0 <SysClockMax+0x90>
  if(i != 0x1FFF)return SCME_PLL; //can not enable PLL
 80001ba:	2002      	movs	r0, #2
 80001bc:	4770      	bx	lr
 80001be:	bf00      	nop
 80001c0:	40021000 	andmi	r1, r2, r0
 80001c4:	40022000 	andmi	r2, r2, r0
 80001c8:	ffc2c00f 			; <UNDEFINED> instruction: 0xffc2c00f

080001cc <_init>:
 80001cc:	4770      	bx	lr

080001ce <SystemInit>:
#include "hardware.h"
#include "usb_lib.h"
#include "clock.h"

void __attribute__((weak)) _init(void){}
void __attribute__((weak)) SystemInit(void){}
 80001ce:	4770      	bx	lr

080001d0 <sleep>:

void sleep(uint32_t time){
  while(time--)asm volatile("nop");
 80001d0:	f110 30ff 	adds.w	r0, r0, #4294967295	; 0xffffffff
 80001d4:	d200      	bcs.n	80001d8 <sleep+0x8>
}
 80001d6:	4770      	bx	lr
  while(time--)asm volatile("nop");
 80001d8:	bf00      	nop
 80001da:	e7f9      	b.n	80001d0 <sleep>

080001dc <usb_class_init>:

#define STM32ENDPOINTS          8
#define usb_epdata   ((volatile usb_epdata_t*)(USB_PMAADDR))
#define LASTADDR_DEFAULT                (STM32ENDPOINTS * 8)

__attribute__((weak))void usb_class_init(){}
 80001dc:	4770      	bx	lr
 80001de:	4770      	bx	lr

080001e0 <usb_class_poll>:
 80001e0:	4770      	bx	lr
__attribute__((weak))void usb_class_disconnect(){}
__attribute__((weak))void usb_class_poll(){}
__attribute__((weak))char usb_class_ep0_in(config_pack_t *req, void **data, uint16_t *size){return 0;}
 80001e2:	2000      	movs	r0, #0
 80001e4:	4770      	bx	lr
__attribute__((weak))char usb_class_ep0_out(config_pack_t *req, uint16_t offset, uint16_t rx_size){return 0;}
 80001e6:	2000      	movs	r0, #0
 80001e8:	4770      	bx	lr

080001ea <USB_setup>:
epfunc_t epfunc_out[STM32ENDPOINTS];

static config_pack_t setup_packet;

void USB_setup(){
  RCC->APB1ENR |= RCC_APB1ENR_USBEN;
 80001ea:	4a15      	ldr	r2, [pc, #84]	; (8000240 <USB_setup+0x56>)
  GPIO_config( USB_PULLUP );
 80001ec:	4915      	ldr	r1, [pc, #84]	; (8000244 <USB_setup+0x5a>)
  RCC->APB1ENR |= RCC_APB1ENR_USBEN;
 80001ee:	69d3      	ldr	r3, [r2, #28]
 80001f0:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80001f4:	61d3      	str	r3, [r2, #28]
  GPIO_config( USB_PULLUP );
 80001f6:	684b      	ldr	r3, [r1, #4]

  GPO_OFF( USB_PULLUP );
  USB->CNTR   = USB_CNTR_FRES; // Force USB Reset
 80001f8:	2201      	movs	r2, #1
  GPIO_config( USB_PULLUP );
 80001fa:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 80001fe:	f443 7340 	orr.w	r3, r3, #768	; 0x300
 8000202:	604b      	str	r3, [r1, #4]
  GPO_OFF( USB_PULLUP );
 8000204:	f04f 6380 	mov.w	r3, #67108864	; 0x4000000
 8000208:	610b      	str	r3, [r1, #16]
  USB->CNTR   = USB_CNTR_FRES; // Force USB Reset
 800020a:	4b0f      	ldr	r3, [pc, #60]	; (8000248 <USB_setup+0x5e>)
 800020c:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
 8000210:	4a0e      	ldr	r2, [pc, #56]	; (800024c <USB_setup+0x62>)
  for(uint32_t ctr = 0; ctr < 100000; ++ctr) asm volatile("nop"); // wait >1ms
 8000212:	bf00      	nop
 8000214:	3a01      	subs	r2, #1
 8000216:	d1fc      	bne.n	8000212 <USB_setup+0x28>
  USB->CNTR   = 0;
 8000218:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
  USB->BTABLE = 0;
 800021c:	f8a3 2050 	strh.w	r2, [r3, #80]	; 0x50
  USB->DADDR  = 0;
 8000220:	f8a3 204c 	strh.w	r2, [r3, #76]	; 0x4c
  USB->ISTR   = 0;
 8000224:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
  USB->CNTR   = USB_CNTR_RESETM | USB_CNTR_WKUPM;
 8000228:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
 800022c:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
 * Enable a device specific interupt in the NVIC interrupt controller.
 * The interrupt number cannot be a negative value.
 */
static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
 8000230:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
 8000234:	4b06      	ldr	r3, [pc, #24]	; (8000250 <USB_setup+0x66>)
 8000236:	601a      	str	r2, [r3, #0]
  NVIC_EnableIRQ(USB_LP_IRQn);
  GPO_ON( USB_PULLUP );
 8000238:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800023c:	610b      	str	r3, [r1, #16]
}
 800023e:	4770      	bx	lr
 8000240:	40021000 	andmi	r1, r2, r0
 8000244:	40010800 	andmi	r0, r1, r0, lsl #16
 8000248:	40005c00 	andmi	r5, r0, r0, lsl #24
 800024c:	000186a0 	andeq	r8, r1, r0, lsr #13
 8000250:	e000e100 	and	lr, r0, r0, lsl #2

08000254 <usb_ep_init>:
    if( bytesread >= setup_packet.wLength )usb_ep_write(0, NULL, 0);
  }
}

static uint16_t lastaddr = LASTADDR_DEFAULT;
void usb_ep_init(uint8_t epnum, uint8_t ep_type, uint16_t size, epfunc_t func){
 8000254:	b5f0      	push	{r4, r5, r6, r7, lr}
  uint8_t dir_in = (epnum & 0x80);
  epnum &= 0x0F;
 8000256:	f000 060f 	and.w	r6, r0, #15
  
  if(dir_in){
 800025a:	00b5      	lsls	r5, r6, #2
 800025c:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 8000260:	f505 45b8 	add.w	r5, r5, #23552	; 0x5c00
    ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 8000264:	882c      	ldrh	r4, [r5, #0]
 8000266:	b240      	sxtb	r0, r0
  if(dir_in){
 8000268:	2800      	cmp	r0, #0
    ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 800026a:	bfb5      	itete	lt
 800026c:	f024 04c0 	biclt.w	r4, r4, #192	; 0xc0
  }else{
    ENDP_STAT_RX(epnum, USB_EP_RX_DIS);
 8000270:	f024 04f0 	bicge.w	r4, r4, #240	; 0xf0
    ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 8000274:	0524      	lsllt	r4, r4, #20
    ENDP_STAT_RX(epnum, USB_EP_RX_DIS);
 8000276:	04a4      	lslge	r4, r4, #18
    ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 8000278:	bfb4      	ite	lt
 800027a:	0d24      	lsrlt	r4, r4, #20
    ENDP_STAT_RX(epnum, USB_EP_RX_DIS);
 800027c:	0ca4      	lsrge	r4, r4, #18
 800027e:	f444 4400 	orr.w	r4, r4, #32768	; 0x8000
 8000282:	f044 0480 	orr.w	r4, r4, #128	; 0x80
 8000286:	802c      	strh	r4, [r5, #0]
  }
  
  uint16_t buf = USB_EPx(epnum);
 8000288:	882c      	ldrh	r4, [r5, #0]
  buf = (buf & ~(USB_EP_DTOG_RX | USB_EP_DTOG_TX | USB_EPTX_STAT | USB_EPRX_STAT)) | USB_EP_CTR_RX | USB_EP_CTR_TX;
  buf = (buf & ~USB_EPADDR_FIELD) | epnum;
  //buf = (buf & ~USB_EP_T_FIELD) | ep_type;
  buf &=~ USB_EP_T_FIELD;
  switch(ep_type){
 800028a:	2902      	cmp	r1, #2
 800028c:	f404 6410 	and.w	r4, r4, #2304	; 0x900
 8000290:	ea44 0406 	orr.w	r4, r4, r6
 8000294:	d005      	beq.n	80002a2 <usb_ep_init+0x4e>
 8000296:	2903      	cmp	r1, #3
 8000298:	d023      	beq.n	80002e2 <usb_ep_init+0x8e>
 800029a:	bb29      	cbnz	r1, 80002e8 <usb_ep_init+0x94>
    case USB_ENDP_CTRL: buf |= USB_EP_CONTROL; break;
 800029c:	f444 4102 	orr.w	r1, r4, #33280	; 0x8200
 80002a0:	e001      	b.n	80002a6 <usb_ep_init+0x52>
  buf &=~ USB_EP_T_FIELD;
 80002a2:	f444 4100 	orr.w	r1, r4, #32768	; 0x8000
    case USB_ENDP_BULK: buf |= USB_EP_BULK; break;
    case USB_ENDP_INTR: buf |= USB_EP_INTERRUPT; break;
    default: buf |= USB_EP_ISOCHRONOUS; //в дескрипторах изохронные точки могут иметь расширенные настройки
 80002a6:	f041 0180 	orr.w	r1, r1, #128	; 0x80
  }
  USB_EPx(epnum) = buf;
 80002aa:	4f22      	ldr	r7, [pc, #136]	; (8000334 <usb_ep_init+0xe0>)
 80002ac:	8029      	strh	r1, [r5, #0]
  
  if( dir_in ){
 80002ae:	0131      	lsls	r1, r6, #4
 80002b0:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 80002b4:	2800      	cmp	r0, #0
 80002b6:	883c      	ldrh	r4, [r7, #0]
 80002b8:	f501 41c0 	add.w	r1, r1, #24576	; 0x6000
 80002bc:	4638      	mov	r0, r7
 80002be:	da16      	bge.n	80002ee <usb_ep_init+0x9a>
    usb_epdata[epnum].usb_tx_addr = lastaddr;
 80002c0:	600c      	str	r4, [r1, #0]
    epfunc_in[epnum] = func;
 80002c2:	491d      	ldr	r1, [pc, #116]	; (8000338 <usb_ep_init+0xe4>)
 80002c4:	f841 3026 	str.w	r3, [r1, r6, lsl #2]
    ENDP_STAT_TX(epnum, USB_EP_TX_NAK);
 80002c8:	882b      	ldrh	r3, [r5, #0]
 80002ca:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 80002ce:	051b      	lsls	r3, r3, #20
 80002d0:	0d1b      	lsrs	r3, r3, #20
 80002d2:	f483 4300 	eor.w	r3, r3, #32768	; 0x8000
 80002d6:	f083 03a0 	eor.w	r3, r3, #160	; 0xa0
      usb_epdata[epnum].rx_num_blocks = size / 32 - 1;
    }
    epfunc_out[epnum] = func;
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
  }
  lastaddr += size;
 80002da:	4422      	add	r2, r4
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
 80002dc:	802b      	strh	r3, [r5, #0]
  lastaddr += size;
 80002de:	8002      	strh	r2, [r0, #0]
}
 80002e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    case USB_ENDP_INTR: buf |= USB_EP_INTERRUPT; break;
 80002e2:	f444 4106 	orr.w	r1, r4, #34304	; 0x8600
 80002e6:	e7de      	b.n	80002a6 <usb_ep_init+0x52>
    default: buf |= USB_EP_ISOCHRONOUS; //в дескрипторах изохронные точки могут иметь расширенные настройки
 80002e8:	f444 4104 	orr.w	r1, r4, #33792	; 0x8400
 80002ec:	e7db      	b.n	80002a6 <usb_ep_init+0x52>
    usb_epdata[epnum].usb_rx_addr = lastaddr;
 80002ee:	608c      	str	r4, [r1, #8]
      usb_epdata[epnum].rx_blocksize = 0;
 80002f0:	898f      	ldrh	r7, [r1, #12]
    if(size < 64){
 80002f2:	2a3f      	cmp	r2, #63	; 0x3f
      usb_epdata[epnum].rx_blocksize = 1;
 80002f4:	bf8b      	itete	hi
 80002f6:	f447 4700 	orrhi.w	r7, r7, #32768	; 0x8000
      usb_epdata[epnum].rx_blocksize = 0;
 80002fa:	f36f 37cf 	bfcls	r7, #15, #1
      usb_epdata[epnum].rx_blocksize = 1;
 80002fe:	818f      	strhhi	r7, [r1, #12]
      usb_epdata[epnum].rx_blocksize = 0;
 8000300:	818f      	strhls	r7, [r1, #12]
      usb_epdata[epnum].rx_num_blocks = size / 32 - 1;
 8000302:	f8b1 c00c 	ldrh.w	ip, [r1, #12]
 8000306:	bf8a      	itet	hi
 8000308:	0957      	lsrhi	r7, r2, #5
      usb_epdata[epnum].rx_num_blocks = size / 2;
 800030a:	f3c2 0744 	ubfxls	r7, r2, #1, #5
      usb_epdata[epnum].rx_num_blocks = size / 32 - 1;
 800030e:	f107 37ff 	addhi.w	r7, r7, #4294967295	; 0xffffffff
 8000312:	f367 2c8e 	bfi	ip, r7, #10, #5
 8000316:	f8a1 c00c 	strh.w	ip, [r1, #12]
    epfunc_out[epnum] = func;
 800031a:	4908      	ldr	r1, [pc, #32]	; (800033c <usb_ep_init+0xe8>)
 800031c:	f841 3026 	str.w	r3, [r1, r6, lsl #2]
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
 8000320:	882b      	ldrh	r3, [r5, #0]
 8000322:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8000326:	049b      	lsls	r3, r3, #18
 8000328:	0c9b      	lsrs	r3, r3, #18
 800032a:	f483 4330 	eor.w	r3, r3, #45056	; 0xb000
 800032e:	f083 0380 	eor.w	r3, r3, #128	; 0x80
 8000332:	e7d2      	b.n	80002da <usb_ep_init+0x86>
 8000334:	20000000 	andcs	r0, r0, r0
 8000338:	20000018 	andcs	r0, r0, r8, lsl r0
 800033c:	20000038 	andcs	r0, r0, r8, lsr r0

08000340 <usb_ep_init_double>:

void usb_ep_init_double(uint8_t epnum, uint8_t ep_type, uint16_t size, epfunc_t func){
 8000340:	b5f0      	push	{r4, r5, r6, r7, lr}
  uint8_t dir_in = (epnum & 0x80);
  epnum &= 0x0F;
  
  ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 8000342:	f248 0780 	movw	r7, #32896	; 0x8080
  epnum &= 0x0F;
 8000346:	f000 060f 	and.w	r6, r0, #15
  ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 800034a:	00b5      	lsls	r5, r6, #2
 800034c:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 8000350:	f505 45b8 	add.w	r5, r5, #23552	; 0x5c00
 8000354:	882c      	ldrh	r4, [r5, #0]
  uint16_t buf = USB_EPx(epnum);
  buf = (buf & ~(USB_EP_DTOG_RX | USB_EP_DTOG_TX | USB_EPTX_STAT | USB_EPRX_STAT)) | USB_EP_CTR_RX | USB_EP_CTR_TX;
  buf = (buf & ~USB_EPADDR_FIELD) | epnum;
  
  buf &=~ USB_EP_T_FIELD;
  switch(ep_type){
 8000356:	2902      	cmp	r1, #2
  ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 8000358:	f024 04c0 	bic.w	r4, r4, #192	; 0xc0
 800035c:	ea4f 5404 	mov.w	r4, r4, lsl #20
 8000360:	ea4f 5414 	mov.w	r4, r4, lsr #20
 8000364:	ea44 0407 	orr.w	r4, r4, r7
 8000368:	802c      	strh	r4, [r5, #0]
  ENDP_STAT_RX(epnum, USB_EP_RX_DIS);
 800036a:	882c      	ldrh	r4, [r5, #0]
 800036c:	f024 04f0 	bic.w	r4, r4, #240	; 0xf0
 8000370:	ea4f 4484 	mov.w	r4, r4, lsl #18
 8000374:	ea4f 4494 	mov.w	r4, r4, lsr #18
 8000378:	ea47 0704 	orr.w	r7, r7, r4
 800037c:	802f      	strh	r7, [r5, #0]
  uint16_t buf = USB_EPx(epnum);
 800037e:	882c      	ldrh	r4, [r5, #0]
  buf &=~ USB_EP_T_FIELD;
 8000380:	f404 6410 	and.w	r4, r4, #2304	; 0x900
 8000384:	ea44 0406 	orr.w	r4, r4, r6
  switch(ep_type){
 8000388:	d02f      	beq.n	80003ea <usb_ep_init_double+0xaa>
 800038a:	2903      	cmp	r1, #3
 800038c:	d030      	beq.n	80003f0 <usb_ep_init_double+0xb0>
 800038e:	bb91      	cbnz	r1, 80003f6 <usb_ep_init_double+0xb6>
    case USB_ENDP_CTRL: buf |= USB_EP_CONTROL; break;
 8000390:	f444 4102 	orr.w	r1, r4, #33280	; 0x8200
 8000394:	f8df c0e0 	ldr.w	ip, [pc, #224]	; 8000478 <usb_ep_init_double+0x138>
    case USB_ENDP_BULK: buf |= USB_EP_BULK | USB_EP_KIND; break;
    case USB_ENDP_INTR: buf |= USB_EP_INTERRUPT; break;
    default: buf |= USB_EP_ISOCHRONOUS; //в дескрипторах изохронные точки могут иметь расширенные настройки
 8000398:	f041 0180 	orr.w	r1, r1, #128	; 0x80
  }
  USB_EPx(epnum) = buf;
 800039c:	8029      	strh	r1, [r5, #0]
  
#define USB_EP_SWBUF_TX     USB_EP_DTOG_RX
#define USB_EP_SWBUF_RX     USB_EP_DTOG_TX
  if( dir_in ){
 800039e:	f8bc 4000 	ldrh.w	r4, [ip]
 80003a2:	0131      	lsls	r1, r6, #4
 80003a4:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 80003a8:	f010 0f80 	tst.w	r0, #128	; 0x80
 80003ac:	f501 41c0 	add.w	r1, r1, #24576	; 0x6000
 80003b0:	eb02 0704 	add.w	r7, r2, r4
 80003b4:	4660      	mov	r0, ip
 80003b6:	d021      	beq.n	80003fc <usb_ep_init_double+0xbc>
    usb_epdata[epnum].usb_tx_addr = lastaddr;
    usb_epdata[epnum].usb_tx_count = 0;
 80003b8:	f04f 0c00 	mov.w	ip, #0
    usb_epdata[epnum].usb_tx_addr = lastaddr;
 80003bc:	600c      	str	r4, [r1, #0]
    usb_epdata[epnum].usb_tx_count = 0;
 80003be:	f8c1 c004 	str.w	ip, [r1, #4]
    usb_epdata[epnum].usb_rx_addr = lastaddr + size;
 80003c2:	608f      	str	r7, [r1, #8]
    usb_epdata[epnum].usb_rx_count = 0;
 80003c4:	f8c1 c00c 	str.w	ip, [r1, #12]
    
    buf = USB_EPx(epnum);
 80003c8:	8829      	ldrh	r1, [r5, #0]
    USB_EPx(epnum) = (buf ^ USB_EP_TX_VALID) & (USB_EPREG_MASK | USB_EPTX_STAT | USB_EP_DTOG_TX | USB_EP_SWBUF_TX);
 80003ca:	f081 0130 	eor.w	r1, r1, #48	; 0x30
 80003ce:	f421 5140 	bic.w	r1, r1, #12288	; 0x3000
 80003d2:	b289      	uxth	r1, r1
      usb_epdata[epnum].rx_blocksize = usb_epdata[epnum].tx_blocksize = 1;
      if(size < 32)size = 32;
      usb_epdata[epnum].rx_num_blocks = usb_epdata[epnum].tx_num_blocks = size / 32 - 1;
    }
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
    ENDP_STAT_TX(epnum, USB_EP_TX_VALID);
 80003d4:	8029      	strh	r1, [r5, #0]
  }
  epfunc_in[epnum] = func;
 80003d6:	4926      	ldr	r1, [pc, #152]	; (8000470 <usb_ep_init_double+0x130>)
  epfunc_out[epnum]= func;
    
  lastaddr += 2*size;
 80003d8:	eb04 0242 	add.w	r2, r4, r2, lsl #1
  epfunc_in[epnum] = func;
 80003dc:	f841 3026 	str.w	r3, [r1, r6, lsl #2]
  epfunc_out[epnum]= func;
 80003e0:	4924      	ldr	r1, [pc, #144]	; (8000474 <usb_ep_init_double+0x134>)
  lastaddr += 2*size;
 80003e2:	8002      	strh	r2, [r0, #0]
  epfunc_out[epnum]= func;
 80003e4:	f841 3026 	str.w	r3, [r1, r6, lsl #2]
}
 80003e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    case USB_ENDP_BULK: buf |= USB_EP_BULK | USB_EP_KIND; break;
 80003ea:	f444 4101 	orr.w	r1, r4, #33024	; 0x8100
 80003ee:	e7d1      	b.n	8000394 <usb_ep_init_double+0x54>
    case USB_ENDP_INTR: buf |= USB_EP_INTERRUPT; break;
 80003f0:	f444 4106 	orr.w	r1, r4, #34304	; 0x8600
 80003f4:	e7ce      	b.n	8000394 <usb_ep_init_double+0x54>
    default: buf |= USB_EP_ISOCHRONOUS; //в дескрипторах изохронные точки могут иметь расширенные настройки
 80003f6:	f444 4104 	orr.w	r1, r4, #33792	; 0x8400
 80003fa:	e7cb      	b.n	8000394 <usb_ep_init_double+0x54>
    usb_epdata[epnum].usb_rx_addr = lastaddr;
 80003fc:	608c      	str	r4, [r1, #8]
    if(size < 64){
 80003fe:	2a3f      	cmp	r2, #63	; 0x3f
    usb_epdata[epnum].usb_tx_addr = lastaddr + size;
 8000400:	600f      	str	r7, [r1, #0]
      usb_epdata[epnum].rx_blocksize = usb_epdata[epnum].tx_blocksize = 0;
 8000402:	888f      	ldrh	r7, [r1, #4]
    if(size < 64){
 8000404:	d828      	bhi.n	8000458 <usb_ep_init_double+0x118>
      usb_epdata[epnum].rx_blocksize = usb_epdata[epnum].tx_blocksize = 0;
 8000406:	f36f 37cf 	bfc	r7, #15, #1
 800040a:	808f      	strh	r7, [r1, #4]
 800040c:	898f      	ldrh	r7, [r1, #12]
 800040e:	f36f 37cf 	bfc	r7, #15, #1
 8000412:	818f      	strh	r7, [r1, #12]
      usb_epdata[epnum].rx_num_blocks = usb_epdata[epnum].tx_num_blocks = size / 2;
 8000414:	f3c2 0744 	ubfx	r7, r2, #1, #5
      usb_epdata[epnum].rx_num_blocks = usb_epdata[epnum].tx_num_blocks = size / 32 - 1;
 8000418:	f8b1 c004 	ldrh.w	ip, [r1, #4]
 800041c:	f367 2c8e 	bfi	ip, r7, #10, #5
 8000420:	f8a1 c004 	strh.w	ip, [r1, #4]
 8000424:	f8b1 c00c 	ldrh.w	ip, [r1, #12]
 8000428:	f367 2c8e 	bfi	ip, r7, #10, #5
 800042c:	f8a1 c00c 	strh.w	ip, [r1, #12]
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
 8000430:	8829      	ldrh	r1, [r5, #0]
 8000432:	f021 01f0 	bic.w	r1, r1, #240	; 0xf0
 8000436:	0489      	lsls	r1, r1, #18
 8000438:	0c89      	lsrs	r1, r1, #18
 800043a:	f481 4130 	eor.w	r1, r1, #45056	; 0xb000
 800043e:	f081 0180 	eor.w	r1, r1, #128	; 0x80
 8000442:	8029      	strh	r1, [r5, #0]
    ENDP_STAT_TX(epnum, USB_EP_TX_VALID);
 8000444:	8829      	ldrh	r1, [r5, #0]
 8000446:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 800044a:	0509      	lsls	r1, r1, #20
 800044c:	0d09      	lsrs	r1, r1, #20
 800044e:	f481 4100 	eor.w	r1, r1, #32768	; 0x8000
 8000452:	f081 01b0 	eor.w	r1, r1, #176	; 0xb0
 8000456:	e7bd      	b.n	80003d4 <usb_ep_init_double+0x94>
      usb_epdata[epnum].rx_blocksize = usb_epdata[epnum].tx_blocksize = 1;
 8000458:	f447 4700 	orr.w	r7, r7, #32768	; 0x8000
 800045c:	808f      	strh	r7, [r1, #4]
 800045e:	898f      	ldrh	r7, [r1, #12]
 8000460:	f447 4700 	orr.w	r7, r7, #32768	; 0x8000
 8000464:	818f      	strh	r7, [r1, #12]
      usb_epdata[epnum].rx_num_blocks = usb_epdata[epnum].tx_num_blocks = size / 32 - 1;
 8000466:	0957      	lsrs	r7, r2, #5
 8000468:	3f01      	subs	r7, #1
 800046a:	f007 071f 	and.w	r7, r7, #31
 800046e:	e7d3      	b.n	8000418 <usb_ep_init_double+0xd8>
 8000470:	20000018 	andcs	r0, r0, r8, lsl r0
 8000474:	20000038 	andcs	r0, r0, r8, lsr r0
 8000478:	20000000 	andcs	r0, r0, r0

0800047c <USB_LP_CAN1_RX0_IRQHandler>:

// standard IRQ handler
void USB_LP_IRQHandler(){
 800047c:	b538      	push	{r3, r4, r5, lr}
  if(USB->ISTR & USB_ISTR_RESET){
 800047e:	4c42      	ldr	r4, [pc, #264]	; (8000588 <USB_LP_CAN1_RX0_IRQHandler+0x10c>)
 8000480:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 8000484:	055d      	lsls	r5, r3, #21
 8000486:	d52c      	bpl.n	80004e2 <USB_LP_CAN1_RX0_IRQHandler+0x66>
    usb_class_disconnect();
 8000488:	f000 fa2e 	bl	80008e8 <usb_class_disconnect>
    USB->CNTR = USB_CNTR_RESETM | USB_CNTR_CTRM | USB_CNTR_SUSPM | USB_CNTR_WKUPM;
 800048c:	f44f 431c 	mov.w	r3, #39936	; 0x9c00
    lastaddr = LASTADDR_DEFAULT;
 8000490:	2240      	movs	r2, #64	; 0x40
    USB->CNTR = USB_CNTR_RESETM | USB_CNTR_CTRM | USB_CNTR_SUSPM | USB_CNTR_WKUPM;
 8000492:	f8a4 3040 	strh.w	r3, [r4, #64]	; 0x40
    lastaddr = LASTADDR_DEFAULT;
 8000496:	4b3d      	ldr	r3, [pc, #244]	; (800058c <USB_LP_CAN1_RX0_IRQHandler+0x110>)
 8000498:	493d      	ldr	r1, [pc, #244]	; (8000590 <USB_LP_CAN1_RX0_IRQHandler+0x114>)
 800049a:	801a      	strh	r2, [r3, #0]
    USB->DADDR = USB_DADDR_EF;
 800049c:	2380      	movs	r3, #128	; 0x80
    for(uint8_t i=0; i<STM32ENDPOINTS; i++){
      epfunc_in[i] = epfunc_out[i] = NULL;
 800049e:	2200      	movs	r2, #0
    USB->DADDR = USB_DADDR_EF;
 80004a0:	f8a4 304c 	strh.w	r3, [r4, #76]	; 0x4c
 80004a4:	2408      	movs	r4, #8
 80004a6:	4b3b      	ldr	r3, [pc, #236]	; (8000594 <USB_LP_CAN1_RX0_IRQHandler+0x118>)
      epfunc_in[i] = epfunc_out[i] = NULL;
 80004a8:	3c01      	subs	r4, #1
    for(uint8_t i=0; i<STM32ENDPOINTS; i++){
 80004aa:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
      epfunc_in[i] = epfunc_out[i] = NULL;
 80004ae:	f841 2b04 	str.w	r2, [r1], #4
 80004b2:	f843 2b04 	str.w	r2, [r3], #4
    for(uint8_t i=0; i<STM32ENDPOINTS; i++){
 80004b6:	d1f7      	bne.n	80004a8 <USB_LP_CAN1_RX0_IRQHandler+0x2c>
    }
    // state is default - wait for enumeration
    USB->ISTR = (uint16_t)~USB_ISTR_RESET;
 80004b8:	f64f 32ff 	movw	r2, #64511	; 0xfbff
 80004bc:	4b32      	ldr	r3, [pc, #200]	; (8000588 <USB_LP_CAN1_RX0_IRQHandler+0x10c>)
    usb_ep_init(0x00, USB_ENDP_CTRL, USB_EP0_BUFSZ, ep0_out);
 80004be:	4621      	mov	r1, r4
    USB->ISTR = (uint16_t)~USB_ISTR_RESET;
 80004c0:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
    usb_ep_init(0x00, USB_ENDP_CTRL, USB_EP0_BUFSZ, ep0_out);
 80004c4:	4620      	mov	r0, r4
 80004c6:	4b34      	ldr	r3, [pc, #208]	; (8000598 <USB_LP_CAN1_RX0_IRQHandler+0x11c>)
 80004c8:	2208      	movs	r2, #8
 80004ca:	f7ff fec3 	bl	8000254 <usb_ep_init>
    usb_ep_init(0x80, USB_ENDP_CTRL, USB_EP0_BUFSZ, ep0_in);
 80004ce:	4b33      	ldr	r3, [pc, #204]	; (800059c <USB_LP_CAN1_RX0_IRQHandler+0x120>)
 80004d0:	2208      	movs	r2, #8
 80004d2:	4621      	mov	r1, r4
 80004d4:	2080      	movs	r0, #128	; 0x80
 80004d6:	f7ff febd 	bl	8000254 <usb_ep_init>
    ep0_buf = NULL;
 80004da:	4b31      	ldr	r3, [pc, #196]	; (80005a0 <USB_LP_CAN1_RX0_IRQHandler+0x124>)
 80004dc:	601c      	str	r4, [r3, #0]
    usb_class_init();
 80004de:	f7ff fe7d 	bl	80001dc <usb_class_init>
  }
  
  if(USB->ISTR & USB_ISTR_CTR){
 80004e2:	4b29      	ldr	r3, [pc, #164]	; (8000588 <USB_LP_CAN1_RX0_IRQHandler+0x10c>)
 80004e4:	f8b3 2044 	ldrh.w	r2, [r3, #68]	; 0x44
 80004e8:	0414      	lsls	r4, r2, #16
 80004ea:	d529      	bpl.n	8000540 <USB_LP_CAN1_RX0_IRQHandler+0xc4>
    uint8_t epnum = USB->ISTR & USB_ISTR_EP_ID;
 80004ec:	f8b3 5044 	ldrh.w	r5, [r3, #68]	; 0x44
 80004f0:	f005 050f 	and.w	r5, r5, #15
    if(USB_EPx(epnum) & USB_EP_CTR_RX){ //OUT
 80004f4:	00ac      	lsls	r4, r5, #2
 80004f6:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
 80004fa:	f504 44b8 	add.w	r4, r4, #23552	; 0x5c00
 80004fe:	8823      	ldrh	r3, [r4, #0]
 8000500:	0418      	lsls	r0, r3, #16
 8000502:	d50c      	bpl.n	800051e <USB_LP_CAN1_RX0_IRQHandler+0xa2>
      epfunc_out[epnum](epnum);
 8000504:	4b22      	ldr	r3, [pc, #136]	; (8000590 <USB_LP_CAN1_RX0_IRQHandler+0x114>)
 8000506:	4628      	mov	r0, r5
 8000508:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 800050c:	4798      	blx	r3
      ENDP_CTR_RX_CLR(epnum);
 800050e:	8823      	ldrh	r3, [r4, #0]
 8000510:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8000514:	051b      	lsls	r3, r3, #20
 8000516:	0d1b      	lsrs	r3, r3, #20
 8000518:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800051c:	8023      	strh	r3, [r4, #0]
    }
    if(USB_EPx(epnum) & USB_EP_CTR_TX){//IN
 800051e:	8823      	ldrh	r3, [r4, #0]
 8000520:	0619      	lsls	r1, r3, #24
 8000522:	d50d      	bpl.n	8000540 <USB_LP_CAN1_RX0_IRQHandler+0xc4>
      epfunc_in[epnum](epnum | 0x80);
 8000524:	4b1b      	ldr	r3, [pc, #108]	; (8000594 <USB_LP_CAN1_RX0_IRQHandler+0x118>)
 8000526:	f045 0080 	orr.w	r0, r5, #128	; 0x80
 800052a:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 800052e:	4798      	blx	r3
      ENDP_CTR_TX_CLR(epnum);
 8000530:	8823      	ldrh	r3, [r4, #0]
 8000532:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8000536:	051b      	lsls	r3, r3, #20
 8000538:	0d1b      	lsrs	r3, r3, #20
 800053a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800053e:	8023      	strh	r3, [r4, #0]
    }
  }
  
  if(USB->ISTR & USB_ISTR_SUSP){ // suspend -> still no connection, may sleep
 8000540:	4c11      	ldr	r4, [pc, #68]	; (8000588 <USB_LP_CAN1_RX0_IRQHandler+0x10c>)
 8000542:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 8000546:	051a      	lsls	r2, r3, #20
 8000548:	d50b      	bpl.n	8000562 <USB_LP_CAN1_RX0_IRQHandler+0xe6>
    usb_class_disconnect();
 800054a:	f000 f9cd 	bl	80008e8 <usb_class_disconnect>
    USB->CNTR |= USB_CNTR_FSUSP | USB_CNTR_LP_MODE;
 800054e:	f8b4 3040 	ldrh.w	r3, [r4, #64]	; 0x40
 8000552:	f043 030c 	orr.w	r3, r3, #12
 8000556:	f8a4 3040 	strh.w	r3, [r4, #64]	; 0x40
    USB->ISTR = (uint16_t)~USB_ISTR_SUSP;
 800055a:	f24f 73ff 	movw	r3, #63487	; 0xf7ff
 800055e:	f8a4 3044 	strh.w	r3, [r4, #68]	; 0x44
  }
  
  if(USB->ISTR & USB_ISTR_WKUP){ // wakeup
 8000562:	4a09      	ldr	r2, [pc, #36]	; (8000588 <USB_LP_CAN1_RX0_IRQHandler+0x10c>)
 8000564:	f8b2 3044 	ldrh.w	r3, [r2, #68]	; 0x44
 8000568:	04db      	lsls	r3, r3, #19
 800056a:	d50b      	bpl.n	8000584 <USB_LP_CAN1_RX0_IRQHandler+0x108>
    USB->CNTR &= ~(USB_CNTR_FSUSP | USB_CNTR_LP_MODE); // clear suspend flags
 800056c:	f8b2 3040 	ldrh.w	r3, [r2, #64]	; 0x40
 8000570:	f023 030c 	bic.w	r3, r3, #12
 8000574:	041b      	lsls	r3, r3, #16
 8000576:	0c1b      	lsrs	r3, r3, #16
 8000578:	f8a2 3040 	strh.w	r3, [r2, #64]	; 0x40
    USB->ISTR = (uint16_t)~USB_ISTR_WKUP;
 800057c:	f64e 73ff 	movw	r3, #61439	; 0xefff
 8000580:	f8a2 3044 	strh.w	r3, [r2, #68]	; 0x44
  }
}
 8000584:	bd38      	pop	{r3, r4, r5, pc}
 8000586:	bf00      	nop
 8000588:	40005c00 	andmi	r5, r0, r0, lsl #24
 800058c:	20000000 	andcs	r0, r0, r0
 8000590:	20000038 	andcs	r0, r0, r8, lsr r0
 8000594:	20000018 	andcs	r0, r0, r8, lsl r0
 8000598:	080006af 	stmdaeq	r0, {r0, r1, r2, r3, r5, r7, r9, sl}
 800059c:	080005f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl}
 80005a0:	20000004 	andcs	r0, r0, r4

080005a4 <_usb_ep_write>:
      uint32_t rx_blocksize:1;
    };
  };
}pma_descr_t;

void _usb_ep_write(uint8_t idx, const uint8_t *buf, uint16_t size){
 80005a4:	b5f0      	push	{r4, r5, r6, r7, lr}
  pma_descr_t *descr = &((pma_descr_t*)usb_epdata)[idx];
  uint16_t N2 = (size + 1) >> 1;
  // the buffer is 16-bit, so we should copy data as it would be uint16_t
  uint16_t *buf16 = (uint16_t *)buf;
  uint32_t *out = (uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
  for(uint16_t i = 0; i < N2; ++i, ++out){
 80005a6:	2500      	movs	r5, #0
  pma_descr_t *descr = &((pma_descr_t*)usb_epdata)[idx];
 80005a8:	00c4      	lsls	r4, r0, #3
 80005aa:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
 80005ae:	f504 44c0 	add.w	r4, r4, #24576	; 0x6000
  uint32_t *out = (uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
 80005b2:	6823      	ldr	r3, [r4, #0]
  uint16_t N2 = (size + 1) >> 1;
 80005b4:	1c56      	adds	r6, r2, #1
  uint32_t *out = (uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
 80005b6:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
 80005ba:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
  uint16_t N2 = (size + 1) >> 1;
 80005be:	0876      	lsrs	r6, r6, #1
  uint32_t *out = (uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
 80005c0:	005b      	lsls	r3, r3, #1
  for(uint16_t i = 0; i < N2; ++i, ++out){
 80005c2:	b2af      	uxth	r7, r5
 80005c4:	42be      	cmp	r6, r7
 80005c6:	d811      	bhi.n	80005ec <_usb_ep_write+0x48>
    *out = buf16[i];
  }
  descr->count = size;
  
  ENDP_STAT_TX((idx/2), USB_EP_TX_VALID);
 80005c8:	0840      	lsrs	r0, r0, #1
 80005ca:	0080      	lsls	r0, r0, #2
 80005cc:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
  descr->count = size;
 80005d0:	6062      	str	r2, [r4, #4]
  ENDP_STAT_TX((idx/2), USB_EP_TX_VALID);
 80005d2:	f500 40b8 	add.w	r0, r0, #23552	; 0x5c00
 80005d6:	8803      	ldrh	r3, [r0, #0]
 80005d8:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 80005dc:	051b      	lsls	r3, r3, #20
 80005de:	0d1b      	lsrs	r3, r3, #20
 80005e0:	f483 4300 	eor.w	r3, r3, #32768	; 0x8000
 80005e4:	f083 03b0 	eor.w	r3, r3, #176	; 0xb0
 80005e8:	8003      	strh	r3, [r0, #0]
}
 80005ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
    *out = buf16[i];
 80005ec:	f831 7015 	ldrh.w	r7, [r1, r5, lsl #1]
 80005f0:	f843 7025 	str.w	r7, [r3, r5, lsl #2]
 80005f4:	3501      	adds	r5, #1
 80005f6:	e7e4      	b.n	80005c2 <_usb_ep_write+0x1e>

080005f8 <ep0_in>:
static void ep0_in(uint8_t epnum){
 80005f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if( (USB->DADDR & USB_DADDR_ADD) != USB_Addr ){
 80005fa:	4b14      	ldr	r3, [pc, #80]	; (800064c <ep0_in+0x54>)
 80005fc:	4c14      	ldr	r4, [pc, #80]	; (8000650 <ep0_in+0x58>)
 80005fe:	f8b3 104c 	ldrh.w	r1, [r3, #76]	; 0x4c
 8000602:	7922      	ldrb	r2, [r4, #4]
 8000604:	f001 017f 	and.w	r1, r1, #127	; 0x7f
 8000608:	4291      	cmp	r1, r2
    USB->DADDR = USB_DADDR_EF | USB_Addr;
 800060a:	bf1c      	itt	ne
 800060c:	f042 0280 	orrne.w	r2, r2, #128	; 0x80
 8000610:	f8a3 204c 	strhne.w	r2, [r3, #76]	; 0x4c
  if( (USB_EPx(0) & USB_EPTX_STAT) == USB_EP_TX_VALID )return;
 8000614:	881b      	ldrh	r3, [r3, #0]
 8000616:	f003 0330 	and.w	r3, r3, #48	; 0x30
 800061a:	2b30      	cmp	r3, #48	; 0x30
 800061c:	d014      	beq.n	8000648 <ep0_in+0x50>
  if(ep0_buf == NULL)return;
 800061e:	6825      	ldr	r5, [r4, #0]
 8000620:	b195      	cbz	r5, 8000648 <ep0_in+0x50>
  uint16_t left = ep0_count;
 8000622:	88e7      	ldrh	r7, [r4, #6]
#endif
#define ENDP_TOG(num, tog) do{USB_EPx(num) = ((USB_EPx(num) & ~(USB_EP_DTOG_RX | USB_EP_DTOG_TX | USB_EPRX_STAT | USB_EPTX_STAT)) | USB_EP_CTR_RX | USB_EP_CTR_TX) | tog; }while(0)

void _usb_ep_write(uint8_t idx, const uint8_t *buf, uint16_t size);
static inline void usb_ep_write(uint8_t epnum, const uint8_t *buf, uint16_t size){
  _usb_ep_write((epnum & 0x0F)*2, buf, size);
 8000624:	4629      	mov	r1, r5
 8000626:	2f08      	cmp	r7, #8
 8000628:	463e      	mov	r6, r7
 800062a:	bf28      	it	cs
 800062c:	2608      	movcs	r6, #8
 800062e:	2000      	movs	r0, #0
 8000630:	4632      	mov	r2, r6
 8000632:	f7ff ffb7 	bl	80005a4 <_usb_ep_write>
  if(left < USB_EP0_BUFSZ){
 8000636:	2f07      	cmp	r7, #7
  ep0_count -= left;
 8000638:	eba7 0306 	sub.w	r3, r7, r6
 800063c:	80e3      	strh	r3, [r4, #6]
    ep0_buf = NULL;
 800063e:	bf93      	iteet	ls
 8000640:	2300      	movls	r3, #0
  ep0_buf += left;
 8000642:	19ad      	addhi	r5, r5, r6
 8000644:	6025      	strhi	r5, [r4, #0]
    ep0_buf = NULL;
 8000646:	6023      	strls	r3, [r4, #0]
}
 8000648:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800064a:	bf00      	nop
 800064c:	40005c00 	andmi	r5, r0, r0, lsl #24
 8000650:	20000004 	andcs	r0, r0, r4

08000654 <_usb_ep_read>:

int _usb_ep_read(uint8_t idx, uint16_t *buf){
 8000654:	b530      	push	{r4, r5, lr}
  pma_descr_t *descr = &((pma_descr_t*)usb_epdata)[idx];
 8000656:	00c2      	lsls	r2, r0, #3
 8000658:	f102 4280 	add.w	r2, r2, #1073741824	; 0x40000000
 800065c:	f502 42c0 	add.w	r2, r2, #24576	; 0x6000
int _usb_ep_read(uint8_t idx, uint16_t *buf){
 8000660:	4603      	mov	r3, r0
  int sz = descr->rx_count;
 8000662:	6850      	ldr	r0, [r2, #4]
 8000664:	f3c0 0009 	ubfx	r0, r0, #0, #10
  if(!sz) return 0;
 8000668:	b300      	cbz	r0, 80006ac <_usb_ep_read+0x58>
  int n = (sz + 1) >> 1;
  uint32_t *in = (uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
 800066a:	6812      	ldr	r2, [r2, #0]
  int n = (sz + 1) >> 1;
 800066c:	1c44      	adds	r4, r0, #1
  uint32_t *in = (uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
 800066e:	f102 5200 	add.w	r2, r2, #536870912	; 0x20000000
 8000672:	f502 5240 	add.w	r2, r2, #12288	; 0x3000
 8000676:	0052      	lsls	r2, r2, #1
  int n = (sz + 1) >> 1;
 8000678:	1064      	asrs	r4, r4, #1
 800067a:	3902      	subs	r1, #2
 800067c:	eb02 0484 	add.w	r4, r2, r4, lsl #2
  for(int i = 0; i < n; ++i, ++in)
    buf[i] = *(uint16_t*)in;
 8000680:	f832 5b04 	ldrh.w	r5, [r2], #4
  for(int i = 0; i < n; ++i, ++in)
 8000684:	42a2      	cmp	r2, r4
    buf[i] = *(uint16_t*)in;
 8000686:	f821 5f02 	strh.w	r5, [r1, #2]!
  for(int i = 0; i < n; ++i, ++in)
 800068a:	d1f9      	bne.n	8000680 <_usb_ep_read+0x2c>
  
  ENDP_STAT_RX((idx/2), USB_EP_RX_VALID);
 800068c:	085b      	lsrs	r3, r3, #1
 800068e:	009b      	lsls	r3, r3, #2
 8000690:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8000694:	f503 43b8 	add.w	r3, r3, #23552	; 0x5c00
 8000698:	881a      	ldrh	r2, [r3, #0]
 800069a:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800069e:	0492      	lsls	r2, r2, #18
 80006a0:	0c92      	lsrs	r2, r2, #18
 80006a2:	f482 4230 	eor.w	r2, r2, #45056	; 0xb000
 80006a6:	f082 0280 	eor.w	r2, r2, #128	; 0x80
 80006aa:	801a      	strh	r2, [r3, #0]
  return sz;
}
 80006ac:	bd30      	pop	{r4, r5, pc}

080006ae <ep0_out>:
static void ep0_out(uint8_t epnum){
 80006ae:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint16_t rxcount = usb_epdata[0].rx_count;
 80006b0:	4b3f      	ldr	r3, [pc, #252]	; (80007b0 <ep0_out+0x102>)
 80006b2:	4c40      	ldr	r4, [pc, #256]	; (80007b4 <ep0_out+0x106>)
 80006b4:	68dd      	ldr	r5, [r3, #12]
  uint8_t setup = !!(USB_EPx(0) & USB_EP_SETUP);
 80006b6:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 80006ba:	881b      	ldrh	r3, [r3, #0]
  uint16_t rxcount = usb_epdata[0].rx_count;
 80006bc:	f3c5 0509 	ubfx	r5, r5, #0, #10
  if( setup ){
 80006c0:	f413 6600 	ands.w	r6, r3, #2048	; 0x800
 80006c4:	d009      	beq.n	80006da <ep0_out+0x2c>
    if( setup_packet.bmRequestType & 0x80 ){ //предыдущий пакет=IN, этот точно будет запросом
 80006c6:	f994 3008 	ldrsb.w	r3, [r4, #8]
 80006ca:	2b00      	cmp	r3, #0
 80006cc:	da17      	bge.n	80006fe <ep0_out+0x50>
      bytesread = 0;
 80006ce:	2500      	movs	r5, #0
  _usb_ep_write(idx, buf, size);
}

int _usb_ep_read(uint8_t idx, uint16_t *buf);
static inline int usb_ep_read(uint8_t epnum, uint16_t *buf){
  return _usb_ep_read((epnum & 0x0F)*2 + 1, buf);
 80006d0:	4939      	ldr	r1, [pc, #228]	; (80007b8 <ep0_out+0x10a>)
 80006d2:	2001      	movs	r0, #1
 80006d4:	f7ff ffbe 	bl	8000654 <_usb_ep_read>
 80006d8:	8225      	strh	r5, [r4, #16]
  uint8_t req = setup_packet.bmRequestType & 0x7F;
 80006da:	7a22      	ldrb	r2, [r4, #8]
 80006dc:	f002 037f 	and.w	r3, r2, #127	; 0x7f
  if(setup_packet.bmRequestType & 0x80){
 80006e0:	0612      	lsls	r2, r2, #24
 80006e2:	d53c      	bpl.n	800075e <ep0_out+0xb0>
    if( !setup )return; //какой-то костыль. Иначе вызывается два раза
 80006e4:	b34e      	cbz	r6, 800073a <ep0_out+0x8c>
    if(req == (USB_REQ_STANDARD | USB_REQ_DEVICE)){
 80006e6:	bb73      	cbnz	r3, 8000746 <ep0_out+0x98>
      switch(setup_packet.bRequest){
 80006e8:	7a60      	ldrb	r0, [r4, #9]
 80006ea:	2806      	cmp	r0, #6
 80006ec:	d00c      	beq.n	8000708 <ep0_out+0x5a>
 80006ee:	2808      	cmp	r0, #8
 80006f0:	d025      	beq.n	800073e <ep0_out+0x90>
 80006f2:	bb40      	cbnz	r0, 8000746 <ep0_out+0x98>
  _usb_ep_write((epnum & 0x0F)*2, buf, size);
 80006f4:	2202      	movs	r2, #2
 80006f6:	4931      	ldr	r1, [pc, #196]	; (80007bc <ep0_out+0x10e>)
 80006f8:	f7ff ff54 	bl	80005a4 <_usb_ep_write>
 80006fc:	e01d      	b.n	800073a <ep0_out+0x8c>
      if( bytesread >= setup_packet.wLength ){
 80006fe:	89e2      	ldrh	r2, [r4, #14]
 8000700:	8a23      	ldrh	r3, [r4, #16]
 8000702:	429a      	cmp	r2, r3
 8000704:	d8e9      	bhi.n	80006da <ep0_out+0x2c>
 8000706:	e7e2      	b.n	80006ce <ep0_out+0x20>
          const void *data = ZLPP;
 8000708:	2201      	movs	r2, #1
          usb_class_get_std_descr(setup_packet.wValue, &data, &size);
 800070a:	a901      	add	r1, sp, #4
          const void *data = ZLPP;
 800070c:	9201      	str	r2, [sp, #4]
          usb_class_get_std_descr(setup_packet.wValue, &data, &size);
 800070e:	8960      	ldrh	r0, [r4, #10]
 8000710:	f10d 0202 	add.w	r2, sp, #2
          uint16_t size = 0;
 8000714:	f8ad 3002 	strh.w	r3, [sp, #2]
          usb_class_get_std_descr(setup_packet.wValue, &data, &size);
 8000718:	f000 f856 	bl	80007c8 <usb_class_get_std_descr>
    if(setup_packet.wLength < size) size = setup_packet.wLength;
 800071c:	89e3      	ldrh	r3, [r4, #14]
 800071e:	f8bd 2002 	ldrh.w	r2, [sp, #2]
  ep0_in(0x80);
 8000722:	2080      	movs	r0, #128	; 0x80
    if(setup_packet.wLength < size) size = setup_packet.wLength;
 8000724:	429a      	cmp	r2, r3
 8000726:	bf88      	it	hi
 8000728:	f8ad 3002 	strhhi.w	r3, [sp, #2]
  ep0_count = size;
 800072c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000730:	80e3      	strh	r3, [r4, #6]
  ep0_buf = buf;
 8000732:	9b01      	ldr	r3, [sp, #4]
 8000734:	6023      	str	r3, [r4, #0]
  ep0_in(0x80);
 8000736:	f7ff ff5f 	bl	80005f8 <ep0_in>
}
 800073a:	b002      	add	sp, #8
 800073c:	bd70      	pop	{r4, r5, r6, pc}
 800073e:	2201      	movs	r2, #1
 8000740:	491f      	ldr	r1, [pc, #124]	; (80007c0 <ep0_out+0x112>)
 8000742:	4618      	mov	r0, r3
 8000744:	e7d8      	b.n	80006f8 <ep0_out+0x4a>
    void *data = ZLPP;
 8000746:	2301      	movs	r3, #1
 8000748:	9301      	str	r3, [sp, #4]
    uint16_t size = 0;
 800074a:	2300      	movs	r3, #0
    usb_class_ep0_in( &setup_packet, &data, &size );
 800074c:	f10d 0202 	add.w	r2, sp, #2
 8000750:	a901      	add	r1, sp, #4
 8000752:	4819      	ldr	r0, [pc, #100]	; (80007b8 <ep0_out+0x10a>)
    uint16_t size = 0;
 8000754:	f8ad 3002 	strh.w	r3, [sp, #2]
    usb_class_ep0_in( &setup_packet, &data, &size );
 8000758:	f000 f874 	bl	8000844 <usb_class_ep0_in>
 800075c:	e7de      	b.n	800071c <ep0_out+0x6e>
    if(req == (USB_REQ_STANDARD | USB_REQ_DEVICE)){
 800075e:	b96b      	cbnz	r3, 800077c <ep0_out+0xce>
      if(setup_packet.bRequest == SET_ADDRESS){
 8000760:	7a62      	ldrb	r2, [r4, #9]
 8000762:	2a05      	cmp	r2, #5
 8000764:	d105      	bne.n	8000772 <ep0_out+0xc4>
        USB_Addr = setup_packet.wValue;
 8000766:	8962      	ldrh	r2, [r4, #10]
 8000768:	7122      	strb	r2, [r4, #4]
 800076a:	2200      	movs	r2, #0
 800076c:	4611      	mov	r1, r2
 800076e:	4610      	mov	r0, r2
 8000770:	e7c2      	b.n	80006f8 <ep0_out+0x4a>
      }else if(setup_packet.bRequest == SET_CONFIGURATION){
 8000772:	2a09      	cmp	r2, #9
 8000774:	d102      	bne.n	800077c <ep0_out+0xce>
        configuration = setup_packet.wValue;
 8000776:	8962      	ldrh	r2, [r4, #10]
 8000778:	74a2      	strb	r2, [r4, #18]
 800077a:	e7f6      	b.n	800076a <ep0_out+0xbc>
    if(!usb_class_ep0_out( &setup_packet, bytesread, rxcount )){
 800077c:	462a      	mov	r2, r5
 800077e:	8a21      	ldrh	r1, [r4, #16]
 8000780:	480d      	ldr	r0, [pc, #52]	; (80007b8 <ep0_out+0x10a>)
 8000782:	f000 f891 	bl	80008a8 <usb_class_ep0_out>
 8000786:	b950      	cbnz	r0, 800079e <ep0_out+0xf0>
      ENDP_STAT_RX(0, USB_EP_RX_VALID);
 8000788:	4a0e      	ldr	r2, [pc, #56]	; (80007c4 <ep0_out+0x116>)
 800078a:	8813      	ldrh	r3, [r2, #0]
 800078c:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8000790:	049b      	lsls	r3, r3, #18
 8000792:	0c9b      	lsrs	r3, r3, #18
 8000794:	f483 4330 	eor.w	r3, r3, #45056	; 0xb000
 8000798:	f083 0380 	eor.w	r3, r3, #128	; 0x80
 800079c:	8013      	strh	r3, [r2, #0]
    bytesread += rxcount;
 800079e:	8a23      	ldrh	r3, [r4, #16]
 80007a0:	441d      	add	r5, r3
    if( bytesread >= setup_packet.wLength )usb_ep_write(0, NULL, 0);
 80007a2:	89e3      	ldrh	r3, [r4, #14]
    bytesread += rxcount;
 80007a4:	b2ad      	uxth	r5, r5
    if( bytesread >= setup_packet.wLength )usb_ep_write(0, NULL, 0);
 80007a6:	42ab      	cmp	r3, r5
    bytesread += rxcount;
 80007a8:	8225      	strh	r5, [r4, #16]
    if( bytesread >= setup_packet.wLength )usb_ep_write(0, NULL, 0);
 80007aa:	d8c6      	bhi.n	800073a <ep0_out+0x8c>
 80007ac:	e7dd      	b.n	800076a <ep0_out+0xbc>
 80007ae:	bf00      	nop
 80007b0:	40006000 	andmi	r6, r0, r0
 80007b4:	20000004 	andcs	r0, r0, r4
 80007b8:	2000000c 	andcs	r0, r0, ip
 80007bc:	080009c0 	stmdaeq	r0, {r6, r7, r8, fp}
 80007c0:	20000016 	andcs	r0, r0, r6, lsl r0
 80007c4:	40005c00 	andmi	r5, r0, r0, lsl #24

080007c8 <usb_class_get_std_descr>:
USB_STRING(USB_StringManufacturingDescriptor, u"COKPOWEHEU"); //Vendor
USB_STRING(USB_StringProdDescriptor, u"USB test"); //Product
USB_STRING(USB_StringSerialDescriptor, u"1"); //Serial (BCD)

void usb_class_get_std_descr(uint16_t descr, const void **data, uint16_t *size){
  switch(descr & 0xFF00){
 80007c8:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 80007cc:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80007d0:	d010      	beq.n	80007f4 <usb_class_get_std_descr+0x2c>
 80007d2:	d803      	bhi.n	80007dc <usb_class_get_std_descr+0x14>
 80007d4:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80007d8:	d007      	beq.n	80007ea <usb_class_get_std_descr+0x22>
 80007da:	4770      	bx	lr
 80007dc:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80007e0:	d010      	beq.n	8000804 <usb_class_get_std_descr+0x3c>
 80007e2:	f5b3 6fc0 	cmp.w	r3, #1536	; 0x600
 80007e6:	d009      	beq.n	80007fc <usb_class_get_std_descr+0x34>
 80007e8:	4770      	bx	lr
    case DEVICE_DESCRIPTOR:
      *data = &USB_DeviceDescriptor;
 80007ea:	4b0f      	ldr	r3, [pc, #60]	; (8000828 <usb_class_get_std_descr+0x60>)
 80007ec:	600b      	str	r3, [r1, #0]
      *size = sizeof(USB_DeviceDescriptor);
 80007ee:	2312      	movs	r3, #18
          *data = &USB_StringSerialDescriptor;
          break;
        default:
          return;
      }
      *size = ((uint8_t*)*data)[0]; //data->bLength
 80007f0:	8013      	strh	r3, [r2, #0]
      break;
    default:
      break;
  }
}
 80007f2:	4770      	bx	lr
      *data = &USB_ConfigDescriptor;
 80007f4:	4b0d      	ldr	r3, [pc, #52]	; (800082c <usb_class_get_std_descr+0x64>)
 80007f6:	600b      	str	r3, [r1, #0]
      *size = sizeof(USB_ConfigDescriptor);
 80007f8:	231b      	movs	r3, #27
 80007fa:	e7f9      	b.n	80007f0 <usb_class_get_std_descr+0x28>
      *data = &USB_DeviceQualifierDescriptor;
 80007fc:	4b0c      	ldr	r3, [pc, #48]	; (8000830 <usb_class_get_std_descr+0x68>)
 80007fe:	600b      	str	r3, [r1, #0]
      *size = USB_DeviceQualifierDescriptor[0];
 8000800:	230a      	movs	r3, #10
 8000802:	e7f5      	b.n	80007f0 <usb_class_get_std_descr+0x28>
      switch(descr & 0xFF){
 8000804:	b2c0      	uxtb	r0, r0
 8000806:	2803      	cmp	r0, #3
 8000808:	d8f3      	bhi.n	80007f2 <usb_class_get_std_descr+0x2a>
 800080a:	e8df f000 	tbb	[pc, r0]
 800080e:	0b090702 	bleq	824241e <_etext+0x2419de>
          *data = &USB_StringLangDescriptor;
 8000812:	4b08      	ldr	r3, [pc, #32]	; (8000834 <usb_class_get_std_descr+0x6c>)
          *data = &USB_StringSerialDescriptor;
 8000814:	600b      	str	r3, [r1, #0]
      *size = ((uint8_t*)*data)[0]; //data->bLength
 8000816:	680b      	ldr	r3, [r1, #0]
 8000818:	781b      	ldrb	r3, [r3, #0]
 800081a:	e7e9      	b.n	80007f0 <usb_class_get_std_descr+0x28>
          *data = &USB_StringManufacturingDescriptor;
 800081c:	4b06      	ldr	r3, [pc, #24]	; (8000838 <usb_class_get_std_descr+0x70>)
 800081e:	e7f9      	b.n	8000814 <usb_class_get_std_descr+0x4c>
          *data = &USB_StringProdDescriptor;
 8000820:	4b06      	ldr	r3, [pc, #24]	; (800083c <usb_class_get_std_descr+0x74>)
 8000822:	e7f7      	b.n	8000814 <usb_class_get_std_descr+0x4c>
          *data = &USB_StringSerialDescriptor;
 8000824:	4b06      	ldr	r3, [pc, #24]	; (8000840 <usb_class_get_std_descr+0x78>)
 8000826:	e7f5      	b.n	8000814 <usb_class_get_std_descr+0x4c>
 8000828:	080009c2 	stmdaeq	r0, {r1, r6, r7, r8, fp}
 800082c:	080009d4 	stmdaeq	r0, {r2, r4, r6, r7, r8, fp}
 8000830:	080009ef 	stmdaeq	r0, {r0, r1, r2, r3, r5, r6, r7, r8, fp}
 8000834:	080009fa 	stmdaeq	r0, {r1, r3, r4, r5, r6, r7, r8, fp}
 8000838:	080009fe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, r8, fp}
 800083c:	08000a14 	stmdaeq	r0, {r2, r4, r9, fp}
 8000840:	08000a26 	stmdaeq	r0, {r1, r2, r5, r9, fp}

08000844 <usb_class_ep0_in>:

char usb_class_ep0_in(config_pack_t *req, void **data, uint16_t *size){
 8000844:	b530      	push	{r4, r5, lr}
  if( req->bmRequestType == (USB_REQ_INTERFACE | 0x80) ){
 8000846:	7803      	ldrb	r3, [r0, #0]
 8000848:	2b81      	cmp	r3, #129	; 0x81
 800084a:	d10c      	bne.n	8000866 <usb_class_ep0_in+0x22>
    if( req->bRequest == GET_DESCRIPTOR ){
 800084c:	7843      	ldrb	r3, [r0, #1]
 800084e:	2b06      	cmp	r3, #6
 8000850:	d11f      	bne.n	8000892 <usb_class_ep0_in+0x4e>
      if( req->wValue == HID_REPORT_DESCRIPTOR){
 8000852:	8843      	ldrh	r3, [r0, #2]
 8000854:	f5b3 5f08 	cmp.w	r3, #8704	; 0x2200
 8000858:	d11b      	bne.n	8000892 <usb_class_ep0_in+0x4e>
        *data = (void**)&USB_HIDDescriptor;
 800085a:	4b0f      	ldr	r3, [pc, #60]	; (8000898 <usb_class_ep0_in+0x54>)
        *size = sizeof(USB_HIDDescriptor);
        return 1;
 800085c:	2001      	movs	r0, #1
        *data = (void**)&USB_HIDDescriptor;
 800085e:	600b      	str	r3, [r1, #0]
        *size = sizeof(USB_HIDDescriptor);
 8000860:	2316      	movs	r3, #22
 8000862:	8013      	strh	r3, [r2, #0]
      *size = sizeof(hid_data);
      return 1;
    }
  }
  return 0;
}
 8000864:	bd30      	pop	{r4, r5, pc}
  if( req->bmRequestType == (USB_REQ_CLASS | USB_REQ_INTERFACE | 0x80) ){
 8000866:	2ba1      	cmp	r3, #161	; 0xa1
 8000868:	d113      	bne.n	8000892 <usb_class_ep0_in+0x4e>
    if( req->bRequest == HIDREQ_GET_REPORT ){
 800086a:	7840      	ldrb	r0, [r0, #1]
 800086c:	2801      	cmp	r0, #1
 800086e:	d110      	bne.n	8000892 <usb_class_ep0_in+0x4e>
      if(GPI_ON(BTN2))hid_data.rled = 1; else hid_data.rled = 0;
 8000870:	4b0a      	ldr	r3, [pc, #40]	; (800089c <usb_class_ep0_in+0x58>)
 8000872:	4c0b      	ldr	r4, [pc, #44]	; (80008a0 <usb_class_ep0_in+0x5c>)
 8000874:	689b      	ldr	r3, [r3, #8]
      hid_data.gled = num;
 8000876:	4d0b      	ldr	r5, [pc, #44]	; (80008a4 <usb_class_ep0_in+0x60>)
      if(GPI_ON(BTN2))hid_data.rled = 1; else hid_data.rled = 0;
 8000878:	f483 7300 	eor.w	r3, r3, #512	; 0x200
 800087c:	f3c3 2340 	ubfx	r3, r3, #9, #1
 8000880:	7023      	strb	r3, [r4, #0]
      hid_data.gled = num;
 8000882:	782b      	ldrb	r3, [r5, #0]
 8000884:	7063      	strb	r3, [r4, #1]
      num++;
 8000886:	3301      	adds	r3, #1
 8000888:	702b      	strb	r3, [r5, #0]
      *size = sizeof(hid_data);
 800088a:	2302      	movs	r3, #2
      *data = &hid_data;
 800088c:	600c      	str	r4, [r1, #0]
      *size = sizeof(hid_data);
 800088e:	8013      	strh	r3, [r2, #0]
      return 1;
 8000890:	e7e8      	b.n	8000864 <usb_class_ep0_in+0x20>
  return 0;
 8000892:	2000      	movs	r0, #0
 8000894:	e7e6      	b.n	8000864 <usb_class_ep0_in+0x20>
 8000896:	bf00      	nop
 8000898:	08000a2a 	stmdaeq	r0, {r1, r3, r5, r9, fp}
 800089c:	40010800 	andmi	r0, r1, r0, lsl #16
 80008a0:	20000058 	andcs	r0, r0, r8, asr r0
 80008a4:	20000017 	andcs	r0, r0, r7, lsl r0

080008a8 <usb_class_ep0_out>:

char usb_class_ep0_out(config_pack_t *req, uint16_t offset, uint16_t rx_size){
 80008a8:	b510      	push	{r4, lr}
  if(rx_size == 0)return 1; //прочитан только запрос - не интересно
 80008aa:	b17a      	cbz	r2, 80008cc <usb_class_ep0_out+0x24>
  //анализом запроса не заморачиваемя. Считаем, что ничего кроме нужного не придет
  if(rx_size != sizeof(hid_data))return 0; //защита если вдруг придет мусор
 80008ac:	2a02      	cmp	r2, #2
 80008ae:	d115      	bne.n	80008dc <usb_class_ep0_out+0x34>
  return _usb_ep_read((epnum & 0x0F)*2 + 1, buf);
 80008b0:	4c0b      	ldr	r4, [pc, #44]	; (80008e0 <usb_class_ep0_out+0x38>)
 80008b2:	2001      	movs	r0, #1
 80008b4:	4621      	mov	r1, r4
 80008b6:	f7ff fecd 	bl	8000654 <_usb_ep_read>
  usb_ep_read(0, (void*)&hid_data);
  
  if(hid_data.rled)GPO_ON(RLED); else GPO_OFF(RLED);
 80008ba:	7822      	ldrb	r2, [r4, #0]
 80008bc:	4b09      	ldr	r3, [pc, #36]	; (80008e4 <usb_class_ep0_out+0x3c>)
 80008be:	b13a      	cbz	r2, 80008d0 <usb_class_ep0_out+0x28>
 80008c0:	2280      	movs	r2, #128	; 0x80
 80008c2:	611a      	str	r2, [r3, #16]
  if(hid_data.gled)GPO_ON(GLED); else GPO_OFF(GLED);
 80008c4:	7862      	ldrb	r2, [r4, #1]
 80008c6:	b132      	cbz	r2, 80008d6 <usb_class_ep0_out+0x2e>
 80008c8:	2240      	movs	r2, #64	; 0x40
 80008ca:	611a      	str	r2, [r3, #16]
  if(rx_size == 0)return 1; //прочитан только запрос - не интересно
 80008cc:	2001      	movs	r0, #1
  
  return 1;
}
 80008ce:	bd10      	pop	{r4, pc}
  if(hid_data.rled)GPO_ON(RLED); else GPO_OFF(RLED);
 80008d0:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
 80008d4:	e7f5      	b.n	80008c2 <usb_class_ep0_out+0x1a>
  if(hid_data.gled)GPO_ON(GLED); else GPO_OFF(GLED);
 80008d6:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
 80008da:	e7f6      	b.n	80008ca <usb_class_ep0_out+0x22>
  if(rx_size != sizeof(hid_data))return 0; //защита если вдруг придет мусор
 80008dc:	2000      	movs	r0, #0
 80008de:	e7f6      	b.n	80008ce <usb_class_ep0_out+0x26>
 80008e0:	20000058 	andcs	r0, r0, r8, asr r0
 80008e4:	40010c00 	andmi	r0, r1, r0, lsl #24

080008e8 <usb_class_disconnect>:

void usb_class_disconnect(){
  GPO_OFF(GLED);
 80008e8:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
 80008ec:	4b02      	ldr	r3, [pc, #8]	; (80008f8 <usb_class_disconnect+0x10>)
 80008ee:	611a      	str	r2, [r3, #16]
  GPO_OFF(RLED);
 80008f0:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
 80008f4:	611a      	str	r2, [r3, #16]
}
 80008f6:	4770      	bx	lr
 80008f8:	40010c00 	andmi	r0, r1, r0, lsl #24

080008fc <Reset_Handler>:
 80008fc:	2100      	movs	r1, #0
 80008fe:	e003      	b.n	8000908 <LoopCopyDataInit>

08000900 <CopyDataInit>:
 8000900:	4b0a      	ldr	r3, [pc, #40]	; (800092c <LoopFillZerobss+0x10>)
 8000902:	585b      	ldr	r3, [r3, r1]
 8000904:	5043      	str	r3, [r0, r1]
 8000906:	3104      	adds	r1, #4

08000908 <LoopCopyDataInit>:
 8000908:	4809      	ldr	r0, [pc, #36]	; (8000930 <LoopFillZerobss+0x14>)
 800090a:	4b0a      	ldr	r3, [pc, #40]	; (8000934 <LoopFillZerobss+0x18>)
 800090c:	1842      	adds	r2, r0, r1
 800090e:	429a      	cmp	r2, r3
 8000910:	d3f6      	bcc.n	8000900 <CopyDataInit>
 8000912:	4a09      	ldr	r2, [pc, #36]	; (8000938 <LoopFillZerobss+0x1c>)
 8000914:	e002      	b.n	800091c <LoopFillZerobss>

08000916 <FillZerobss>:
 8000916:	2300      	movs	r3, #0
 8000918:	f842 3b04 	str.w	r3, [r2], #4

0800091c <LoopFillZerobss>:
 800091c:	4b07      	ldr	r3, [pc, #28]	; (800093c <LoopFillZerobss+0x20>)
 800091e:	429a      	cmp	r2, r3
 8000920:	d3f9      	bcc.n	8000916 <FillZerobss>
 8000922:	f7ff fc54 	bl	80001ce <SystemInit>
 8000926:	f000 f80d 	bl	8000944 <main>
 800092a:	4770      	bx	lr
 800092c:	08000a40 	stmdaeq	r0, {r6, r9, fp}
 8000930:	20000000 	andcs	r0, r0, r0
 8000934:	20000004 	andcs	r0, r0, r4
 8000938:	20000004 	andcs	r0, r0, r4
 800093c:	2000005c 	andcs	r0, r0, ip, asr r0

08000940 <ADC1_2_IRQHandler>:
 8000940:	e7fe      	b.n	8000940 <ADC1_2_IRQHandler>
	...

08000944 <main>:

int main(void){
 8000944:	b538      	push	{r3, r4, r5, lr}
  SysClockMax();
 8000946:	f7ff fbeb 	bl	8000120 <SysClockMax>
  RCC->APB2ENR |= RCC_APB2ENR_IOPBEN | RCC_APB2ENR_IOPAEN;
 800094a:	4a1a      	ldr	r2, [pc, #104]	; (80009b4 <main+0x70>)

  GPIO_config(RLED); GPIO_config(GLED); GPIO_config(YLED);
 800094c:	4c1a      	ldr	r4, [pc, #104]	; (80009b8 <main+0x74>)
  RCC->APB2ENR |= RCC_APB2ENR_IOPBEN | RCC_APB2ENR_IOPAEN;
 800094e:	6993      	ldr	r3, [r2, #24]
 8000950:	f043 030c 	orr.w	r3, r3, #12
 8000954:	6193      	str	r3, [r2, #24]
  GPIO_config(RLED); GPIO_config(GLED); GPIO_config(YLED);
 8000956:	6823      	ldr	r3, [r4, #0]
  GPIO_config(BTN1); GPIO_config(BTN2);
 8000958:	f5a2 3284 	sub.w	r2, r2, #67584	; 0x10800
  GPIO_config(RLED); GPIO_config(GLED); GPIO_config(YLED);
 800095c:	f023 4370 	bic.w	r3, r3, #4026531840	; 0xf0000000
 8000960:	f043 5340 	orr.w	r3, r3, #805306368	; 0x30000000
 8000964:	6023      	str	r3, [r4, #0]
 8000966:	6823      	ldr	r3, [r4, #0]
 8000968:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 800096c:	f043 7340 	orr.w	r3, r3, #50331648	; 0x3000000
 8000970:	6023      	str	r3, [r4, #0]
 8000972:	6823      	ldr	r3, [r4, #0]
 8000974:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8000978:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 800097c:	6023      	str	r3, [r4, #0]
  GPIO_config(BTN1); GPIO_config(BTN2);
 800097e:	6853      	ldr	r3, [r2, #4]
 8000980:	f023 030f 	bic.w	r3, r3, #15
 8000984:	f043 0304 	orr.w	r3, r3, #4
 8000988:	6053      	str	r3, [r2, #4]
 800098a:	6853      	ldr	r3, [r2, #4]
 800098c:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8000990:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000994:	6053      	str	r3, [r2, #4]
  
  USB_setup();
 8000996:	f7ff fc28 	bl	80001ea <USB_setup>
static __INLINE void __enable_irq()               { __ASM volatile ("cpsie i"); }
 800099a:	b662      	cpsie	i
  __enable_irq();

  while(1){
    usb_class_poll();
    GPO_T(YLED);
    sleep(100000);
 800099c:	4d07      	ldr	r5, [pc, #28]	; (80009bc <main+0x78>)
    usb_class_poll();
 800099e:	f7ff fc1f 	bl	80001e0 <usb_class_poll>
    GPO_T(YLED);
 80009a2:	68e3      	ldr	r3, [r4, #12]
    sleep(100000);
 80009a4:	4628      	mov	r0, r5
    GPO_T(YLED);
 80009a6:	f083 0320 	eor.w	r3, r3, #32
 80009aa:	60e3      	str	r3, [r4, #12]
    sleep(100000);
 80009ac:	f7ff fc10 	bl	80001d0 <sleep>
 80009b0:	e7f5      	b.n	800099e <main+0x5a>
 80009b2:	bf00      	nop
 80009b4:	40021000 	andmi	r1, r2, r0
 80009b8:	40010c00 	andmi	r0, r1, r0, lsl #24
 80009bc:	000186a0 	andeq	r8, r1, r0, lsr #13
	...

080009c2 <USB_DeviceDescriptor>:
 80009c2:	01100112 	tsteq	r0, r2, lsl r1
 80009c6:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
 80009ca:	05df16c0 	ldrbeq	r1, [pc, #1728]	; 8001092 <_etext+0x652>
 80009ce:	02010001 	andeq	r0, r1, #1
 80009d2:	 	andeq	r0, r9, #-1073741824	; 0xc0000000

080009d4 <USB_ConfigDescriptor>:
 80009d4:	001b0209 	andseq	r0, fp, r9, lsl #4
 80009d8:	80000101 	andhi	r0, r0, r1, lsl #2
 80009dc:	00040932 	andeq	r0, r4, r2, lsr r9
 80009e0:	00030000 	andeq	r0, r3, r0
 80009e4:	21090000 	mrscs	r0, (UNDEF: 9)
 80009e8:	01000101 	tsteq	r0, r1, lsl #2
 80009ec:	 	beq	800627c <_etext+0x583c>

080009ef <USB_DeviceQualifierDescriptor>:
 80009ef:	0200060a 	andeq	r0, r0, #10485760	; 0xa00000
 80009f3:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
 80009f7:	 	streq	r0, [r0], #-1

080009fa <USB_StringLangDescriptor>:
 80009fa:	04090304 	streq	r0, [r9], #-772	; 0xfffffcfc

080009fe <USB_StringManufacturingDescriptor>:
 80009fe:	00430316 	subeq	r0, r3, r6, lsl r3
 8000a02:	004b004f 	subeq	r0, fp, pc, asr #32
 8000a06:	004f0050 	subeq	r0, pc, r0, asr r0	; <UNPREDICTABLE>
 8000a0a:	00450057 	subeq	r0, r5, r7, asr r0
 8000a0e:	00450048 	subeq	r0, r5, r8, asr #32
 8000a12:	 	tsteq	r2, #85	; 0x55

08000a14 <USB_StringProdDescriptor>:
 8000a14:	00550312 	subseq	r0, r5, r2, lsl r3
 8000a18:	00420053 	subeq	r0, r2, r3, asr r0
 8000a1c:	00740020 	rsbseq	r0, r4, r0, lsr #32
 8000a20:	00730065 	rsbseq	r0, r3, r5, rrx
 8000a24:	 	movweq	r0, #16500	; 0x4074

08000a26 <USB_StringSerialDescriptor>:
 8000a26:	00310304 	eorseq	r0, r1, r4, lsl #6

08000a2a <USB_HIDDescriptor>:
 8000a2a:	09ff0006 	ldmibeq	pc!, {r1, r2}^	; <UNPREDICTABLE>
 8000a2e:	1501a101 	strne	sl, [r1, #-257]	; 0xfffffeff
 8000a32:	00ff2600 	rscseq	r2, pc, r0, lsl #12
 8000a36:	02950875 	addseq	r0, r5, #7667712	; 0x750000
 8000a3a:	02b20009 	adcseq	r0, r2, #9
 8000a3e:	Address 0x0000000008000a3e is out of bounds.


Disassembly of section .data:

20000000 <lastaddr>:
20000000:	00000040 	andeq	r0, r0, r0, asr #32

Disassembly of section .bss:

20000004 <ep0_buf>:
20000004:	00000000 	andeq	r0, r0, r0

20000008 <USB_Addr>:
	...

2000000a <ep0_count>:
	...

2000000c <setup_packet>:
	...

20000014 <bytesread.4424>:
	...

20000016 <configuration>:
	...

20000017 <num.5079>:
	...

20000018 <epfunc_in>:
	...

20000038 <epfunc_out>:
	...

20000058 <hid_data>:
}hid_data;
20000058:	00000000 	andeq	r0, r0, r0

Disassembly of section ._usrstack:

2000005c <_susrstack>:
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <__Stack_Size+0x10d0924>
   4:	35312820 	ldrcc	r2, [r1, #-2080]!	; 0xfffff7e0
   8:	322d383a 	eorcc	r3, sp, #3801088	; 0x3a0000
   c:	2d393130 	ldfcss	f3, [r9, #-192]!	; 0xffffff40
  10:	312d3371 			; <UNDEFINED> instruction: 0x312d3371
  14:	2e382029 	cdpcs	0, 3, cr2, cr8, cr9, {1}
  18:	20312e33 	eorscs	r2, r1, r3, lsr lr
  1c:	39313032 	ldmdbcc	r1!, {r1, r4, r5, ip, sp}
  20:	33303730 	teqcc	r0, #48, 14	; 0xc00000
  24:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
  28:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
  2c:	5b202965 	blpl	80a5c8 <__Stack_Size+0x80a1c8>
  30:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
  34:	72622d38 	rsbvc	r2, r2, #56, 26	; 0xe00
  38:	68636e61 	stmdavs	r3!, {r0, r5, r6, r9, sl, fp, sp, lr}^
  3c:	76657220 	strbtvc	r7, [r5], -r0, lsr #4
  40:	6f697369 	svcvs	0x00697369
  44:	3732206e 	ldrcc	r2, [r2, -lr, rrx]!
  48:	37323033 			; <UNDEFINED> instruction: 0x37323033
  4c:	Address 0x000000000000004c is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002e41 	andeq	r2, r0, r1, asr #28
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000024 	andeq	r0, r0, r4, lsr #32
  10:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
  14:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
  18:	0600334d 	streq	r3, [r0], -sp, asr #6
  1c:	094d070a 	stmdbeq	sp, {r1, r3, r8, r9, sl}^
  20:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  24:	17011501 	strne	r1, [r1, -r1, lsl #10]
  28:	1a011803 	bne	4603c <__Stack_Size+0x45c3c>
  2c:	Address 0x000000000000002c is out of bounds.


Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	08000120 	stmdaeq	r0, {r5, r8}
  14:	000000bc 	strheq	r0, [r0], -ip
  18:	08000944 	stmdaeq	r0, {r2, r6, r8, fp}
  1c:	0000007c 	andeq	r0, r0, ip, ror r0
	...
  28:	0000001c 	andeq	r0, r0, ip, lsl r0
  2c:	053e0002 	ldreq	r0, [lr, #-2]!
  30:	00040000 	andeq	r0, r4, r0
  34:	00000000 	andeq	r0, r0, r0
  38:	080001dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8}
  3c:	000005ec 	andeq	r0, r0, ip, ror #11
	...
  48:	0000001c 	andeq	r0, r0, ip, lsl r0
  4c:	17dd0002 	ldrbne	r0, [sp, r2]
  50:	00040000 	andeq	r0, r4, r0
  54:	00000000 	andeq	r0, r0, r0
  58:	080007c8 	stmdaeq	r0, {r3, r6, r7, r8, r9, sl}
  5c:	00000134 	andeq	r0, r0, r4, lsr r1
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	0000053a 	andeq	r0, r0, sl, lsr r5
       4:	00000002 	andeq	r0, r0, r2
       8:	01040000 	mrseq	r0, (UNDEF: 4)
       c:	00000012 	andeq	r0, r0, r2, lsl r0
      10:	0001da0c 	andeq	sp, r1, ip, lsl #20
      14:	00010400 	andeq	r0, r1, r0, lsl #8
      18:	00005800 	andeq	r5, r0, r0, lsl #16
	...
      28:	06010200 	streq	r0, [r1], -r0, lsl #4
      2c:	00000154 	andeq	r0, r0, r4, asr r1
      30:	0001a503 	andeq	sl, r1, r3, lsl #10
      34:	17220400 	strne	r0, [r2, -r0, lsl #8]!
      38:	00000029 	andeq	r0, r0, r9, lsr #32
      3c:	f3050202 	vhsub.u8	d0, d5, d2
      40:	02000001 	andeq	r0, r0, #1
      44:	01c10504 	biceq	r0, r1, r4, lsl #10
      48:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
      4c:	0001bc05 	andeq	fp, r1, r5, lsl #24
      50:	01a40300 			; <UNDEFINED> instruction: 0x01a40300
      54:	2e040000 	cdpcs	0, 0, cr0, cr4, cr0, {0}
      58:	00006218 	andeq	r6, r0, r8, lsl r2
      5c:	00510400 	subseq	r0, r1, r0, lsl #8
      60:	01020000 	mrseq	r0, (UNDEF: 2)
      64:	00015208 	andeq	r5, r1, r8, lsl #4
      68:	07020200 	streq	r0, [r2, -r0, lsl #4]
      6c:	0000012a 	andeq	r0, r0, sl, lsr #2
      70:	00020903 	andeq	r0, r2, r3, lsl #18
      74:	19340400 	ldmdbne	r4!, {sl}
      78:	00000081 	andeq	r0, r0, r1, lsl #1
      7c:	00007005 	andeq	r7, r0, r5
      80:	07040200 	streq	r0, [r4, -r0, lsl #4]
      84:	00000192 	muleq	r0, r2, r1
      88:	8d070802 	stchi	8, cr0, [r7, #-8]
      8c:	06000001 	streq	r0, [r0], -r1
      90:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
      94:	8f050074 	svchi	0x00050074
      98:	02000000 	andeq	r0, r0, #0
      9c:	01970704 	orrseq	r0, r7, r4, lsl #14
      a0:	3d070000 	stccc	0, cr0, [r7, #-0]
      a4:	03000001 	movweq	r0, #1
      a8:	961506ce 	ldrls	r0, [r5], -lr, asr #13
      ac:	01000000 	mrseq	r0, (UNDEF: 0)
      b0:	01ca0801 	biceq	r0, sl, r1, lsl #16
      b4:	45050000 	strmi	r0, [r5, #-0]
      b8:	00007011 	andeq	r7, r0, r1, lsl r0
      bc:	09010100 	stmdbeq	r1, {r8}
      c0:	0000005d 	andeq	r0, r0, sp, asr r0
      c4:	000000cf 	andeq	r0, r0, pc, asr #1
      c8:	00009b0a 	andeq	r9, r0, sl, lsl #22
      cc:	04000f00 	streq	r0, [r0], #-3840	; 0xfffff100
      d0:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
      d4:	0000f608 	andeq	pc, r0, r8, lsl #12
      d8:	17460500 	strbne	r0, [r6, -r0, lsl #10]
      dc:	000000cf 	andeq	r0, r0, pc, asr #1
      e0:	5d090101 	stfpls	f0, [r9, #-4]
      e4:	f2000000 	vhadd.s8	d0, d0, d0
      e8:	0a000000 	beq	f0 <_Minimum_Stack_Size-0x10>
      ec:	0000009b 	muleq	r0, fp, r0
      f0:	e2040007 	and	r0, r4, #7
      f4:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
      f8:	000001e5 	andeq	r0, r0, r5, ror #3
      fc:	f2174705 	vabd.s16	d4, d7, d5
     100:	01000000 	mrseq	r0, (UNDEF: 0)
     104:	06240b01 	strteq	r0, [r4], -r1, lsl #22
     108:	9d090158 	stflss	f0, [r9, #-352]	; 0xfffffea0
     10c:	0c000001 	stceq	0, cr0, [r0], {1}
     110:	00524341 	subseq	r4, r2, r1, asr #6
     114:	11015a06 	tstne	r1, r6, lsl #20
     118:	0000007c 	andeq	r0, r0, ip, ror r0
     11c:	0d002302 	stceq	3, cr2, [r0, #-8]
     120:	0000014d 	andeq	r0, r0, sp, asr #2
     124:	11015b06 	tstne	r1, r6, lsl #22
     128:	0000007c 	andeq	r0, r0, ip, ror r0
     12c:	0d042302 	stceq	3, cr2, [r4, #-8]
     130:	0000014a 	andeq	r0, r0, sl, asr #2
     134:	11015c06 	tstne	r1, r6, lsl #24
     138:	0000007c 	andeq	r0, r0, ip, ror r0
     13c:	0c082302 	stceq	3, cr2, [r8], {2}
     140:	06005253 			; <UNDEFINED> instruction: 0x06005253
     144:	7c11015d 	ldfvcs	f0, [r1], {93}	; 0x5d
     148:	02000000 	andeq	r0, r0, #0
     14c:	430c0c23 	movwmi	r0, #52259	; 0xcc23
     150:	5e060052 	mcrpl	0, 0, r0, cr6, cr2, {2}
     154:	007c1101 	rsbseq	r1, ip, r1, lsl #2
     158:	23020000 	movwcs	r0, #8192	; 0x2000
     15c:	52410c10 	subpl	r0, r1, #16, 24	; 0x1000
     160:	015f0600 	cmpeq	pc, r0, lsl #12
     164:	00007c11 	andeq	r7, r0, r1, lsl ip
     168:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     16c:	0001600d 	andeq	r6, r1, sp
     170:	01600600 	cmneq	r0, r0, lsl #12
     174:	00007c11 	andeq	r7, r0, r1, lsl ip
     178:	18230200 	stmdane	r3!, {r9}
     17c:	52424f0c 	subpl	r4, r2, #12, 30	; 0x30
     180:	01610600 	cmneq	r1, r0, lsl #12
     184:	00007c11 	andeq	r7, r0, r1, lsl ip
     188:	1c230200 	sfmne	f0, 4, [r3], #-0
     18c:	0000c90d 	andeq	ip, r0, sp, lsl #18
     190:	01620600 	cmneq	r2, r0, lsl #12
     194:	00007c11 	andeq	r7, r0, r1, lsl ip
     198:	20230200 	eorcs	r0, r3, r0, lsl #4
     19c:	00a50e00 	adceq	r0, r5, r0, lsl #28
     1a0:	63060000 	movwvs	r0, #24576	; 0x6000
     1a4:	01050301 	tsteq	r5, r1, lsl #6
     1a8:	1c0b0000 	stcne	0, cr0, [fp], {-0}
     1ac:	09017906 	stmdbeq	r1, {r1, r2, r8, fp, ip, sp, lr}
     1b0:	00000225 	andeq	r0, r0, r5, lsr #4
     1b4:	4c52430c 	mrrcmi	3, 0, r4, r2, cr12
     1b8:	017b0600 	cmneq	fp, r0, lsl #12
     1bc:	00007c11 	andeq	r7, r0, r1, lsl ip
     1c0:	00230200 	eoreq	r0, r3, r0, lsl #4
     1c4:	4852430c 	ldmdami	r2, {r2, r3, r8, r9, lr}^
     1c8:	017c0600 	cmneq	ip, r0, lsl #12
     1cc:	00007c11 	andeq	r7, r0, r1, lsl ip
     1d0:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     1d4:	5244490c 	subpl	r4, r4, #12, 18	; 0x30000
     1d8:	017d0600 	cmneq	sp, r0, lsl #12
     1dc:	00007c11 	andeq	r7, r0, r1, lsl ip
     1e0:	08230200 	stmdaeq	r3!, {r9}
     1e4:	52444f0c 	subpl	r4, r4, #12, 30	; 0x30
     1e8:	017e0600 	cmneq	lr, r0, lsl #12
     1ec:	00007c11 	andeq	r7, r0, r1, lsl ip
     1f0:	0c230200 	sfmeq	f0, 4, [r3], #-0
     1f4:	0000b30d 	andeq	fp, r0, sp, lsl #6
     1f8:	017f0600 	cmneq	pc, r0, lsl #12
     1fc:	00007c11 	andeq	r7, r0, r1, lsl ip
     200:	10230200 	eorne	r0, r3, r0, lsl #4
     204:	5252420c 	subspl	r4, r2, #12, 4	; 0xc0000000
     208:	01800600 	orreq	r0, r0, r0, lsl #12
     20c:	00007c11 	andeq	r7, r0, r1, lsl ip
     210:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     214:	0002250d 	andeq	r2, r2, sp, lsl #10
     218:	01810600 	orreq	r0, r1, r0, lsl #12
     21c:	00007c11 	andeq	r7, r0, r1, lsl ip
     220:	18230200 	stmdane	r3!, {r9}
     224:	00da0e00 	sbcseq	r0, sl, r0, lsl #28
     228:	82060000 	andhi	r0, r6, #0
     22c:	01aa0301 			; <UNDEFINED> instruction: 0x01aa0301
     230:	280b0000 	stmdacs	fp, {}	; <UNPREDICTABLE>
     234:	0901bb06 	stmdbeq	r1, {r1, r2, r8, r9, fp, ip, sp, pc}
     238:	000002dc 	ldrdeq	r0, [r0], -ip
     23c:	0052430c 	subseq	r4, r2, ip, lsl #6
     240:	1101bd06 	tstne	r1, r6, lsl #26
     244:	0000007c 	andeq	r0, r0, ip, ror r0
     248:	0d002302 	stceq	3, cr2, [r0, #-8]
     24c:	0000000d 	andeq	r0, r0, sp
     250:	1101be06 	tstne	r1, r6, lsl #28
     254:	0000007c 	andeq	r0, r0, ip, ror r0
     258:	0c042302 	stceq	3, cr2, [r4], {2}
     25c:	00524943 	subseq	r4, r2, r3, asr #18
     260:	1101bf06 	tstne	r1, r6, lsl #30
     264:	0000007c 	andeq	r0, r0, ip, ror r0
     268:	0d082302 	stceq	3, cr2, [r8, #-8]
     26c:	0000017f 	andeq	r0, r0, pc, ror r1
     270:	1101c006 	tstne	r1, r6
     274:	0000007c 	andeq	r0, r0, ip, ror r0
     278:	0d0c2302 	stceq	3, cr2, [ip, #-8]
     27c:	00000169 	andeq	r0, r0, r9, ror #2
     280:	1101c106 	tstne	r1, r6, lsl #2
     284:	0000007c 	andeq	r0, r0, ip, ror r0
     288:	0d102302 	ldceq	3, cr2, [r0, #-8]
     28c:	000000b8 	strheq	r0, [r0], -r8
     290:	1101c206 	tstne	r1, r6, lsl #4
     294:	0000007c 	andeq	r0, r0, ip, ror r0
     298:	0d142302 	ldceq	3, cr2, [r4, #-8]
     29c:	00000000 	andeq	r0, r0, r0
     2a0:	1101c306 	tstne	r1, r6, lsl #6
     2a4:	0000007c 	andeq	r0, r0, ip, ror r0
     2a8:	0d182302 	ldceq	3, cr2, [r8, #-8]
     2ac:	00000177 	andeq	r0, r0, r7, ror r1
     2b0:	1101c406 	tstne	r1, r6, lsl #8
     2b4:	0000007c 	andeq	r0, r0, ip, ror r0
     2b8:	0d1c2302 	ldceq	3, cr2, [ip, #-8]
     2bc:	00000008 	andeq	r0, r0, r8
     2c0:	1101c506 	tstne	r1, r6, lsl #10
     2c4:	0000007c 	andeq	r0, r0, ip, ror r0
     2c8:	0c202302 	stceq	3, cr2, [r0], #-8
     2cc:	00525343 	subseq	r5, r2, r3, asr #6
     2d0:	1101c606 	tstne	r1, r6, lsl #12
     2d4:	0000007c 	andeq	r0, r0, ip, ror r0
     2d8:	00242302 	eoreq	r2, r4, r2, lsl #6
     2dc:	0001fd0e 	andeq	pc, r1, lr, lsl #26
     2e0:	01c90600 	biceq	r0, r9, r0, lsl #12
     2e4:	00023203 	andeq	r3, r2, r3, lsl #4
     2e8:	72010f00 	andvc	r0, r1, #0, 30
     2ec:	02000001 	andeq	r0, r0, #1
     2f0:	8f01050e 	svchi	0x0001050e
     2f4:	44000000 	strmi	r0, [r0], #-0
     2f8:	c0080009 	andgt	r0, r8, r9
     2fc:	00080009 	andeq	r0, r8, r9
     300:	01000000 	mrseq	r0, (UNDEF: 0)
     304:	00000445 	andeq	r0, r0, r5, asr #8
     308:	00002010 	andeq	r2, r0, r0, lsl r0
     30c:	00032600 	andeq	r2, r3, r0, lsl #12
     310:	01881100 	orreq	r1, r8, r0, lsl #2
     314:	12020000 	andne	r0, r2, #0
     318:	00007003 	andeq	r7, r0, r3
     31c:	00002400 	andeq	r2, r0, r0, lsl #8
     320:	00002000 	andeq	r2, r0, r0
     324:	38120000 	ldmdacc	r2, {}	; <UNPREDICTABLE>
     328:	13000003 	movwne	r0, #3
     32c:	00000188 	andeq	r0, r0, r8, lsl #3
     330:	70031202 	andvc	r1, r3, r2, lsl #4
     334:	00000000 	andeq	r0, r0, r0
     338:	00096614 	andeq	r6, r9, r4, lsl r6
     33c:	00097208 	andeq	r7, r9, r8, lsl #4
     340:	00035a08 	andeq	r5, r3, r8, lsl #20
     344:	01881100 	orreq	r1, r8, r0, lsl #2
     348:	12020000 	andne	r0, r2, #0
     34c:	00007016 	andeq	r7, r0, r6, lsl r0
     350:	00004700 	andeq	r4, r0, r0, lsl #14
     354:	00004300 	andeq	r4, r0, r0, lsl #6
     358:	6c120000 	ldcvs	0, cr0, [r2], {-0}
     35c:	13000003 	movwne	r0, #3
     360:	00000188 	andeq	r0, r0, r8, lsl #3
     364:	70161202 	andsvc	r1, r6, r2, lsl #4
     368:	00000000 	andeq	r0, r0, r0
     36c:	00097214 	andeq	r7, r9, r4, lsl r2
     370:	00097e08 	andeq	r7, r9, r8, lsl #28
     374:	00038e08 	andeq	r8, r3, r8, lsl #28
     378:	01881100 	orreq	r1, r8, r0, lsl #2
     37c:	12020000 	andne	r0, r2, #0
     380:	00007029 	andeq	r7, r0, r9, lsr #32
     384:	00006a00 	andeq	r6, r0, r0, lsl #20
     388:	00006600 	andeq	r6, r0, r0, lsl #12
     38c:	a0120000 	andsge	r0, r2, r0
     390:	13000003 	movwne	r0, #3
     394:	00000188 	andeq	r0, r0, r8, lsl #3
     398:	70291202 	eorvc	r1, r9, r2, lsl #4
     39c:	00000000 	andeq	r0, r0, r0
     3a0:	0003b212 	andeq	fp, r3, r2, lsl r2
     3a4:	01881300 	orreq	r1, r8, r0, lsl #6
     3a8:	13020000 	movwne	r0, #8192	; 0x2000
     3ac:	00007003 	andeq	r7, r0, r3
     3b0:	40100000 	andsmi	r0, r0, r0
     3b4:	d0000000 	andle	r0, r0, r0
     3b8:	11000003 	tstne	r0, r3
     3bc:	00000188 	andeq	r0, r0, r8, lsl #3
     3c0:	70031302 	andvc	r1, r3, r2, lsl #6
     3c4:	8d000000 	stchi	0, cr0, [r0, #-0]
     3c8:	89000000 	stmdbhi	r0, {}	; <UNPREDICTABLE>
     3cc:	00000000 	andeq	r0, r0, r0
     3d0:	0003e212 	andeq	lr, r3, r2, lsl r2
     3d4:	01881300 	orreq	r1, r8, r0, lsl #6
     3d8:	13020000 	movwne	r0, #8192	; 0x2000
     3dc:	00007016 	andeq	r7, r0, r6, lsl r0
     3e0:	8a140000 	bhi	5003e8 <__Stack_Size+0x4fffe8>
     3e4:	96080009 	strls	r0, [r8], -r9
     3e8:	04080009 	streq	r0, [r8], #-9
     3ec:	11000004 	tstne	r0, r4
     3f0:	00000188 	andeq	r0, r0, r8, lsl #3
     3f4:	70161302 	andsvc	r1, r6, r2, lsl #6
     3f8:	ae000000 	cdpge	0, 0, cr0, cr0, cr0, {0}
     3fc:	ac000000 	stcge	0, cr0, [r0], {-0}
     400:	00000000 	andeq	r0, r0, r0
     404:	0004bd15 	andeq	fp, r4, r5, lsl sp
     408:	00099a00 	andeq	r9, r9, r0, lsl #20
     40c:	099a0108 	ldmibeq	sl, {r3, r8}
     410:	099c0800 	ldmibeq	ip, {fp}
     414:	16020800 	strne	r0, [r2], -r0, lsl #16
     418:	094a1603 	stmdbeq	sl, {r0, r1, r9, sl, ip}^
     41c:	04940800 	ldreq	r0, [r4], #2048	; 0x800
     420:	9a160000 	bls	580428 <__Stack_Size+0x580028>
     424:	21080009 	tstcs	r8, r9
     428:	16000005 	strne	r0, [r0], -r5
     42c:	080009a2 	stmdaeq	r0, {r1, r5, r7, r8, fp}
     430:	0000052f 	andeq	r0, r0, pc, lsr #10
     434:	0009b017 	andeq	fp, r9, r7, lsl r0
     438:	00044508 	andeq	r4, r4, r8, lsl #10
     43c:	50011800 	andpl	r1, r1, r0, lsl #16
     440:	00007502 	andeq	r7, r0, r2, lsl #10
     444:	1f011900 	svcne	0x00011900
     448:	02000002 	andeq	r0, r0, #2
     44c:	d001060a 	andle	r0, r1, sl, lsl #12
     450:	dc080001 	stcle	0, cr0, [r8], {1}
     454:	02080001 	andeq	r0, r8, #1
     458:	7401007d 	strvc	r0, [r1], #-125	; 0xffffff83
     45c:	1a000004 	bne	474 <__Stack_Size+0x74>
     460:	000001ac 	andeq	r0, r0, ip, lsr #3
     464:	70150a02 	andsvc	r0, r5, r2, lsl #20
     468:	c7000000 	strgt	r0, [r0, -r0]
     46c:	c1000000 	mrsgt	r0, (UNDEF: 0)
     470:	00000000 	andeq	r0, r0, r0
     474:	01b1011b 			; <UNDEFINED> instruction: 0x01b1011b
     478:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
     47c:	01ce011c 	biceq	r0, lr, ip, lsl r1
     480:	01d00800 	bicseq	r0, r0, r0, lsl #16
     484:	7d020800 	stcvc	8, cr0, [r2, #-0]
     488:	011c0100 	tsteq	ip, r0, lsl #2
     48c:	00000644 	andeq	r0, r0, r4, asr #12
     490:	011c0702 	tsteq	ip, r2, lsl #14
     494:	00ce011d 	sbceq	r0, lr, sp, lsl r1
     498:	0d010000 	stceq	0, cr0, [r1, #-0]
     49c:	00003008 	andeq	r3, r0, r8
     4a0:	04bd0100 	ldrteq	r0, [sp], #256	; 0x100
     4a4:	691e0000 	ldmdbvs	lr, {}	; <UNPREDICTABLE>
     4a8:	070e0100 	streq	r0, [lr, -r0, lsl #2]
     4ac:	0000008f 	andeq	r0, r0, pc, lsl #1
     4b0:	706d741e 	rsbvc	r7, sp, lr, lsl r4
     4b4:	0c0f0100 	stfeqs	f0, [pc], {-0}
     4b8:	00000070 	andeq	r0, r0, r0, ror r0
     4bc:	02121f00 	andseq	r1, r2, #0, 30
     4c0:	b4030000 	strlt	r0, [r3], #-0
     4c4:	20031604 	andcs	r1, r3, r4, lsl #12
     4c8:	00000494 	muleq	r0, r4, r4
     4cc:	08000120 	stmdaeq	r0, {r5, r8}
     4d0:	080001cc 	stmdaeq	r0, {r2, r3, r6, r7, r8}
     4d4:	01007d02 	tsteq	r0, r2, lsl #26
     4d8:	00000521 	andeq	r0, r0, r1, lsr #10
     4dc:	0004a621 	andeq	sl, r4, r1, lsr #12
     4e0:	0000fc00 	andeq	pc, r0, r0, lsl #24
     4e4:	0000f200 	andeq	pc, r0, r0, lsl #4
     4e8:	04b02200 	ldrteq	r2, [r0], #512	; 0x200
     4ec:	94230000 	strtls	r0, [r3], #-0
     4f0:	72000004 	andvc	r0, r0, #4
     4f4:	02080001 	andeq	r0, r8, #1
     4f8:	00000000 	andeq	r0, r0, r0
     4fc:	24080d01 	strcs	r0, [r8], #-3329	; 0xfffff2ff
     500:	00000000 	andeq	r0, r0, r0
     504:	0004a621 	andeq	sl, r4, r1, lsr #12
     508:	00016500 	andeq	r6, r1, r0, lsl #10
     50c:	00015100 	andeq	r5, r1, r0, lsl #2
     510:	04b02100 	ldrteq	r2, [r0], #256	; 0x100
     514:	02220000 	eoreq	r0, r2, #0
     518:	020a0000 	andeq	r0, sl, #0
     51c:	00000000 	andeq	r0, r0, r0
     520:	01012500 	tsteq	r1, r0, lsl #10
     524:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     528:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     52c:	25062407 	strcs	r2, [r6, #-1031]	; 0xfffffbf9
     530:	00e70101 	rsceq	r0, r7, r1, lsl #2
     534:	00e70000 	rsceq	r0, r7, r0
     538:	42070000 	andmi	r0, r7, #0
     53c:	129b0006 	addsne	r0, fp, #6
     540:	00020000 	andeq	r0, r2, r0
     544:	00000237 	andeq	r0, r0, r7, lsr r2
     548:	00120104 	andseq	r0, r2, r4, lsl #2
     54c:	4f0c0000 	svcmi	0x000c0000
     550:	04000005 	streq	r0, [r0], #-5
     554:	dc000001 	stcle	0, cr0, [r0], {1}
     558:	c8080001 	stmdagt	r8, {r0}
     55c:	a5080007 	strge	r0, [r8, #-7]
     560:	02000002 	andeq	r0, r0, #2
     564:	01540601 	cmpeq	r4, r1, lsl #12
     568:	02020000 	andeq	r0, r2, #0
     56c:	0001f305 	andeq	pc, r1, r5, lsl #6
     570:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
     574:	000001c1 	andeq	r0, r0, r1, asr #3
     578:	bc050802 	stclt	8, cr0, [r5], {2}
     57c:	03000001 	movweq	r0, #1
     580:	000001a4 	andeq	r0, r0, r4, lsr #3
     584:	57182e04 	ldrpl	r2, [r8, -r4, lsl #28]
     588:	04000000 	streq	r0, [r0], #-0
     58c:	00000041 	andeq	r0, r0, r1, asr #32
     590:	00004105 	andeq	r4, r0, r5, lsl #2
     594:	08010200 	stmdaeq	r1, {r9}
     598:	00000152 	andeq	r0, r0, r2, asr r1
     59c:	00058903 	andeq	r8, r5, r3, lsl #18
     5a0:	19310400 	ldmdbne	r1!, {sl}
     5a4:	0000006f 	andeq	r0, r0, pc, rrx
     5a8:	00005e04 	andeq	r5, r0, r4, lsl #28
     5ac:	07020200 	streq	r0, [r2, -r0, lsl #4]
     5b0:	0000012a 	andeq	r0, r0, sl, lsr #2
     5b4:	00020903 	andeq	r0, r2, r3, lsl #18
     5b8:	19340400 	ldmdbne	r4!, {sl}
     5bc:	00000087 	andeq	r0, r0, r7, lsl #1
     5c0:	00007604 	andeq	r7, r0, r4, lsl #12
     5c4:	07040200 	streq	r0, [r4, -r0, lsl #4]
     5c8:	00000192 	muleq	r0, r2, r1
     5cc:	8d070802 	stchi	8, cr0, [r7, #-8]
     5d0:	06000001 	streq	r0, [r0], -r1
     5d4:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
     5d8:	95040074 	strls	r0, [r4, #-116]	; 0xffffff8c
     5dc:	02000000 	andeq	r0, r0, #0
     5e0:	01970704 	orrseq	r0, r7, r4, lsl #14
     5e4:	1c030000 	stcne	0, cr0, [r3], {-0}
     5e8:	03000005 	movweq	r0, #5
     5ec:	00b40f1a 	adcseq	r0, r4, sl, lsl pc
     5f0:	04070000 	streq	r0, [r7], #-0
     5f4:	000000ba 	strheq	r0, [r0], -sl
     5f8:	00c60108 	sbceq	r0, r6, r8, lsl #2
     5fc:	41090000 	mrsmi	r0, (UNDEF: 9)
     600:	00000000 	andeq	r0, r0, r0
     604:	1b03080a 	blne	c2634 <__Stack_Size+0xc2234>
     608:	00011b09 	andeq	r1, r1, r9, lsl #22
     60c:	02a30b00 	adceq	r0, r3, #0, 22
     610:	1c030000 	stcne	0, cr0, [r3], {-0}
     614:	0000410b 	andeq	r4, r0, fp, lsl #2
     618:	00230200 	eoreq	r0, r3, r0, lsl #4
     61c:	0006880b 	andeq	r8, r6, fp, lsl #16
     620:	0b1d0300 	bleq	741228 <__Stack_Size+0x740e28>
     624:	00000041 	andeq	r0, r0, r1, asr #32
     628:	0b012302 	bleq	49238 <__Stack_Size+0x48e38>
     62c:	00000326 	andeq	r0, r0, r6, lsr #6
     630:	5e0c1e03 	cdppl	14, 0, cr1, cr12, cr3, {0}
     634:	02000000 	andeq	r0, r0, #0
     638:	3f0b0223 	svccc	0x000b0223
     63c:	03000002 	movweq	r0, #2
     640:	005e0c1f 	subseq	r0, lr, pc, lsl ip
     644:	23020000 	movwcs	r0, #8192	; 0x2000
     648:	065e0b04 	ldrbeq	r0, [lr], -r4, lsl #22
     64c:	20030000 	andcs	r0, r3, r0
     650:	00005e0c 	andeq	r5, r0, ip, lsl #28
     654:	06230200 	strteq	r0, [r3], -r0, lsl #4
     658:	06fb0300 	ldrbteq	r0, [fp], r0, lsl #6
     65c:	21030000 	mrscs	r0, (UNDEF: 3)
     660:	0000c602 	andeq	ip, r0, r2, lsl #12
     664:	01050c00 	tsteq	r5, r0, lsl #24
     668:	00000025 	andeq	r0, r0, r5, lsr #32
     66c:	6e015805 	cdpvs	8, 0, cr5, cr1, cr5, {0}
     670:	0d000002 	stceq	0, cr0, [r0, #-8]
     674:	0000064a 	andeq	r0, r0, sl, asr #12
     678:	07dc0d72 			; <UNDEFINED> instruction: 0x07dc0d72
     67c:	0d730000 	ldcleq	0, cr0, [r3, #-0]
     680:	0000032d 	andeq	r0, r0, sp, lsr #6
     684:	04eb0d74 	strbteq	r0, [fp], #3444	; 0xd74
     688:	0d750000 	ldcleq	0, cr0, [r5, #-0]
     68c:	00000735 	andeq	r0, r0, r5, lsr r7
     690:	077c0d76 			; <UNDEFINED> instruction: 0x077c0d76
     694:	0d7b0000 	ldcleq	0, cr0, [fp, #-0]
     698:	00000723 	andeq	r0, r0, r3, lsr #14
     69c:	03110d7c 	tsteq	r1, #124, 26	; 0x1f00
     6a0:	0d7e0000 	ldcleq	0, cr0, [lr, #-0]
     6a4:	000006bf 			; <UNDEFINED> instruction: 0x000006bf
     6a8:	04c70e7f 	strbeq	r0, [r7], #3711	; 0xe7f
     6ac:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
     6b0:	00000513 	andeq	r0, r0, r3, lsl r5
     6b4:	08270e01 	stmdaeq	r7!, {r0, r9, sl, fp}
     6b8:	0e020000 	cdpeq	0, 0, cr0, cr2, cr0, {0}
     6bc:	000005c0 	andeq	r0, r0, r0, asr #11
     6c0:	02be0e03 	adcseq	r0, lr, #3, 28	; 0x30
     6c4:	0e040000 	cdpeq	0, 0, cr0, cr4, cr0, {0}
     6c8:	0000031d 	andeq	r0, r0, sp, lsl r3
     6cc:	02d30e05 	sbcseq	r0, r3, #5, 28	; 0x50
     6d0:	0e060000 	cdpeq	0, 0, cr0, cr6, cr0, {0}
     6d4:	0000067d 	andeq	r0, r0, sp, ror r6
     6d8:	044c0e07 	strbeq	r0, [ip], #-3591	; 0xfffff1f9
     6dc:	0e080000 	cdpeq	0, 0, cr0, cr8, cr0, {0}
     6e0:	000007ca 	andeq	r0, r0, sl, asr #15
     6e4:	04f90e09 	ldrbteq	r0, [r9], #3593	; 0xe09
     6e8:	0e0a0000 	cdpeq	0, 0, cr0, cr10, cr0, {0}
     6ec:	000004a0 	andeq	r0, r0, r0, lsr #9
     6f0:	02840e0b 	addeq	r0, r4, #11, 28	; 0xb0
     6f4:	0e0c0000 	cdpeq	0, 0, cr0, cr12, cr0, {0}
     6f8:	0000053c 	andeq	r0, r0, ip, lsr r5
     6fc:	03860e0d 	orreq	r0, r6, #13, 28	; 0xd0
     700:	0e0e0000 	cdpeq	0, 0, cr0, cr14, cr0, {0}
     704:	000007a8 	andeq	r0, r0, r8, lsr #15
     708:	04760e0f 	ldrbteq	r0, [r6], #-3599	; 0xfffff1f1
     70c:	0e100000 	cdpeq	0, 1, cr0, cr0, cr0, {0}
     710:	0000025a 	andeq	r0, r0, sl, asr r2
     714:	08050e11 	stmdaeq	r5, {r0, r4, r9, sl, fp}
     718:	0e120000 	cdpeq	0, 1, cr0, cr2, cr0, {0}
     71c:	000003ea 	andeq	r0, r0, sl, ror #7
     720:	022a0e13 	eoreq	r0, sl, #304	; 0x130
     724:	0e140000 	cdpeq	0, 1, cr0, cr4, cr0, {0}
     728:	000003ba 			; <UNDEFINED> instruction: 0x000003ba
     72c:	024c0e15 	subeq	r0, ip, #336	; 0x150
     730:	0e160000 	cdpeq	0, 1, cr0, cr6, cr0, {0}
     734:	0000076f 	andeq	r0, r0, pc, ror #14
     738:	03570e17 	cmpeq	r7, #368	; 0x170
     73c:	0e180000 	cdpeq	0, 1, cr0, cr8, cr0, {0}
     740:	0000059f 	muleq	r0, pc, r5	; <UNPREDICTABLE>
     744:	06a00e19 	ssateq	r0, #1, r9, lsl #28
     748:	0e1a0000 	cdpeq	0, 1, cr0, cr10, cr0, {0}
     74c:	00000666 	andeq	r0, r0, r6, ror #12
     750:	06da0e1b 			; <UNDEFINED> instruction: 0x06da0e1b
     754:	0e1c0000 	cdpeq	0, 1, cr0, cr12, cr0, {0}
     758:	00000496 	muleq	r0, r6, r4
     75c:	027a0e1d 	rsbseq	r0, sl, #464	; 0x1d0
     760:	0e1e0000 	cdpeq	0, 1, cr0, cr14, cr0, {0}
     764:	0000055d 	andeq	r0, r0, sp, asr r5
     768:	06b20e1f 	ssateq	r0, #19, pc, lsl #28	; <UNPREDICTABLE>
     76c:	0e200000 	cdpeq	0, 2, cr0, cr0, cr0, {0}
     770:	00000457 	andeq	r0, r0, r7, asr r4
     774:	026d0e21 	rsbeq	r0, sp, #528	; 0x210
     778:	0e220000 	cdpeq	0, 2, cr0, cr2, cr0, {0}
     77c:	0000036e 	andeq	r0, r0, lr, ror #6
     780:	078d0e23 	streq	r0, [sp, r3, lsr #28]
     784:	0e240000 	cdpeq	0, 2, cr0, cr4, cr0, {0}
     788:	00000632 	andeq	r0, r0, r2, lsr r6
     78c:	04110e25 	ldreq	r0, [r1], #-3621	; 0xfffff1db
     790:	0e260000 	cdpeq	0, 2, cr0, cr6, cr0, {0}
     794:	0000081b 	andeq	r0, r0, fp, lsl r8
     798:	02f90e27 	rscseq	r0, r9, #624	; 0x270
     79c:	0e280000 	cdpeq	0, 2, cr0, cr8, cr0, {0}
     7a0:	000005b1 			; <UNDEFINED> instruction: 0x000005b1
     7a4:	04b80e29 	ldrteq	r0, [r8], #3625	; 0xe29
     7a8:	002a0000 	eoreq	r0, sl, r0
     7ac:	0003fe03 	andeq	pc, r3, r3, lsl #28
     7b0:	03900500 	orrseq	r0, r0, #0, 10
     7b4:	00000127 	andeq	r0, r0, r7, lsr #2
     7b8:	020e040f 	andeq	r0, lr, #251658240	; 0xf000000
     7bc:	03520984 	cmpeq	r2, #132, 18	; 0x210000
     7c0:	520b0000 	andpl	r0, fp, #0
     7c4:	02000003 	andeq	r0, r0, #3
     7c8:	03621186 	cmneq	r2, #-2147483615	; 0x80000021
     7cc:	23020000 	movwcs	r0, #8192	; 0x2000
     7d0:	05ce0b00 	strbeq	r0, [lr, #2816]	; 0xb00
     7d4:	87020000 	strhi	r0, [r2, -r0]
     7d8:	00036711 	andeq	r6, r3, r1, lsl r7
     7dc:	20230200 	eorcs	r0, r3, r0, lsl #4
     7e0:	0007880b 	andeq	r8, r7, fp, lsl #16
     7e4:	11880200 	orrne	r0, r8, r0, lsl #4
     7e8:	00000362 	andeq	r0, r0, r2, ror #6
     7ec:	01802303 	orreq	r2, r0, r3, lsl #6
     7f0:	0003650b 	andeq	r6, r3, fp, lsl #10
     7f4:	11890200 	orrne	r0, r9, r0, lsl #4
     7f8:	00000367 	andeq	r0, r0, r7, ror #6
     7fc:	01a02303 	lsleq	r2, r3, #6
     800:	0007eb0b 	andeq	lr, r7, fp, lsl #22
     804:	118a0200 	orrne	r0, sl, r0, lsl #4
     808:	00000362 	andeq	r0, r0, r2, ror #6
     80c:	02802303 	addeq	r2, r0, #201326592	; 0xc000000
     810:	0005e20b 	andeq	lr, r5, fp, lsl #4
     814:	118b0200 	orrne	r0, fp, r0, lsl #4
     818:	00000367 	andeq	r0, r0, r7, ror #6
     81c:	02a02303 	adceq	r2, r0, #201326592	; 0xc000000
     820:	0005320b 	andeq	r3, r5, fp, lsl #4
     824:	118c0200 	orrne	r0, ip, r0, lsl #4
     828:	00000362 	andeq	r0, r0, r2, ror #6
     82c:	03802303 	orreq	r2, r0, #201326592	; 0xc000000
     830:	0005ec0b 	andeq	lr, r5, fp, lsl #24
     834:	118d0200 	orrne	r0, sp, r0, lsl #4
     838:	00000367 	andeq	r0, r0, r7, ror #6
     83c:	03a02303 	moveq	r2, #201326592	; 0xc000000
     840:	0007970b 	andeq	r9, r7, fp, lsl #14
     844:	118e0200 	orrne	r0, lr, r0, lsl #4
     848:	00000362 	andeq	r0, r0, r2, ror #6
     84c:	04802303 	streq	r2, [r0], #771	; 0x303
     850:	0005f60b 	andeq	pc, r5, fp, lsl #12
     854:	118f0200 	orrne	r0, pc, r0, lsl #4
     858:	00000377 	andeq	r0, r0, r7, ror r3
     85c:	04a02303 	strteq	r2, [r0], #771	; 0x303
     860:	00504910 	subseq	r4, r0, r0, lsl r9
     864:	97119002 	ldrls	r9, [r1, -r2]
     868:	03000003 	movweq	r0, #3
     86c:	0b068023 	bleq	1a0900 <__Stack_Size+0x1a0500>
     870:	00000600 	andeq	r0, r0, r0, lsl #12
     874:	9c119102 	ldflsd	f1, [r1], {2}
     878:	03000003 	movweq	r0, #3
     87c:	0b07f023 	bleq	1fc910 <__Stack_Size+0x1fc510>
     880:	000005ac 	andeq	r0, r0, ip, lsr #11
     884:	82119202 	andshi	r9, r1, #536870912	; 0x20000000
     888:	03000000 	movweq	r0, #0
     88c:	001c8023 	andseq	r8, ip, r3, lsr #32
     890:	00008211 	andeq	r8, r0, r1, lsl r2
     894:	00036200 	andeq	r6, r3, r0, lsl #4
     898:	00a11200 	adceq	r1, r1, r0, lsl #4
     89c:	00070000 	andeq	r0, r7, r0
     8a0:	00035204 	andeq	r5, r3, r4, lsl #4
     8a4:	00761100 	rsbseq	r1, r6, r0, lsl #2
     8a8:	03770000 	cmneq	r7, #0
     8ac:	a1120000 	tstge	r2, r0
     8b0:	17000000 	strne	r0, [r0, -r0]
     8b4:	00761100 	rsbseq	r1, r6, r0, lsl #2
     8b8:	03870000 	orreq	r0, r7, #0
     8bc:	a1120000 	tstge	r2, r0
     8c0:	37000000 	strcc	r0, [r0, -r0]
     8c4:	004d1100 	subeq	r1, sp, r0, lsl #2
     8c8:	03970000 	orrseq	r0, r7, #0
     8cc:	a1120000 	tstge	r2, r0
     8d0:	ef000000 	svc	0x00000000
     8d4:	03870400 	orreq	r0, r7, #0, 8
     8d8:	76110000 	ldrvc	r0, [r1], -r0
     8dc:	ad000000 	stcge	0, cr0, [r0, #-0]
     8e0:	13000003 	movwne	r0, #3
     8e4:	000000a1 	andeq	r0, r0, r1, lsr #1
     8e8:	03000283 	movweq	r0, #643	; 0x283
     8ec:	00000691 	muleq	r0, r1, r6
     8f0:	7a049302 	bvc	125500 <__Stack_Size+0x125100>
     8f4:	14000002 	strne	r0, [r0], #-2
     8f8:	0000013d 	andeq	r0, r0, sp, lsr r1
     8fc:	1506ce02 	strne	ip, [r6, #-3586]	; 0xfffff1fe
     900:	0000009c 	muleq	r0, ip, r0
     904:	ca150101 	bgt	540d10 <__Stack_Size+0x540910>
     908:	06000001 	streq	r0, [r0], -r1
     90c:	00761145 	rsbseq	r1, r6, r5, asr #2
     910:	01010000 	mrseq	r0, (UNDEF: 1)
     914:	00005211 	andeq	r5, r0, r1, lsl r2
     918:	0003e600 	andeq	lr, r3, r0, lsl #12
     91c:	00a11200 	adceq	r1, r1, r0, lsl #4
     920:	000f0000 	andeq	r0, pc, r0
     924:	0003d605 	andeq	sp, r3, r5, lsl #12
     928:	00f61500 	rscseq	r1, r6, r0, lsl #10
     92c:	46060000 	strmi	r0, [r6], -r0
     930:	0003e617 	andeq	lr, r3, r7, lsl r6
     934:	11010100 	mrsne	r0, (UNDEF: 17)
     938:	00000052 	andeq	r0, r0, r2, asr r0
     93c:	00000409 	andeq	r0, r0, r9, lsl #8
     940:	0000a112 	andeq	sl, r0, r2, lsl r1
     944:	05000700 	streq	r0, [r0, #-1792]	; 0xfffff900
     948:	000003f9 	strdeq	r0, [r0], -r9
     94c:	0001e515 	andeq	lr, r1, r5, lsl r5
     950:	17470600 	strbne	r0, [r7, -r0, lsl #12]
     954:	00000409 	andeq	r0, r0, r9, lsl #8
     958:	1c160101 	ldfnes	f0, [r6], {1}
     95c:	09017905 	stmdbeq	r1, {r0, r2, r8, fp, ip, sp, lr}
     960:	00000497 	muleq	r0, r7, r4
     964:	4c524317 	mrrcmi	3, 1, r4, r2, cr7
     968:	017b0500 	cmneq	fp, r0, lsl #10
     96c:	00008211 	andeq	r8, r0, r1, lsl r2
     970:	00230200 	eoreq	r0, r3, r0, lsl #4
     974:	48524317 	ldmdami	r2, {r0, r1, r2, r4, r8, r9, lr}^
     978:	017c0500 	cmneq	ip, r0, lsl #10
     97c:	00008211 	andeq	r8, r0, r1, lsl r2
     980:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     984:	52444917 	subpl	r4, r4, #376832	; 0x5c000
     988:	017d0500 	cmneq	sp, r0, lsl #10
     98c:	00008211 	andeq	r8, r0, r1, lsl r2
     990:	08230200 	stmdaeq	r3!, {r9}
     994:	52444f17 	subpl	r4, r4, #23, 30	; 0x5c
     998:	017e0500 	cmneq	lr, r0, lsl #10
     99c:	00008211 	andeq	r8, r0, r1, lsl r2
     9a0:	0c230200 	sfmeq	f0, 4, [r3], #-0
     9a4:	0000b318 	andeq	fp, r0, r8, lsl r3
     9a8:	017f0500 	cmneq	pc, r0, lsl #10
     9ac:	00008211 	andeq	r8, r0, r1, lsl r2
     9b0:	10230200 	eorne	r0, r3, r0, lsl #4
     9b4:	52524217 	subspl	r4, r2, #1879048193	; 0x70000001
     9b8:	01800500 	orreq	r0, r0, r0, lsl #10
     9bc:	00008211 	andeq	r8, r0, r1, lsl r2
     9c0:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     9c4:	00022518 	andeq	r2, r2, r8, lsl r5
     9c8:	01810500 	orreq	r0, r1, r0, lsl #10
     9cc:	00008211 	andeq	r8, r0, r1, lsl r2
     9d0:	18230200 	stmdane	r3!, {r9}
     9d4:	00da1900 	sbcseq	r1, sl, r0, lsl #18
     9d8:	82050000 	andhi	r0, r5, #0
     9dc:	041c0301 	ldreq	r0, [ip], #-769	; 0xfffffcff
     9e0:	28160000 	ldmdacs	r6, {}	; <UNPREDICTABLE>
     9e4:	0901bb05 	stmdbeq	r1, {r0, r2, r8, r9, fp, ip, sp, pc}
     9e8:	0000054e 	andeq	r0, r0, lr, asr #10
     9ec:	00524317 	subseq	r4, r2, r7, lsl r3
     9f0:	1101bd05 	tstne	r1, r5, lsl #26
     9f4:	00000082 	andeq	r0, r0, r2, lsl #1
     9f8:	18002302 	stmdane	r0, {r1, r8, r9, sp}
     9fc:	0000000d 	andeq	r0, r0, sp
     a00:	1101be05 	tstne	r1, r5, lsl #28
     a04:	00000082 	andeq	r0, r0, r2, lsl #1
     a08:	17042302 	strne	r2, [r4, -r2, lsl #6]
     a0c:	00524943 	subseq	r4, r2, r3, asr #18
     a10:	1101bf05 	tstne	r1, r5, lsl #30
     a14:	00000082 	andeq	r0, r0, r2, lsl #1
     a18:	18082302 	stmdane	r8, {r1, r8, r9, sp}
     a1c:	0000017f 	andeq	r0, r0, pc, ror r1
     a20:	1101c005 	tstne	r1, r5
     a24:	00000082 	andeq	r0, r0, r2, lsl #1
     a28:	180c2302 	stmdane	ip, {r1, r8, r9, sp}
     a2c:	00000169 	andeq	r0, r0, r9, ror #2
     a30:	1101c105 	tstne	r1, r5, lsl #2
     a34:	00000082 	andeq	r0, r0, r2, lsl #1
     a38:	18102302 	ldmdane	r0, {r1, r8, r9, sp}
     a3c:	000000b8 	strheq	r0, [r0], -r8
     a40:	1101c205 	tstne	r1, r5, lsl #4
     a44:	00000082 	andeq	r0, r0, r2, lsl #1
     a48:	18142302 	ldmdane	r4, {r1, r8, r9, sp}
     a4c:	00000000 	andeq	r0, r0, r0
     a50:	1101c305 	tstne	r1, r5, lsl #6
     a54:	00000082 	andeq	r0, r0, r2, lsl #1
     a58:	18182302 	ldmdane	r8, {r1, r8, r9, sp}
     a5c:	00000177 	andeq	r0, r0, r7, ror r1
     a60:	1101c405 	tstne	r1, r5, lsl #8
     a64:	00000082 	andeq	r0, r0, r2, lsl #1
     a68:	181c2302 	ldmdane	ip, {r1, r8, r9, sp}
     a6c:	00000008 	andeq	r0, r0, r8
     a70:	1101c505 	tstne	r1, r5, lsl #10
     a74:	00000082 	andeq	r0, r0, r2, lsl #1
     a78:	17202302 	strne	r2, [r0, -r2, lsl #6]!
     a7c:	00525343 	subseq	r5, r2, r3, asr #6
     a80:	1101c605 	tstne	r1, r5, lsl #12
     a84:	00000082 	andeq	r0, r0, r2, lsl #1
     a88:	00242302 	eoreq	r2, r4, r2, lsl #6
     a8c:	0001fd19 	andeq	pc, r1, r9, lsl sp	; <UNPREDICTABLE>
     a90:	01c90500 	biceq	r0, r9, r0, lsl #10
     a94:	0004a403 	andeq	sl, r4, r3, lsl #8
     a98:	05541600 	ldrbeq	r1, [r4, #-1536]	; 0xfffffa00
     a9c:	06090239 			; <UNDEFINED> instruction: 0x06090239
     aa0:	18000007 	stmdane	r0, {r0, r1, r2}
     aa4:	0000042b 	andeq	r0, r0, fp, lsr #8
     aa8:	11023b05 	tstne	r2, r5, lsl #22
     aac:	0000006a 	andeq	r0, r0, sl, rrx
     ab0:	18002302 	stmdane	r0, {r1, r8, r9, sp}
     ab4:	000005ce 	andeq	r0, r0, lr, asr #11
     ab8:	11023c05 	tstne	r2, r5, lsl #24
     abc:	0000006a 	andeq	r0, r0, sl, rrx
     ac0:	18022302 	stmdane	r2, {r1, r8, r9, sp}
     ac4:	00000464 	andeq	r0, r0, r4, ror #8
     ac8:	11023d05 	tstne	r2, r5, lsl #26
     acc:	0000006a 	andeq	r0, r0, sl, rrx
     ad0:	18042302 	stmdane	r4, {r1, r8, r9, sp}
     ad4:	000005d8 	ldrdeq	r0, [r0], -r8
     ad8:	11023e05 	tstne	r2, r5, lsl #28
     adc:	0000006a 	andeq	r0, r0, sl, rrx
     ae0:	18062302 	stmdane	r6, {r1, r8, r9, sp}
     ae4:	000004b3 			; <UNDEFINED> instruction: 0x000004b3
     ae8:	11023f05 	tstne	r2, r5, lsl #30
     aec:	0000006a 	andeq	r0, r0, sl, rrx
     af0:	18082302 	stmdane	r8, {r1, r8, r9, sp}
     af4:	000005e2 	andeq	r0, r0, r2, ror #11
     af8:	11024005 	tstne	r2, r5
     afc:	0000006a 	andeq	r0, r0, sl, rrx
     b00:	180a2302 	stmdane	sl, {r1, r8, r9, sp}
     b04:	000004e6 	andeq	r0, r0, r6, ror #9
     b08:	11024105 	tstne	r2, r5, lsl #2
     b0c:	0000006a 	andeq	r0, r0, sl, rrx
     b10:	180c2302 	stmdane	ip, {r1, r8, r9, sp}
     b14:	000005ec 	andeq	r0, r0, ip, ror #11
     b18:	11024205 	tstne	r2, r5, lsl #4
     b1c:	0000006a 	andeq	r0, r0, sl, rrx
     b20:	180e2302 	stmdane	lr, {r1, r8, r9, sp}
     b24:	00000537 	andeq	r0, r0, r7, lsr r5
     b28:	11024305 	tstne	r2, r5, lsl #6
     b2c:	0000006a 	andeq	r0, r0, sl, rrx
     b30:	18102302 	ldmdane	r0, {r1, r8, r9, sp}
     b34:	000005f6 	strdeq	r0, [r0], -r6
     b38:	11024405 	tstne	r2, r5, lsl #8
     b3c:	0000006a 	andeq	r0, r0, sl, rrx
     b40:	18122302 	ldmdane	r2, {r1, r8, r9, sp}
     b44:	000005c9 	andeq	r0, r0, r9, asr #11
     b48:	11024505 	tstne	r2, r5, lsl #10
     b4c:	0000006a 	andeq	r0, r0, sl, rrx
     b50:	18142302 	ldmdane	r4, {r1, r8, r9, sp}
     b54:	00000600 	andeq	r0, r0, r0, lsl #12
     b58:	11024605 	tstne	r2, r5, lsl #12
     b5c:	0000006a 	andeq	r0, r0, sl, rrx
     b60:	18162302 	ldmdane	r6, {r1, r8, r9, sp}
     b64:	00000673 	andeq	r0, r0, r3, ror r6
     b68:	11024705 	tstne	r2, r5, lsl #14
     b6c:	0000006a 	andeq	r0, r0, sl, rrx
     b70:	18182302 	ldmdane	r8, {r1, r8, r9, sp}
     b74:	0000060a 	andeq	r0, r0, sl, lsl #12
     b78:	11024805 	tstne	r2, r5, lsl #16
     b7c:	0000006a 	andeq	r0, r0, sl, rrx
     b80:	181a2302 	ldmdane	sl, {r1, r8, r9, sp}
     b84:	000006f6 	strdeq	r0, [r0], -r6
     b88:	11024905 	tstne	r2, r5, lsl #18
     b8c:	0000006a 	andeq	r0, r0, sl, rrx
     b90:	181c2302 	ldmdane	ip, {r1, r8, r9, sp}
     b94:	00000811 	andeq	r0, r0, r1, lsl r8
     b98:	11024a05 	tstne	r2, r5, lsl #20
     b9c:	00000716 	andeq	r0, r0, r6, lsl r7
     ba0:	181e2302 	ldmdane	lr, {r1, r8, r9, sp}
     ba4:	0000069b 	muleq	r0, fp, r6
     ba8:	11024b05 	tstne	r2, r5, lsl #22
     bac:	0000006a 	andeq	r0, r0, sl, rrx
     bb0:	18402302 	stmdane	r0, {r1, r8, r9, sp}^
     bb4:	00000614 	andeq	r0, r0, r4, lsl r6
     bb8:	11024c05 	tstne	r2, r5, lsl #24
     bbc:	0000006a 	andeq	r0, r0, sl, rrx
     bc0:	18422302 	stmdane	r2, {r1, r8, r9, sp}^
     bc4:	0000034d 	andeq	r0, r0, sp, asr #6
     bc8:	11024d05 	tstne	r2, r5, lsl #26
     bcc:	0000006a 	andeq	r0, r0, sl, rrx
     bd0:	18442302 	stmdane	r4, {r1, r8, r9, sp}^
     bd4:	0000061e 	andeq	r0, r0, lr, lsl r6
     bd8:	11024e05 	tstne	r2, r5, lsl #28
     bdc:	0000006a 	andeq	r0, r0, sl, rrx
     be0:	17462302 	strbne	r2, [r6, -r2, lsl #6]
     be4:	00524e46 	subseq	r4, r2, r6, asr #28
     be8:	11024f05 	tstne	r2, r5, lsl #30
     bec:	0000006a 	andeq	r0, r0, sl, rrx
     bf0:	18482302 	stmdane	r8, {r1, r8, r9, sp}^
     bf4:	00000628 	andeq	r0, r0, r8, lsr #12
     bf8:	11025005 	tstne	r2, r5
     bfc:	0000006a 	andeq	r0, r0, sl, rrx
     c00:	184a2302 	stmdane	sl, {r1, r8, r9, sp}^
     c04:	000003b4 			; <UNDEFINED> instruction: 0x000003b4
     c08:	11025105 	tstne	r2, r5, lsl #2
     c0c:	0000006a 	andeq	r0, r0, sl, rrx
     c10:	184c2302 	stmdane	ip, {r1, r8, r9, sp}^
     c14:	000003c8 	andeq	r0, r0, r8, asr #7
     c18:	11025205 	tstne	r2, r5, lsl #4
     c1c:	0000006a 	andeq	r0, r0, sl, rrx
     c20:	184e2302 	stmdane	lr, {r1, r8, r9, sp}^
     c24:	000007bb 			; <UNDEFINED> instruction: 0x000007bb
     c28:	11025305 	tstne	r2, r5, lsl #6
     c2c:	0000006a 	andeq	r0, r0, sl, rrx
     c30:	18502302 	ldmdane	r0, {r1, r8, r9, sp}^
     c34:	00000833 	andeq	r0, r0, r3, lsr r8
     c38:	11025405 	tstne	r2, r5, lsl #8
     c3c:	0000006a 	andeq	r0, r0, sl, rrx
     c40:	00522302 	subseq	r2, r2, r2, lsl #6
     c44:	00006a11 	andeq	r6, r0, r1, lsl sl
     c48:	00071600 	andeq	r1, r7, r0, lsl #12
     c4c:	00a11200 	adceq	r1, r1, r0, lsl #4
     c50:	00100000 	andseq	r0, r0, r0
     c54:	00070604 	andeq	r0, r7, r4, lsl #12
     c58:	03a81900 			; <UNDEFINED> instruction: 0x03a81900
     c5c:	55050000 	strpl	r0, [r5, #-0]
     c60:	055b0302 	ldrbeq	r0, [fp, #-770]	; 0xfffffcfe
     c64:	040a0000 	streq	r0, [sl], #-0
     c68:	68072101 	stmdavs	r7, {r0, r8, sp}
     c6c:	1a000007 	bne	c90 <__Stack_Size+0x890>
     c70:	00000529 	andeq	r0, r0, r9, lsr #10
     c74:	76122201 	ldrvc	r2, [r2], -r1, lsl #4
     c78:	04000000 	streq	r0, [r0], #-0
     c7c:	2302160a 	movwcs	r1, #9738	; 0x260a
     c80:	07151a00 	ldreq	r1, [r5, -r0, lsl #20]
     c84:	23010000 	movwcs	r0, #4096	; 0x1000
     c88:	00007612 	andeq	r7, r0, r2, lsl r6
     c8c:	11050400 	tstne	r5, r0, lsl #8
     c90:	1a002302 	bne	98a0 <__Stack_Size+0x94a0>
     c94:	00000592 	muleq	r0, r2, r5
     c98:	76122401 	ldrvc	r2, [r2], -r1, lsl #8
     c9c:	04000000 	streq	r0, [r0], #-0
     ca0:	23021001 	movwcs	r1, #8193	; 0x2001
     ca4:	041b0000 	ldreq	r0, [fp], #-0
     ca8:	830e1f01 	movwhi	r1, #61185	; 0xef01
     cac:	1c000007 	stcne	0, cr0, [r0], {7}
     cb0:	00000525 	andeq	r0, r0, r5, lsr #10
     cb4:	76102001 	ldrvc	r2, [r0], -r1
     cb8:	1d000000 	stcne	0, cr0, [r0, #-0]
     cbc:	00000728 	andeq	r0, r0, r8, lsr #14
     cc0:	07680400 	strbeq	r0, [r8, -r0, lsl #8]!
     cc4:	040a0000 	streq	r0, [sl], #-0
     cc8:	c8072a01 	stmdagt	r7, {r0, r9, fp, sp}
     ccc:	1a000007 	bne	cf0 <__Stack_Size+0x8f0>
     cd0:	000007f4 	strdeq	r0, [r0], -r4
     cd4:	76122b01 	ldrvc	r2, [r2], -r1, lsl #22
     cd8:	04000000 	streq	r0, [r0], #-0
     cdc:	2302160a 	movwcs	r1, #9738	; 0x260a
     ce0:	056a1a00 	strbeq	r1, [sl, #-2560]!	; 0xfffff600
     ce4:	2c010000 	stccs	0, cr0, [r1], {-0}
     ce8:	00007612 	andeq	r7, r0, r2, lsl r6
     cec:	11050400 	tstne	r5, r0, lsl #8
     cf0:	1a002302 	bne	9900 <__Stack_Size+0x9500>
     cf4:	00000745 	andeq	r0, r0, r5, asr #14
     cf8:	76122d01 	ldrvc	r2, [r2], -r1, lsl #26
     cfc:	04000000 	streq	r0, [r0], #-0
     d00:	23021001 	movwcs	r1, #8193	; 0x2001
     d04:	041b0000 	ldreq	r0, [fp], #-0
     d08:	e30e2801 	movw	r2, #59393	; 0xe801
     d0c:	1c000007 	stcne	0, cr0, [r0], {7}
     d10:	000007f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     d14:	76102901 	ldrvc	r2, [r0], -r1, lsl #18
     d18:	1d000000 	stcne	0, cr0, [r0, #-0]
     d1c:	00000788 	andeq	r0, r0, r8, lsl #15
     d20:	07c80400 	strbeq	r0, [r8, r0, lsl #8]
     d24:	100a0000 	andne	r0, sl, r0
     d28:	20091d01 	andcs	r1, r9, r1, lsl #26
     d2c:	0b000008 	bleq	d54 <__Stack_Size+0x954>
     d30:	0000079c 	muleq	r0, ip, r7
     d34:	82171e01 	andshi	r1, r7, #1, 28
     d38:	02000000 	andeq	r0, r0, #0
     d3c:	831e0023 	tsthi	lr, #35	; 0x23
     d40:	02000007 	andeq	r0, r0, #7
     d44:	090b0423 	stmdbeq	fp, {r0, r1, r5, sl}
     d48:	01000007 	tsteq	r0, r7
     d4c:	00821727 	addeq	r1, r2, r7, lsr #14
     d50:	23020000 	movwcs	r0, #8192	; 0x2000
     d54:	07e31e08 	strbeq	r1, [r3, r8, lsl #28]!
     d58:	23020000 	movwcs	r0, #8192	; 0x2000
     d5c:	6903000c 	stmdbvs	r3, {r2, r3}
     d60:	01000004 	tsteq	r0, r4
     d64:	07e80230 			; <UNDEFINED> instruction: 0x07e80230
     d68:	a8110000 	ldmdage	r1, {}	; <UNPREDICTABLE>
     d6c:	3c000000 	stccc	0, cr0, [r0], {-0}
     d70:	12000008 	andne	r0, r0, #8
     d74:	000000a1 	andeq	r0, r0, r1, lsr #1
     d78:	521f0007 	andspl	r0, pc, #7
     d7c:	01000007 	tsteq	r0, r7
     d80:	082c0a32 	stmdaeq	ip!, {r1, r4, r5, r9, fp}
     d84:	05010000 	streq	r0, [r1, #-0]
     d88:	00001803 	andeq	r1, r0, r3, lsl #16
     d8c:	04391f20 	ldrteq	r1, [r9], #-3872	; 0xfffff0e0
     d90:	33010000 	movwcc	r0, #4096	; 0x1000
     d94:	00082c0a 	andeq	r2, r8, sl, lsl #24
     d98:	03050100 	movweq	r0, #20736	; 0x5100
     d9c:	20000038 	andcs	r0, r0, r8, lsr r0
     da0:	0002b120 	andeq	fp, r2, r0, lsr #2
     da4:	16350100 	ldrtne	r0, [r5], -r0, lsl #2
     da8:	0000011b 	andeq	r0, r0, fp, lsl r1
     dac:	000c0305 	andeq	r0, ip, r5, lsl #6
     db0:	30202000 	eorcc	r2, r0, r0
     db4:	01000004 	tsteq	r0, r4
     db8:	00411047 	subeq	r1, r1, r7, asr #32
     dbc:	03050000 	movweq	r0, #20480	; 0x5000
     dc0:	20000008 	andcs	r0, r0, r8
     dc4:	00044420 	andeq	r4, r4, r0, lsr #8
     dc8:	17480100 	strbne	r0, [r8, -r0, lsl #2]
     dcc:	00000898 	muleq	r0, r8, r8
     dd0:	00040305 	andeq	r0, r4, r5, lsl #6
     dd4:	04072000 	streq	r2, [r7], #-0
     dd8:	00000052 	andeq	r0, r0, r2, asr r0
     ddc:	00034320 	andeq	r4, r3, r0, lsr #6
     de0:	11490100 	mrsne	r0, (UNDEF: 89)
     de4:	0000005e 	andeq	r0, r0, lr, asr r0
     de8:	000a0305 	andeq	r0, sl, r5, lsl #6
     dec:	1d202000 	stcne	0, cr2, [r0, #-0]
     df0:	01000004 	tsteq	r0, r4
     df4:	00411064 	subeq	r1, r1, r4, rrx
     df8:	03050000 	movweq	r0, #20480	; 0x5000
     dfc:	20000016 	andcs	r0, r0, r6, lsl r0
     e00:	00030820 	andeq	r0, r3, r0, lsr #16
     e04:	11aa0100 			; <UNDEFINED> instruction: 0x11aa0100
     e08:	0000005e 	andeq	r0, r0, lr, asr r0
     e0c:	00000305 	andeq	r0, r0, r5, lsl #6
     e10:	04162000 	ldreq	r2, [r6], #-0
     e14:	05013701 	streq	r3, [r1, #-1793]	; 0xfffff8ff
     e18:	00000918 	andeq	r0, r0, r8, lsl r9
     e1c:	0007f421 	andeq	pc, r7, r1, lsr #8
     e20:	01380100 	teqeq	r8, r0, lsl #2
     e24:	00007610 	andeq	r7, r0, r0, lsl r6
     e28:	160a0400 	strne	r0, [sl], -r0, lsl #8
     e2c:	21002302 	tstcs	r0, r2, lsl #6
     e30:	0000056a 	andeq	r0, r0, sl, ror #10
     e34:	10013901 	andne	r3, r1, r1, lsl #18
     e38:	00000076 	andeq	r0, r0, r6, ror r0
     e3c:	02110504 	andseq	r0, r1, #4, 10	; 0x1000000
     e40:	45210023 	strmi	r0, [r1, #-35]!	; 0xffffffdd
     e44:	01000007 	tsteq	r0, r7
     e48:	7610013a 			; <UNDEFINED> instruction: 0x7610013a
     e4c:	04000000 	streq	r0, [r0], #-0
     e50:	23021001 	movwcs	r1, #8193	; 0x2001
     e54:	04220000 	strteq	r0, [r2], #-0
     e58:	0c013501 	cfstr32eq	mvfx3, [r1], {1}
     e5c:	00000935 	andeq	r0, r0, r5, lsr r9
     e60:	00034723 	andeq	r4, r3, r3, lsr #14
     e64:	01360100 	teqeq	r6, r0, lsl #2
     e68:	0000760e 	andeq	r7, r0, lr, lsl #12
     e6c:	08d41d00 	ldmeq	r4, {r8, sl, fp, ip}^
     e70:	04000000 	streq	r0, [r0], #-0
     e74:	00000918 	andeq	r0, r0, r8, lsl r9
     e78:	33010816 	movwcc	r0, #6166	; 0x1816
     e7c:	095d0901 	ldmdbeq	sp, {r0, r8, fp}^
     e80:	10180000 	andsne	r0, r8, r0
     e84:	01000007 	tsteq	r0, r7
     e88:	82150134 	andshi	r0, r5, #52, 2
     e8c:	02000000 	andeq	r0, r0, #0
     e90:	351e0023 	ldrcc	r0, [lr, #-35]	; 0xffffffdd
     e94:	02000009 	andeq	r0, r0, #9
     e98:	19000423 	stmdbne	r0, {r0, r1, r5, sl}
     e9c:	00000297 	muleq	r0, r7, r2
     ea0:	02013d01 	andeq	r3, r1, #1, 26	; 0x40
     ea4:	0000093a 	andeq	r0, r0, sl, lsr r9
     ea8:	04890124 	streq	r0, [r9], #292	; 0x124
     eac:	4d010000 	stcmi	0, cr0, [r1, #-0]
     eb0:	95010501 	strls	r0, [r1, #-1281]	; 0xfffffaff
     eb4:	54000000 	strpl	r0, [r0], #-0
     eb8:	ae080006 	cdpge	0, 0, cr0, cr8, cr6, {0}
     ebc:	f1080006 	cps	#6
     ec0:	01000002 	tsteq	r0, r2
     ec4:	00000a1e 	andeq	r0, r0, lr, lsl sl
     ec8:	78646925 	stmdavc	r4!, {r0, r2, r5, r8, fp, sp, lr}^
     ecc:	014d0100 	mrseq	r0, (UNDEF: 93)
     ed0:	0000411a 	andeq	r4, r0, sl, lsl r1
     ed4:	00031500 	andeq	r1, r3, r0, lsl #10
     ed8:	00031100 	andeq	r1, r3, r0, lsl #2
     edc:	75622500 	strbvc	r2, [r2, #-1280]!	; 0xfffffb00
     ee0:	4d010066 	stcmi	0, cr0, [r1, #-408]	; 0xfffffe68
     ee4:	0a1e2901 	beq	78b2f0 <__Stack_Size+0x78aef0>
     ee8:	033c0000 	teqeq	ip, #0
     eec:	03360000 	teqeq	r6, #0
     ef0:	e4260000 	strt	r0, [r6], #-0
     ef4:	01000003 	tsteq	r0, r3
     ef8:	2410014e 	ldrcs	r0, [r0], #-334	; 0xfffffeb2
     efc:	6e00000a 	cdpvs	0, 0, cr0, cr0, cr10, {0}
     f00:	6a000003 	bvs	f14 <__Stack_Size+0xb14>
     f04:	27000003 	strcs	r0, [r0, -r3]
     f08:	01007a73 	tsteq	r0, r3, ror sl
     f0c:	9507014f 	strls	r0, [r7, #-335]	; 0xfffffeb1
     f10:	98000000 	stmdals	r0, {}	; <UNPREDICTABLE>
     f14:	96000003 	strls	r0, [r0], -r3
     f18:	27000003 	strcs	r0, [r0, -r3]
     f1c:	5101006e 	tstpl	r1, lr, rrx
     f20:	00950701 	addseq	r0, r5, r1, lsl #14
     f24:	03b10000 			; <UNDEFINED> instruction: 0x03b10000
     f28:	03ab0000 			; <UNDEFINED> instruction: 0x03ab0000
     f2c:	69270000 	stmdbvs	r7!, {}	; <UNPREDICTABLE>
     f30:	5201006e 	andpl	r0, r1, #110	; 0x6e
     f34:	0a2a0d01 	beq	a84340 <__Stack_Size+0xa83f40>
     f38:	03e80000 	mvneq	r0, #0
     f3c:	03e20000 	mvneq	r0, #0
     f40:	00280000 	eoreq	r0, r8, r0
     f44:	27000001 	strcs	r0, [r0, -r1]
     f48:	53010069 	movwpl	r0, #4201	; 0x1069
     f4c:	00950b01 	addseq	r0, r5, r1, lsl #22
     f50:	04150000 	ldreq	r0, [r5], #-0
     f54:	04130000 	ldreq	r0, [r3], #-0
     f58:	00000000 	andeq	r0, r0, r0
     f5c:	005e0407 	subseq	r0, lr, r7, lsl #8
     f60:	04070000 	streq	r0, [r7], #-0
     f64:	0000095d 	andeq	r0, r0, sp, asr r9
     f68:	00760407 	rsbseq	r0, r6, r7, lsl #8
     f6c:	01290000 			; <UNDEFINED> instruction: 0x01290000
     f70:	00000378 	andeq	r0, r0, r8, ror r3
     f74:	06013f01 	streq	r3, [r1], -r1, lsl #30
     f78:	0005a401 	andeq	sl, r5, r1, lsl #8
     f7c:	0005f808 	andeq	pc, r5, r8, lsl #16
     f80:	00042908 	andeq	r2, r4, r8, lsl #18
     f84:	0aec0100 	beq	ffb0138c <BootRAM+0xea71b2d>
     f88:	69250000 	stmdbvs	r5!, {}	; <UNPREDICTABLE>
     f8c:	01007864 	tsteq	r0, r4, ror #16
     f90:	411c013f 	tstmi	ip, pc, lsr r1
     f94:	4f000000 	svcmi	0x00000000
     f98:	49000004 	stmdbmi	r0, {r2}
     f9c:	2a000004 	bcs	fb4 <__Stack_Size+0xbb4>
     fa0:	00667562 	rsbeq	r7, r6, r2, ror #10
     fa4:	30013f01 	andcc	r3, r1, r1, lsl #30
     fa8:	00000898 	muleq	r0, r8, r8
     fac:	d52b5101 	strle	r5, [fp, #-257]!	; 0xfffffeff
     fb0:	01000006 	tsteq	r0, r6
     fb4:	5e3e013f 	mrcpl	1, 1, r0, cr14, cr15, {1}
     fb8:	01000000 	mrseq	r0, (UNDEF: 0)
     fbc:	03e42652 	mvneq	r2, #85983232	; 0x5200000
     fc0:	40010000 	andmi	r0, r1, r0
     fc4:	0a241001 	beq	904fd0 <__Stack_Size+0x904bd0>
     fc8:	047d0000 	ldrbteq	r0, [sp], #-0
     fcc:	047b0000 	ldrbteq	r0, [fp], #-0
     fd0:	4e270000 	cdpmi	0, 2, cr0, cr7, cr0, {0}
     fd4:	41010032 	tstmi	r1, r2, lsr r0
     fd8:	005e0c01 	subseq	r0, lr, r1, lsl #24
     fdc:	04920000 	ldreq	r0, [r2], #0
     fe0:	04900000 	ldreq	r0, [r0], #0
     fe4:	46260000 	strtmi	r0, [r6], -r0
     fe8:	01000002 	tsteq	r0, r2
     fec:	1e0d0143 	adfneem	f0, f5, f3
     ff0:	a700000a 	strge	r0, [r0, -sl]
     ff4:	a5000004 	strge	r0, [r0, #-4]
     ff8:	27000004 	strcs	r0, [r0, -r4]
     ffc:	0074756f 	rsbseq	r7, r4, pc, ror #10
    1000:	0d014401 	cfstrseq	mvf4, [r1, #-4]
    1004:	00000a2a 	andeq	r0, r0, sl, lsr #20
    1008:	000004c0 	andeq	r0, r0, r0, asr #9
    100c:	000004ba 			; <UNDEFINED> instruction: 0x000004ba
    1010:	0000c828 	andeq	ip, r0, r8, lsr #16
    1014:	00692700 	rsbeq	r2, r9, r0, lsl #14
    1018:	10014501 	andne	r4, r1, r1, lsl #10
    101c:	0000005e 	andeq	r0, r0, lr, asr r0
    1020:	000004fb 	strdeq	r0, [r0], -fp
    1024:	000004f7 	strdeq	r0, [r0], -r7
    1028:	012c0000 			; <UNDEFINED> instruction: 0x012c0000
    102c:	000002de 	ldrdeq	r0, [r0], -lr
    1030:	06010901 	streq	r0, [r1], -r1, lsl #18
    1034:	0800047c 	stmdaeq	r0, {r2, r3, r4, r5, r6, sl}
    1038:	080005a4 	stmdaeq	r0, {r2, r5, r7, r8, sl}
    103c:	0000051b 	andeq	r0, r0, fp, lsl r5
    1040:	000bd201 	andeq	sp, fp, r1, lsl #4
    1044:	00a82d00 	adceq	r2, r8, r0, lsl #26
    1048:	0b240000 	bleq	901050 <__Stack_Size+0x900c50>
    104c:	69270000 	stmdbvs	r7!, {}	; <UNPREDICTABLE>
    1050:	010f0100 	mrseq	r0, (UNDEF: 31)
    1054:	00004111 	andeq	r4, r0, r1, lsl r1
    1058:	00053f00 	andeq	r3, r5, r0, lsl #30
    105c:	00053b00 	andeq	r3, r5, r0, lsl #22
    1060:	ec2e0000 	stc	0, cr0, [lr], #-0
    1064:	40080004 	andmi	r0, r8, r4
    1068:	66080005 	strvs	r0, [r8], -r5
    106c:	2600000b 	strcs	r0, [r0], -fp
    1070:	000006cc 	andeq	r0, r0, ip, asr #13
    1074:	0d011b01 	vstreq	d1, [r1, #-4]
    1078:	00000041 	andeq	r0, r0, r1, asr #32
    107c:	00000564 	andeq	r0, r0, r4, ror #10
    1080:	00000562 	andeq	r0, r0, r2, ror #10
    1084:	00050e2f 	andeq	r0, r5, pc, lsr #28
    1088:	000b5608 	andeq	r5, fp, r8, lsl #12
    108c:	50013000 	andpl	r3, r1, r0
    1090:	00007502 	andeq	r7, r0, r2, lsl #10
    1094:	00053031 	andeq	r3, r5, r1, lsr r0
    1098:	50013008 	andpl	r3, r1, r8
    109c:	08007505 	stmdaeq	r0, {r0, r2, r8, sl, ip, sp, lr}
    10a0:	00002180 	andeq	r2, r0, r0, lsl #3
    10a4:	00048c32 	andeq	r8, r4, r2, lsr ip
    10a8:	0011f108 	andseq	pc, r1, r8, lsl #2
    10ac:	04ce3300 	strbeq	r3, [lr], #768	; 0x300
    10b0:	0c600800 	stcleq	8, cr0, [r0], #-0
    10b4:	0b970000 	bleq	fe5c10bc <BootRAM+0xd53185d>
    10b8:	01300000 	teqeq	r0, r0
    10bc:	00740250 	rsbseq	r0, r4, r0, asr r2
    10c0:	02510130 	subseq	r0, r1, #48, 2
    10c4:	01300074 	teqeq	r0, r4, ror r0
    10c8:	30380152 	eorscc	r0, r8, r2, asr r1
    10cc:	03055301 	movweq	r5, #21249	; 0x5301
    10d0:	080006af 	stmdaeq	r0, {r0, r1, r2, r3, r5, r7, r9, sl}
    10d4:	04da3300 	ldrbeq	r3, [sl], #768	; 0x300
    10d8:	0c600800 	stcleq	8, cr0, [r0], #-0
    10dc:	0bbf0000 	bleq	fefc10e4 <BootRAM+0xdf31885>
    10e0:	01300000 	teqeq	r0, r0
    10e4:	80090250 	andhi	r0, r9, r0, asr r2
    10e8:	02510130 	subseq	r0, r1, #48, 2
    10ec:	01300074 	teqeq	r0, r4, ror r0
    10f0:	30380152 	eorscc	r0, r8, r2, asr r1
    10f4:	03055301 	movweq	r5, #21249	; 0x5301
    10f8:	080005f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl}
    10fc:	04e23200 	strbteq	r3, [r2], #512	; 0x200
    1100:	11fa0800 	mvnsne	r0, r0, lsl #16
    1104:	4e320000 	cdpmi	0, 3, cr0, cr2, cr0, {0}
    1108:	f1080005 	cps	#5
    110c:	00000011 	andeq	r0, r0, r1, lsl r0
    1110:	075c0134 	smmlareq	ip, r4, r1, r0
    1114:	d6010000 	strle	r0, [r1], -r0
    1118:	03400106 	movteq	r0, #262	; 0x106
    111c:	047c0800 	ldrbteq	r0, [ip], #-2048	; 0xfffff800
    1120:	05770800 	ldrbeq	r0, [r7, #-2048]!	; 0xfffff800
    1124:	60010000 	andvs	r0, r1, r0
    1128:	3500000c 	strcc	r0, [r0, #-12]
    112c:	000006cc 	andeq	r0, r0, ip, asr #13
    1130:	4121d601 			; <UNDEFINED> instruction: 0x4121d601
    1134:	9b000000 	blls	113c <__Stack_Size+0xd3c>
    1138:	97000005 	strls	r0, [r0, -r5]
    113c:	35000005 	strcc	r0, [r0, #-5]
    1140:	000007c2 	andeq	r0, r0, r2, asr #15
    1144:	4130d601 	teqmi	r0, r1, lsl #12
    1148:	c9000000 	stmdbgt	r0, {}	; <UNPREDICTABLE>
    114c:	b9000005 	stmdblt	r0, {r0, r2}
    1150:	35000005 	strcc	r0, [r0, #-5]
    1154:	000006d5 	ldrdeq	r0, [r0], -r5
    1158:	5e42d601 	cdppl	6, 4, cr13, cr2, cr1, {0}
    115c:	3b000000 	blcc	1164 <__Stack_Size+0xd64>
    1160:	35000006 	strcc	r0, [r0, #-6]
    1164:	36000006 	strcc	r0, [r0], -r6
    1168:	000009d2 	ldrdeq	r0, [r0], -r2
    116c:	a851d601 	ldmdage	r1, {r0, r9, sl, ip, lr, pc}^
    1170:	01000000 	mrseq	r0, (UNDEF: 0)
    1174:	07d53753 			; <UNDEFINED> instruction: 0x07d53753
    1178:	d7010000 	strle	r0, [r1, -r0]
    117c:	0000410b 	andeq	r4, r0, fp, lsl #2
    1180:	00066f00 	andeq	r6, r6, r0, lsl #30
    1184:	00066700 	andeq	r6, r6, r0, lsl #14
    1188:	75623800 	strbvc	r3, [r2, #-2048]!	; 0xfffff800
    118c:	dd010066 	stcle	0, cr0, [r1, #-408]	; 0xfffffe68
    1190:	00005e0c 	andeq	r5, r0, ip, lsl #28
    1194:	0006cb00 	andeq	ip, r6, r0, lsl #22
    1198:	0006b900 	andeq	fp, r6, r0, lsl #18
    119c:	01340000 	teqeq	r4, r0
    11a0:	0000063e 	andeq	r0, r0, lr, lsr r6
    11a4:	0106ab01 	tsteq	r6, r1, lsl #22
    11a8:	08000254 	stmdaeq	r0, {r2, r4, r6, r9}
    11ac:	08000340 	stmdaeq	r0, {r6, r8, r9}
    11b0:	0000075e 	andeq	r0, r0, lr, asr r7
    11b4:	000cf401 	andeq	pc, ip, r1, lsl #8
    11b8:	06cc3500 	strbeq	r3, [ip], r0, lsl #10
    11bc:	ab010000 	blge	411c4 <__Stack_Size+0x40dc4>
    11c0:	0000411a 	andeq	r4, r0, sl, lsl r1
    11c4:	00078200 	andeq	r8, r7, r0, lsl #4
    11c8:	00077e00 	andeq	r7, r7, r0, lsl #28
    11cc:	07c23500 	strbeq	r3, [r2, r0, lsl #10]
    11d0:	ab010000 	blge	411d8 <__Stack_Size+0x40dd8>
    11d4:	00004129 	andeq	r4, r0, r9, lsr #2
    11d8:	0007b000 	andeq	fp, r7, r0
    11dc:	0007a000 	andeq	sl, r7, r0
    11e0:	06d53500 	ldrbeq	r3, [r5], r0, lsl #10
    11e4:	ab010000 	blge	411ec <__Stack_Size+0x40dec>
    11e8:	00005e3b 	andeq	r5, r0, fp, lsr lr
    11ec:	00082200 	andeq	r2, r8, r0, lsl #4
    11f0:	00081c00 	andeq	r1, r8, r0, lsl #24
    11f4:	09d23500 	ldmibeq	r2, {r8, sl, ip, sp}^
    11f8:	ab010000 	blge	41200 <__Stack_Size+0x40e00>
    11fc:	0000a84a 	andeq	sl, r0, sl, asr #16
    1200:	00085800 	andeq	r5, r8, r0, lsl #16
    1204:	00084e00 	andeq	r4, r8, r0, lsl #28
    1208:	07d53700 	ldrbeq	r3, [r5, r0, lsl #14]
    120c:	ac010000 	stcge	0, cr0, [r1], {-0}
    1210:	0000410b 	andeq	r4, r0, fp, lsl #2
    1214:	0008aa00 	andeq	sl, r8, r0, lsl #20
    1218:	0008a600 	andeq	sl, r8, r0, lsl #12
    121c:	75623800 	strbvc	r3, [r2, #-2048]!	; 0xfffff800
    1220:	b5010066 	strlt	r0, [r1, #-102]	; 0xffffff9a
    1224:	00005e0c 	andeq	r5, r0, ip, lsl #28
    1228:	0008dd00 	andeq	sp, r8, r0, lsl #26
    122c:	0008d300 	andeq	sp, r8, r0, lsl #6
    1230:	ee390000 	cdp	0, 3, cr0, cr9, cr0, {0}
    1234:	01000006 	tsteq	r0, r6
    1238:	ae010d66 	cdpge	13, 0, cr0, cr1, cr6, {3}
    123c:	c8080006 	stmdagt	r8, {r1, r2}
    1240:	42080007 	andmi	r0, r8, #7
    1244:	01000009 	tsteq	r0, r9
    1248:	00000fe5 	andeq	r0, r0, r5, ror #31
    124c:	0006cc35 	andeq	ip, r6, r5, lsr ip
    1250:	1d660100 	stfnee	f0, [r6, #-0]
    1254:	00000041 	andeq	r0, r0, r1, asr #32
    1258:	00000982 	andeq	r0, r0, r2, lsl #19
    125c:	0000097a 	andeq	r0, r0, sl, ror r9
    1260:	0002c920 	andeq	ip, r2, r0, lsr #18
    1264:	13670100 	cmnne	r7, #0, 2
    1268:	0000005e 	andeq	r0, r0, lr, asr r0
    126c:	00140305 	andseq	r0, r4, r5, lsl #6
    1270:	fd372000 	ldc2	0, cr2, [r7, #-0]
    1274:	01000007 	tsteq	r0, r7
    1278:	005e0c68 	subseq	r0, lr, r8, ror #24
    127c:	09c40000 	stmibeq	r4, {}^	; <UNPREDICTABLE>
    1280:	09bc0000 	ldmibeq	ip!, {}	; <UNPREDICTABLE>
    1284:	c3370000 	teqgt	r7, #0
    1288:	01000000 	mrseq	r0, (UNDEF: 0)
    128c:	00410b69 	subeq	r0, r1, r9, ror #22
    1290:	09fa0000 	ldmibeq	sl!, {}^	; <UNPREDICTABLE>
    1294:	09f80000 	ldmibeq	r8!, {}^	; <UNPREDICTABLE>
    1298:	72380000 	eorsvc	r0, r8, #0
    129c:	01007165 	tsteq	r0, r5, ror #2
    12a0:	00410b79 	subeq	r0, r1, r9, ror fp
    12a4:	0a230000 	beq	8c12ac <__Stack_Size+0x8c0eac>
    12a8:	0a170000 	beq	5c12b0 <__Stack_Size+0x5c0eb0>
    12ac:	302d0000 	eorcc	r0, sp, r0
    12b0:	bb000001 	bllt	12bc <__Stack_Size+0xebc>
    12b4:	2000000e 	andcs	r0, r0, lr
    12b8:	00000878 	andeq	r0, r0, r8, ror r8
    12bc:	e50b9001 	str	r9, [fp, #-1]
    12c0:	0200000f 	andeq	r0, r0, #15
    12c4:	d5206c91 	strle	r6, [r0, #-3217]!	; 0xfffff36f
    12c8:	01000006 	tsteq	r0, r6
    12cc:	005e0e91 			; <UNDEFINED> instruction: 0x005e0e91
    12d0:	91020000 	mrsls	r0, (UNDEF: 2)
    12d4:	07082e6a 	streq	r2, [r8, -sl, ror #28]
    12d8:	071c0800 	ldreq	r0, [ip, -r0, lsl #16]
    12dc:	0dd90800 	ldcleq	8, cr0, [r9]
    12e0:	78200000 	stmdavc	r0!, {}	; <UNPREDICTABLE>
    12e4:	01000008 	tsteq	r0, r8
    12e8:	0fe71781 	svceq	0x00e71781
    12ec:	91020000 	mrsls	r0, (UNDEF: 2)
    12f0:	06d5206c 	ldrbeq	r2, [r5], ip, rrx
    12f4:	82010000 	andhi	r0, r1, #0
    12f8:	00005e14 	andeq	r5, r0, r4, lsl lr
    12fc:	6a910200 	bvs	fe441b04 <BootRAM+0xd3b22a5>
    1300:	00071c3a 	andeq	r1, r7, sl, lsr ip
    1304:	00129008 	andseq	r9, r2, r8
    1308:	51013000 	mrspl	r3, (UNDEF: 1)
    130c:	306c9102 	rsbcc	r9, ip, r2, lsl #2
    1310:	91025201 	tstls	r2, r1, lsl #4
    1314:	3b00006a 	blcc	14c4 <__Stack_Size+0x10c4>
    1318:	0000122f 	andeq	r1, r0, pc, lsr #4
    131c:	080006f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, sl}
    1320:	0006f401 	andeq	pc, r6, r1, lsl #8
    1324:	0006f808 	andeq	pc, r6, r8, lsl #16
    1328:	0b890108 	bleq	fe241750 <BootRAM+0xd1b1ef1>
    132c:	00000e1a 	andeq	r0, r0, sl, lsl lr
    1330:	0012553c 	andseq	r5, r2, ip, lsr r5
    1334:	000a7900 	andeq	r7, sl, r0, lsl #18
    1338:	000a7700 	andeq	r7, sl, r0, lsl #14
    133c:	12493c00 	subne	r3, r9, #0, 24
    1340:	0a8f0000 	beq	fe3c1348 <BootRAM+0xd331ae9>
    1344:	0a8d0000 	beq	fe34134c <BootRAM+0xd2b1aed>
    1348:	3d3c0000 	ldccc	0, cr0, [ip, #-0]
    134c:	a9000012 	stmdbge	r0, {r1, r4}
    1350:	a700000a 	strge	r0, [r0, -sl]
    1354:	0000000a 	andeq	r0, r0, sl
    1358:	000fee3d 	andeq	lr, pc, sp, lsr lr	; <UNPREDICTABLE>
    135c:	00072c00 	andeq	r2, r7, r0, lsl #24
    1360:	01500108 	cmpeq	r0, r8, lsl #2
    1364:	94010000 	strls	r0, [r1], #-0
    1368:	000e5a05 	andeq	r5, lr, r5, lsl #20
    136c:	10083c00 	andne	r3, r8, r0, lsl #24
    1370:	0abf0000 	beq	fefc1378 <BootRAM+0xdf31b19>
    1374:	0abd0000 	beq	fef4137c <BootRAM+0xdeb1b1d>
    1378:	fc3c0000 	ldc2	0, cr0, [ip], #-0
    137c:	d500000f 	strle	r0, [r0, #-15]
    1380:	d300000a 	movwle	r0, #10
    1384:	3a00000a 	bcc	13b4 <__Stack_Size+0xfb4>
    1388:	0800073a 	stmdaeq	r0, {r1, r3, r4, r5, r8, r9, sl}
    138c:	00001015 	andeq	r1, r0, r5, lsl r0
    1390:	02500130 	subseq	r0, r0, #48, 2
    1394:	00008009 	andeq	r8, r0, r9
    1398:	00122f3b 	andseq	r2, r2, fp, lsr pc
    139c:	00073e00 	andeq	r3, r7, r0, lsl #28
    13a0:	073e0108 	ldreq	r0, [lr, -r8, lsl #2]!
    13a4:	07460800 	strbeq	r0, [r6, -r0, lsl #16]
    13a8:	8c010800 	stchi	8, cr0, [r1], {-0}
    13ac:	000e9b0b 	andeq	r9, lr, fp, lsl #22
    13b0:	12553c00 	subsne	r3, r5, #0, 24
    13b4:	0aeb0000 	beq	ffac13bc <BootRAM+0xea31b5d>
    13b8:	0ae90000 	beq	ffa413c0 <BootRAM+0xe9b1b61>
    13bc:	493c0000 	ldmdbmi	ip!, {}	; <UNPREDICTABLE>
    13c0:	01000012 	tsteq	r0, r2, lsl r0
    13c4:	ff00000b 			; <UNDEFINED> instruction: 0xff00000b
    13c8:	3c00000a 	stccc	0, cr0, [r0], {10}
    13cc:	0000123d 	andeq	r1, r0, sp, lsr r2
    13d0:	00000b1b 	andeq	r0, r0, fp, lsl fp
    13d4:	00000b19 	andeq	r0, r0, r9, lsl fp
    13d8:	075c3a00 	ldrbeq	r3, [ip, -r0, lsl #20]
    13dc:	11930800 	orrsne	r0, r3, r0, lsl #16
    13e0:	01300000 	teqeq	r0, r0
    13e4:	0c030550 	cfstr32eq	mvfx0, [r3], {80}	; 0x50
    13e8:	30200000 	eorcc	r0, r0, r0
    13ec:	91025101 	tstls	r2, r1, lsl #2
    13f0:	5201306c 	andpl	r3, r1, #108	; 0x6c
    13f4:	006a9102 	rsbeq	r9, sl, r2, lsl #2
    13f8:	12043d00 	andne	r3, r4, #0, 26
    13fc:	06ce0000 	strbeq	r0, [lr], r0
    1400:	18010800 	stmdane	r1, {fp}
    1404:	01000001 	tsteq	r0, r1
    1408:	0f03076d 	svceq	0x0003076d
    140c:	163c0000 	ldrtne	r0, [ip], -r0
    1410:	31000012 	tstcc	r0, r2, lsl r0
    1414:	2f00000b 	svccs	0x0000000b
    1418:	3c00000b 	stccc	0, cr0, [r0], {11}
    141c:	00001222 	andeq	r1, r0, r2, lsr #4
    1420:	00000b47 	andeq	r0, r0, r7, asr #22
    1424:	00000b45 	andeq	r0, r0, r5, asr #22
    1428:	0006d83a 	andeq	sp, r6, sl, lsr r8
    142c:	00096a08 	andeq	r6, r9, r8, lsl #20
    1430:	50013000 	andpl	r3, r1, r0
    1434:	01303101 	teqeq	r0, r1, lsl #2
    1438:	0c030551 	cfstr32eq	mvfx0, [r3], {81}	; 0x51
    143c:	00200000 	eoreq	r0, r0, r0
    1440:	122f3d00 	eorne	r3, pc, #0, 26
    1444:	076a0000 	strbeq	r0, [sl, -r0]!
    1448:	68050800 	stmdavs	r5, {fp}
    144c:	01000001 	tsteq	r0, r1
    1450:	0f492ca6 	svceq	0x00492ca6
    1454:	553c0000 	ldrpl	r0, [ip, #-0]!
    1458:	61000012 	tstvs	r0, r2, lsl r0
    145c:	5f00000b 	svcpl	0x0000000b
    1460:	3c00000b 	stccc	0, cr0, [r0], {11}
    1464:	00001249 	andeq	r1, r0, r9, asr #4
    1468:	00000b61 	andeq	r0, r0, r1, ror #22
    146c:	00000b5f 	andeq	r0, r0, pc, asr fp
    1470:	00123d3c 	andseq	r3, r2, ip, lsr sp
    1474:	000b6100 	andeq	r6, fp, r0, lsl #2
    1478:	000b5f00 	andeq	r5, fp, r0, lsl #30
    147c:	06fc3200 	ldrbteq	r3, [ip], r0, lsl #4
    1480:	0a300800 	beq	c03488 <__Stack_Size+0xc03088>
    1484:	3b000000 	blcc	148c <__Stack_Size+0x108c>
    1488:	0000122f 	andeq	r1, r0, pc, lsr #4
    148c:	0800076a 	stmdaeq	r0, {r1, r3, r5, r6, r8, r9, sl}
    1490:	00076a01 	andeq	r6, r7, r1, lsl #20
    1494:	00076a08 	andeq	r6, r7, r8, lsl #20
    1498:	099a0108 	ldmibeq	sl, {r3, r8}
    149c:	00000f8a 	andeq	r0, r0, sl, lsl #31
    14a0:	0012553c 	andseq	r5, r2, ip, lsr r5
    14a4:	000b7700 	andeq	r7, fp, r0, lsl #14
    14a8:	000b7500 	andeq	r7, fp, r0, lsl #10
    14ac:	12493c00 	subne	r3, r9, #0, 24
    14b0:	0b770000 	bleq	1dc14b8 <__Stack_Size+0x1dc10b8>
    14b4:	0b750000 	bleq	1d414bc <__Stack_Size+0x1d410bc>
    14b8:	3d3c0000 	ldccc	0, cr0, [ip, #-0]
    14bc:	77000012 	smladvc	r0, r2, r0, r0
    14c0:	7500000b 	strvc	r0, [r0, #-11]
    14c4:	0000000b 	andeq	r0, r0, fp
    14c8:	00122f3b 	andseq	r2, r2, fp, lsr pc
    14cc:	00077a00 	andeq	r7, r7, r0, lsl #20
    14d0:	077a0108 	ldrbeq	r0, [sl, -r8, lsl #2]!
    14d4:	077c0800 	ldrbeq	r0, [ip, -r0, lsl #16]!
    14d8:	9e010800 	cdpls	8, 0, cr0, cr1, cr0, {0}
    14dc:	000fcb09 	andeq	ip, pc, r9, lsl #22
    14e0:	12553c00 	subsne	r3, r5, #0, 24
    14e4:	0b8d0000 	bleq	fe3414ec <BootRAM+0xd2b1c8d>
    14e8:	0b8b0000 	bleq	fe2c14f0 <BootRAM+0xd231c91>
    14ec:	493c0000 	ldmdbmi	ip!, {}	; <UNPREDICTABLE>
    14f0:	8d000012 	stchi	0, cr0, [r0, #-72]	; 0xffffffb8
    14f4:	8b00000b 	blhi	1528 <__Stack_Size+0x1128>
    14f8:	3c00000b 	stccc	0, cr0, [r0], {11}
    14fc:	0000123d 	andeq	r1, r0, sp, lsr r2
    1500:	00000b8d 	andeq	r0, r0, sp, lsl #23
    1504:	00000b8b 	andeq	r0, r0, fp, lsl #23
    1508:	07863a00 	streq	r3, [r6, r0, lsl #20]
    150c:	11370800 	teqne	r7, r0, lsl #16
    1510:	01300000 	teqeq	r0, r0
    1514:	0c030550 	cfstr32eq	mvfx0, [r3], {80}	; 0x50
    1518:	30200000 	eorcc	r0, r0, r0
    151c:	75025201 	strvc	r5, [r2, #-513]	; 0xfffffdff
    1520:	3e000000 	cdpcc	0, 0, cr0, cr0, cr0, {0}
    1524:	ed040704 	stc	7, cr0, [r4, #-16]
    1528:	3f00000f 	svccc	0x0000000f
    152c:	00040840 	andeq	r0, r4, r0, asr #16
    1530:	145e0100 	ldrbne	r0, [lr], #-256	; 0xffffff00
    1534:	10150301 	andsne	r0, r5, r1, lsl #6
    1538:	62410000 	subvs	r0, r1, #0
    153c:	01006675 	tsteq	r0, r5, ror r6
    1540:	08982c5e 	ldmeq	r8, {r1, r2, r3, r4, r6, sl, fp, sp}
    1544:	d5420000 	strble	r0, [r2, #-0]
    1548:	01000006 	tsteq	r0, r6
    154c:	005e3a5e 	subseq	r3, lr, lr, asr sl
    1550:	39000000 	stmdbcc	r0, {}	; <UNPREDICTABLE>
    1554:	00000582 	andeq	r0, r0, r2, lsl #11
    1558:	010d4b01 	tsteq	sp, r1, lsl #22
    155c:	080005f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, sl}
    1560:	08000654 	stmdaeq	r0, {r2, r4, r6, r9, sl}
    1564:	00000ba1 	andeq	r0, r0, r1, lsr #23
    1568:	0010ac01 	andseq	sl, r0, r1, lsl #24
    156c:	06cc3500 	strbeq	r3, [ip], r0, lsl #10
    1570:	4b010000 	blmi	41578 <__Stack_Size+0x41178>
    1574:	0000411c 	andeq	r4, r0, ip, lsl r1
    1578:	000bc500 	andeq	ip, fp, r0, lsl #10
    157c:	000bc100 	andeq	ip, fp, r0, lsl #2
    1580:	06783700 	ldrbteq	r3, [r8], -r0, lsl #14
    1584:	52010000 	andpl	r0, r1, #0
    1588:	00005e0c 	andeq	r5, r0, ip, lsl #28
    158c:	000bea00 	andeq	lr, fp, r0, lsl #20
    1590:	000be600 	andeq	lr, fp, r0, lsl #12
    1594:	122f4300 	eorne	r4, pc, #0, 6
    1598:	062e0000 	strteq	r0, [lr], -r0
    159c:	e8020800 	stmda	r2, {fp}
    15a0:	01000000 	mrseq	r0, (UNDEF: 0)
    15a4:	553c0354 	ldrpl	r0, [ip, #-852]!	; 0xfffffcac
    15a8:	0a000012 	beq	15f8 <__Stack_Size+0x11f8>
    15ac:	0800000c 	stmdaeq	r0, {r2, r3}
    15b0:	3c00000c 	stccc	0, cr0, [r0], {12}
    15b4:	00001249 	andeq	r1, r0, r9, asr #4
    15b8:	00000c1f 	andeq	r0, r0, pc, lsl ip
    15bc:	00000c1d 	andeq	r0, r0, sp, lsl ip
    15c0:	00123d3c 	andseq	r3, r2, ip, lsr sp
    15c4:	000c3400 	andeq	r3, ip, r0, lsl #8
    15c8:	000c3200 	andeq	r3, ip, r0, lsl #4
    15cc:	06363a00 	ldrteq	r3, [r6], -r0, lsl #20
    15d0:	0a300800 	beq	c035d8 <__Stack_Size+0xc031d8>
    15d4:	01300000 	teqeq	r0, r0
    15d8:	30300150 	eorscc	r0, r0, r0, asr r1
    15dc:	71025101 	tstvc	r2, r1, lsl #2
    15e0:	52013000 	andpl	r3, r1, #0
    15e4:	00007202 	andeq	r7, r0, r2, lsl #4
    15e8:	01440000 	mrseq	r0, (UNDEF: 68)
    15ec:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
    15f0:	ea063701 	b	18f1fc <__Stack_Size+0x18edfc>
    15f4:	54080001 	strpl	r0, [r8], #-1
    15f8:	02080002 	andeq	r0, r8, #2
    15fc:	3701007d 	smlsdxcc	r1, sp, r0, r0
    1600:	45000011 	strmi	r0, [r0, #-17]	; 0xffffffef
    1604:	000010d7 	ldrdeq	r1, [r0], -r7
    1608:	00018846 	andeq	r8, r1, r6, asr #16
    160c:	03390100 	teqeq	r9, #0, 2
    1610:	00000076 	andeq	r0, r0, r6, ror r0
    1614:	00702d00 	rsbseq	r2, r0, r0, lsl #26
    1618:	10f50000 	rscsne	r0, r5, r0
    161c:	88370000 	ldmdahi	r7!, {}	; <UNPREDICTABLE>
    1620:	01000001 	tsteq	r0, r1
    1624:	00760339 	rsbseq	r0, r6, r9, lsr r3
    1628:	0c4c0000 	mareq	acc0, r0, ip
    162c:	0c480000 	mareq	acc0, r0, r8
    1630:	2d000000 	stccs	0, cr0, [r0, #-0]
    1634:	00000090 	muleq	r0, r0, r0
    1638:	00001113 	andeq	r1, r0, r3, lsl r1
    163c:	72746338 	rsbsvc	r6, r4, #56, 6	; 0xe0000000
    1640:	103d0100 	eorsne	r0, sp, r0, lsl #2
    1644:	00000076 	andeq	r0, r0, r6, ror r0
    1648:	00000c73 	andeq	r0, r0, r3, ror ip
    164c:	00000c6b 	andeq	r0, r0, fp, ror #24
    1650:	12624700 	rsbne	r4, r2, #0, 14
    1654:	02300000 	eorseq	r0, r0, #0
    1658:	30010800 	andcc	r0, r1, r0, lsl #16
    165c:	38080002 	stmdacc	r8, {r1}
    1660:	01080002 	tsteq	r8, r2
    1664:	713c0343 	teqvc	ip, r3, asr #6
    1668:	c2000012 	andgt	r0, r0, #18
    166c:	c000000c 	andgt	r0, r0, ip
    1670:	0000000c 	andeq	r0, r0, ip
    1674:	e4014800 	str	r4, [r1], #-2048	; 0xfffff800
    1678:	01000006 	tsteq	r0, r6
    167c:	86011b1b 			; <UNDEFINED> instruction: 0x86011b1b
    1680:	e6000011 			; <UNDEFINED> instruction: 0xe6000011
    1684:	ea080001 	b	201690 <__Stack_Size+0x201290>
    1688:	02080001 	andeq	r0, r8, #1
    168c:	8601007d 			; <UNDEFINED> instruction: 0x8601007d
    1690:	49000011 	stmdbmi	r0, {r0, r4}
    1694:	00716572 	rsbseq	r6, r1, r2, ror r5
    1698:	8d3c1b01 	fldmdbxhi	ip!, {d1-d0}	;@ Deprecated
    169c:	da000011 	ble	16e8 <__Stack_Size+0x12e8>
    16a0:	d600000c 	strle	r0, [r0], -ip
    16a4:	3600000c 	strcc	r0, [r0], -ip
    16a8:	00000958 	andeq	r0, r0, r8, asr r9
    16ac:	5e4a1b01 	vmlapl.f64	d17, d10, d1
    16b0:	01000000 	mrseq	r0, (UNDEF: 0)
    16b4:	06d23651 			; <UNDEFINED> instruction: 0x06d23651
    16b8:	1b010000 	blne	416c0 <__Stack_Size+0x412c0>
    16bc:	00005e5b 	andeq	r5, r0, fp, asr lr
    16c0:	00520100 	subseq	r0, r2, r0, lsl #2
    16c4:	5b080102 	blpl	201ad4 <__Stack_Size+0x2016d4>
    16c8:	07000001 	streq	r0, [r0, -r1]
    16cc:	00011b04 	andeq	r1, r1, r4, lsl #22
    16d0:	78014800 	stmdavc	r1, {fp, lr}
    16d4:	01000005 	tsteq	r0, r5
    16d8:	86011b1a 			; <UNDEFINED> instruction: 0x86011b1a
    16dc:	e2000011 	and	r0, r0, #17
    16e0:	e6080001 	str	r0, [r8], -r1
    16e4:	02080001 	andeq	r0, r8, #1
    16e8:	e201007d 	and	r0, r1, #125	; 0x7d
    16ec:	49000011 	stmdbmi	r0, {r0, r4}
    16f0:	00716572 	rsbseq	r6, r1, r2, ror r5
    16f4:	8d3b1a01 	vldmdbhi	fp!, {s2}
    16f8:	ff000011 			; <UNDEFINED> instruction: 0xff000011
    16fc:	fb00000c 	blx	1736 <__Stack_Size+0x1336>
    1700:	3600000c 	strcc	r0, [r0], -ip
    1704:	00000878 	andeq	r0, r0, r8, ror r8
    1708:	e2471a01 	sub	r1, r7, #4096	; 0x1000
    170c:	01000011 	tsteq	r0, r1, lsl r0
    1710:	06d53651 			; <UNDEFINED> instruction: 0x06d53651
    1714:	1a010000 	bne	4171c <__Stack_Size+0x4131c>
    1718:	000a1e57 	andeq	r1, sl, r7, asr lr
    171c:	00520100 	subseq	r0, r2, r0, lsl #2
    1720:	0fe50407 	svceq	0x00e50407
    1724:	014a0000 	mrseq	r0, (UNDEF: 74)
    1728:	000000e7 	andeq	r0, r0, r7, ror #1
    172c:	4a1b1901 	bmi	6c7b38 <__Stack_Size+0x6c7738>
    1730:	0004d101 	andeq	sp, r4, r1, lsl #2
    1734:	1b180100 	blne	601b3c <__Stack_Size+0x60173c>
    1738:	0504014b 	streq	r0, [r4, #-331]	; 0xfffffeb5
    173c:	17010000 	strne	r0, [r1, -r0]
    1740:	8a4c011b 	bhi	1301bb4 <__Stack_Size+0x13017b4>
    1744:	03000004 	movweq	r0, #4
    1748:	950113d1 	strls	r1, [r1, #-977]	; 0xfffffc2f
    174c:	03000000 	movweq	r0, #0
    1750:	0000122f 	andeq	r1, r0, pc, lsr #4
    1754:	0006cc42 	andeq	ip, r6, r2, asr #24
    1758:	27d10300 	ldrbcs	r0, [r1, r0, lsl #6]
    175c:	00000041 	andeq	r0, r0, r1, asr #32
    1760:	66756241 	ldrbtvs	r6, [r5], -r1, asr #4
    1764:	38d10300 	ldmcc	r1, {r8, r9}^
    1768:	00000a1e 	andeq	r0, r0, lr, lsl sl
    176c:	03794000 	cmneq	r9, #0
    1770:	c4030000 	strgt	r0, [r3], #-0
    1774:	62030114 	andvs	r0, r3, #20, 2
    1778:	42000012 	andmi	r0, r0, #18
    177c:	000006cc 	andeq	r0, r0, ip, asr #13
    1780:	4129c403 			; <UNDEFINED> instruction: 0x4129c403
    1784:	41000000 	mrsmi	r0, (UNDEF: 0)
    1788:	00667562 	rsbeq	r7, r6, r2, ror #10
    178c:	983fc403 	ldmdals	pc!, {r0, r1, sl, lr, pc}	; <UNPREDICTABLE>
    1790:	42000008 	andmi	r0, r0, #8
    1794:	000006d5 	ldrdeq	r0, [r0], -r5
    1798:	5e4dc403 	cdppl	4, 4, cr12, cr13, cr3, {0}
    179c:	00000000 	andeq	r0, r0, r0
    17a0:	0003994d 	andeq	r9, r3, sp, asr #18
    17a4:	05de0200 	ldrbeq	r0, [lr, #512]	; 0x200
    17a8:	7f030116 	svcvc	0x00030116
    17ac:	4e000012 	mcrmi	0, 0, r0, cr0, cr2, {0}
    17b0:	00000303 	andeq	r0, r0, r3, lsl #6
    17b4:	2f05de02 	svccs	0x0005de02
    17b8:	0000026e 	andeq	r0, r0, lr, ror #4
    17bc:	11fa4f00 	mvnsne	r4, r0, lsl #30
    17c0:	01dc0000 	bicseq	r0, ip, r0
    17c4:	01de0800 	bicseq	r0, lr, r0, lsl #16
    17c8:	7d020800 	stcvc	8, cr0, [r2, #-0]
    17cc:	01500100 	cmpeq	r0, r0, lsl #2
    17d0:	0003d201 	andeq	sp, r3, r1, lsl #4
    17d4:	0003d200 	andeq	sp, r3, r0, lsl #4
    17d8:	06390300 	ldrteq	r0, [r9], -r0, lsl #6
    17dc:	000f7200 	andeq	r7, pc, r0, lsl #4
    17e0:	2c000200 	sfmcs	f0, 4, [r0], {-0}
    17e4:	04000007 	streq	r0, [r0], #-7
    17e8:	00001201 	andeq	r1, r0, r1, lsl #4
    17ec:	0abb0c00 	beq	feec47f4 <BootRAM+0xde34f95>
    17f0:	01040000 	mrseq	r0, (UNDEF: 4)
    17f4:	07c80000 	strbeq	r0, [r8, r0]
    17f8:	08fc0800 	ldmeq	ip!, {fp}^
    17fc:	0a360800 	beq	d83804 <__Stack_Size+0xd83404>
    1800:	01020000 	mrseq	r0, (UNDEF: 2)
    1804:	00015406 	andeq	r5, r1, r6, lsl #8
    1808:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    180c:	000001f3 	strdeq	r0, [r0], -r3
    1810:	c1050402 	tstgt	r5, r2, lsl #8
    1814:	02000001 	andeq	r0, r0, #1
    1818:	01bc0508 			; <UNDEFINED> instruction: 0x01bc0508
    181c:	a4030000 	strge	r0, [r3], #-0
    1820:	03000001 	movweq	r0, #1
    1824:	0052182e 	subseq	r1, r2, lr, lsr #16
    1828:	41040000 	mrsmi	r0, (UNDEF: 4)
    182c:	02000000 	andeq	r0, r0, #0
    1830:	01520801 	cmpeq	r2, r1, lsl #16
    1834:	89030000 	stmdbhi	r3, {}	; <UNPREDICTABLE>
    1838:	03000005 	movweq	r0, #5
    183c:	00651931 	rsbeq	r1, r5, r1, lsr r9
    1840:	02020000 	andeq	r0, r2, #0
    1844:	00012a07 	andeq	r2, r1, r7, lsl #20
    1848:	02090300 	andeq	r0, r9, #0, 6
    184c:	34030000 	strcc	r0, [r3], #-0
    1850:	00007d19 	andeq	r7, r0, r9, lsl sp
    1854:	006c0500 	rsbeq	r0, ip, r0, lsl #10
    1858:	04020000 	streq	r0, [r2], #-0
    185c:	00019207 	andeq	r9, r1, r7, lsl #4
    1860:	07080200 	streq	r0, [r8, -r0, lsl #4]
    1864:	0000018d 	andeq	r0, r0, sp, lsl #3
    1868:	69050406 	stmdbvs	r5, {r1, r2, sl}
    186c:	0500746e 	streq	r7, [r0, #-1134]	; 0xfffffb92
    1870:	0000008b 	andeq	r0, r0, fp, lsl #1
    1874:	97070402 	strls	r0, [r7, -r2, lsl #8]
    1878:	07000001 	streq	r0, [r0, -r1]
    187c:	091b0208 	ldmdbeq	fp, {r3, r9}
    1880:	000000f3 	strdeq	r0, [r0], -r3
    1884:	0002a308 	andeq	sl, r2, r8, lsl #6
    1888:	0b1c0200 	bleq	702090 <__Stack_Size+0x701c90>
    188c:	00000041 	andeq	r0, r0, r1, asr #32
    1890:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
    1894:	00000688 	andeq	r0, r0, r8, lsl #13
    1898:	410b1d02 	tstmi	fp, r2, lsl #26
    189c:	02000000 	andeq	r0, r0, #0
    18a0:	26080123 	strcs	r0, [r8], -r3, lsr #2
    18a4:	02000003 	andeq	r0, r0, #3
    18a8:	00590c1e 	subseq	r0, r9, lr, lsl ip
    18ac:	23020000 	movwcs	r0, #8192	; 0x2000
    18b0:	023f0802 	eorseq	r0, pc, #131072	; 0x20000
    18b4:	1f020000 	svcne	0x00020000
    18b8:	0000590c 	andeq	r5, r0, ip, lsl #18
    18bc:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    18c0:	00065e08 	andeq	r5, r6, r8, lsl #28
    18c4:	0c200200 	sfmeq	f0, 4, [r0], #-0
    18c8:	00000059 	andeq	r0, r0, r9, asr r0
    18cc:	00062302 	andeq	r2, r6, r2, lsl #6
    18d0:	0006fb03 	andeq	pc, r6, r3, lsl #22
    18d4:	02210200 	eoreq	r0, r1, #0, 4
    18d8:	0000009e 	muleq	r0, lr, r0
    18dc:	00013d09 	andeq	r3, r1, r9, lsl #26
    18e0:	06ce0400 	strbeq	r0, [lr], r0, lsl #8
    18e4:	00009215 	andeq	r9, r0, r5, lsl r2
    18e8:	0a010100 	beq	41cf0 <__Stack_Size+0x418f0>
    18ec:	000001ca 	andeq	r0, r0, sl, asr #3
    18f0:	6c114505 	cfldr32vs	mvfx4, [r1], {5}
    18f4:	01000000 	mrseq	r0, (UNDEF: 0)
    18f8:	004d0b01 	subeq	r0, sp, r1, lsl #22
    18fc:	012c0000 			; <UNDEFINED> instruction: 0x012c0000
    1900:	970c0000 	strls	r0, [ip, -r0]
    1904:	0f000000 	svceq	0x00000000
    1908:	011c0400 	tsteq	ip, r0, lsl #8
    190c:	f60a0000 			; <UNDEFINED> instruction: 0xf60a0000
    1910:	05000000 	streq	r0, [r0, #-0]
    1914:	012c1746 			; <UNDEFINED> instruction: 0x012c1746
    1918:	01010000 	mrseq	r0, (UNDEF: 1)
    191c:	00004d0b 	andeq	r4, r0, fp, lsl #26
    1920:	00014f00 	andeq	r4, r1, r0, lsl #30
    1924:	00970c00 	addseq	r0, r7, r0, lsl #24
    1928:	00070000 	andeq	r0, r7, r0
    192c:	00013f04 	andeq	r3, r1, r4, lsl #30
    1930:	01e50a00 	mvneq	r0, r0, lsl #20
    1934:	47050000 	strmi	r0, [r5, -r0]
    1938:	00014f17 	andeq	r4, r1, r7, lsl pc
    193c:	0d010100 	stfeqs	f0, [r1, #-0]
    1940:	0179061c 	cmneq	r9, ip, lsl r6
    1944:	0001dd09 	andeq	sp, r1, r9, lsl #26
    1948:	52430e00 	subpl	r0, r3, #0, 28
    194c:	7b06004c 	blvc	181a84 <__Stack_Size+0x181684>
    1950:	00781101 	rsbseq	r1, r8, r1, lsl #2
    1954:	23020000 	movwcs	r0, #8192	; 0x2000
    1958:	52430e00 	subpl	r0, r3, #0, 28
    195c:	7c060048 	stcvc	0, cr0, [r6], {72}	; 0x48
    1960:	00781101 	rsbseq	r1, r8, r1, lsl #2
    1964:	23020000 	movwcs	r0, #8192	; 0x2000
    1968:	44490e04 	strbmi	r0, [r9], #-3588	; 0xfffff1fc
    196c:	7d060052 	stcvc	0, cr0, [r6, #-328]	; 0xfffffeb8
    1970:	00781101 	rsbseq	r1, r8, r1, lsl #2
    1974:	23020000 	movwcs	r0, #8192	; 0x2000
    1978:	444f0e08 	strbmi	r0, [pc], #-3592	; 1980 <__Stack_Size+0x1580>
    197c:	7e060052 	mcrvc	0, 0, r0, cr6, cr2, {2}
    1980:	00781101 	rsbseq	r1, r8, r1, lsl #2
    1984:	23020000 	movwcs	r0, #8192	; 0x2000
    1988:	00b30f0c 	adcseq	r0, r3, ip, lsl #30
    198c:	7f060000 	svcvc	0x00060000
    1990:	00781101 	rsbseq	r1, r8, r1, lsl #2
    1994:	23020000 	movwcs	r0, #8192	; 0x2000
    1998:	52420e10 	subpl	r0, r2, #16, 28	; 0x100
    199c:	80060052 	andhi	r0, r6, r2, asr r0
    19a0:	00781101 	rsbseq	r1, r8, r1, lsl #2
    19a4:	23020000 	movwcs	r0, #8192	; 0x2000
    19a8:	02250f14 	eoreq	r0, r5, #20, 30	; 0x50
    19ac:	81060000 	mrshi	r0, (UNDEF: 6)
    19b0:	00781101 	rsbseq	r1, r8, r1, lsl #2
    19b4:	23020000 	movwcs	r0, #8192	; 0x2000
    19b8:	da100018 	ble	401a20 <__Stack_Size+0x401620>
    19bc:	06000000 	streq	r0, [r0], -r0
    19c0:	62030182 	andvs	r0, r3, #-2147483616	; 0x80000020
    19c4:	02000001 	andeq	r0, r0, #1
    19c8:	0a790408 	beq	1e429f0 <__Stack_Size+0x1e425f0>
    19cc:	b5100000 	ldrlt	r0, [r0, #-0]
    19d0:	0700000b 	streq	r0, [r0, -fp]
    19d4:	97170165 	ldrls	r0, [r7, -r5, ror #2]
    19d8:	03000000 	movweq	r0, #0
    19dc:	00000ca1 	andeq	r0, r0, r1, lsr #25
    19e0:	330e2e08 	movwcc	r2, #60936	; 0xee08
    19e4:	03000000 	movweq	r0, #0
    19e8:	000008c6 	andeq	r0, r0, r6, asr #17
    19ec:	330e7408 	movwcc	r7, #58376	; 0xe408
    19f0:	11000000 	mrsne	r0, (UNDEF: 0)
    19f4:	03a50804 			; <UNDEFINED> instruction: 0x03a50804
    19f8:	00000238 	andeq	r0, r0, r8, lsr r2
    19fc:	0009f812 	andeq	pc, r9, r2, lsl r8	; <UNPREDICTABLE>
    1a00:	0ca70800 	stceq	8, cr0, [r7]
    1a04:	000001f1 	strdeq	r0, [r0], -r1
    1a08:	000ae912 	andeq	lr, sl, r2, lsl r9
    1a0c:	13a80800 			; <UNDEFINED> instruction: 0x13a80800
    1a10:	00000238 	andeq	r0, r0, r8, lsr r2
    1a14:	00520b00 	subseq	r0, r2, r0, lsl #22
    1a18:	02480000 	subeq	r0, r8, #0
    1a1c:	970c0000 	strls	r0, [ip, -r0]
    1a20:	03000000 	movweq	r0, #0
    1a24:	08080700 	stmdaeq	r8, {r8, r9, sl}
    1a28:	027009a2 	rsbseq	r0, r0, #2654208	; 0x288000
    1a2c:	f7080000 			; <UNDEFINED> instruction: 0xf7080000
    1a30:	08000008 	stmdaeq	r0, {r3}
    1a34:	008b07a4 	addeq	r0, fp, r4, lsr #15
    1a38:	23020000 	movwcs	r0, #8192	; 0x2000
    1a3c:	09980800 	ldmibeq	r8, {fp}
    1a40:	a9080000 	stmdbge	r8, {}	; <UNPREDICTABLE>
    1a44:	00021605 	andeq	r1, r2, r5, lsl #12
    1a48:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    1a4c:	0a690300 	beq	1a42654 <__Stack_Size+0x1a42254>
    1a50:	aa080000 	bge	201a58 <__Stack_Size+0x201658>
    1a54:	00024803 	andeq	r4, r2, r3, lsl #16
    1a58:	03041300 	movweq	r1, #17152	; 0x4300
    1a5c:	00000a42 	andeq	r0, r0, r2, asr #20
    1a60:	7d191609 	ldcvc	6, cr1, [r9, #-36]	; 0xffffffdc
    1a64:	03000000 	movweq	r0, #0
    1a68:	0000089e 	muleq	r0, lr, r8
    1a6c:	8b0d0c0a 	blhi	344a9c <__Stack_Size+0x34469c>
    1a70:	03000000 	movweq	r0, #0
    1a74:	000009ef 	andeq	r0, r0, pc, ror #19
    1a78:	8a1b2309 	bhi	6ca6a4 <__Stack_Size+0x6ca2a4>
    1a7c:	14000002 	strne	r0, [r0], #-2
    1a80:	00000ab3 			; <UNDEFINED> instruction: 0x00000ab3
    1a84:	08340918 	ldmdaeq	r4!, {r3, r4, r8, fp}
    1a88:	00000308 	andeq	r0, r0, r8, lsl #6
    1a8c:	000cf708 	andeq	pc, ip, r8, lsl #14
    1a90:	13360900 	teqne	r6, #0, 18
    1a94:	00000308 	andeq	r0, r0, r8, lsl #6
    1a98:	15002302 	strne	r2, [r0, #-770]	; 0xfffffcfe
    1a9c:	09006b5f 	stmdbeq	r0, {r0, r1, r2, r3, r4, r6, r8, r9, fp, sp, lr}
    1aa0:	008b0737 	addeq	r0, fp, r7, lsr r7
    1aa4:	23020000 	movwcs	r0, #8192	; 0x2000
    1aa8:	0b650804 	bleq	1943ac0 <__Stack_Size+0x19436c0>
    1aac:	37090000 	strcc	r0, [r9, -r0]
    1ab0:	00008b0b 	andeq	r8, r0, fp, lsl #22
    1ab4:	08230200 	stmdaeq	r3!, {r9}
    1ab8:	000ae308 	andeq	lr, sl, r8, lsl #6
    1abc:	14370900 	ldrtne	r0, [r7], #-2304	; 0xfffff700
    1ac0:	0000008b 	andeq	r0, r0, fp, lsl #1
    1ac4:	080c2302 	stmdaeq	ip, {r1, r8, r9, sp}
    1ac8:	0000094b 	andeq	r0, r0, fp, asr #18
    1acc:	8b1b3709 	blhi	6cf6f8 <__Stack_Size+0x6cf2f8>
    1ad0:	02000000 	andeq	r0, r0, #0
    1ad4:	5f151023 	svcpl	0x00151023
    1ad8:	38090078 	stmdacc	r9, {r3, r4, r5, r6}
    1adc:	00030e0b 	andeq	r0, r3, fp, lsl #28
    1ae0:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    1ae4:	a2041600 	andge	r1, r4, #0, 12
    1ae8:	0b000002 	bleq	1af8 <__Stack_Size+0x16f8>
    1aec:	0000027e 	andeq	r0, r0, lr, ror r2
    1af0:	0000031e 	andeq	r0, r0, lr, lsl r3
    1af4:	0000970c 	andeq	r9, r0, ip, lsl #14
    1af8:	14000000 	strne	r0, [r0], #-0
    1afc:	00000b80 	andeq	r0, r0, r0, lsl #23
    1b00:	083c0924 	ldmdaeq	ip!, {r2, r5, r8, fp}
    1b04:	000003b3 			; <UNDEFINED> instruction: 0x000003b3
    1b08:	00096a08 	andeq	r6, r9, r8, lsl #20
    1b0c:	093e0900 	ldmdbeq	lr!, {r8, fp}
    1b10:	0000008b 	andeq	r0, r0, fp, lsl #1
    1b14:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
    1b18:	000008ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    1b1c:	8b093f09 	blhi	251748 <__Stack_Size+0x251348>
    1b20:	02000000 	andeq	r0, r0, #0
    1b24:	ed080423 	cfstrs	mvf0, [r8, #-140]	; 0xffffff74
    1b28:	09000008 	stmdbeq	r0, {r3}
    1b2c:	008b0940 	addeq	r0, fp, r0, asr #18
    1b30:	23020000 	movwcs	r0, #8192	; 0x2000
    1b34:	09c30808 	stmibeq	r3, {r3, fp}^
    1b38:	41090000 	mrsmi	r0, (UNDEF: 9)
    1b3c:	00008b09 	andeq	r8, r0, r9, lsl #22
    1b40:	0c230200 	sfmeq	f0, 4, [r3], #-0
    1b44:	000a9908 	andeq	r9, sl, r8, lsl #18
    1b48:	09420900 	stmdbeq	r2, {r8, fp}^
    1b4c:	0000008b 	andeq	r0, r0, fp, lsl #1
    1b50:	08102302 	ldmdaeq	r0, {r1, r8, r9, sp}
    1b54:	00000b03 	andeq	r0, r0, r3, lsl #22
    1b58:	8b094309 	blhi	252784 <__Stack_Size+0x252384>
    1b5c:	02000000 	andeq	r0, r0, #0
    1b60:	db081423 	blle	206bf4 <__Stack_Size+0x2067f4>
    1b64:	09000008 	stmdbeq	r0, {r3}
    1b68:	008b0944 	addeq	r0, fp, r4, asr #18
    1b6c:	23020000 	movwcs	r0, #8192	; 0x2000
    1b70:	09730818 	ldmdbeq	r3!, {r3, r4, fp}^
    1b74:	45090000 	strmi	r0, [r9, #-0]
    1b78:	00008b09 	andeq	r8, r0, r9, lsl #22
    1b7c:	1c230200 	sfmne	f0, 4, [r3], #-0
    1b80:	000a8508 	andeq	r8, sl, r8, lsl #10
    1b84:	09460900 	stmdbeq	r6, {r8, fp}^
    1b88:	0000008b 	andeq	r0, r0, fp, lsl #1
    1b8c:	00202302 	eoreq	r2, r0, r2, lsl #6
    1b90:	00084f17 	andeq	r4, r8, r7, lsl pc
    1b94:	09010800 	stmdbeq	r1, {fp}
    1b98:	0401084f 	streq	r0, [r1], #-2127	; 0xfffff7b1
    1b9c:	61080000 	mrsvs	r0, (UNDEF: 8)
    1ba0:	0900000c 	stmdbeq	r0, {r2, r3}
    1ba4:	04010a50 	streq	r0, [r1], #-2640	; 0xfffff5b0
    1ba8:	23020000 	movwcs	r0, #8192	; 0x2000
    1bac:	0bbc0800 	bleq	fef03bb4 <BootRAM+0xde74355>
    1bb0:	51090000 	mrspl	r0, (UNDEF: 9)
    1bb4:	00040109 	andeq	r0, r4, r9, lsl #2
    1bb8:	80230300 	eorhi	r0, r3, r0, lsl #6
    1bbc:	0c980801 	ldceq	8, cr0, [r8], {1}
    1bc0:	53090000 	movwpl	r0, #36864	; 0x9000
    1bc4:	00027e0a 	andeq	r7, r2, sl, lsl #28
    1bc8:	80230300 	eorhi	r0, r3, r0, lsl #6
    1bcc:	0ce40802 	stcleq	8, cr0, [r4], #8
    1bd0:	56090000 	strpl	r0, [r9], -r0
    1bd4:	00027e0a 	andeq	r7, r2, sl, lsl #28
    1bd8:	84230300 	strthi	r0, [r3], #-768	; 0xfffffd00
    1bdc:	7c0b0002 	stcvc	0, cr0, [fp], {2}
    1be0:	11000002 	tstne	r0, r2
    1be4:	0c000004 	stceq	0, cr0, [r0], {4}
    1be8:	00000097 	muleq	r0, r7, r0
    1bec:	a217001f 	andsge	r0, r7, #31
    1bf0:	9000000a 	andls	r0, r0, sl
    1bf4:	08620901 	stmdaeq	r2!, {r0, r8, fp}^
    1bf8:	0000045d 	andeq	r0, r0, sp, asr r4
    1bfc:	000cf708 	andeq	pc, ip, r8, lsl #14
    1c00:	12630900 	rsbne	r0, r3, #0, 18
    1c04:	0000045d 	andeq	r0, r0, sp, asr r4
    1c08:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
    1c0c:	00000982 	andeq	r0, r0, r2, lsl #19
    1c10:	8b066409 	blhi	19ac3c <__Stack_Size+0x19a83c>
    1c14:	02000000 	andeq	r0, r0, #0
    1c18:	ce080423 	cdpgt	4, 0, cr0, cr8, cr3, {1}
    1c1c:	09000008 	stmdbeq	r0, {r3}
    1c20:	04630966 	strbteq	r0, [r3], #-2406	; 0xfffff69a
    1c24:	23020000 	movwcs	r0, #8192	; 0x2000
    1c28:	084f0808 	stmdaeq	pc, {r3, fp}^	; <UNPREDICTABLE>
    1c2c:	67090000 	strvs	r0, [r9, -r0]
    1c30:	0003b31e 	andeq	fp, r3, lr, lsl r3
    1c34:	88230300 	stmdahi	r3!, {r8, r9}
    1c38:	04160001 	ldreq	r0, [r6], #-1
    1c3c:	00000411 	andeq	r0, r0, r1, lsl r4
    1c40:	0004730b 	andeq	r7, r4, fp, lsl #6
    1c44:	00047300 	andeq	r7, r4, r0, lsl #6
    1c48:	00970c00 	addseq	r0, r7, r0, lsl #24
    1c4c:	001f0000 	andseq	r0, pc, r0
    1c50:	04790416 	ldrbteq	r0, [r9], #-1046	; 0xfffffbea
    1c54:	01180000 	tsteq	r8, r0
    1c58:	000c0714 	andeq	r0, ip, r4, lsl r7
    1c5c:	7a090800 	bvc	243c64 <__Stack_Size+0x243864>
    1c60:	0004a708 	andeq	sl, r4, r8, lsl #14
    1c64:	0a2c0800 	beq	b03c6c <__Stack_Size+0xb0386c>
    1c68:	7b090000 	blvc	241c70 <__Stack_Size+0x241870>
    1c6c:	0004a711 	andeq	sl, r4, r1, lsl r7
    1c70:	00230200 	eoreq	r0, r3, r0, lsl #4
    1c74:	0006d408 	andeq	sp, r6, r8, lsl #8
    1c78:	067c0900 	ldrbteq	r0, [ip], -r0, lsl #18
    1c7c:	0000008b 	andeq	r0, r0, fp, lsl #1
    1c80:	00042302 	andeq	r2, r4, r2, lsl #6
    1c84:	00520416 	subseq	r0, r2, r6, lsl r4
    1c88:	43140000 	tstmi	r4, #0
    1c8c:	68000009 	stmdavs	r0, {r0, r3}
    1c90:	2008ba09 	andcs	fp, r8, r9, lsl #20
    1c94:	15000006 	strne	r0, [r0, #-6]
    1c98:	0900705f 	stmdbeq	r0, {r0, r1, r2, r3, r4, r6, ip, sp, lr}
    1c9c:	04a712bb 	strteq	r1, [r7], #699	; 0x2bb
    1ca0:	23020000 	movwcs	r0, #8192	; 0x2000
    1ca4:	725f1500 	subsvc	r1, pc, #0, 10
    1ca8:	07bc0900 	ldreq	r0, [ip, r0, lsl #18]!
    1cac:	0000008b 	andeq	r0, r0, fp, lsl #1
    1cb0:	15042302 	strne	r2, [r4, #-770]	; 0xfffffcfe
    1cb4:	0900775f 	stmdbeq	r0, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}
    1cb8:	008b07bd 			; <UNDEFINED> instruction: 0x008b07bd
    1cbc:	23020000 	movwcs	r0, #8192	; 0x2000
    1cc0:	08970808 	ldmeq	r7, {r3, fp}
    1cc4:	be090000 	cdplt	0, 0, cr0, cr9, cr0, {0}
    1cc8:	00002c09 	andeq	r2, r0, r9, lsl #24
    1ccc:	0c230200 	sfmeq	f0, 4, [r3], #-0
    1cd0:	000a5908 	andeq	r5, sl, r8, lsl #18
    1cd4:	09bf0900 	ldmibeq	pc!, {r8, fp}	; <UNPREDICTABLE>
    1cd8:	0000002c 	andeq	r0, r0, ip, lsr #32
    1cdc:	150e2302 	strne	r2, [lr, #-770]	; 0xfffffcfe
    1ce0:	0066625f 	rsbeq	r6, r6, pc, asr r2
    1ce4:	7b11c009 	blvc	471d10 <__Stack_Size+0x471910>
    1ce8:	02000004 	andeq	r0, r0, #4
    1cec:	8e081023 	cdphi	0, 0, cr1, cr8, cr3, {1}
    1cf0:	09000008 	stmdbeq	r0, {r3}
    1cf4:	008b07c1 	addeq	r0, fp, r1, asr #15
    1cf8:	23020000 	movwcs	r0, #8192	; 0x2000
    1cfc:	08d30818 	ldmeq	r3, {r3, r4, fp}^
    1d00:	c8090000 	stmdagt	r9, {}	; <UNPREDICTABLE>
    1d04:	00027c0a 	andeq	r7, r2, sl, lsl #24
    1d08:	1c230200 	sfmne	f0, 4, [r3], #-0
    1d0c:	00049008 	andeq	r9, r4, r8
    1d10:	1dca0900 	vstrne.16	s1, [sl]	; <UNPREDICTABLE>
    1d14:	000007d1 	ldrdeq	r0, [r0], -r1
    1d18:	08202302 	stmdaeq	r0!, {r1, r8, r9, sp}
    1d1c:	0000037f 	andeq	r0, r0, pc, ror r3
    1d20:	fc1dcc09 	ldc2	12, cr12, [sp], {9}
    1d24:	02000007 	andeq	r0, r0, #7
    1d28:	08082423 	stmdaeq	r8, {r0, r1, r5, sl, sp}
    1d2c:	0900000d 	stmdbeq	r0, {r0, r2, r3}
    1d30:	08210dcf 	stmdaeq	r1!, {r0, r1, r2, r3, r6, r7, r8, sl, fp}
    1d34:	23020000 	movwcs	r0, #8192	; 0x2000
    1d38:	0a040828 	beq	103de0 <__Stack_Size+0x1039e0>
    1d3c:	d0090000 	andle	r0, r9, r0
    1d40:	00083c09 	andeq	r3, r8, r9, lsl #24
    1d44:	2c230200 	sfmcs	f0, 4, [r3], #-0
    1d48:	62755f15 	rsbsvs	r5, r5, #21, 30	; 0x54
    1d4c:	11d30900 	bicsne	r0, r3, r0, lsl #18
    1d50:	0000047b 	andeq	r0, r0, fp, ror r4
    1d54:	15302302 	ldrne	r2, [r0, #-770]!	; 0xfffffcfe
    1d58:	0070755f 	rsbseq	r7, r0, pc, asr r5
    1d5c:	a712d409 	ldrge	sp, [r2, -r9, lsl #8]
    1d60:	02000004 	andeq	r0, r0, #4
    1d64:	5f153823 	svcpl	0x00153823
    1d68:	09007275 	stmdbeq	r0, {r0, r2, r4, r5, r6, r9, ip, sp, lr}
    1d6c:	008b07d5 	ldrdeq	r0, [fp], r5
    1d70:	23020000 	movwcs	r0, #8192	; 0x2000
    1d74:	0d16083c 	ldceq	8, cr0, [r6, #-240]	; 0xffffff10
    1d78:	d8090000 	stmdale	r9, {}	; <UNPREDICTABLE>
    1d7c:	00084211 	andeq	r4, r8, r1, lsl r2
    1d80:	40230200 	eormi	r0, r3, r0, lsl #4
    1d84:	000ca808 	andeq	sl, ip, r8, lsl #16
    1d88:	11d90900 	bicsne	r0, r9, r0, lsl #18
    1d8c:	00000852 	andeq	r0, r0, r2, asr r8
    1d90:	15432302 	strbne	r2, [r3, #-770]	; 0xfffffcfe
    1d94:	00626c5f 	rsbeq	r6, r2, pc, asr ip
    1d98:	7b11dc09 	blvc	478dc4 <__Stack_Size+0x4789c4>
    1d9c:	02000004 	andeq	r0, r0, #4
    1da0:	77084423 	strvc	r4, [r8, -r3, lsr #8]
    1da4:	0900000b 	stmdbeq	r0, {r0, r1, r3}
    1da8:	008b07df 	ldrdeq	r0, [fp], pc	; <UNPREDICTABLE>
    1dac:	23020000 	movwcs	r0, #8192	; 0x2000
    1db0:	0957084c 	ldmdbeq	r7, {r2, r3, r6, fp}^
    1db4:	e0090000 	and	r0, r9, r0
    1db8:	0001fe0a 	andeq	pc, r1, sl, lsl #28
    1dbc:	50230200 	eorpl	r0, r3, r0, lsl #4
    1dc0:	00087708 	andeq	r7, r8, r8, lsl #14
    1dc4:	12e30900 	rscne	r0, r3, #0, 18
    1dc8:	0000063f 	andeq	r0, r0, pc, lsr r6
    1dcc:	08542302 	ldmdaeq	r4, {r1, r8, r9, sp}^
    1dd0:	00000b85 	andeq	r0, r0, r5, lsl #23
    1dd4:	960ce709 	strls	lr, [ip], -r9, lsl #14
    1dd8:	02000002 	andeq	r0, r0, #2
    1ddc:	aa085823 	bge	217e70 <__Stack_Size+0x217a70>
    1de0:	0900000a 	stmdbeq	r0, {r1, r3}
    1de4:	02700ee9 	rsbseq	r0, r0, #3728	; 0xe90
    1de8:	23020000 	movwcs	r0, #8192	; 0x2000
    1dec:	0cdc085c 	ldcleq	8, cr0, [ip], {92}	; 0x5c
    1df0:	ea090000 	b	241df8 <__Stack_Size+0x2419f8>
    1df4:	00008b09 	andeq	r8, r0, r9, lsl #22
    1df8:	64230200 	strtvs	r0, [r3], #-512	; 0xfffffe00
    1dfc:	8b011900 	blhi	48204 <__Stack_Size+0x47e04>
    1e00:	3f000000 	svccc	0x00000000
    1e04:	1a000006 	bne	1e24 <__Stack_Size+0x1a24>
    1e08:	0000063f 	andeq	r0, r0, pc, lsr r6
    1e0c:	00027c1a 	andeq	r7, r2, sl, lsl ip
    1e10:	07bf1a00 	ldreq	r1, [pc, r0, lsl #20]!
    1e14:	8b1a0000 	blhi	681e1c <__Stack_Size+0x681a1c>
    1e18:	00000000 	andeq	r0, r0, r0
    1e1c:	064a0416 			; <UNDEFINED> instruction: 0x064a0416
    1e20:	3f040000 	svccc	0x00040000
    1e24:	1b000006 	blne	1e44 <__Stack_Size+0x1a44>
    1e28:	00000c78 	andeq	r0, r0, r8, ror ip
    1e2c:	65090428 	strvs	r0, [r9, #-1064]	; 0xfffffbd8
    1e30:	07bf0802 	ldreq	r0, [pc, r2, lsl #16]!
    1e34:	920f0000 	andls	r0, pc, #0
    1e38:	0900000a 	stmdbeq	r0, {r1, r3}
    1e3c:	8b070267 	blhi	1c27e0 <__Stack_Size+0x1c23e0>
    1e40:	02000000 	andeq	r0, r0, #0
    1e44:	160f0023 	strne	r0, [pc], -r3, lsr #32
    1e48:	0900000a 	stmdbeq	r0, {r1, r3}
    1e4c:	b40b026c 	strlt	r0, [fp], #-620	; 0xfffffd94
    1e50:	02000008 	andeq	r0, r0, #8
    1e54:	be0f0423 	cdplt	4, 0, cr0, cr15, cr3, {1}
    1e58:	09000008 	stmdbeq	r0, {r3}
    1e5c:	b414026c 	ldrlt	r0, [r4], #-620	; 0xfffffd94
    1e60:	02000008 	andeq	r0, r0, #8
    1e64:	0e0f0823 	cdpeq	8, 0, cr0, cr15, cr3, {1}
    1e68:	0900000d 	stmdbeq	r0, {r0, r2, r3}
    1e6c:	b41e026c 	ldrlt	r0, [lr], #-620	; 0xfffffd94
    1e70:	02000008 	andeq	r0, r0, #8
    1e74:	7d0f0c23 	stcvc	12, cr0, [pc, #-140]	; 1df0 <__Stack_Size+0x19f0>
    1e78:	09000009 	stmdbeq	r0, {r0, r3}
    1e7c:	8b08026e 	blhi	20283c <__Stack_Size+0x20243c>
    1e80:	02000000 	andeq	r0, r0, #0
    1e84:	5f0f1023 	svcpl	0x000f1023
    1e88:	09000009 	stmdbeq	r0, {r0, r3}
    1e8c:	ed08026f 	sfm	f0, 4, [r8, #-444]	; 0xfffffe44
    1e90:	0200000a 	andeq	r0, r0, #10
    1e94:	c30f1423 	movwgt	r1, #62499	; 0xf423
    1e98:	0900000c 	stmdbeq	r0, {r2, r3}
    1e9c:	8b070272 	blhi	1c286c <__Stack_Size+0x1c246c>
    1ea0:	02000000 	andeq	r0, r0, #0
    1ea4:	590f3023 	stmdbpl	pc, {r0, r1, r5, ip, sp}	; <UNPREDICTABLE>
    1ea8:	0900000c 	stmdbeq	r0, {r2, r3}
    1eac:	03160273 	tsteq	r6, #805306375	; 0x30000007
    1eb0:	0200000b 	andeq	r0, r0, #11
    1eb4:	0b0f3423 	bleq	3cef48 <__Stack_Size+0x3ceb48>
    1eb8:	0900000a 	stmdbeq	r0, {r1, r3}
    1ebc:	8b070275 	blhi	1c2898 <__Stack_Size+0x1c2498>
    1ec0:	02000000 	andeq	r0, r0, #0
    1ec4:	5f0f3823 	svcpl	0x000f3823
    1ec8:	0900000a 	stmdbeq	r0, {r1, r3}
    1ecc:	150a0277 	strne	r0, [sl, #-631]	; 0xfffffd89
    1ed0:	0200000b 	andeq	r0, r0, #11
    1ed4:	e50f3c23 	str	r3, [pc, #-3107]	; 12b9 <__Stack_Size+0xeb9>
    1ed8:	09000008 	stmdbeq	r0, {r3}
    1edc:	0813027a 	ldmdaeq	r3, {r1, r3, r4, r5, r6, r9}
    1ee0:	02000003 	andeq	r0, r0, #3
    1ee4:	170f4023 	strne	r4, [pc, -r3, lsr #32]
    1ee8:	09000009 	stmdbeq	r0, {r0, r3}
    1eec:	8b07027b 	blhi	1c28e0 <__Stack_Size+0x1c24e0>
    1ef0:	02000000 	andeq	r0, r0, #0
    1ef4:	a00f4423 	andge	r4, pc, r3, lsr #8
    1ef8:	09000009 	stmdbeq	r0, {r0, r3}
    1efc:	0813027c 	ldmdaeq	r3, {r2, r3, r4, r5, r6, r9}
    1f00:	02000003 	andeq	r0, r0, #3
    1f04:	320f4823 	andcc	r4, pc, #2293760	; 0x230000
    1f08:	0900000a 	stmdbeq	r0, {r1, r3}
    1f0c:	1b14027d 	blne	502908 <__Stack_Size+0x502508>
    1f10:	0200000b 	andeq	r0, r0, #11
    1f14:	5d0f4c23 	stcpl	12, cr4, [pc, #-140]	; 1e90 <__Stack_Size+0x1a90>
    1f18:	0900000b 	stmdbeq	r0, {r0, r1, r3}
    1f1c:	8b070280 	blhi	1c2924 <__Stack_Size+0x1c2524>
    1f20:	02000000 	andeq	r0, r0, #0
    1f24:	c80f5023 	stmdagt	pc, {r0, r1, r5, ip, lr}	; <UNPREDICTABLE>
    1f28:	0900000b 	stmdbeq	r0, {r0, r1, r3}
    1f2c:	bf090281 	svclt	0x00090281
    1f30:	02000007 	andeq	r0, r0, #7
    1f34:	580f5423 	stmdapl	pc, {r0, r1, r5, sl, ip, lr}	; <UNPREDICTABLE>
    1f38:	0900000b 	stmdbeq	r0, {r0, r1, r3}
    1f3c:	c80702a4 	stmdagt	r7, {r2, r5, r7, r9}
    1f40:	0200000a 	andeq	r0, r0, #10
    1f44:	a20f5823 	andge	r5, pc, #2293760	; 0x230000
    1f48:	0900000a 	stmdbeq	r0, {r1, r3}
    1f4c:	5d1302a8 	lfmpl	f0, 4, [r3, #-672]	; 0xfffffd60
    1f50:	03000004 	movweq	r0, #4
    1f54:	0f02c823 	svceq	0x0002c823
    1f58:	000009e6 	andeq	r0, r0, r6, ror #19
    1f5c:	1202a909 	andne	sl, r2, #147456	; 0x24000
    1f60:	00000411 	andeq	r0, r0, r1, lsl r4
    1f64:	02cc2303 	sbceq	r2, ip, #201326592	; 0xc000000
    1f68:	0009cd0f 	andeq	ip, r9, pc, lsl #26
    1f6c:	02ad0900 	adceq	r0, sp, #0, 18
    1f70:	000b2d0c 	andeq	r2, fp, ip, lsl #26
    1f74:	dc230300 	stcle	3, cr0, [r3], #-0
    1f78:	0c360f05 	ldceq	15, cr0, [r6], #-20	; 0xffffffec
    1f7c:	b2090000 	andlt	r0, r9, #0
    1f80:	086f1002 	stmdaeq	pc!, {r1, ip}^	; <UNPREDICTABLE>
    1f84:	23030000 	movwcs	r0, #12288	; 0x3000
    1f88:	de0f05e0 	cfsh32le	mvfx0, mvfx15, #-16
    1f8c:	0900000a 	stmdbeq	r0, {r1, r3}
    1f90:	390a02b4 	stmdbcc	sl, {r2, r4, r5, r7, r9}
    1f94:	0300000b 	movweq	r0, #11
    1f98:	0005ec23 	andeq	lr, r5, r3, lsr #24
    1f9c:	07c50416 	bfieq	r0, r6, (invalid: 8:5)
    1fa0:	01020000 	mrseq	r0, (UNDEF: 2)
    1fa4:	00015b08 	andeq	r5, r1, r8, lsl #22
    1fa8:	07c50400 	strbeq	r0, [r5, r0, lsl #8]
    1fac:	04160000 	ldreq	r0, [r6], #-0
    1fb0:	00000620 	andeq	r0, r0, r0, lsr #12
    1fb4:	008b0119 	addeq	r0, fp, r9, lsl r1
    1fb8:	07f60000 	ldrbeq	r0, [r6, r0]!
    1fbc:	3f1a0000 	svccc	0x001a0000
    1fc0:	1a000006 	bne	1fe0 <__Stack_Size+0x1be0>
    1fc4:	0000027c 	andeq	r0, r0, ip, ror r2
    1fc8:	0007f61a 	andeq	pc, r7, sl, lsl r6	; <UNPREDICTABLE>
    1fcc:	008b1a00 	addeq	r1, fp, r0, lsl #20
    1fd0:	16000000 	strne	r0, [r0], -r0
    1fd4:	0007cc04 	andeq	ip, r7, r4, lsl #24
    1fd8:	d7041600 	strle	r1, [r4, -r0, lsl #12]
    1fdc:	19000007 	stmdbne	r0, {r0, r1, r2}
    1fe0:	00020a01 	andeq	r0, r2, r1, lsl #20
    1fe4:	00082100 	andeq	r2, r8, r0, lsl #2
    1fe8:	063f1a00 	ldrteq	r1, [pc], -r0, lsl #20
    1fec:	7c1a0000 	ldcvc	0, cr0, [sl], {-0}
    1ff0:	1a000002 	bne	2000 <__Stack_Size+0x1c00>
    1ff4:	0000020a 	andeq	r0, r0, sl, lsl #4
    1ff8:	00008b1a 	andeq	r8, r0, sl, lsl fp
    1ffc:	04160000 	ldreq	r0, [r6], #-0
    2000:	00000802 	andeq	r0, r0, r2, lsl #16
    2004:	008b0119 	addeq	r0, fp, r9, lsl r1
    2008:	083c0000 	ldmdaeq	ip!, {}	; <UNPREDICTABLE>
    200c:	3f1a0000 	svccc	0x001a0000
    2010:	1a000006 	bne	2030 <__Stack_Size+0x1c30>
    2014:	0000027c 	andeq	r0, r0, ip, ror r2
    2018:	27041600 	strcs	r1, [r4, -r0, lsl #12]
    201c:	0b000008 	bleq	2044 <__Stack_Size+0x1c44>
    2020:	00000052 	andeq	r0, r0, r2, asr r0
    2024:	00000852 	andeq	r0, r0, r2, asr r8
    2028:	0000970c 	andeq	r9, r0, ip, lsl #14
    202c:	0b000200 	bleq	2834 <__Stack_Size+0x2434>
    2030:	00000052 	andeq	r0, r0, r2, asr r0
    2034:	00000862 	andeq	r0, r0, r2, ror #16
    2038:	0000970c 	andeq	r9, r0, ip, lsl #14
    203c:	10000000 	andne	r0, r0, r0
    2040:	00000950 	andeq	r0, r0, r0, asr r9
    2044:	1a012409 	bne	4b070 <__Stack_Size+0x4ac70>
    2048:	000004ad 	andeq	r0, r0, sp, lsr #9
    204c:	000c301c 	andeq	r3, ip, ip, lsl r0
    2050:	28090c00 	stmdacs	r9, {sl, fp}
    2054:	08ae0801 	stmiaeq	lr!, {r0, fp}
    2058:	f70f0000 			; <UNDEFINED> instruction: 0xf70f0000
    205c:	0900000c 	stmdbeq	r0, {r2, r3}
    2060:	ae11012a 	mufgesp	f0, f1, #2.0
    2064:	02000008 	andeq	r0, r0, #8
    2068:	ae0f0023 	cdpge	0, 0, cr0, cr15, cr3, {1}
    206c:	0900000b 	stmdbeq	r0, {r0, r1, r3}
    2070:	8b07012b 	blhi	1c2524 <__Stack_Size+0x1c2124>
    2074:	02000000 	andeq	r0, r0, #0
    2078:	fe0f0423 	cdp2	4, 0, cr0, cr15, cr3, {1}
    207c:	09000009 	stmdbeq	r0, {r0, r3}
    2080:	b40b012c 	strlt	r0, [fp], #-300	; 0xfffffed4
    2084:	02000008 	andeq	r0, r0, #8
    2088:	16000823 	strne	r0, [r0], -r3, lsr #16
    208c:	00086f04 	andeq	r6, r8, r4, lsl #30
    2090:	62041600 	andvs	r1, r4, #0, 12
    2094:	1c000008 	stcne	0, cr0, [r0], {8}
    2098:	0000090f 	andeq	r0, r0, pc, lsl #18
    209c:	0144090e 	cmpeq	r4, lr, lsl #18
    20a0:	0008f908 	andeq	pc, r8, r8, lsl #18
    20a4:	0cec0f00 	stcleq	15, cr0, [ip]
    20a8:	45090000 	strmi	r0, [r9, #-0]
    20ac:	08f91201 	ldmeq	r9!, {r0, r9, ip}^
    20b0:	23020000 	movwcs	r0, #8192	; 0x2000
    20b4:	0a3c0f00 	beq	f05cbc <__Stack_Size+0xf058bc>
    20b8:	46090000 	strmi	r0, [r9], -r0
    20bc:	08f91201 	ldmeq	r9!, {r0, r9, ip}^
    20c0:	23020000 	movwcs	r0, #8192	; 0x2000
    20c4:	0bf20f06 	bleq	ffc85ce4 <BootRAM+0xebf6485>
    20c8:	47090000 	strmi	r0, [r9, -r0]
    20cc:	00651201 	rsbeq	r1, r5, r1, lsl #4
    20d0:	23020000 	movwcs	r0, #8192	; 0x2000
    20d4:	650b000c 	strvs	r0, [fp, #-12]
    20d8:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    20dc:	0c000009 	stceq	0, cr0, [r0], {9}
    20e0:	00000097 	muleq	r0, r7, r0
    20e4:	d00d0002 	andle	r0, sp, r2
    20e8:	07028509 	streq	r8, [r2, -r9, lsl #10]
    20ec:	00000a4d 	andeq	r0, r0, sp, asr #20
    20f0:	000cae0f 	andeq	sl, ip, pc, lsl #28
    20f4:	02870900 	addeq	r0, r7, #0, 18
    20f8:	00009718 	andeq	r9, r0, r8, lsl r7
    20fc:	00230200 	eoreq	r0, r3, r0, lsl #4
    2100:	000c3e0f 	andeq	r3, ip, pc, lsl #28
    2104:	02880900 	addeq	r0, r8, #0, 18
    2108:	0007bf12 	andeq	fp, r7, r2, lsl pc
    210c:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    2110:	0009360f 	andeq	r3, r9, pc, lsl #12
    2114:	02890900 	addeq	r0, r9, #0, 18
    2118:	000a4d10 	andeq	r4, sl, r0, lsl sp
    211c:	08230200 	stmdaeq	r3!, {r9}
    2120:	000b280f 	andeq	r2, fp, pc, lsl #16
    2124:	028a0900 	addeq	r0, sl, #0, 18
    2128:	00031e17 	andeq	r1, r3, r7, lsl lr
    212c:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    2130:	000a1d0f 	andeq	r1, sl, pc, lsl #26
    2134:	028b0900 	addeq	r0, fp, #0, 18
    2138:	00008b0f 	andeq	r8, r0, pc, lsl #22
    213c:	48230200 	stmdami	r3!, {r9}
    2140:	000cf20f 	andeq	pc, ip, pc, lsl #4
    2144:	028c0900 	addeq	r0, ip, #0, 18
    2148:	0000842c 	andeq	r8, r0, ip, lsr #8
    214c:	50230200 	eorpl	r0, r3, r0, lsl #4
    2150:	00087d0f 	andeq	r7, r8, pc, lsl #26
    2154:	028d0900 	addeq	r0, sp, #0, 18
    2158:	0008ba1a 	andeq	fp, r8, sl, lsl sl
    215c:	58230200 	stmdapl	r3!, {r9}
    2160:	0009b60f 	andeq	fp, r9, pc, lsl #12
    2164:	028e0900 	addeq	r0, lr, #0, 18
    2168:	00027016 	andeq	r7, r2, r6, lsl r0
    216c:	68230200 	stmdavs	r3!, {r9}
    2170:	000c4b0f 	andeq	r4, ip, pc, lsl #22
    2174:	028f0900 	addeq	r0, pc, #0, 18
    2178:	00027016 	andeq	r7, r2, r6, lsl r0
    217c:	70230200 	eorvc	r0, r3, r0, lsl #4
    2180:	00085d0f 	andeq	r5, r8, pc, lsl #26
    2184:	02900900 	addseq	r0, r0, #0, 18
    2188:	00027016 	andeq	r7, r2, r6, lsl r0
    218c:	78230200 	stmdavc	r3!, {r9}
    2190:	000b6d0f 	andeq	r6, fp, pc, lsl #26
    2194:	02910900 	addseq	r0, r1, #0, 18
    2198:	000a5d10 	andeq	r5, sl, r0, lsl sp
    219c:	80230300 	eorhi	r0, r3, r0, lsl #6
    21a0:	08820f01 	stmeq	r2, {r0, r8, r9, sl, fp}
    21a4:	92090000 	andls	r0, r9, #0
    21a8:	0a6d1002 	beq	1b461b8 <__Stack_Size+0x1b45db8>
    21ac:	23030000 	movwcs	r0, #12288	; 0x3000
    21b0:	d00f0188 	andle	r0, pc, r8, lsl #3
    21b4:	0900000b 	stmdbeq	r0, {r0, r1, r3}
    21b8:	8b0f0293 	blhi	3c2c0c <__Stack_Size+0x3c280c>
    21bc:	03000000 	movweq	r0, #0
    21c0:	0f01a023 	svceq	0x0001a023
    21c4:	000008b0 			; <UNDEFINED> instruction: 0x000008b0
    21c8:	16029409 	strne	r9, [r2], -r9, lsl #8
    21cc:	00000270 	andeq	r0, r0, r0, ror r2
    21d0:	01a42303 			; <UNDEFINED> instruction: 0x01a42303
    21d4:	0009d70f 	andeq	sp, r9, pc, lsl #14
    21d8:	02950900 	addseq	r0, r5, #0, 18
    21dc:	00027016 	andeq	r7, r2, r6, lsl r0
    21e0:	ac230300 	stcge	3, cr0, [r3], #-0
    21e4:	09870f01 	stmibeq	r7, {r0, r8, r9, sl, fp}
    21e8:	96090000 	strls	r0, [r9], -r0
    21ec:	02701602 	rsbseq	r1, r0, #2097152	; 0x200000
    21f0:	23030000 	movwcs	r0, #12288	; 0x3000
    21f4:	4a0f01b4 	bmi	3c28cc <__Stack_Size+0x3c24cc>
    21f8:	0900000a 	stmdbeq	r0, {r1, r3}
    21fc:	70160297 	mulsvc	r6, r7, r2
    2200:	03000002 	movweq	r0, #2
    2204:	0f01bc23 	svceq	0x0001bc23
    2208:	000009a5 	andeq	r0, r0, r5, lsr #19
    220c:	16029809 	strne	r9, [r2], -r9, lsl #16
    2210:	00000270 	andeq	r0, r0, r0, ror r2
    2214:	01c42303 	biceq	r2, r4, r3, lsl #6
    2218:	000a900f 	andeq	r9, sl, pc
    221c:	02990900 	addseq	r0, r9, #0, 18
    2220:	00008b08 	andeq	r8, r0, r8, lsl #22
    2224:	cc230300 	stcgt	3, cr0, [r3], #-0
    2228:	c50b0001 	strgt	r0, [fp, #-1]
    222c:	5d000007 	stcpl	0, cr0, [r0, #-28]	; 0xffffffe4
    2230:	0c00000a 	stceq	0, cr0, [r0], {10}
    2234:	00000097 	muleq	r0, r7, r0
    2238:	c50b0019 	strgt	r0, [fp, #-25]	; 0xffffffe7
    223c:	6d000007 	stcvs	0, cr0, [r0, #-28]	; 0xffffffe4
    2240:	0c00000a 	stceq	0, cr0, [r0], {10}
    2244:	00000097 	muleq	r0, r7, r0
    2248:	c50b0007 	strgt	r0, [fp, #-7]
    224c:	7d000007 	stcvc	0, cr0, [r0, #-28]	; 0xffffffe4
    2250:	0c00000a 	stceq	0, cr0, [r0], {10}
    2254:	00000097 	muleq	r0, r7, r0
    2258:	f00d0017 			; <UNDEFINED> instruction: 0xf00d0017
    225c:	07029e09 	streq	r9, [r2, -r9, lsl #28]
    2260:	00000aa8 	andeq	r0, r0, r8, lsr #21
    2264:	0009080f 	andeq	r0, r9, pc, lsl #16
    2268:	02a10900 	adceq	r0, r1, #0, 18
    226c:	000aa81b 	andeq	sl, sl, fp, lsl r8
    2270:	00230200 	eoreq	r0, r3, r0, lsl #4
    2274:	00086b0f 	andeq	r6, r8, pc, lsl #22
    2278:	02a20900 	adceq	r0, r2, #0, 18
    227c:	000ab818 	andeq	fp, sl, r8, lsl r8
    2280:	78230200 	stmdavc	r3!, {r9}
    2284:	04a70b00 	strteq	r0, [r7], #2816	; 0xb00
    2288:	0ab80000 	beq	fee02290 <BootRAM+0xdd72a31>
    228c:	970c0000 	strls	r0, [ip, -r0]
    2290:	1d000000 	stcne	0, cr0, [r0, #-0]
    2294:	00970b00 	addseq	r0, r7, r0, lsl #22
    2298:	0ac80000 	beq	ff2022a0 <BootRAM+0xe172a41>
    229c:	970c0000 	strls	r0, [ip, -r0]
    22a0:	1d000000 	stcne	0, cr0, [r0, #-0]
    22a4:	09f01d00 	ldmibeq	r0!, {r8, sl, fp, ip}^
    22a8:	ed030283 	sfm	f0, 4, [r3, #-524]	; 0xfffffdf4
    22ac:	1e00000a 	cdpne	0, 0, cr0, cr0, cr10, {0}
    22b0:	00000c78 	andeq	r0, r0, r8, ror ip
    22b4:	0b029a09 	bleq	a8ae0 <__Stack_Size+0xa86e0>
    22b8:	00000909 	andeq	r0, r0, r9, lsl #18
    22bc:	000b501e 	andeq	r5, fp, lr, lsl r0
    22c0:	02a30900 	adceq	r0, r3, #0, 18
    22c4:	000a7d0b 	andeq	r7, sl, fp, lsl #26
    22c8:	c50b0000 	strgt	r0, [fp, #-0]
    22cc:	fd000007 	stc2	0, cr0, [r0, #-28]	; 0xffffffe4
    22d0:	0c00000a 	stceq	0, cr0, [r0], {10}
    22d4:	00000097 	muleq	r0, r7, r0
    22d8:	fd1f0018 	ldc2	0, cr0, [pc, #-96]	; 2280 <__Stack_Size+0x1e80>
    22dc:	0100000c 	tsteq	r0, ip
    22e0:	0afd0416 	beq	fff43340 <BootRAM+0xeeb3ae1>
    22e4:	01200000 			; <UNDEFINED> instruction: 0x01200000
    22e8:	00000b15 	andeq	r0, r0, r5, lsl fp
    22ec:	00063f1a 	andeq	r3, r6, sl, lsl pc
    22f0:	04160000 	ldreq	r0, [r6], #-0
    22f4:	00000b09 	andeq	r0, r0, r9, lsl #22
    22f8:	03080416 	movweq	r0, #33814	; 0x8416
    22fc:	01200000 			; <UNDEFINED> instruction: 0x01200000
    2300:	00000b2d 	andeq	r0, r0, sp, lsr #22
    2304:	00008b1a 	andeq	r8, r0, sl, lsl fp
    2308:	04160000 	ldreq	r0, [r6], #-0
    230c:	00000b33 	andeq	r0, r0, r3, lsr fp
    2310:	0b210416 	bleq	843370 <__Stack_Size+0x842f70>
    2314:	620b0000 	andvs	r0, fp, #0
    2318:	49000008 	stmdbmi	r0, {r3}
    231c:	0c00000b 	stceq	0, cr0, [r0], {11}
    2320:	00000097 	muleq	r0, r7, r0
    2324:	f7090002 			; <UNDEFINED> instruction: 0xf7090002
    2328:	0900000a 	stmdbeq	r0, {r1, r3}
    232c:	3f170333 	svccc	0x00170333
    2330:	01000006 	tsteq	r0, r6
    2334:	0af00901 	beq	ffc04740 <BootRAM+0xeb74ee1>
    2338:	34090000 	strcc	r0, [r9], #-0
    233c:	06451d03 	strbeq	r1, [r5], -r3, lsl #26
    2340:	01010000 	mrseq	r0, (UNDEF: 1)
    2344:	00004d0b 	andeq	r4, r0, fp, lsl #26
    2348:	000b7700 	andeq	r7, fp, r0, lsl #14
    234c:	00970c00 	addseq	r0, r7, r0, lsl #24
    2350:	00110000 	andseq	r0, r1, r0
    2354:	000b6704 	andeq	r6, fp, r4, lsl #14
    2358:	0bdd2100 	bleq	ff74a760 <BootRAM+0xe6baf01>
    235c:	1a010000 	bne	42364 <__Stack_Size+0x41f64>
    2360:	000b7716 	andeq	r7, fp, r6, lsl r7
    2364:	c2030500 	andgt	r0, r3, #0, 10
    2368:	0b080009 	bleq	202394 <__Stack_Size+0x201f94>
    236c:	0000004d 	andeq	r0, r0, sp, asr #32
    2370:	00000b9e 	muleq	r0, lr, fp
    2374:	0000970c 	andeq	r9, r0, ip, lsl #14
    2378:	04000900 	streq	r0, [r0], #-2304	; 0xfffff700
    237c:	00000b8e 	andeq	r0, r0, lr, lsl #23
    2380:	000b8b21 	andeq	r8, fp, r1, lsr #22
    2384:	162d0100 	strtne	r0, [sp], -r0, lsl #2
    2388:	00000b9e 	muleq	r0, lr, fp
    238c:	09ef0305 	stmibeq	pc!, {r0, r2, r8, r9}^	; <UNPREDICTABLE>
    2390:	69140800 	ldmdbvs	r4, {fp}
    2394:	0200000c 	andeq	r0, r0, #12
    2398:	e1083b01 	tst	r8, r1, lsl #22
    239c:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    23a0:	00000ba9 	andeq	r0, r0, r9, lsr #23
    23a4:	410b3c01 	tstmi	fp, r1, lsl #24
    23a8:	02000000 	andeq	r0, r0, #0
    23ac:	74080023 	strvc	r0, [r8], #-35	; 0xffffffdd
    23b0:	0100000a 	tsteq	r0, sl
    23b4:	00410b3d 	subeq	r0, r1, sp, lsr fp
    23b8:	23020000 	movwcs	r0, #8192	; 0x2000
    23bc:	74220001 	strtvc	r0, [r2], #-1
    23c0:	01000008 	tsteq	r0, r8
    23c4:	0bb5023e 	bleq	fed42cc4 <BootRAM+0xdcb3465>
    23c8:	05010000 	streq	r0, [r1, #-0]
    23cc:	00005803 	andeq	r5, r0, r3, lsl #16
    23d0:	004d0b20 	subeq	r0, sp, r0, lsr #22
    23d4:	0c040000 	stceq	0, cr0, [r4], {-0}
    23d8:	970c0000 	strls	r0, [ip, -r0]
    23dc:	15000000 	strne	r0, [r0, #-0]
    23e0:	0bf40400 	bleq	ffd033e8 <BootRAM+0xec73b89>
    23e4:	3d210000 	stccc	0, cr0, [r1, #-0]
    23e8:	01000008 	tsteq	r0, r8
    23ec:	0c041640 	stceq	6, cr1, [r4], {64}	; 0x40
    23f0:	03050000 	movweq	r0, #20480	; 0x5000
    23f4:	08000a2a 	stmdaeq	r0, {r1, r3, r5, r9, fp}
    23f8:	00004d0b 	andeq	r4, r0, fp, lsl #26
    23fc:	000c2b00 	andeq	r2, ip, r0, lsl #22
    2400:	00970c00 	addseq	r0, r7, r0, lsl #24
    2404:	001a0000 	andseq	r0, sl, r0
    2408:	000c1b04 	andeq	r1, ip, r4, lsl #22
    240c:	09212100 	stmdbeq	r1!, {r8, sp}
    2410:	4d010000 	stcmi	0, cr0, [r1, #-0]
    2414:	000c2b16 	andeq	r2, ip, r6, lsl fp
    2418:	d4030500 	strle	r0, [r3], #-1280	; 0xfffffb00
    241c:	14080009 	strne	r0, [r8], #-9
    2420:	00000b37 	andeq	r0, r0, r7, lsr fp
    2424:	01710104 	cmneq	r1, r4, lsl #2
    2428:	00000c7d 	andeq	r0, r0, sp, ror ip
    242c:	000cbb08 	andeq	fp, ip, r8, lsl #22
    2430:	01710100 	cmneq	r1, r0, lsl #2
    2434:	00000041 	andeq	r0, r0, r1, asr #32
    2438:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
    243c:	00000bf7 	strdeq	r0, [r0], -r7
    2440:	41017101 	tstmi	r1, r1, lsl #2
    2444:	02000000 	andeq	r0, r0, #0
    2448:	d6080123 	strle	r0, [r8], -r3, lsr #2
    244c:	0100000a 	tsteq	r0, sl
    2450:	0c820171 	stfeqs	f0, [r2], {113}	; 0x71
    2454:	23020000 	movwcs	r0, #8192	; 0x2000
    2458:	42040002 	andmi	r0, r4, #2
    245c:	0b00000c 	bleq	2494 <__Stack_Size+0x2094>
    2460:	00000059 	andeq	r0, r0, r9, asr r0
    2464:	00000c92 	muleq	r0, r2, ip
    2468:	0000970c 	andeq	r9, r0, ip, lsl #14
    246c:	21000000 	mrscs	r0, (UNDEF: 0)
    2470:	00000b37 	andeq	r0, r0, r7, lsr fp
    2474:	7d017101 	stfvcs	f7, [r1, #-4]
    2478:	0500000c 	streq	r0, [r0, #-12]
    247c:	0009fa03 	andeq	pc, r9, r3, lsl #20
    2480:	0c0e1408 	cfstrseq	mvf1, [lr], {8}
    2484:	01160000 	tsteq	r6, r0
    2488:	0cdf0172 	ldfeqe	f0, [pc], {114}	; 0x72
    248c:	bb080000 	bllt	202494 <__Stack_Size+0x202094>
    2490:	0100000c 	tsteq	r0, ip
    2494:	00410172 	subeq	r0, r1, r2, ror r1
    2498:	23020000 	movwcs	r0, #8192	; 0x2000
    249c:	0bf70800 	bleq	ffdc44a4 <BootRAM+0xed34c45>
    24a0:	72010000 	andvc	r0, r1, #0
    24a4:	00004101 	andeq	r4, r0, r1, lsl #2
    24a8:	01230200 			; <UNDEFINED> instruction: 0x01230200
    24ac:	000ad608 	andeq	sp, sl, r8, lsl #12
    24b0:	01720100 	cmneq	r2, r0, lsl #2
    24b4:	00000ce4 	andeq	r0, r0, r4, ror #25
    24b8:	00022302 	andeq	r2, r2, r2, lsl #6
    24bc:	000ca404 	andeq	sl, ip, r4, lsl #8
    24c0:	00590b00 	subseq	r0, r9, r0, lsl #22
    24c4:	0cf40000 	ldcleq	0, cr0, [r4]
    24c8:	970c0000 	strls	r0, [ip, -r0]
    24cc:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    24d0:	0c0e2100 	stfeqs	f2, [lr], {-0}
    24d4:	72010000 	andvc	r0, r1, #0
    24d8:	000cdf01 	andeq	sp, ip, r1, lsl #30
    24dc:	fe030500 	cdp2	5, 0, cr0, cr3, cr0, {0}
    24e0:	14080009 	strne	r0, [r8], #-9
    24e4:	00000c7f 	andeq	r0, r0, pc, ror ip
    24e8:	01730112 	cmneq	r3, r2, lsl r1
    24ec:	00000d41 	andeq	r0, r0, r1, asr #26
    24f0:	000cbb08 	andeq	fp, ip, r8, lsl #22
    24f4:	01730100 	cmneq	r3, r0, lsl #2
    24f8:	00000041 	andeq	r0, r0, r1, asr #32
    24fc:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
    2500:	00000bf7 	strdeq	r0, [r0], -r7
    2504:	41017301 	tstmi	r1, r1, lsl #6
    2508:	02000000 	andeq	r0, r0, #0
    250c:	d6080123 	strle	r0, [r8], -r3, lsr #2
    2510:	0100000a 	tsteq	r0, sl
    2514:	0d460173 	stfeqe	f0, [r6, #-460]	; 0xfffffe34
    2518:	23020000 	movwcs	r0, #8192	; 0x2000
    251c:	06040002 	streq	r0, [r4], -r2
    2520:	0b00000d 	bleq	255c <__Stack_Size+0x215c>
    2524:	00000059 	andeq	r0, r0, r9, asr r0
    2528:	00000d56 	andeq	r0, r0, r6, asr sp
    252c:	0000970c 	andeq	r9, r0, ip, lsl #14
    2530:	21000700 	tstcs	r0, r0, lsl #14
    2534:	00000c7f 	andeq	r0, r0, pc, ror ip
    2538:	41017301 	tstmi	r1, r1, lsl #6
    253c:	0500000d 	streq	r0, [r0, #-13]
    2540:	000a1403 	andeq	r1, sl, r3, lsl #8
    2544:	0b0d1408 	bleq	34756c <__Stack_Size+0x34716c>
    2548:	01040000 	mrseq	r0, (UNDEF: 4)
    254c:	0da30174 	stfeqs	f0, [r3, #464]!	; 0x1d0
    2550:	bb080000 	bllt	202558 <__Stack_Size+0x202158>
    2554:	0100000c 	tsteq	r0, ip
    2558:	00410174 	subeq	r0, r1, r4, ror r1
    255c:	23020000 	movwcs	r0, #8192	; 0x2000
    2560:	0bf70800 	bleq	ffdc4568 <BootRAM+0xed34d09>
    2564:	74010000 	strvc	r0, [r1], #-0
    2568:	00004101 	andeq	r4, r0, r1, lsl #2
    256c:	01230200 			; <UNDEFINED> instruction: 0x01230200
    2570:	000ad608 	andeq	sp, sl, r8, lsl #12
    2574:	01740100 	cmneq	r4, r0, lsl #2
    2578:	00000c82 	andeq	r0, r0, r2, lsl #25
    257c:	00022302 	andeq	r2, r2, r2, lsl #6
    2580:	000d6804 	andeq	r6, sp, r4, lsl #16
    2584:	0b0d2100 	bleq	34a98c <__Stack_Size+0x34a58c>
    2588:	74010000 	strvc	r0, [r1], #-0
    258c:	000da301 	andeq	sl, sp, r1, lsl #6
    2590:	26030500 	strcs	r0, [r3], -r0, lsl #10
    2594:	2308000a 	movwcs	r0, #32778	; 0x800a
    2598:	0004d101 	andeq	sp, r4, r1, lsl #2
    259c:	06c10100 	strbeq	r0, [r1], r0, lsl #2
    25a0:	080008e8 	stmdaeq	r0, {r3, r5, r6, r7, fp}
    25a4:	080008fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, fp}
    25a8:	01007d02 	tsteq	r0, r2, lsl #26
    25ac:	06e40124 	strbteq	r0, [r4], r4, lsr #2
    25b0:	b5010000 	strlt	r0, [r1, #-0]
    25b4:	07c50106 	strbeq	r0, [r5, r6, lsl #2]
    25b8:	08a80000 	stmiaeq	r8!, {}	; <UNPREDICTABLE>
    25bc:	08e80800 	stmiaeq	r8!, {fp}^
    25c0:	0d200800 	stceq	8, cr0, [r0, #-0]
    25c4:	70010000 	andvc	r0, r1, r0
    25c8:	2500000e 	strcs	r0, [r0, #-14]
    25cc:	00716572 	rsbseq	r6, r1, r2, ror r5
    25d0:	7027b501 	eorvc	fp, r7, r1, lsl #10
    25d4:	4800000e 	stmdami	r0, {r1, r2, r3}
    25d8:	4000000d 	andmi	r0, r0, sp
    25dc:	2600000d 	strcs	r0, [r0], -sp
    25e0:	00000958 	andeq	r0, r0, r8, asr r9
    25e4:	5935b501 	ldmdbpl	r5!, {r0, r8, sl, ip, sp, pc}
    25e8:	88000000 	stmdahi	r0, {}	; <UNPREDICTABLE>
    25ec:	8200000d 	andhi	r0, r0, #13
    25f0:	2600000d 	strcs	r0, [r0], -sp
    25f4:	000006d2 	ldrdeq	r0, [r0], -r2
    25f8:	5946b501 	stmdbpl	r6, {r0, r8, sl, ip, sp, pc}^
    25fc:	ba000000 	blt	2604 <__Stack_Size+0x2204>
    2600:	b400000d 	strlt	r0, [r0], #-13
    2604:	2700000d 	strcs	r0, [r0, -sp]
    2608:	00000f3c 	andeq	r0, r0, ip, lsr pc
    260c:	080008b0 	stmdaeq	r0, {r4, r5, r7, fp}
    2610:	0008b001 	andeq	fp, r8, r1
    2614:	0008ba08 	andeq	fp, r8, r8, lsl #20
    2618:	03b90108 			; <UNDEFINED> instruction: 0x03b90108
    261c:	000f4e28 	andeq	r4, pc, r8, lsr #28
    2620:	000de800 	andeq	lr, sp, r0, lsl #16
    2624:	000de600 	andeq	lr, sp, r0, lsl #12
    2628:	0f5a2800 	svceq	0x005a2800
    262c:	0dfe0000 	ldcleq	0, cr0, [lr]
    2630:	0dfc0000 	ldcleq	0, cr0, [ip]
    2634:	ba290000 	blt	a4263c <__Stack_Size+0xa4223c>
    2638:	67080008 	strvs	r0, [r8, -r8]
    263c:	2a00000f 	bcs	2680 <__Stack_Size+0x2280>
    2640:	31015001 	tstcc	r1, r1
    2644:	0251012a 	subseq	r0, r1, #-2147483638	; 0x8000000a
    2648:	00000074 	andeq	r0, r0, r4, ror r0
    264c:	f3041600 	vmax.u8	d1, d4, d0
    2650:	24000000 	strcs	r0, [r0], #-0
    2654:	00057801 	andeq	r7, r5, r1, lsl #16
    2658:	069c0100 	ldreq	r0, [ip], r0, lsl #2
    265c:	0007c501 	andeq	ip, r7, r1, lsl #10
    2660:	00084400 	andeq	r4, r8, r0, lsl #8
    2664:	0008a808 	andeq	sl, r8, r8, lsl #16
    2668:	000e1608 	andeq	r1, lr, r8, lsl #12
    266c:	0ed80100 	cdpeq	1, 13, cr0, cr8, cr0, {0}
    2670:	72250000 	eorvc	r0, r5, #0
    2674:	01007165 	tsteq	r0, r5, ror #2
    2678:	0e70269c 	mrceq	6, 3, r2, cr0, cr12, {4}
    267c:	0e3e0000 	cdpeq	0, 3, cr0, cr14, cr0, {0}
    2680:	0e360000 	cdpeq	0, 3, cr0, cr6, cr0, {0}
    2684:	782b0000 	stmdavc	fp!, {}	; <UNPREDICTABLE>
    2688:	01000008 	tsteq	r0, r8
    268c:	0ed8329c 	mrceq	2, 6, r3, cr8, cr12, {4}
    2690:	51010000 	mrspl	r0, (UNDEF: 1)
    2694:	0006d52b 	andeq	sp, r6, fp, lsr #10
    2698:	429c0100 	addsmi	r0, ip, #0, 2
    269c:	00000ede 	ldrdeq	r0, [r0], -lr
    26a0:	6e2c5201 	cdpvs	2, 2, cr5, cr12, cr1, {0}
    26a4:	01006d75 	tsteq	r0, r5, ror sp
    26a8:	004112a6 	subeq	r1, r1, r6, lsr #5
    26ac:	03050000 	movweq	r0, #20480	; 0x5000
    26b0:	20000017 	andcs	r0, r0, r7, lsl r0
    26b4:	7c041600 	stcvc	6, cr1, [r4], {-0}
    26b8:	16000002 	strne	r0, [r0], -r2
    26bc:	00005904 	andeq	r5, r0, r4, lsl #18
    26c0:	d2012d00 	andle	r2, r1, #0, 26
    26c4:	01000003 	tsteq	r0, r3
    26c8:	c8010676 	stmdagt	r1, {r1, r2, r4, r5, r6, r9, sl}
    26cc:	44080007 	strmi	r0, [r8], #-7
    26d0:	02080008 	andeq	r0, r8, #8
    26d4:	2f01007d 	svccs	0x0001007d
    26d8:	2600000f 	strcs	r0, [r0], -pc
    26dc:	000003e4 	andeq	r0, r0, r4, ror #7
    26e0:	59277601 	stmdbpl	r7!, {r0, r9, sl, ip, sp, lr}
    26e4:	80000000 	andhi	r0, r0, r0
    26e8:	7800000e 	stmdavc	r0, {r1, r2, r3}
    26ec:	2b00000e 	blcs	272c <__Stack_Size+0x232c>
    26f0:	00000878 	andeq	r0, r0, r8, ror r8
    26f4:	2f3b7601 	svccs	0x003b7601
    26f8:	0100000f 	tsteq	r0, pc
    26fc:	06d52b51 			; <UNDEFINED> instruction: 0x06d52b51
    2700:	76010000 	strvc	r0, [r1], -r0
    2704:	000ede4b 	andeq	sp, lr, fp, asr #28
    2708:	00520100 	subseq	r0, r2, r0, lsl #2
    270c:	0f350416 	svceq	0x00350416
    2710:	04160000 	ldreq	r0, [r6], #-0
    2714:	00000f3b 	andeq	r0, r0, fp, lsr pc
    2718:	048a2f2e 	streq	r2, [sl], #3886	; 0xf2e
    271c:	d1020000 	mrsle	r0, (UNDEF: 2)
    2720:	008b0113 	addeq	r0, fp, r3, lsl r1
    2724:	67030000 	strvs	r0, [r3, -r0]
    2728:	3000000f 	andcc	r0, r0, pc
    272c:	000006cc 	andeq	r0, r0, ip, asr #13
    2730:	4127d102 			; <UNDEFINED> instruction: 0x4127d102
    2734:	31000000 	mrscc	r0, (UNDEF: 0)
    2738:	00667562 	rsbeq	r7, r6, r2, ror #10
    273c:	de38d102 	rndlee	f5, f2
    2740:	0000000e 	andeq	r0, r0, lr
    2744:	89010132 	stmdbhi	r1, {r1, r4, r5, r8}
    2748:	89000004 	stmdbhi	r0, {r2}
    274c:	02000004 	andeq	r0, r0, #4
    2750:	Address 0x0000000000002750 is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
   c:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
  10:	00061001 	andeq	r1, r6, r1
  14:	00240200 	eoreq	r0, r4, r0, lsl #4
  18:	0b3e0b0b 	bleq	f82c4c <__Stack_Size+0xf8284c>
  1c:	00000e03 	andeq	r0, r0, r3, lsl #28
  20:	03001603 	movweq	r1, #1539	; 0x603
  24:	3b0b3a0e 	blcc	2ce864 <__Stack_Size+0x2ce464>
  28:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
  2c:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
  30:	13490026 	movtne	r0, #36902	; 0x9026
  34:	35050000 	strcc	r0, [r5, #-0]
  38:	00134900 	andseq	r4, r3, r0, lsl #18
  3c:	00240600 	eoreq	r0, r4, r0, lsl #12
  40:	0b3e0b0b 	bleq	f82c74 <__Stack_Size+0xf82874>
  44:	00000803 	andeq	r0, r0, r3, lsl #16
  48:	03003407 	movweq	r3, #1031	; 0x407
  4c:	3b0b3a0e 	blcc	2ce88c <__Stack_Size+0x2ce48c>
  50:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
  54:	3c0c3f13 	stccc	15, cr3, [ip], {19}
  58:	0800000c 	stmdaeq	r0, {r2, r3}
  5c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
  60:	0b3b0b3a 	bleq	ec2d50 <__Stack_Size+0xec2950>
  64:	13490b39 	movtne	r0, #39737	; 0x9b39
  68:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
  6c:	01090000 	mrseq	r0, (UNDEF: 9)
  70:	01134901 	tsteq	r3, r1, lsl #18
  74:	0a000013 	beq	c8 <_Minimum_Stack_Size-0x38>
  78:	13490021 	movtne	r0, #36897	; 0x9021
  7c:	00000b2f 	andeq	r0, r0, pc, lsr #22
  80:	0b01130b 	bleq	44cb4 <__Stack_Size+0x448b4>
  84:	3b0b3a0b 	blcc	2ce8b8 <__Stack_Size+0x2ce4b8>
  88:	010b3905 	tsteq	fp, r5, lsl #18
  8c:	0c000013 	stceq	0, cr0, [r0], {19}
  90:	0803000d 	stmdaeq	r3, {r0, r2, r3}
  94:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
  98:	13490b39 	movtne	r0, #39737	; 0x9b39
  9c:	00000a38 	andeq	r0, r0, r8, lsr sl
  a0:	03000d0d 	movweq	r0, #3341	; 0xd0d
  a4:	3b0b3a0e 	blcc	2ce8e4 <__Stack_Size+0x2ce4e4>
  a8:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
  ac:	000a3813 	andeq	r3, sl, r3, lsl r8
  b0:	00160e00 	andseq	r0, r6, r0, lsl #28
  b4:	0b3a0e03 	bleq	e838c8 <__Stack_Size+0xe834c8>
  b8:	0b39053b 	bleq	e415ac <__Stack_Size+0xe411ac>
  bc:	00001349 	andeq	r1, r0, r9, asr #6
  c0:	3f012e0f 	svccc	0x00012e0f
  c4:	3a0e030c 	bcc	380cfc <__Stack_Size+0x3808fc>
  c8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  cc:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
  d0:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
  d4:	97064001 	strls	r4, [r6, -r1]
  d8:	13010c42 	movwne	r0, #7234	; 0x1c42
  dc:	0b100000 	bleq	4000e4 <__Stack_Size+0x3ffce4>
  e0:	01065501 	tsteq	r6, r1, lsl #10
  e4:	11000013 	tstne	r0, r3, lsl r0
  e8:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
  ec:	0b3b0b3a 	bleq	ec2ddc <__Stack_Size+0xec29dc>
  f0:	13490b39 	movtne	r0, #39737	; 0x9b39
  f4:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
  f8:	12000006 	andne	r0, r0, #6
  fc:	1301010b 	movwne	r0, #4363	; 0x110b
 100:	34130000 	ldrcc	r0, [r3], #-0
 104:	3a0e0300 	bcc	380d0c <__Stack_Size+0x38090c>
 108:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 10c:	0013490b 	andseq	r4, r3, fp, lsl #18
 110:	010b1400 	tsteq	fp, r0, lsl #8
 114:	01120111 	tsteq	r2, r1, lsl r1
 118:	00001301 	andeq	r1, r0, r1, lsl #6
 11c:	31001d15 	tstcc	r0, r5, lsl sp
 120:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
 124:	01110b42 	tsteq	r1, r2, asr #22
 128:	0b580112 	bleq	1600578 <__Stack_Size+0x1600178>
 12c:	0b570b59 	bleq	15c2e98 <__Stack_Size+0x15c2a98>
 130:	89160000 	ldmdbhi	r6, {}	; <UNPREDICTABLE>
 134:	11000182 	smlabbne	r0, r2, r1, r0
 138:	00133101 	andseq	r3, r3, r1, lsl #2
 13c:	82891700 	addhi	r1, r9, #0, 14
 140:	01110101 	tsteq	r1, r1, lsl #2
 144:	00001331 	andeq	r1, r0, r1, lsr r3
 148:	01828a18 	orreq	r8, r2, r8, lsl sl
 14c:	910a0200 	mrsls	r0, R10_fiq
 150:	00000a42 	andeq	r0, r0, r2, asr #20
 154:	3f012e19 	svccc	0x00012e19
 158:	3a0e030c 	bcc	380d90 <__Stack_Size+0x380990>
 15c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 160:	110c270b 	tstne	ip, fp, lsl #14
 164:	40011201 	andmi	r1, r1, r1, lsl #4
 168:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
 16c:	00001301 	andeq	r1, r0, r1, lsl #6
 170:	0300051a 	movweq	r0, #1306	; 0x51a
 174:	3b0b3a0e 	blcc	2ce9b4 <__Stack_Size+0x2ce5b4>
 178:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 17c:	b7060213 	smladlt	r6, r3, r2, r0
 180:	00000642 	andeq	r0, r0, r2, asr #12
 184:	3f002e1b 	svccc	0x00002e1b
 188:	3a0e030c 	bcc	380dc0 <__Stack_Size+0x3809c0>
 18c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 190:	110c270b 	tstne	ip, fp, lsl #14
 194:	40011201 	andmi	r1, r1, r1, lsl #4
 198:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
 19c:	2e1c0000 	cdpcs	0, 1, cr0, cr12, cr0, {0}
 1a0:	030c3f00 	movweq	r3, #52992	; 0xcf00
 1a4:	3b0b3a0e 	blcc	2ce9e4 <__Stack_Size+0x2ce5e4>
 1a8:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 1ac:	1d00000c 	stcne	0, cr0, [r0, #-48]	; 0xffffffd0
 1b0:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 100 <_Minimum_Stack_Size>
 1b4:	0b3a0e03 	bleq	e839c8 <__Stack_Size+0xe835c8>
 1b8:	0b390b3b 	bleq	e42eac <__Stack_Size+0xe42aac>
 1bc:	0b201349 	bleq	804ee8 <__Stack_Size+0x804ae8>
 1c0:	00001301 	andeq	r1, r0, r1, lsl #6
 1c4:	0300341e 	movweq	r3, #1054	; 0x41e
 1c8:	3b0b3a08 	blcc	2ce9f0 <__Stack_Size+0x2ce5f0>
 1cc:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 1d0:	1f000013 	svcne	0x00000013
 1d4:	0e03002e 	cdpeq	0, 0, cr0, cr3, cr14, {1}
 1d8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 1dc:	0b200b39 	bleq	802ec8 <__Stack_Size+0x802ac8>
 1e0:	2e200000 	cdpcs	0, 2, cr0, cr0, cr0, {0}
 1e4:	11133101 	tstne	r3, r1, lsl #2
 1e8:	40011201 	andmi	r1, r1, r1, lsl #4
 1ec:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
 1f0:	00001301 	andeq	r1, r0, r1, lsl #6
 1f4:	31003421 	tstcc	r0, r1, lsr #8
 1f8:	b7060213 	smladlt	r6, r3, r2, r0
 1fc:	00000642 	andeq	r0, r0, r2, asr #12
 200:	31003422 	tstcc	r0, r2, lsr #8
 204:	23000013 	movwcs	r0, #19
 208:	1331011d 	teqne	r1, #1073741831	; 0x40000007
 20c:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
 210:	5806550b 	stmdapl	r6, {r0, r1, r3, r8, sl, ip, lr}
 214:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
 218:	2400000b 	strcs	r0, [r0], #-11
 21c:	0655010b 	ldrbeq	r0, [r5], -fp, lsl #2
 220:	2e250000 	cdpcs	0, 2, cr0, cr5, cr0, {0}
 224:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
 228:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
 22c:	0b3a0e03 	bleq	e83a40 <__Stack_Size+0xe83640>
 230:	0b390b3b 	bleq	e42f24 <__Stack_Size+0xe42b24>
 234:	01000000 	mrseq	r0, (UNDEF: 0)
 238:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
 23c:	0e030b13 	vmoveq.32	d3[0], r0
 240:	01110e1b 	tsteq	r1, fp, lsl lr
 244:	06100112 			; <UNDEFINED> instruction: 0x06100112
 248:	24020000 	strcs	r0, [r2], #-0
 24c:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 250:	000e030b 	andeq	r0, lr, fp, lsl #6
 254:	00160300 	andseq	r0, r6, r0, lsl #6
 258:	0b3a0e03 	bleq	e83a6c <__Stack_Size+0xe8366c>
 25c:	0b390b3b 	bleq	e42f50 <__Stack_Size+0xe42b50>
 260:	00001349 	andeq	r1, r0, r9, asr #6
 264:	49003504 	stmdbmi	r0, {r2, r8, sl, ip, sp}
 268:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
 26c:	13490026 	movtne	r0, #36902	; 0x9026
 270:	24060000 	strcs	r0, [r6], #-0
 274:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 278:	0008030b 	andeq	r0, r8, fp, lsl #6
 27c:	000f0700 	andeq	r0, pc, r0, lsl #14
 280:	13490b0b 	movtne	r0, #39691	; 0x9b0b
 284:	15080000 	strne	r0, [r8, #-0]
 288:	010c2701 	tsteq	ip, r1, lsl #14
 28c:	09000013 	stmdbeq	r0, {r0, r1, r4}
 290:	13490005 	movtne	r0, #36869	; 0x9005
 294:	130a0000 	movwne	r0, #40960	; 0xa000
 298:	3a0b0b01 	bcc	2c2ea4 <__Stack_Size+0x2c2aa4>
 29c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 2a0:	0013010b 	andseq	r0, r3, fp, lsl #2
 2a4:	000d0b00 	andeq	r0, sp, r0, lsl #22
 2a8:	0b3a0e03 	bleq	e83abc <__Stack_Size+0xe836bc>
 2ac:	0b390b3b 	bleq	e42fa0 <__Stack_Size+0xe42ba0>
 2b0:	0a381349 	beq	e04fdc <__Stack_Size+0xe04bdc>
 2b4:	040c0000 	streq	r0, [ip], #-0
 2b8:	0b0b3e01 	bleq	2cfac4 <__Stack_Size+0x2cf6c4>
 2bc:	3a13490b 	bcc	4d26f0 <__Stack_Size+0x4d22f0>
 2c0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 2c4:	0013010b 	andseq	r0, r3, fp, lsl #2
 2c8:	00280d00 	eoreq	r0, r8, r0, lsl #26
 2cc:	0d1c0e03 	ldceq	14, cr0, [ip, #-12]
 2d0:	280e0000 	stmdacs	lr, {}	; <UNPREDICTABLE>
 2d4:	1c0e0300 	stcne	3, cr0, [lr], {-0}
 2d8:	0f00000b 	svceq	0x0000000b
 2dc:	050b0113 	streq	r0, [fp, #-275]	; 0xfffffeed
 2e0:	0b3b0b3a 	bleq	ec2fd0 <__Stack_Size+0xec2bd0>
 2e4:	13010b39 	movwne	r0, #6969	; 0x1b39
 2e8:	0d100000 	ldceq	0, cr0, [r0, #-0]
 2ec:	3a080300 	bcc	200ef4 <__Stack_Size+0x200af4>
 2f0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 2f4:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 2f8:	1100000a 	tstne	r0, sl
 2fc:	13490101 	movtne	r0, #37121	; 0x9101
 300:	00001301 	andeq	r1, r0, r1, lsl #6
 304:	49002112 	stmdbmi	r0, {r1, r4, r8, sp}
 308:	000b2f13 	andeq	r2, fp, r3, lsl pc
 30c:	00211300 	eoreq	r1, r1, r0, lsl #6
 310:	052f1349 	streq	r1, [pc, #-841]!	; ffffffcf <BootRAM+0xef70770>
 314:	34140000 	ldrcc	r0, [r4], #-0
 318:	3a0e0300 	bcc	380f20 <__Stack_Size+0x380b20>
 31c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 320:	3f13490b 	svccc	0x0013490b
 324:	000c3c0c 	andeq	r3, ip, ip, lsl #24
 328:	00341500 	eorseq	r1, r4, r0, lsl #10
 32c:	0b3a0e03 	bleq	e83b40 <__Stack_Size+0xe83740>
 330:	0b390b3b 	bleq	e43024 <__Stack_Size+0xe42c24>
 334:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 218 <_Minimum_Stack_Size+0x118>
 338:	00000c3c 	andeq	r0, r0, ip, lsr ip
 33c:	0b011316 	bleq	44f9c <__Stack_Size+0x44b9c>
 340:	3b0b3a0b 	blcc	2ceb74 <__Stack_Size+0x2ce774>
 344:	010b3905 	tsteq	fp, r5, lsl #18
 348:	17000013 	smladne	r0, r3, r0, r0
 34c:	0803000d 	stmdaeq	r3, {r0, r2, r3}
 350:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 354:	13490b39 	movtne	r0, #39737	; 0x9b39
 358:	00000a38 	andeq	r0, r0, r8, lsr sl
 35c:	03000d18 	movweq	r0, #3352	; 0xd18
 360:	3b0b3a0e 	blcc	2ceba0 <__Stack_Size+0x2ce7a0>
 364:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 368:	000a3813 	andeq	r3, sl, r3, lsl r8
 36c:	00161900 	andseq	r1, r6, r0, lsl #18
 370:	0b3a0e03 	bleq	e83b84 <__Stack_Size+0xe83784>
 374:	0b39053b 	bleq	e41868 <__Stack_Size+0xe41468>
 378:	00001349 	andeq	r1, r0, r9, asr #6
 37c:	03000d1a 	movweq	r0, #3354	; 0xd1a
 380:	3b0b3a0e 	blcc	2cebc0 <__Stack_Size+0x2ce7c0>
 384:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 388:	0d0b0b13 	vstreq	d0, [fp, #-76]	; 0xffffffb4
 38c:	380b0c0b 	stmdacc	fp, {r0, r1, r3, sl, fp}
 390:	1b00000a 	blne	3c0 <_Minimum_Stack_Size+0x2c0>
 394:	0b0b0117 	bleq	2c07f8 <__Stack_Size+0x2c03f8>
 398:	0b3b0b3a 	bleq	ec3088 <__Stack_Size+0xec2c88>
 39c:	13010b39 	movwne	r0, #6969	; 0x1b39
 3a0:	0d1c0000 	ldceq	0, cr0, [ip, #-0]
 3a4:	3a0e0300 	bcc	380fac <__Stack_Size+0x380bac>
 3a8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 3ac:	0013490b 	andseq	r4, r3, fp, lsl #18
 3b0:	000d1d00 	andeq	r1, sp, r0, lsl #26
 3b4:	00001349 	andeq	r1, r0, r9, asr #6
 3b8:	49000d1e 	stmdbmi	r0, {r1, r2, r3, r4, r8, sl, fp}
 3bc:	000a3813 	andeq	r3, sl, r3, lsl r8
 3c0:	00341f00 	eorseq	r1, r4, r0, lsl #30
 3c4:	0b3a0e03 	bleq	e83bd8 <__Stack_Size+0xe837d8>
 3c8:	0b390b3b 	bleq	e430bc <__Stack_Size+0xe42cbc>
 3cc:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 2b0 <_Minimum_Stack_Size+0x1b0>
 3d0:	00000a02 	andeq	r0, r0, r2, lsl #20
 3d4:	03003420 	movweq	r3, #1056	; 0x420
 3d8:	3b0b3a0e 	blcc	2cec18 <__Stack_Size+0x2ce818>
 3dc:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 3e0:	000a0213 	andeq	r0, sl, r3, lsl r2
 3e4:	000d2100 	andeq	r2, sp, r0, lsl #2
 3e8:	0b3a0e03 	bleq	e83bfc <__Stack_Size+0xe837fc>
 3ec:	0b39053b 	bleq	e418e0 <__Stack_Size+0xe414e0>
 3f0:	0b0b1349 	bleq	2c511c <__Stack_Size+0x2c4d1c>
 3f4:	0b0c0b0d 	bleq	303030 <__Stack_Size+0x302c30>
 3f8:	00000a38 	andeq	r0, r0, r8, lsr sl
 3fc:	0b011722 	bleq	4608c <__Stack_Size+0x45c8c>
 400:	3b0b3a0b 	blcc	2cec34 <__Stack_Size+0x2ce834>
 404:	010b3905 	tsteq	fp, r5, lsl #18
 408:	23000013 	movwcs	r0, #19
 40c:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 410:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 414:	13490b39 	movtne	r0, #39737	; 0x9b39
 418:	2e240000 	cdpcs	0, 2, cr0, cr4, cr0, {0}
 41c:	030c3f01 	movweq	r3, #52993	; 0xcf01
 420:	3b0b3a0e 	blcc	2cec60 <__Stack_Size+0x2ce860>
 424:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
 428:	1113490c 	tstne	r3, ip, lsl #18
 42c:	40011201 	andmi	r1, r1, r1, lsl #4
 430:	0c429706 	mcrreq	7, 0, r9, r2, cr6
 434:	00001301 	andeq	r1, r0, r1, lsl #6
 438:	03000525 	movweq	r0, #1317	; 0x525
 43c:	3b0b3a08 	blcc	2cec64 <__Stack_Size+0x2ce864>
 440:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 444:	b7060213 	smladlt	r6, r3, r2, r0
 448:	00000642 	andeq	r0, r0, r2, asr #12
 44c:	03003426 	movweq	r3, #1062	; 0x426
 450:	3b0b3a0e 	blcc	2cec90 <__Stack_Size+0x2ce890>
 454:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 458:	b7060213 	smladlt	r6, r3, r2, r0
 45c:	00000642 	andeq	r0, r0, r2, asr #12
 460:	03003427 	movweq	r3, #1063	; 0x427
 464:	3b0b3a08 	blcc	2cec8c <__Stack_Size+0x2ce88c>
 468:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 46c:	b7060213 	smladlt	r6, r3, r2, r0
 470:	00000642 	andeq	r0, r0, r2, asr #12
 474:	55010b28 	strpl	r0, [r1, #-2856]	; 0xfffff4d8
 478:	29000006 	stmdbcs	r0, {r1, r2}
 47c:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 3cc <_Minimum_Stack_Size+0x2cc>
 480:	0b3a0e03 	bleq	e83c94 <__Stack_Size+0xe83894>
 484:	0b39053b 	bleq	e41978 <__Stack_Size+0xe41578>
 488:	01110c27 	tsteq	r1, r7, lsr #24
 48c:	06400112 			; <UNDEFINED> instruction: 0x06400112
 490:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
 494:	2a000013 	bcs	4e8 <__Stack_Size+0xe8>
 498:	08030005 	stmdaeq	r3, {r0, r2}
 49c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 4a0:	13490b39 	movtne	r0, #39737	; 0x9b39
 4a4:	00000a02 	andeq	r0, r0, r2, lsl #20
 4a8:	0300052b 	movweq	r0, #1323	; 0x52b
 4ac:	3b0b3a0e 	blcc	2cecec <__Stack_Size+0x2ce8ec>
 4b0:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 4b4:	000a0213 	andeq	r0, sl, r3, lsl r2
 4b8:	012e2c00 			; <UNDEFINED> instruction: 0x012e2c00
 4bc:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
 4c0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 4c4:	01110b39 	tsteq	r1, r9, lsr fp
 4c8:	06400112 			; <UNDEFINED> instruction: 0x06400112
 4cc:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
 4d0:	2d000013 	stccs	0, cr0, [r0, #-76]	; 0xffffffb4
 4d4:	0655010b 	ldrbeq	r0, [r5], -fp, lsl #2
 4d8:	00001301 	andeq	r1, r0, r1, lsl #6
 4dc:	11010b2e 	tstne	r1, lr, lsr #22
 4e0:	01011201 	tsteq	r1, r1, lsl #4
 4e4:	2f000013 	svccs	0x00000013
 4e8:	01018289 	smlabbeq	r1, r9, r2, r8
 4ec:	13010111 	movwne	r0, #4369	; 0x1111
 4f0:	8a300000 	bhi	c004f8 <__Stack_Size+0xc000f8>
 4f4:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
 4f8:	0a42910a 	beq	10a4928 <__Stack_Size+0x10a4528>
 4fc:	89310000 	ldmdbhi	r1!, {}	; <UNPREDICTABLE>
 500:	11010182 	smlabbne	r1, r2, r1, r0
 504:	32000001 	andcc	r0, r0, #1
 508:	00018289 	andeq	r8, r1, r9, lsl #5
 50c:	13310111 	teqne	r1, #1073741828	; 0x40000004
 510:	89330000 	ldmdbhi	r3!, {}	; <UNPREDICTABLE>
 514:	11010182 	smlabbne	r1, r2, r1, r0
 518:	01133101 	tsteq	r3, r1, lsl #2
 51c:	34000013 	strcc	r0, [r0], #-19	; 0xffffffed
 520:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 470 <__Stack_Size+0x70>
 524:	0b3a0e03 	bleq	e83d38 <__Stack_Size+0xe83938>
 528:	0b390b3b 	bleq	e4321c <__Stack_Size+0xe42e1c>
 52c:	01110c27 	tsteq	r1, r7, lsr #24
 530:	06400112 			; <UNDEFINED> instruction: 0x06400112
 534:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
 538:	35000013 	strcc	r0, [r0, #-19]	; 0xffffffed
 53c:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
 540:	0b3b0b3a 	bleq	ec3230 <__Stack_Size+0xec2e30>
 544:	13490b39 	movtne	r0, #39737	; 0x9b39
 548:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
 54c:	36000006 	strcc	r0, [r0], -r6
 550:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
 554:	0b3b0b3a 	bleq	ec3244 <__Stack_Size+0xec2e44>
 558:	13490b39 	movtne	r0, #39737	; 0x9b39
 55c:	00000a02 	andeq	r0, r0, r2, lsl #20
 560:	03003437 	movweq	r3, #1079	; 0x437
 564:	3b0b3a0e 	blcc	2ceda4 <__Stack_Size+0x2ce9a4>
 568:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 56c:	b7060213 	smladlt	r6, r3, r2, r0
 570:	00000642 	andeq	r0, r0, r2, asr #12
 574:	03003438 	movweq	r3, #1080	; 0x438
 578:	3b0b3a08 	blcc	2ceda0 <__Stack_Size+0x2ce9a0>
 57c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 580:	b7060213 	smladlt	r6, r3, r2, r0
 584:	00000642 	andeq	r0, r0, r2, asr #12
 588:	03012e39 	movweq	r2, #7737	; 0x1e39
 58c:	3b0b3a0e 	blcc	2cedcc <__Stack_Size+0x2ce9cc>
 590:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 594:	1201110c 	andne	r1, r1, #12, 2
 598:	97064001 	strls	r4, [r6, -r1]
 59c:	13010c42 	movwne	r0, #7234	; 0x1c42
 5a0:	893a0000 	ldmdbhi	sl!, {}	; <UNPREDICTABLE>
 5a4:	11010182 	smlabbne	r1, r2, r1, r0
 5a8:	00133101 	andseq	r3, r3, r1, lsl #2
 5ac:	011d3b00 	tsteq	sp, r0, lsl #22
 5b0:	01521331 	cmpeq	r2, r1, lsr r3
 5b4:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
 5b8:	58011201 	stmdapl	r1, {r0, r9, ip}
 5bc:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
 5c0:	0013010b 	andseq	r0, r3, fp, lsl #2
 5c4:	00053c00 	andeq	r3, r5, r0, lsl #24
 5c8:	06021331 			; <UNDEFINED> instruction: 0x06021331
 5cc:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
 5d0:	011d3d00 	tsteq	sp, r0, lsl #26
 5d4:	01521331 	cmpeq	r2, r1, lsr r3
 5d8:	550b42b8 	strpl	r4, [fp, #-696]	; 0xfffffd48
 5dc:	590b5806 	stmdbpl	fp, {r1, r2, fp, ip, lr}
 5e0:	010b570b 	tsteq	fp, fp, lsl #14
 5e4:	3e000013 	mcrcc	0, 0, r0, cr0, cr3, {0}
 5e8:	0b0b000f 	bleq	2c062c <__Stack_Size+0x2c022c>
 5ec:	263f0000 	ldrtcs	r0, [pc], -r0
 5f0:	40000000 	andmi	r0, r0, r0
 5f4:	0e03012e 	adfeqsp	f0, f3, #0.5
 5f8:	0b3b0b3a 	bleq	ec32e8 <__Stack_Size+0xec2ee8>
 5fc:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
 600:	13010b20 	movwne	r0, #6944	; 0x1b20
 604:	05410000 	strbeq	r0, [r1, #-0]
 608:	3a080300 	bcc	201210 <__Stack_Size+0x200e10>
 60c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 610:	0013490b 	andseq	r4, r3, fp, lsl #18
 614:	00054200 	andeq	r4, r5, r0, lsl #4
 618:	0b3a0e03 	bleq	e83e2c <__Stack_Size+0xe83a2c>
 61c:	0b390b3b 	bleq	e43310 <__Stack_Size+0xe42f10>
 620:	00001349 	andeq	r1, r0, r9, asr #6
 624:	31011d43 	tstcc	r1, r3, asr #26
 628:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
 62c:	06550b42 	ldrbeq	r0, [r5], -r2, asr #22
 630:	0b590b58 	bleq	1643398 <__Stack_Size+0x1642f98>
 634:	00000b57 	andeq	r0, r0, r7, asr fp
 638:	3f012e44 	svccc	0x00012e44
 63c:	3a0e030c 	bcc	381274 <__Stack_Size+0x380e74>
 640:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 644:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
 648:	970a4001 	strls	r4, [sl, -r1]
 64c:	13010c42 	movwne	r0, #7234	; 0x1c42
 650:	0b450000 	bleq	1140658 <__Stack_Size+0x1140258>
 654:	00130101 	andseq	r0, r3, r1, lsl #2
 658:	00344600 	eorseq	r4, r4, r0, lsl #12
 65c:	0b3a0e03 	bleq	e83e70 <__Stack_Size+0xe83a70>
 660:	0b390b3b 	bleq	e43354 <__Stack_Size+0xe42f54>
 664:	00001349 	andeq	r1, r0, r9, asr #6
 668:	31011d47 	tstcc	r1, r7, asr #26
 66c:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
 670:	01110b42 	tsteq	r1, r2, asr #22
 674:	0b580112 	bleq	1600ac4 <__Stack_Size+0x16006c4>
 678:	0b570b59 	bleq	15c33e4 <__Stack_Size+0x15c2fe4>
 67c:	2e480000 	cdpcs	0, 4, cr0, cr8, cr0, {0}
 680:	030c3f01 	movweq	r3, #52993	; 0xcf01
 684:	3b0b3a0e 	blcc	2ceec4 <__Stack_Size+0x2ceac4>
 688:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 68c:	1113490c 	tstne	r3, ip, lsl #18
 690:	40011201 	andmi	r1, r1, r1, lsl #4
 694:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
 698:	00001301 	andeq	r1, r0, r1, lsl #6
 69c:	03000549 	movweq	r0, #1353	; 0x549
 6a0:	3b0b3a08 	blcc	2ceec8 <__Stack_Size+0x2ceac8>
 6a4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 6a8:	b7060213 	smladlt	r6, r3, r2, r0
 6ac:	00000642 	andeq	r0, r0, r2, asr #12
 6b0:	3f002e4a 	svccc	0x00002e4a
 6b4:	3a0e030c 	bcc	3812ec <__Stack_Size+0x380eec>
 6b8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 6bc:	4b00000b 	blmi	6f0 <__Stack_Size+0x2f0>
 6c0:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 610 <__Stack_Size+0x210>
 6c4:	0b3a0e03 	bleq	e83ed8 <__Stack_Size+0xe83ad8>
 6c8:	0b390b3b 	bleq	e433bc <__Stack_Size+0xe42fbc>
 6cc:	00000b20 	andeq	r0, r0, r0, lsr #22
 6d0:	03012e4c 	movweq	r2, #7756	; 0x1e4c
 6d4:	3b0b3a0e 	blcc	2cef14 <__Stack_Size+0x2ceb14>
 6d8:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 6dc:	2013490c 	andscs	r4, r3, ip, lsl #18
 6e0:	0013010b 	andseq	r0, r3, fp, lsl #2
 6e4:	012e4d00 			; <UNDEFINED> instruction: 0x012e4d00
 6e8:	0b3a0e03 	bleq	e83efc <__Stack_Size+0xe83afc>
 6ec:	0b39053b 	bleq	e41be0 <__Stack_Size+0xe417e0>
 6f0:	0b200c27 	bleq	803794 <__Stack_Size+0x803394>
 6f4:	00001301 	andeq	r1, r0, r1, lsl #6
 6f8:	0300054e 	movweq	r0, #1358	; 0x54e
 6fc:	3b0b3a0e 	blcc	2cef3c <__Stack_Size+0x2ceb3c>
 700:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 704:	4f000013 	svcmi	0x00000013
 708:	1331002e 	teqne	r1, #46	; 0x2e
 70c:	01120111 	tsteq	r2, r1, lsl r1
 710:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
 714:	5000000c 	andpl	r0, r0, ip
 718:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 668 <__Stack_Size+0x268>
 71c:	40870c3c 	addmi	r0, r7, ip, lsr ip
 720:	3a0e030e 	bcc	381360 <__Stack_Size+0x380f60>
 724:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 728:	0000000b 	andeq	r0, r0, fp
 72c:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
 730:	030b130e 	movweq	r1, #45838	; 0xb30e
 734:	110e1b0e 	tstne	lr, lr, lsl #22
 738:	10011201 	andne	r1, r1, r1, lsl #4
 73c:	02000006 	andeq	r0, r0, #6
 740:	0b0b0024 	bleq	2c07d8 <__Stack_Size+0x2c03d8>
 744:	0e030b3e 	vmoveq.16	d3[0], r0
 748:	16030000 	strne	r0, [r3], -r0
 74c:	3a0e0300 	bcc	381354 <__Stack_Size+0x380f54>
 750:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 754:	0013490b 	andseq	r4, r3, fp, lsl #18
 758:	00260400 	eoreq	r0, r6, r0, lsl #8
 75c:	00001349 	andeq	r1, r0, r9, asr #6
 760:	49003505 	stmdbmi	r0, {r0, r2, r8, sl, ip, sp}
 764:	06000013 			; <UNDEFINED> instruction: 0x06000013
 768:	0b0b0024 	bleq	2c0800 <__Stack_Size+0x2c0400>
 76c:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
 770:	13070000 	movwne	r0, #28672	; 0x7000
 774:	3a0b0b01 	bcc	2c3380 <__Stack_Size+0x2c2f80>
 778:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 77c:	0013010b 	andseq	r0, r3, fp, lsl #2
 780:	000d0800 	andeq	r0, sp, r0, lsl #16
 784:	0b3a0e03 	bleq	e83f98 <__Stack_Size+0xe83b98>
 788:	0b390b3b 	bleq	e4347c <__Stack_Size+0xe4307c>
 78c:	0a381349 	beq	e054b8 <__Stack_Size+0xe050b8>
 790:	34090000 	strcc	r0, [r9], #-0
 794:	3a0e0300 	bcc	38139c <__Stack_Size+0x380f9c>
 798:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 79c:	3f13490b 	svccc	0x0013490b
 7a0:	000c3c0c 	andeq	r3, ip, ip, lsl #24
 7a4:	00340a00 	eorseq	r0, r4, r0, lsl #20
 7a8:	0b3a0e03 	bleq	e83fbc <__Stack_Size+0xe83bbc>
 7ac:	0b390b3b 	bleq	e434a0 <__Stack_Size+0xe430a0>
 7b0:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 694 <__Stack_Size+0x294>
 7b4:	00000c3c 	andeq	r0, r0, ip, lsr ip
 7b8:	4901010b 	stmdbmi	r1, {r0, r1, r3, r8}
 7bc:	00130113 	andseq	r0, r3, r3, lsl r1
 7c0:	00210c00 	eoreq	r0, r1, r0, lsl #24
 7c4:	0b2f1349 	bleq	bc54f0 <__Stack_Size+0xbc50f0>
 7c8:	130d0000 	movwne	r0, #53248	; 0xd000
 7cc:	3a0b0b01 	bcc	2c33d8 <__Stack_Size+0x2c2fd8>
 7d0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 7d4:	0013010b 	andseq	r0, r3, fp, lsl #2
 7d8:	000d0e00 	andeq	r0, sp, r0, lsl #28
 7dc:	0b3a0803 	bleq	e827f0 <__Stack_Size+0xe823f0>
 7e0:	0b39053b 	bleq	e41cd4 <__Stack_Size+0xe418d4>
 7e4:	0a381349 	beq	e05510 <__Stack_Size+0xe05110>
 7e8:	0d0f0000 	stceq	0, cr0, [pc, #-0]	; 7f0 <__Stack_Size+0x3f0>
 7ec:	3a0e0300 	bcc	3813f4 <__Stack_Size+0x380ff4>
 7f0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 7f4:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 7f8:	1000000a 	andne	r0, r0, sl
 7fc:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
 800:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 804:	13490b39 	movtne	r0, #39737	; 0x9b39
 808:	17110000 	ldrne	r0, [r1, -r0]
 80c:	3a0b0b01 	bcc	2c3418 <__Stack_Size+0x2c3018>
 810:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 814:	0013010b 	andseq	r0, r3, fp, lsl #2
 818:	000d1200 	andeq	r1, sp, r0, lsl #4
 81c:	0b3a0e03 	bleq	e84030 <__Stack_Size+0xe83c30>
 820:	0b390b3b 	bleq	e43514 <__Stack_Size+0xe43114>
 824:	00001349 	andeq	r1, r0, r9, asr #6
 828:	0b000f13 	bleq	447c <__Stack_Size+0x407c>
 82c:	1400000b 	strne	r0, [r0], #-11
 830:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
 834:	0b3a0b0b 	bleq	e83468 <__Stack_Size+0xe83068>
 838:	0b390b3b 	bleq	e4352c <__Stack_Size+0xe4312c>
 83c:	00001301 	andeq	r1, r0, r1, lsl #6
 840:	03000d15 	movweq	r0, #3349	; 0xd15
 844:	3b0b3a08 	blcc	2cf06c <__Stack_Size+0x2cec6c>
 848:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 84c:	000a3813 	andeq	r3, sl, r3, lsl r8
 850:	000f1600 	andeq	r1, pc, r0, lsl #12
 854:	13490b0b 	movtne	r0, #39691	; 0x9b0b
 858:	13170000 	tstne	r7, #0
 85c:	0b0e0301 	bleq	381468 <__Stack_Size+0x381068>
 860:	3b0b3a05 	blcc	2cf07c <__Stack_Size+0x2cec7c>
 864:	010b390b 	tsteq	fp, fp, lsl #18
 868:	18000013 	stmdane	r0, {r0, r1, r4}
 86c:	0c270015 	stceq	0, cr0, [r7], #-84	; 0xffffffac
 870:	15190000 	ldrne	r0, [r9, #-0]
 874:	490c2701 	stmdbmi	ip, {r0, r8, r9, sl, sp}
 878:	00130113 	andseq	r0, r3, r3, lsl r1
 87c:	00051a00 	andeq	r1, r5, r0, lsl #20
 880:	00001349 	andeq	r1, r0, r9, asr #6
 884:	0301131b 	movweq	r1, #4891	; 0x131b
 888:	3a050b0e 	bcc	1434c8 <__Stack_Size+0x1430c8>
 88c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 890:	0013010b 	andseq	r0, r3, fp, lsl #2
 894:	01131c00 	tsteq	r3, r0, lsl #24
 898:	0b0b0e03 	bleq	2c40ac <__Stack_Size+0x2c3cac>
 89c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 8a0:	13010b39 	movwne	r0, #6969	; 0x1b39
 8a4:	171d0000 	ldrne	r0, [sp, -r0]
 8a8:	3a0b0b01 	bcc	2c34b4 <__Stack_Size+0x2c30b4>
 8ac:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 8b0:	0013010b 	andseq	r0, r3, fp, lsl #2
 8b4:	000d1e00 	andeq	r1, sp, r0, lsl #28
 8b8:	0b3a0e03 	bleq	e840cc <__Stack_Size+0xe83ccc>
 8bc:	0b39053b 	bleq	e41db0 <__Stack_Size+0xe419b0>
 8c0:	00001349 	andeq	r1, r0, r9, asr #6
 8c4:	0300131f 	movweq	r1, #799	; 0x31f
 8c8:	000c3c0e 	andeq	r3, ip, lr, lsl #24
 8cc:	01152000 	tsteq	r5, r0
 8d0:	13010c27 	movwne	r0, #7207	; 0x1c27
 8d4:	34210000 	strtcc	r0, [r1], #-0
 8d8:	3a0e0300 	bcc	3814e0 <__Stack_Size+0x3810e0>
 8dc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 8e0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 8e4:	2200000a 	andcs	r0, r0, #10
 8e8:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 8ec:	0b3b0b3a 	bleq	ec35dc <__Stack_Size+0xec31dc>
 8f0:	13490b39 	movtne	r0, #39737	; 0x9b39
 8f4:	0a020c3f 	beq	839f8 <__Stack_Size+0x835f8>
 8f8:	2e230000 	cdpcs	0, 2, cr0, cr3, cr0, {0}
 8fc:	030c3f00 	movweq	r3, #52992	; 0xcf00
 900:	3b0b3a0e 	blcc	2cf140 <__Stack_Size+0x2ced40>
 904:	110b390b 	tstne	fp, fp, lsl #18
 908:	40011201 	andmi	r1, r1, r1, lsl #4
 90c:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
 910:	2e240000 	cdpcs	0, 2, cr0, cr4, cr0, {0}
 914:	030c3f01 	movweq	r3, #52993	; 0xcf01
 918:	3b0b3a0e 	blcc	2cf158 <__Stack_Size+0x2ced58>
 91c:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 920:	1113490c 	tstne	r3, ip, lsl #18
 924:	40011201 	andmi	r1, r1, r1, lsl #4
 928:	0c429706 	mcrreq	7, 0, r9, r2, cr6
 92c:	00001301 	andeq	r1, r0, r1, lsl #6
 930:	03000525 	movweq	r0, #1317	; 0x525
 934:	3b0b3a08 	blcc	2cf15c <__Stack_Size+0x2ced5c>
 938:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 93c:	b7060213 	smladlt	r6, r3, r2, r0
 940:	00000642 	andeq	r0, r0, r2, asr #12
 944:	03000526 	movweq	r0, #1318	; 0x526
 948:	3b0b3a0e 	blcc	2cf188 <__Stack_Size+0x2ced88>
 94c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 950:	b7060213 	smladlt	r6, r3, r2, r0
 954:	00000642 	andeq	r0, r0, r2, asr #12
 958:	31011d27 	tstcc	r1, r7, lsr #26
 95c:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
 960:	01110b42 	tsteq	r1, r2, asr #22
 964:	0b580112 	bleq	1600db4 <__Stack_Size+0x16009b4>
 968:	0b570b59 	bleq	15c36d4 <__Stack_Size+0x15c32d4>
 96c:	05280000 	streq	r0, [r8, #-0]!
 970:	02133100 	andseq	r3, r3, #0, 2
 974:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
 978:	89290000 	stmdbhi	r9!, {}	; <UNPREDICTABLE>
 97c:	11010182 	smlabbne	r1, r2, r1, r0
 980:	00133101 	andseq	r3, r3, r1, lsl #2
 984:	828a2a00 	addhi	r2, sl, #0, 20
 988:	0a020001 	beq	80994 <__Stack_Size+0x80594>
 98c:	000a4291 	muleq	sl, r1, r2
 990:	00052b00 	andeq	r2, r5, r0, lsl #22
 994:	0b3a0e03 	bleq	e841a8 <__Stack_Size+0xe83da8>
 998:	0b390b3b 	bleq	e4368c <__Stack_Size+0xe4328c>
 99c:	0a021349 	beq	856c8 <__Stack_Size+0x852c8>
 9a0:	342c0000 	strtcc	r0, [ip], #-0
 9a4:	3a080300 	bcc	2015ac <__Stack_Size+0x2011ac>
 9a8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 9ac:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 9b0:	2d00000a 	stccs	0, cr0, [r0, #-40]	; 0xffffffd8
 9b4:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 904 <__Stack_Size+0x504>
 9b8:	0b3a0e03 	bleq	e841cc <__Stack_Size+0xe83dcc>
 9bc:	0b390b3b 	bleq	e436b0 <__Stack_Size+0xe432b0>
 9c0:	01110c27 	tsteq	r1, r7, lsr #24
 9c4:	0a400112 	beq	1000e14 <__Stack_Size+0x1000a14>
 9c8:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
 9cc:	2e000013 	mcrcs	0, 0, r0, cr0, cr3, {0}
 9d0:	00000026 	andeq	r0, r0, r6, lsr #32
 9d4:	03012e2f 	movweq	r2, #7727	; 0x1e2f
 9d8:	3b0b3a0e 	blcc	2cf218 <__Stack_Size+0x2cee18>
 9dc:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 9e0:	2013490c 	andscs	r4, r3, ip, lsl #18
 9e4:	0013010b 	andseq	r0, r3, fp, lsl #2
 9e8:	00053000 	andeq	r3, r5, r0
 9ec:	0b3a0e03 	bleq	e84200 <__Stack_Size+0xe83e00>
 9f0:	0b390b3b 	bleq	e436e4 <__Stack_Size+0xe432e4>
 9f4:	00001349 	andeq	r1, r0, r9, asr #6
 9f8:	03000531 	movweq	r0, #1329	; 0x531
 9fc:	3b0b3a08 	blcc	2cf224 <__Stack_Size+0x2cee24>
 a00:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 a04:	32000013 	andcc	r0, r0, #19
 a08:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 958 <__Stack_Size+0x558>
 a0c:	40870c3c 	addmi	r0, r7, ip, lsr ip
 a10:	3a0e030e 	bcc	381650 <__Stack_Size+0x381250>
 a14:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 a18:	0000000b 	andeq	r0, r0, fp

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	000002a1 	andeq	r0, r0, r1, lsr #5
   4:	00af0003 	adceq	r0, pc, r3
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	73010000 	movwvc	r0, #4096	; 0x1000
  1c:	6c006372 	stcvs	3, cr6, [r0], {114}	; 0x72
  20:	692f6269 	stmdbvs	pc!, {r0, r3, r5, r6, r9, sp, lr}	; <UNPREDICTABLE>
  24:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
  28:	2f006564 	svccs	0x00006564
  2c:	2f727375 	svccs	0x00727375
  30:	2f62696c 	svccs	0x0062696c
  34:	2f636367 	svccs	0x00636367
  38:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
  3c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
  40:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
  44:	2e382f69 	cdpcs	15, 3, cr2, cr8, cr9, {3}
  48:	2f312e33 	svccs	0x00312e33
  4c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
  50:	00656475 	rsbeq	r6, r5, r5, ror r4
  54:	6f6c6300 	svcvs	0x006c6300
  58:	682e6b63 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
  5c:	00000100 	andeq	r0, r0, r0, lsl #2
  60:	6e69616d 	powvsez	f6, f1, #5.0
  64:	0100632e 	tsteq	r0, lr, lsr #6
  68:	6f630000 	svcvs	0x00630000
  6c:	635f6572 	cmpvs	pc, #478150656	; 0x1c800000
  70:	682e336d 	stmdavs	lr!, {r0, r2, r3, r5, r6, r8, r9, ip, sp}
  74:	00000200 	andeq	r0, r0, r0, lsl #4
  78:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
  7c:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
  80:	00000300 	andeq	r0, r0, r0, lsl #6
  84:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
  88:	735f6d65 	cmpvc	pc, #6464	; 0x1940
  8c:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
  90:	78783166 	ldmdavc	r8!, {r1, r2, r5, r6, r8, ip, sp}^
  94:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
  98:	74730000 	ldrbtvc	r0, [r3], #-0
  9c:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
  a0:	78333031 	ldmdavc	r3!, {r0, r4, r5, ip, sp}
  a4:	00682e62 	rsbeq	r2, r8, r2, ror #28
  a8:	75000002 	strvc	r0, [r0, #-2]
  ac:	6c5f6273 	lfmvs	f6, 2, [pc], {115}	; 0x73
  b0:	682e6269 	stmdavs	lr!, {r0, r3, r5, r6, r9, sp, lr}
  b4:	00000100 	andeq	r0, r0, r0, lsl #2
  b8:	00150500 	andseq	r0, r5, r0, lsl #10
  bc:	01200205 			; <UNDEFINED> instruction: 0x01200205
  c0:	0c030800 	stceq	8, cr0, [r3], {-0}
  c4:	13030501 	movwne	r0, #13569	; 0x3501
  c8:	0b051313 	bleq	144d1c <__Stack_Size+0x14491c>
  cc:	03050106 	movweq	r0, #20742	; 0x5106
  d0:	0b055906 	bleq	1564f0 <__Stack_Size+0x1560f0>
  d4:	03050106 	movweq	r0, #20742	; 0x5106
  d8:	0b054b06 	bleq	152cf8 <__Stack_Size+0x1528f8>
  dc:	03050106 	movweq	r0, #20742	; 0x5106
  e0:	0b054b06 	bleq	152d00 <__Stack_Size+0x152900>
  e4:	05051106 	streq	r1, [r5, #-262]	; 0xfffffefa
  e8:	0b053006 	bleq	14c108 <__Stack_Size+0x14bd08>
  ec:	07050106 	streq	r0, [r5, -r6, lsl #2]
  f0:	00030520 	andeq	r0, r3, r0, lsr #10
  f4:	2d020402 	cfstrscs	mvf0, [r2, #-8]
  f8:	02040200 	andeq	r0, r4, #0, 4
  fc:	23190520 	tstcs	r9, #32, 10	; 0x8000000
 100:	24030a05 	strcs	r0, [r3], #-2565	; 0xfffff5fb
 104:	2101052e 	tstcs	r1, lr, lsr #10
 108:	03060305 	movweq	r0, #25349	; 0x6305
 10c:	05132076 	ldreq	r2, [r3, #-118]	; 0xffffff8a
 110:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
 114:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
 118:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
 11c:	052f0603 	streq	r0, [pc, #-1539]!	; fffffb21 <BootRAM+0xef702c2>
 120:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
 124:	052f0603 	streq	r0, [pc, #-1539]!	; fffffb29 <BootRAM+0xef702ca>
 128:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
 12c:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
 130:	0511060d 	ldreq	r0, [r1, #-1549]	; 0xfffff9f3
 134:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
 138:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
 13c:	07052013 	smladeq	r5, r3, r0, r2
 140:	2d03052e 	cfstr32cs	mvfx0, [r3, #-184]	; 0xffffff48
 144:	23190520 	tstcs	r9, #32, 10	; 0x8000000
 148:	0603052e 	streq	r0, [r3], -lr, lsr #10
 14c:	05015d03 	streq	r5, [r1, #-3331]	; 0xfffff2fd
 150:	01770308 	cmneq	r7, r8, lsl #6
 154:	0a030305 	beq	c0d70 <__Stack_Size+0xc0970>
 158:	060e0501 	streq	r0, [lr], -r1, lsl #10
 15c:	06030501 	streq	r0, [r3], -r1, lsl #10
 160:	060e0559 			; <UNDEFINED> instruction: 0x060e0559
 164:	06030501 	streq	r0, [r3], -r1, lsl #10
 168:	060e054c 	streq	r0, [lr], -ip, asr #10
 16c:	06030501 	streq	r0, [r3], -r1, lsl #10
 170:	060e054b 	streq	r0, [lr], -fp, asr #10
 174:	06030501 	streq	r0, [r3], -r1, lsl #10
 178:	0607054c 	streq	r0, [r7], -ip, asr #10
 17c:	06030501 	streq	r0, [r3], -r1, lsl #10
 180:	13151321 	tstne	r5, #-2080374784	; 0x84000000
 184:	2f141314 	svccs	0x00141314
 188:	01060705 	tsteq	r6, r5, lsl #14
 18c:	0603052e 	streq	r0, [r3], -lr, lsr #10
 190:	060d0530 			; <UNDEFINED> instruction: 0x060d0530
 194:	06030501 	streq	r0, [r3], -r1, lsl #10
 198:	060b0522 	streq	r0, [fp], -r2, lsr #10
 19c:	03052001 	movweq	r2, #20481	; 0x5001
 1a0:	0b053d06 	bleq	14f5c0 <__Stack_Size+0x14f1c0>
 1a4:	05051106 	streq	r1, [r5, #-262]	; 0xfffffefa
 1a8:	0b053006 	bleq	14c1c8 <__Stack_Size+0x14bdc8>
 1ac:	07050106 	streq	r0, [r5, -r6, lsl #2]
 1b0:	2d030520 	cfstr32cs	mvfx0, [r3, #-128]	; 0xffffff80
 1b4:	23190520 	tstcs	r9, #32, 10	; 0x8000000
 1b8:	2c050204 	sfmcs	f0, 4, [r5], {4}
 1bc:	02050006 	andeq	r0, r5, #6
 1c0:	080001ce 	stmdaeq	r0, {r1, r2, r3, r6, r7, r8}
 1c4:	05015703 	streq	r5, [r1, #-1795]	; 0xfffff8fd
 1c8:	0105012d 	tsteq	r5, sp, lsr #2
 1cc:	1a050106 	bne	1405ec <__Stack_Size+0x1401ec>
 1d0:	03052206 	movweq	r2, #20998	; 0x5206
 1d4:	00080513 	andeq	r0, r8, r3, lsl r5
 1d8:	06010402 	streq	r0, [r1], -r2, lsl #8
 1dc:	04020001 	streq	r0, [r2], #-1
 1e0:	01052e01 	tsteq	r5, r1, lsl #28
 1e4:	00100521 	andseq	r0, r0, r1, lsr #10
 1e8:	06020402 	streq	r0, [r2], -r2, lsl #8
 1ec:	0002021f 	andeq	r0, r2, pc, lsl r2
 1f0:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
 1f4:	05000f05 	streq	r0, [r0, #-3845]	; 0xfffff0fb
 1f8:	00094402 	andeq	r4, r9, r2, lsl #8
 1fc:	010d0308 	tsteq	sp, r8, lsl #6
 200:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
 204:	0511060f 	ldreq	r0, [r1, #-1551]	; 0xfffff9f1
 208:	2f062103 	svccs	0x00062103
 20c:	01061005 	tsteq	r6, r5
 210:	05220305 	streq	r0, [r2, #-773]!	; 0xfffffcfb
 214:	03051e10 	movweq	r1, #24080	; 0x5e10
 218:	01014c06 	tsteq	r1, r6, lsl #24
 21c:	06200101 	strteq	r0, [r0], -r1, lsl #2
 220:	2e062d13 	mcrcs	13, 0, r2, cr6, cr3, {0}
 224:	1605202e 	strne	r2, [r5], -lr, lsr #32
 228:	01010101 	tsteq	r1, r1, lsl #2
 22c:	2e2e2001 	cdpcs	0, 2, cr2, cr14, cr1, {0}
 230:	01062006 	tsteq	r6, r6
 234:	01012905 	tsteq	r1, r5, lsl #18
 238:	20010101 	andcs	r0, r1, r1, lsl #2
 23c:	20062e2e 	andcs	r2, r6, lr, lsr #28
 240:	03050106 	movweq	r0, #20742	; 0x5106
 244:	01010113 	tsteq	r1, r3, lsl r1
 248:	2e2e2001 	cdpcs	0, 2, cr2, cr14, cr1, {0}
 24c:	01062006 	tsteq	r6, r6
 250:	01011605 	tsteq	r1, r5, lsl #12
 254:	20010101 	andcs	r0, r1, r1, lsl #2
 258:	20062e2e 	andcs	r2, r6, lr, lsr #28
 25c:	03050106 	movweq	r0, #20742	; 0x5106
 260:	03042f14 	movweq	r2, #20244	; 0x4f14
 264:	9e031605 	cfmadd32ls	mvax0, mvfx1, mvfx3, mvfx5
 268:	35050109 	strcc	r0, [r5, #-265]	; 0xfffffef7
 26c:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
 270:	e7030605 	str	r0, [r3, -r5, lsl #12]
 274:	03052076 	movweq	r2, #20598	; 0x5076
 278:	01040200 	mrseq	r0, R12_usr
 27c:	05051d06 	streq	r1, [r5, #-3334]	; 0xfffff2fa
 280:	01040200 	mrseq	r0, R12_usr
 284:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
 288:	02002f01 	andeq	r2, r0, #1, 30
 28c:	00010104 	andeq	r0, r1, r4, lsl #2
 290:	06010402 	streq	r0, [r1], -r2, lsl #8
 294:	04020021 	streq	r0, [r2], #-33	; 0xffffffdf
 298:	02001f01 	andeq	r1, r0, #1, 30
 29c:	3d060104 	stfccs	f0, [r6, #-16]
 2a0:	01000a02 	tsteq	r0, r2, lsl #20
 2a4:	00078d01 	andeq	r8, r7, r1, lsl #26
 2a8:	a7000300 	strge	r0, [r0, -r0, lsl #6]
 2ac:	02000000 	andeq	r0, r0, #0
 2b0:	0d0efb01 	vstreq	d15, [lr, #-4]
 2b4:	01010100 	mrseq	r0, (UNDEF: 17)
 2b8:	00000001 	andeq	r0, r0, r1
 2bc:	01000001 	tsteq	r0, r1
 2c0:	00637273 	rsbeq	r7, r3, r3, ror r2
 2c4:	2f62696c 	svccs	0x0062696c
 2c8:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
 2cc:	00656475 	rsbeq	r6, r5, r5, ror r4
 2d0:	7273752f 	rsbsvc	r7, r3, #197132288	; 0xbc00000
 2d4:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
 2d8:	6363672f 	cmnvs	r3, #12320768	; 0xbc0000
 2dc:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
 2e0:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
 2e4:	61652d65 	cmnvs	r5, r5, ror #26
 2e8:	382f6962 	stmdacc	pc!, {r1, r5, r6, r8, fp, sp, lr}	; <UNPREDICTABLE>
 2ec:	312e332e 			; <UNDEFINED> instruction: 0x312e332e
 2f0:	636e692f 	cmnvs	lr, #770048	; 0xbc000
 2f4:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
 2f8:	73750000 	cmnvc	r5, #0
 2fc:	696c5f62 	stmdbvs	ip!, {r1, r5, r6, r8, r9, sl, fp, ip, lr}^
 300:	00632e62 	rsbeq	r2, r3, r2, ror #28
 304:	63000001 	movwvs	r0, #1
 308:	5f65726f 	svcpl	0x0065726f
 30c:	2e336d63 	cdpcs	13, 3, cr6, cr3, cr3, {3}
 310:	00020068 	andeq	r0, r2, r8, rrx
 314:	62737500 	rsbsvs	r7, r3, #0, 10
 318:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
 31c:	0100682e 	tsteq	r0, lr, lsr #16
 320:	74730000 	ldrbtvc	r0, [r3], #-0
 324:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
 328:	0300682e 	movweq	r6, #2094	; 0x82e
 32c:	74730000 	ldrbtvc	r0, [r3], #-0
 330:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
 334:	78333031 	ldmdavc	r3!, {r0, r4, r5, ip, sp}
 338:	00682e62 	rsbeq	r2, r8, r2, ror #28
 33c:	73000002 	movwvc	r0, #2
 340:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
 344:	74735f6d 	ldrbtvc	r5, [r3], #-3949	; 0xfffff093
 348:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
 34c:	2e787831 	mrccs	8, 3, r7, cr8, cr1, {1}
 350:	00020068 	andeq	r0, r2, r8, rrx
 354:	2b050000 	blcs	14035c <__Stack_Size+0x13ff5c>
 358:	dc020500 	cfstr32le	mvfx0, [r2], {-0}
 35c:	03080001 	movweq	r0, #32769	; 0x8001
 360:	2c050116 	stfcss	f0, [r5], {22}
 364:	06010501 	streq	r0, [r1], -r1, lsl #10
 368:	065c0501 	ldrbeq	r0, [ip], -r1, lsl #10
 36c:	015d053f 	cmpeq	sp, pc, lsr r5
 370:	01060105 	tsteq	r6, r5, lsl #2
 374:	06630520 	strbteq	r0, [r3], -r0, lsr #10
 378:	01640521 	cmneq	r4, r1, lsr #10
 37c:	01060105 	tsteq	r6, r5, lsl #2
 380:	06110520 	ldreq	r0, [r1], -r0, lsr #10
 384:	05201c03 	streq	r1, [r0, #-3075]!	; 0xfffff3fd
 388:	10051303 	andne	r1, r5, r3, lsl #6
 38c:	03050106 	movweq	r0, #20742	; 0x5106
 390:	1f100521 	svcne	0x00100521
 394:	4b060305 	blmi	180fb0 <__Stack_Size+0x180bb0>
 398:	01010101 	tsteq	r1, r1, lsl #2
 39c:	060f0520 	streq	r0, [pc], -r0, lsr #10
 3a0:	1d030515 	cfstr32ne	mvfx0, [r3, #-84]	; 0xffffffac
 3a4:	202e2e06 	eorcs	r2, lr, r6, lsl #28
 3a8:	2e060114 	mcrcs	1, 0, r0, cr6, cr4, {0}
 3ac:	0f052106 	svceq	0x00052106
 3b0:	03050106 	movweq	r0, #20742	; 0x5106
 3b4:	07053d06 	streq	r3, [r5, -r6, lsl #26]
 3b8:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
 3bc:	2e05110f 	adfcss	f1, f5, #10.0
 3c0:	03040200 	movweq	r0, #16896	; 0x4200
 3c4:	03052106 	movweq	r2, #20742	; 0x5106
 3c8:	03040200 	movweq	r0, #16896	; 0x4200
 3cc:	02002006 	andeq	r2, r0, #6
 3d0:	06200304 	strteq	r0, [r0], -r4, lsl #6
 3d4:	060f0521 	streq	r0, [pc], -r1, lsr #10
 3d8:	06030501 	streq	r0, [r3], -r1, lsl #10
 3dc:	060f052f 	streq	r0, [pc], -pc, lsr #10
 3e0:	06030501 	streq	r0, [r3], -r1, lsl #10
 3e4:	060f052f 	streq	r0, [pc], -pc, lsr #10
 3e8:	06030501 	streq	r0, [r3], -r1, lsl #10
 3ec:	060f052f 	streq	r0, [pc], -pc, lsr #10
 3f0:	06030501 	streq	r0, [r3], -r1, lsl #10
 3f4:	060f052f 	streq	r0, [pc], -pc, lsr #10
 3f8:	03052e01 	movweq	r2, #24065	; 0x5e01
 3fc:	02042f06 	andeq	r2, r4, #6, 30
 400:	9b031605 	blls	c5c1c <__Stack_Size+0xc581c>
 404:	0305010b 	movweq	r0, #20747	; 0x510b
 408:	06270514 			; <UNDEFINED> instruction: 0x06270514
 40c:	01044a01 	tsteq	r4, r1, lsl #20
 410:	03060305 	movweq	r0, #25349	; 0x6305
 414:	010174e4 	smlatteq	r1, r4, r4, r7
 418:	3d060105 	stfccs	f0, [r6, #-20]	; 0xffffffec
 41c:	03064f05 	movweq	r4, #28421	; 0x6f05
 420:	05ac00e6 	streq	r0, [ip, #230]!	; 0xe6
 424:	05131303 	ldreq	r1, [r3, #-771]	; 0xfffffcfd
 428:	0510064f 	ldreq	r0, [r0, #-1615]	; 0xfffff9b1
 42c:	03052209 	movweq	r2, #21001	; 0x5209
 430:	05053006 	streq	r3, [r5, #-6]
 434:	062d5906 	strteq	r5, [sp], -r6, lsl #18
 438:	3e060121 	adfccsp	f0, f6, f1
 43c:	061e222c 	ldreq	r2, [lr], -ip, lsr #4
 440:	03050130 	movweq	r0, #20784	; 0x5130
 444:	060c0569 	streq	r0, [ip], -r9, ror #10
 448:	06030501 	streq	r0, [r3], -r1, lsl #10
 44c:	06141321 	ldreq	r1, [r4], -r1, lsr #6
 450:	2e063c13 	mcrcs	12, 0, r3, cr6, cr3, {0}
 454:	054b1905 	strbeq	r1, [fp, #-2309]	; 0xfffff6fb
 458:	2e01061d 	mcrcs	6, 0, r0, cr1, cr13, {0}
 45c:	051e0705 	ldreq	r0, [lr, #-1797]	; 0xfffff8fb
 460:	03053312 	movweq	r3, #21266	; 0x5312
 464:	12053006 	andne	r3, r5, #6
 468:	03052006 	movweq	r2, #20486	; 0x5006
 46c:	05052206 	streq	r2, [r5, #-518]	; 0xfffffdfa
 470:	06583c06 	ldrbeq	r3, [r8], -r6, lsl #24
 474:	06230521 	strteq	r0, [r3], -r1, lsr #10
 478:	06050501 	streq	r0, [r5], -r1, lsl #10
 47c:	06160521 	ldreq	r0, [r6], -r1, lsr #10
 480:	06050501 	streq	r0, [r5], -r1, lsl #10
 484:	2006013d 	andcs	r0, r6, sp, lsr r1
 488:	0e030c05 	cdpeq	12, 0, cr0, cr3, cr5, {0}
 48c:	1e050582 	cfsh32ne	mvfx0, mvfx5, #-62
 490:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
 494:	01060c05 	tsteq	r6, r5, lsl #24
 498:	05210105 	streq	r0, [r1, #-261]!	; 0xfffffefb
 49c:	69030619 	stmdbvs	r3, {r0, r3, r4, r9, sl}
 4a0:	061d0520 	ldreq	r0, [sp], -r0, lsr #10
 4a4:	0e052e01 	cdpeq	14, 0, cr2, cr5, cr1, {0}
 4a8:	12052106 	andne	r2, r5, #-2147483647	; 0x80000001
 4ac:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
 4b0:	09030605 	stmdbeq	r3, {r0, r2, r9, sl}
 4b4:	06230520 	strteq	r0, [r3], -r0, lsr #10
 4b8:	06050501 	streq	r0, [r5], -r1, lsl #10
 4bc:	06260521 	strteq	r0, [r6], -r1, lsr #10
 4c0:	1f070513 	svcne	0x00070513
 4c4:	26052106 	strcs	r2, [r5], -r6, lsl #2
 4c8:	31391506 	teqcc	r9, r6, lsl #10
 4cc:	0607051d 			; <UNDEFINED> instruction: 0x0607051d
 4d0:	06270521 	strteq	r0, [r7], -r1, lsr #10
 4d4:	2e330516 	mrccs	5, 1, r0, cr3, cr6, {0}
 4d8:	052a2e05 	streq	r2, [sl, #-3589]!	; 0xfffff1fb
 4dc:	13300607 	teqne	r0, #7340032	; 0x700000
 4e0:	06330513 			; <UNDEFINED> instruction: 0x06330513
 4e4:	2e270501 	cfsh64cs	mvdx0, mvdx7, #1
 4e8:	4c060505 	cfstr32mi	mvfx0, [r6], {5}
 4ec:	01061705 	tsteq	r6, r5, lsl #14
 4f0:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
 4f4:	05200601 	streq	r0, [r0, #-1537]!	; 0xfffff9ff
 4f8:	05e90656 	strbeq	r0, [r9, #1622]!	; 0x656
 4fc:	05131303 	ldreq	r1, [r3, #-771]	; 0xfffffcfd
 500:	05100656 	ldreq	r0, [r0, #-1622]	; 0xfffff9aa
 504:	09052403 	stmdbeq	r5, {r0, r1, sl, sp}
 508:	0603052c 	streq	r0, [r3], -ip, lsr #10
 50c:	6e060130 	fltvssp	f6, r0
 510:	06207803 	strteq	r7, [r0], -r3, lsl #16
 514:	05a00191 	streq	r0, [r0, #401]!	; 0x191
 518:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
 51c:	13210603 			; <UNDEFINED> instruction: 0x13210603
 520:	062e0614 			; <UNDEFINED> instruction: 0x062e0614
 524:	4b19052f 	blmi	6419e8 <__Stack_Size+0x6415e8>
 528:	01061d05 	tsteq	r6, r5, lsl #26
 52c:	3112052e 	tstcc	r2, lr, lsr #10
 530:	30060305 	andcc	r0, r6, r5, lsl #6
 534:	01061205 	tsteq	r6, r5, lsl #4
 538:	24060305 	strcs	r0, [r6], #-773	; 0xfffffcfb
 53c:	05053c06 	streq	r3, [r5, #-3078]	; 0xfffff3fa
 540:	2106742e 	tstcs	r6, lr, lsr #8
 544:	13062405 	movwne	r2, #25605	; 0x6405
 548:	052d2305 	streq	r2, [sp, #-773]!	; 0xfffffcfb
 54c:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
 550:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
 554:	052f0605 	streq	r0, [pc, #-1541]!	; ffffff57 <BootRAM+0xef706f8>
 558:	05010623 	streq	r0, [r1, #-1571]	; 0xfffff9dd
 55c:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
 560:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
 564:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
 568:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
 56c:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
 570:	2e01062e 	cfmadd32cs	mvax1, mvfx0, mvfx1, mvfx14
 574:	0d030505 	cfstr32eq	mvfx0, [r3, #-20]	; 0xffffffec
 578:	0603053c 			; <UNDEFINED> instruction: 0x0603053c
 57c:	06140522 	ldreq	r0, [r4], -r2, lsr #10
 580:	230c0501 	movwcs	r0, #50433	; 0xc501
 584:	052b1405 	streq	r1, [fp, #-1029]!	; 0xfffffbfb
 588:	052f0603 	streq	r0, [pc, #-1539]!	; ffffff8d <BootRAM+0xef7072e>
 58c:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
 590:	1405220c 	strne	r2, [r5], #-524	; 0xfffffdf4
 594:	0603051e 			; <UNDEFINED> instruction: 0x0603051e
 598:	06010530 			; <UNDEFINED> instruction: 0x06010530
 59c:	06190513 			; <UNDEFINED> instruction: 0x06190513
 5a0:	05205e03 	streq	r5, [r0, #-3587]!	; 0xfffff1fd
 5a4:	2e01061d 	mcrcs	6, 0, r0, cr1, cr13, {0}
 5a8:	21061905 	tstcs	r6, r5, lsl #18
 5ac:	01061d05 	tsteq	r6, r5, lsl #26
 5b0:	060e052e 	streq	r0, [lr], -lr, lsr #10
 5b4:	06120521 	ldreq	r0, [r2], -r1, lsr #10
 5b8:	05052e01 	streq	r2, [r5, #-3585]	; 0xfffff1ff
 5bc:	200f0306 	andcs	r0, pc, r6, lsl #6
 5c0:	01062305 	tsteq	r6, r5, lsl #6
 5c4:	21060505 	tstcs	r6, r5, lsl #10
 5c8:	13060705 	movwne	r0, #26373	; 0x6705
 5cc:	051f2305 	ldreq	r2, [pc, #-773]	; 2cf <_Minimum_Stack_Size+0x1cf>
 5d0:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
 5d4:	05130647 	ldreq	r0, [r3, #-1607]	; 0xfffff9b9
 5d8:	21061f07 	tstcs	r6, r7, lsl #30
 5dc:	01064705 	tsteq	r6, r5, lsl #14
 5e0:	053c2605 	ldreq	r2, [ip, #-1541]!	; 0xfffff9fb
 5e4:	054b0607 	strbeq	r0, [fp, #-1543]	; 0xfffff9f9
 5e8:	05010650 	streq	r0, [r1, #-1616]	; 0xfffff9b0
 5ec:	27053249 	strcs	r3, [r5, -r9, asr #4]
 5f0:	06050566 	streq	r0, [r5], -r6, ror #10
 5f4:	019f0168 	orrseq	r0, pc, r8, ror #2
 5f8:	05990705 	ldreq	r0, [r9, #1797]	; 0x705
 5fc:	05010647 	streq	r0, [r1, #-1607]	; 0xfffff9b9
 600:	07053c26 	streq	r3, [r5, -r6, lsr #24]
 604:	05134b06 	ldreq	r4, [r3, #-2822]	; 0xfffff4fa
 608:	05010655 	streq	r0, [r1, #-1621]	; 0xfffff9ab
 60c:	0c030619 	stceq	6, cr0, [r3], {25}
 610:	130305ac 	movwne	r0, #13740	; 0x35ac
 614:	11061905 	tstne	r6, r5, lsl #18
 618:	05210905 	streq	r0, [r1, #-2309]!	; 0xfffff6fb
 61c:	2f063c05 	svccs	0x00063c05
 620:	060f052f 	streq	r0, [pc], -pc, lsr #10
 624:	2f0e0501 	svccs	0x000e0501
 628:	051f0f05 	ldreq	r0, [pc, #-3845]	; fffff72b <BootRAM+0xef6fecc>
 62c:	052f0605 	streq	r0, [pc, #-1541]!	; 2f <_Minimum_Stack_Size-0xd1>
 630:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
 634:	053d0605 	ldreq	r0, [sp, #-1541]!	; 0xfffff9fb
 638:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
 63c:	10052224 	andne	r2, r5, r4, lsr #4
 640:	0605051e 			; <UNDEFINED> instruction: 0x0605051e
 644:	0109052f 	tsteq	r9, pc, lsr #10
 648:	10050106 	andne	r0, r5, r6, lsl #2
 64c:	00070511 	andeq	r0, r7, r1, lsl r5
 650:	06030402 	streq	r0, [r3], -r2, lsl #8
 654:	00050530 	andeq	r0, r5, r0, lsr r5
 658:	06030402 	streq	r0, [r3], -r2, lsl #8
 65c:	0024051f 	eoreq	r0, r4, pc, lsl r5
 660:	2f030402 	svccs	0x00030402
 664:	02001405 	andeq	r1, r0, #83886080	; 0x5000000
 668:	052e0304 	streq	r0, [lr, #-772]!	; 0xfffffcfc
 66c:	04020005 	streq	r0, [r2], #-5
 670:	24062d03 	strcs	r2, [r6], #-3331	; 0xfffff2fd
 674:	01060f05 	tsteq	r6, r5, lsl #30
 678:	053d0505 	ldreq	r0, [sp, #-1285]!	; 0xfffffafb
 67c:	05051f0f 	streq	r1, [r5, #-3855]	; 0xfffff0f1
 680:	67592f06 	ldrbvs	r2, [r9, -r6, lsl #30]
 684:	01060d05 	tsteq	r6, r5, lsl #26
 688:	2f060505 	svccs	0x00060505
 68c:	05310305 	ldreq	r0, [r1, #-773]!	; 0xfffffcfb
 690:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
 694:	2f063c05 	svccs	0x00063c05
 698:	01061805 	tsteq	r6, r5, lsl #16
 69c:	052e0d05 	streq	r0, [lr, #-3333]!	; 0xfffff2fb
 6a0:	052f0605 	streq	r0, [pc, #-1541]!	; a3 <_Minimum_Stack_Size-0x5d>
 6a4:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
 6a8:	2f066607 	svccs	0x00066607
 6ac:	01061105 	tsteq	r6, r5, lsl #2
 6b0:	06200705 	strteq	r0, [r0], -r5, lsl #14
 6b4:	0505014b 	streq	r0, [r5, #-331]	; 0xfffffeb5
 6b8:	06080584 	streq	r0, [r8], -r4, lsl #11
 6bc:	20070501 	andcs	r0, r7, r1, lsl #10
 6c0:	10052f06 	andne	r2, r5, r6, lsl #30
 6c4:	07050106 	streq	r0, [r5, -r6, lsl #2]
 6c8:	01590620 	cmpeq	r9, r0, lsr #12
 6cc:	03058206 	movweq	r8, #20998	; 0x5206
 6d0:	09051606 	stmdbeq	r5, {r1, r2, r9, sl, ip}
 6d4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
 6d8:	2f2f063c 	svccs	0x002f063c
 6dc:	01060f05 	tsteq	r6, r5, lsl #30
 6e0:	67060505 	strvs	r0, [r6, -r5, lsl #10]
 6e4:	01060f05 	tsteq	r6, r5, lsl #30
 6e8:	4d060305 	stcmi	3, cr0, [r6, #-20]	; 0xffffffec
 6ec:	01060905 	tsteq	r6, r5, lsl #18
 6f0:	063c0505 	ldrteq	r0, [ip], -r5, lsl #10
 6f4:	060f052f 	streq	r0, [pc], -pc, lsr #10
 6f8:	06050501 	streq	r0, [r5], -r1, lsl #10
 6fc:	060f0583 	streq	r0, [pc], -r3, lsl #11
 700:	4c010501 	cfstr32mi	mvfx0, [r1], {1}
 704:	03064305 	movweq	r4, #25349	; 0x6305
 708:	0305f20f 	movweq	pc, #21007	; 0x520f	; <UNPREDICTABLE>
 70c:	06430513 			; <UNDEFINED> instruction: 0x06430513
 710:	26030511 			; <UNDEFINED> instruction: 0x26030511
 714:	051b3305 	ldreq	r3, [fp, #-773]	; 0xfffffcfb
 718:	03052010 	movweq	r2, #20496	; 0x5010
 71c:	3f054b06 	svccc	0x00054b06
 720:	17051506 	strne	r1, [r5, -r6, lsl #10]
 724:	2338051d 	teqcs	r8, #121634816	; 0x7400000
 728:	05470c05 	strbeq	r0, [r7, #-3077]	; 0xfffff3fb
 72c:	13220603 			; <UNDEFINED> instruction: 0x13220603
 730:	01063805 	tsteq	r6, r5, lsl #16
 734:	21060305 	tstcs	r6, r5, lsl #6
 738:	05010705 	streq	r0, [r1, #-1797]	; 0xfffff8fb
 73c:	04020003 	streq	r0, [r2], #-3
 740:	06010601 	streq	r0, [r1], -r1, lsl #12
 744:	2014063f 	andscs	r0, r4, pc, lsr r6
 748:	053a1005 	ldreq	r1, [sl, #-5]!
 74c:	01220603 			; <UNDEFINED> instruction: 0x01220603
 750:	01053c06 	tsteq	r5, r6, lsl #24
 754:	00050591 	muleq	r5, r1, r5
 758:	06030402 	streq	r0, [r3], -r2, lsl #8
 75c:	0011051b 	andseq	r0, r1, fp, lsl r5
 760:	06030402 	streq	r0, [r3], -r2, lsl #8
 764:	04020001 	streq	r0, [r2], #-1
 768:	02004a03 	andeq	r4, r0, #12288	; 0x3000
 76c:	05200304 	streq	r0, [r0, #-772]!	; 0xfffffcfc
 770:	05000622 	streq	r0, [r0, #-1570]	; 0xfffff9de
 774:	0005f802 	andeq	pc, r5, r2, lsl #16
 778:	7e850308 	cdpvc	3, 8, cr0, cr5, cr8, {0}
 77c:	13030501 	movwne	r0, #13569	; 0x3501
 780:	11062205 	tstne	r6, r5, lsl #4
 784:	05210b05 	streq	r0, [r1, #-2821]!	; 0xfffff4fb
 788:	0b052024 	bleq	148820 <__Stack_Size+0x148420>
 78c:	2e240520 	cfsh64cs	mvdx0, mvdx4, #16
 790:	06200505 	strteq	r0, [r0], -r5, lsl #10
 794:	0610053d 			; <UNDEFINED> instruction: 0x0610053d
 798:	06030501 	streq	r0, [r3], -r1, lsl #10
 79c:	0608055b 			; <UNDEFINED> instruction: 0x0608055b
 7a0:	20050501 	andcs	r0, r5, r1, lsl #10
 7a4:	4b060305 	blmi	1813c0 <__Stack_Size+0x180fc0>
 7a8:	01060e05 	tsteq	r6, r5, lsl #28
 7ac:	05200505 	streq	r0, [r0, #-1285]!	; 0xfffffafb
 7b0:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
 7b4:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
 7b8:	04210603 	strteq	r0, [r1], #-1539	; 0xfffff9fd
 7bc:	f2030603 	vmax.s8	d0, d3, d3
 7c0:	04580100 	ldrbeq	r0, [r8], #-256	; 0xffffff00
 7c4:	8f030601 	svchi	0x00030601
 7c8:	0304017f 	movweq	r0, #16767	; 0x417f
 7cc:	f0031405 			; <UNDEFINED> instruction: 0xf0031405
 7d0:	03050100 	movweq	r0, #20736	; 0x5100
 7d4:	3c200613 	stccc	6, cr0, [r0], #-76	; 0xffffffb4
 7d8:	03060104 	movweq	r0, #24836	; 0x6104
 7dc:	05017f91 	streq	r7, [r1, #-3985]	; 0xfffff06f
 7e0:	05150605 	ldreq	r0, [r5, #-1541]	; 0xfffff9fb
 7e4:	03051d0d 	movweq	r1, #23821	; 0x5d0d
 7e8:	05143d06 	ldreq	r3, [r4, #-3334]	; 0xfffff2fa
 7ec:	0513060d 	ldreq	r0, [r3, #-1549]	; 0xfffff9f3
 7f0:	05052b0b 	streq	r2, [r5, #-2827]	; 0xfffff4f5
 7f4:	0d053106 	stfeqs	f3, [r5, #-24]	; 0xffffffe8
 7f8:	01050106 	tsteq	r5, r6, lsl #2
 7fc:	062d0522 	strteq	r0, [sp], -r2, lsr #10
 800:	6601f103 	strvs	pc, [r1], -r3, lsl #2
 804:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
 808:	0511062d 	ldreq	r0, [r1, #-1581]	; 0xfffff9d3
 80c:	10052133 	andne	r2, r5, r3, lsr r1
 810:	06030520 	streq	r0, [r3], -r0, lsr #10
 814:	062d054b 	strteq	r0, [sp], -fp, asr #10
 818:	22110510 	andscs	r0, r1, #16, 10	; 0x4000000
 81c:	06030520 	streq	r0, [r3], -r0, lsr #10
 820:	0605052f 	streq	r0, [r5], -pc, lsr #10
 824:	06030501 	streq	r0, [r3], -r1, lsl #10
 828:	3e051321 	cdpcc	3, 0, cr1, cr5, cr1, {1}
 82c:	0f050106 	svceq	0x00050106
 830:	2137051f 	teqcs	r7, pc, lsl r5
 834:	59060305 	stmdbpl	r6, {r0, r2, r8, r9}
 838:	06010705 	streq	r0, [r1], -r5, lsl #14
 83c:	20201001 	eorcs	r1, r0, r1
 840:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
 844:	31060304 	tstcc	r6, r4, lsl #6
 848:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
 84c:	01060304 	tsteq	r6, r4, lsl #6
 850:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
 854:	052d0304 	streq	r0, [sp, #-772]!	; 0xfffffcfc
 858:	0402000c 	streq	r0, [r2], #-12
 85c:	03052103 	movweq	r2, #20739	; 0x5103
 860:	03040200 	movweq	r0, #16896	; 0x4200
 864:	0123062d 			; <UNDEFINED> instruction: 0x0123062d
 868:	06662006 	strbteq	r2, [r6], -r6
 86c:	06010591 			; <UNDEFINED> instruction: 0x06010591
 870:	06230513 			; <UNDEFINED> instruction: 0x06230513
 874:	207e8e03 	rsbscs	r8, lr, r3, lsl #28
 878:	13130305 	tstne	r3, #335544320	; 0x14000000
 87c:	10062305 	andne	r2, r6, r5, lsl #6
 880:	3d160522 	cfldr32cc	mvfx0, [r6, #-136]	; 0xffffff78
 884:	053b2305 	ldreq	r2, [fp, #-773]!	; 0xfffffcfb
 888:	142f0603 	strtne	r0, [pc], #-1539	; 890 <__Stack_Size+0x490>
 88c:	01060505 	tsteq	r6, r5, lsl #10
 890:	07053d06 	streq	r3, [r5, -r6, lsl #26]
 894:	062e0106 	strteq	r0, [lr], -r6, lsl #2
 898:	0503042f 	streq	r0, [r3, #-1071]	; 0xfffffbd1
 89c:	00e40313 	rsceq	r0, r4, r3, lsl r3
 8a0:	13030501 	movwne	r0, #13569	; 0x3501
 8a4:	11050104 	tstne	r5, r4, lsl #2
 8a8:	7f9c0306 	svcvc	0x009c0306
 8ac:	05030401 	streq	r0, [r3, #-1025]	; 0xfffffbff
 8b0:	00e4030a 	rsceq	r0, r4, sl, lsl #6
 8b4:	042e2e20 	strteq	r2, [lr], #-3616	; 0xfffff1e0
 8b8:	06070501 	streq	r0, [r7], -r1, lsl #10
 8bc:	017f9c03 	cmneq	pc, r3, lsl #24
 8c0:	01061105 	tsteq	r6, r5, lsl #2
 8c4:	21060705 	tstcs	r6, r5, lsl #14
 8c8:	0a030305 	beq	c14e4 <__Stack_Size+0xc10e4>
 8cc:	061d0501 	ldreq	r0, [sp], -r1, lsl #10
 8d0:	200b0501 	andcs	r0, fp, r1, lsl #10
 8d4:	30060305 	andcc	r0, r6, r5, lsl #6
 8d8:	01060505 	tsteq	r6, r5, lsl #10
 8dc:	07053006 	streq	r3, [r5, -r6]
 8e0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
 8e4:	07052106 	streq	r2, [r5, -r6, lsl #2]
 8e8:	21060106 	tstcs	r6, r6, lsl #2
 8ec:	01061a05 	tsteq	r6, r5, lsl #20
 8f0:	05200705 	streq	r0, [r0, #-1797]!	; 0xfffff8fb
 8f4:	0a03060b 	beq	c2128 <__Stack_Size+0xc1d28>
 8f8:	05030458 	streq	r0, [r3, #-1112]	; 0xfffffba8
 8fc:	013b0314 	teqeq	fp, r4, lsl r3
 900:	06130305 	ldreq	r0, [r3], -r5, lsl #6
 904:	01043c2e 	tsteq	r4, lr, lsr #24
 908:	03060705 	movweq	r0, #26373	; 0x6705
 90c:	05017fac 	streq	r7, [r1, #-4012]	; 0xfffff054
 910:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
 914:	1003060b 	andne	r0, r3, fp, lsl #12
 918:	06170558 			; <UNDEFINED> instruction: 0x06170558
 91c:	220b0501 	andcs	r0, fp, #4194304	; 0x400000
 920:	051e1705 	ldreq	r1, [lr, #-1797]	; 0xfffff8fb
 924:	0621060b 	strteq	r0, [r1], -fp, lsl #12
 928:	3b140513 	blcc	501d7c <__Stack_Size+0x50197c>
 92c:	2f060b05 	svccs	0x00060b05
 930:	0305052f 	movweq	r0, #21807	; 0x552f
 934:	1405010f 	strne	r0, [r5], #-271	; 0xfffffef1
 938:	07050106 	streq	r0, [r5, -r6, lsl #2]
 93c:	03030520 	movweq	r0, #13600	; 0x3520
 940:	07052e4e 	streq	r2, [r5, -lr, asr #28]
 944:	05203203 	streq	r3, [r0, #-515]!	; 0xfffffdfd
 948:	05200625 	streq	r0, [r0, #-1573]!	; 0xfffff9db
 94c:	0501062a 	streq	r0, [r1, #-1578]	; 0xfffff9d6
 950:	053d0605 	ldreq	r0, [sp, #-1541]!	; 0xfffff9fb
 954:	014a0314 	cmpeq	sl, r4, lsl r3
 958:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
 95c:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
 960:	053d0603 	ldreq	r0, [sp, #-1539]!	; 0xfffff9fd
 964:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
 968:	062f0603 	strteq	r0, [pc], -r3, lsl #12
 96c:	0301052e 	movweq	r0, #5422	; 0x152e
 970:	050100c7 	streq	r0, [r1, #-199]	; 0xffffff39
 974:	6403060b 	strvs	r0, [r3], #-1547	; 0xfffff9f5
 978:	0503042e 	streq	r0, [r3, #-1070]	; 0xfffffbd2
 97c:	01380314 	teqeq	r8, r4, lsl r3
 980:	06130305 	ldreq	r0, [r3], -r5, lsl #6
 984:	0501044a 	streq	r0, [r1, #-1098]	; 0xfffffbb6
 988:	4b030605 	blmi	c21a4 <__Stack_Size+0xc1da4>
 98c:	060b0501 	streq	r0, [fp], -r1, lsl #10
 990:	05052001 	streq	r2, [r5, #-1]
 994:	0e052106 	adfeqs	f2, f5, f6
 998:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
 99c:	490e0521 	stmdbmi	lr, {r0, r5, r8, sl}
 9a0:	2f060505 	svccs	0x00060505
 9a4:	06202e06 	strteq	r2, [r0], -r6, lsl #28
 9a8:	06070517 			; <UNDEFINED> instruction: 0x06070517
 9ac:	05210601 	streq	r0, [r1, #-1537]!	; 0xfffff9ff
 9b0:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
 9b4:	2f062009 	svccs	0x00062009
 9b8:	01061205 	tsteq	r6, r5, lsl #4
 9bc:	2f060905 	svccs	0x00060905
 9c0:	14050304 	strne	r0, [r5], #-772	; 0xfffffcfc
 9c4:	05012a03 	streq	r2, [r1, #-2563]	; 0xfffff5fd
 9c8:	01061303 	tsteq	r6, r3, lsl #6
 9cc:	2c050104 	stfcss	f0, [r5], {4}
 9d0:	01610306 	cmneq	r1, r6, lsl #6
 9d4:	14050304 	strne	r0, [r5], #-772	; 0xfffffcfc
 9d8:	05011e03 	streq	r1, [r1, #-3587]	; 0xfffff1fd
 9dc:	4a061303 	bmi	1855f0 <__Stack_Size+0x1851f0>
 9e0:	0d050104 	stfeqs	f0, [r5, #-16]
 9e4:	01570306 	cmpeq	r7, r6, lsl #6
 9e8:	01060f05 	tsteq	r6, r5, lsl #30
 9ec:	2f060905 	svccs	0x00060905
 9f0:	01061705 	tsteq	r6, r5, lsl #14
 9f4:	2f060905 	svccs	0x00060905
 9f8:	14050304 	strne	r0, [r5], #-772	; 0xfffffcfc
 9fc:	05012603 	streq	r2, [r1, #-1539]	; 0xfffff9fd
 a00:	20061303 	andcs	r1, r6, r3, lsl #6
 a04:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
 a08:	015d0306 	cmpeq	sp, r6, lsl #6
 a0c:	01060905 	tsteq	r6, r5, lsl #18
 a10:	06580705 	ldrbeq	r0, [r8], -r5, lsl #14
 a14:	05050121 	streq	r0, [r5, #-289]	; 0xfffffedf
 a18:	060f05ae 	streq	r0, [pc], -lr, lsr #11
 a1c:	2f070501 	svccs	0x00070501
 a20:	051f0f05 	ldreq	r0, [pc, #-3845]	; fffffb23 <BootRAM+0xef702c4>
 a24:	0f052107 	svceq	0x00052107
 a28:	0605051f 			; <UNDEFINED> instruction: 0x0605051f
 a2c:	06070521 	streq	r0, [r7], -r1, lsr #10
 a30:	000f0201 	andeq	r0, pc, r1, lsl #4
 a34:	02ce0101 	sbceq	r0, lr, #1073741824	; 0x40000000
 a38:	00030000 	andeq	r0, r3, r0
 a3c:	000000f9 	strdeq	r0, [r0], -r9
 a40:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
 a44:	0101000d 	tsteq	r1, sp
 a48:	00000101 	andeq	r0, r0, r1, lsl #2
 a4c:	00000100 	andeq	r0, r0, r0, lsl #2
 a50:	63727301 	cmnvs	r2, #67108864	; 0x4000000
 a54:	73752f00 	cmnvc	r5, #0, 30
 a58:	696c2f72 	stmdbvs	ip!, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
 a5c:	63672f62 	cmnvs	r7, #392	; 0x188
 a60:	72612f63 	rsbvc	r2, r1, #396	; 0x18c
 a64:	6f6e2d6d 	svcvs	0x006e2d6d
 a68:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
 a6c:	2f696261 	svccs	0x00696261
 a70:	2e332e38 	mrccs	14, 1, r2, cr3, cr8, {1}
 a74:	6e692f31 	mcrvs	15, 3, r2, cr9, cr1, {1}
 a78:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
 a7c:	696c0065 	stmdbvs	ip!, {r0, r2, r5, r6}^
 a80:	6e692f62 	cdpvs	15, 6, cr2, cr9, cr2, {3}
 a84:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
 a88:	752f0065 	strvc	r0, [pc, #-101]!	; a2b <__Stack_Size+0x62b>
 a8c:	692f7273 	stmdbvs	pc!, {r0, r1, r4, r5, r6, r9, ip, sp, lr}	; <UNPREDICTABLE>
 a90:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
 a94:	6e2f6564 	cfsh64vs	mvdx6, mvdx15, #52
 a98:	696c7765 	stmdbvs	ip!, {r0, r2, r5, r6, r8, r9, sl, ip, sp, lr}^
 a9c:	79732f62 	ldmdbvc	r3!, {r1, r5, r6, r8, r9, sl, fp, sp}^
 aa0:	75000073 	strvc	r0, [r0, #-115]	; 0xffffff8d
 aa4:	635f6273 	cmpvs	pc, #805306375	; 0x30000007
 aa8:	7373616c 	cmnvc	r3, #108, 2
 aac:	6469685f 	strbtvs	r6, [r9], #-2143	; 0xfffff7a1
 ab0:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
 ab4:	2e656c70 	mcrcs	12, 3, r6, cr5, cr0, {3}
 ab8:	00010063 	andeq	r0, r1, r3, rrx
 abc:	62737500 	rsbsvs	r7, r3, #0, 10
 ac0:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
 ac4:	0100682e 	tsteq	r0, lr, lsr #16
 ac8:	74730000 	ldrbtvc	r0, [r3], #-0
 acc:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
 ad0:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
 ad4:	6f630000 	svcvs	0x00630000
 ad8:	635f6572 	cmpvs	pc, #478150656	; 0x1c800000
 adc:	682e336d 	stmdavs	lr!, {r0, r2, r3, r5, r6, r8, r9, ip, sp}
 ae0:	00000300 	andeq	r0, r0, r0, lsl #6
 ae4:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
 ae8:	735f6d65 	cmpvc	pc, #6464	; 0x1940
 aec:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
 af0:	78783166 	ldmdavc	r8!, {r1, r2, r5, r6, r8, ip, sp}^
 af4:	0300682e 	movweq	r6, #2094	; 0x82e
 af8:	74730000 	ldrbtvc	r0, [r3], #-0
 afc:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
 b00:	78333031 	ldmdavc	r3!, {r0, r4, r5, ip, sp}
 b04:	00682e62 	rsbeq	r2, r8, r2, ror #28
 b08:	73000003 	movwvc	r0, #3
 b0c:	65646474 	strbvs	r6, [r4, #-1140]!	; 0xfffffb8c
 b10:	00682e66 	rsbeq	r2, r8, r6, ror #28
 b14:	5f000002 	svcpl	0x00000002
 b18:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 b1c:	00682e73 	rsbeq	r2, r8, r3, ror lr
 b20:	72000004 	andvc	r0, r0, #4
 b24:	746e6565 	strbtvc	r6, [lr], #-1381	; 0xfffffa9b
 b28:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
 b2c:	6f6c0000 	svcvs	0x006c0000
 b30:	682e6b63 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
 b34:	00000400 	andeq	r0, r0, r0, lsl #8
 b38:	00500500 	subseq	r0, r0, r0, lsl #10
 b3c:	07c80205 	strbeq	r0, [r8, r5, lsl #4]
 b40:	f5030800 			; <UNDEFINED> instruction: 0xf5030800
 b44:	03050100 	movweq	r0, #20736	; 0x5100
 b48:	08070513 	stmdaeq	r7, {r0, r1, r4, r8, sl}
 b4c:	060d0514 			; <UNDEFINED> instruction: 0x060d0514
 b50:	06070501 	streq	r0, [r7], -r1, lsl #10
 b54:	060d052f 	streq	r0, [sp], -pc, lsr #10
 b58:	03200501 			; <UNDEFINED> instruction: 0x03200501
 b5c:	0705201b 	smladeq	r5, fp, r0, r2
 b60:	01052106 	tsteq	r5, r6, lsl #2
 b64:	07051606 	streq	r1, [r5, -r6, lsl #12]
 b68:	20630306 	rsbcs	r0, r3, r6, lsl #6
 b6c:	01060d05 	tsteq	r6, r5, lsl #26
 b70:	2f060705 	svccs	0x00060705
 b74:	01060d05 	tsteq	r6, r5, lsl #26
 b78:	31060705 	tstcc	r6, r5, lsl #14
 b7c:	01060d05 	tsteq	r6, r5, lsl #26
 b80:	2f060705 	svccs	0x00060705
 b84:	01060d05 	tsteq	r6, r5, lsl #26
 b88:	31060705 	tstcc	r6, r5, lsl #14
 b8c:	0b052006 	bleq	148bac <__Stack_Size+0x1487ac>
 b90:	11056806 	tstne	r5, r6, lsl #16
 b94:	09030106 	stmdbeq	r3, {r1, r2, r8}
 b98:	060b0520 	streq	r0, [fp], -r0, lsr #10
 b9c:	16070521 	strne	r0, [r7], -r1, lsr #10
 ba0:	01062005 	tsteq	r6, r5
 ba4:	03060b05 	movweq	r0, #27397	; 0x6b05
 ba8:	11053c75 	tstne	r5, r5, ror ip
 bac:	0b050106 	bleq	140fcc <__Stack_Size+0x140bcc>
 bb0:	11053106 	tstne	r5, r6, lsl #2
 bb4:	0b050106 	bleq	140fd4 <__Stack_Size+0x140bd4>
 bb8:	11053106 	tstne	r5, r6, lsl #2
 bbc:	47050106 	strmi	r0, [r5, -r6, lsl #2]
 bc0:	02050006 	andeq	r0, r5, #6
 bc4:	08000844 	stmdaeq	r0, {r2, r6, fp}
 bc8:	05010c03 	streq	r0, [r1, #-3075]	; 0xfffff3fd
 bcc:	47051303 	strmi	r1, [r5, -r3, lsl #6]
 bd0:	0a051106 	beq	144ff0 <__Stack_Size+0x144bf0>
 bd4:	20050521 	andcs	r0, r5, r1, lsr #10
 bd8:	07052f06 	streq	r2, [r5, -r6, lsl #30]
 bdc:	3d060106 	stfccs	f0, [r6, #-24]	; 0xffffffe8
 be0:	01060905 	tsteq	r6, r5, lsl #18
 be4:	0f054b06 	svceq	0x00054b06
 be8:	10050106 	andne	r0, r5, r6, lsl #2
 bec:	1e0f0522 	cfsh32ne	mvfx0, mvfx15, #18
 bf0:	21060905 	tstcs	r6, r5, lsl #18
 bf4:	01060f05 	tsteq	r6, r5, lsl #30
 bf8:	2f060905 	svccs	0x00060905
 bfc:	03060105 	movweq	r0, #24837	; 0x6105
 c00:	03050111 	movweq	r0, #20753	; 0x5111
 c04:	20730306 	rsbscs	r0, r3, r6, lsl #6
 c08:	06050513 			; <UNDEFINED> instruction: 0x06050513
 c0c:	052f0601 	streq	r0, [pc, #-1537]!	; 613 <__Stack_Size+0x213>
 c10:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
 c14:	30062007 	andcc	r2, r6, r7
 c18:	01060a05 	tsteq	r6, r5, lsl #20
 c1c:	053d1505 	ldreq	r1, [sp, #-1285]!	; 0xfffffafb
 c20:	07051f09 	streq	r1, [r5, -r9, lsl #30]
 c24:	15055906 	strne	r5, [r5, #-2310]	; 0xfffff6fa
 c28:	07050106 	streq	r0, [r5, -r6, lsl #2]
 c2c:	0a052f06 	beq	14c84c <__Stack_Size+0x14c44c>
 c30:	07050106 	streq	r0, [r5, -r6, lsl #2]
 c34:	0d052f06 	stceq	15, cr2, [r5, #-24]	; 0xffffffe8
 c38:	051f1306 	ldreq	r1, [pc, #-774]	; 93a <__Stack_Size+0x53a>
 c3c:	05210607 	streq	r0, [r1, #-1543]!	; 0xfffff9f9
 c40:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
 c44:	05210607 	streq	r0, [r1, #-1543]!	; 0xfffff9f9
 c48:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
 c4c:	4e05230a 	cdpmi	3, 0, cr2, cr5, cr10, {0}
 c50:	02050006 	andeq	r0, r5, #6
 c54:	080008a8 	stmdaeq	r0, {r3, r5, r7, fp}
 c58:	13030515 	movwne	r0, #13589	; 0x3515
 c5c:	11064e05 	tstne	r6, r5, lsl #28
 c60:	05210505 	streq	r0, [r1, #-1285]!	; 0xfffffafb
 c64:	05220603 	streq	r0, [r2, #-1539]!	; 0xfffff9fd
 c68:	05010605 	streq	r0, [r1, #-1541]	; 0xfffff9fb
 c6c:	042f0603 	strteq	r0, [pc], #-1539	; c74 <__Stack_Size+0x874>
 c70:	03130502 	tsteq	r3, #8388608	; 0x800000
 c74:	03050118 	movweq	r0, #20760	; 0x5118
 c78:	060a0513 			; <UNDEFINED> instruction: 0x060a0513
 c7c:	2e202e01 	cdpcs	14, 2, cr2, cr0, cr1, {0}
 c80:	03050104 	movweq	r0, #20740	; 0x5104
 c84:	01690306 	cmneq	r9, r6, lsl #6
 c88:	01060505 	tsteq	r6, r5, lsl #10
 c8c:	02001405 	andeq	r1, r0, #83886080	; 0x5000000
 c90:	3c060104 	stfccs	f0, [r6], {4}
 c94:	01040200 	mrseq	r0, R12_usr
 c98:	00270501 	eoreq	r0, r7, r1, lsl #10
 c9c:	06020402 	streq	r0, [r2], -r2, lsl #8
 ca0:	00030520 	andeq	r0, r3, r0, lsr #10
 ca4:	06020402 	streq	r0, [r2], -r2, lsl #8
 ca8:	00050521 	andeq	r0, r5, r1, lsr #10
 cac:	06020402 	streq	r0, [r2], -r2, lsl #8
 cb0:	00140501 	andseq	r0, r4, r1, lsl #10
 cb4:	06010402 	streq	r0, [r1], -r2, lsl #8
 cb8:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
 cbc:	27050101 	strcs	r0, [r5, -r1, lsl #2]
 cc0:	02040200 	andeq	r0, r4, #0, 4
 cc4:	1a052006 	bne	148ce4 <__Stack_Size+0x1488e4>
 cc8:	05207a03 	streq	r7, [r0, #-2563]!	; 0xfffff5fd
 ccc:	20090301 	andcs	r0, r9, r1, lsl #6
 cd0:	02002705 	andeq	r2, r0, #1310720	; 0x140000
 cd4:	1c060204 	sfmne	f0, 4, [r6], {4}
 cd8:	02040200 	andeq	r0, r4, #0, 4
 cdc:	04020001 	streq	r0, [r2], #-1
 ce0:	02003d02 	andeq	r3, r0, #2, 26	; 0x80
 ce4:	05010204 	streq	r0, [r1, #-516]	; 0xfffffdfc
 ce8:	20380629 	eorscs	r0, r8, r9, lsr #12
 cec:	00061c05 	andeq	r1, r6, r5, lsl #24
 cf0:	08e80205 	stmiaeq	r8!, {r0, r2, r9}^
 cf4:	09030800 	stmdbeq	r3, {fp}
 cf8:	13030501 	movwne	r0, #13569	; 0x3501
 cfc:	05014b01 	streq	r4, [r1, #-2817]	; 0xfffff4ff
 d00:	023d0601 	eorseq	r0, sp, #1048576	; 0x100000
 d04:	01010003 	tsteq	r1, r3

Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	08000120 	stmdaeq	r0, {r5, r8}
  1c:	000000ac 	andeq	r0, r0, ip, lsr #1
  20:	0000000c 	andeq	r0, r0, ip
  24:	00000000 	andeq	r0, r0, r0
  28:	080001cc 	stmdaeq	r0, {r2, r3, r6, r7, r8}
  2c:	00000002 	andeq	r0, r0, r2
  30:	0000000c 	andeq	r0, r0, ip
  34:	00000000 	andeq	r0, r0, r0
  38:	080001ce 	stmdaeq	r0, {r1, r2, r3, r6, r7, r8}
  3c:	00000002 	andeq	r0, r0, r2
  40:	0000000c 	andeq	r0, r0, ip
  44:	00000000 	andeq	r0, r0, r0
  48:	080001d0 	stmdaeq	r0, {r4, r6, r7, r8}
  4c:	0000000c 	andeq	r0, r0, ip
  50:	00000018 	andeq	r0, r0, r8, lsl r0
  54:	00000000 	andeq	r0, r0, r0
  58:	08000944 	stmdaeq	r0, {r2, r6, r8, fp}
  5c:	0000007c 	andeq	r0, r0, ip, ror r0
  60:	83100e41 	tsthi	r0, #1040	; 0x410
  64:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
  68:	00018e02 	andeq	r8, r1, r2, lsl #28
  6c:	0000000c 	andeq	r0, r0, ip
  70:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
  74:	7c020001 	stcvc	0, cr0, [r2], {1}
  78:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  7c:	0000000c 	andeq	r0, r0, ip
  80:	0000006c 	andeq	r0, r0, ip, rrx
  84:	080001dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8}
  88:	00000002 	andeq	r0, r0, r2
  8c:	0000000c 	andeq	r0, r0, ip
  90:	0000006c 	andeq	r0, r0, ip, rrx
  94:	080001de 	stmdaeq	r0, {r1, r2, r3, r4, r6, r7, r8}
  98:	00000002 	andeq	r0, r0, r2
  9c:	0000000c 	andeq	r0, r0, ip
  a0:	0000006c 	andeq	r0, r0, ip, rrx
  a4:	080001e0 	stmdaeq	r0, {r5, r6, r7, r8}
  a8:	00000002 	andeq	r0, r0, r2
  ac:	0000000c 	andeq	r0, r0, ip
  b0:	0000006c 	andeq	r0, r0, ip, rrx
  b4:	080001e2 	stmdaeq	r0, {r1, r5, r6, r7, r8}
  b8:	00000004 	andeq	r0, r0, r4
  bc:	0000000c 	andeq	r0, r0, ip
  c0:	0000006c 	andeq	r0, r0, ip, rrx
  c4:	080001e6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r8}
  c8:	00000004 	andeq	r0, r0, r4
  cc:	0000000c 	andeq	r0, r0, ip
  d0:	0000006c 	andeq	r0, r0, ip, rrx
  d4:	080001ea 	stmdaeq	r0, {r1, r3, r5, r6, r7, r8}
  d8:	0000006a 	andeq	r0, r0, sl, rrx
  dc:	0000001c 	andeq	r0, r0, ip, lsl r0
  e0:	0000006c 	andeq	r0, r0, ip, rrx
  e4:	08000254 	stmdaeq	r0, {r2, r4, r6, r9}
  e8:	000000ec 	andeq	r0, r0, ip, ror #1
  ec:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
  f0:	86048505 	strhi	r8, [r4], -r5, lsl #10
  f4:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
  f8:	00000001 	andeq	r0, r0, r1
  fc:	0000001c 	andeq	r0, r0, ip, lsl r0
 100:	0000006c 	andeq	r0, r0, ip, rrx
 104:	08000340 	stmdaeq	r0, {r6, r8, r9}
 108:	0000013c 	andeq	r0, r0, ip, lsr r1
 10c:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
 110:	86048505 	strhi	r8, [r4], -r5, lsl #10
 114:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 118:	00000001 	andeq	r0, r0, r1
 11c:	00000018 	andeq	r0, r0, r8, lsl r0
 120:	0000006c 	andeq	r0, r0, ip, rrx
 124:	0800047c 	stmdaeq	r0, {r2, r3, r4, r5, r6, sl}
 128:	00000128 	andeq	r0, r0, r8, lsr #2
 12c:	83100e41 	tsthi	r0, #1040	; 0x410
 130:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
 134:	00018e02 	andeq	r8, r1, r2, lsl #28
 138:	0000001c 	andeq	r0, r0, ip, lsl r0
 13c:	0000006c 	andeq	r0, r0, ip, rrx
 140:	080005a4 	stmdaeq	r0, {r2, r5, r7, r8, sl}
 144:	00000054 	andeq	r0, r0, r4, asr r0
 148:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
 14c:	86048505 	strhi	r8, [r4], -r5, lsl #10
 150:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 154:	00000001 	andeq	r0, r0, r1
 158:	0000001c 	andeq	r0, r0, ip, lsl r0
 15c:	0000006c 	andeq	r0, r0, ip, rrx
 160:	080005f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, sl}
 164:	0000005c 	andeq	r0, r0, ip, asr r0
 168:	83180e41 	tsthi	r8, #1040	; 0x410
 16c:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
 170:	87038604 	strhi	r8, [r3, -r4, lsl #12]
 174:	00018e02 	andeq	r8, r1, r2, lsl #28
 178:	00000018 	andeq	r0, r0, r8, lsl r0
 17c:	0000006c 	andeq	r0, r0, ip, rrx
 180:	08000654 	stmdaeq	r0, {r2, r4, r6, r9, sl}
 184:	0000005a 	andeq	r0, r0, sl, asr r0
 188:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 18c:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
 190:	00000001 	andeq	r0, r0, r1
 194:	00000020 	andeq	r0, r0, r0, lsr #32
 198:	0000006c 	andeq	r0, r0, ip, rrx
 19c:	080006ae 	stmdaeq	r0, {r1, r2, r3, r5, r7, r9, sl}
 1a0:	0000011a 	andeq	r0, r0, sl, lsl r1
 1a4:	84180e41 	ldrhi	r0, [r8], #-3649	; 0xfffff1bf
 1a8:	86038504 	strhi	r8, [r3], -r4, lsl #10
 1ac:	02018e02 	andeq	r8, r1, #2, 28
 1b0:	100e0a46 	andne	r0, lr, r6, asr #20
 1b4:	00000b41 	andeq	r0, r0, r1, asr #22
 1b8:	0000000c 	andeq	r0, r0, ip
 1bc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 1c0:	7c020001 	stcvc	0, cr0, [r2], {1}
 1c4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 1c8:	0000000c 	andeq	r0, r0, ip
 1cc:	000001b8 			; <UNDEFINED> instruction: 0x000001b8
 1d0:	080007c8 	stmdaeq	r0, {r3, r6, r7, r8, r9, sl}
 1d4:	0000007c 	andeq	r0, r0, ip, ror r0
 1d8:	00000018 	andeq	r0, r0, r8, lsl r0
 1dc:	000001b8 			; <UNDEFINED> instruction: 0x000001b8
 1e0:	08000844 	stmdaeq	r0, {r2, r6, fp}
 1e4:	00000064 	andeq	r0, r0, r4, rrx
 1e8:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 1ec:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
 1f0:	00000001 	andeq	r0, r0, r1
 1f4:	00000014 	andeq	r0, r0, r4, lsl r0
 1f8:	000001b8 			; <UNDEFINED> instruction: 0x000001b8
 1fc:	080008a8 	stmdaeq	r0, {r3, r5, r7, fp}
 200:	00000040 	andeq	r0, r0, r0, asr #32
 204:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
 208:	00018e02 	andeq	r8, r1, r2, lsl #28
 20c:	0000000c 	andeq	r0, r0, ip
 210:	000001b8 			; <UNDEFINED> instruction: 0x000001b8
 214:	080008e8 	stmdaeq	r0, {r3, r5, r6, r7, fp}
 218:	00000014 	andeq	r0, r0, r4, lsl r0

Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	32425041 	subcc	r5, r2, #65	; 0x41
   4:	00524e45 	subseq	r4, r2, r5, asr #28
   8:	52434442 	subpl	r4, r3, #1107296256	; 0x42000000
   c:	47464300 	strbmi	r4, [r6, -r0, lsl #6]
  10:	4e470052 	mcrmi	0, 2, r0, cr7, cr2, {2}
  14:	31432055 	qdaddcc	r2, r5, r3
  18:	2e382037 	mrccs	0, 1, r2, cr8, cr7, {1}
  1c:	20312e33 	eorscs	r2, r1, r3, lsr lr
  20:	39313032 	ldmdbcc	r1!, {r1, r4, r5, ip, sp}
  24:	33303730 	teqcc	r0, #48, 14	; 0xc00000
  28:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
  2c:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
  30:	5b202965 	blpl	80a5cc <__Stack_Size+0x80a1cc>
  34:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
  38:	72622d38 	rsbvc	r2, r2, #56, 26	; 0xe00
  3c:	68636e61 	stmdavs	r3!, {r0, r5, r6, r9, sl, fp, sp, lr}^
  40:	76657220 	strbtvc	r7, [r5], -r0, lsr #4
  44:	6f697369 	svcvs	0x00697369
  48:	3732206e 	ldrcc	r2, [r2, -lr, rrx]!
  4c:	37323033 			; <UNDEFINED> instruction: 0x37323033
  50:	6d2d205d 	stcvs	0, cr2, [sp, #-372]!	; 0xfffffe8c
  54:	6d756874 	ldclvs	8, cr6, [r5, #-464]!	; 0xfffffe30
  58:	6d2d2062 	stcvs	0, cr2, [sp, #-392]!	; 0xfffffe78
  5c:	3d757063 	ldclcc	0, cr7, [r5, #-396]!	; 0xfffffe74
  60:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
  64:	6d2d7865 	stcvs	8, cr7, [sp, #-404]!	; 0xfffffe6c
  68:	6d2d2033 	stcvs	0, cr2, [sp, #-204]!	; 0xffffff34
  6c:	616f6c66 	cmnvs	pc, r6, ror #24
  70:	62612d74 	rsbvs	r2, r1, #116, 26	; 0x1d00
  74:	6f733d69 	svcvs	0x00733d69
  78:	2d207466 	cfstrscs	mvf7, [r0, #-408]!	; 0xfffffe68
  7c:	6372616d 	cmnvs	r2, #1073741851	; 0x4000001b
  80:	72613d68 	rsbvc	r3, r1, #104, 26	; 0x1a00
  84:	2d37766d 	ldccs	6, cr7, [r7, #-436]!	; 0xfffffe4c
  88:	672d206d 	strvs	r2, [sp, -sp, rrx]!
  8c:	72617764 	rsbvc	r7, r1, #100, 14	; 0x1900000
  90:	20322d66 	eorscs	r2, r2, r6, ror #26
  94:	20734f2d 	rsbscs	r4, r3, sp, lsr #30
  98:	6f6e662d 	svcvs	0x006e662d
  9c:	6975622d 	ldmdbvs	r5!, {r0, r2, r3, r5, r9, sp, lr}^
  a0:	6e69746c 	cdpvs	4, 6, cr7, cr9, cr12, {3}
  a4:	414c4600 	cmpmi	ip, r0, lsl #12
  a8:	545f4853 	ldrbpl	r4, [pc], #-2131	; b0 <_Minimum_Stack_Size-0x50>
  ac:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
  b0:	42006665 	andmi	r6, r0, #105906176	; 0x6500000
  b4:	00525253 	subseq	r5, r2, r3, asr r2
  b8:	45424841 	strbmi	r4, [r2, #-2113]	; 0xfffff7bf
  bc:	5500524e 	strpl	r5, [r0, #-590]	; 0xfffffdb2
  c0:	735f4253 	cmpvc	pc, #805306373	; 0x30000005
  c4:	70757465 	rsbsvc	r7, r5, r5, ror #8
  c8:	50525700 	subspl	r5, r2, r0, lsl #14
  cc:	79530052 	ldmdbvc	r3, {r1, r4, r6}^
  d0:	6f6c4373 	svcvs	0x006c4373
  d4:	614d6b63 	cmpvs	sp, r3, ror #22
  d8:	50470078 	subpl	r0, r7, r8, ror r0
  dc:	545f4f49 	ldrbpl	r4, [pc], #-3913	; e4 <_Minimum_Stack_Size-0x1c>
  e0:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
  e4:	75006665 	strvc	r6, [r0, #-1637]	; 0xfffff99b
  e8:	635f6273 	cmpvs	pc, #805306375	; 0x30000007
  ec:	7373616c 	cmnvc	r3, #108, 2
  f0:	6c6f705f 	stclvs	0, cr7, [pc], #-380	; ffffff7c <BootRAM+0xef7071d>
  f4:	4841006c 	stmdami	r1, {r2, r3, r5, r6}^
  f8:	65725042 	ldrbvs	r5, [r2, #-66]!	; 0xffffffbe
  fc:	61546373 	cmpvs	r4, r3, ror r3
 100:	00656c62 	rsbeq	r6, r5, r2, ror #24
 104:	64656d2f 	strbtvs	r6, [r5], #-3375	; 0xfffff2d1
 108:	652f6169 	strvs	r6, [pc, #-361]!	; ffffffa7 <BootRAM+0xef70748>
 10c:	642f7478 	strtvs	r7, [pc], #-1144	; 114 <_Minimum_Stack_Size+0x14>
 110:	702f7665 	eorvc	r7, pc, r5, ror #12
 114:	2f676f72 	svccs	0x00676f72
 118:	2f6d7261 	svccs	0x006d7261
 11c:	2f627375 	svccs	0x00627375
 120:	6f432e31 	svcvs	0x00432e31
 124:	465f6572 			; <UNDEFINED> instruction: 0x465f6572
 128:	68730031 	ldmdavs	r3!, {r0, r4, r5}^
 12c:	2074726f 	rsbscs	r7, r4, pc, ror #4
 130:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
 134:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
 138:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
 13c:	4d544900 	vldrmi.16	s9, [r4, #-0]	; <UNPREDICTABLE>
 140:	4278525f 	rsbsmi	r5, r8, #-268435451	; 0xf0000005
 144:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
 148:	504f0072 	subpl	r0, pc, r2, ror r0	; <UNPREDICTABLE>
 14c:	59454b54 	stmdbpl	r5, {r2, r4, r6, r8, r9, fp, lr}^
 150:	6e750052 	mrcvs	0, 3, r0, cr5, cr2, {2}
 154:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
 158:	63206465 			; <UNDEFINED> instruction: 0x63206465
 15c:	00726168 	rsbseq	r6, r2, r8, ror #2
 160:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
 164:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
 168:	42504100 	subsmi	r4, r0, #0, 2
 16c:	54535231 	ldrbpl	r5, [r3], #-561	; 0xfffffdcf
 170:	616d0052 	qdsubvs	r0, r2, sp
 174:	41006e69 	tstmi	r0, r9, ror #28
 178:	45314250 	ldrmi	r4, [r1, #-592]!	; 0xfffffdb0
 17c:	4100524e 	tstmi	r0, lr, asr #4
 180:	52324250 	eorspl	r4, r2, #80, 4
 184:	00525453 	subseq	r5, r2, r3, asr r4
 188:	706d6574 	rsbvc	r6, sp, r4, ror r5
 18c:	6e6f6c00 	cdpvs	12, 6, cr6, cr15, cr0, {0}
 190:	6f6c2067 	svcvs	0x006c2067
 194:	7520676e 	strvc	r6, [r0, #-1902]!	; 0xfffff892
 198:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
 19c:	2064656e 	rsbcs	r6, r4, lr, ror #10
 1a0:	00746e69 	rsbseq	r6, r4, r9, ror #28
 1a4:	746e6975 	strbtvc	r6, [lr], #-2421	; 0xfffff68b
 1a8:	00745f38 	rsbseq	r5, r4, r8, lsr pc
 1ac:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 1b0:	73795300 	cmnvc	r9, #0, 6
 1b4:	496d6574 	stmdbmi	sp!, {r2, r4, r5, r6, r8, sl, sp, lr}^
 1b8:	0074696e 	rsbseq	r6, r4, lr, ror #18
 1bc:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
 1c0:	6e6f6c20 	cdpvs	12, 6, cr6, cr15, cr0, {1}
 1c4:	6e692067 	cdpvs	0, 6, cr2, cr9, cr7, {3}
 1c8:	79530074 	ldmdbvc	r3, {r2, r4, r5, r6}^
 1cc:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
 1d0:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
 1d4:	636f6c43 	cmnvs	pc, #17152	; 0x4300
 1d8:	7273006b 	rsbsvc	r0, r3, #107	; 0x6b
 1dc:	616d2f63 	cmnvs	sp, r3, ror #30
 1e0:	632e6e69 			; <UNDEFINED> instruction: 0x632e6e69
 1e4:	42504100 	subsmi	r4, r0, #0, 2
 1e8:	73657250 	cmnvc	r5, #80, 4
 1ec:	62615463 	rsbvs	r5, r1, #1660944384	; 0x63000000
 1f0:	7300656c 	movwvc	r6, #1388	; 0x56c
 1f4:	74726f68 	ldrbtvc	r6, [r2], #-3944	; 0xfffff098
 1f8:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
 1fc:	43435200 	movtmi	r5, #12800	; 0x3200
 200:	7079545f 	rsbsvc	r5, r9, pc, asr r4
 204:	66654465 	strbtvs	r4, [r5], -r5, ror #8
 208:	6e697500 	cdpvs	5, 6, cr7, cr9, cr0, {0}
 20c:	5f323374 	svcpl	0x00323374
 210:	5f5f0074 	svcpl	0x005f0074
 214:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 218:	695f656c 	ldmdbvs	pc, {r2, r3, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
 21c:	73007172 	movwvc	r7, #370	; 0x172
 220:	7065656c 	rsbvc	r6, r5, ip, ror #10
 224:	4b434c00 	blmi	10d322c <__Stack_Size+0x10d2e2c>
 228:	53550052 	cmppl	r5, #82	; 0x52
 22c:	504c5f42 	subpl	r5, ip, r2, asr #30
 230:	4e41435f 	mcrmi	3, 2, r4, cr1, cr15, {2}
 234:	58525f31 	ldmdapl	r2, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
 238:	52495f30 	subpl	r5, r9, #48, 30	; 0xc0
 23c:	77006e51 	smlsdvc	r0, r1, lr, r6
 240:	65646e49 	strbvs	r6, [r4, #-3657]!	; 0xfffff1b7
 244:	75620078 	strbvc	r0, [r2, #-120]!	; 0xffffff88
 248:	00363166 	eorseq	r3, r6, r6, ror #2
 24c:	314e4143 	cmpcc	lr, r3, asr #2
 250:	4543535f 	strbmi	r5, [r3, #-863]	; 0xfffffca1
 254:	5152495f 	cmppl	r2, pc, asr r9
 258:	4d44006e 	stclmi	0, cr0, [r4, #-440]	; 0xfffffe48
 25c:	435f3141 	cmpmi	pc, #1073741840	; 0x40000010
 260:	6e6e6168 	powvsez	f6, f6, #0.0
 264:	5f376c65 	svcpl	0x00376c65
 268:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 26c:	43324900 	teqmi	r2, #0, 18
 270:	52455f32 	subpl	r5, r5, #50, 30	; 0xc8
 274:	5152495f 	cmppl	r2, pc, asr r9
 278:	4954006e 	ldmdbmi	r4, {r1, r2, r3, r5, r6}^
 27c:	495f344d 	ldmdbmi	pc, {r0, r2, r3, r6, sl, ip, sp}^	; <UNPREDICTABLE>
 280:	006e5152 	rsbeq	r5, lr, r2, asr r1
 284:	31414d44 	cmpcc	r1, r4, asr #26
 288:	6168435f 	cmnvs	r8, pc, asr r3
 28c:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
 290:	52495f32 	subpl	r5, r9, #50, 30	; 0xc8
 294:	70006e51 	andvc	r6, r0, r1, asr lr
 298:	645f616d 	ldrbvs	r6, [pc], #-365	; 2a0 <_Minimum_Stack_Size+0x1a0>
 29c:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
 2a0:	6200745f 	andvs	r7, r0, #1593835520	; 0x5f000000
 2a4:	7165526d 	cmnvc	r5, sp, ror #4
 2a8:	74736575 	ldrbtvc	r6, [r3], #-1397	; 0xfffffa8b
 2ac:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
 2b0:	74657300 	strbtvc	r7, [r5], #-768	; 0xfffffd00
 2b4:	705f7075 	subsvc	r7, pc, r5, ror r0	; <UNPREDICTABLE>
 2b8:	656b6361 	strbvs	r6, [fp, #-865]!	; 0xfffffc9f
 2bc:	4c460074 	mcrrmi	0, 7, r0, r6, cr4
 2c0:	5f485341 	svcpl	0x00485341
 2c4:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 2c8:	74796200 	ldrbtvc	r6, [r9], #-512	; 0xfffffe00
 2cc:	65727365 	ldrbvs	r7, [r2, #-869]!	; 0xfffffc9b
 2d0:	45006461 	strmi	r6, [r0, #-1121]	; 0xfffffb9f
 2d4:	30495458 	subcc	r5, r9, r8, asr r4
 2d8:	5152495f 	cmppl	r2, pc, asr r9
 2dc:	5355006e 	cmppl	r5, #110	; 0x6e
 2e0:	504c5f42 	subpl	r5, ip, r2, asr #30
 2e4:	4e41435f 	mcrmi	3, 2, r4, cr1, cr15, {2}
 2e8:	58525f31 	ldmdapl	r2, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
 2ec:	52495f30 	subpl	r5, r9, #48, 30	; 0xc0
 2f0:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
 2f4:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
 2f8:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
 2fc:	5f353149 	svcpl	0x00353149
 300:	495f3031 	ldmdbmi	pc, {r0, r4, r5, ip, sp}^	; <UNPREDICTABLE>
 304:	006e5152 	rsbeq	r5, lr, r2, asr r1
 308:	7473616c 	ldrbtvc	r6, [r3], #-364	; 0xfffffe94
 30c:	72646461 	rsbvc	r6, r4, #1627389952	; 0x61000000
 310:	6e655000 	cdpvs	0, 6, cr5, cr5, cr0, {0}
 314:	5f565364 	svcpl	0x00565364
 318:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 31c:	43435200 	movtmi	r5, #12800	; 0x3200
 320:	5152495f 	cmppl	r2, pc, asr r9
 324:	5677006e 	ldrbtpl	r0, [r7], -lr, rrx
 328:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
 32c:	6d654d00 	stclvs	13, cr4, [r5, #-0]
 330:	4d79726f 	lfmmi	f7, 2, [r9, #-444]!	; 0xfffffe44
 334:	67616e61 	strbvs	r6, [r1, -r1, ror #28]!
 338:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 33c:	52495f74 	subpl	r5, r9, #116, 30	; 0x1d0
 340:	65006e51 	strvs	r6, [r0, #-3665]	; 0xfffff1af
 344:	635f3070 	cmpvs	pc, #112	; 0x70
 348:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
 34c:	54534900 	ldrbpl	r4, [r3], #-2304	; 0xfffff700
 350:	53490052 	movtpl	r0, #36946	; 0x9052
 354:	54005245 	strpl	r5, [r0], #-581	; 0xfffffdbb
 358:	5f314d49 	svcpl	0x00314d49
 35c:	5f4b5242 	svcpl	0x004b5242
 360:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 364:	45535200 	ldrbmi	r5, [r3, #-512]	; 0xfffffe00
 368:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
 36c:	50530031 	subspl	r0, r3, r1, lsr r0
 370:	495f3149 	ldmdbmi	pc, {r0, r3, r6, r8, ip, sp}^	; <UNPREDICTABLE>
 374:	006e5152 	rsbeq	r5, lr, r2, asr r1
 378:	6273755f 	rsbsvs	r7, r3, #398458880	; 0x17c00000
 37c:	5f70655f 	svcpl	0x0070655f
 380:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 384:	4d440065 	stclmi	0, cr0, [r4, #-404]	; 0xfffffe6c
 388:	435f3141 	cmpmi	pc, #1073741840	; 0x40000010
 38c:	6e6e6168 	powvsez	f6, f6, #0.0
 390:	5f346c65 	svcpl	0x00346c65
 394:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 398:	49564e00 	ldmdbmi	r6, {r9, sl, fp, lr}^
 39c:	6e455f43 	cdpvs	15, 4, cr5, cr5, cr3, {2}
 3a0:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
 3a4:	00515249 	subseq	r5, r1, r9, asr #4
 3a8:	5f425355 	svcpl	0x00425355
 3ac:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
 3b0:	00666544 	rsbeq	r6, r6, r4, asr #10
 3b4:	44444144 	strbmi	r4, [r4], #-324	; 0xfffffebc
 3b8:	41430052 	qdaddmi	r0, r2, r3
 3bc:	525f314e 	subspl	r3, pc, #-2147483629	; 0x80000013
 3c0:	495f3158 	ldmdbmi	pc, {r3, r4, r6, r8, ip, sp}^	; <UNPREDICTABLE>
 3c4:	006e5152 	rsbeq	r5, lr, r2, asr r1
 3c8:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
 3cc:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
 3d0:	73750042 	cmnvc	r5, #66	; 0x42
 3d4:	6c635f62 	stclvs	15, cr5, [r3], #-392	; 0xfffffe78
 3d8:	5f737361 	svcpl	0x00737361
 3dc:	5f746567 	svcpl	0x00746567
 3e0:	5f647473 	svcpl	0x00647473
 3e4:	63736564 	cmnvs	r3, #100, 10	; 0x19000000
 3e8:	53550072 	cmppl	r5, #114	; 0x72
 3ec:	50485f42 	subpl	r5, r8, r2, asr #30
 3f0:	4e41435f 	mcrmi	3, 2, r4, cr1, cr15, {2}
 3f4:	58545f31 	ldmdapl	r4, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
 3f8:	5152495f 	cmppl	r2, pc, asr r9
 3fc:	5249006e 	subpl	r0, r9, #110	; 0x6e
 400:	545f6e51 	ldrbpl	r6, [pc], #-3665	; 408 <__Stack_Size+0x8>
 404:	00657079 	rsbeq	r7, r5, r9, ror r0
 408:	5f307065 	svcpl	0x00307065
 40c:	646e6573 	strbtvs	r6, [lr], #-1395	; 0xfffffa8d
 410:	41535500 	cmpmi	r3, r0, lsl #10
 414:	5f325452 	svcpl	0x00325452
 418:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 41c:	6e6f6300 	cdpvs	3, 6, cr6, cr15, cr0, {0}
 420:	75676966 	strbvc	r6, [r7, #-2406]!	; 0xfffff69a
 424:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 428:	45006e6f 	strmi	r6, [r0, #-3695]	; 0xfffff191
 42c:	00523050 	subseq	r3, r2, r0, asr r0
 430:	5f425355 	svcpl	0x00425355
 434:	72646441 	rsbvc	r6, r4, #1090519040	; 0x41000000
 438:	66706500 	ldrbtvs	r6, [r0], -r0, lsl #10
 43c:	5f636e75 	svcpl	0x00636e75
 440:	0074756f 	rsbseq	r7, r4, pc, ror #10
 444:	5f307065 	svcpl	0x00307065
 448:	00667562 	rsbeq	r7, r6, r2, ror #10
 44c:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
 450:	52495f32 	subpl	r5, r9, #50, 30	; 0xc8
 454:	49006e51 	stmdbmi	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
 458:	5f324332 	svcpl	0x00324332
 45c:	495f5645 	ldmdbmi	pc, {r0, r2, r6, r9, sl, ip, lr}^	; <UNPREDICTABLE>
 460:	006e5152 	rsbeq	r5, lr, r2, asr r1
 464:	52315045 	eorspl	r5, r1, #69	; 0x45
 468:	62737500 	rsbsvs	r7, r3, #0, 10
 46c:	6470655f 	ldrbtvs	r6, [r0], #-1375	; 0xfffffaa1
 470:	5f617461 	svcpl	0x00617461
 474:	4d440074 	stclmi	0, cr0, [r4, #-464]	; 0xfffffe30
 478:	435f3141 	cmpmi	pc, #1073741840	; 0x40000010
 47c:	6e6e6168 	powvsez	f6, f6, #0.0
 480:	5f366c65 	svcpl	0x00366c65
 484:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 488:	73755f00 	cmnvc	r5, #0, 30
 48c:	70655f62 	rsbvc	r5, r5, r2, ror #30
 490:	6165725f 	cmnvs	r5, pc, asr r2
 494:	49540064 	ldmdbmi	r4, {r2, r5, r6}^
 498:	495f334d 	ldmdbmi	pc, {r0, r2, r3, r6, r8, r9, ip, sp}^	; <UNPREDICTABLE>
 49c:	006e5152 	rsbeq	r5, lr, r2, asr r1
 4a0:	31414d44 	cmpcc	r1, r4, asr #26
 4a4:	6168435f 	cmnvs	r8, pc, asr r3
 4a8:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
 4ac:	52495f31 	subpl	r5, r9, #49, 30	; 0xc4
 4b0:	45006e51 	strmi	r6, [r0, #-3665]	; 0xfffff1af
 4b4:	00523250 	subseq	r3, r2, r0, asr r2
 4b8:	57425355 	smlsldpl	r5, r2, r5, r3
 4bc:	55656b61 	strbpl	r6, [r5, #-2913]!	; 0xfffff49f
 4c0:	52495f70 	subpl	r5, r9, #112, 30	; 0x1c0
 4c4:	57006e51 	smlsdpl	r0, r1, lr, r6
 4c8:	5f474457 	svcpl	0x00474457
 4cc:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 4d0:	62737500 	rsbsvs	r7, r3, #0, 10
 4d4:	616c635f 	cmnvs	ip, pc, asr r3
 4d8:	645f7373 	ldrbvs	r7, [pc], #-883	; 4e0 <__Stack_Size+0xe0>
 4dc:	6f637369 	svcvs	0x00637369
 4e0:	63656e6e 	cmnvs	r5, #1760	; 0x6e0
 4e4:	50450074 	subpl	r0, r5, r4, ror r0
 4e8:	42005233 	andmi	r5, r0, #805306371	; 0x30000003
 4ec:	61467375 	hvcvs	26421	; 0x6735
 4f0:	5f746c75 	svcpl	0x00746c75
 4f4:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 4f8:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
 4fc:	495f3449 	ldmdbmi	pc, {r0, r3, r6, sl, ip, sp}^	; <UNPREDICTABLE>
 500:	006e5152 	rsbeq	r5, lr, r2, asr r1
 504:	5f627375 	svcpl	0x00627375
 508:	73616c63 	cmnvc	r1, #25344	; 0x6300
 50c:	6e695f73 	mcrvs	15, 3, r5, cr9, cr3, {3}
 510:	50007469 	andpl	r7, r0, r9, ror #8
 514:	495f4456 	ldmdbmi	pc, {r1, r2, r4, r6, sl, lr}^	; <UNPREDICTABLE>
 518:	006e5152 	rsbeq	r5, lr, r2, asr r1
 51c:	75667065 	strbvc	r7, [r6, #-101]!	; 0xffffff9b
 520:	745f636e 	ldrbvc	r6, [pc], #-878	; 528 <__Stack_Size+0x128>
 524:	62737500 	rsbsvs	r7, r3, #0, 10
 528:	5f78745f 	svcpl	0x0078745f
 52c:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 530:	43490074 	movtmi	r0, #36980	; 0x9074
 534:	45005250 	strmi	r5, [r0, #-592]	; 0xfffffdb0
 538:	00523450 	subseq	r3, r2, r0, asr r4
 53c:	31414d44 	cmpcc	r1, r4, asr #26
 540:	6168435f 	cmnvs	r8, pc, asr r3
 544:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
 548:	52495f33 	subpl	r5, r9, #51, 30	; 0xcc
 54c:	73006e51 	movwvc	r6, #3665	; 0xe51
 550:	752f6372 	strvc	r6, [pc, #-882]!	; 1e6 <_Minimum_Stack_Size+0xe6>
 554:	6c5f6273 	lfmvs	f6, 2, [pc], {115}	; 0x73
 558:	632e6269 			; <UNDEFINED> instruction: 0x632e6269
 55c:	43324900 	teqmi	r2, #0, 18
 560:	56455f31 			; <UNDEFINED> instruction: 0x56455f31
 564:	5152495f 	cmppl	r2, pc, asr r9
 568:	7872006e 	ldmdavc	r2!, {r1, r2, r3, r5, r6}^
 56c:	6d756e5f 	ldclvs	14, cr6, [r5, #-380]!	; 0xfffffe84
 570:	6f6c625f 	svcvs	0x006c625f
 574:	00736b63 	rsbseq	r6, r3, r3, ror #22
 578:	5f627375 	svcpl	0x00627375
 57c:	73616c63 	cmnvc	r1, #25344	; 0x6300
 580:	70655f73 	rsbvc	r5, r5, r3, ror pc
 584:	6e695f30 	mcrvs	15, 3, r5, cr9, cr0, {1}
 588:	6e697500 	cdpvs	5, 6, cr7, cr9, cr0, {0}
 58c:	5f363174 	svcpl	0x00363174
 590:	78740074 	ldmdavc	r4!, {r2, r4, r5, r6}^
 594:	6f6c625f 	svcvs	0x006c625f
 598:	69736b63 	ldmdbvs	r3!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^
 59c:	5400657a 	strpl	r6, [r0], #-1402	; 0xfffffa86
 5a0:	5f314d49 	svcpl	0x00314d49
 5a4:	495f5055 	ldmdbmi	pc, {r0, r2, r4, r6, ip, lr}^	; <UNPREDICTABLE>
 5a8:	006e5152 	rsbeq	r5, lr, r2, asr r1
 5ac:	52495453 	subpl	r5, r9, #1392508928	; 0x53000000
 5b0:	43545200 	cmpmi	r4, #0, 4
 5b4:	616c415f 	cmnvs	ip, pc, asr r1
 5b8:	495f6d72 	ldmdbmi	pc, {r1, r4, r5, r6, r8, sl, fp, sp, lr}^	; <UNPREDICTABLE>
 5bc:	006e5152 	rsbeq	r5, lr, r2, asr r1
 5c0:	5f435452 	svcpl	0x00435452
 5c4:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 5c8:	35504500 	ldrbcc	r4, [r0, #-1280]	; 0xfffffb00
 5cc:	45520052 	ldrbmi	r0, [r2, #-82]	; 0xffffffae
 5d0:	56524553 			; <UNDEFINED> instruction: 0x56524553
 5d4:	00304445 	eorseq	r4, r0, r5, asr #8
 5d8:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
 5dc:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
 5e0:	45520031 	ldrbmi	r0, [r2, #-49]	; 0xffffffcf
 5e4:	56524553 			; <UNDEFINED> instruction: 0x56524553
 5e8:	00324445 	eorseq	r4, r2, r5, asr #8
 5ec:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
 5f0:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
 5f4:	45520033 	ldrbmi	r0, [r2, #-51]	; 0xffffffcd
 5f8:	56524553 			; <UNDEFINED> instruction: 0x56524553
 5fc:	00344445 	eorseq	r4, r4, r5, asr #8
 600:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
 604:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
 608:	45520035 	ldrbmi	r0, [r2, #-53]	; 0xffffffcb
 60c:	56524553 			; <UNDEFINED> instruction: 0x56524553
 610:	00364445 	eorseq	r4, r6, r5, asr #8
 614:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
 618:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
 61c:	45520038 	ldrbmi	r0, [r2, #-56]	; 0xffffffc8
 620:	56524553 			; <UNDEFINED> instruction: 0x56524553
 624:	00394445 	eorseq	r4, r9, r5, asr #8
 628:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
 62c:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
 630:	53550041 	cmppl	r5, #65	; 0x41
 634:	31545241 	cmpcc	r4, r1, asr #4
 638:	5152495f 	cmppl	r2, pc, asr r9
 63c:	7375006e 	cmnvc	r5, #110	; 0x6e
 640:	70655f62 	rsbvc	r5, r5, r2, ror #30
 644:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
 648:	6f4e0074 	svcvs	0x004e0074
 64c:	73614d6e 	cmnvc	r1, #7040	; 0x1b80
 650:	6c62616b 	stfvse	f6, [r2], #-428	; 0xfffffe54
 654:	746e4965 	strbtvc	r4, [lr], #-2405	; 0xfffff69b
 658:	5152495f 	cmppl	r2, pc, asr r9
 65c:	4c77006e 	ldclmi	0, cr0, [r7], #-440	; 0xfffffe48
 660:	74676e65 	strbtvc	r6, [r7], #-3685	; 0xfffff19b
 664:	49540068 	ldmdbmi	r4, {r3, r5, r6}^
 668:	435f314d 	cmpmi	pc, #1073741843	; 0x40000013
 66c:	52495f43 	subpl	r5, r9, #268	; 0x10c
 670:	45006e51 	strmi	r6, [r0, #-3665]	; 0xfffff1af
 674:	00523650 	subseq	r3, r2, r0, asr r6
 678:	7466656c 	strbtvc	r6, [r6], #-1388	; 0xfffffa94
 67c:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
 680:	495f3149 	ldmdbmi	pc, {r0, r3, r6, r8, ip, sp}^	; <UNPREDICTABLE>
 684:	006e5152 	rsbeq	r5, lr, r2, asr r1
 688:	71655262 	cmnvc	r5, r2, ror #4
 68c:	74736575 	ldrbtvc	r6, [r3], #-1397	; 0xfffffa8b
 690:	49564e00 	ldmdbmi	r6, {r9, sl, fp, lr}^
 694:	79545f43 	ldmdbvc	r4, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
 698:	43006570 	movwmi	r6, #1392	; 0x570
 69c:	0052544e 	subseq	r5, r2, lr, asr #8
 6a0:	314d4954 	cmpcc	sp, r4, asr r9
 6a4:	4752545f 			; <UNDEFINED> instruction: 0x4752545f
 6a8:	4d4f435f 	stclmi	3, cr4, [pc, #-380]	; 534 <__Stack_Size+0x134>
 6ac:	5152495f 	cmppl	r2, pc, asr r9
 6b0:	3249006e 	subcc	r0, r9, #110	; 0x6e
 6b4:	455f3143 	ldrbmi	r3, [pc, #-323]	; 579 <__Stack_Size+0x179>
 6b8:	52495f52 	subpl	r5, r9, #328	; 0x148
 6bc:	53006e51 	movwpl	r6, #3665	; 0xe51
 6c0:	69547379 	ldmdbvs	r4, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}^
 6c4:	495f6b63 	ldmdbmi	pc, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^	; <UNPREDICTABLE>
 6c8:	006e5152 	rsbeq	r5, lr, r2, asr r1
 6cc:	756e7065 	strbvc	r7, [lr, #-101]!	; 0xffffff9b
 6d0:	7872006d 	ldmdavc	r2!, {r0, r2, r3, r5, r6}^
 6d4:	7a69735f 	bvc	1a5d458 <__Stack_Size+0x1a5d058>
 6d8:	49540065 	ldmdbmi	r4, {r0, r2, r5, r6}^
 6dc:	495f324d 	ldmdbmi	pc, {r0, r2, r3, r6, r9, ip, sp}^	; <UNPREDICTABLE>
 6e0:	006e5152 	rsbeq	r5, lr, r2, asr r1
 6e4:	5f627375 	svcpl	0x00627375
 6e8:	73616c63 	cmnvc	r1, #25344	; 0x6300
 6ec:	70655f73 	rsbvc	r5, r5, r3, ror pc
 6f0:	756f5f30 	strbvc	r5, [pc, #-3888]!	; fffff7c8 <BootRAM+0xef6ff69>
 6f4:	50450074 	subpl	r0, r5, r4, ror r0
 6f8:	63005237 	movwvs	r5, #567	; 0x237
 6fc:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 700:	61705f67 	cmnvs	r0, r7, ror #30
 704:	745f6b63 	ldrbvc	r6, [pc], #-2915	; 70c <__Stack_Size+0x30c>
 708:	62737500 	rsbsvs	r7, r3, #0, 10
 70c:	5f78725f 	svcpl	0x0078725f
 710:	72646461 	rsbvc	r6, r4, #1627389952	; 0x61000000
 714:	5f787400 	svcpl	0x00787400
 718:	5f6d756e 	svcpl	0x006d756e
 71c:	636f6c62 	cmnvs	pc, #25088	; 0x6200
 720:	4400736b 	strmi	r7, [r0], #-875	; 0xfffffc95
 724:	67756265 	ldrbvs	r6, [r5, -r5, ror #4]!
 728:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
 72c:	5f726f74 	svcpl	0x00726f74
 730:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 734:	61735500 	cmnvs	r3, r0, lsl #10
 738:	61466567 	cmpvs	r6, r7, ror #10
 73c:	5f746c75 	svcpl	0x00746c75
 740:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 744:	5f787200 	svcpl	0x00787200
 748:	636f6c62 	cmnvs	pc, #25088	; 0x6200
 74c:	7a69736b 	bvc	1a5d500 <__Stack_Size+0x1a5d100>
 750:	70650065 	rsbvc	r0, r5, r5, rrx
 754:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 758:	006e695f 	rsbeq	r6, lr, pc, asr r9
 75c:	5f627375 	svcpl	0x00627375
 760:	695f7065 	ldmdbvs	pc, {r0, r2, r5, r6, ip, sp, lr}^	; <UNPREDICTABLE>
 764:	5f74696e 	svcpl	0x0074696e
 768:	62756f64 	rsbsvs	r6, r5, #100, 30	; 0x190
 76c:	4500656c 	strmi	r6, [r0, #-1388]	; 0xfffffa94
 770:	39495458 	stmdbcc	r9, {r3, r4, r6, sl, ip, lr}^
 774:	495f355f 	ldmdbmi	pc, {r0, r1, r2, r3, r4, r6, r8, sl, ip, sp}^	; <UNPREDICTABLE>
 778:	006e5152 	rsbeq	r5, lr, r2, asr r1
 77c:	61435653 	cmpvs	r3, r3, asr r6
 780:	495f6c6c 	ldmdbmi	pc, {r2, r3, r5, r6, sl, fp, sp, lr}^	; <UNPREDICTABLE>
 784:	006e5152 	rsbeq	r5, lr, r2, asr r1
 788:	52454349 	subpl	r4, r5, #603979777	; 0x24000001
 78c:	49505300 	ldmdbmi	r0, {r8, r9, ip, lr}^
 790:	52495f32 	subpl	r5, r9, #50, 30	; 0xc8
 794:	49006e51 	stmdbmi	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
 798:	00524241 	subseq	r4, r2, r1, asr #4
 79c:	5f627375 	svcpl	0x00627375
 7a0:	615f7874 	cmpvs	pc, r4, ror r8	; <UNPREDICTABLE>
 7a4:	00726464 	rsbseq	r6, r2, r4, ror #8
 7a8:	31414d44 	cmpcc	r1, r4, asr #26
 7ac:	6168435f 	cmnvs	r8, pc, asr r3
 7b0:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
 7b4:	52495f35 	subpl	r5, r9, #53, 30	; 0xd4
 7b8:	42006e51 	andmi	r6, r0, #1296	; 0x510
 7bc:	4c424154 	stfmie	f4, [r2], {84}	; 0x54
 7c0:	70650045 	rsbvc	r0, r5, r5, asr #32
 7c4:	7079745f 	rsbsvc	r7, r9, pc, asr r4
 7c8:	58450065 	stmdapl	r5, {r0, r2, r5, r6}^
 7cc:	5f334954 	svcpl	0x00334954
 7d0:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 7d4:	72696400 	rsbvc	r6, r9, #0, 8
 7d8:	006e695f 	rsbeq	r6, lr, pc, asr r9
 7dc:	64726148 	ldrbtvs	r6, [r2], #-328	; 0xfffffeb8
 7e0:	6c756146 	ldfvse	f6, [r5], #-280	; 0xfffffee8
 7e4:	52495f74 	subpl	r5, r9, #116, 30	; 0x1d0
 7e8:	49006e51 	stmdbmi	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
 7ec:	00525053 	subseq	r5, r2, r3, asr r0
 7f0:	5f627375 	svcpl	0x00627375
 7f4:	635f7872 	cmpvs	pc, #7471104	; 0x720000
 7f8:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
 7fc:	63787200 	cmnvs	r8, #0, 4
 800:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
 804:	43444100 	movtmi	r4, #16640	; 0x4100
 808:	5f325f31 	svcpl	0x00325f31
 80c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 810:	53455200 	movtpl	r5, #20992	; 0x5200
 814:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
 818:	55003744 	strpl	r3, [r0, #-1860]	; 0xfffff8bc
 81c:	54524153 	ldrbpl	r4, [r2], #-339	; 0xfffffead
 820:	52495f33 	subpl	r5, r9, #51, 30	; 0xcc
 824:	54006e51 	strpl	r6, [r0], #-3665	; 0xfffff1af
 828:	45504d41 	ldrbmi	r4, [r0, #-3393]	; 0xfffff2bf
 82c:	52495f52 	subpl	r5, r9, #328	; 0x148
 830:	52006e51 	andpl	r6, r0, #1296	; 0x510
 834:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
 838:	43444556 	movtmi	r4, #17750	; 0x4556
 83c:	42535500 	subsmi	r5, r3, #0, 10
 840:	4449485f 	strbmi	r4, [r9], #-2143	; 0xfffff7a1
 844:	63736544 	cmnvs	r3, #68, 10	; 0x11000000
 848:	74706972 	ldrbtvc	r6, [r0], #-2418	; 0xfffff68e
 84c:	5f00726f 	svcpl	0x0000726f
 850:	655f6e6f 	ldrbvs	r6, [pc, #-3695]	; fffff9e9 <BootRAM+0xef7018a>
 854:	5f746978 	svcpl	0x00746978
 858:	73677261 	cmnvc	r7, #268435462	; 0x10000006
 85c:	63775f00 	cmnvs	r7, #0, 30
 860:	626d6f74 	rsbvs	r6, sp, #116, 30	; 0x1d0
 864:	6174735f 	cmnvs	r4, pc, asr r3
 868:	5f006574 	svcpl	0x00006574
 86c:	6c616d6e 	stclvs	13, cr6, [r1], #-440	; 0xfffffe48
 870:	00636f6c 	rsbeq	r6, r3, ip, ror #30
 874:	5f646968 	svcpl	0x00646968
 878:	61746164 	cmnvs	r4, r4, ror #2
 87c:	34725f00 	ldrbtcc	r5, [r2], #-3840	; 0xfffff100
 880:	735f0038 	cmpvc	pc, #56	; 0x38
 884:	616e6769 	cmnvs	lr, r9, ror #14
 888:	75625f6c 	strbvc	r5, [r2, #-3948]!	; 0xfffff094
 88c:	6c5f0066 	mrrcvs	0, 6, r0, pc, cr6	; <UNPREDICTABLE>
 890:	69736662 	ldmdbvs	r3!, {r1, r5, r6, r9, sl, sp, lr}^
 894:	5f00657a 	svcpl	0x0000657a
 898:	67616c66 	strbvs	r6, [r1, -r6, ror #24]!
 89c:	4c5f0073 	mrrcmi	0, 7, r0, pc, cr3	; <UNPREDICTABLE>
 8a0:	5f4b434f 	svcpl	0x004b434f
 8a4:	55434552 	strbpl	r4, [r3, #-1362]	; 0xfffffaae
 8a8:	56495352 			; <UNDEFINED> instruction: 0x56495352
 8ac:	00545f45 	subseq	r5, r4, r5, asr #30
 8b0:	72626d5f 	rsbvc	r6, r2, #6080	; 0x17c0
 8b4:	5f6e656c 	svcpl	0x006e656c
 8b8:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
 8bc:	735f0065 	cmpvc	pc, #101	; 0x65
 8c0:	756f6474 	strbvc	r6, [pc, #-1140]!	; 454 <__Stack_Size+0x54>
 8c4:	665f0074 			; <UNDEFINED> instruction: 0x665f0074
 8c8:	5f736f70 	svcpl	0x00736f70
 8cc:	665f0074 			; <UNDEFINED> instruction: 0x665f0074
 8d0:	5f00736e 	svcpl	0x0000736e
 8d4:	6b6f6f63 	blvs	1bdc668 <__Stack_Size+0x1bdc268>
 8d8:	5f006569 	svcpl	0x00006569
 8dc:	5f6d745f 	svcpl	0x006d745f
 8e0:	79616477 	stmdbvc	r1!, {r0, r1, r2, r4, r5, r6, sl, sp, lr}^
 8e4:	65725f00 	ldrbvs	r5, [r2, #-3840]!	; 0xfffff100
 8e8:	746c7573 	strbtvc	r7, [ip], #-1395	; 0xfffffa8d
 8ec:	745f5f00 	ldrbvc	r5, [pc], #-3840	; 8f4 <__Stack_Size+0x4f4>
 8f0:	6f685f6d 	svcvs	0x00685f6d
 8f4:	5f007275 	svcpl	0x00007275
 8f8:	756f635f 	strbvc	r6, [pc, #-863]!	; 5a1 <__Stack_Size+0x1a1>
 8fc:	5f00746e 	svcpl	0x0000746e
 900:	5f6d745f 	svcpl	0x006d745f
 904:	006e696d 	rsbeq	r6, lr, sp, ror #18
 908:	78656e5f 	stmdavc	r5!, {r0, r1, r2, r3, r4, r6, r9, sl, fp, sp, lr}^
 90c:	5f006674 	svcpl	0x00006674
 910:	646e6172 	strbtvs	r6, [lr], #-370	; 0xfffffe8e
 914:	5f003834 	svcpl	0x00003834
 918:	75736572 	ldrbvc	r6, [r3, #-1394]!	; 0xfffffa8e
 91c:	6b5f746c 	blvs	17ddad4 <__Stack_Size+0x17dd6d4>
 920:	42535500 	subsmi	r5, r3, #0, 10
 924:	6e6f435f 	mcrvs	3, 3, r4, cr15, cr15, {2}
 928:	44676966 	strbtmi	r6, [r7], #-2406	; 0xfffff69a
 92c:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
 930:	6f747069 	svcvs	0x00747069
 934:	615f0072 	cmpvs	pc, r2, ror r0	; <UNPREDICTABLE>
 938:	69746373 	ldmdbvs	r4!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 93c:	625f656d 	subsvs	r6, pc, #457179136	; 0x1b400000
 940:	5f006675 	svcpl	0x00006675
 944:	4946735f 	stmdbmi	r6, {r0, r1, r2, r3, r4, r6, r8, r9, ip, sp, lr}^
 948:	5f00454c 	svcpl	0x0000454c
 94c:	00736477 	rsbseq	r6, r3, r7, ror r4
 950:	49465f5f 	stmdbmi	r6, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
 954:	5f00454c 	svcpl	0x0000454c
 958:	7366666f 	cmnvc	r6, #116391936	; 0x6f00000
 95c:	5f007465 	svcpl	0x00007465
 960:	72656d65 	rsbvc	r6, r5, #6464	; 0x1940
 964:	636e6567 	cmnvs	lr, #432013312	; 0x19c00000
 968:	5f5f0079 	svcpl	0x005f0079
 96c:	735f6d74 	cmpvc	pc, #116, 26	; 0x1d00
 970:	5f006365 	svcpl	0x00006365
 974:	5f6d745f 	svcpl	0x006d745f
 978:	79616479 	stmdbvc	r1!, {r0, r3, r4, r5, r6, sl, sp, lr}^
 97c:	6e695f00 	cdpvs	15, 6, cr5, cr9, cr0, {0}
 980:	695f0063 	ldmdbvs	pc, {r0, r1, r5, r6}^	; <UNPREDICTABLE>
 984:	5f00646e 	svcpl	0x0000646e
 988:	7273626d 	rsbsvc	r6, r3, #-805306362	; 0xd0000006
 98c:	63776f74 	cmnvs	r7, #116, 30	; 0x1d0
 990:	74735f73 	ldrbtvc	r5, [r3], #-3955	; 0xfffff08d
 994:	00657461 	rsbeq	r7, r5, r1, ror #8
 998:	61765f5f 	cmnvs	r6, pc, asr pc
 99c:	0065756c 	rsbeq	r7, r5, ip, ror #10
 9a0:	7335705f 	teqvc	r5, #95	; 0x5f
 9a4:	63775f00 	cmnvs	r7, #0, 30
 9a8:	6f747273 	svcvs	0x00747273
 9ac:	5f73626d 	svcpl	0x0073626d
 9b0:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
 9b4:	6d5f0065 	ldclvs	0, cr0, [pc, #-404]	; 828 <__Stack_Size+0x428>
 9b8:	6e656c62 	cdpvs	12, 6, cr6, cr5, cr2, {3}
 9bc:	6174735f 	cmnvs	r4, pc, asr r3
 9c0:	5f006574 	svcpl	0x00006574
 9c4:	5f6d745f 	svcpl	0x006d745f
 9c8:	7961646d 	stmdbvc	r1!, {r0, r2, r3, r5, r6, sl, sp, lr}^
 9cc:	69735f00 	ldmdbvs	r3!, {r8, r9, sl, fp, ip, lr}^
 9d0:	75665f67 	strbvc	r5, [r6, #-3943]!	; 0xfffff099
 9d4:	5f00636e 	svcpl	0x0000636e
 9d8:	7472626d 	ldrbtvc	r6, [r2], #-621	; 0xfffffd93
 9dc:	5f63776f 	svcpl	0x0063776f
 9e0:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
 9e4:	615f0065 	cmpvs	pc, r5, rrx
 9e8:	69786574 	ldmdbvs	r8!, {r2, r4, r5, r6, r8, sl, sp, lr}^
 9ec:	5f003074 	svcpl	0x00003074
 9f0:	636f6c66 	cmnvs	pc, #26112	; 0x6600
 9f4:	00745f6b 	rsbseq	r5, r4, fp, ror #30
 9f8:	63775f5f 	cmnvs	r7, #380	; 0x17c
 9fc:	695f0068 	ldmdbvs	pc, {r3, r5, r6}^	; <UNPREDICTABLE>
 a00:	0073626f 	rsbseq	r6, r3, pc, ror #4
 a04:	6f6c635f 	svcvs	0x006c635f
 a08:	5f006573 	svcpl	0x00006573
 a0c:	6964735f 	stmdbvs	r4!, {r0, r1, r2, r3, r4, r6, r8, r9, ip, sp, lr}^
 a10:	696e6964 	stmdbvs	lr!, {r2, r5, r6, r8, fp, sp, lr}^
 a14:	735f0074 	cmpvc	pc, #116	; 0x74
 a18:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
 a1c:	61675f00 	cmnvs	r7, r0, lsl #30
 a20:	5f616d6d 	svcpl	0x00616d6d
 a24:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
 a28:	006d6167 	rsbeq	r6, sp, r7, ror #2
 a2c:	7361625f 	cmnvc	r1, #-268435451	; 0xf0000005
 a30:	665f0065 	ldrbvs	r0, [pc], -r5, rrx
 a34:	6c656572 	cfstr64vs	mvdx6, [r5], #-456	; 0xfffffe38
 a38:	00747369 	rsbseq	r7, r4, r9, ror #6
 a3c:	6c756d5f 	ldclvs	13, cr6, [r5], #-380	; 0xfffffe84
 a40:	5f5f0074 	svcpl	0x005f0074
 a44:	6e6f4c55 	mcrvs	12, 3, r4, cr15, cr5, {2}
 a48:	775f0067 	ldrbvc	r0, [pc, -r7, rrx]
 a4c:	6f747263 	svcvs	0x00747263
 a50:	735f626d 	cmpvc	pc, #-805306362	; 0xd0000006
 a54:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
 a58:	69665f00 	stmdbvs	r6!, {r8, r9, sl, fp, ip, lr}^
 a5c:	5f00656c 	svcpl	0x0000656c
 a60:	656c635f 	strbvs	r6, [ip, #-863]!	; 0xfffffca1
 a64:	70756e61 	rsbsvc	r6, r5, r1, ror #28
 a68:	626d5f00 	rsbvs	r5, sp, #0, 30
 a6c:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
 a70:	00745f65 	rsbseq	r5, r4, r5, ror #30
 a74:	64656c67 	strbtvs	r6, [r5], #-3175	; 0xfffff399
 a78:	6e6f6c00 	cdpvs	12, 6, cr6, cr15, cr0, {0}
 a7c:	6f642067 	svcvs	0x00642067
 a80:	656c6275 	strbvs	r6, [ip, #-629]!	; 0xfffffd8b
 a84:	745f5f00 	ldrbvc	r5, [pc], #-3840	; a8c <__Stack_Size+0x68c>
 a88:	73695f6d 	cmnvc	r9, #436	; 0x1b4
 a8c:	00747364 	rsbseq	r7, r4, r4, ror #6
 a90:	655f685f 	ldrbvs	r6, [pc, #-2143]	; 239 <_Minimum_Stack_Size+0x139>
 a94:	6f6e7272 	svcvs	0x006e7272
 a98:	745f5f00 	ldrbvc	r5, [pc], #-3840	; aa0 <__Stack_Size+0x6a0>
 a9c:	6f6d5f6d 	svcvs	0x006d5f6d
 aa0:	615f006e 	cmpvs	pc, lr, rrx
 aa4:	69786574 	ldmdbvs	r8!, {r2, r4, r5, r6, r8, sl, sp, lr}^
 aa8:	6d5f0074 	ldclvs	0, cr0, [pc, #-464]	; 8e0 <__Stack_Size+0x4e0>
 aac:	61747362 	cmnvs	r4, r2, ror #6
 ab0:	5f006574 	svcpl	0x00006574
 ab4:	69676942 	stmdbvs	r7!, {r1, r6, r8, fp, sp, lr}^
 ab8:	7300746e 	movwvc	r7, #1134	; 0x46e
 abc:	752f6372 	strvc	r6, [pc, #-882]!	; 752 <__Stack_Size+0x352>
 ac0:	635f6273 	cmpvs	pc, #805306375	; 0x30000007
 ac4:	7373616c 	cmnvc	r3, #108, 2
 ac8:	6469685f 	strbtvs	r6, [r9], #-2143	; 0xfffff7a1
 acc:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
 ad0:	2e656c70 	mcrcs	12, 3, r6, cr5, cr0, {3}
 ad4:	53620063 	cmnpl	r2, #99	; 0x63
 ad8:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
 adc:	5f5f0067 	svcpl	0x005f0067
 ae0:	5f006673 	svcpl	0x00006673
 ae4:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
 ae8:	775f5f00 	ldrbvc	r5, [pc, -r0, lsl #30]
 aec:	00626863 	rsbeq	r6, r2, r3, ror #16
 af0:	6f6c675f 	svcvs	0x006c675f
 af4:	5f6c6162 	svcpl	0x006c6162
 af8:	75706d69 	ldrbvc	r6, [r0, #-3433]!	; 0xfffff297
 afc:	705f6572 	subsvc	r6, pc, r2, ror r5	; <UNPREDICTABLE>
 b00:	5f007274 	svcpl	0x00007274
 b04:	5f6d745f 	svcpl	0x006d745f
 b08:	72616579 	rsbvc	r6, r1, #507510784	; 0x1e400000
 b0c:	42535500 	subsmi	r5, r3, #0, 10
 b10:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
 b14:	53676e69 	cmnpl	r7, #1680	; 0x690
 b18:	61697265 	cmnvs	r9, r5, ror #4
 b1c:	7365446c 	cmnvc	r5, #108, 8	; 0x6c000000
 b20:	70697263 	rsbvc	r7, r9, r3, ror #4
 b24:	00726f74 	rsbseq	r6, r2, r4, ror pc
 b28:	636f6c5f 	cmnvs	pc, #24320	; 0x5f00
 b2c:	69746c61 	ldmdbvs	r4!, {r0, r5, r6, sl, fp, sp, lr}^
 b30:	625f656d 	subsvs	r6, pc, #457179136	; 0x1b400000
 b34:	55006675 	strpl	r6, [r0, #-1653]	; 0xfffff98b
 b38:	535f4253 	cmppl	pc, #805306373	; 0x30000005
 b3c:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
 b40:	6e614c67 	cdpvs	12, 6, cr4, cr1, cr7, {3}
 b44:	73654467 	cmnvc	r5, #1728053248	; 0x67000000
 b48:	70697263 	rsbvc	r7, r9, r3, ror #4
 b4c:	00726f74 	rsbseq	r6, r2, r4, ror pc
 b50:	756e755f 	strbvc	r7, [lr, #-1375]!	; 0xfffffaa1
 b54:	00646573 	rsbeq	r6, r4, r3, ror r5
 b58:	77656e5f 			; <UNDEFINED> instruction: 0x77656e5f
 b5c:	76635f00 	strbtvc	r5, [r3], -r0, lsl #30
 b60:	6e656c74 	mcrvs	12, 3, r6, cr5, cr4, {3}
 b64:	616d5f00 	cmnvs	sp, r0, lsl #30
 b68:	73647778 	cmnvc	r4, #120, 14	; 0x1e00000
 b6c:	366c5f00 	strbtcc	r5, [ip], -r0, lsl #30
 b70:	625f6134 	subsvs	r6, pc, #52, 2
 b74:	5f006675 	svcpl	0x00006675
 b78:	736b6c62 	cmnvc	fp, #25088	; 0x6200
 b7c:	00657a69 	rsbeq	r7, r5, r9, ror #20
 b80:	6d745f5f 	ldclvs	15, cr5, [r4, #-380]!	; 0xfffffe84
 b84:	6f6c5f00 	svcvs	0x006c5f00
 b88:	55006b63 	strpl	r6, [r0, #-2915]	; 0xfffff49d
 b8c:	445f4253 	ldrbmi	r4, [pc], #-595	; b94 <__Stack_Size+0x794>
 b90:	63697665 	cmnvs	r9, #105906176	; 0x6500000
 b94:	61755165 	cmnvs	r5, r5, ror #2
 b98:	6966696c 	stmdbvs	r6!, {r2, r3, r5, r6, r8, fp, sp, lr}^
 b9c:	65447265 	strbvs	r7, [r4, #-613]	; 0xfffffd9b
 ba0:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 ba4:	726f7470 	rsbvc	r7, pc, #112, 8	; 0x70000000
 ba8:	656c7200 	strbvs	r7, [ip, #-512]!	; 0xfffffe00
 bac:	6e5f0064 	cdpvs	0, 5, cr0, cr15, cr4, {3}
 bb0:	73626f69 	cmnvc	r2, #420	; 0x1a4
 bb4:	6e697700 	cdpvs	7, 6, cr7, cr9, cr0, {0}
 bb8:	00745f74 	rsbseq	r5, r4, r4, ror pc
 bbc:	6f73645f 	svcvs	0x0073645f
 bc0:	6e61685f 	mcrvs	8, 3, r6, cr1, cr15, {2}
 bc4:	00656c64 	rsbeq	r6, r5, r4, ror #24
 bc8:	7476635f 	ldrbtvc	r6, [r6], #-863	; 0xfffffca1
 bcc:	00667562 	rsbeq	r7, r6, r2, ror #10
 bd0:	7465675f 	strbtvc	r6, [r5], #-1887	; 0xfffff8a1
 bd4:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0xfffffe9c
 bd8:	7272655f 	rsbsvc	r6, r2, #398458880	; 0x17c00000
 bdc:	42535500 	subsmi	r5, r3, #0, 10
 be0:	7665445f 			; <UNDEFINED> instruction: 0x7665445f
 be4:	44656369 	strbtmi	r6, [r5], #-873	; 0xfffffc97
 be8:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
 bec:	6f747069 	svcvs	0x00747069
 bf0:	615f0072 	cmpvs	pc, r2, ror r0	; <UNPREDICTABLE>
 bf4:	62006464 	andvs	r6, r0, #100, 8	; 0x64000000
 bf8:	63736544 	cmnvs	r3, #68, 10	; 0x11000000
 bfc:	74706972 	ldrbtvc	r6, [r0], #-2418	; 0xfffff68e
 c00:	7954726f 	ldmdbvc	r4, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
 c04:	5f006570 	svcpl	0x00006570
 c08:	7562735f 	strbvc	r7, [r2, #-863]!	; 0xfffffca1
 c0c:	53550066 	cmppl	r5, #102	; 0x66
 c10:	74535f42 	ldrbvc	r5, [r3], #-3906	; 0xfffff0be
 c14:	676e6972 			; <UNDEFINED> instruction: 0x676e6972
 c18:	756e614d 	strbvc	r6, [lr, #-333]!	; 0xfffffeb3
 c1c:	74636166 	strbtvc	r6, [r3], #-358	; 0xfffffe9a
 c20:	6e697275 	mcrvs	2, 3, r7, cr9, cr5, {3}
 c24:	73654467 	cmnvc	r5, #1728053248	; 0x67000000
 c28:	70697263 	rsbvc	r7, r9, r3, ror #4
 c2c:	00726f74 	rsbseq	r6, r2, r4, ror pc
 c30:	756c675f 	strbvc	r6, [ip, #-1887]!	; 0xfffff8a1
 c34:	5f5f0065 	svcpl	0x005f0065
 c38:	756c6773 	strbvc	r6, [ip, #-1907]!	; 0xfffff88d
 c3c:	735f0065 	cmpvc	pc, #101	; 0x65
 c40:	6f747274 	svcvs	0x00747274
 c44:	616c5f6b 	cmnvs	ip, fp, ror #30
 c48:	5f007473 	svcpl	0x00007473
 c4c:	6f74626d 	svcvs	0x0074626d
 c50:	735f6377 	cmpvc	pc, #-603979775	; 0xdc000001
 c54:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
 c58:	6f6c5f00 	svcvs	0x006c5f00
 c5c:	656c6163 	strbvs	r6, [ip, #-355]!	; 0xfffffe9d
 c60:	6e665f00 	cdpvs	15, 6, cr5, cr6, cr0, {0}
 c64:	73677261 	cmnvc	r7, #268435462	; 0x10000006
 c68:	74616400 	strbtvc	r6, [r1], #-1024	; 0xfffffc00
 c6c:	63786561 	cmnvs	r8, #406847488	; 0x18400000
 c70:	676e6168 	strbvs	r6, [lr, -r8, ror #2]!
 c74:	00745f65 	rsbseq	r5, r4, r5, ror #30
 c78:	6565725f 	strbvs	r7, [r5, #-607]!	; 0xfffffda1
 c7c:	5500746e 	strpl	r7, [r0, #-1134]	; 0xfffffb92
 c80:	535f4253 	cmppl	pc, #805306373	; 0x30000005
 c84:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
 c88:	6f725067 	svcvs	0x00725067
 c8c:	73654464 	cmnvc	r5, #100, 8	; 0x64000000
 c90:	70697263 	rsbvc	r7, r9, r3, ror #4
 c94:	00726f74 	rsbseq	r6, r2, r4, ror pc
 c98:	746e665f 	strbtvc	r6, [lr], #-1631	; 0xfffff9a1
 c9c:	73657079 	cmnvc	r5, #121	; 0x79
 ca0:	666f5f00 	strbtvs	r5, [pc], -r0, lsl #30
 ca4:	00745f66 	rsbseq	r5, r4, r6, ror #30
 ca8:	75626e5f 	strbvc	r6, [r2, #-3679]!	; 0xfffff1a1
 cac:	755f0066 	ldrbvc	r0, [pc, #-102]	; c4e <__Stack_Size+0x84e>
 cb0:	6573756e 	ldrbvs	r7, [r3, #-1390]!	; 0xfffffa92
 cb4:	61725f64 	cmnvs	r2, r4, ror #30
 cb8:	6200646e 	andvs	r6, r0, #1845493760	; 0x6e000000
 cbc:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
 cc0:	5f006874 	svcpl	0x00006874
 cc4:	70736e75 	rsbsvc	r6, r3, r5, ror lr
 cc8:	66696365 	strbtvs	r6, [r9], -r5, ror #6
 ccc:	5f646569 	svcpl	0x00646569
 cd0:	61636f6c 	cmnvs	r3, ip, ror #30
 cd4:	695f656c 	ldmdbvs	pc, {r2, r3, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
 cd8:	006f666e 	rsbeq	r6, pc, lr, ror #12
 cdc:	616c665f 	cmnvs	ip, pc, asr r6
 ce0:	00327367 	eorseq	r7, r2, r7, ror #6
 ce4:	5f73695f 	svcpl	0x0073695f
 ce8:	00617863 	rsbeq	r7, r1, r3, ror #16
 cec:	6565735f 	strbvs	r7, [r5, #-863]!	; 0xfffffca1
 cf0:	725f0064 	subsvc	r0, pc, #100	; 0x64
 cf4:	5f646e61 	svcpl	0x00646e61
 cf8:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
 cfc:	6c5f5f00 	mrrcvs	15, 0, r5, pc, cr0	; <UNPREDICTABLE>
 d00:	6c61636f 	stclvs	3, cr6, [r1], #-444	; 0xfffffe44
 d04:	00745f65 	rsbseq	r5, r4, r5, ror #30
 d08:	6565735f 	strbvs	r7, [r5, #-863]!	; 0xfffffca1
 d0c:	735f006b 	cmpvc	pc, #107	; 0x6b
 d10:	72656474 	rsbvc	r6, r5, #116, 8	; 0x74000000
 d14:	755f0072 	ldrbvc	r0, [pc, #-114]	; caa <__Stack_Size+0x8aa>
 d18:	00667562 	rsbeq	r7, r6, r2, ror #10

Disassembly of section .debug_loc:

00000000 <.debug_loc>:
   0:	08000944 	stmdaeq	r0, {r2, r6, r8, fp}
   4:	08000946 	stmdaeq	r0, {r1, r2, r6, r8, fp}
   8:	007d0002 	rsbseq	r0, sp, r2
   c:	08000946 	stmdaeq	r0, {r1, r2, r6, r8, fp}
  10:	080009c0 	stmdaeq	r0, {r6, r7, r8, fp}
  14:	107d0002 	rsbsne	r0, sp, r2
	...
  24:	08000958 	stmdaeq	r0, {r3, r4, r6, r8, fp}
  28:	08000968 	stmdaeq	r0, {r3, r5, r6, r8, fp}
  2c:	68530001 	ldmdavs	r3, {r0}^
  30:	72080009 	andvc	r0, r8, #9
  34:	02080009 	andeq	r0, r8, #9
  38:	00007400 	andeq	r7, r0, r0, lsl #8
	...
  44:	68000000 	stmdavs	r0, {}	; <UNPREDICTABLE>
  48:	74080009 	strvc	r0, [r8], #-9
  4c:	01080009 	tsteq	r8, r9
  50:	09745300 	ldmdbeq	r4!, {r8, r9, ip, lr}^
  54:	097e0800 	ldmdbeq	lr!, {fp}^
  58:	00020800 	andeq	r0, r2, r0, lsl #16
  5c:	00000074 	andeq	r0, r0, r4, ror r0
	...
  68:	09740000 	ldmdbeq	r4!, {}^	; <UNPREDICTABLE>
  6c:	09800800 	stmibeq	r0, {fp}
  70:	00010800 	andeq	r0, r1, r0, lsl #16
  74:	00098053 	andeq	r8, r9, r3, asr r0
  78:	00098a08 	andeq	r8, r9, r8, lsl #20
  7c:	74000208 	strvc	r0, [r0], #-520	; 0xfffffdf8
	...
  8c:	00098000 	andeq	r8, r9, r0
  90:	00098c08 	andeq	r8, r9, r8, lsl #24
  94:	53000108 	movwpl	r0, #264	; 0x108
  98:	0800098c 	stmdaeq	r0, {r2, r3, r7, r8, fp}
  9c:	08000996 	stmdaeq	r0, {r1, r2, r4, r7, r8, fp}
  a0:	04720002 	ldrbteq	r0, [r2], #-2
	...
  ac:	098c0000 	stmibeq	ip, {}	; <UNPREDICTABLE>
  b0:	09990800 	ldmibeq	r9, {fp}
  b4:	00010800 	andeq	r0, r1, r0, lsl #16
  b8:	00000053 	andeq	r0, r0, r3, asr r0
  bc:	00000000 	andeq	r0, r0, r0
  c0:	02020000 	andeq	r0, r2, #0
  c4:	d0000000 	andle	r0, r0, r0
  c8:	d0080001 	andle	r0, r8, r1
  cc:	01080001 	tsteq	r8, r1
  d0:	01d05000 	bicseq	r5, r0, r0
  d4:	01d40800 	bicseq	r0, r4, r0, lsl #16
  d8:	00010800 	andeq	r0, r1, r0, lsl #16
  dc:	0001d450 	andeq	sp, r1, r0, asr r4
  e0:	0001dc08 	andeq	sp, r1, r8, lsl #24
  e4:	70000308 	andvc	r0, r0, r8, lsl #6
  e8:	00009f01 	andeq	r9, r0, r1, lsl #30
  ec:	00000000 	andeq	r0, r0, r0
  f0:	00010000 	andeq	r0, r1, r0
	...
  fc:	0800013a 	stmdaeq	r0, {r1, r3, r4, r5, r8}
 100:	0800013e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r8}
 104:	9f300002 	svcls	0x00300002
 108:	0800013e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r8}
 10c:	08000144 	stmdaeq	r0, {r2, r6, r8}
 110:	ff0a0007 			; <UNDEFINED> instruction: 0xff0a0007
 114:	1c00720f 	sfmne	f7, 4, [r0], {15}
 118:	0001449f 	muleq	r1, pc, r4	; <UNPREDICTABLE>
 11c:	00014608 	andeq	r4, r1, r8, lsl #12
 120:	0a000708 	beq	1d48 <__Stack_Size+0x1948>
 124:	00721000 	rsbseq	r1, r2, r0
 128:	01469f1c 	cmpeq	r6, ip, lsl pc
 12c:	014c0800 	cmpeq	ip, r0, lsl #16
 130:	00070800 	andeq	r0, r7, r0, lsl #16
 134:	720fff0a 	andvc	pc, pc, #10, 30	; 0x28
 138:	4c9f1c00 	ldcmi	12, cr1, [pc], {0}
 13c:	cc080001 	stcgt	0, cr0, [r8], {1}
 140:	04080001 	streq	r0, [r8], #-1
 144:	1fff0a00 	svcne	0x00ff0a00
 148:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
 154:	00000101 	andeq	r0, r0, r1, lsl #2
 158:	00000000 	andeq	r0, r0, r0
 15c:	00000100 	andeq	r0, r0, r0, lsl #2
 160:	00000000 	andeq	r0, r0, r0
 164:	00014c00 	andeq	r4, r1, r0, lsl #24
 168:	00015008 	andeq	r5, r1, r8
 16c:	0a000708 	beq	1d94 <__Stack_Size+0x1994>
 170:	00720fff 	ldrshteq	r0, [r2], #-255	; 0xffffff01
 174:	01509f1c 	cmpeq	r0, ip, lsl pc
 178:	015c0800 	cmpeq	ip, r0, lsl #16
 17c:	00040800 	andeq	r0, r4, r0, lsl #16
 180:	9f1fff0a 	svcls	0x001fff0a
 184:	0800015c 	stmdaeq	r0, {r2, r3, r4, r6, r8}
 188:	08000160 	stmdaeq	r0, {r5, r6, r8}
 18c:	9f300002 	svcls	0x00300002
 190:	08000160 	stmdaeq	r0, {r5, r6, r8}
 194:	0800016a 	stmdaeq	r0, {r1, r3, r5, r6, r8}
 198:	ff0a0007 			; <UNDEFINED> instruction: 0xff0a0007
 19c:	1c00720f 	sfmne	f7, 4, [r0], {15}
 1a0:	00016a9f 	muleq	r1, pc, sl	; <UNPREDICTABLE>
 1a4:	00016c08 	andeq	r6, r1, r8, lsl #24
 1a8:	0a000708 	beq	1dd0 <__Stack_Size+0x19d0>
 1ac:	00721000 	rsbseq	r1, r2, r0
 1b0:	016c9f1c 	cmneq	ip, ip, lsl pc
 1b4:	01720800 	cmneq	r2, r0, lsl #16
 1b8:	00070800 	andeq	r0, r7, r0, lsl #16
 1bc:	720fff0a 	andvc	pc, pc, #10, 30	; 0x28
 1c0:	ac9f1c00 	ldcge	12, cr1, [pc], {0}
 1c4:	b0080001 	andlt	r0, r8, r1
 1c8:	02080001 	andeq	r0, r8, #1
 1cc:	b09f3000 	addslt	r3, pc, r0
 1d0:	b6080001 	strlt	r0, [r8], -r1
 1d4:	07080001 	streq	r0, [r8, -r1]
 1d8:	0fff0a00 	svceq	0x00ff0a00
 1dc:	9f1c0072 	svcls	0x001c0072
 1e0:	080001b6 	stmdaeq	r0, {r1, r2, r4, r5, r7, r8}
 1e4:	080001b8 	stmdaeq	r0, {r3, r4, r5, r7, r8}
 1e8:	000a0007 	andeq	r0, sl, r7
 1ec:	1c007210 	sfmne	f7, 4, [r0], {16}
 1f0:	0001b89f 	muleq	r1, pc, r8	; <UNPREDICTABLE>
 1f4:	0001cc08 	andeq	ip, r1, r8, lsl #24
 1f8:	0a000708 	beq	1e20 <__Stack_Size+0x1a20>
 1fc:	00720fff 	ldrshteq	r0, [r2], #-255	; 0xffffff01
 200:	00009f1c 	andeq	r9, r0, ip, lsl pc
	...
 210:	02010100 	andeq	r0, r1, #0, 2
 214:	05030302 	streq	r0, [r3, #-770]	; 0xfffffcfe
 218:	00000005 	andeq	r0, r0, r5
 21c:	00000000 	andeq	r0, r0, r0
 220:	014c0000 	mrseq	r0, (UNDEF: 76)
 224:	01500800 	cmpeq	r0, r0, lsl #16
 228:	00020800 	andeq	r0, r2, r0, lsl #16
 22c:	01520473 	cmpeq	r2, r3, ror r4
 230:	01600800 	cmneq	r0, r0, lsl #16
 234:	00010800 	andeq	r0, r1, r0, lsl #16
 238:	00016052 	andeq	r6, r1, r2, asr r0
 23c:	00017208 	andeq	r7, r1, r8, lsl #4
 240:	73000208 	movwvc	r0, #520	; 0x208
 244:	00019604 	andeq	r9, r1, r4, lsl #12
 248:	00019608 	andeq	r9, r1, r8, lsl #12
 24c:	51000108 	tstpl	r0, r8, lsl #2
 250:	08000196 	stmdaeq	r0, {r1, r2, r4, r7, r8}
 254:	08000196 	stmdaeq	r0, {r1, r2, r4, r7, r8}
 258:	00710009 	rsbseq	r0, r1, r9
 25c:	8bffff11 	blhi	fffffea8 <BootRAM+0xef70649>
 260:	969f1a7e 			; <UNDEFINED> instruction: 0x969f1a7e
 264:	96080001 	strls	r0, [r8], -r1
 268:	0d080001 	stceq	0, cr0, [r8, #-4]
 26c:	11007100 	mrsne	r7, (UNDEF: 16)
 270:	7e8bffff 	mcrvc	15, 4, pc, cr11, cr15, {7}	; <UNPREDICTABLE>
 274:	24404d1a 	strbcs	r4, [r0], #-3354	; 0xfffff2e6
 278:	01969f21 	orrseq	r9, r6, r1, lsr #30
 27c:	01960800 	orrseq	r0, r6, r0, lsl #16
 280:	000d0800 	andeq	r0, sp, r0, lsl #16
 284:	8f110071 	svchi	0x00110071
 288:	1a7e8bfe 	bne	1fa3288 <__Stack_Size+0x1fa2e88>
 28c:	2124404d 			; <UNDEFINED> instruction: 0x2124404d
 290:	0001969f 	muleq	r1, pc, r6	; <UNPREDICTABLE>
 294:	00019a08 	andeq	r9, r1, r8, lsl #20
 298:	71000d08 	tstvc	r0, r8, lsl #26
 29c:	8e8f1100 	rmfhie	f1, f7, f0
 2a0:	4d1a7e8b 	ldcmi	14, cr7, [sl, #-556]	; 0xfffffdd4
 2a4:	9f212440 	svcls	0x00212440
 2a8:	0800019a 	stmdaeq	r0, {r1, r3, r4, r7, r8}
 2ac:	0800019e 	stmdaeq	r0, {r1, r2, r3, r4, r7, r8}
 2b0:	00720007 	rsbseq	r0, r2, r7
 2b4:	2124404d 			; <UNDEFINED> instruction: 0x2124404d
 2b8:	00019e9f 	muleq	r1, pc, lr	; <UNPREDICTABLE>
 2bc:	0001a608 	andeq	sl, r1, r8, lsl #12
 2c0:	52000108 	andpl	r0, r0, #8, 2
 2c4:	080001a6 	stmdaeq	r0, {r1, r2, r5, r7, r8}
 2c8:	080001ac 	stmdaeq	r0, {r2, r3, r5, r7, r8}
 2cc:	04730002 	ldrbteq	r0, [r3], #-2
 2d0:	080001ac 	stmdaeq	r0, {r2, r3, r5, r7, r8}
 2d4:	080001b0 	stmdaeq	r0, {r4, r5, r7, r8}
 2d8:	0071000f 	rsbseq	r0, r1, pc
 2dc:	8b808f11 	blhi	fe023f28 <BootRAM+0xcf946c9>
 2e0:	000c1a7e 	andeq	r1, ip, lr, ror sl
 2e4:	21001d04 	tstcs	r0, r4, lsl #26
 2e8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
 2ec:	00000000 	andeq	r0, r0, r0
 2f0:	00047800 	andeq	r7, r4, r0, lsl #16
 2f4:	00047a00 	andeq	r7, r4, r0, lsl #20
 2f8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
 2fc:	00047a00 	andeq	r7, r4, r0, lsl #20
 300:	0004d200 	andeq	sp, r4, r0, lsl #4
 304:	7d000200 	sfmvc	f0, 4, [r0, #-0]
 308:	0000000c 	andeq	r0, r0, ip
	...
 314:	00047800 	andeq	r7, r4, r0, lsl #16
 318:	00048800 	andeq	r8, r4, r0, lsl #16
 31c:	50000100 	andpl	r0, r0, r0, lsl #2
 320:	00000488 	andeq	r0, r0, r8, lsl #9
 324:	000004d2 	ldrdeq	r0, [r0], -r2
 328:	01f30004 	mvnseq	r0, r4
 32c:	00009f50 	andeq	r9, r0, r0, asr pc
	...
 33c:	00000478 	andeq	r0, r0, r8, ror r4
 340:	000004a0 	andeq	r0, r0, r0, lsr #9
 344:	a0510001 	subsge	r0, r1, r1
 348:	a4000004 	strge	r0, [r0], #-4
 34c:	03000004 	movweq	r0, #4
 350:	9f027100 	svcls	0x00027100
 354:	000004a4 	andeq	r0, r0, r4, lsr #9
 358:	000004d2 	ldrdeq	r0, [r0], -r2
 35c:	01f30004 	mvnseq	r0, r4
 360:	00009f51 	andeq	r9, r0, r1, asr pc
	...
 36c:	04840000 	streq	r0, [r4], #0
 370:	04900000 	ldreq	r0, [r0], #0
 374:	00010000 	andeq	r0, r1, r0
 378:	00049052 	andeq	r9, r4, r2, asr r0
 37c:	0004b200 	andeq	fp, r4, r0, lsl #4
 380:	73000b00 	movwvc	r0, #2816	; 0xb00
 384:	23243300 			; <UNDEFINED> instruction: 0x23243300
 388:	8081c080 	addhi	ip, r1, r0, lsl #1
 38c:	00009f04 	andeq	r9, r0, r4, lsl #30
	...
 398:	0000048c 	andeq	r0, r0, ip, lsl #9
 39c:	000004d2 	ldrdeq	r0, [r0], -r2
 3a0:	00500001 	subseq	r0, r0, r1
 3a4:	00000000 	andeq	r0, r0, r0
 3a8:	01000000 	mrseq	r0, (UNDEF: 0)
 3ac:	00000000 	andeq	r0, r0, r0
 3b0:	00048e01 	andeq	r8, r4, r1, lsl #28
 3b4:	00049e00 	andeq	r9, r4, r0, lsl #28
 3b8:	70000500 	andvc	r0, r0, r0, lsl #10
 3bc:	9f263101 	svcls	0x00263101
 3c0:	0000049e 	muleq	r0, lr, r4
 3c4:	000004a4 	andeq	r0, r0, r4, lsr #9
 3c8:	a4540001 	ldrbge	r0, [r4], #-1
 3cc:	d0000004 	andle	r0, r0, r4
 3d0:	05000004 	streq	r0, [r0, #-4]
 3d4:	31017000 	mrscc	r7, (UNDEF: 1)
 3d8:	00009f26 	andeq	r9, r0, r6, lsr #30
	...
 3e8:	0000049c 	muleq	r0, ip, r4
 3ec:	000004a8 	andeq	r0, r0, r8, lsr #9
 3f0:	a8520001 	ldmdage	r2, {r0}^
 3f4:	ae000004 	cdpge	0, 0, cr0, cr0, cr4, {0}
 3f8:	03000004 	movweq	r0, #4
 3fc:	9f7c7200 	svcls	0x007c7200
 400:	000004ae 	andeq	r0, r0, lr, lsr #9
 404:	000004be 			; <UNDEFINED> instruction: 0x000004be
 408:	00520001 	subseq	r0, r2, r1
 40c:	00000000 	andeq	r0, r0, r0
 410:	02000000 	andeq	r0, r0, #0
 414:	00049c00 	andeq	r9, r4, r0, lsl #24
 418:	0004a400 	andeq	sl, r4, r0, lsl #8
 41c:	30000200 	andcc	r0, r0, r0, lsl #4
 420:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
 424:	00000000 	andeq	r0, r0, r0
 428:	0003c800 	andeq	ip, r3, r0, lsl #16
 42c:	0003ca00 	andeq	ip, r3, r0, lsl #20
 430:	7d000200 	sfmvc	f0, 4, [r0, #-0]
 434:	0003ca00 	andeq	ip, r3, r0, lsl #20
 438:	00041c00 	andeq	r1, r4, r0, lsl #24
 43c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
 440:	00000014 	andeq	r0, r0, r4, lsl r0
	...
 44c:	c8000000 	stmdagt	r0, {}	; <UNPREDICTABLE>
 450:	ee000003 	cdp	0, 0, cr0, cr0, cr3, {0}
 454:	01000003 	tsteq	r0, r3
 458:	03ee5000 	mvneq	r5, #0
 45c:	04100000 	ldreq	r0, [r0], #-0
 460:	00040000 	andeq	r0, r4, r0
 464:	9f5001f3 	svcls	0x005001f3
 468:	00000410 	andeq	r0, r0, r0, lsl r4
 46c:	0000041c 	andeq	r0, r0, ip, lsl r4
 470:	00500001 	subseq	r0, r0, r1
	...
 47c:	0003d600 	andeq	sp, r3, r0, lsl #12
 480:	00041c00 	andeq	r1, r4, r0, lsl #24
 484:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
 490:	03e40000 	mvneq	r0, #0
 494:	041c0000 	ldreq	r0, [ip], #-0
 498:	00010000 	andeq	r0, r1, r0
 49c:	00000056 	andeq	r0, r0, r6, asr r0
 4a0:	00000000 	andeq	r0, r0, r0
 4a4:	e4000100 	str	r0, [r0], #-256	; 0xffffff00
 4a8:	1c000003 	stcne	0, cr0, [r0], {3}
 4ac:	01000004 	tsteq	r0, r4
 4b0:	00005100 	andeq	r5, r0, r0, lsl #2
 4b4:	00000000 	andeq	r0, r0, r0
 4b8:	02000000 	andeq	r0, r0, #0
 4bc:	00000002 	andeq	r0, r0, r2
 4c0:	000003e6 	andeq	r0, r0, r6, ror #7
 4c4:	000003e6 	andeq	r0, r0, r6, ror #7
 4c8:	e6530001 	ldrb	r0, [r3], -r1
 4cc:	fc000003 	stc2	0, cr0, [r0], {3}
 4d0:	08000003 	stmdaeq	r0, {r0, r1}
 4d4:	32007500 	andcc	r7, r0, #0, 10
 4d8:	22007324 	andcs	r7, r0, #36, 6	; 0x90000000
 4dc:	0004109f 	muleq	r4, pc, r0	; <UNPREDICTABLE>
 4e0:	00041800 	andeq	r1, r4, r0, lsl #16
 4e4:	75000800 	strvc	r0, [r0, #-2048]	; 0xfffff800
 4e8:	73243200 			; <UNDEFINED> instruction: 0x73243200
 4ec:	009f2200 	addseq	r2, pc, r0, lsl #4
 4f0:	00000000 	andeq	r0, r0, r0
 4f4:	02000000 	andeq	r0, r0, #0
 4f8:	e6000000 	str	r0, [r0], -r0
 4fc:	18000003 	stmdane	r0, {r0, r1}
 500:	01000004 	tsteq	r0, r4
 504:	04185500 	ldreq	r5, [r8], #-1280	; 0xfffffb00
 508:	041a0000 	ldreq	r0, [sl], #-0
 50c:	00030000 	andeq	r0, r3, r0
 510:	009f0175 	addseq	r0, pc, r5, ror r1	; <UNPREDICTABLE>
 514:	00000000 	andeq	r0, r0, r0
 518:	a0000000 	andge	r0, r0, r0
 51c:	a2000002 	andge	r0, r0, #2
 520:	02000002 	andeq	r0, r0, #2
 524:	a2007d00 	andge	r7, r0, #0, 26
 528:	c8000002 	stmdagt	r0, {r1}
 52c:	02000003 	andeq	r0, r0, #3
 530:	00107d00 	andseq	r7, r0, r0, lsl #26
 534:	00000000 	andeq	r0, r0, r0
 538:	02000000 	andeq	r0, r0, #0
 53c:	c8000000 	stmdagt	r0, {}	; <UNPREDICTABLE>
 540:	cc000002 	stcgt	0, cr0, [r0], {2}
 544:	02000002 	andeq	r0, r0, #2
 548:	cc9f3000 	ldcgt	0, cr3, [pc], {0}
 54c:	ce000002 	cdpgt	0, 0, cr0, cr0, cr2, {0}
 550:	05000002 	streq	r0, [r0, #-2]
 554:	00743800 	rsbseq	r3, r4, r0, lsl #16
 558:	00009f1c 	andeq	r9, r0, ip, lsl pc
	...
 564:	00000318 	andeq	r0, r0, r8, lsl r3
 568:	00000364 	andeq	r0, r0, r4, ror #6
 56c:	00550001 	subseq	r0, r5, r1
 570:	00000000 	andeq	r0, r0, r0
 574:	64000000 	strvs	r0, [r0], #-0
 578:	66000001 	strvs	r0, [r0], -r1
 57c:	02000001 	andeq	r0, r0, #1
 580:	66007d00 	strvs	r7, [r0], -r0, lsl #26
 584:	a0000001 	andge	r0, r0, r1
 588:	02000002 	andeq	r0, r0, #2
 58c:	00147d00 	andseq	r7, r4, r0, lsl #26
	...
 598:	64000000 	strvs	r0, [r0], #-0
 59c:	6e000001 	cdpvs	0, 0, cr0, cr0, cr1, {0}
 5a0:	01000001 	tsteq	r0, r1
 5a4:	016e5000 	cmneq	lr, r0
 5a8:	02a00000 	adceq	r0, r0, #0
 5ac:	00010000 	andeq	r0, r1, r0
 5b0:	00000056 	andeq	r0, r0, r6, asr r0
	...
 5c8:	00016400 	andeq	r6, r1, r0, lsl #8
 5cc:	0001b800 	andeq	fp, r1, r0, lsl #16
 5d0:	51000100 	mrspl	r0, (UNDEF: 16)
 5d4:	000001b8 			; <UNDEFINED> instruction: 0x000001b8
 5d8:	0000020e 	andeq	r0, r0, lr, lsl #4
 5dc:	01f30004 	mvnseq	r0, r4
 5e0:	020e9f51 	andeq	r9, lr, #324	; 0x144
 5e4:	02120000 	andseq	r0, r2, #0
 5e8:	00010000 	andeq	r0, r1, r0
 5ec:	00021251 	andeq	r1, r2, r1, asr r2
 5f0:	00021400 	andeq	r1, r2, r0, lsl #8
 5f4:	f3000400 	vshl.u8	d0, d0, d0
 5f8:	149f5101 	ldrne	r5, [pc], #257	; 600 <__Stack_Size+0x200>
 5fc:	18000002 	stmdane	r0, {r1}
 600:	01000002 	tsteq	r0, r2
 604:	02185100 	andseq	r5, r8, #0, 2
 608:	021a0000 	andseq	r0, sl, #0
 60c:	00040000 	andeq	r0, r4, r0
 610:	9f5101f3 	svcls	0x005101f3
 614:	0000021a 	andeq	r0, r0, sl, lsl r2
 618:	0000021e 	andeq	r0, r0, lr, lsl r2
 61c:	1e510001 	cdpne	0, 5, cr0, cr1, cr1, {0}
 620:	a0000002 	andge	r0, r0, r2
 624:	04000002 	streq	r0, [r0], #-2
 628:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
 62c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
 638:	64000000 	strvs	r0, [r0], #-0
 63c:	00000001 	andeq	r0, r0, r1
 640:	01000002 	tsteq	r0, r2
 644:	02005200 	andeq	r5, r0, #0, 4
 648:	020e0000 	andeq	r0, lr, #0
 64c:	00040000 	andeq	r0, r4, r0
 650:	9f5201f3 	svcls	0x005201f3
 654:	0000020e 	andeq	r0, r0, lr, lsl #4
 658:	000002a0 	andeq	r0, r0, r0, lsr #5
 65c:	00520001 	subseq	r0, r2, r1
 660:	00000000 	andeq	r0, r0, r0
 664:	02000000 	andeq	r0, r0, #0
 668:	00000000 	andeq	r0, r0, r0
 66c:	64000000 	strvs	r0, [r0], #-0
 670:	da000001 	ble	67c <__Stack_Size+0x27c>
 674:	06000001 	streq	r0, [r0], -r1
 678:	09007000 	stmdbeq	r0, {ip, sp, lr}
 67c:	da9f1a80 	ble	fe7c7084 <BootRAM+0xd737825>
 680:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
 684:	07000002 	streq	r0, [r0, -r2]
 688:	5001f300 	andpl	pc, r1, r0, lsl #6
 68c:	9f1a8009 	svcls	0x001a8009
 690:	0000020e 	andeq	r0, r0, lr, lsl #4
 694:	00000220 	andeq	r0, r0, r0, lsr #4
 698:	00700006 	rsbseq	r0, r0, r6
 69c:	9f1a8009 	svcls	0x001a8009
 6a0:	00000220 	andeq	r0, r0, r0, lsr #4
 6a4:	000002a0 	andeq	r0, r0, r0, lsr #5
 6a8:	01f30007 	mvnseq	r0, r7
 6ac:	1a800950 	bne	fe002bf4 <BootRAM+0xcf73395>
 6b0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
 6b4:	00000000 	andeq	r0, r0, r0
 6b8:	01010000 	mrseq	r0, (UNDEF: 1)
 6bc:	00000202 	andeq	r0, r0, r2, lsl #4
	...
 6c8:	a4000000 	strge	r0, [r0], #-0
 6cc:	a4000001 	strge	r0, [r0], #-1
 6d0:	01000001 	tsteq	r0, r1
 6d4:	01a45400 			; <UNDEFINED> instruction: 0x01a45400
 6d8:	01a40000 			; <UNDEFINED> instruction: 0x01a40000
 6dc:	000b0000 	andeq	r0, fp, r0
 6e0:	0f0a0074 	svceq	0x000a0074
 6e4:	800b1a0f 	andhi	r1, fp, pc, lsl #20
 6e8:	a49f2180 	ldrge	r2, [pc], #384	; 6f0 <__Stack_Size+0x2f0>
 6ec:	a8000001 	stmdage	r0, {r0}
 6f0:	11000001 	tstne	r0, r1
 6f4:	0a007400 	beq	1d6fc <__Stack_Size+0x1d2fc>
 6f8:	761a0f00 	ldrvc	r0, [sl], -r0, lsl #30
 6fc:	1aff0800 	bne	fffc2704 <BootRAM+0xef32ea5>
 700:	80800b21 	addhi	r0, r0, r1, lsr #22
 704:	01ac9f21 			; <UNDEFINED> instruction: 0x01ac9f21
 708:	01c00000 	biceq	r0, r0, r0
 70c:	00070000 	andeq	r0, r7, r0
 710:	800b0074 	andhi	r0, fp, r4, ror r0
 714:	c09f2180 	addsgt	r2, pc, r0, lsl #3
 718:	c8000001 	stmdagt	r0, {r0}
 71c:	01000001 	tsteq	r0, r1
 720:	01c85100 	biceq	r5, r8, r0, lsl #2
 724:	01e20000 	mvneq	r0, r0
 728:	00020000 	andeq	r0, r2, r0
 72c:	01ee0075 	mvneq	r0, r5, ror r0
 730:	01f20000 	mvnseq	r0, r0
 734:	00010000 	andeq	r0, r1, r0
 738:	00020e51 	andeq	r0, r2, r1, asr lr
 73c:	00022000 	andeq	r2, r2, r0
 740:	74000700 	strvc	r0, [r0], #-1792	; 0xfffff900
 744:	80800b00 	addhi	r0, r0, r0, lsl #22
 748:	02209f21 	eoreq	r9, r0, #33, 30	; 0x84
 74c:	02220000 	eoreq	r0, r2, #0
 750:	00020000 	andeq	r0, r2, r0
 754:	00000075 	andeq	r0, r0, r5, ror r0
 758:	00000000 	andeq	r0, r0, r0
 75c:	00780000 	rsbseq	r0, r8, r0
 760:	007a0000 	rsbseq	r0, sl, r0
 764:	00020000 	andeq	r0, r2, r0
 768:	007a007d 	rsbseq	r0, sl, sp, ror r0
 76c:	01640000 	cmneq	r4, r0
 770:	00020000 	andeq	r0, r2, r0
 774:	0000147d 	andeq	r1, r0, sp, ror r4
	...
 780:	00780000 	rsbseq	r0, r8, r0
 784:	007e0000 	rsbseq	r0, lr, r0
 788:	00010000 	andeq	r0, r1, r0
 78c:	00007e50 	andeq	r7, r0, r0, asr lr
 790:	00016400 	andeq	r6, r1, r0, lsl #8
 794:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
 7b0:	00000078 	andeq	r0, r0, r8, ror r0
 7b4:	000000c4 	andeq	r0, r0, r4, asr #1
 7b8:	c4510001 	ldrbgt	r0, [r1], #-1
 7bc:	c6000000 	strgt	r0, [r0], -r0
 7c0:	04000000 	streq	r0, [r0], #-0
 7c4:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
 7c8:	0000c69f 	muleq	r0, pc, r6	; <UNPREDICTABLE>
 7cc:	0000ca00 	andeq	ip, r0, r0, lsl #20
 7d0:	51000100 	mrspl	r0, (UNDEF: 16)
 7d4:	000000ca 	andeq	r0, r0, sl, asr #1
 7d8:	00000106 	andeq	r0, r0, r6, lsl #2
 7dc:	01f30004 	mvnseq	r0, r4
 7e0:	01069f51 	tsteq	r6, r1, asr pc
 7e4:	010a0000 	mrseq	r0, (UNDEF: 10)
 7e8:	00010000 	andeq	r0, r1, r0
 7ec:	00010a51 	andeq	r0, r1, r1, asr sl
 7f0:	00010c00 	andeq	r0, r1, r0, lsl #24
 7f4:	f3000400 	vshl.u8	d0, d0, d0
 7f8:	0c9f5101 	ldfeqs	f5, [pc], {1}
 7fc:	10000001 	andne	r0, r0, r1
 800:	01000001 	tsteq	r0, r1
 804:	01105100 	tsteq	r0, r0, lsl #2
 808:	01640000 	cmneq	r4, r0
 80c:	00040000 	andeq	r0, r4, r0
 810:	9f5101f3 	svcls	0x005101f3
	...
 820:	00780000 	rsbseq	r0, r8, r0
 824:	01000000 	mrseq	r0, (UNDEF: 0)
 828:	00010000 	andeq	r0, r1, r0
 82c:	00010052 	andeq	r0, r1, r2, asr r0
 830:	00010200 	andeq	r0, r1, r0, lsl #4
 834:	f3000400 	vshl.u8	d0, d0, d0
 838:	069f5201 	ldreq	r5, [pc], r1, lsl #4
 83c:	64000001 	strvs	r0, [r0], #-1
 840:	01000001 	tsteq	r0, r1
 844:	00005200 	andeq	r5, r0, r0, lsl #4
	...
 858:	00000078 	andeq	r0, r0, r8, ror r0
 85c:	000000ee 	andeq	r0, r0, lr, ror #1
 860:	ee530001 	cdp	0, 5, cr0, cr3, cr1, {0}
 864:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
 868:	07000000 	streq	r0, [r0, -r0]
 86c:	32007600 	andcc	r7, r0, #0, 12
 870:	22007124 	andcs	r7, r0, #36, 2
 874:	000000fe 	strdeq	r0, [r0], -lr
 878:	00000106 	andeq	r0, r0, r6, lsl #2
 87c:	01f30004 	mvnseq	r0, r4
 880:	01069f53 	tsteq	r6, r3, asr pc
 884:	01460000 	mrseq	r0, (UNDEF: 70)
 888:	00010000 	andeq	r0, r1, r0
 88c:	00014653 	andeq	r4, r1, r3, asr r6
 890:	00016400 	andeq	r6, r1, r0, lsl #8
 894:	76000700 	strvc	r0, [r0], -r0, lsl #14
 898:	71243200 			; <UNDEFINED> instruction: 0x71243200
 89c:	00002200 	andeq	r2, r0, r0, lsl #4
 8a0:	00000000 	andeq	r0, r0, r0
 8a4:	00020000 	andeq	r0, r2, r0
 8a8:	00780000 	rsbseq	r0, r8, r0
 8ac:	00e20000 	rsceq	r0, r2, r0
 8b0:	00060000 	andeq	r0, r6, r0
 8b4:	80090070 	andhi	r0, r9, r0, ror r0
 8b8:	00e29f1a 	rsceq	r9, r2, sl, lsl pc
 8bc:	01640000 	cmneq	r4, r0
 8c0:	00070000 	andeq	r0, r7, r0
 8c4:	095001f3 	ldmdbeq	r0, {r0, r1, r4, r5, r6, r7, r8}^
 8c8:	009f1a80 	addseq	r1, pc, r0, lsl #21
	...
 8d4:	02020101 	andeq	r0, r2, #1073741824	; 0x40000000
 8d8:	00000000 	andeq	r0, r0, r0
 8dc:	0000ae00 	andeq	sl, r0, r0, lsl #28
 8e0:	0000ae00 	andeq	sl, r0, r0, lsl #28
 8e4:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
 8e8:	000000ae 	andeq	r0, r0, lr, lsr #1
 8ec:	000000ae 	andeq	r0, r0, lr, lsr #1
 8f0:	0074000b 	rsbseq	r0, r4, fp
 8f4:	1a0f0f0a 	bne	3c4524 <__Stack_Size+0x3c4124>
 8f8:	2180800b 	orrcs	r8, r0, fp
 8fc:	0000ae9f 	muleq	r0, pc, lr	; <UNPREDICTABLE>
 900:	0000b400 	andeq	fp, r0, r0, lsl #8
 904:	74001100 	strvc	r1, [r0], #-256	; 0xffffff00
 908:	0f000a00 	svceq	0x00000a00
 90c:	0800761a 	stmdaeq	r0, {r1, r3, r4, r9, sl, ip, sp, lr}
 910:	0b211aff 	bleq	847514 <__Stack_Size+0x847114>
 914:	9f218080 	svcls	0x00218080
 918:	000000b8 	strheq	r0, [r0], -r8
 91c:	000000ce 	andeq	r0, r0, lr, asr #1
 920:	00740007 	rsbseq	r0, r4, r7
 924:	2180800b 	orrcs	r8, r0, fp
 928:	0001069f 	muleq	r1, pc, r6	; <UNPREDICTABLE>
 92c:	00011200 	andeq	r1, r1, r0, lsl #4
 930:	74000700 	strvc	r0, [r0], #-1792	; 0xfffff900
 934:	80800b00 	addhi	r0, r0, r0, lsl #22
 938:	00009f21 	andeq	r9, r0, r1, lsr #30
 93c:	00000000 	andeq	r0, r0, r0
 940:	04d20000 	ldrbeq	r0, [r2], #0
 944:	04d40000 	ldrbeq	r0, [r4], #0
 948:	00020000 	andeq	r0, r2, r0
 94c:	04d4007d 	ldrbeq	r0, [r4], #125	; 0x7d
 950:	05600000 	strbeq	r0, [r0, #-0]!
 954:	00020000 	andeq	r0, r2, r0
 958:	0560187d 	strbeq	r1, [r0, #-2173]!	; 0xfffff783
 95c:	05620000 	strbeq	r0, [r2, #-0]!
 960:	00020000 	andeq	r0, r2, r0
 964:	0562107d 	strbeq	r1, [r2, #-125]!	; 0xffffff83
 968:	05ec0000 	strbeq	r0, [ip, #0]!
 96c:	00020000 	andeq	r0, r2, r0
 970:	0000187d 	andeq	r1, r0, sp, ror r8
	...
 980:	04d20000 	ldrbeq	r0, [r2], #0
 984:	04f80000 	ldrbteq	r0, [r8], #0
 988:	00010000 	andeq	r0, r1, r0
 98c:	0004f850 	andeq	pc, r4, r0, asr r8	; <UNPREDICTABLE>
 990:	00052200 	andeq	r2, r5, r0, lsl #4
 994:	f3000400 	vshl.u8	d0, d0, d0
 998:	229f5001 	addscs	r5, pc, #1
 99c:	2c000005 	stccs	0, cr0, [r0], {5}
 9a0:	01000005 	tsteq	r0, r5
 9a4:	052c5000 	streq	r5, [ip, #-0]!
 9a8:	05ec0000 	strbeq	r0, [ip, #0]!
 9ac:	00040000 	andeq	r0, r4, r0
 9b0:	9f5001f3 	svcls	0x005001f3
	...
 9bc:	00000001 	andeq	r0, r0, r1
 9c0:	00000300 	andeq	r0, r0, r0, lsl #6
 9c4:	000004fe 	strdeq	r0, [r0], -lr
 9c8:	0000051c 	andeq	r0, r0, ip, lsl r5
 9cc:	2c550001 	mrrccs	0, 0, r0, r5, cr1
 9d0:	5e000005 	cdppl	0, 0, cr0, cr0, cr5, {0}
 9d4:	01000005 	tsteq	r0, r5
 9d8:	05625500 	strbeq	r5, [r2, #-1280]!	; 0xfffffb00
 9dc:	058e0000 	streq	r0, [lr]
 9e0:	00010000 	andeq	r0, r1, r0
 9e4:	00059655 	andeq	r9, r5, r5, asr r6
 9e8:	0005c600 	andeq	ip, r5, r0, lsl #12
 9ec:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
 9f8:	04e40001 	strbteq	r0, [r4], #1
 9fc:	04ee0000 	strbteq	r0, [lr], #0
 a00:	000b0000 	andeq	r0, fp, r0
 a04:	000a0073 	andeq	r0, sl, r3, ror r0
 a08:	24401a08 	strbcs	r1, [r0], #-2568	; 0xfffff5f8
 a0c:	009f2e30 	addseq	r2, pc, r0, lsr lr	; <UNPREDICTABLE>
	...
 a20:	04000003 	streq	r0, [r0], #-3
 a24:	1c000005 	stcne	0, cr0, [r0], {5}
 a28:	01000005 	tsteq	r0, r5
 a2c:	052c5300 	streq	r5, [ip, #-768]!	; 0xfffffd00
 a30:	053f0000 	ldreq	r0, [pc, #-0]!	; a38 <__Stack_Size+0x638>
 a34:	00010000 	andeq	r0, r1, r0
 a38:	00056253 	andeq	r6, r5, r3, asr r2
 a3c:	00056c00 	andeq	r6, r5, r0, lsl #24
 a40:	53000100 	movwpl	r0, #256	; 0x100
 a44:	0000056c 	andeq	r0, r0, ip, ror #10
 a48:	0000057f 	andeq	r0, r0, pc, ror r5
 a4c:	0c03000b 	stceq	0, cr0, [r3], {11}
 a50:	94200000 	strtls	r0, [r0], #-0
 a54:	1a7f0801 	bne	1fc2a60 <__Stack_Size+0x1fc2660>
 a58:	0005829f 	muleq	r5, pc, r2	; <UNPREDICTABLE>
 a5c:	00058e00 	andeq	r8, r5, r0, lsl #28
 a60:	53000100 	movwpl	r0, #256	; 0x100
 a64:	00000596 	muleq	r0, r6, r5
 a68:	000005a9 	andeq	r0, r0, r9, lsr #11
 a6c:	00530001 	subseq	r0, r3, r1
 a70:	00000000 	andeq	r0, r0, r0
 a74:	01000000 	mrseq	r0, (UNDEF: 0)
 a78:	00051800 	andeq	r1, r5, r0, lsl #16
 a7c:	00051c00 	andeq	r1, r5, r0, lsl #24
 a80:	32000200 	andcc	r0, r0, #0, 4
 a84:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
 a88:	00000000 	andeq	r0, r0, r0
 a8c:	18000100 	stmdane	r0, {r8}
 a90:	1c000005 	stcne	0, cr0, [r0], {5}
 a94:	06000005 	streq	r0, [r0], -r5
 a98:	09c00300 	stmibeq	r0, {r8, r9}^
 a9c:	009f0800 	addseq	r0, pc, r0, lsl #16
 aa0:	00000000 	andeq	r0, r0, r0
 aa4:	01000000 	mrseq	r0, (UNDEF: 0)
 aa8:	00051800 	andeq	r1, r5, r0, lsl #16
 aac:	00051c00 	andeq	r1, r5, r0, lsl #24
 ab0:	30000200 	andcc	r0, r0, r0, lsl #4
 ab4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
 ab8:	00000000 	andeq	r0, r0, r0
 abc:	50000100 	andpl	r0, r0, r0, lsl #2
 ac0:	5d000005 	stcpl	0, cr0, [r0, #-20]	; 0xffffffec
 ac4:	02000005 	andeq	r0, r0, #5
 ac8:	006a9100 	rsbeq	r9, sl, r0, lsl #2
 acc:	00000000 	andeq	r0, r0, r0
 ad0:	01000000 	mrseq	r0, (UNDEF: 0)
 ad4:	00055000 	andeq	r5, r5, r0
 ad8:	00055d00 	andeq	r5, r5, r0, lsl #26
 adc:	91000200 	mrsls	r0, R8_usr
 ae0:	0000006c 	andeq	r0, r0, ip, rrx
 ae4:	00000000 	andeq	r0, r0, r0
 ae8:	62000100 	andvs	r0, r0, #0, 2
 aec:	6a000005 	bvs	b08 <__Stack_Size+0x708>
 af0:	02000005 	andeq	r0, r0, #5
 af4:	009f3100 	addseq	r3, pc, r0, lsl #2
 af8:	00000000 	andeq	r0, r0, r0
 afc:	01000000 	mrseq	r0, (UNDEF: 0)
 b00:	00056200 	andeq	r6, r5, r0, lsl #4
 b04:	00056a00 	andeq	r6, r5, r0, lsl #20
 b08:	03000600 	movweq	r0, #1536	; 0x600
 b0c:	20000016 	andcs	r0, r0, r6, lsl r0
 b10:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
 b14:	00000000 	andeq	r0, r0, r0
 b18:	62000100 	andvs	r0, r0, #0, 2
 b1c:	6a000005 	bvs	b38 <__Stack_Size+0x738>
 b20:	02000005 	andeq	r0, r0, #5
 b24:	009f3000 	addseq	r3, pc, r0
 b28:	00000000 	andeq	r0, r0, r0
 b2c:	02000000 	andeq	r0, r0, #0
 b30:	0004f200 	andeq	pc, r4, r0, lsl #4
 b34:	0004fc00 	andeq	pc, r4, r0, lsl #24
 b38:	30000200 	andcc	r0, r0, r0, lsl #4
 b3c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
 b40:	00000000 	andeq	r0, r0, r0
 b44:	f2000200 	vhsub.s8	d0, d0, d0
 b48:	fc000004 	stc2	0, cr0, [r0], {4}
 b4c:	06000004 	streq	r0, [r0], -r4
 b50:	000c0300 	andeq	r0, ip, r0, lsl #6
 b54:	009f2000 	addseq	r2, pc, r0
 b58:	00000000 	andeq	r0, r0, r0
 b5c:	05000000 	streq	r0, [r0, #-0]
 b60:	00058e00 	andeq	r8, r5, r0, lsl #28
 b64:	00059600 	andeq	r9, r5, r0, lsl #12
 b68:	30000200 	andcc	r0, r0, r0, lsl #4
 b6c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
 b70:	00000000 	andeq	r0, r0, r0
 b74:	8e030100 	adfhis	f0, f3, f0
 b78:	8e000005 	cdphi	0, 0, cr0, cr0, cr5, {0}
 b7c:	02000005 	andeq	r0, r0, #5
 b80:	009f3000 	addseq	r3, pc, r0
 b84:	00000000 	andeq	r0, r0, r0
 b88:	01000000 	mrseq	r0, (UNDEF: 0)
 b8c:	00059e00 	andeq	r9, r5, r0, lsl #28
 b90:	0005a000 	andeq	sl, r5, r0
 b94:	30000200 	andcc	r0, r0, r0, lsl #4
 b98:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
 b9c:	00000000 	andeq	r0, r0, r0
 ba0:	00041c00 	andeq	r1, r4, r0, lsl #24
 ba4:	00041e00 	andeq	r1, r4, r0, lsl #28
 ba8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
 bac:	00041e00 	andeq	r1, r4, r0, lsl #28
 bb0:	00047800 	andeq	r7, r4, r0, lsl #16
 bb4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
 bb8:	00000018 	andeq	r0, r0, r8, lsl r0
	...
 bc4:	00041c00 	andeq	r1, r4, r0, lsl #24
 bc8:	00045400 	andeq	r5, r4, r0, lsl #8
 bcc:	50000100 	andpl	r0, r0, r0, lsl #2
 bd0:	00000454 	andeq	r0, r0, r4, asr r4
 bd4:	00000478 	andeq	r0, r0, r8, ror r4
 bd8:	01f30004 	mvnseq	r0, r4
 bdc:	00009f50 	andeq	r9, r0, r0, asr pc
	...
 be8:	04480000 	strbeq	r0, [r8], #-0
 bec:	04520000 	ldrbeq	r0, [r2], #-0
 bf0:	00010000 	andeq	r0, r1, r0
 bf4:	00045257 	andeq	r5, r4, r7, asr r2
 bf8:	00046c00 	andeq	r6, r4, r0, lsl #24
 bfc:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
 c08:	04520002 	ldrbeq	r0, [r2], #-2
 c0c:	045a0000 	ldrbeq	r0, [sl], #-0
 c10:	00010000 	andeq	r0, r1, r0
 c14:	00000056 	andeq	r0, r0, r6, asr r0
 c18:	00000000 	andeq	r0, r0, r0
 c1c:	52000200 	andpl	r0, r0, #0, 4
 c20:	5a000004 	bpl	c38 <__Stack_Size+0x838>
 c24:	01000004 	tsteq	r0, r4
 c28:	00005100 	andeq	r5, r0, r0, lsl #2
 c2c:	00000000 	andeq	r0, r0, r0
 c30:	00020000 	andeq	r0, r2, r0
 c34:	00000452 	andeq	r0, r0, r2, asr r4
 c38:	0000045a 	andeq	r0, r0, sl, asr r4
 c3c:	9f300002 	svcls	0x00300002
	...
 c4c:	0000001c 	andeq	r0, r0, ip, lsl r0
 c50:	0000002c 	andeq	r0, r0, ip, lsr #32
 c54:	2c530001 	mrrccs	0, 0, r0, r3, cr1
 c58:	2e000000 	cdpcs	0, 0, cr0, cr0, cr0, {0}
 c5c:	02000000 	andeq	r0, r0, #0
 c60:	00047100 	andeq	r7, r4, r0, lsl #2
 c64:	00000000 	andeq	r0, r0, r0
 c68:	02000000 	andeq	r0, r0, #0
 c6c:	00000000 	andeq	r0, r0, r0
 c70:	34000000 	strcc	r0, [r0], #-0
 c74:	36000000 	strcc	r0, [r0], -r0
 c78:	02000000 	andeq	r0, r0, #0
 c7c:	369f3000 	ldrcc	r3, [pc], r0
 c80:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
 c84:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
 c88:	86a00c00 	strthi	r0, [r0], r0, lsl #24
 c8c:	00720001 	rsbseq	r0, r2, r1
 c90:	00389f1c 	eorseq	r9, r8, ip, lsl pc
 c94:	003a0000 	eorseq	r0, sl, r0
 c98:	00090000 	andeq	r0, r9, r0
 c9c:	0186a10c 	orreq	sl, r6, ip, lsl #2
 ca0:	1c007200 	sfmne	f7, 4, [r0], {-0}
 ca4:	00003a9f 	muleq	r0, pc, sl	; <UNPREDICTABLE>
 ca8:	00005000 	andeq	r5, r0, r0
 cac:	0c000900 			; <UNDEFINED> instruction: 0x0c000900
 cb0:	000186a0 	andeq	r8, r1, r0, lsr #13
 cb4:	9f1c0072 	svcls	0x001c0072
	...
 cc0:	00540001 	subseq	r0, r4, r1
 cc4:	005c0000 	subseq	r0, ip, r0
 cc8:	00020000 	andeq	r0, r2, r0
 ccc:	00009f44 	andeq	r9, r0, r4, asr #30
	...
 cd8:	000a0000 	andeq	r0, sl, r0
 cdc:	000c0000 	andeq	r0, ip, r0
 ce0:	00010000 	andeq	r0, r1, r0
 ce4:	00000c50 	andeq	r0, r0, r0, asr ip
 ce8:	00000e00 	andeq	r0, r0, r0, lsl #28
 cec:	f3000400 	vshl.u8	d0, d0, d0
 cf0:	009f5001 	addseq	r5, pc, r1
	...
 cfc:	06000000 	streq	r0, [r0], -r0
 d00:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
 d04:	01000000 	mrseq	r0, (UNDEF: 0)
 d08:	00085000 	andeq	r5, r8, r0
 d0c:	000a0000 	andeq	r0, sl, r0
 d10:	00040000 	andeq	r0, r4, r0
 d14:	9f5001f3 	svcls	0x005001f3
	...
 d20:	000000e0 	andeq	r0, r0, r0, ror #1
 d24:	000000e2 	andeq	r0, r0, r2, ror #1
 d28:	007d0002 	rsbseq	r0, sp, r2
 d2c:	000000e2 	andeq	r0, r0, r2, ror #1
 d30:	00000120 	andeq	r0, r0, r0, lsr #2
 d34:	087d0002 	ldmdaeq	sp!, {r1}^
	...
 d48:	000000e0 	andeq	r0, r0, r0, ror #1
 d4c:	000000ec 	andeq	r0, r0, ip, ror #1
 d50:	ec500001 	mrrc	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
 d54:	14000000 	strne	r0, [r0], #-0
 d58:	04000001 	streq	r0, [r0], #-1
 d5c:	5001f300 	andpl	pc, r1, r0, lsl #6
 d60:	0001149f 	muleq	r1, pc, r4	; <UNPREDICTABLE>
 d64:	00011600 	andeq	r1, r1, r0, lsl #12
 d68:	50000100 	andpl	r0, r0, r0, lsl #2
 d6c:	00000116 	andeq	r0, r0, r6, lsl r1
 d70:	00000120 	andeq	r0, r0, r0, lsr #2
 d74:	01f30004 	mvnseq	r0, r4
 d78:	00009f50 	andeq	r9, r0, r0, asr pc
	...
 d88:	000000e0 	andeq	r0, r0, r0, ror #1
 d8c:	000000ee 	andeq	r0, r0, lr, ror #1
 d90:	ee510001 	cdp	0, 5, cr0, cr1, cr1, {0}
 d94:	14000000 	strne	r0, [r0], #-0
 d98:	04000001 	streq	r0, [r0], #-1
 d9c:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
 da0:	0001149f 	muleq	r1, pc, r4	; <UNPREDICTABLE>
 da4:	00012000 	andeq	r2, r1, r0
 da8:	51000100 	mrspl	r0, (UNDEF: 16)
	...
 db8:	00e00000 	rsceq	r0, r0, r0
 dbc:	00f10000 	rscseq	r0, r1, r0
 dc0:	00010000 	andeq	r0, r1, r0
 dc4:	0000f152 	andeq	pc, r0, r2, asr r1	; <UNPREDICTABLE>
 dc8:	00011400 	andeq	r1, r1, r0, lsl #8
 dcc:	f3000400 	vshl.u8	d0, d0, d0
 dd0:	149f5201 	ldrne	r5, [pc], #513	; dd8 <__Stack_Size+0x9d8>
 dd4:	20000001 	andcs	r0, r0, r1
 dd8:	01000001 	tsteq	r0, r1
 ddc:	00005200 	andeq	r5, r0, r0, lsl #4
 de0:	00000000 	andeq	r0, r0, r0
 de4:	00020000 	andeq	r0, r2, r0
 de8:	000000e8 	andeq	r0, r0, r8, ror #1
 dec:	000000f2 	strdeq	r0, [r0], -r2
 df0:	9f300002 	svcls	0x00300002
	...
 dfc:	00e80002 	rsceq	r0, r8, r2
 e00:	00f20000 	rscseq	r0, r2, r0
 e04:	00060000 	andeq	r0, r6, r0
 e08:	00005803 	andeq	r5, r0, r3, lsl #16
 e0c:	00009f20 	andeq	r9, r0, r0, lsr #30
 e10:	00000000 	andeq	r0, r0, r0
 e14:	007c0000 	rsbseq	r0, ip, r0
 e18:	007e0000 	rsbseq	r0, lr, r0
 e1c:	00020000 	andeq	r0, r2, r0
 e20:	007e007d 	rsbseq	r0, lr, sp, ror r0
 e24:	00e00000 	rsceq	r0, r0, r0
 e28:	00020000 	andeq	r0, r2, r0
 e2c:	00000c7d 	andeq	r0, r0, sp, ror ip
	...
 e3c:	007c0000 	rsbseq	r0, ip, r0
 e40:	00960000 	addseq	r0, r6, r0
 e44:	00010000 	andeq	r0, r1, r0
 e48:	00009650 	andeq	r9, r0, r0, asr r6
 e4c:	00009e00 	andeq	r9, r0, r0, lsl #28
 e50:	f3000400 	vshl.u8	d0, d0, d0
 e54:	9e9f5001 	cdpls	0, 9, cr5, cr15, cr1, {0}
 e58:	a4000000 	strge	r0, [r0], #-0
 e5c:	01000000 	mrseq	r0, (UNDEF: 0)
 e60:	00a45000 	adceq	r5, r4, r0
 e64:	00e00000 	rsceq	r0, r0, r0
 e68:	00040000 	andeq	r0, r4, r0
 e6c:	9f5001f3 	svcls	0x005001f3
	...
 e84:	00000028 	andeq	r0, r0, r8, lsr #32
 e88:	28500001 	ldmdacs	r0, {r0}^
 e8c:	2c000000 	stccs	0, cr0, [r0], {-0}
 e90:	04000000 	streq	r0, [r0], #-0
 e94:	5001f300 	andpl	pc, r1, r0, lsl #6
 e98:	00002c9f 	muleq	r0, pc, ip	; <UNPREDICTABLE>
 e9c:	00003e00 	andeq	r3, r0, r0, lsl #28
 ea0:	50000100 	andpl	r0, r0, r0, lsl #2
 ea4:	0000003e 	andeq	r0, r0, lr, lsr r0
 ea8:	0000007c 	andeq	r0, r0, ip, ror r0
 eac:	01f30004 	mvnseq	r0, r4
 eb0:	00009f50 	andeq	r9, r0, r0, asr pc
 eb4:	00000000 	andeq	r0, r0, r0
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	0800014c 	stmdaeq	r0, {r2, r3, r6, r8}
   4:	0800014e 	stmdaeq	r0, {r1, r2, r3, r6, r8}
   8:	08000150 	stmdaeq	r0, {r4, r6, r8}
   c:	08000172 	stmdaeq	r0, {r1, r4, r5, r6, r8}
  10:	08000172 	stmdaeq	r0, {r1, r4, r5, r6, r8}
  14:	080001cc 	stmdaeq	r0, {r2, r3, r6, r7, r8}
	...
  20:	0800094c 	stmdaeq	r0, {r2, r3, r6, r8, fp}
  24:	0800094e 	stmdaeq	r0, {r1, r2, r3, r6, r8, fp}
  28:	08000956 	stmdaeq	r0, {r1, r2, r4, r6, r8, fp}
  2c:	08000958 	stmdaeq	r0, {r3, r4, r6, r8, fp}
  30:	0800095c 	stmdaeq	r0, {r2, r3, r4, r6, r8, fp}
  34:	08000966 	stmdaeq	r0, {r1, r2, r5, r6, r8, fp}
	...
  40:	08000958 	stmdaeq	r0, {r3, r4, r6, r8, fp}
  44:	0800095c 	stmdaeq	r0, {r2, r3, r4, r6, r8, fp}
  48:	0800097e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r8, fp}
  4c:	0800098a 	stmdaeq	r0, {r1, r3, r7, r8, fp}
	...
  58:	08000120 	stmdaeq	r0, {r5, r8}
  5c:	080001dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8}
  60:	08000944 	stmdaeq	r0, {r2, r6, r8, fp}
  64:	080009c0 	stmdaeq	r0, {r6, r7, r8, fp}
	...
  70:	00000010 	andeq	r0, r0, r0, lsl r0
  74:	00000012 	andeq	r0, r0, r2, lsl r0
  78:	0000001a 	andeq	r0, r0, sl, lsl r0
  7c:	0000001c 	andeq	r0, r0, ip, lsl r0
  80:	0000001e 	andeq	r0, r0, lr, lsl r0
  84:	00000028 	andeq	r0, r0, r8, lsr #32
	...
  90:	00000034 	andeq	r0, r0, r4, lsr r0
  94:	00000034 	andeq	r0, r0, r4, lsr r0
  98:	00000036 	andeq	r0, r0, r6, lsr r0
  9c:	0000003c 	andeq	r0, r0, ip, lsr r0
	...
  a8:	000002c2 	andeq	r0, r0, r2, asr #5
  ac:	000002c4 	andeq	r0, r0, r4, asr #5
  b0:	000002c8 	andeq	r0, r0, r8, asr #5
  b4:	000002c8 	andeq	r0, r0, r8, asr #5
  b8:	000002cc 	andeq	r0, r0, ip, asr #5
  bc:	000002dc 	ldrdeq	r0, [r0], -ip
	...
  c8:	000003ca 	andeq	r0, r0, sl, asr #7
  cc:	000003cc 	andeq	r0, r0, ip, asr #7
  d0:	000003e6 	andeq	r0, r0, r6, ror #7
  d4:	000003ec 	andeq	r0, r0, ip, ror #7
  d8:	00000410 	andeq	r0, r0, r0, lsl r4
  dc:	0000041c 	andeq	r0, r0, ip, lsl r4
	...
  e8:	00000448 	andeq	r0, r0, r8, asr #8
  ec:	00000452 	andeq	r0, r0, r2, asr r4
  f0:	00000452 	andeq	r0, r0, r2, asr r4
  f4:	0000045a 	andeq	r0, r0, sl, asr r4
	...
 100:	0000049c 	muleq	r0, ip, r4
 104:	0000049c 	muleq	r0, ip, r4
 108:	000004a4 	andeq	r0, r0, r4, lsr #9
 10c:	000004b0 			; <UNDEFINED> instruction: 0x000004b0
	...
 118:	000004f2 	strdeq	r0, [r0], -r2
 11c:	000004f2 	strdeq	r0, [r0], -r2
 120:	000004f4 	strdeq	r0, [r0], -r4
 124:	000004fc 	strdeq	r0, [r0], -ip
	...
 130:	00000508 	andeq	r0, r0, r8, lsl #10
 134:	0000051c 	andeq	r0, r0, ip, lsl r5
 138:	0000052c 	andeq	r0, r0, ip, lsr #10
 13c:	0000055e 	andeq	r0, r0, lr, asr r5
 140:	00000562 	andeq	r0, r0, r2, ror #10
 144:	00000582 	andeq	r0, r0, r2, lsl #11
	...
 150:	00000546 	andeq	r0, r0, r6, asr #10
 154:	00000548 	andeq	r0, r0, r8, asr #10
 158:	00000550 	andeq	r0, r0, r0, asr r5
 15c:	0000055e 	andeq	r0, r0, lr, asr r5
	...
 168:	0000051c 	andeq	r0, r0, ip, lsl r5
 16c:	00000522 	andeq	r0, r0, r2, lsr #10
 170:	0000058e 	andeq	r0, r0, lr, lsl #11
 174:	00000596 	muleq	r0, r6, r5
	...
