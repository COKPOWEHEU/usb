
res/firmware.elf:     file format elf32-littlearm


Disassembly of section .isr_vector:

08000000 <g_pfnVectors>:
 8000000:	20005000 	andcs	r5, r0, r0
 8000004:	080009ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, fp}
 8000008:	080009f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp}
 800000c:	080009f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp}
 8000010:	080009f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp}
 8000014:	080009f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp}
 8000018:	080009f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp}
	...
 800002c:	080009f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp}
 8000030:	080009f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp}
 8000034:	00000000 	andeq	r0, r0, r0
 8000038:	080009f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp}
 800003c:	080009f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp}
 8000040:	080009f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp}
 8000044:	080009f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp}
 8000048:	080009f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp}
 800004c:	080009f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp}
 8000050:	080009f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp}
 8000054:	080009f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp}
 8000058:	080009f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp}
 800005c:	080009f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp}
 8000060:	080009f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp}
 8000064:	080009f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp}
 8000068:	080009f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp}
 800006c:	080009f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp}
 8000070:	080009f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp}
 8000074:	080009f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp}
 8000078:	080009f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp}
 800007c:	080009f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp}
 8000080:	080009f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp}
 8000084:	080009f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp}
 8000088:	080009f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp}
 800008c:	080009f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp}
 8000090:	0800047d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, sl}
 8000094:	080009f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp}
 8000098:	080009f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp}
 800009c:	080009f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp}
 80000a0:	080009f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp}
 80000a4:	080009f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp}
 80000a8:	080009f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp}
 80000ac:	080009f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp}
 80000b0:	080009f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp}
 80000b4:	080009f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp}
 80000b8:	080009f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp}
 80000bc:	080009f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp}
 80000c0:	080009f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp}
 80000c4:	080009f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp}
 80000c8:	080009f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp}
 80000cc:	080009f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp}
 80000d0:	080009f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp}
 80000d4:	080009f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp}
 80000d8:	080009f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp}
 80000dc:	080009f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp}
 80000e0:	080009f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp}
 80000e4:	080009f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp}
 80000e8:	080009f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp}
	...
 8000108:	f108f85f 			; <UNDEFINED> instruction: 0xf108f85f

Disassembly of section .text:

0800010c <SysClockMax-0x14>:
 800010c:	08000aa4 	stmdaeq	r0, {r2, r5, r7, r9, fp}
 8000110:	20000000 	andcs	r0, r0, r0
 8000114:	2000000c 	andcs	r0, r0, ip
 8000118:	2000000c 	andcs	r0, r0, ip
 800011c:	20000064 	andcs	r0, r0, r4, rrx

08000120 <SysClockMax>:
#define F_CPU 72000000
//F_HSE = 8 MHz
int8_t SysClockMax(){
  int i;
  uint32_t tmp;
  RCC->CR &=~RCC_CR_HSEON;
 8000120:	4b27      	ldr	r3, [pc, #156]	; (80001c0 <SysClockMax+0xa0>)
 8000122:	681a      	ldr	r2, [r3, #0]
 8000124:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8000128:	601a      	str	r2, [r3, #0]
  RCC->CR &=~RCC_CR_HSEBYP;
 800012a:	681a      	ldr	r2, [r3, #0]
 800012c:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8000130:	601a      	str	r2, [r3, #0]
  RCC->CR |= RCC_CR_HSEON;
 8000132:	681a      	ldr	r2, [r3, #0]
 8000134:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8000138:	601a      	str	r2, [r3, #0]
 800013a:	f640 72ff 	movw	r2, #4095	; 0xfff
  for(i=0;i<0x0FFF;i++){
    if(RCC->CR & RCC_CR_HSERDY){i=0x1FFF; break;}
 800013e:	6819      	ldr	r1, [r3, #0]
 8000140:	0388      	lsls	r0, r1, #14
 8000142:	d416      	bmi.n	8000172 <SysClockMax+0x52>
  for(i=0;i<0x0FFF;i++){
 8000144:	3a01      	subs	r2, #1
 8000146:	d1fa      	bne.n	800013e <SysClockMax+0x1e>
  }
  if(i != 0x1FFF)return SCME_HSE; //can not start HSE
 8000148:	2001      	movs	r0, #1
 800014a:	4770      	bx	lr
  RCC->CFGR = tmp;
  for(i=0;i<0x0FFF;i++){
    if((RCC->CFGR & RCC_CFGR_SWS)==RCC_CFGR_SWS_PLL){i=0x1FFF; break;}
  }
  if(i != 0x1FFF)return SCME_SW;
  return SCME_OK;
 800014c:	2000      	movs	r0, #0
}
 800014e:	4770      	bx	lr
  tmp = RCC->CFGR;
 8000150:	685a      	ldr	r2, [r3, #4]
  tmp &=~RCC_CFGR_SW;
 8000152:	f022 0203 	bic.w	r2, r2, #3
  tmp |= RCC_CFGR_SW_PLL;
 8000156:	f042 0202 	orr.w	r2, r2, #2
  RCC->CFGR = tmp;
 800015a:	605a      	str	r2, [r3, #4]
 800015c:	f640 72ff 	movw	r2, #4095	; 0xfff
    if((RCC->CFGR & RCC_CFGR_SWS)==RCC_CFGR_SWS_PLL){i=0x1FFF; break;}
 8000160:	6859      	ldr	r1, [r3, #4]
 8000162:	f001 010c 	and.w	r1, r1, #12
 8000166:	2908      	cmp	r1, #8
 8000168:	d0f0      	beq.n	800014c <SysClockMax+0x2c>
  for(i=0;i<0x0FFF;i++){
 800016a:	3a01      	subs	r2, #1
 800016c:	d1f8      	bne.n	8000160 <SysClockMax+0x40>
  if(i != 0x1FFF)return SCME_SW;
 800016e:	2003      	movs	r0, #3
 8000170:	4770      	bx	lr
  FLASH->ACR &=~FLASH_ACR_PRFTBE;
 8000172:	4a14      	ldr	r2, [pc, #80]	; (80001c4 <SysClockMax+0xa4>)
 8000174:	6811      	ldr	r1, [r2, #0]
 8000176:	f021 0110 	bic.w	r1, r1, #16
 800017a:	6011      	str	r1, [r2, #0]
  FLASH->ACR |= FLASH_ACR_PRFTBE;
 800017c:	6811      	ldr	r1, [r2, #0]
 800017e:	f041 0110 	orr.w	r1, r1, #16
 8000182:	6011      	str	r1, [r2, #0]
  FLASH->ACR &=~FLASH_ACR_LATENCY;
 8000184:	6811      	ldr	r1, [r2, #0]
 8000186:	f021 0107 	bic.w	r1, r1, #7
 800018a:	6011      	str	r1, [r2, #0]
  FLASH->ACR |= FLASH_ACR_LATENCY_2;
 800018c:	6811      	ldr	r1, [r2, #0]
 800018e:	f041 0104 	orr.w	r1, r1, #4
 8000192:	6011      	str	r1, [r2, #0]
  tmp = RCC->CFGR;
 8000194:	6859      	ldr	r1, [r3, #4]
  tmp &=~RCC_CFGR_PPRE1;
 8000196:	4a0c      	ldr	r2, [pc, #48]	; (80001c8 <SysClockMax+0xa8>)
 8000198:	400a      	ands	r2, r1
  tmp |= RCC_CFGR_PPRE1_DIV2;
 800019a:	f442 12e8 	orr.w	r2, r2, #1900544	; 0x1d0000
 800019e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
  RCC->CFGR = tmp;
 80001a2:	605a      	str	r2, [r3, #4]
  RCC->CR |= RCC_CR_PLLON;
 80001a4:	681a      	ldr	r2, [r3, #0]
 80001a6:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 80001aa:	601a      	str	r2, [r3, #0]
 80001ac:	f640 72ff 	movw	r2, #4095	; 0xfff
    if(RCC->CR & RCC_CR_PLLRDY){i=0x1FFF; break;}
 80001b0:	6819      	ldr	r1, [r3, #0]
 80001b2:	0189      	lsls	r1, r1, #6
 80001b4:	d4cc      	bmi.n	8000150 <SysClockMax+0x30>
  for(i=0;i<0x0FFF;i++){
 80001b6:	3a01      	subs	r2, #1
 80001b8:	d1fa      	bne.n	80001b0 <SysClockMax+0x90>
  if(i != 0x1FFF)return SCME_PLL; //can not enable PLL
 80001ba:	2002      	movs	r0, #2
 80001bc:	4770      	bx	lr
 80001be:	bf00      	nop
 80001c0:	40021000 	andmi	r1, r2, r0
 80001c4:	40022000 	andmi	r2, r2, r0
 80001c8:	ffc2c00f 			; <UNDEFINED> instruction: 0xffc2c00f

080001cc <_init>:
 80001cc:	4770      	bx	lr

080001ce <SystemInit>:
#include "hardware.h"
#include "usb_lib.h"
#include "clock.h"

void __attribute__((weak)) _init(void){}
void __attribute__((weak)) SystemInit(void){}
 80001ce:	4770      	bx	lr

080001d0 <sleep>:

void sleep(uint32_t time){
  while(time--)asm volatile("nop");
 80001d0:	f110 30ff 	adds.w	r0, r0, #4294967295	; 0xffffffff
 80001d4:	d200      	bcs.n	80001d8 <sleep+0x8>
}
 80001d6:	4770      	bx	lr
  while(time--)asm volatile("nop");
 80001d8:	bf00      	nop
 80001da:	e7f9      	b.n	80001d0 <sleep>

#define STM32ENDPOINTS          8
#define usb_epdata   ((volatile usb_epdata_t*)(USB_PMAADDR))
#define LASTADDR_DEFAULT                (STM32ENDPOINTS * 8)

__attribute__((weak))void usb_class_init(){}
 80001dc:	4770      	bx	lr

080001de <usb_class_disconnect>:
 80001de:	4770      	bx	lr
 80001e0:	4770      	bx	lr
__attribute__((weak))void usb_class_disconnect(){}
__attribute__((weak))void usb_class_poll(){}
__attribute__((weak))char usb_class_ep0_in(config_pack_t *req, void **data, uint16_t *size){return 0;}
 80001e2:	2000      	movs	r0, #0
 80001e4:	4770      	bx	lr
__attribute__((weak))char usb_class_ep0_out(config_pack_t *req, uint16_t offset, uint16_t rx_size){return 0;}
 80001e6:	2000      	movs	r0, #0
 80001e8:	4770      	bx	lr

080001ea <USB_setup>:
epfunc_t epfunc_out[STM32ENDPOINTS];

static config_pack_t setup_packet;

void USB_setup(){
  RCC->APB1ENR |= RCC_APB1ENR_USBEN;
 80001ea:	4a15      	ldr	r2, [pc, #84]	; (8000240 <USB_setup+0x56>)
  GPIO_config( USB_PULLUP );
 80001ec:	4915      	ldr	r1, [pc, #84]	; (8000244 <USB_setup+0x5a>)
  RCC->APB1ENR |= RCC_APB1ENR_USBEN;
 80001ee:	69d3      	ldr	r3, [r2, #28]
 80001f0:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80001f4:	61d3      	str	r3, [r2, #28]
  GPIO_config( USB_PULLUP );
 80001f6:	684b      	ldr	r3, [r1, #4]

  GPO_OFF( USB_PULLUP );
  USB->CNTR   = USB_CNTR_FRES; // Force USB Reset
 80001f8:	2201      	movs	r2, #1
  GPIO_config( USB_PULLUP );
 80001fa:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 80001fe:	f443 7340 	orr.w	r3, r3, #768	; 0x300
 8000202:	604b      	str	r3, [r1, #4]
  GPO_OFF( USB_PULLUP );
 8000204:	f04f 6380 	mov.w	r3, #67108864	; 0x4000000
 8000208:	610b      	str	r3, [r1, #16]
  USB->CNTR   = USB_CNTR_FRES; // Force USB Reset
 800020a:	4b0f      	ldr	r3, [pc, #60]	; (8000248 <USB_setup+0x5e>)
 800020c:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
 8000210:	4a0e      	ldr	r2, [pc, #56]	; (800024c <USB_setup+0x62>)
  for(uint32_t ctr = 0; ctr < 100000; ++ctr) asm volatile("nop"); // wait >1ms
 8000212:	bf00      	nop
 8000214:	3a01      	subs	r2, #1
 8000216:	d1fc      	bne.n	8000212 <USB_setup+0x28>
  USB->CNTR   = 0;
 8000218:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
  USB->BTABLE = 0;
 800021c:	f8a3 2050 	strh.w	r2, [r3, #80]	; 0x50
  USB->DADDR  = 0;
 8000220:	f8a3 204c 	strh.w	r2, [r3, #76]	; 0x4c
  USB->ISTR   = 0;
 8000224:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
  USB->CNTR   = USB_CNTR_RESETM | USB_CNTR_WKUPM;
 8000228:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
 800022c:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
 * Enable a device specific interupt in the NVIC interrupt controller.
 * The interrupt number cannot be a negative value.
 */
static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
 8000230:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
 8000234:	4b06      	ldr	r3, [pc, #24]	; (8000250 <USB_setup+0x66>)
 8000236:	601a      	str	r2, [r3, #0]
  NVIC_EnableIRQ(USB_LP_IRQn);
  GPO_ON( USB_PULLUP );
 8000238:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800023c:	610b      	str	r3, [r1, #16]
}
 800023e:	4770      	bx	lr
 8000240:	40021000 	andmi	r1, r2, r0
 8000244:	40010800 	andmi	r0, r1, r0, lsl #16
 8000248:	40005c00 	andmi	r5, r0, r0, lsl #24
 800024c:	000186a0 	andeq	r8, r1, r0, lsr #13
 8000250:	e000e100 	and	lr, r0, r0, lsl #2

08000254 <usb_ep_init>:
    if( bytesread >= setup_packet.wLength )usb_ep_write(0, NULL, 0);
  }
}

static uint16_t lastaddr = LASTADDR_DEFAULT;
void usb_ep_init(uint8_t epnum, uint8_t ep_type, uint16_t size, epfunc_t func){
 8000254:	b5f0      	push	{r4, r5, r6, r7, lr}
  uint8_t dir_in = (epnum & 0x80);
  epnum &= 0x0F;
 8000256:	f000 060f 	and.w	r6, r0, #15
  
  if(dir_in){
 800025a:	00b5      	lsls	r5, r6, #2
 800025c:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 8000260:	f505 45b8 	add.w	r5, r5, #23552	; 0x5c00
    ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 8000264:	882c      	ldrh	r4, [r5, #0]
 8000266:	b240      	sxtb	r0, r0
  if(dir_in){
 8000268:	2800      	cmp	r0, #0
    ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 800026a:	bfb5      	itete	lt
 800026c:	f024 04c0 	biclt.w	r4, r4, #192	; 0xc0
  }else{
    ENDP_STAT_RX(epnum, USB_EP_RX_DIS);
 8000270:	f024 04f0 	bicge.w	r4, r4, #240	; 0xf0
    ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 8000274:	0524      	lsllt	r4, r4, #20
    ENDP_STAT_RX(epnum, USB_EP_RX_DIS);
 8000276:	04a4      	lslge	r4, r4, #18
    ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 8000278:	bfb4      	ite	lt
 800027a:	0d24      	lsrlt	r4, r4, #20
    ENDP_STAT_RX(epnum, USB_EP_RX_DIS);
 800027c:	0ca4      	lsrge	r4, r4, #18
 800027e:	f444 4400 	orr.w	r4, r4, #32768	; 0x8000
 8000282:	f044 0480 	orr.w	r4, r4, #128	; 0x80
 8000286:	802c      	strh	r4, [r5, #0]
  }
  
  uint16_t buf = USB_EPx(epnum);
 8000288:	882c      	ldrh	r4, [r5, #0]
  buf = (buf & ~(USB_EP_DTOG_RX | USB_EP_DTOG_TX | USB_EPTX_STAT | USB_EPRX_STAT)) | USB_EP_CTR_RX | USB_EP_CTR_TX;
  buf = (buf & ~USB_EPADDR_FIELD) | epnum;
  //buf = (buf & ~USB_EP_T_FIELD) | ep_type;
  buf &=~ USB_EP_T_FIELD;
  switch(ep_type){
 800028a:	2902      	cmp	r1, #2
 800028c:	f404 6410 	and.w	r4, r4, #2304	; 0x900
 8000290:	ea44 0406 	orr.w	r4, r4, r6
 8000294:	d005      	beq.n	80002a2 <usb_ep_init+0x4e>
 8000296:	2903      	cmp	r1, #3
 8000298:	d023      	beq.n	80002e2 <usb_ep_init+0x8e>
 800029a:	bb29      	cbnz	r1, 80002e8 <usb_ep_init+0x94>
    case USB_ENDP_CTRL: buf |= USB_EP_CONTROL; break;
 800029c:	f444 4102 	orr.w	r1, r4, #33280	; 0x8200
 80002a0:	e001      	b.n	80002a6 <usb_ep_init+0x52>
  buf &=~ USB_EP_T_FIELD;
 80002a2:	f444 4100 	orr.w	r1, r4, #32768	; 0x8000
    case USB_ENDP_BULK: buf |= USB_EP_BULK; break;
    case USB_ENDP_INTR: buf |= USB_EP_INTERRUPT; break;
    default: buf |= USB_EP_ISOCHRONOUS; //в дескрипторах изохронные точки могут иметь расширенные настройки
 80002a6:	f041 0180 	orr.w	r1, r1, #128	; 0x80
  }
  USB_EPx(epnum) = buf;
 80002aa:	4f22      	ldr	r7, [pc, #136]	; (8000334 <usb_ep_init+0xe0>)
 80002ac:	8029      	strh	r1, [r5, #0]
  
  if( dir_in ){
 80002ae:	0131      	lsls	r1, r6, #4
 80002b0:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 80002b4:	2800      	cmp	r0, #0
 80002b6:	883c      	ldrh	r4, [r7, #0]
 80002b8:	f501 41c0 	add.w	r1, r1, #24576	; 0x6000
 80002bc:	4638      	mov	r0, r7
 80002be:	da16      	bge.n	80002ee <usb_ep_init+0x9a>
    usb_epdata[epnum].usb_tx_addr = lastaddr;
 80002c0:	600c      	str	r4, [r1, #0]
    epfunc_in[epnum] = func;
 80002c2:	491d      	ldr	r1, [pc, #116]	; (8000338 <usb_ep_init+0xe4>)
 80002c4:	f841 3026 	str.w	r3, [r1, r6, lsl #2]
    ENDP_STAT_TX(epnum, USB_EP_TX_NAK);
 80002c8:	882b      	ldrh	r3, [r5, #0]
 80002ca:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 80002ce:	051b      	lsls	r3, r3, #20
 80002d0:	0d1b      	lsrs	r3, r3, #20
 80002d2:	f483 4300 	eor.w	r3, r3, #32768	; 0x8000
 80002d6:	f083 03a0 	eor.w	r3, r3, #160	; 0xa0
      usb_epdata[epnum].rx_num_blocks = size / 32 - 1;
    }
    epfunc_out[epnum] = func;
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
  }
  lastaddr += size;
 80002da:	4422      	add	r2, r4
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
 80002dc:	802b      	strh	r3, [r5, #0]
  lastaddr += size;
 80002de:	8002      	strh	r2, [r0, #0]
}
 80002e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    case USB_ENDP_INTR: buf |= USB_EP_INTERRUPT; break;
 80002e2:	f444 4106 	orr.w	r1, r4, #34304	; 0x8600
 80002e6:	e7de      	b.n	80002a6 <usb_ep_init+0x52>
    default: buf |= USB_EP_ISOCHRONOUS; //в дескрипторах изохронные точки могут иметь расширенные настройки
 80002e8:	f444 4104 	orr.w	r1, r4, #33792	; 0x8400
 80002ec:	e7db      	b.n	80002a6 <usb_ep_init+0x52>
    usb_epdata[epnum].usb_rx_addr = lastaddr;
 80002ee:	608c      	str	r4, [r1, #8]
      usb_epdata[epnum].rx_blocksize = 0;
 80002f0:	898f      	ldrh	r7, [r1, #12]
    if(size < 64){
 80002f2:	2a3f      	cmp	r2, #63	; 0x3f
      usb_epdata[epnum].rx_blocksize = 1;
 80002f4:	bf8b      	itete	hi
 80002f6:	f447 4700 	orrhi.w	r7, r7, #32768	; 0x8000
      usb_epdata[epnum].rx_blocksize = 0;
 80002fa:	f36f 37cf 	bfcls	r7, #15, #1
      usb_epdata[epnum].rx_blocksize = 1;
 80002fe:	818f      	strhhi	r7, [r1, #12]
      usb_epdata[epnum].rx_blocksize = 0;
 8000300:	818f      	strhls	r7, [r1, #12]
      usb_epdata[epnum].rx_num_blocks = size / 32 - 1;
 8000302:	f8b1 c00c 	ldrh.w	ip, [r1, #12]
 8000306:	bf8a      	itet	hi
 8000308:	0957      	lsrhi	r7, r2, #5
      usb_epdata[epnum].rx_num_blocks = size / 2;
 800030a:	f3c2 0744 	ubfxls	r7, r2, #1, #5
      usb_epdata[epnum].rx_num_blocks = size / 32 - 1;
 800030e:	f107 37ff 	addhi.w	r7, r7, #4294967295	; 0xffffffff
 8000312:	f367 2c8e 	bfi	ip, r7, #10, #5
 8000316:	f8a1 c00c 	strh.w	ip, [r1, #12]
    epfunc_out[epnum] = func;
 800031a:	4908      	ldr	r1, [pc, #32]	; (800033c <usb_ep_init+0xe8>)
 800031c:	f841 3026 	str.w	r3, [r1, r6, lsl #2]
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
 8000320:	882b      	ldrh	r3, [r5, #0]
 8000322:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8000326:	049b      	lsls	r3, r3, #18
 8000328:	0c9b      	lsrs	r3, r3, #18
 800032a:	f483 4330 	eor.w	r3, r3, #45056	; 0xb000
 800032e:	f083 0380 	eor.w	r3, r3, #128	; 0x80
 8000332:	e7d2      	b.n	80002da <usb_ep_init+0x86>
 8000334:	20000000 	andcs	r0, r0, r0
 8000338:	20000024 	andcs	r0, r0, r4, lsr #32
 800033c:	20000044 	andcs	r0, r0, r4, asr #32

08000340 <usb_ep_init_double>:

void usb_ep_init_double(uint8_t epnum, uint8_t ep_type, uint16_t size, epfunc_t func){
 8000340:	b5f0      	push	{r4, r5, r6, r7, lr}
  uint8_t dir_in = (epnum & 0x80);
  epnum &= 0x0F;
  
  ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 8000342:	f248 0780 	movw	r7, #32896	; 0x8080
  epnum &= 0x0F;
 8000346:	f000 060f 	and.w	r6, r0, #15
  ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 800034a:	00b5      	lsls	r5, r6, #2
 800034c:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 8000350:	f505 45b8 	add.w	r5, r5, #23552	; 0x5c00
 8000354:	882c      	ldrh	r4, [r5, #0]
  uint16_t buf = USB_EPx(epnum);
  buf = (buf & ~(USB_EP_DTOG_RX | USB_EP_DTOG_TX | USB_EPTX_STAT | USB_EPRX_STAT)) | USB_EP_CTR_RX | USB_EP_CTR_TX;
  buf = (buf & ~USB_EPADDR_FIELD) | epnum;
  
  buf &=~ USB_EP_T_FIELD;
  switch(ep_type){
 8000356:	2902      	cmp	r1, #2
  ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 8000358:	f024 04c0 	bic.w	r4, r4, #192	; 0xc0
 800035c:	ea4f 5404 	mov.w	r4, r4, lsl #20
 8000360:	ea4f 5414 	mov.w	r4, r4, lsr #20
 8000364:	ea44 0407 	orr.w	r4, r4, r7
 8000368:	802c      	strh	r4, [r5, #0]
  ENDP_STAT_RX(epnum, USB_EP_RX_DIS);
 800036a:	882c      	ldrh	r4, [r5, #0]
 800036c:	f024 04f0 	bic.w	r4, r4, #240	; 0xf0
 8000370:	ea4f 4484 	mov.w	r4, r4, lsl #18
 8000374:	ea4f 4494 	mov.w	r4, r4, lsr #18
 8000378:	ea47 0704 	orr.w	r7, r7, r4
 800037c:	802f      	strh	r7, [r5, #0]
  uint16_t buf = USB_EPx(epnum);
 800037e:	882c      	ldrh	r4, [r5, #0]
  buf &=~ USB_EP_T_FIELD;
 8000380:	f404 6410 	and.w	r4, r4, #2304	; 0x900
 8000384:	ea44 0406 	orr.w	r4, r4, r6
  switch(ep_type){
 8000388:	d02f      	beq.n	80003ea <usb_ep_init_double+0xaa>
 800038a:	2903      	cmp	r1, #3
 800038c:	d030      	beq.n	80003f0 <usb_ep_init_double+0xb0>
 800038e:	bb91      	cbnz	r1, 80003f6 <usb_ep_init_double+0xb6>
    case USB_ENDP_CTRL: buf |= USB_EP_CONTROL; break;
 8000390:	f444 4102 	orr.w	r1, r4, #33280	; 0x8200
 8000394:	f8df c0e0 	ldr.w	ip, [pc, #224]	; 8000478 <usb_ep_init_double+0x138>
    case USB_ENDP_BULK: buf |= USB_EP_BULK | USB_EP_KIND; break;
    case USB_ENDP_INTR: buf |= USB_EP_INTERRUPT; break;
    default: buf |= USB_EP_ISOCHRONOUS; //в дескрипторах изохронные точки могут иметь расширенные настройки
 8000398:	f041 0180 	orr.w	r1, r1, #128	; 0x80
  }
  USB_EPx(epnum) = buf;
 800039c:	8029      	strh	r1, [r5, #0]
  
#define USB_EP_SWBUF_TX     USB_EP_DTOG_RX
#define USB_EP_SWBUF_RX     USB_EP_DTOG_TX
  if( dir_in ){
 800039e:	f8bc 4000 	ldrh.w	r4, [ip]
 80003a2:	0131      	lsls	r1, r6, #4
 80003a4:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 80003a8:	f010 0f80 	tst.w	r0, #128	; 0x80
 80003ac:	f501 41c0 	add.w	r1, r1, #24576	; 0x6000
 80003b0:	eb02 0704 	add.w	r7, r2, r4
 80003b4:	4660      	mov	r0, ip
 80003b6:	d021      	beq.n	80003fc <usb_ep_init_double+0xbc>
    usb_epdata[epnum].usb_tx_addr = lastaddr;
    usb_epdata[epnum].usb_tx_count = 0;
 80003b8:	f04f 0c00 	mov.w	ip, #0
    usb_epdata[epnum].usb_tx_addr = lastaddr;
 80003bc:	600c      	str	r4, [r1, #0]
    usb_epdata[epnum].usb_tx_count = 0;
 80003be:	f8c1 c004 	str.w	ip, [r1, #4]
    usb_epdata[epnum].usb_rx_addr = lastaddr + size;
 80003c2:	608f      	str	r7, [r1, #8]
    usb_epdata[epnum].usb_rx_count = 0;
 80003c4:	f8c1 c00c 	str.w	ip, [r1, #12]
    
    buf = USB_EPx(epnum);
 80003c8:	8829      	ldrh	r1, [r5, #0]
    USB_EPx(epnum) = (buf ^ USB_EP_TX_VALID) & (USB_EPREG_MASK | USB_EPTX_STAT | USB_EP_DTOG_TX | USB_EP_SWBUF_TX);
 80003ca:	f081 0130 	eor.w	r1, r1, #48	; 0x30
 80003ce:	f421 5140 	bic.w	r1, r1, #12288	; 0x3000
 80003d2:	b289      	uxth	r1, r1
      usb_epdata[epnum].rx_blocksize = usb_epdata[epnum].tx_blocksize = 1;
      if(size < 32)size = 32;
      usb_epdata[epnum].rx_num_blocks = usb_epdata[epnum].tx_num_blocks = size / 32 - 1;
    }
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
    ENDP_STAT_TX(epnum, USB_EP_TX_VALID);
 80003d4:	8029      	strh	r1, [r5, #0]
  }
  epfunc_in[epnum] = func;
 80003d6:	4926      	ldr	r1, [pc, #152]	; (8000470 <usb_ep_init_double+0x130>)
  epfunc_out[epnum]= func;
    
  lastaddr += 2*size;
 80003d8:	eb04 0242 	add.w	r2, r4, r2, lsl #1
  epfunc_in[epnum] = func;
 80003dc:	f841 3026 	str.w	r3, [r1, r6, lsl #2]
  epfunc_out[epnum]= func;
 80003e0:	4924      	ldr	r1, [pc, #144]	; (8000474 <usb_ep_init_double+0x134>)
  lastaddr += 2*size;
 80003e2:	8002      	strh	r2, [r0, #0]
  epfunc_out[epnum]= func;
 80003e4:	f841 3026 	str.w	r3, [r1, r6, lsl #2]
}
 80003e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    case USB_ENDP_BULK: buf |= USB_EP_BULK | USB_EP_KIND; break;
 80003ea:	f444 4101 	orr.w	r1, r4, #33024	; 0x8100
 80003ee:	e7d1      	b.n	8000394 <usb_ep_init_double+0x54>
    case USB_ENDP_INTR: buf |= USB_EP_INTERRUPT; break;
 80003f0:	f444 4106 	orr.w	r1, r4, #34304	; 0x8600
 80003f4:	e7ce      	b.n	8000394 <usb_ep_init_double+0x54>
    default: buf |= USB_EP_ISOCHRONOUS; //в дескрипторах изохронные точки могут иметь расширенные настройки
 80003f6:	f444 4104 	orr.w	r1, r4, #33792	; 0x8400
 80003fa:	e7cb      	b.n	8000394 <usb_ep_init_double+0x54>
    usb_epdata[epnum].usb_rx_addr = lastaddr;
 80003fc:	608c      	str	r4, [r1, #8]
    if(size < 64){
 80003fe:	2a3f      	cmp	r2, #63	; 0x3f
    usb_epdata[epnum].usb_tx_addr = lastaddr + size;
 8000400:	600f      	str	r7, [r1, #0]
      usb_epdata[epnum].rx_blocksize = usb_epdata[epnum].tx_blocksize = 0;
 8000402:	888f      	ldrh	r7, [r1, #4]
    if(size < 64){
 8000404:	d828      	bhi.n	8000458 <usb_ep_init_double+0x118>
      usb_epdata[epnum].rx_blocksize = usb_epdata[epnum].tx_blocksize = 0;
 8000406:	f36f 37cf 	bfc	r7, #15, #1
 800040a:	808f      	strh	r7, [r1, #4]
 800040c:	898f      	ldrh	r7, [r1, #12]
 800040e:	f36f 37cf 	bfc	r7, #15, #1
 8000412:	818f      	strh	r7, [r1, #12]
      usb_epdata[epnum].rx_num_blocks = usb_epdata[epnum].tx_num_blocks = size / 2;
 8000414:	f3c2 0744 	ubfx	r7, r2, #1, #5
      usb_epdata[epnum].rx_num_blocks = usb_epdata[epnum].tx_num_blocks = size / 32 - 1;
 8000418:	f8b1 c004 	ldrh.w	ip, [r1, #4]
 800041c:	f367 2c8e 	bfi	ip, r7, #10, #5
 8000420:	f8a1 c004 	strh.w	ip, [r1, #4]
 8000424:	f8b1 c00c 	ldrh.w	ip, [r1, #12]
 8000428:	f367 2c8e 	bfi	ip, r7, #10, #5
 800042c:	f8a1 c00c 	strh.w	ip, [r1, #12]
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
 8000430:	8829      	ldrh	r1, [r5, #0]
 8000432:	f021 01f0 	bic.w	r1, r1, #240	; 0xf0
 8000436:	0489      	lsls	r1, r1, #18
 8000438:	0c89      	lsrs	r1, r1, #18
 800043a:	f481 4130 	eor.w	r1, r1, #45056	; 0xb000
 800043e:	f081 0180 	eor.w	r1, r1, #128	; 0x80
 8000442:	8029      	strh	r1, [r5, #0]
    ENDP_STAT_TX(epnum, USB_EP_TX_VALID);
 8000444:	8829      	ldrh	r1, [r5, #0]
 8000446:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 800044a:	0509      	lsls	r1, r1, #20
 800044c:	0d09      	lsrs	r1, r1, #20
 800044e:	f481 4100 	eor.w	r1, r1, #32768	; 0x8000
 8000452:	f081 01b0 	eor.w	r1, r1, #176	; 0xb0
 8000456:	e7bd      	b.n	80003d4 <usb_ep_init_double+0x94>
      usb_epdata[epnum].rx_blocksize = usb_epdata[epnum].tx_blocksize = 1;
 8000458:	f447 4700 	orr.w	r7, r7, #32768	; 0x8000
 800045c:	808f      	strh	r7, [r1, #4]
 800045e:	898f      	ldrh	r7, [r1, #12]
 8000460:	f447 4700 	orr.w	r7, r7, #32768	; 0x8000
 8000464:	818f      	strh	r7, [r1, #12]
      usb_epdata[epnum].rx_num_blocks = usb_epdata[epnum].tx_num_blocks = size / 32 - 1;
 8000466:	0957      	lsrs	r7, r2, #5
 8000468:	3f01      	subs	r7, #1
 800046a:	f007 071f 	and.w	r7, r7, #31
 800046e:	e7d3      	b.n	8000418 <usb_ep_init_double+0xd8>
 8000470:	20000024 	andcs	r0, r0, r4, lsr #32
 8000474:	20000044 	andcs	r0, r0, r4, asr #32
 8000478:	20000000 	andcs	r0, r0, r0

0800047c <USB_LP_CAN1_RX0_IRQHandler>:

// standard IRQ handler
void USB_LP_IRQHandler(){
 800047c:	b538      	push	{r3, r4, r5, lr}
  if(USB->ISTR & USB_ISTR_RESET){
 800047e:	4c42      	ldr	r4, [pc, #264]	; (8000588 <USB_LP_CAN1_RX0_IRQHandler+0x10c>)
 8000480:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 8000484:	055d      	lsls	r5, r3, #21
 8000486:	d52c      	bpl.n	80004e2 <USB_LP_CAN1_RX0_IRQHandler+0x66>
    usb_class_disconnect();
 8000488:	f7ff fea9 	bl	80001de <usb_class_disconnect>
    USB->CNTR = USB_CNTR_RESETM | USB_CNTR_CTRM | USB_CNTR_SUSPM | USB_CNTR_WKUPM;
 800048c:	f44f 431c 	mov.w	r3, #39936	; 0x9c00
    lastaddr = LASTADDR_DEFAULT;
 8000490:	2240      	movs	r2, #64	; 0x40
    USB->CNTR = USB_CNTR_RESETM | USB_CNTR_CTRM | USB_CNTR_SUSPM | USB_CNTR_WKUPM;
 8000492:	f8a4 3040 	strh.w	r3, [r4, #64]	; 0x40
    lastaddr = LASTADDR_DEFAULT;
 8000496:	4b3d      	ldr	r3, [pc, #244]	; (800058c <USB_LP_CAN1_RX0_IRQHandler+0x110>)
 8000498:	493d      	ldr	r1, [pc, #244]	; (8000590 <USB_LP_CAN1_RX0_IRQHandler+0x114>)
 800049a:	801a      	strh	r2, [r3, #0]
    USB->DADDR = USB_DADDR_EF;
 800049c:	2380      	movs	r3, #128	; 0x80
    for(uint8_t i=0; i<STM32ENDPOINTS; i++){
      epfunc_in[i] = epfunc_out[i] = NULL;
 800049e:	2200      	movs	r2, #0
    USB->DADDR = USB_DADDR_EF;
 80004a0:	f8a4 304c 	strh.w	r3, [r4, #76]	; 0x4c
 80004a4:	2408      	movs	r4, #8
 80004a6:	4b3b      	ldr	r3, [pc, #236]	; (8000594 <USB_LP_CAN1_RX0_IRQHandler+0x118>)
      epfunc_in[i] = epfunc_out[i] = NULL;
 80004a8:	3c01      	subs	r4, #1
    for(uint8_t i=0; i<STM32ENDPOINTS; i++){
 80004aa:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
      epfunc_in[i] = epfunc_out[i] = NULL;
 80004ae:	f841 2b04 	str.w	r2, [r1], #4
 80004b2:	f843 2b04 	str.w	r2, [r3], #4
    for(uint8_t i=0; i<STM32ENDPOINTS; i++){
 80004b6:	d1f7      	bne.n	80004a8 <USB_LP_CAN1_RX0_IRQHandler+0x2c>
    }
    // state is default - wait for enumeration
    USB->ISTR = (uint16_t)~USB_ISTR_RESET;
 80004b8:	f64f 32ff 	movw	r2, #64511	; 0xfbff
 80004bc:	4b32      	ldr	r3, [pc, #200]	; (8000588 <USB_LP_CAN1_RX0_IRQHandler+0x10c>)
    usb_ep_init(0x00, USB_ENDP_CTRL, USB_EP0_BUFSZ, ep0_out);
 80004be:	4621      	mov	r1, r4
    USB->ISTR = (uint16_t)~USB_ISTR_RESET;
 80004c0:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
    usb_ep_init(0x00, USB_ENDP_CTRL, USB_EP0_BUFSZ, ep0_out);
 80004c4:	4620      	mov	r0, r4
 80004c6:	4b34      	ldr	r3, [pc, #208]	; (8000598 <USB_LP_CAN1_RX0_IRQHandler+0x11c>)
 80004c8:	2208      	movs	r2, #8
 80004ca:	f7ff fec3 	bl	8000254 <usb_ep_init>
    usb_ep_init(0x80, USB_ENDP_CTRL, USB_EP0_BUFSZ, ep0_in);
 80004ce:	4b33      	ldr	r3, [pc, #204]	; (800059c <USB_LP_CAN1_RX0_IRQHandler+0x120>)
 80004d0:	2208      	movs	r2, #8
 80004d2:	4621      	mov	r1, r4
 80004d4:	2080      	movs	r0, #128	; 0x80
 80004d6:	f7ff febd 	bl	8000254 <usb_ep_init>
    ep0_buf = NULL;
 80004da:	4b31      	ldr	r3, [pc, #196]	; (80005a0 <USB_LP_CAN1_RX0_IRQHandler+0x124>)
 80004dc:	601c      	str	r4, [r3, #0]
    usb_class_init();
 80004de:	f000 fa3d 	bl	800095c <usb_class_init>
  }
  
  if(USB->ISTR & USB_ISTR_CTR){
 80004e2:	4b29      	ldr	r3, [pc, #164]	; (8000588 <USB_LP_CAN1_RX0_IRQHandler+0x10c>)
 80004e4:	f8b3 2044 	ldrh.w	r2, [r3, #68]	; 0x44
 80004e8:	0414      	lsls	r4, r2, #16
 80004ea:	d529      	bpl.n	8000540 <USB_LP_CAN1_RX0_IRQHandler+0xc4>
    uint8_t epnum = USB->ISTR & USB_ISTR_EP_ID;
 80004ec:	f8b3 5044 	ldrh.w	r5, [r3, #68]	; 0x44
 80004f0:	f005 050f 	and.w	r5, r5, #15
    if(USB_EPx(epnum) & USB_EP_CTR_RX){ //OUT
 80004f4:	00ac      	lsls	r4, r5, #2
 80004f6:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
 80004fa:	f504 44b8 	add.w	r4, r4, #23552	; 0x5c00
 80004fe:	8823      	ldrh	r3, [r4, #0]
 8000500:	0418      	lsls	r0, r3, #16
 8000502:	d50c      	bpl.n	800051e <USB_LP_CAN1_RX0_IRQHandler+0xa2>
      epfunc_out[epnum](epnum);
 8000504:	4b22      	ldr	r3, [pc, #136]	; (8000590 <USB_LP_CAN1_RX0_IRQHandler+0x114>)
 8000506:	4628      	mov	r0, r5
 8000508:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 800050c:	4798      	blx	r3
      ENDP_CTR_RX_CLR(epnum);
 800050e:	8823      	ldrh	r3, [r4, #0]
 8000510:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8000514:	051b      	lsls	r3, r3, #20
 8000516:	0d1b      	lsrs	r3, r3, #20
 8000518:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800051c:	8023      	strh	r3, [r4, #0]
    }
    if(USB_EPx(epnum) & USB_EP_CTR_TX){//IN
 800051e:	8823      	ldrh	r3, [r4, #0]
 8000520:	0619      	lsls	r1, r3, #24
 8000522:	d50d      	bpl.n	8000540 <USB_LP_CAN1_RX0_IRQHandler+0xc4>
      epfunc_in[epnum](epnum | 0x80);
 8000524:	4b1b      	ldr	r3, [pc, #108]	; (8000594 <USB_LP_CAN1_RX0_IRQHandler+0x118>)
 8000526:	f045 0080 	orr.w	r0, r5, #128	; 0x80
 800052a:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 800052e:	4798      	blx	r3
      ENDP_CTR_TX_CLR(epnum);
 8000530:	8823      	ldrh	r3, [r4, #0]
 8000532:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8000536:	051b      	lsls	r3, r3, #20
 8000538:	0d1b      	lsrs	r3, r3, #20
 800053a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800053e:	8023      	strh	r3, [r4, #0]
    }
  }
  
  if(USB->ISTR & USB_ISTR_SUSP){ // suspend -> still no connection, may sleep
 8000540:	4c11      	ldr	r4, [pc, #68]	; (8000588 <USB_LP_CAN1_RX0_IRQHandler+0x10c>)
 8000542:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 8000546:	051a      	lsls	r2, r3, #20
 8000548:	d50b      	bpl.n	8000562 <USB_LP_CAN1_RX0_IRQHandler+0xe6>
    usb_class_disconnect();
 800054a:	f7ff fe48 	bl	80001de <usb_class_disconnect>
    USB->CNTR |= USB_CNTR_FSUSP | USB_CNTR_LP_MODE;
 800054e:	f8b4 3040 	ldrh.w	r3, [r4, #64]	; 0x40
 8000552:	f043 030c 	orr.w	r3, r3, #12
 8000556:	f8a4 3040 	strh.w	r3, [r4, #64]	; 0x40
    USB->ISTR = (uint16_t)~USB_ISTR_SUSP;
 800055a:	f24f 73ff 	movw	r3, #63487	; 0xf7ff
 800055e:	f8a4 3044 	strh.w	r3, [r4, #68]	; 0x44
  }
  
  if(USB->ISTR & USB_ISTR_WKUP){ // wakeup
 8000562:	4a09      	ldr	r2, [pc, #36]	; (8000588 <USB_LP_CAN1_RX0_IRQHandler+0x10c>)
 8000564:	f8b2 3044 	ldrh.w	r3, [r2, #68]	; 0x44
 8000568:	04db      	lsls	r3, r3, #19
 800056a:	d50b      	bpl.n	8000584 <USB_LP_CAN1_RX0_IRQHandler+0x108>
    USB->CNTR &= ~(USB_CNTR_FSUSP | USB_CNTR_LP_MODE); // clear suspend flags
 800056c:	f8b2 3040 	ldrh.w	r3, [r2, #64]	; 0x40
 8000570:	f023 030c 	bic.w	r3, r3, #12
 8000574:	041b      	lsls	r3, r3, #16
 8000576:	0c1b      	lsrs	r3, r3, #16
 8000578:	f8a2 3040 	strh.w	r3, [r2, #64]	; 0x40
    USB->ISTR = (uint16_t)~USB_ISTR_WKUP;
 800057c:	f64e 73ff 	movw	r3, #61439	; 0xefff
 8000580:	f8a2 3044 	strh.w	r3, [r2, #68]	; 0x44
  }
}
 8000584:	bd38      	pop	{r3, r4, r5, pc}
 8000586:	bf00      	nop
 8000588:	40005c00 	andmi	r5, r0, r0, lsl #24
 800058c:	20000000 	andcs	r0, r0, r0
 8000590:	20000044 	andcs	r0, r0, r4, asr #32
 8000594:	20000024 	andcs	r0, r0, r4, lsr #32
 8000598:	080006af 	stmdaeq	r0, {r0, r1, r2, r3, r5, r7, r9, sl}
 800059c:	080005f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl}
 80005a0:	2000000c 	andcs	r0, r0, ip

080005a4 <_usb_ep_write>:
      uint32_t rx_blocksize:1;
    };
  };
}pma_descr_t;

void _usb_ep_write(uint8_t idx, const uint8_t *buf, uint16_t size){
 80005a4:	b5f0      	push	{r4, r5, r6, r7, lr}
  pma_descr_t *descr = &((pma_descr_t*)usb_epdata)[idx];
  uint16_t N2 = (size + 1) >> 1;
  // the buffer is 16-bit, so we should copy data as it would be uint16_t
  uint16_t *buf16 = (uint16_t *)buf;
  uint32_t *out = (uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
  for(uint16_t i = 0; i < N2; ++i, ++out){
 80005a6:	2500      	movs	r5, #0
  pma_descr_t *descr = &((pma_descr_t*)usb_epdata)[idx];
 80005a8:	00c4      	lsls	r4, r0, #3
 80005aa:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
 80005ae:	f504 44c0 	add.w	r4, r4, #24576	; 0x6000
  uint32_t *out = (uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
 80005b2:	6823      	ldr	r3, [r4, #0]
  uint16_t N2 = (size + 1) >> 1;
 80005b4:	1c56      	adds	r6, r2, #1
  uint32_t *out = (uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
 80005b6:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
 80005ba:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
  uint16_t N2 = (size + 1) >> 1;
 80005be:	0876      	lsrs	r6, r6, #1
  uint32_t *out = (uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
 80005c0:	005b      	lsls	r3, r3, #1
  for(uint16_t i = 0; i < N2; ++i, ++out){
 80005c2:	b2af      	uxth	r7, r5
 80005c4:	42be      	cmp	r6, r7
 80005c6:	d811      	bhi.n	80005ec <_usb_ep_write+0x48>
    *out = buf16[i];
  }
  descr->count = size;
  
  ENDP_STAT_TX((idx/2), USB_EP_TX_VALID);
 80005c8:	0840      	lsrs	r0, r0, #1
 80005ca:	0080      	lsls	r0, r0, #2
 80005cc:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
  descr->count = size;
 80005d0:	6062      	str	r2, [r4, #4]
  ENDP_STAT_TX((idx/2), USB_EP_TX_VALID);
 80005d2:	f500 40b8 	add.w	r0, r0, #23552	; 0x5c00
 80005d6:	8803      	ldrh	r3, [r0, #0]
 80005d8:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 80005dc:	051b      	lsls	r3, r3, #20
 80005de:	0d1b      	lsrs	r3, r3, #20
 80005e0:	f483 4300 	eor.w	r3, r3, #32768	; 0x8000
 80005e4:	f083 03b0 	eor.w	r3, r3, #176	; 0xb0
 80005e8:	8003      	strh	r3, [r0, #0]
}
 80005ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
    *out = buf16[i];
 80005ec:	f831 7015 	ldrh.w	r7, [r1, r5, lsl #1]
 80005f0:	f843 7025 	str.w	r7, [r3, r5, lsl #2]
 80005f4:	3501      	adds	r5, #1
 80005f6:	e7e4      	b.n	80005c2 <_usb_ep_write+0x1e>

080005f8 <ep0_in>:
static void ep0_in(uint8_t epnum){
 80005f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if( (USB->DADDR & USB_DADDR_ADD) != USB_Addr ){
 80005fa:	4b14      	ldr	r3, [pc, #80]	; (800064c <ep0_in+0x54>)
 80005fc:	4c14      	ldr	r4, [pc, #80]	; (8000650 <ep0_in+0x58>)
 80005fe:	f8b3 104c 	ldrh.w	r1, [r3, #76]	; 0x4c
 8000602:	7922      	ldrb	r2, [r4, #4]
 8000604:	f001 017f 	and.w	r1, r1, #127	; 0x7f
 8000608:	4291      	cmp	r1, r2
    USB->DADDR = USB_DADDR_EF | USB_Addr;
 800060a:	bf1c      	itt	ne
 800060c:	f042 0280 	orrne.w	r2, r2, #128	; 0x80
 8000610:	f8a3 204c 	strhne.w	r2, [r3, #76]	; 0x4c
  if( (USB_EPx(0) & USB_EPTX_STAT) == USB_EP_TX_VALID )return;
 8000614:	881b      	ldrh	r3, [r3, #0]
 8000616:	f003 0330 	and.w	r3, r3, #48	; 0x30
 800061a:	2b30      	cmp	r3, #48	; 0x30
 800061c:	d014      	beq.n	8000648 <ep0_in+0x50>
  if(ep0_buf == NULL)return;
 800061e:	6825      	ldr	r5, [r4, #0]
 8000620:	b195      	cbz	r5, 8000648 <ep0_in+0x50>
  uint16_t left = ep0_count;
 8000622:	88e7      	ldrh	r7, [r4, #6]
#endif
#define ENDP_TOG(num, tog) do{USB_EPx(num) = ((USB_EPx(num) & ~(USB_EP_DTOG_RX | USB_EP_DTOG_TX | USB_EPRX_STAT | USB_EPTX_STAT)) | USB_EP_CTR_RX | USB_EP_CTR_TX) | tog; }while(0)

void _usb_ep_write(uint8_t idx, const uint8_t *buf, uint16_t size);
static inline void usb_ep_write(uint8_t epnum, const uint8_t *buf, uint16_t size){
  _usb_ep_write((epnum & 0x0F)*2, buf, size);
 8000624:	4629      	mov	r1, r5
 8000626:	2f08      	cmp	r7, #8
 8000628:	463e      	mov	r6, r7
 800062a:	bf28      	it	cs
 800062c:	2608      	movcs	r6, #8
 800062e:	2000      	movs	r0, #0
 8000630:	4632      	mov	r2, r6
 8000632:	f7ff ffb7 	bl	80005a4 <_usb_ep_write>
  if(left < USB_EP0_BUFSZ){
 8000636:	2f07      	cmp	r7, #7
  ep0_count -= left;
 8000638:	eba7 0306 	sub.w	r3, r7, r6
 800063c:	80e3      	strh	r3, [r4, #6]
    ep0_buf = NULL;
 800063e:	bf93      	iteet	ls
 8000640:	2300      	movls	r3, #0
  ep0_buf += left;
 8000642:	19ad      	addhi	r5, r5, r6
 8000644:	6025      	strhi	r5, [r4, #0]
    ep0_buf = NULL;
 8000646:	6023      	strls	r3, [r4, #0]
}
 8000648:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800064a:	bf00      	nop
 800064c:	40005c00 	andmi	r5, r0, r0, lsl #24
 8000650:	2000000c 	andcs	r0, r0, ip

08000654 <_usb_ep_read>:

int _usb_ep_read(uint8_t idx, uint16_t *buf){
 8000654:	b530      	push	{r4, r5, lr}
  pma_descr_t *descr = &((pma_descr_t*)usb_epdata)[idx];
 8000656:	00c2      	lsls	r2, r0, #3
 8000658:	f102 4280 	add.w	r2, r2, #1073741824	; 0x40000000
 800065c:	f502 42c0 	add.w	r2, r2, #24576	; 0x6000
int _usb_ep_read(uint8_t idx, uint16_t *buf){
 8000660:	4603      	mov	r3, r0
  int sz = descr->rx_count;
 8000662:	6850      	ldr	r0, [r2, #4]
 8000664:	f3c0 0009 	ubfx	r0, r0, #0, #10
  if(!sz) return 0;
 8000668:	b300      	cbz	r0, 80006ac <_usb_ep_read+0x58>
  int n = (sz + 1) >> 1;
  uint32_t *in = (uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
 800066a:	6812      	ldr	r2, [r2, #0]
  int n = (sz + 1) >> 1;
 800066c:	1c44      	adds	r4, r0, #1
  uint32_t *in = (uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
 800066e:	f102 5200 	add.w	r2, r2, #536870912	; 0x20000000
 8000672:	f502 5240 	add.w	r2, r2, #12288	; 0x3000
 8000676:	0052      	lsls	r2, r2, #1
  int n = (sz + 1) >> 1;
 8000678:	1064      	asrs	r4, r4, #1
 800067a:	3902      	subs	r1, #2
 800067c:	eb02 0484 	add.w	r4, r2, r4, lsl #2
  for(int i = 0; i < n; ++i, ++in)
    buf[i] = *(uint16_t*)in;
 8000680:	f832 5b04 	ldrh.w	r5, [r2], #4
  for(int i = 0; i < n; ++i, ++in)
 8000684:	42a2      	cmp	r2, r4
    buf[i] = *(uint16_t*)in;
 8000686:	f821 5f02 	strh.w	r5, [r1, #2]!
  for(int i = 0; i < n; ++i, ++in)
 800068a:	d1f9      	bne.n	8000680 <_usb_ep_read+0x2c>
  
  ENDP_STAT_RX((idx/2), USB_EP_RX_VALID);
 800068c:	085b      	lsrs	r3, r3, #1
 800068e:	009b      	lsls	r3, r3, #2
 8000690:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8000694:	f503 43b8 	add.w	r3, r3, #23552	; 0x5c00
 8000698:	881a      	ldrh	r2, [r3, #0]
 800069a:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800069e:	0492      	lsls	r2, r2, #18
 80006a0:	0c92      	lsrs	r2, r2, #18
 80006a2:	f482 4230 	eor.w	r2, r2, #45056	; 0xb000
 80006a6:	f082 0280 	eor.w	r2, r2, #128	; 0x80
 80006aa:	801a      	strh	r2, [r3, #0]
  return sz;
}
 80006ac:	bd30      	pop	{r4, r5, pc}

080006ae <ep0_out>:
static void ep0_out(uint8_t epnum){
 80006ae:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint16_t rxcount = usb_epdata[0].rx_count;
 80006b0:	4b3f      	ldr	r3, [pc, #252]	; (80007b0 <ep0_out+0x102>)
 80006b2:	4c40      	ldr	r4, [pc, #256]	; (80007b4 <ep0_out+0x106>)
 80006b4:	68dd      	ldr	r5, [r3, #12]
  uint8_t setup = !!(USB_EPx(0) & USB_EP_SETUP);
 80006b6:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 80006ba:	881b      	ldrh	r3, [r3, #0]
  uint16_t rxcount = usb_epdata[0].rx_count;
 80006bc:	f3c5 0509 	ubfx	r5, r5, #0, #10
  if( setup ){
 80006c0:	f413 6600 	ands.w	r6, r3, #2048	; 0x800
 80006c4:	d009      	beq.n	80006da <ep0_out+0x2c>
    if( setup_packet.bmRequestType & 0x80 ){ //предыдущий пакет=IN, этот точно будет запросом
 80006c6:	f994 3008 	ldrsb.w	r3, [r4, #8]
 80006ca:	2b00      	cmp	r3, #0
 80006cc:	da17      	bge.n	80006fe <ep0_out+0x50>
      bytesread = 0;
 80006ce:	2500      	movs	r5, #0
  _usb_ep_write(idx, buf, size);
}

int _usb_ep_read(uint8_t idx, uint16_t *buf);
static inline int usb_ep_read(uint8_t epnum, uint16_t *buf){
  return _usb_ep_read((epnum & 0x0F)*2 + 1, buf);
 80006d0:	4939      	ldr	r1, [pc, #228]	; (80007b8 <ep0_out+0x10a>)
 80006d2:	2001      	movs	r0, #1
 80006d4:	f7ff ffbe 	bl	8000654 <_usb_ep_read>
 80006d8:	8225      	strh	r5, [r4, #16]
  uint8_t req = setup_packet.bmRequestType & 0x7F;
 80006da:	7a22      	ldrb	r2, [r4, #8]
 80006dc:	f002 037f 	and.w	r3, r2, #127	; 0x7f
  if(setup_packet.bmRequestType & 0x80){
 80006e0:	0612      	lsls	r2, r2, #24
 80006e2:	d53c      	bpl.n	800075e <ep0_out+0xb0>
    if( !setup )return; //какой-то костыль. Иначе вызывается два раза
 80006e4:	b34e      	cbz	r6, 800073a <ep0_out+0x8c>
    if(req == (USB_REQ_STANDARD | USB_REQ_DEVICE)){
 80006e6:	bb73      	cbnz	r3, 8000746 <ep0_out+0x98>
      switch(setup_packet.bRequest){
 80006e8:	7a60      	ldrb	r0, [r4, #9]
 80006ea:	2806      	cmp	r0, #6
 80006ec:	d00c      	beq.n	8000708 <ep0_out+0x5a>
 80006ee:	2808      	cmp	r0, #8
 80006f0:	d025      	beq.n	800073e <ep0_out+0x90>
 80006f2:	bb40      	cbnz	r0, 8000746 <ep0_out+0x98>
  _usb_ep_write((epnum & 0x0F)*2, buf, size);
 80006f4:	2202      	movs	r2, #2
 80006f6:	4931      	ldr	r1, [pc, #196]	; (80007bc <ep0_out+0x10e>)
 80006f8:	f7ff ff54 	bl	80005a4 <_usb_ep_write>
 80006fc:	e01d      	b.n	800073a <ep0_out+0x8c>
      if( bytesread >= setup_packet.wLength ){
 80006fe:	89e2      	ldrh	r2, [r4, #14]
 8000700:	8a23      	ldrh	r3, [r4, #16]
 8000702:	429a      	cmp	r2, r3
 8000704:	d8e9      	bhi.n	80006da <ep0_out+0x2c>
 8000706:	e7e2      	b.n	80006ce <ep0_out+0x20>
          const void *data = ZLPP;
 8000708:	2201      	movs	r2, #1
          usb_class_get_std_descr(setup_packet.wValue, &data, &size);
 800070a:	a901      	add	r1, sp, #4
          const void *data = ZLPP;
 800070c:	9201      	str	r2, [sp, #4]
          usb_class_get_std_descr(setup_packet.wValue, &data, &size);
 800070e:	8960      	ldrh	r0, [r4, #10]
 8000710:	f10d 0202 	add.w	r2, sp, #2
          uint16_t size = 0;
 8000714:	f8ad 3002 	strh.w	r3, [sp, #2]
          usb_class_get_std_descr(setup_packet.wValue, &data, &size);
 8000718:	f000 f872 	bl	8000800 <usb_class_get_std_descr>
    if(setup_packet.wLength < size) size = setup_packet.wLength;
 800071c:	89e3      	ldrh	r3, [r4, #14]
 800071e:	f8bd 2002 	ldrh.w	r2, [sp, #2]
  ep0_in(0x80);
 8000722:	2080      	movs	r0, #128	; 0x80
    if(setup_packet.wLength < size) size = setup_packet.wLength;
 8000724:	429a      	cmp	r2, r3
 8000726:	bf88      	it	hi
 8000728:	f8ad 3002 	strhhi.w	r3, [sp, #2]
  ep0_count = size;
 800072c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000730:	80e3      	strh	r3, [r4, #6]
  ep0_buf = buf;
 8000732:	9b01      	ldr	r3, [sp, #4]
 8000734:	6023      	str	r3, [r4, #0]
  ep0_in(0x80);
 8000736:	f7ff ff5f 	bl	80005f8 <ep0_in>
}
 800073a:	b002      	add	sp, #8
 800073c:	bd70      	pop	{r4, r5, r6, pc}
 800073e:	2201      	movs	r2, #1
 8000740:	491f      	ldr	r1, [pc, #124]	; (80007c0 <ep0_out+0x112>)
 8000742:	4618      	mov	r0, r3
 8000744:	e7d8      	b.n	80006f8 <ep0_out+0x4a>
    void *data = ZLPP;
 8000746:	2301      	movs	r3, #1
 8000748:	9301      	str	r3, [sp, #4]
    uint16_t size = 0;
 800074a:	2300      	movs	r3, #0
    usb_class_ep0_in( &setup_packet, &data, &size );
 800074c:	f10d 0202 	add.w	r2, sp, #2
 8000750:	a901      	add	r1, sp, #4
 8000752:	4819      	ldr	r0, [pc, #100]	; (80007b8 <ep0_out+0x10a>)
    uint16_t size = 0;
 8000754:	f8ad 3002 	strh.w	r3, [sp, #2]
    usb_class_ep0_in( &setup_packet, &data, &size );
 8000758:	f000 f890 	bl	800087c <usb_class_ep0_in>
 800075c:	e7de      	b.n	800071c <ep0_out+0x6e>
    if(req == (USB_REQ_STANDARD | USB_REQ_DEVICE)){
 800075e:	b96b      	cbnz	r3, 800077c <ep0_out+0xce>
      if(setup_packet.bRequest == SET_ADDRESS){
 8000760:	7a62      	ldrb	r2, [r4, #9]
 8000762:	2a05      	cmp	r2, #5
 8000764:	d105      	bne.n	8000772 <ep0_out+0xc4>
        USB_Addr = setup_packet.wValue;
 8000766:	8962      	ldrh	r2, [r4, #10]
 8000768:	7122      	strb	r2, [r4, #4]
 800076a:	2200      	movs	r2, #0
 800076c:	4611      	mov	r1, r2
 800076e:	4610      	mov	r0, r2
 8000770:	e7c2      	b.n	80006f8 <ep0_out+0x4a>
      }else if(setup_packet.bRequest == SET_CONFIGURATION){
 8000772:	2a09      	cmp	r2, #9
 8000774:	d102      	bne.n	800077c <ep0_out+0xce>
        configuration = setup_packet.wValue;
 8000776:	8962      	ldrh	r2, [r4, #10]
 8000778:	74a2      	strb	r2, [r4, #18]
 800077a:	e7f6      	b.n	800076a <ep0_out+0xbc>
    if(!usb_class_ep0_out( &setup_packet, bytesread, rxcount )){
 800077c:	462a      	mov	r2, r5
 800077e:	8a21      	ldrh	r1, [r4, #16]
 8000780:	480d      	ldr	r0, [pc, #52]	; (80007b8 <ep0_out+0x10a>)
 8000782:	f000 f88d 	bl	80008a0 <usb_class_ep0_out>
 8000786:	b950      	cbnz	r0, 800079e <ep0_out+0xf0>
      ENDP_STAT_RX(0, USB_EP_RX_VALID);
 8000788:	4a0e      	ldr	r2, [pc, #56]	; (80007c4 <ep0_out+0x116>)
 800078a:	8813      	ldrh	r3, [r2, #0]
 800078c:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8000790:	049b      	lsls	r3, r3, #18
 8000792:	0c9b      	lsrs	r3, r3, #18
 8000794:	f483 4330 	eor.w	r3, r3, #45056	; 0xb000
 8000798:	f083 0380 	eor.w	r3, r3, #128	; 0x80
 800079c:	8013      	strh	r3, [r2, #0]
    bytesread += rxcount;
 800079e:	8a23      	ldrh	r3, [r4, #16]
 80007a0:	441d      	add	r5, r3
    if( bytesread >= setup_packet.wLength )usb_ep_write(0, NULL, 0);
 80007a2:	89e3      	ldrh	r3, [r4, #14]
    bytesread += rxcount;
 80007a4:	b2ad      	uxth	r5, r5
    if( bytesread >= setup_packet.wLength )usb_ep_write(0, NULL, 0);
 80007a6:	42ab      	cmp	r3, r5
    bytesread += rxcount;
 80007a8:	8225      	strh	r5, [r4, #16]
    if( bytesread >= setup_packet.wLength )usb_ep_write(0, NULL, 0);
 80007aa:	d8c6      	bhi.n	800073a <ep0_out+0x8c>
 80007ac:	e7dd      	b.n	800076a <ep0_out+0xbc>
 80007ae:	bf00      	nop
 80007b0:	40006000 	andmi	r6, r0, r0
 80007b4:	2000000c 	andcs	r0, r0, ip
 80007b8:	20000014 	andcs	r0, r0, r4, lsl r0
 80007bc:	08000a14 	stmdaeq	r0, {r2, r4, r9, fp}
 80007c0:	2000001e 	andcs	r0, r0, lr, lsl r0
 80007c4:	40005c00 	andmi	r5, r0, r0, lsl #24

080007c8 <ctl_callback>:
  return 0;
}

void ctl_callback(uint8_t epnum){
  
}
 80007c8:	4770      	bx	lr

080007ca <data_out_callback>:

void data_out_callback(uint8_t epnum){
 80007ca:	b510      	push	{r4, lr}
}
static inline int usb_ep_read_double(uint8_t epnum, uint16_t *buf){
  uint8_t idx = !(USB_EPx(epnum) & USB_EP_DTOG_RX);
 80007cc:	4c0b      	ldr	r4, [pc, #44]	; (80007fc <data_out_callback+0x32>)
 80007ce:	b090      	sub	sp, #64	; 0x40
 80007d0:	8820      	ldrh	r0, [r4, #0]
  int res = _usb_ep_read((epnum & 0x0F)*2 + idx, buf);
 80007d2:	4669      	mov	r1, sp
  uint8_t idx = !(USB_EPx(epnum) & USB_EP_DTOG_RX);
 80007d4:	f480 4080 	eor.w	r0, r0, #16384	; 0x4000
 80007d8:	f3c0 3080 	ubfx	r0, r0, #14, #1
  int res = _usb_ep_read((epnum & 0x0F)*2 + idx, buf);
 80007dc:	3004      	adds	r0, #4
 80007de:	f7ff ff39 	bl	8000654 <_usb_ep_read>
  ENDP_TOG( (epnum & 0x0F), USB_EP_DTOG_TX );
 80007e2:	8823      	ldrh	r3, [r4, #0]
 80007e4:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80007e8:	051b      	lsls	r3, r3, #20
 80007ea:	0d1b      	lsrs	r3, r3, #20
 80007ec:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80007f0:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 80007f4:	8023      	strh	r3, [r4, #0]
  uint8_t buf[ ENDP_DATA_SIZE ];
  int len = usb_ep_read_double( ENDP_DATA_OUT, buf);
  if(len == 0)return;
  //if(buf[0] == 'a')GPO_ON(GLED);
  //if(buf[0] == 's')GPO_OFF(GLED);
}
 80007f6:	b010      	add	sp, #64	; 0x40
 80007f8:	bd10      	pop	{r4, pc}
 80007fa:	bf00      	nop
 80007fc:	40005c08 	andmi	r5, r0, r8, lsl #24

08000800 <usb_class_get_std_descr>:
  switch(descr & 0xFF00){
 8000800:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8000804:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000808:	d010      	beq.n	800082c <usb_class_get_std_descr+0x2c>
 800080a:	d803      	bhi.n	8000814 <usb_class_get_std_descr+0x14>
 800080c:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8000810:	d007      	beq.n	8000822 <usb_class_get_std_descr+0x22>
 8000812:	4770      	bx	lr
 8000814:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8000818:	d010      	beq.n	800083c <usb_class_get_std_descr+0x3c>
 800081a:	f5b3 6fc0 	cmp.w	r3, #1536	; 0x600
 800081e:	d009      	beq.n	8000834 <usb_class_get_std_descr+0x34>
 8000820:	4770      	bx	lr
      *data = &USB_DeviceDescriptor;
 8000822:	4b0f      	ldr	r3, [pc, #60]	; (8000860 <usb_class_get_std_descr+0x60>)
 8000824:	600b      	str	r3, [r1, #0]
      *size = sizeof(USB_DeviceDescriptor);
 8000826:	2312      	movs	r3, #18
      *size = ((uint8_t*)*data)[0]; //data->bLength
 8000828:	8013      	strh	r3, [r2, #0]
}
 800082a:	4770      	bx	lr
      *data = &USB_ConfigDescriptor;
 800082c:	4b0d      	ldr	r3, [pc, #52]	; (8000864 <usb_class_get_std_descr+0x64>)
 800082e:	600b      	str	r3, [r1, #0]
      *size = sizeof(USB_ConfigDescriptor);
 8000830:	2343      	movs	r3, #67	; 0x43
 8000832:	e7f9      	b.n	8000828 <usb_class_get_std_descr+0x28>
      *data = &USB_DeviceQualifierDescriptor;
 8000834:	4b0c      	ldr	r3, [pc, #48]	; (8000868 <usb_class_get_std_descr+0x68>)
 8000836:	600b      	str	r3, [r1, #0]
      *size = USB_DeviceQualifierDescriptor[0];
 8000838:	230a      	movs	r3, #10
 800083a:	e7f5      	b.n	8000828 <usb_class_get_std_descr+0x28>
      switch(descr & 0xFF){
 800083c:	b2c0      	uxtb	r0, r0
 800083e:	2803      	cmp	r0, #3
 8000840:	d8f3      	bhi.n	800082a <usb_class_get_std_descr+0x2a>
 8000842:	e8df f000 	tbb	[pc, r0]
 8000846:	0b090702 	bleq	8242456 <_etext+0x2419b2>
          *data = &USB_StringLangDescriptor;
 800084a:	4b08      	ldr	r3, [pc, #32]	; (800086c <usb_class_get_std_descr+0x6c>)
          *data = &USB_StringSerialDescriptor;
 800084c:	600b      	str	r3, [r1, #0]
      *size = ((uint8_t*)*data)[0]; //data->bLength
 800084e:	680b      	ldr	r3, [r1, #0]
 8000850:	781b      	ldrb	r3, [r3, #0]
 8000852:	e7e9      	b.n	8000828 <usb_class_get_std_descr+0x28>
          *data = &USB_StringManufacturingDescriptor;
 8000854:	4b06      	ldr	r3, [pc, #24]	; (8000870 <usb_class_get_std_descr+0x70>)
 8000856:	e7f9      	b.n	800084c <usb_class_get_std_descr+0x4c>
          *data = &USB_StringProdDescriptor;
 8000858:	4b06      	ldr	r3, [pc, #24]	; (8000874 <usb_class_get_std_descr+0x74>)
 800085a:	e7f7      	b.n	800084c <usb_class_get_std_descr+0x4c>
          *data = &USB_StringSerialDescriptor;
 800085c:	4b06      	ldr	r3, [pc, #24]	; (8000878 <usb_class_get_std_descr+0x78>)
 800085e:	e7f5      	b.n	800084c <usb_class_get_std_descr+0x4c>
 8000860:	08000a16 	stmdaeq	r0, {r1, r2, r4, r9, fp}
 8000864:	08000a28 	stmdaeq	r0, {r3, r5, r9, fp}
 8000868:	08000a6b 	stmdaeq	r0, {r0, r1, r3, r5, r6, r9, fp}
 800086c:	08000a76 	stmdaeq	r0, {r1, r2, r4, r5, r6, r9, fp}
 8000870:	08000a7a 	stmdaeq	r0, {r1, r3, r4, r5, r6, r9, fp}
 8000874:	08000a90 	stmdaeq	r0, {r4, r7, r9, fp}
 8000878:	08000aa0 	stmdaeq	r0, {r5, r7, r9, fp}

0800087c <usb_class_ep0_in>:
  if( (req->bmRequestType & 0x7F) == (USB_REQ_CLASS | USB_REQ_INTERFACE) ){
 800087c:	7803      	ldrb	r3, [r0, #0]
 800087e:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8000882:	2b21      	cmp	r3, #33	; 0x21
 8000884:	d108      	bne.n	8000898 <usb_class_ep0_in+0x1c>
    if( req->bRequest == CDC_GET_LINE_CODING ){
 8000886:	7843      	ldrb	r3, [r0, #1]
 8000888:	2b21      	cmp	r3, #33	; 0x21
 800088a:	d105      	bne.n	8000898 <usb_class_ep0_in+0x1c>
      *data = (void*)&linecoding;
 800088c:	4b03      	ldr	r3, [pc, #12]	; (800089c <usb_class_ep0_in+0x20>)
      return 1;
 800088e:	2001      	movs	r0, #1
      *data = (void*)&linecoding;
 8000890:	600b      	str	r3, [r1, #0]
      *size = sizeof(linecoding);
 8000892:	2307      	movs	r3, #7
 8000894:	8013      	strh	r3, [r2, #0]
      return 1;
 8000896:	4770      	bx	lr
  return 0;
 8000898:	2000      	movs	r0, #0
}
 800089a:	4770      	bx	lr
 800089c:	20000002 	andcs	r0, r0, r2

080008a0 <usb_class_ep0_out>:
char usb_class_ep0_out(config_pack_t *req, uint16_t offset, uint16_t rx_size){
 80008a0:	b508      	push	{r3, lr}
  if( (req->bmRequestType & 0x7F) == (USB_REQ_CLASS | USB_REQ_INTERFACE) ){
 80008a2:	7803      	ldrb	r3, [r0, #0]
 80008a4:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 80008a8:	2b21      	cmp	r3, #33	; 0x21
 80008aa:	d109      	bne.n	80008c0 <usb_class_ep0_out+0x20>
    if( req->bRequest == CDC_SET_LINE_CODING ){
 80008ac:	7843      	ldrb	r3, [r0, #1]
 80008ae:	2b20      	cmp	r3, #32
 80008b0:	d106      	bne.n	80008c0 <usb_class_ep0_out+0x20>
      if(rx_size == 0)return 1;
 80008b2:	b11a      	cbz	r2, 80008bc <usb_class_ep0_out+0x1c>
  return _usb_ep_read((epnum & 0x0F)*2 + 1, buf);
 80008b4:	4903      	ldr	r1, [pc, #12]	; (80008c4 <usb_class_ep0_out+0x24>)
 80008b6:	2001      	movs	r0, #1
 80008b8:	f7ff fecc 	bl	8000654 <_usb_ep_read>
 80008bc:	2001      	movs	r0, #1
 80008be:	e000      	b.n	80008c2 <usb_class_ep0_out+0x22>
  return 0;
 80008c0:	2000      	movs	r0, #0
}
 80008c2:	bd08      	pop	{r3, pc}
 80008c4:	20000002 	andcs	r0, r0, r2

080008c8 <fmtu8>:

void fmtu8(uint8_t x, char *buf){
  buf[0] = x/100 + '0';
 80008c8:	2264      	movs	r2, #100	; 0x64
 80008ca:	fbb0 f2f2 	udiv	r2, r0, r2
 80008ce:	3230      	adds	r2, #48	; 0x30
 80008d0:	700a      	strb	r2, [r1, #0]
  buf[1] = (x/10)%10 + '0';
 80008d2:	220a      	movs	r2, #10
 80008d4:	fbb0 f3f2 	udiv	r3, r0, r2
void fmtu8(uint8_t x, char *buf){
 80008d8:	b510      	push	{r4, lr}
  buf[1] = (x/10)%10 + '0';
 80008da:	fbb3 f4f2 	udiv	r4, r3, r2
 80008de:	fb04 3412 	mls	r4, r4, r2, r3
  buf[2] = x % 10 + '0';
 80008e2:	fb02 0313 	mls	r3, r2, r3, r0
 80008e6:	3330      	adds	r3, #48	; 0x30
 80008e8:	708b      	strb	r3, [r1, #2]
  buf[3] = '\n';
  buf[4] = '\r';
 80008ea:	230d      	movs	r3, #13
 80008ec:	710b      	strb	r3, [r1, #4]
  buf[5] = 0;
 80008ee:	2300      	movs	r3, #0
  buf[1] = (x/10)%10 + '0';
 80008f0:	3430      	adds	r4, #48	; 0x30
 80008f2:	704c      	strb	r4, [r1, #1]
  buf[3] = '\n';
 80008f4:	70ca      	strb	r2, [r1, #3]
  buf[5] = 0;
 80008f6:	714b      	strb	r3, [r1, #5]
}
 80008f8:	bd10      	pop	{r4, pc}

080008fa <test>:

char test(){
 80008fa:	b513      	push	{r0, r1, r4, lr}
  static uint8_t x = 0;
  uint8_t ch[6];
  fmtu8(x, ch);
 80008fc:	4c0e      	ldr	r4, [pc, #56]	; (8000938 <test+0x3e>)
 80008fe:	4669      	mov	r1, sp
 8000900:	7820      	ldrb	r0, [r4, #0]
 8000902:	f7ff ffe1 	bl	80008c8 <fmtu8>
  uint8_t idx = !!( USB_EPx(epnum) & USB_EP_DTOG_RX );
 8000906:	4a0d      	ldr	r2, [pc, #52]	; (800093c <test+0x42>)
  _usb_ep_write(idx, buf, size);
 8000908:	4669      	mov	r1, sp
  uint8_t idx = !!( USB_EPx(epnum) & USB_EP_DTOG_RX );
 800090a:	8810      	ldrh	r0, [r2, #0]
  ENDP_TOG( epnum, USB_EP_DTOG_RX );
 800090c:	8813      	ldrh	r3, [r2, #0]
  uint8_t idx = !!( USB_EPx(epnum) & USB_EP_DTOG_RX );
 800090e:	f3c0 3080 	ubfx	r0, r0, #14, #1
  ENDP_TOG( epnum, USB_EP_DTOG_RX );
 8000912:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8000916:	051b      	lsls	r3, r3, #20
 8000918:	0d1b      	lsrs	r3, r3, #20
 800091a:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800091e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000922:	8013      	strh	r3, [r2, #0]
  _usb_ep_write(idx, buf, size);
 8000924:	3002      	adds	r0, #2
 8000926:	2205      	movs	r2, #5
 8000928:	f7ff fe3c 	bl	80005a4 <_usb_ep_write>
  usb_ep_write_double( ENDP_DATA_IN | 0x80, ch, sizeof(ch)-1);
  x++;
  return 1;
}
 800092c:	2001      	movs	r0, #1
  x++;
 800092e:	7823      	ldrb	r3, [r4, #0]
 8000930:	3301      	adds	r3, #1
 8000932:	7023      	strb	r3, [r4, #0]
}
 8000934:	b002      	add	sp, #8
 8000936:	bd10      	pop	{r4, pc}
 8000938:	2000001f 	andcs	r0, r0, pc, lsl r0
 800093c:	40005c04 	andmi	r5, r0, r4, lsl #24

08000940 <data_in_callback>:

void data_in_callback(uint8_t epnum){
 8000940:	b510      	push	{r4, lr}
  static uint8_t cnt = 0;
  if(cnt >= 1){cnt = 0; return;}
 8000942:	4c05      	ldr	r4, [pc, #20]	; (8000958 <data_in_callback+0x18>)
 8000944:	7863      	ldrb	r3, [r4, #1]
 8000946:	b113      	cbz	r3, 800094e <data_in_callback+0xe>
 8000948:	2300      	movs	r3, #0
  test();
  cnt++;
 800094a:	7063      	strb	r3, [r4, #1]
}
 800094c:	bd10      	pop	{r4, pc}
  test();
 800094e:	f7ff ffd4 	bl	80008fa <test>
  cnt++;
 8000952:	7863      	ldrb	r3, [r4, #1]
 8000954:	3301      	adds	r3, #1
 8000956:	e7f8      	b.n	800094a <data_in_callback+0xa>
 8000958:	2000001f 	andcs	r0, r0, pc, lsl r0

0800095c <usb_class_init>:

void usb_class_init(){
 800095c:	b510      	push	{r4, lr}
  usb_ep_init( ENDP_CTL_NUM | 0x80, USB_ENDP_INTR, ENDP_CTL_SIZE, ctl_callback );
 800095e:	4b0a      	ldr	r3, [pc, #40]	; (8000988 <usb_class_init+0x2c>)
 8000960:	2208      	movs	r2, #8
 8000962:	2103      	movs	r1, #3
 8000964:	2083      	movs	r0, #131	; 0x83
 8000966:	f7ff fc75 	bl	8000254 <usb_ep_init>
  
  usb_ep_init_double( ENDP_DATA_IN | 0x80, USB_ENDP_BULK, ENDP_DATA_SIZE, data_in_callback );
 800096a:	4b08      	ldr	r3, [pc, #32]	; (800098c <usb_class_init+0x30>)
 800096c:	2240      	movs	r2, #64	; 0x40
 800096e:	2102      	movs	r1, #2
 8000970:	2081      	movs	r0, #129	; 0x81
 8000972:	f7ff fce5 	bl	8000340 <usb_ep_init_double>
  usb_ep_init_double( ENDP_DATA_OUT, USB_ENDP_BULK, ENDP_DATA_SIZE, data_out_callback );
  
}
 8000976:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  usb_ep_init_double( ENDP_DATA_OUT, USB_ENDP_BULK, ENDP_DATA_SIZE, data_out_callback );
 800097a:	2102      	movs	r1, #2
 800097c:	4b04      	ldr	r3, [pc, #16]	; (8000990 <usb_class_init+0x34>)
 800097e:	2240      	movs	r2, #64	; 0x40
 8000980:	4608      	mov	r0, r1
 8000982:	f7ff bcdd 	b.w	8000340 <usb_ep_init_double>
 8000986:	bf00      	nop
 8000988:	080007c9 	stmdaeq	r0, {r0, r3, r6, r7, r8, r9, sl}
 800098c:	08000941 	stmdaeq	r0, {r0, r6, r8, fp}
 8000990:	080007cb 	stmdaeq	r0, {r0, r1, r3, r6, r7, r8, r9, sl}

08000994 <usb_class_poll>:

void usb_class_poll(){
 8000994:	b508      	push	{r3, lr}
    while( GPI_ON(BTN2) ){}
    uint8_t ch = 'a';
    usb_ep_write_double(ENDP_DATA_IN | 0x80, &ch, 1);
    GPO_T(RLED);
  }*/
  test();
 8000996:	f7ff ffb0 	bl	80008fa <test>
 800099a:	4b03      	ldr	r3, [pc, #12]	; (80009a8 <usb_class_poll+0x14>)
  while(time--)asm volatile("nop");
 800099c:	3b01      	subs	r3, #1
 800099e:	d100      	bne.n	80009a2 <usb_class_poll+0xe>
  
  //GPO_T(RLED);
  sleep(5000000);
}
 80009a0:	bd08      	pop	{r3, pc}
  while(time--)asm volatile("nop");
 80009a2:	bf00      	nop
 80009a4:	e7fa      	b.n	800099c <usb_class_poll+0x8>
 80009a6:	bf00      	nop
 80009a8:	004c4b41 	subeq	r4, ip, r1, asr #22

080009ac <Reset_Handler>:
 80009ac:	2100      	movs	r1, #0
 80009ae:	e003      	b.n	80009b8 <LoopCopyDataInit>

080009b0 <CopyDataInit>:
 80009b0:	4b0a      	ldr	r3, [pc, #40]	; (80009dc <LoopFillZerobss+0x10>)
 80009b2:	585b      	ldr	r3, [r3, r1]
 80009b4:	5043      	str	r3, [r0, r1]
 80009b6:	3104      	adds	r1, #4

080009b8 <LoopCopyDataInit>:
 80009b8:	4809      	ldr	r0, [pc, #36]	; (80009e0 <LoopFillZerobss+0x14>)
 80009ba:	4b0a      	ldr	r3, [pc, #40]	; (80009e4 <LoopFillZerobss+0x18>)
 80009bc:	1842      	adds	r2, r0, r1
 80009be:	429a      	cmp	r2, r3
 80009c0:	d3f6      	bcc.n	80009b0 <CopyDataInit>
 80009c2:	4a09      	ldr	r2, [pc, #36]	; (80009e8 <LoopFillZerobss+0x1c>)
 80009c4:	e002      	b.n	80009cc <LoopFillZerobss>

080009c6 <FillZerobss>:
 80009c6:	2300      	movs	r3, #0
 80009c8:	f842 3b04 	str.w	r3, [r2], #4

080009cc <LoopFillZerobss>:
 80009cc:	4b07      	ldr	r3, [pc, #28]	; (80009ec <LoopFillZerobss+0x20>)
 80009ce:	429a      	cmp	r2, r3
 80009d0:	d3f9      	bcc.n	80009c6 <FillZerobss>
 80009d2:	f7ff fbfc 	bl	80001ce <SystemInit>
 80009d6:	f000 f80d 	bl	80009f4 <main>
 80009da:	4770      	bx	lr
 80009dc:	08000aa4 	stmdaeq	r0, {r2, r5, r7, r9, fp}
 80009e0:	20000000 	andcs	r0, r0, r0
 80009e4:	2000000c 	andcs	r0, r0, ip
 80009e8:	2000000c 	andcs	r0, r0, ip
 80009ec:	20000064 	andcs	r0, r0, r4, rrx

080009f0 <ADC1_2_IRQHandler>:
 80009f0:	e7fe      	b.n	80009f0 <ADC1_2_IRQHandler>
	...

080009f4 <main>:

int main(void){
 80009f4:	b508      	push	{r3, lr}
  SysClockMax();
 80009f6:	f7ff fb93 	bl	8000120 <SysClockMax>
  RCC->APB2ENR |= RCC_APB2ENR_IOPBEN | RCC_APB2ENR_IOPAEN;
 80009fa:	4a05      	ldr	r2, [pc, #20]	; (8000a10 <main+0x1c>)
 80009fc:	6993      	ldr	r3, [r2, #24]
 80009fe:	f043 030c 	orr.w	r3, r3, #12
 8000a02:	6193      	str	r3, [r2, #24]

  //GPIO_config(RLED); GPIO_config(GLED); GPIO_config(YLED);
  //GPIO_config(BTN1); GPIO_config(BTN2);
  
  USB_setup();
 8000a04:	f7ff fbf1 	bl	80001ea <USB_setup>
static __INLINE void __enable_irq()               { __ASM volatile ("cpsie i"); }
 8000a08:	b662      	cpsie	i
  __enable_irq();

  while(1){
    usb_class_poll();
 8000a0a:	f7ff ffc3 	bl	8000994 <usb_class_poll>
 8000a0e:	e7fc      	b.n	8000a0a <main+0x16>
 8000a10:	40021000 	andmi	r1, r2, r0
	...

08000a16 <USB_DeviceDescriptor>:
 8000a16:	01100112 	tsteq	r0, r2, lsl r1
 8000a1a:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
 8000a1e:	05df16c0 	ldrbeq	r1, [pc, #1728]	; 80010e6 <_etext+0x642>
 8000a22:	02010001 	andeq	r0, r1, #1
 8000a26:	 	andeq	r0, r9, #-1073741824	; 0xc0000000

08000a28 <USB_ConfigDescriptor>:
 8000a28:	00430209 	subeq	r0, r3, r9, lsl #4
 8000a2c:	80000102 	andhi	r0, r0, r2, lsl #2
 8000a30:	00040932 	andeq	r0, r4, r2, lsr r9
 8000a34:	02020100 	andeq	r0, r2, #0, 2
 8000a38:	24050000 	strcs	r0, [r5], #-0
 8000a3c:	05011000 	streq	r1, [r1, #-0]
 8000a40:	01000124 	tsteq	r0, r4, lsr #2
 8000a44:	02022404 	andeq	r2, r2, #4, 8	; 0x4000000
 8000a48:	00062405 	andeq	r2, r6, r5, lsl #8
 8000a4c:	83050701 	movwhi	r0, #22273	; 0x5701
 8000a50:	64000803 	strvs	r0, [r0], #-2051	; 0xfffff7fd
 8000a54:	00010409 	andeq	r0, r1, r9, lsl #8
 8000a58:	00000a02 	andeq	r0, r0, r2, lsl #20
 8000a5c:	02050700 	andeq	r0, r5, #0, 14
 8000a60:	00004002 	andeq	r4, r0, r2
 8000a64:	02810507 	addeq	r0, r1, #29360128	; 0x1c00000
 8000a68:	 	beq	8000b70 <_etext+0xcc>

08000a6b <USB_DeviceQualifierDescriptor>:
 8000a6b:	0200060a 	andeq	r0, r0, #10485760	; 0xa00000
 8000a6f:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
 8000a73:	 	streq	r0, [r0], #-1

08000a76 <USB_StringLangDescriptor>:
 8000a76:	04090304 	streq	r0, [r9], #-772	; 0xfffffcfc

08000a7a <USB_StringManufacturingDescriptor>:
 8000a7a:	00430316 	subeq	r0, r3, r6, lsl r3
 8000a7e:	004b004f 	subeq	r0, fp, pc, asr #32
 8000a82:	004f0050 	subeq	r0, pc, r0, asr r0	; <UNPREDICTABLE>
 8000a86:	00450057 	subeq	r0, r5, r7, asr r0
 8000a8a:	00450048 	subeq	r0, r5, r8, asr #32
 8000a8e:	 	tsteq	r0, #85	; 0x55

08000a90 <USB_StringProdDescriptor>:
 8000a90:	00550310 	subseq	r0, r5, r0, lsl r3
 8000a94:	00420053 	subeq	r0, r2, r3, asr r0
 8000a98:	00430020 	subeq	r0, r3, r0, lsr #32
 8000a9c:	00430044 	subeq	r0, r3, r4, asr #32

08000aa0 <USB_StringSerialDescriptor>:
 8000aa0:	00310304 	eorseq	r0, r1, r4, lsl #6

Disassembly of section .data:

20000000 <lastaddr>:
20000000:	 	strcs	r0, [r0, #64]	; 0x40

20000002 <linecoding>:
volatile struct cdc_linecoding linecoding = {
20000002:	00002580 	andeq	r2, r0, r0, lsl #11
20000006:	00080000 	andeq	r0, r8, r0
	...

Disassembly of section .bss:

2000000c <ep0_buf>:
2000000c:	00000000 	andeq	r0, r0, r0

20000010 <USB_Addr>:
	...

20000012 <ep0_count>:
	...

20000014 <setup_packet>:
	...

2000001c <bytesread.4424>:
	...

2000001e <configuration>:
	...

2000001f <x.5126>:
	...

20000020 <cnt.5131>:
20000020:	00000000 	andeq	r0, r0, r0

20000024 <epfunc_in>:
	...

20000044 <epfunc_out>:
	...

Disassembly of section ._usrstack:

20000064 <_susrstack>:
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <__Stack_Size+0x10d0924>
   4:	35312820 	ldrcc	r2, [r1, #-2080]!	; 0xfffff7e0
   8:	322d383a 	eorcc	r3, sp, #3801088	; 0x3a0000
   c:	2d393130 	ldfcss	f3, [r9, #-192]!	; 0xffffff40
  10:	312d3371 			; <UNDEFINED> instruction: 0x312d3371
  14:	2e382029 	cdpcs	0, 3, cr2, cr8, cr9, {1}
  18:	20312e33 	eorscs	r2, r1, r3, lsr lr
  1c:	39313032 	ldmdbcc	r1!, {r1, r4, r5, ip, sp}
  20:	33303730 	teqcc	r0, #48, 14	; 0xc00000
  24:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
  28:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
  2c:	5b202965 	blpl	80a5c8 <__Stack_Size+0x80a1c8>
  30:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
  34:	72622d38 	rsbvc	r2, r2, #56, 26	; 0xe00
  38:	68636e61 	stmdavs	r3!, {r0, r5, r6, r9, sl, fp, sp, lr}^
  3c:	76657220 	strbtvc	r7, [r5], -r0, lsr #4
  40:	6f697369 	svcvs	0x00697369
  44:	3732206e 	ldrcc	r2, [r2, -lr, rrx]!
  48:	37323033 			; <UNDEFINED> instruction: 0x37323033
  4c:	Address 0x000000000000004c is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002e41 	andeq	r2, r0, r1, asr #28
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000024 	andeq	r0, r0, r4, lsr #32
  10:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
  14:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
  18:	0600334d 	streq	r3, [r0], -sp, asr #6
  1c:	094d070a 	stmdbeq	sp, {r1, r3, r8, r9, sl}^
  20:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  24:	17011501 	strne	r1, [r1, -r1, lsl #10]
  28:	1a011803 	bne	4603c <__Stack_Size+0x45c3c>
  2c:	Address 0x000000000000002c is out of bounds.


Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	08000120 	stmdaeq	r0, {r5, r8}
  14:	000000bc 	strheq	r0, [r0], -ip
  18:	080009f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, fp}
  1c:	00000020 	andeq	r0, r0, r0, lsr #32
	...
  28:	0000001c 	andeq	r0, r0, ip, lsl r0
  2c:	03aa0002 			; <UNDEFINED> instruction: 0x03aa0002
  30:	00040000 	andeq	r0, r4, r0
  34:	00000000 	andeq	r0, r0, r0
  38:	080001dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8}
  3c:	000005ec 	andeq	r0, r0, ip, ror #11
	...
  48:	0000001c 	andeq	r0, r0, ip, lsl r0
  4c:	16490002 	strbne	r0, [r9], -r2
  50:	00040000 	andeq	r0, r4, r0
  54:	00000000 	andeq	r0, r0, r0
  58:	080007c8 	stmdaeq	r0, {r3, r6, r7, r8, r9, sl}
  5c:	000001e4 	andeq	r0, r0, r4, ror #3
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	000003a6 	andeq	r0, r0, r6, lsr #7
       4:	00000002 	andeq	r0, r0, r2
       8:	01040000 	mrseq	r0, (UNDEF: 4)
       c:	0000000a 	andeq	r0, r0, sl
      10:	0001c50c 	andeq	ip, r1, ip, lsl #10
      14:	00017200 	andeq	r7, r1, r0, lsl #4
      18:	00002000 	andeq	r2, r0, r0
	...
      28:	06010200 	streq	r0, [r1], -r0, lsl #4
      2c:	0000011f 	andeq	r0, r0, pc, lsl r1
      30:	00016b03 	andeq	r6, r1, r3, lsl #22
      34:	17220400 	strne	r0, [r2, -r0, lsl #8]!
      38:	00000029 	andeq	r0, r0, r9, lsr #32
      3c:	de050202 	cdple	2, 0, cr0, cr5, cr2, {0}
      40:	02000001 	andeq	r0, r0, #1
      44:	01ac0504 			; <UNDEFINED> instruction: 0x01ac0504
      48:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
      4c:	0001a705 	andeq	sl, r1, r5, lsl #14
      50:	016a0300 	cmneq	sl, r0, lsl #6
      54:	2e040000 	cdpcs	0, 0, cr0, cr4, cr0, {0}
      58:	00006218 	andeq	r6, r0, r8, lsl r2
      5c:	00510400 	subseq	r0, r1, r0, lsl #8
      60:	01020000 	mrseq	r0, (UNDEF: 2)
      64:	00011d08 	andeq	r1, r1, r8, lsl #26
      68:	07020200 	streq	r0, [r2, -r0, lsl #4]
      6c:	000000f5 	strdeq	r0, [r0], -r5
      70:	0001f403 	andeq	pc, r1, r3, lsl #8
      74:	19340400 	ldmdbne	r4!, {sl}
      78:	00000081 	andeq	r0, r0, r1, lsl #1
      7c:	00007005 	andeq	r7, r0, r5
      80:	07040200 	streq	r0, [r4, -r0, lsl #4]
      84:	00000158 	andeq	r0, r0, r8, asr r1
      88:	53070802 	movwpl	r0, #30722	; 0x7802
      8c:	06000001 	streq	r0, [r0], -r1
      90:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
      94:	8f050074 	svchi	0x00050074
      98:	02000000 	andeq	r0, r0, #0
      9c:	015d0704 	cmpeq	sp, r4, lsl #14
      a0:	08070000 	stmdaeq	r7, {}	; <UNPREDICTABLE>
      a4:	03000001 	movweq	r0, #1
      a8:	961506ce 	ldrls	r0, [r5], -lr, asr #13
      ac:	01000000 	mrseq	r0, (UNDEF: 0)
      b0:	01b50801 			; <UNDEFINED> instruction: 0x01b50801
      b4:	45050000 	strmi	r0, [r5, #-0]
      b8:	00007011 	andeq	r7, r0, r1, lsl r0
      bc:	09010100 	stmdbeq	r1, {r8}
      c0:	0000005d 	andeq	r0, r0, sp, asr r0
      c4:	000000cf 	andeq	r0, r0, pc, asr #1
      c8:	00009b0a 	andeq	r9, r0, sl, lsl #22
      cc:	04000f00 	streq	r0, [r0], #-3840	; 0xfffff100
      d0:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
      d4:	0000e708 	andeq	lr, r0, r8, lsl #14
      d8:	17460500 	strbne	r0, [r6, -r0, lsl #10]
      dc:	000000cf 	andeq	r0, r0, pc, asr #1
      e0:	5d090101 	stfpls	f0, [r9, #-4]
      e4:	f2000000 	vhadd.s8	d0, d0, d0
      e8:	0a000000 	beq	f0 <_Minimum_Stack_Size-0x10>
      ec:	0000009b 	muleq	r0, fp, r0
      f0:	e2040007 	and	r0, r4, #7
      f4:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
      f8:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
      fc:	f2174705 	vabd.s16	d4, d7, d5
     100:	01000000 	mrseq	r0, (UNDEF: 0)
     104:	06240b01 	strteq	r0, [r4], -r1, lsl #22
     108:	9d090158 	stflss	f0, [r9, #-352]	; 0xfffffea0
     10c:	0c000001 	stceq	0, cr0, [r0], {1}
     110:	00524341 	subseq	r4, r2, r1, asr #6
     114:	11015a06 	tstne	r1, r6, lsl #20
     118:	0000007c 	andeq	r0, r0, ip, ror r0
     11c:	0d002302 	stceq	3, cr2, [r0, #-8]
     120:	00000118 	andeq	r0, r0, r8, lsl r1
     124:	11015b06 	tstne	r1, r6, lsl #22
     128:	0000007c 	andeq	r0, r0, ip, ror r0
     12c:	0d042302 	stceq	3, cr2, [r4, #-8]
     130:	00000115 	andeq	r0, r0, r5, lsl r1
     134:	11015c06 	tstne	r1, r6, lsl #24
     138:	0000007c 	andeq	r0, r0, ip, ror r0
     13c:	0c082302 	stceq	3, cr2, [r8], {2}
     140:	06005253 			; <UNDEFINED> instruction: 0x06005253
     144:	7c11015d 	ldfvcs	f0, [r1], {93}	; 0x5d
     148:	02000000 	andeq	r0, r0, #0
     14c:	430c0c23 	movwmi	r0, #52259	; 0xcc23
     150:	5e060052 	mcrpl	0, 0, r0, cr6, cr2, {2}
     154:	007c1101 	rsbseq	r1, ip, r1, lsl #2
     158:	23020000 	movwcs	r0, #8192	; 0x2000
     15c:	52410c10 	subpl	r0, r1, #16, 24	; 0x1000
     160:	015f0600 	cmpeq	pc, r0, lsl #12
     164:	00007c11 	andeq	r7, r0, r1, lsl ip
     168:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     16c:	00012b0d 	andeq	r2, r1, sp, lsl #22
     170:	01600600 	cmneq	r0, r0, lsl #12
     174:	00007c11 	andeq	r7, r0, r1, lsl ip
     178:	18230200 	stmdane	r3!, {r9}
     17c:	52424f0c 	subpl	r4, r2, #12, 30	; 0x30
     180:	01610600 	cmneq	r1, r0, lsl #12
     184:	00007c11 	andeq	r7, r0, r1, lsl ip
     188:	1c230200 	sfmne	f0, 4, [r3], #-0
     18c:	0000b20d 	andeq	fp, r0, sp, lsl #4
     190:	01620600 	cmneq	r2, r0, lsl #12
     194:	00007c11 	andeq	r7, r0, r1, lsl ip
     198:	20230200 	eorcs	r0, r3, r0, lsl #4
     19c:	009d0e00 	addseq	r0, sp, r0, lsl #28
     1a0:	63060000 	movwvs	r0, #24576	; 0x6000
     1a4:	01050301 	tsteq	r5, r1, lsl #6
     1a8:	280b0000 	stmdacs	fp, {}	; <UNPREDICTABLE>
     1ac:	0901bb06 	stmdbeq	r1, {r1, r2, r8, r9, fp, ip, sp, pc}
     1b0:	00000254 	andeq	r0, r0, r4, asr r2
     1b4:	0052430c 	subseq	r4, r2, ip, lsl #6
     1b8:	1101bd06 	tstne	r1, r6, lsl #26
     1bc:	0000007c 	andeq	r0, r0, ip, ror r0
     1c0:	0d002302 	stceq	3, cr2, [r0, #-8]
     1c4:	00000005 	andeq	r0, r0, r5
     1c8:	1101be06 	tstne	r1, r6, lsl #28
     1cc:	0000007c 	andeq	r0, r0, ip, ror r0
     1d0:	0c042302 	stceq	3, cr2, [r4], {2}
     1d4:	00524943 	subseq	r4, r2, r3, asr #18
     1d8:	1101bf06 	tstne	r1, r6, lsl #30
     1dc:	0000007c 	andeq	r0, r0, ip, ror r0
     1e0:	0d082302 	stceq	3, cr2, [r8, #-8]
     1e4:	0000014a 	andeq	r0, r0, sl, asr #2
     1e8:	1101c006 	tstne	r1, r6
     1ec:	0000007c 	andeq	r0, r0, ip, ror r0
     1f0:	0d0c2302 	stceq	3, cr2, [ip, #-8]
     1f4:	00000134 	andeq	r0, r0, r4, lsr r1
     1f8:	1101c106 	tstne	r1, r6, lsl #2
     1fc:	0000007c 	andeq	r0, r0, ip, ror r0
     200:	0d102302 	ldceq	3, cr2, [r0, #-8]
     204:	000000ab 	andeq	r0, r0, fp, lsr #1
     208:	1101c206 	tstne	r1, r6, lsl #4
     20c:	0000007c 	andeq	r0, r0, ip, ror r0
     210:	0d142302 	ldceq	3, cr2, [r4, #-8]
     214:	000000c3 	andeq	r0, r0, r3, asr #1
     218:	1101c306 	tstne	r1, r6, lsl #6
     21c:	0000007c 	andeq	r0, r0, ip, ror r0
     220:	0d182302 	ldceq	3, cr2, [r8, #-8]
     224:	00000142 	andeq	r0, r0, r2, asr #2
     228:	1101c406 	tstne	r1, r6, lsl #8
     22c:	0000007c 	andeq	r0, r0, ip, ror r0
     230:	0d1c2302 	ldceq	3, cr2, [ip, #-8]
     234:	00000000 	andeq	r0, r0, r0
     238:	1101c506 	tstne	r1, r6, lsl #10
     23c:	0000007c 	andeq	r0, r0, ip, ror r0
     240:	0c202302 	stceq	3, cr2, [r0], #-8
     244:	00525343 	subseq	r5, r2, r3, asr #6
     248:	1101c606 	tstne	r1, r6, lsl #12
     24c:	0000007c 	andeq	r0, r0, ip, ror r0
     250:	00242302 	eoreq	r2, r4, r2, lsl #6
     254:	0001e80e 	andeq	lr, r1, lr, lsl #16
     258:	01c90600 	biceq	r0, r9, r0, lsl #12
     25c:	0001aa03 	andeq	sl, r1, r3, lsl #20
     260:	3d010f00 	stccc	15, cr0, [r1, #-0]
     264:	02000001 	andeq	r0, r0, #1
     268:	8f01050e 	svchi	0x0001050e
     26c:	f4000000 	vst4.8	{d0-d3}, [r0], r0
     270:	14080009 	strne	r0, [r8], #-9
     274:	0008000a 	andeq	r0, r8, sl
     278:	01000000 	mrseq	r0, (UNDEF: 0)
     27c:	000002b1 			; <UNDEFINED> instruction: 0x000002b1
     280:	00032910 	andeq	r2, r3, r0, lsl r9
     284:	000a0800 	andeq	r0, sl, r0, lsl #16
     288:	0a080108 	beq	2006b0 <__Stack_Size+0x2002b0>
     28c:	0a0a0800 	beq	282294 <__Stack_Size+0x281e94>
     290:	16020800 	strne	r0, [r2], -r0, lsl #16
     294:	09fa1103 	ldmibeq	sl!, {r0, r1, r8, ip}^
     298:	03000800 	movweq	r0, #2048	; 0x800
     29c:	08110000 	ldmdaeq	r1, {}	; <UNPREDICTABLE>
     2a0:	8d08000a 	stchi	0, cr0, [r8, #-40]	; 0xffffffd8
     2a4:	11000003 	tstne	r0, r3
     2a8:	08000a0e 	stmdaeq	r0, {r1, r2, r3, r9, fp}
     2ac:	0000039b 	muleq	r0, fp, r3
     2b0:	07011200 	streq	r1, [r1, -r0, lsl #4]
     2b4:	02000002 	andeq	r0, r0, #2
     2b8:	d001060a 	andle	r0, r1, sl, lsl #12
     2bc:	dc080001 	stcle	0, cr0, [r8], {1}
     2c0:	02080001 	andeq	r0, r8, #1
     2c4:	e001007d 	and	r0, r1, sp, ror r0
     2c8:	13000002 	movwne	r0, #2
     2cc:	00000197 	muleq	r0, r7, r1
     2d0:	70150a02 	andsvc	r0, r5, r2, lsl #20
     2d4:	26000000 	strcs	r0, [r0], -r0
     2d8:	20000000 	andcs	r0, r0, r0
     2dc:	00000000 	andeq	r0, r0, r0
     2e0:	019c0114 	orrseq	r0, ip, r4, lsl r1
     2e4:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
     2e8:	01ce011c 	biceq	r0, lr, ip, lsl r1
     2ec:	01d00800 	bicseq	r0, r0, r0, lsl #16
     2f0:	7d020800 	stcvc	8, cr0, [r2, #-0]
     2f4:	01150100 	tsteq	r5, r0, lsl #2
     2f8:	00000631 	andeq	r0, r0, r1, lsr r6
     2fc:	011c0702 	tsteq	ip, r2, lsl #14
     300:	00b70116 	adcseq	r0, r7, r6, lsl r1
     304:	0d010000 	stceq	0, cr0, [r1, #-0]
     308:	00003008 	andeq	r3, r0, r8
     30c:	03290100 			; <UNDEFINED> instruction: 0x03290100
     310:	69170000 	ldmdbvs	r7, {}	; <UNPREDICTABLE>
     314:	070e0100 	streq	r0, [lr, -r0, lsl #2]
     318:	0000008f 	andeq	r0, r0, pc, lsl #1
     31c:	706d7417 	rsbvc	r7, sp, r7, lsl r4
     320:	0c0f0100 	stfeqs	f0, [pc], {-0}
     324:	00000070 	andeq	r0, r0, r0, ror r0
     328:	00cb1800 	sbceq	r1, fp, r0, lsl #16
     32c:	b4030000 	strlt	r0, [r3], #-0
     330:	19031604 	stmdbne	r3, {r2, r9, sl, ip}
     334:	00000300 	andeq	r0, r0, r0, lsl #6
     338:	08000120 	stmdaeq	r0, {r5, r8}
     33c:	080001cc 	stmdaeq	r0, {r2, r3, r6, r7, r8}
     340:	01007d02 	tsteq	r0, r2, lsl #26
     344:	0000038d 	andeq	r0, r0, sp, lsl #7
     348:	0003121a 	andeq	r1, r3, sl, lsl r2
     34c:	00005b00 	andeq	r5, r0, r0, lsl #22
     350:	00005100 	andeq	r5, r0, r0, lsl #2
     354:	031c1b00 	tsteq	ip, #0, 22
     358:	001c0000 	andseq	r0, ip, r0
     35c:	72000003 	andvc	r0, r0, #3
     360:	02080001 	andeq	r0, r8, #1
     364:	00000000 	andeq	r0, r0, r0
     368:	1d080d01 	stcne	13, cr0, [r8, #-4]
     36c:	00000000 	andeq	r0, r0, r0
     370:	0003121a 	andeq	r1, r3, sl, lsl r2
     374:	0000c400 	andeq	ip, r0, r0, lsl #8
     378:	0000b000 	andeq	fp, r0, r0
     37c:	031c1a00 	tsteq	ip, #0, 20
     380:	01810000 	orreq	r0, r1, r0
     384:	01690000 	cmneq	r9, r0
     388:	00000000 	andeq	r0, r0, r0
     38c:	01011e00 	tsteq	r1, r0, lsl #28
     390:	000001fd 	strdeq	r0, [r0], -sp
     394:	000001fd 	strdeq	r0, [r0], -sp
     398:	1e062407 	cdpne	4, 0, cr2, cr6, cr7, {0}
     39c:	00d80101 	sbcseq	r0, r8, r1, lsl #2
     3a0:	00d80000 	sbcseq	r0, r8, r0
     3a4:	42070000 	andmi	r0, r7, #0
     3a8:	129b0006 	addsne	r0, fp, #6
     3ac:	00020000 	andeq	r0, r2, r0
     3b0:	000001e2 	andeq	r0, r0, r2, ror #3
     3b4:	000a0104 	andeq	r0, sl, r4, lsl #2
     3b8:	3c0c0000 	stccc	0, cr0, [ip], {-0}
     3bc:	72000005 	andvc	r0, r0, #5
     3c0:	dc000001 	stcle	0, cr0, [r0], {1}
     3c4:	c8080001 	stmdagt	r8, {r0}
     3c8:	38080007 	stmdacc	r8, {r0, r1, r2}
     3cc:	02000002 	andeq	r0, r0, #2
     3d0:	011f0601 	tsteq	pc, r1, lsl #12
     3d4:	02020000 	andeq	r0, r2, #0
     3d8:	0001de05 	andeq	sp, r1, r5, lsl #28
     3dc:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
     3e0:	000001ac 	andeq	r0, r0, ip, lsr #3
     3e4:	a7050802 	strge	r0, [r5, -r2, lsl #16]
     3e8:	03000001 	movweq	r0, #1
     3ec:	0000016a 	andeq	r0, r0, sl, ror #2
     3f0:	57182e04 	ldrpl	r2, [r8, -r4, lsl #28]
     3f4:	04000000 	streq	r0, [r0], #-0
     3f8:	00000041 	andeq	r0, r0, r1, asr #32
     3fc:	00004105 	andeq	r4, r0, r5, lsl #2
     400:	08010200 	stmdaeq	r1, {r9}
     404:	0000011d 	andeq	r0, r0, sp, lsl r1
     408:	00057603 	andeq	r7, r5, r3, lsl #12
     40c:	19310400 	ldmdbne	r1!, {sl}
     410:	0000006f 	andeq	r0, r0, pc, rrx
     414:	00005e04 	andeq	r5, r0, r4, lsl #28
     418:	07020200 	streq	r0, [r2, -r0, lsl #4]
     41c:	000000f5 	strdeq	r0, [r0], -r5
     420:	0001f403 	andeq	pc, r1, r3, lsl #8
     424:	19340400 	ldmdbne	r4!, {sl}
     428:	00000087 	andeq	r0, r0, r7, lsl #1
     42c:	00007604 	andeq	r7, r0, r4, lsl #12
     430:	07040200 	streq	r0, [r4, -r0, lsl #4]
     434:	00000158 	andeq	r0, r0, r8, asr r1
     438:	53070802 	movwpl	r0, #30722	; 0x7802
     43c:	06000001 	streq	r0, [r0], -r1
     440:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
     444:	95040074 	strls	r0, [r4, #-116]	; 0xffffff8c
     448:	02000000 	andeq	r0, r0, #0
     44c:	015d0704 	cmpeq	sp, r4, lsl #14
     450:	09030000 	stmdbeq	r3, {}	; <UNPREDICTABLE>
     454:	03000005 	movweq	r0, #5
     458:	00b40f1a 	adcseq	r0, r4, sl, lsl pc
     45c:	04070000 	streq	r0, [r7], #-0
     460:	000000ba 	strheq	r0, [r0], -sl
     464:	00c60108 	sbceq	r0, r6, r8, lsl #2
     468:	41090000 	mrsmi	r0, (UNDEF: 9)
     46c:	00000000 	andeq	r0, r0, r0
     470:	1b03080a 	blne	c24a0 <__Stack_Size+0xc20a0>
     474:	00011b09 	andeq	r1, r1, r9, lsl #22
     478:	02900b00 	addseq	r0, r0, #0, 22
     47c:	1c030000 	stcne	0, cr0, [r3], {-0}
     480:	0000410b 	andeq	r4, r0, fp, lsl #2
     484:	00230200 	eoreq	r0, r3, r0, lsl #4
     488:	0006750b 	andeq	r7, r6, fp, lsl #10
     48c:	0b1d0300 	bleq	741094 <__Stack_Size+0x740c94>
     490:	00000041 	andeq	r0, r0, r1, asr #32
     494:	0b012302 	bleq	490a4 <__Stack_Size+0x48ca4>
     498:	00000313 	andeq	r0, r0, r3, lsl r3
     49c:	5e0c1e03 	cdppl	14, 0, cr1, cr12, cr3, {0}
     4a0:	02000000 	andeq	r0, r0, #0
     4a4:	220b0223 	andcs	r0, fp, #805306370	; 0x30000002
     4a8:	03000002 	movweq	r0, #2
     4ac:	005e0c1f 	subseq	r0, lr, pc, lsl ip
     4b0:	23020000 	movwcs	r0, #8192	; 0x2000
     4b4:	064b0b04 	strbeq	r0, [fp], -r4, lsl #22
     4b8:	20030000 	andcs	r0, r3, r0
     4bc:	00005e0c 	andeq	r5, r0, ip, lsl #28
     4c0:	06230200 	strteq	r0, [r3], -r0, lsl #4
     4c4:	06f50300 	ldrbteq	r0, [r5], r0, lsl #6
     4c8:	21030000 	mrscs	r0, (UNDEF: 3)
     4cc:	0000c602 	andeq	ip, r0, r2, lsl #12
     4d0:	01050c00 	tsteq	r5, r0, lsl #24
     4d4:	00000025 	andeq	r0, r0, r5, lsr #32
     4d8:	6e015805 	cdpvs	8, 0, cr5, cr1, cr5, {0}
     4dc:	0d000002 	stceq	0, cr0, [r0, #-8]
     4e0:	00000637 	andeq	r0, r0, r7, lsr r6
     4e4:	07d60d72 			; <UNDEFINED> instruction: 0x07d60d72
     4e8:	0d730000 	ldcleq	0, cr0, [r3, #-0]
     4ec:	0000031a 	andeq	r0, r0, sl, lsl r3
     4f0:	04d80d74 	ldrbeq	r0, [r8], #3444	; 0xd74
     4f4:	0d750000 	ldcleq	0, cr0, [r5, #-0]
     4f8:	0000072f 	andeq	r0, r0, pc, lsr #14
     4fc:	07760d76 			; <UNDEFINED> instruction: 0x07760d76
     500:	0d7b0000 	ldcleq	0, cr0, [fp, #-0]
     504:	0000071d 	andeq	r0, r0, sp, lsl r7
     508:	02fe0d7c 	rscseq	r0, lr, #124, 26	; 0x1f00
     50c:	0d7e0000 	ldcleq	0, cr0, [lr, #-0]
     510:	000006b9 			; <UNDEFINED> instruction: 0x000006b9
     514:	04b40e7f 	ldrteq	r0, [r4], #3711	; 0xe7f
     518:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
     51c:	00000500 	andeq	r0, r0, r0, lsl #10
     520:	08210e01 	stmdaeq	r1!, {r0, r9, sl, fp}
     524:	0e020000 	cdpeq	0, 0, cr0, cr2, cr0, {0}
     528:	000005ad 	andeq	r0, r0, sp, lsr #11
     52c:	02ab0e03 	adceq	r0, fp, #3, 28	; 0x30
     530:	0e040000 	cdpeq	0, 0, cr0, cr4, cr0, {0}
     534:	0000030a 	andeq	r0, r0, sl, lsl #6
     538:	02c00e05 	sbceq	r0, r0, #5, 28	; 0x50
     53c:	0e060000 	cdpeq	0, 0, cr0, cr6, cr0, {0}
     540:	0000066a 	andeq	r0, r0, sl, ror #12
     544:	04390e07 	ldrteq	r0, [r9], #-3591	; 0xfffff1f9
     548:	0e080000 	cdpeq	0, 0, cr0, cr8, cr0, {0}
     54c:	000007c4 	andeq	r0, r0, r4, asr #15
     550:	04e60e09 	strbteq	r0, [r6], #3593	; 0xe09
     554:	0e0a0000 	cdpeq	0, 0, cr0, cr10, cr0, {0}
     558:	0000048d 	andeq	r0, r0, sp, lsl #9
     55c:	02710e0b 	rsbseq	r0, r1, #11, 28	; 0xb0
     560:	0e0c0000 	cdpeq	0, 0, cr0, cr12, cr0, {0}
     564:	00000529 	andeq	r0, r0, r9, lsr #10
     568:	03730e0d 	cmneq	r3, #13, 28	; 0xd0
     56c:	0e0e0000 	cdpeq	0, 0, cr0, cr14, cr0, {0}
     570:	000007a2 	andeq	r0, r0, r2, lsr #15
     574:	04630e0f 	strbteq	r0, [r3], #-3599	; 0xfffff1f1
     578:	0e100000 	cdpeq	0, 1, cr0, cr0, cr0, {0}
     57c:	00000247 	andeq	r0, r0, r7, asr #4
     580:	07ff0e11 			; <UNDEFINED> instruction: 0x07ff0e11
     584:	0e120000 	cdpeq	0, 1, cr0, cr2, cr0, {0}
     588:	000003d7 	ldrdeq	r0, [r0], -r7
     58c:	020d0e13 	andeq	r0, sp, #304	; 0x130
     590:	0e140000 	cdpeq	0, 1, cr0, cr4, cr0, {0}
     594:	000003a7 	andeq	r0, r0, r7, lsr #7
     598:	02390e15 	eorseq	r0, r9, #336	; 0x150
     59c:	0e160000 	cdpeq	0, 1, cr0, cr6, cr0, {0}
     5a0:	00000769 	andeq	r0, r0, r9, ror #14
     5a4:	03440e17 	movteq	r0, #19991	; 0x4e17
     5a8:	0e180000 	cdpeq	0, 1, cr0, cr8, cr0, {0}
     5ac:	0000058c 	andeq	r0, r0, ip, lsl #11
     5b0:	068d0e19 	pkhbteq	r0, sp, r9, lsl #28
     5b4:	0e1a0000 	cdpeq	0, 1, cr0, cr10, cr0, {0}
     5b8:	00000653 	andeq	r0, r0, r3, asr r6
     5bc:	06d40e1b 			; <UNDEFINED> instruction: 0x06d40e1b
     5c0:	0e1c0000 	cdpeq	0, 1, cr0, cr12, cr0, {0}
     5c4:	00000483 	andeq	r0, r0, r3, lsl #9
     5c8:	02670e1d 	rsbeq	r0, r7, #464	; 0x1d0
     5cc:	0e1e0000 	cdpeq	0, 1, cr0, cr14, cr0, {0}
     5d0:	0000054a 	andeq	r0, r0, sl, asr #10
     5d4:	06ac0e1f 	ssateq	r0, #13, pc, lsl #28	; <UNPREDICTABLE>
     5d8:	0e200000 	cdpeq	0, 2, cr0, cr0, cr0, {0}
     5dc:	00000444 	andeq	r0, r0, r4, asr #8
     5e0:	025a0e21 	subseq	r0, sl, #528	; 0x210
     5e4:	0e220000 	cdpeq	0, 2, cr0, cr2, cr0, {0}
     5e8:	0000035b 	andeq	r0, r0, fp, asr r3
     5ec:	07870e23 	streq	r0, [r7, r3, lsr #28]
     5f0:	0e240000 	cdpeq	0, 2, cr0, cr4, cr0, {0}
     5f4:	0000061f 	andeq	r0, r0, pc, lsl r6
     5f8:	03fe0e25 	mvnseq	r0, #592	; 0x250
     5fc:	0e260000 	cdpeq	0, 2, cr0, cr6, cr0, {0}
     600:	00000815 	andeq	r0, r0, r5, lsl r8
     604:	02e60e27 	rsceq	r0, r6, #624	; 0x270
     608:	0e280000 	cdpeq	0, 2, cr0, cr8, cr0, {0}
     60c:	0000059e 	muleq	r0, lr, r5
     610:	04a50e29 	strteq	r0, [r5], #3625	; 0xe29
     614:	002a0000 	eoreq	r0, sl, r0
     618:	0003eb03 	andeq	lr, r3, r3, lsl #22
     61c:	03900500 	orrseq	r0, r0, #0, 10
     620:	00000127 	andeq	r0, r0, r7, lsr #2
     624:	020e040f 	andeq	r0, lr, #251658240	; 0xf000000
     628:	03520984 	cmpeq	r2, #132, 18	; 0x210000
     62c:	3f0b0000 	svccc	0x000b0000
     630:	02000003 	andeq	r0, r0, #3
     634:	03621186 	cmneq	r2, #-2147483615	; 0x80000021
     638:	23020000 	movwcs	r0, #8192	; 0x2000
     63c:	05bb0b00 	ldreq	r0, [fp, #2816]!	; 0xb00
     640:	87020000 	strhi	r0, [r2, -r0]
     644:	00036711 	andeq	r6, r3, r1, lsl r7
     648:	20230200 	eorcs	r0, r3, r0, lsl #4
     64c:	0007820b 	andeq	r8, r7, fp, lsl #4
     650:	11880200 	orrne	r0, r8, r0, lsl #4
     654:	00000362 	andeq	r0, r0, r2, ror #6
     658:	01802303 	orreq	r2, r0, r3, lsl #6
     65c:	0003520b 	andeq	r5, r3, fp, lsl #4
     660:	11890200 	orrne	r0, r9, r0, lsl #4
     664:	00000367 	andeq	r0, r0, r7, ror #6
     668:	01a02303 	lsleq	r2, r3, #6
     66c:	0007e50b 	andeq	lr, r7, fp, lsl #10
     670:	118a0200 	orrne	r0, sl, r0, lsl #4
     674:	00000362 	andeq	r0, r0, r2, ror #6
     678:	02802303 	addeq	r2, r0, #201326592	; 0xc000000
     67c:	0005cf0b 	andeq	ip, r5, fp, lsl #30
     680:	118b0200 	orrne	r0, fp, r0, lsl #4
     684:	00000367 	andeq	r0, r0, r7, ror #6
     688:	02a02303 	adceq	r2, r0, #201326592	; 0xc000000
     68c:	00051f0b 	andeq	r1, r5, fp, lsl #30
     690:	118c0200 	orrne	r0, ip, r0, lsl #4
     694:	00000362 	andeq	r0, r0, r2, ror #6
     698:	03802303 	orreq	r2, r0, #201326592	; 0xc000000
     69c:	0005d90b 	andeq	sp, r5, fp, lsl #18
     6a0:	118d0200 	orrne	r0, sp, r0, lsl #4
     6a4:	00000367 	andeq	r0, r0, r7, ror #6
     6a8:	03a02303 	moveq	r2, #201326592	; 0xc000000
     6ac:	0007910b 	andeq	r9, r7, fp, lsl #2
     6b0:	118e0200 	orrne	r0, lr, r0, lsl #4
     6b4:	00000362 	andeq	r0, r0, r2, ror #6
     6b8:	04802303 	streq	r2, [r0], #771	; 0x303
     6bc:	0005e30b 	andeq	lr, r5, fp, lsl #6
     6c0:	118f0200 	orrne	r0, pc, r0, lsl #4
     6c4:	00000377 	andeq	r0, r0, r7, ror r3
     6c8:	04a02303 	strteq	r2, [r0], #771	; 0x303
     6cc:	00504910 	subseq	r4, r0, r0, lsl r9
     6d0:	97119002 	ldrls	r9, [r1, -r2]
     6d4:	03000003 	movweq	r0, #3
     6d8:	0b068023 	bleq	1a076c <__Stack_Size+0x1a036c>
     6dc:	000005ed 	andeq	r0, r0, sp, ror #11
     6e0:	9c119102 	ldflsd	f1, [r1], {2}
     6e4:	03000003 	movweq	r0, #3
     6e8:	0b07f023 	bleq	1fc77c <__Stack_Size+0x1fc37c>
     6ec:	00000599 	muleq	r0, r9, r5
     6f0:	82119202 	andshi	r9, r1, #536870912	; 0x20000000
     6f4:	03000000 	movweq	r0, #0
     6f8:	001c8023 	andseq	r8, ip, r3, lsr #32
     6fc:	00008211 	andeq	r8, r0, r1, lsl r2
     700:	00036200 	andeq	r6, r3, r0, lsl #4
     704:	00a11200 	adceq	r1, r1, r0, lsl #4
     708:	00070000 	andeq	r0, r7, r0
     70c:	00035204 	andeq	r5, r3, r4, lsl #4
     710:	00761100 	rsbseq	r1, r6, r0, lsl #2
     714:	03770000 	cmneq	r7, #0
     718:	a1120000 	tstge	r2, r0
     71c:	17000000 	strne	r0, [r0, -r0]
     720:	00761100 	rsbseq	r1, r6, r0, lsl #2
     724:	03870000 	orreq	r0, r7, #0
     728:	a1120000 	tstge	r2, r0
     72c:	37000000 	strcc	r0, [r0, -r0]
     730:	004d1100 	subeq	r1, sp, r0, lsl #2
     734:	03970000 	orrseq	r0, r7, #0
     738:	a1120000 	tstge	r2, r0
     73c:	ef000000 	svc	0x00000000
     740:	03870400 	orreq	r0, r7, #0, 8
     744:	76110000 	ldrvc	r0, [r1], -r0
     748:	ad000000 	stcge	0, cr0, [r0, #-0]
     74c:	13000003 	movwne	r0, #3
     750:	000000a1 	andeq	r0, r0, r1, lsr #1
     754:	03000283 	movweq	r0, #643	; 0x283
     758:	0000067e 	andeq	r0, r0, lr, ror r6
     75c:	7a049302 	bvc	12536c <__Stack_Size+0x124f6c>
     760:	14000002 	strne	r0, [r0], #-2
     764:	00000108 	andeq	r0, r0, r8, lsl #2
     768:	1506ce02 	strne	ip, [r6, #-3586]	; 0xfffff1fe
     76c:	0000009c 	muleq	r0, ip, r0
     770:	b5150101 	ldrlt	r0, [r5, #-257]	; 0xfffffeff
     774:	06000001 	streq	r0, [r0], -r1
     778:	00761145 	rsbseq	r1, r6, r5, asr #2
     77c:	01010000 	mrseq	r0, (UNDEF: 1)
     780:	00005211 	andeq	r5, r0, r1, lsl r2
     784:	0003e600 	andeq	lr, r3, r0, lsl #12
     788:	00a11200 	adceq	r1, r1, r0, lsl #4
     78c:	000f0000 	andeq	r0, pc, r0
     790:	0003d605 	andeq	sp, r3, r5, lsl #12
     794:	00e71500 	rsceq	r1, r7, r0, lsl #10
     798:	46060000 	strmi	r0, [r6], -r0
     79c:	0003e617 	andeq	lr, r3, r7, lsl r6
     7a0:	11010100 	mrsne	r0, (UNDEF: 17)
     7a4:	00000052 	andeq	r0, r0, r2, asr r0
     7a8:	00000409 	andeq	r0, r0, r9, lsl #8
     7ac:	0000a112 	andeq	sl, r0, r2, lsl r1
     7b0:	05000700 	streq	r0, [r0, #-1792]	; 0xfffff900
     7b4:	000003f9 	strdeq	r0, [r0], -r9
     7b8:	0001d015 	andeq	sp, r1, r5, lsl r0
     7bc:	17470600 	strbne	r0, [r7, -r0, lsl #12]
     7c0:	00000409 	andeq	r0, r0, r9, lsl #8
     7c4:	1c160101 	ldfnes	f0, [r6], {1}
     7c8:	09017905 	stmdbeq	r1, {r0, r2, r8, fp, ip, sp, lr}
     7cc:	00000497 	muleq	r0, r7, r4
     7d0:	4c524317 	mrrcmi	3, 1, r4, r2, cr7
     7d4:	017b0500 	cmneq	fp, r0, lsl #10
     7d8:	00008211 	andeq	r8, r0, r1, lsl r2
     7dc:	00230200 	eoreq	r0, r3, r0, lsl #4
     7e0:	48524317 	ldmdami	r2, {r0, r1, r2, r4, r8, r9, lr}^
     7e4:	017c0500 	cmneq	ip, r0, lsl #10
     7e8:	00008211 	andeq	r8, r0, r1, lsl r2
     7ec:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     7f0:	52444917 	subpl	r4, r4, #376832	; 0x5c000
     7f4:	017d0500 	cmneq	sp, r0, lsl #10
     7f8:	00008211 	andeq	r8, r0, r1, lsl r2
     7fc:	08230200 	stmdaeq	r3!, {r9}
     800:	52444f17 	subpl	r4, r4, #23, 30	; 0x5c
     804:	017e0500 	cmneq	lr, r0, lsl #10
     808:	00008211 	andeq	r8, r0, r1, lsl r2
     80c:	0c230200 	sfmeq	f0, 4, [r3], #-0
     810:	00022f18 	andeq	r2, r2, r8, lsl pc
     814:	017f0500 	cmneq	pc, r0, lsl #10
     818:	00008211 	andeq	r8, r0, r1, lsl r2
     81c:	10230200 	eorne	r0, r3, r0, lsl #4
     820:	52524217 	subspl	r4, r2, #1879048193	; 0x70000001
     824:	01800500 	orreq	r0, r0, r0, lsl #10
     828:	00008211 	andeq	r8, r0, r1, lsl r2
     82c:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     830:	00083718 	andeq	r3, r8, r8, lsl r7
     834:	01810500 	orreq	r0, r1, r0, lsl #10
     838:	00008211 	andeq	r8, r0, r1, lsl r2
     83c:	18230200 	stmdane	r3!, {r9}
     840:	069f1900 	ldreq	r1, [pc], r0, lsl #18
     844:	82050000 	andhi	r0, r5, #0
     848:	041c0301 	ldreq	r0, [ip], #-769	; 0xfffffcff
     84c:	28160000 	ldmdacs	r6, {}	; <UNPREDICTABLE>
     850:	0901bb05 	stmdbeq	r1, {r0, r2, r8, r9, fp, ip, sp, pc}
     854:	0000054e 	andeq	r0, r0, lr, asr #10
     858:	00524317 	subseq	r4, r2, r7, lsl r3
     85c:	1101bd05 	tstne	r1, r5, lsl #26
     860:	00000082 	andeq	r0, r0, r2, lsl #1
     864:	18002302 	stmdane	r0, {r1, r8, r9, sp}
     868:	00000005 	andeq	r0, r0, r5
     86c:	1101be05 	tstne	r1, r5, lsl #28
     870:	00000082 	andeq	r0, r0, r2, lsl #1
     874:	17042302 	strne	r2, [r4, -r2, lsl #6]
     878:	00524943 	subseq	r4, r2, r3, asr #18
     87c:	1101bf05 	tstne	r1, r5, lsl #30
     880:	00000082 	andeq	r0, r0, r2, lsl #1
     884:	18082302 	stmdane	r8, {r1, r8, r9, sp}
     888:	0000014a 	andeq	r0, r0, sl, asr #2
     88c:	1101c005 	tstne	r1, r5
     890:	00000082 	andeq	r0, r0, r2, lsl #1
     894:	180c2302 	stmdane	ip, {r1, r8, r9, sp}
     898:	00000134 	andeq	r0, r0, r4, lsr r1
     89c:	1101c105 	tstne	r1, r5, lsl #2
     8a0:	00000082 	andeq	r0, r0, r2, lsl #1
     8a4:	18102302 	ldmdane	r0, {r1, r8, r9, sp}
     8a8:	000000ab 	andeq	r0, r0, fp, lsr #1
     8ac:	1101c205 	tstne	r1, r5, lsl #4
     8b0:	00000082 	andeq	r0, r0, r2, lsl #1
     8b4:	18142302 	ldmdane	r4, {r1, r8, r9, sp}
     8b8:	000000c3 	andeq	r0, r0, r3, asr #1
     8bc:	1101c305 	tstne	r1, r5, lsl #6
     8c0:	00000082 	andeq	r0, r0, r2, lsl #1
     8c4:	18182302 	ldmdane	r8, {r1, r8, r9, sp}
     8c8:	00000142 	andeq	r0, r0, r2, asr #2
     8cc:	1101c405 	tstne	r1, r5, lsl #8
     8d0:	00000082 	andeq	r0, r0, r2, lsl #1
     8d4:	181c2302 	ldmdane	ip, {r1, r8, r9, sp}
     8d8:	00000000 	andeq	r0, r0, r0
     8dc:	1101c505 	tstne	r1, r5, lsl #10
     8e0:	00000082 	andeq	r0, r0, r2, lsl #1
     8e4:	17202302 	strne	r2, [r0, -r2, lsl #6]!
     8e8:	00525343 	subseq	r5, r2, r3, asr #6
     8ec:	1101c605 	tstne	r1, r5, lsl #12
     8f0:	00000082 	andeq	r0, r0, r2, lsl #1
     8f4:	00242302 	eoreq	r2, r4, r2, lsl #6
     8f8:	0001e819 	andeq	lr, r1, r9, lsl r8
     8fc:	01c90500 	biceq	r0, r9, r0, lsl #10
     900:	0004a403 	andeq	sl, r4, r3, lsl #8
     904:	05541600 	ldrbeq	r1, [r4, #-1536]	; 0xfffffa00
     908:	06090239 			; <UNDEFINED> instruction: 0x06090239
     90c:	18000007 	stmdane	r0, {r0, r1, r2}
     910:	00000418 	andeq	r0, r0, r8, lsl r4
     914:	11023b05 	tstne	r2, r5, lsl #22
     918:	0000006a 	andeq	r0, r0, sl, rrx
     91c:	18002302 	stmdane	r0, {r1, r8, r9, sp}
     920:	000005bb 			; <UNDEFINED> instruction: 0x000005bb
     924:	11023c05 	tstne	r2, r5, lsl #24
     928:	0000006a 	andeq	r0, r0, sl, rrx
     92c:	18022302 	stmdane	r2, {r1, r8, r9, sp}
     930:	00000451 	andeq	r0, r0, r1, asr r4
     934:	11023d05 	tstne	r2, r5, lsl #26
     938:	0000006a 	andeq	r0, r0, sl, rrx
     93c:	18042302 	stmdane	r4, {r1, r8, r9, sp}
     940:	000005c5 	andeq	r0, r0, r5, asr #11
     944:	11023e05 	tstne	r2, r5, lsl #28
     948:	0000006a 	andeq	r0, r0, sl, rrx
     94c:	18062302 	stmdane	r6, {r1, r8, r9, sp}
     950:	000004a0 	andeq	r0, r0, r0, lsr #9
     954:	11023f05 	tstne	r2, r5, lsl #30
     958:	0000006a 	andeq	r0, r0, sl, rrx
     95c:	18082302 	stmdane	r8, {r1, r8, r9, sp}
     960:	000005cf 	andeq	r0, r0, pc, asr #11
     964:	11024005 	tstne	r2, r5
     968:	0000006a 	andeq	r0, r0, sl, rrx
     96c:	180a2302 	stmdane	sl, {r1, r8, r9, sp}
     970:	000004d3 	ldrdeq	r0, [r0], -r3
     974:	11024105 	tstne	r2, r5, lsl #2
     978:	0000006a 	andeq	r0, r0, sl, rrx
     97c:	180c2302 	stmdane	ip, {r1, r8, r9, sp}
     980:	000005d9 	ldrdeq	r0, [r0], -r9
     984:	11024205 	tstne	r2, r5, lsl #4
     988:	0000006a 	andeq	r0, r0, sl, rrx
     98c:	180e2302 	stmdane	lr, {r1, r8, r9, sp}
     990:	00000524 	andeq	r0, r0, r4, lsr #10
     994:	11024305 	tstne	r2, r5, lsl #6
     998:	0000006a 	andeq	r0, r0, sl, rrx
     99c:	18102302 	ldmdane	r0, {r1, r8, r9, sp}
     9a0:	000005e3 	andeq	r0, r0, r3, ror #11
     9a4:	11024405 	tstne	r2, r5, lsl #8
     9a8:	0000006a 	andeq	r0, r0, sl, rrx
     9ac:	18122302 	ldmdane	r2, {r1, r8, r9, sp}
     9b0:	000005b6 			; <UNDEFINED> instruction: 0x000005b6
     9b4:	11024505 	tstne	r2, r5, lsl #10
     9b8:	0000006a 	andeq	r0, r0, sl, rrx
     9bc:	18142302 	ldmdane	r4, {r1, r8, r9, sp}
     9c0:	000005ed 	andeq	r0, r0, sp, ror #11
     9c4:	11024605 	tstne	r2, r5, lsl #12
     9c8:	0000006a 	andeq	r0, r0, sl, rrx
     9cc:	18162302 	ldmdane	r6, {r1, r8, r9, sp}
     9d0:	00000660 	andeq	r0, r0, r0, ror #12
     9d4:	11024705 	tstne	r2, r5, lsl #14
     9d8:	0000006a 	andeq	r0, r0, sl, rrx
     9dc:	18182302 	ldmdane	r8, {r1, r8, r9, sp}
     9e0:	000005f7 	strdeq	r0, [r0], -r7
     9e4:	11024805 	tstne	r2, r5, lsl #16
     9e8:	0000006a 	andeq	r0, r0, sl, rrx
     9ec:	181a2302 	ldmdane	sl, {r1, r8, r9, sp}
     9f0:	000006f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     9f4:	11024905 	tstne	r2, r5, lsl #18
     9f8:	0000006a 	andeq	r0, r0, sl, rrx
     9fc:	181c2302 	ldmdane	ip, {r1, r8, r9, sp}
     a00:	0000080b 	andeq	r0, r0, fp, lsl #16
     a04:	11024a05 	tstne	r2, r5, lsl #20
     a08:	00000716 	andeq	r0, r0, r6, lsl r7
     a0c:	181e2302 	ldmdane	lr, {r1, r8, r9, sp}
     a10:	00000688 	andeq	r0, r0, r8, lsl #13
     a14:	11024b05 	tstne	r2, r5, lsl #22
     a18:	0000006a 	andeq	r0, r0, sl, rrx
     a1c:	18402302 	stmdane	r0, {r1, r8, r9, sp}^
     a20:	00000601 	andeq	r0, r0, r1, lsl #12
     a24:	11024c05 	tstne	r2, r5, lsl #24
     a28:	0000006a 	andeq	r0, r0, sl, rrx
     a2c:	18422302 	stmdane	r2, {r1, r8, r9, sp}^
     a30:	0000033a 	andeq	r0, r0, sl, lsr r3
     a34:	11024d05 	tstne	r2, r5, lsl #26
     a38:	0000006a 	andeq	r0, r0, sl, rrx
     a3c:	18442302 	stmdane	r4, {r1, r8, r9, sp}^
     a40:	0000060b 	andeq	r0, r0, fp, lsl #12
     a44:	11024e05 	tstne	r2, r5, lsl #28
     a48:	0000006a 	andeq	r0, r0, sl, rrx
     a4c:	17462302 	strbne	r2, [r6, -r2, lsl #6]
     a50:	00524e46 	subseq	r4, r2, r6, asr #28
     a54:	11024f05 	tstne	r2, r5, lsl #30
     a58:	0000006a 	andeq	r0, r0, sl, rrx
     a5c:	18482302 	stmdane	r8, {r1, r8, r9, sp}^
     a60:	00000615 	andeq	r0, r0, r5, lsl r6
     a64:	11025005 	tstne	r2, r5
     a68:	0000006a 	andeq	r0, r0, sl, rrx
     a6c:	184a2302 	stmdane	sl, {r1, r8, r9, sp}^
     a70:	000003a1 	andeq	r0, r0, r1, lsr #7
     a74:	11025105 	tstne	r2, r5, lsl #2
     a78:	0000006a 	andeq	r0, r0, sl, rrx
     a7c:	184c2302 	stmdane	ip, {r1, r8, r9, sp}^
     a80:	000003b5 			; <UNDEFINED> instruction: 0x000003b5
     a84:	11025205 	tstne	r2, r5, lsl #4
     a88:	0000006a 	andeq	r0, r0, sl, rrx
     a8c:	184e2302 	stmdane	lr, {r1, r8, r9, sp}^
     a90:	000007b5 			; <UNDEFINED> instruction: 0x000007b5
     a94:	11025305 	tstne	r2, r5, lsl #6
     a98:	0000006a 	andeq	r0, r0, sl, rrx
     a9c:	18502302 	ldmdane	r0, {r1, r8, r9, sp}^
     aa0:	0000082d 	andeq	r0, r0, sp, lsr #16
     aa4:	11025405 	tstne	r2, r5, lsl #8
     aa8:	0000006a 	andeq	r0, r0, sl, rrx
     aac:	00522302 	subseq	r2, r2, r2, lsl #6
     ab0:	00006a11 	andeq	r6, r0, r1, lsl sl
     ab4:	00071600 	andeq	r1, r7, r0, lsl #12
     ab8:	00a11200 	adceq	r1, r1, r0, lsl #4
     abc:	00100000 	andseq	r0, r0, r0
     ac0:	00070604 	andeq	r0, r7, r4, lsl #12
     ac4:	03951900 	orrseq	r1, r5, #0, 18
     ac8:	55050000 	strpl	r0, [r5, #-0]
     acc:	055b0302 	ldrbeq	r0, [fp, #-770]	; 0xfffffcfe
     ad0:	040a0000 	streq	r0, [sl], #-0
     ad4:	68072101 	stmdavs	r7, {r0, r8, sp}
     ad8:	1a000007 	bne	afc <__Stack_Size+0x6fc>
     adc:	00000516 	andeq	r0, r0, r6, lsl r5
     ae0:	76122201 	ldrvc	r2, [r2], -r1, lsl #4
     ae4:	04000000 	streq	r0, [r0], #-0
     ae8:	2302160a 	movwcs	r1, #9738	; 0x260a
     aec:	070f1a00 	streq	r1, [pc, -r0, lsl #20]
     af0:	23010000 	movwcs	r0, #4096	; 0x1000
     af4:	00007612 	andeq	r7, r0, r2, lsl r6
     af8:	11050400 	tstne	r5, r0, lsl #8
     afc:	1a002302 	bne	970c <__Stack_Size+0x930c>
     b00:	0000057f 	andeq	r0, r0, pc, ror r5
     b04:	76122401 	ldrvc	r2, [r2], -r1, lsl #8
     b08:	04000000 	streq	r0, [r0], #-0
     b0c:	23021001 	movwcs	r1, #8193	; 0x2001
     b10:	041b0000 	ldreq	r0, [fp], #-0
     b14:	830e1f01 	movwhi	r1, #61185	; 0xef01
     b18:	1c000007 	stcne	0, cr0, [r0], {7}
     b1c:	00000512 	andeq	r0, r0, r2, lsl r5
     b20:	76102001 	ldrvc	r2, [r0], -r1
     b24:	1d000000 	stcne	0, cr0, [r0, #-0]
     b28:	00000728 	andeq	r0, r0, r8, lsr #14
     b2c:	07680400 	strbeq	r0, [r8, -r0, lsl #8]!
     b30:	040a0000 	streq	r0, [sl], #-0
     b34:	c8072a01 	stmdagt	r7, {r0, r9, fp, sp}
     b38:	1a000007 	bne	b5c <__Stack_Size+0x75c>
     b3c:	000007ee 	andeq	r0, r0, lr, ror #15
     b40:	76122b01 	ldrvc	r2, [r2], -r1, lsl #22
     b44:	04000000 	streq	r0, [r0], #-0
     b48:	2302160a 	movwcs	r1, #9738	; 0x260a
     b4c:	05571a00 	ldrbeq	r1, [r7, #-2560]	; 0xfffff600
     b50:	2c010000 	stccs	0, cr0, [r1], {-0}
     b54:	00007612 	andeq	r7, r0, r2, lsl r6
     b58:	11050400 	tstne	r5, r0, lsl #8
     b5c:	1a002302 	bne	976c <__Stack_Size+0x936c>
     b60:	0000073f 	andeq	r0, r0, pc, lsr r7
     b64:	76122d01 	ldrvc	r2, [r2], -r1, lsl #26
     b68:	04000000 	streq	r0, [r0], #-0
     b6c:	23021001 	movwcs	r1, #8193	; 0x2001
     b70:	041b0000 	ldreq	r0, [fp], #-0
     b74:	e30e2801 	movw	r2, #59393	; 0xe801
     b78:	1c000007 	stcne	0, cr0, [r0], {7}
     b7c:	000007ea 	andeq	r0, r0, sl, ror #15
     b80:	76102901 	ldrvc	r2, [r0], -r1, lsl #18
     b84:	1d000000 	stcne	0, cr0, [r0, #-0]
     b88:	00000788 	andeq	r0, r0, r8, lsl #15
     b8c:	07c80400 	strbeq	r0, [r8, r0, lsl #8]
     b90:	100a0000 	andne	r0, sl, r0
     b94:	20091d01 	andcs	r1, r9, r1, lsl #26
     b98:	0b000008 	bleq	bc0 <__Stack_Size+0x7c0>
     b9c:	00000796 	muleq	r0, r6, r7
     ba0:	82171e01 	andshi	r1, r7, #1, 28
     ba4:	02000000 	andeq	r0, r0, #0
     ba8:	831e0023 	tsthi	lr, #35	; 0x23
     bac:	02000007 	andeq	r0, r0, #7
     bb0:	030b0423 	movweq	r0, #46115	; 0xb423
     bb4:	01000007 	tsteq	r0, r7
     bb8:	00821727 	addeq	r1, r2, r7, lsr #14
     bbc:	23020000 	movwcs	r0, #8192	; 0x2000
     bc0:	07e31e08 	strbeq	r1, [r3, r8, lsl #28]!
     bc4:	23020000 	movwcs	r0, #8192	; 0x2000
     bc8:	5603000c 	strpl	r0, [r3], -ip
     bcc:	01000004 	tsteq	r0, r4
     bd0:	07e80230 			; <UNDEFINED> instruction: 0x07e80230
     bd4:	a8110000 	ldmdage	r1, {}	; <UNPREDICTABLE>
     bd8:	3c000000 	stccc	0, cr0, [r0], {-0}
     bdc:	12000008 	andne	r0, r0, #8
     be0:	000000a1 	andeq	r0, r0, r1, lsr #1
     be4:	4c1f0007 	ldcmi	0, cr0, [pc], {7}
     be8:	01000007 	tsteq	r0, r7
     bec:	082c0a32 	stmdaeq	ip!, {r1, r4, r5, r9, fp}
     bf0:	05010000 	streq	r0, [r1, #-0]
     bf4:	00002403 	andeq	r2, r0, r3, lsl #8
     bf8:	04261f20 	strteq	r1, [r6], #-3872	; 0xfffff0e0
     bfc:	33010000 	movwcc	r0, #4096	; 0x1000
     c00:	00082c0a 	andeq	r2, r8, sl, lsl #24
     c04:	03050100 	movweq	r0, #20736	; 0x5100
     c08:	20000044 	andcs	r0, r0, r4, asr #32
     c0c:	00029e20 	andeq	r9, r2, r0, lsr #28
     c10:	16350100 	ldrtne	r0, [r5], -r0, lsl #2
     c14:	0000011b 	andeq	r0, r0, fp, lsl r1
     c18:	00140305 	andseq	r0, r4, r5, lsl #6
     c1c:	1d202000 	stcne	0, cr2, [r0, #-0]
     c20:	01000004 	tsteq	r0, r4
     c24:	00411047 	subeq	r1, r1, r7, asr #32
     c28:	03050000 	movweq	r0, #20480	; 0x5000
     c2c:	20000010 	andcs	r0, r0, r0, lsl r0
     c30:	00043120 	andeq	r3, r4, r0, lsr #2
     c34:	17480100 	strbne	r0, [r8, -r0, lsl #2]
     c38:	00000898 	muleq	r0, r8, r8
     c3c:	000c0305 	andeq	r0, ip, r5, lsl #6
     c40:	04072000 	streq	r2, [r7], #-0
     c44:	00000052 	andeq	r0, r0, r2, asr r0
     c48:	00033020 	andeq	r3, r3, r0, lsr #32
     c4c:	11490100 	mrsne	r0, (UNDEF: 89)
     c50:	0000005e 	andeq	r0, r0, lr, asr r0
     c54:	00120305 	andseq	r0, r2, r5, lsl #6
     c58:	0a202000 	beq	808c60 <__Stack_Size+0x808860>
     c5c:	01000004 	tsteq	r0, r4
     c60:	00411064 	subeq	r1, r1, r4, rrx
     c64:	03050000 	movweq	r0, #20480	; 0x5000
     c68:	2000001e 	andcs	r0, r0, lr, lsl r0
     c6c:	0002f520 	andeq	pc, r2, r0, lsr #10
     c70:	11aa0100 			; <UNDEFINED> instruction: 0x11aa0100
     c74:	0000005e 	andeq	r0, r0, lr, asr r0
     c78:	00000305 	andeq	r0, r0, r5, lsl #6
     c7c:	04162000 	ldreq	r2, [r6], #-0
     c80:	05013701 	streq	r3, [r1, #-1793]	; 0xfffff8ff
     c84:	00000918 	andeq	r0, r0, r8, lsl r9
     c88:	0007ee21 	andeq	lr, r7, r1, lsr #28
     c8c:	01380100 	teqeq	r8, r0, lsl #2
     c90:	00007610 	andeq	r7, r0, r0, lsl r6
     c94:	160a0400 	strne	r0, [sl], -r0, lsl #8
     c98:	21002302 	tstcs	r0, r2, lsl #6
     c9c:	00000557 	andeq	r0, r0, r7, asr r5
     ca0:	10013901 	andne	r3, r1, r1, lsl #18
     ca4:	00000076 	andeq	r0, r0, r6, ror r0
     ca8:	02110504 	andseq	r0, r1, #4, 10	; 0x1000000
     cac:	3f210023 	svccc	0x00210023
     cb0:	01000007 	tsteq	r0, r7
     cb4:	7610013a 			; <UNDEFINED> instruction: 0x7610013a
     cb8:	04000000 	streq	r0, [r0], #-0
     cbc:	23021001 	movwcs	r1, #8193	; 0x2001
     cc0:	04220000 	strteq	r0, [r2], #-0
     cc4:	0c013501 	cfstr32eq	mvfx3, [r1], {1}
     cc8:	00000935 	andeq	r0, r0, r5, lsr r9
     ccc:	00033423 	andeq	r3, r3, r3, lsr #8
     cd0:	01360100 	teqeq	r6, r0, lsl #2
     cd4:	0000760e 	andeq	r7, r0, lr, lsl #12
     cd8:	08d41d00 	ldmeq	r4, {r8, sl, fp, ip}^
     cdc:	04000000 	streq	r0, [r0], #-0
     ce0:	00000918 	andeq	r0, r0, r8, lsl r9
     ce4:	33010816 	movwcc	r0, #6166	; 0x1816
     ce8:	095d0901 	ldmdbeq	sp, {r0, r8, fp}^
     cec:	0a180000 	beq	600cf4 <__Stack_Size+0x6008f4>
     cf0:	01000007 	tsteq	r0, r7
     cf4:	82150134 	andshi	r0, r5, #52, 2
     cf8:	02000000 	andeq	r0, r0, #0
     cfc:	351e0023 	ldrcc	r0, [lr, #-35]	; 0xffffffdd
     d00:	02000009 	andeq	r0, r0, #9
     d04:	19000423 	stmdbne	r0, {r0, r1, r5, sl}
     d08:	00000284 	andeq	r0, r0, r4, lsl #5
     d0c:	02013d01 	andeq	r3, r1, #1, 26	; 0x40
     d10:	0000093a 	andeq	r0, r0, sl, lsr r9
     d14:	04760124 	ldrbteq	r0, [r6], #-292	; 0xfffffedc
     d18:	4d010000 	stcmi	0, cr0, [r1, #-0]
     d1c:	95010501 	strls	r0, [r1, #-1281]	; 0xfffffaff
     d20:	54000000 	strpl	r0, [r0], #-0
     d24:	ae080006 	cdpge	0, 0, cr0, cr8, cr6, {0}
     d28:	50080006 	andpl	r0, r8, r6
     d2c:	01000002 	tsteq	r0, r2
     d30:	00000a1e 	andeq	r0, r0, lr, lsl sl
     d34:	78646925 	stmdavc	r4!, {r0, r2, r5, r8, fp, sp, lr}^
     d38:	014d0100 	mrseq	r0, (UNDEF: 93)
     d3c:	0000411a 	andeq	r4, r0, sl, lsl r1
     d40:	00027400 	andeq	r7, r2, r0, lsl #8
     d44:	00027000 	andeq	r7, r2, r0
     d48:	75622500 	strbvc	r2, [r2, #-1280]!	; 0xfffffb00
     d4c:	4d010066 	stcmi	0, cr0, [r1, #-408]	; 0xfffffe68
     d50:	0a1e2901 	beq	78b15c <__Stack_Size+0x78ad5c>
     d54:	029b0000 	addseq	r0, fp, #0
     d58:	02950000 	addseq	r0, r5, #0
     d5c:	d1260000 			; <UNDEFINED> instruction: 0xd1260000
     d60:	01000003 	tsteq	r0, r3
     d64:	2410014e 	ldrcs	r0, [r0], #-334	; 0xfffffeb2
     d68:	cd00000a 	stcgt	0, cr0, [r0, #-40]	; 0xffffffd8
     d6c:	c9000002 	stmdbgt	r0, {r1}
     d70:	27000002 	strcs	r0, [r0, -r2]
     d74:	01007a73 	tsteq	r0, r3, ror sl
     d78:	9507014f 	strls	r0, [r7, #-335]	; 0xfffffeb1
     d7c:	f7000000 			; <UNDEFINED> instruction: 0xf7000000
     d80:	f5000002 			; <UNDEFINED> instruction: 0xf5000002
     d84:	27000002 	strcs	r0, [r0, -r2]
     d88:	5101006e 	tstpl	r1, lr, rrx
     d8c:	00950701 	addseq	r0, r5, r1, lsl #14
     d90:	03100000 	tsteq	r0, #0
     d94:	030a0000 	movweq	r0, #40960	; 0xa000
     d98:	69270000 	stmdbvs	r7!, {}	; <UNPREDICTABLE>
     d9c:	5201006e 	andpl	r0, r1, #110	; 0x6e
     da0:	0a2a0d01 	beq	a841ac <__Stack_Size+0xa83dac>
     da4:	03470000 	movteq	r0, #28672	; 0x7000
     da8:	03410000 	movteq	r0, #4096	; 0x1000
     dac:	c8280000 	stmdagt	r8!, {}	; <UNPREDICTABLE>
     db0:	27000000 	strcs	r0, [r0, -r0]
     db4:	53010069 	movwpl	r0, #4201	; 0x1069
     db8:	00950b01 	addseq	r0, r5, r1, lsl #22
     dbc:	03740000 	cmneq	r4, #0
     dc0:	03720000 	cmneq	r2, #0
     dc4:	00000000 	andeq	r0, r0, r0
     dc8:	005e0407 	subseq	r0, lr, r7, lsl #8
     dcc:	04070000 	streq	r0, [r7], #-0
     dd0:	0000095d 	andeq	r0, r0, sp, asr r9
     dd4:	00760407 	rsbseq	r0, r6, r7, lsl #8
     dd8:	01290000 			; <UNDEFINED> instruction: 0x01290000
     ddc:	00000365 	andeq	r0, r0, r5, ror #6
     de0:	06013f01 	streq	r3, [r1], -r1, lsl #30
     de4:	0005a401 	andeq	sl, r5, r1, lsl #8
     de8:	0005f808 	andeq	pc, r5, r8, lsl #16
     dec:	00038808 	andeq	r8, r3, r8, lsl #16
     df0:	0aec0100 	beq	ffb011f8 <BootRAM+0xea71999>
     df4:	69250000 	stmdbvs	r5!, {}	; <UNPREDICTABLE>
     df8:	01007864 	tsteq	r0, r4, ror #16
     dfc:	411c013f 	tstmi	ip, pc, lsr r1
     e00:	ae000000 	cdpge	0, 0, cr0, cr0, cr0, {0}
     e04:	a8000003 	stmdage	r0, {r0, r1}
     e08:	2a000003 	bcs	e1c <__Stack_Size+0xa1c>
     e0c:	00667562 	rsbeq	r7, r6, r2, ror #10
     e10:	30013f01 	andcc	r3, r1, r1, lsl #30
     e14:	00000898 	muleq	r0, r8, r8
     e18:	cf2b5101 	svcgt	0x002b5101
     e1c:	01000006 	tsteq	r0, r6
     e20:	5e3e013f 	mrcpl	1, 1, r0, cr14, cr15, {1}
     e24:	01000000 	mrseq	r0, (UNDEF: 0)
     e28:	03d12652 	bicseq	r2, r1, #85983232	; 0x5200000
     e2c:	40010000 	andmi	r0, r1, r0
     e30:	0a241001 	beq	904e3c <__Stack_Size+0x904a3c>
     e34:	03dc0000 	bicseq	r0, ip, #0
     e38:	03da0000 	bicseq	r0, sl, #0
     e3c:	4e270000 	cdpmi	0, 2, cr0, cr7, cr0, {0}
     e40:	41010032 	tstmi	r1, r2, lsr r0
     e44:	005e0c01 	subseq	r0, lr, r1, lsl #24
     e48:	03f10000 	mvnseq	r0, #0
     e4c:	03ef0000 	mvneq	r0, #0
     e50:	29260000 	stmdbcs	r6!, {}	; <UNPREDICTABLE>
     e54:	01000002 	tsteq	r0, r2
     e58:	1e0d0143 	adfneem	f0, f5, f3
     e5c:	0600000a 	streq	r0, [r0], -sl
     e60:	04000004 	streq	r0, [r0], #-4
     e64:	27000004 	strcs	r0, [r0, -r4]
     e68:	0074756f 	rsbseq	r7, r4, pc, ror #10
     e6c:	0d014401 	cfstrseq	mvf4, [r1, #-4]
     e70:	00000a2a 	andeq	r0, r0, sl, lsr #20
     e74:	0000041f 	andeq	r0, r0, pc, lsl r4
     e78:	00000419 	andeq	r0, r0, r9, lsl r4
     e7c:	00009028 	andeq	r9, r0, r8, lsr #32
     e80:	00692700 	rsbeq	r2, r9, r0, lsl #14
     e84:	10014501 	andne	r4, r1, r1, lsl #10
     e88:	0000005e 	andeq	r0, r0, lr, asr r0
     e8c:	0000045a 	andeq	r0, r0, sl, asr r4
     e90:	00000456 	andeq	r0, r0, r6, asr r4
     e94:	012c0000 			; <UNDEFINED> instruction: 0x012c0000
     e98:	000002cb 	andeq	r0, r0, fp, asr #5
     e9c:	06010901 	streq	r0, [r1], -r1, lsl #18
     ea0:	0800047c 	stmdaeq	r0, {r2, r3, r4, r5, r6, sl}
     ea4:	080005a4 	stmdaeq	r0, {r2, r5, r7, r8, sl}
     ea8:	0000047a 	andeq	r0, r0, sl, ror r4
     eac:	000bd201 	andeq	sp, fp, r1, lsl #4
     eb0:	00702d00 	rsbseq	r2, r0, r0, lsl #26
     eb4:	0b240000 	bleq	900ebc <__Stack_Size+0x900abc>
     eb8:	69270000 	stmdbvs	r7!, {}	; <UNPREDICTABLE>
     ebc:	010f0100 	mrseq	r0, (UNDEF: 31)
     ec0:	00004111 	andeq	r4, r0, r1, lsl r1
     ec4:	00049e00 	andeq	r9, r4, r0, lsl #28
     ec8:	00049a00 	andeq	r9, r4, r0, lsl #20
     ecc:	ec2e0000 	stc	0, cr0, [lr], #-0
     ed0:	40080004 	andmi	r0, r8, r4
     ed4:	66080005 	strvs	r0, [r8], -r5
     ed8:	2600000b 	strcs	r0, [r0], -fp
     edc:	000006c6 	andeq	r0, r0, r6, asr #13
     ee0:	0d011b01 	vstreq	d1, [r1, #-4]
     ee4:	00000041 	andeq	r0, r0, r1, asr #32
     ee8:	000004c3 	andeq	r0, r0, r3, asr #9
     eec:	000004c1 	andeq	r0, r0, r1, asr #9
     ef0:	00050e2f 	andeq	r0, r5, pc, lsr #28
     ef4:	000b5608 	andeq	r5, fp, r8, lsl #12
     ef8:	50013000 	andpl	r3, r1, r0
     efc:	00007502 	andeq	r7, r0, r2, lsl #10
     f00:	00053031 	andeq	r3, r5, r1, lsr r0
     f04:	50013008 	andpl	r3, r1, r8
     f08:	08007505 	stmdaeq	r0, {r0, r2, r8, sl, ip, sp, lr}
     f0c:	00002180 	andeq	r2, r0, r0, lsl #3
     f10:	00048c32 	andeq	r8, r4, r2, lsr ip
     f14:	0011f108 	andseq	pc, r1, r8, lsl #2
     f18:	04ce3300 	strbeq	r3, [lr], #768	; 0x300
     f1c:	0c600800 	stcleq	8, cr0, [r0], #-0
     f20:	0b970000 	bleq	fe5c0f28 <BootRAM+0xd5316c9>
     f24:	01300000 	teqeq	r0, r0
     f28:	00740250 	rsbseq	r0, r4, r0, asr r2
     f2c:	02510130 	subseq	r0, r1, #48, 2
     f30:	01300074 	teqeq	r0, r4, ror r0
     f34:	30380152 	eorscc	r0, r8, r2, asr r1
     f38:	03055301 	movweq	r5, #21249	; 0x5301
     f3c:	080006af 	stmdaeq	r0, {r0, r1, r2, r3, r5, r7, r9, sl}
     f40:	04da3300 	ldrbeq	r3, [sl], #768	; 0x300
     f44:	0c600800 	stcleq	8, cr0, [r0], #-0
     f48:	0bbf0000 	bleq	fefc0f50 <BootRAM+0xdf316f1>
     f4c:	01300000 	teqeq	r0, r0
     f50:	80090250 	andhi	r0, r9, r0, asr r2
     f54:	02510130 	subseq	r0, r1, #48, 2
     f58:	01300074 	teqeq	r0, r4, ror r0
     f5c:	30380152 	eorscc	r0, r8, r2, asr r1
     f60:	03055301 	movweq	r5, #21249	; 0x5301
     f64:	080005f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl}
     f68:	04e23200 	strbteq	r3, [r2], #512	; 0x200
     f6c:	11fa0800 	mvnsne	r0, r0, lsl #16
     f70:	4e320000 	cdpmi	0, 3, cr0, cr2, cr0, {0}
     f74:	f1080005 	cps	#5
     f78:	00000011 	andeq	r0, r0, r1, lsl r0
     f7c:	07560134 	smmlareq	r6, r4, r1, r0
     f80:	d6010000 	strle	r0, [r1], -r0
     f84:	03400106 	movteq	r0, #262	; 0x106
     f88:	047c0800 	ldrbteq	r0, [ip], #-2048	; 0xfffff800
     f8c:	04d60800 	ldrbeq	r0, [r6], #2048	; 0x800
     f90:	60010000 	andvs	r0, r1, r0
     f94:	3500000c 	strcc	r0, [r0, #-12]
     f98:	000006c6 	andeq	r0, r0, r6, asr #13
     f9c:	4121d601 			; <UNDEFINED> instruction: 0x4121d601
     fa0:	fa000000 	blx	fa8 <__Stack_Size+0xba8>
     fa4:	f6000004 			; <UNDEFINED> instruction: 0xf6000004
     fa8:	35000004 	strcc	r0, [r0, #-4]
     fac:	000007bc 			; <UNDEFINED> instruction: 0x000007bc
     fb0:	4130d601 	teqmi	r0, r1, lsl #12
     fb4:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
     fb8:	18000005 	stmdane	r0, {r0, r2}
     fbc:	35000005 	strcc	r0, [r0, #-5]
     fc0:	000006cf 	andeq	r0, r0, pc, asr #13
     fc4:	5e42d601 	cdppl	6, 4, cr13, cr2, cr1, {0}
     fc8:	9a000000 	bls	fd0 <__Stack_Size+0xbd0>
     fcc:	94000005 	strls	r0, [r0], #-5
     fd0:	36000005 	strcc	r0, [r0], -r5
     fd4:	00000a46 	andeq	r0, r0, r6, asr #20
     fd8:	a851d601 	ldmdage	r1, {r0, r9, sl, ip, lr, pc}^
     fdc:	01000000 	mrseq	r0, (UNDEF: 0)
     fe0:	07cf3753 			; <UNDEFINED> instruction: 0x07cf3753
     fe4:	d7010000 	strle	r0, [r1, -r0]
     fe8:	0000410b 	andeq	r4, r0, fp, lsl #2
     fec:	0005ce00 	andeq	ip, r5, r0, lsl #28
     ff0:	0005c600 	andeq	ip, r5, r0, lsl #12
     ff4:	75623800 	strbvc	r3, [r2, #-2048]!	; 0xfffff800
     ff8:	dd010066 	stcle	0, cr0, [r1, #-408]	; 0xfffffe68
     ffc:	00005e0c 	andeq	r5, r0, ip, lsl #28
    1000:	00062a00 	andeq	r2, r6, r0, lsl #20
    1004:	00061800 	andeq	r1, r6, r0, lsl #16
    1008:	01340000 	teqeq	r4, r0
    100c:	0000062b 	andeq	r0, r0, fp, lsr #12
    1010:	0106ab01 	tsteq	r6, r1, lsl #22
    1014:	08000254 	stmdaeq	r0, {r2, r4, r6, r9}
    1018:	08000340 	stmdaeq	r0, {r6, r8, r9}
    101c:	000006bd 			; <UNDEFINED> instruction: 0x000006bd
    1020:	000cf401 	andeq	pc, ip, r1, lsl #8
    1024:	06c63500 	strbeq	r3, [r6], r0, lsl #10
    1028:	ab010000 	blge	41030 <__Stack_Size+0x40c30>
    102c:	0000411a 	andeq	r4, r0, sl, lsl r1
    1030:	0006e100 	andeq	lr, r6, r0, lsl #2
    1034:	0006dd00 	andeq	sp, r6, r0, lsl #26
    1038:	07bc3500 	ldreq	r3, [ip, r0, lsl #10]!
    103c:	ab010000 	blge	41044 <__Stack_Size+0x40c44>
    1040:	00004129 	andeq	r4, r0, r9, lsr #2
    1044:	00070f00 	andeq	r0, r7, r0, lsl #30
    1048:	0006ff00 	andeq	pc, r6, r0, lsl #30
    104c:	06cf3500 	strbeq	r3, [pc], r0, lsl #10
    1050:	ab010000 	blge	41058 <__Stack_Size+0x40c58>
    1054:	00005e3b 	andeq	r5, r0, fp, lsr lr
    1058:	00078100 	andeq	r8, r7, r0, lsl #2
    105c:	00077b00 	andeq	r7, r7, r0, lsl #22
    1060:	0a463500 	beq	118e468 <__Stack_Size+0x118e068>
    1064:	ab010000 	blge	4106c <__Stack_Size+0x40c6c>
    1068:	0000a84a 	andeq	sl, r0, sl, asr #16
    106c:	0007b700 	andeq	fp, r7, r0, lsl #14
    1070:	0007ad00 	andeq	sl, r7, r0, lsl #26
    1074:	07cf3700 	strbeq	r3, [pc, r0, lsl #14]
    1078:	ac010000 	stcge	0, cr0, [r1], {-0}
    107c:	0000410b 	andeq	r4, r0, fp, lsl #2
    1080:	00080900 	andeq	r0, r8, r0, lsl #18
    1084:	00080500 	andeq	r0, r8, r0, lsl #10
    1088:	75623800 	strbvc	r3, [r2, #-2048]!	; 0xfffff800
    108c:	b5010066 	strlt	r0, [r1, #-102]	; 0xffffff9a
    1090:	00005e0c 	andeq	r5, r0, ip, lsl #28
    1094:	00083c00 	andeq	r3, r8, r0, lsl #24
    1098:	00083200 	andeq	r3, r8, r0, lsl #4
    109c:	e8390000 	ldmda	r9!, {}	; <UNPREDICTABLE>
    10a0:	01000006 	tsteq	r0, r6
    10a4:	ae010d66 	cdpge	13, 0, cr0, cr1, cr6, {3}
    10a8:	c8080006 	stmdagt	r8, {r1, r2}
    10ac:	a1080007 	tstge	r8, r7
    10b0:	01000008 	tsteq	r0, r8
    10b4:	00000fe5 	andeq	r0, r0, r5, ror #31
    10b8:	0006c635 	andeq	ip, r6, r5, lsr r6
    10bc:	1d660100 	stfnee	f0, [r6, #-0]
    10c0:	00000041 	andeq	r0, r0, r1, asr #32
    10c4:	000008e1 	andeq	r0, r0, r1, ror #17
    10c8:	000008d9 	ldrdeq	r0, [r0], -r9
    10cc:	0002b620 	andeq	fp, r2, r0, lsr #12
    10d0:	13670100 	cmnne	r7, #0, 2
    10d4:	0000005e 	andeq	r0, r0, lr, asr r0
    10d8:	001c0305 	andseq	r0, ip, r5, lsl #6
    10dc:	f7372000 			; <UNDEFINED> instruction: 0xf7372000
    10e0:	01000007 	tsteq	r0, r7
    10e4:	005e0c68 	subseq	r0, lr, r8, ror #24
    10e8:	09230000 	stmdbeq	r3!, {}	; <UNPREDICTABLE>
    10ec:	091b0000 	ldmdbeq	fp, {}	; <UNPREDICTABLE>
    10f0:	01370000 	teqeq	r7, r0
    10f4:	01000002 	tsteq	r0, r2
    10f8:	00410b69 	subeq	r0, r1, r9, ror #22
    10fc:	09590000 	ldmdbeq	r9, {}^	; <UNPREDICTABLE>
    1100:	09570000 	ldmdbeq	r7, {}^	; <UNPREDICTABLE>
    1104:	72380000 	eorsvc	r0, r8, #0
    1108:	01007165 	tsteq	r0, r5, ror #2
    110c:	00410b79 	subeq	r0, r1, r9, ror fp
    1110:	09820000 	stmibeq	r2, {}	; <UNPREDICTABLE>
    1114:	09760000 	ldmdbeq	r6!, {}^	; <UNPREDICTABLE>
    1118:	f82d0000 			; <UNDEFINED> instruction: 0xf82d0000
    111c:	bb000000 	bllt	1124 <__Stack_Size+0xd24>
    1120:	2000000e 	andcs	r0, r0, lr
    1124:	00000b4f 	andeq	r0, r0, pc, asr #22
    1128:	e50b9001 	str	r9, [fp, #-1]
    112c:	0200000f 	andeq	r0, r0, #15
    1130:	cf206c91 	svcgt	0x00206c91
    1134:	01000006 	tsteq	r0, r6
    1138:	005e0e91 			; <UNDEFINED> instruction: 0x005e0e91
    113c:	91020000 	mrsls	r0, (UNDEF: 2)
    1140:	07082e6a 	streq	r2, [r8, -sl, ror #28]
    1144:	071c0800 	ldreq	r0, [ip, -r0, lsl #16]
    1148:	0dd90800 	ldcleq	8, cr0, [r9]
    114c:	4f200000 	svcmi	0x00200000
    1150:	0100000b 	tsteq	r0, fp
    1154:	0fe71781 	svceq	0x00e71781
    1158:	91020000 	mrsls	r0, (UNDEF: 2)
    115c:	06cf206c 	strbeq	r2, [pc], ip, rrx
    1160:	82010000 	andhi	r0, r1, #0
    1164:	00005e14 	andeq	r5, r0, r4, lsl lr
    1168:	6a910200 	bvs	fe441970 <BootRAM+0xd3b2111>
    116c:	00071c3a 	andeq	r1, r7, sl, lsr ip
    1170:	00129008 	andseq	r9, r2, r8
    1174:	51013000 	mrspl	r3, (UNDEF: 1)
    1178:	306c9102 	rsbcc	r9, ip, r2, lsl #2
    117c:	91025201 	tstls	r2, r1, lsl #4
    1180:	3b00006a 	blcc	1330 <__Stack_Size+0xf30>
    1184:	0000122f 	andeq	r1, r0, pc, lsr #4
    1188:	080006f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, sl}
    118c:	0006f401 	andeq	pc, r6, r1, lsl #8
    1190:	0006f808 	andeq	pc, r6, r8, lsl #16
    1194:	0b890108 	bleq	fe2415bc <BootRAM+0xd1b1d5d>
    1198:	00000e1a 	andeq	r0, r0, sl, lsl lr
    119c:	0012553c 	andseq	r5, r2, ip, lsr r5
    11a0:	0009d800 	andeq	sp, r9, r0, lsl #16
    11a4:	0009d600 	andeq	sp, r9, r0, lsl #12
    11a8:	12493c00 	subne	r3, r9, #0, 24
    11ac:	09ee0000 	stmibeq	lr!, {}^	; <UNPREDICTABLE>
    11b0:	09ec0000 	stmibeq	ip!, {}^	; <UNPREDICTABLE>
    11b4:	3d3c0000 	ldccc	0, cr0, [ip, #-0]
    11b8:	08000012 	stmdaeq	r0, {r1, r4}
    11bc:	0600000a 	streq	r0, [r0], -sl
    11c0:	0000000a 	andeq	r0, r0, sl
    11c4:	000fee3d 	andeq	lr, pc, sp, lsr lr	; <UNPREDICTABLE>
    11c8:	00072c00 	andeq	r2, r7, r0, lsl #24
    11cc:	01180108 	tsteq	r8, r8, lsl #2
    11d0:	94010000 	strls	r0, [r1], #-0
    11d4:	000e5a05 	andeq	r5, lr, r5, lsl #20
    11d8:	10083c00 	andne	r3, r8, r0, lsl #24
    11dc:	0a1e0000 	beq	7811e4 <__Stack_Size+0x780de4>
    11e0:	0a1c0000 	beq	7011e8 <__Stack_Size+0x700de8>
    11e4:	fc3c0000 	ldc2	0, cr0, [ip], #-0
    11e8:	3400000f 	strcc	r0, [r0], #-15
    11ec:	3200000a 	andcc	r0, r0, #10
    11f0:	3a00000a 	bcc	1220 <__Stack_Size+0xe20>
    11f4:	0800073a 	stmdaeq	r0, {r1, r3, r4, r5, r8, r9, sl}
    11f8:	00001015 	andeq	r1, r0, r5, lsl r0
    11fc:	02500130 	subseq	r0, r0, #48, 2
    1200:	00008009 	andeq	r8, r0, r9
    1204:	00122f3b 	andseq	r2, r2, fp, lsr pc
    1208:	00073e00 	andeq	r3, r7, r0, lsl #28
    120c:	073e0108 	ldreq	r0, [lr, -r8, lsl #2]!
    1210:	07460800 	strbeq	r0, [r6, -r0, lsl #16]
    1214:	8c010800 	stchi	8, cr0, [r1], {-0}
    1218:	000e9b0b 	andeq	r9, lr, fp, lsl #22
    121c:	12553c00 	subsne	r3, r5, #0, 24
    1220:	0a4a0000 	beq	1281228 <__Stack_Size+0x1280e28>
    1224:	0a480000 	beq	120122c <__Stack_Size+0x1200e2c>
    1228:	493c0000 	ldmdbmi	ip!, {}	; <UNPREDICTABLE>
    122c:	60000012 	andvs	r0, r0, r2, lsl r0
    1230:	5e00000a 	cdppl	0, 0, cr0, cr0, cr10, {0}
    1234:	3c00000a 	stccc	0, cr0, [r0], {10}
    1238:	0000123d 	andeq	r1, r0, sp, lsr r2
    123c:	00000a7a 	andeq	r0, r0, sl, ror sl
    1240:	00000a78 	andeq	r0, r0, r8, ror sl
    1244:	075c3a00 	ldrbeq	r3, [ip, -r0, lsl #20]
    1248:	11930800 	orrsne	r0, r3, r0, lsl #16
    124c:	01300000 	teqeq	r0, r0
    1250:	14030550 	strne	r0, [r3], #-1360	; 0xfffffab0
    1254:	30200000 	eorcc	r0, r0, r0
    1258:	91025101 	tstls	r2, r1, lsl #2
    125c:	5201306c 	andpl	r3, r1, #108	; 0x6c
    1260:	006a9102 	rsbeq	r9, sl, r2, lsl #2
    1264:	12043d00 	andne	r3, r4, #0, 26
    1268:	06ce0000 	strbeq	r0, [lr], r0
    126c:	e0010800 	and	r0, r1, r0, lsl #16
    1270:	01000000 	mrseq	r0, (UNDEF: 0)
    1274:	0f03076d 	svceq	0x0003076d
    1278:	163c0000 	ldrtne	r0, [ip], -r0
    127c:	90000012 	andls	r0, r0, r2, lsl r0
    1280:	8e00000a 	cdphi	0, 0, cr0, cr0, cr10, {0}
    1284:	3c00000a 	stccc	0, cr0, [r0], {10}
    1288:	00001222 	andeq	r1, r0, r2, lsr #4
    128c:	00000aa6 	andeq	r0, r0, r6, lsr #21
    1290:	00000aa4 	andeq	r0, r0, r4, lsr #21
    1294:	0006d83a 	andeq	sp, r6, sl, lsr r8
    1298:	00096a08 	andeq	r6, r9, r8, lsl #20
    129c:	50013000 	andpl	r3, r1, r0
    12a0:	01303101 	teqeq	r0, r1, lsl #2
    12a4:	14030551 	strne	r0, [r3], #-1361	; 0xfffffaaf
    12a8:	00200000 	eoreq	r0, r0, r0
    12ac:	122f3d00 	eorne	r3, pc, #0, 26
    12b0:	076a0000 	strbeq	r0, [sl, -r0]!
    12b4:	30050800 	andcc	r0, r5, r0, lsl #16
    12b8:	01000001 	tsteq	r0, r1
    12bc:	0f492ca6 	svceq	0x00492ca6
    12c0:	553c0000 	ldrpl	r0, [ip, #-0]!
    12c4:	c0000012 	andgt	r0, r0, r2, lsl r0
    12c8:	be00000a 	cdplt	0, 0, cr0, cr0, cr10, {0}
    12cc:	3c00000a 	stccc	0, cr0, [r0], {10}
    12d0:	00001249 	andeq	r1, r0, r9, asr #4
    12d4:	00000ac0 	andeq	r0, r0, r0, asr #21
    12d8:	00000abe 			; <UNDEFINED> instruction: 0x00000abe
    12dc:	00123d3c 	andseq	r3, r2, ip, lsr sp
    12e0:	000ac000 	andeq	ip, sl, r0
    12e4:	000abe00 	andeq	fp, sl, r0, lsl #28
    12e8:	06fc3200 	ldrbteq	r3, [ip], r0, lsl #4
    12ec:	0a300800 	beq	c032f4 <__Stack_Size+0xc02ef4>
    12f0:	3b000000 	blcc	12f8 <__Stack_Size+0xef8>
    12f4:	0000122f 	andeq	r1, r0, pc, lsr #4
    12f8:	0800076a 	stmdaeq	r0, {r1, r3, r5, r6, r8, r9, sl}
    12fc:	00076a01 	andeq	r6, r7, r1, lsl #20
    1300:	00076a08 	andeq	r6, r7, r8, lsl #20
    1304:	099a0108 	ldmibeq	sl, {r3, r8}
    1308:	00000f8a 	andeq	r0, r0, sl, lsl #31
    130c:	0012553c 	andseq	r5, r2, ip, lsr r5
    1310:	000ad600 	andeq	sp, sl, r0, lsl #12
    1314:	000ad400 	andeq	sp, sl, r0, lsl #8
    1318:	12493c00 	subne	r3, r9, #0, 24
    131c:	0ad60000 	beq	ff581324 <BootRAM+0xe4f1ac5>
    1320:	0ad40000 	beq	ff501328 <BootRAM+0xe471ac9>
    1324:	3d3c0000 	ldccc	0, cr0, [ip, #-0]
    1328:	d6000012 			; <UNDEFINED> instruction: 0xd6000012
    132c:	d400000a 	strle	r0, [r0], #-10
    1330:	0000000a 	andeq	r0, r0, sl
    1334:	00122f3b 	andseq	r2, r2, fp, lsr pc
    1338:	00077a00 	andeq	r7, r7, r0, lsl #20
    133c:	077a0108 	ldrbeq	r0, [sl, -r8, lsl #2]!
    1340:	077c0800 	ldrbeq	r0, [ip, -r0, lsl #16]!
    1344:	9e010800 	cdpls	8, 0, cr0, cr1, cr0, {0}
    1348:	000fcb09 	andeq	ip, pc, r9, lsl #22
    134c:	12553c00 	subsne	r3, r5, #0, 24
    1350:	0aec0000 	beq	ffb01358 <BootRAM+0xea71af9>
    1354:	0aea0000 	beq	ffa8135c <BootRAM+0xe9f1afd>
    1358:	493c0000 	ldmdbmi	ip!, {}	; <UNPREDICTABLE>
    135c:	ec000012 	stc	0, cr0, [r0], {18}
    1360:	ea00000a 	b	1390 <__Stack_Size+0xf90>
    1364:	3c00000a 	stccc	0, cr0, [r0], {10}
    1368:	0000123d 	andeq	r1, r0, sp, lsr r2
    136c:	00000aec 	andeq	r0, r0, ip, ror #21
    1370:	00000aea 	andeq	r0, r0, sl, ror #21
    1374:	07863a00 	streq	r3, [r6, r0, lsl #20]
    1378:	11370800 	teqne	r7, r0, lsl #16
    137c:	01300000 	teqeq	r0, r0
    1380:	14030550 	strne	r0, [r3], #-1360	; 0xfffffab0
    1384:	30200000 	eorcc	r0, r0, r0
    1388:	75025201 	strvc	r5, [r2, #-513]	; 0xfffffdff
    138c:	3e000000 	cdpcc	0, 0, cr0, cr0, cr0, {0}
    1390:	ed040704 	stc	7, cr0, [r4, #-16]
    1394:	3f00000f 	svccc	0x0000000f
    1398:	0003f540 	andeq	pc, r3, r0, asr #10
    139c:	145e0100 	ldrbne	r0, [lr], #-256	; 0xffffff00
    13a0:	10150301 	andsne	r0, r5, r1, lsl #6
    13a4:	62410000 	subvs	r0, r1, #0
    13a8:	01006675 	tsteq	r0, r5, ror r6
    13ac:	08982c5e 	ldmeq	r8, {r1, r2, r3, r4, r6, sl, fp, sp}
    13b0:	cf420000 	svcgt	0x00420000
    13b4:	01000006 	tsteq	r0, r6
    13b8:	005e3a5e 	subseq	r3, lr, lr, asr sl
    13bc:	39000000 	stmdbcc	r0, {}	; <UNPREDICTABLE>
    13c0:	0000056f 	andeq	r0, r0, pc, ror #10
    13c4:	010d4b01 	tsteq	sp, r1, lsl #22
    13c8:	080005f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, sl}
    13cc:	08000654 	stmdaeq	r0, {r2, r4, r6, r9, sl}
    13d0:	00000b00 	andeq	r0, r0, r0, lsl #22
    13d4:	0010ac01 	andseq	sl, r0, r1, lsl #24
    13d8:	06c63500 	strbeq	r3, [r6], r0, lsl #10
    13dc:	4b010000 	blmi	413e4 <__Stack_Size+0x40fe4>
    13e0:	0000411c 	andeq	r4, r0, ip, lsl r1
    13e4:	000b2400 	andeq	r2, fp, r0, lsl #8
    13e8:	000b2000 	andeq	r2, fp, r0
    13ec:	06653700 	strbteq	r3, [r5], -r0, lsl #14
    13f0:	52010000 	andpl	r0, r1, #0
    13f4:	00005e0c 	andeq	r5, r0, ip, lsl #28
    13f8:	000b4900 	andeq	r4, fp, r0, lsl #18
    13fc:	000b4500 	andeq	r4, fp, r0, lsl #10
    1400:	122f4300 	eorne	r4, pc, #0, 6
    1404:	062e0000 	strteq	r0, [lr], -r0
    1408:	b0020800 	andlt	r0, r2, r0, lsl #16
    140c:	01000000 	mrseq	r0, (UNDEF: 0)
    1410:	553c0354 	ldrpl	r0, [ip, #-852]!	; 0xfffffcac
    1414:	69000012 	stmdbvs	r0, {r1, r4}
    1418:	6700000b 	strvs	r0, [r0, -fp]
    141c:	3c00000b 	stccc	0, cr0, [r0], {11}
    1420:	00001249 	andeq	r1, r0, r9, asr #4
    1424:	00000b7e 	andeq	r0, r0, lr, ror fp
    1428:	00000b7c 	andeq	r0, r0, ip, ror fp
    142c:	00123d3c 	andseq	r3, r2, ip, lsr sp
    1430:	000b9300 	andeq	r9, fp, r0, lsl #6
    1434:	000b9100 	andeq	r9, fp, r0, lsl #2
    1438:	06363a00 	ldrteq	r3, [r6], -r0, lsl #20
    143c:	0a300800 	beq	c03444 <__Stack_Size+0xc03044>
    1440:	01300000 	teqeq	r0, r0
    1444:	30300150 	eorscc	r0, r0, r0, asr r1
    1448:	71025101 	tstvc	r2, r1, lsl #2
    144c:	52013000 	andpl	r3, r1, #0
    1450:	00007202 	andeq	r7, r0, r2, lsl #4
    1454:	01440000 	mrseq	r0, (UNDEF: 68)
    1458:	000001fd 	strdeq	r0, [r0], -sp
    145c:	ea063701 	b	18f068 <__Stack_Size+0x18ec68>
    1460:	54080001 	strpl	r0, [r8], #-1
    1464:	02080002 	andeq	r0, r8, #2
    1468:	3701007d 	smlsdxcc	r1, sp, r0, r0
    146c:	45000011 	strmi	r0, [r0, #-17]	; 0xffffffef
    1470:	000010d7 	ldrdeq	r1, [r0], -r7
    1474:	00023446 	andeq	r3, r2, r6, asr #8
    1478:	03390100 	teqeq	r9, #0, 2
    147c:	00000076 	andeq	r0, r0, r6, ror r0
    1480:	00382d00 	eorseq	r2, r8, r0, lsl #26
    1484:	10f50000 	rscsne	r0, r5, r0
    1488:	34370000 	ldrtcc	r0, [r7], #-0
    148c:	01000002 	tsteq	r0, r2
    1490:	00760339 	rsbseq	r0, r6, r9, lsr r3
    1494:	0bab0000 	bleq	feac149c <BootRAM+0xda31c3d>
    1498:	0ba70000 	bleq	fe9c14a0 <BootRAM+0xd931c41>
    149c:	2d000000 	stccs	0, cr0, [r0, #-0]
    14a0:	00000058 	andeq	r0, r0, r8, asr r0
    14a4:	00001113 	andeq	r1, r0, r3, lsl r1
    14a8:	72746338 	rsbsvc	r6, r4, #56, 6	; 0xe0000000
    14ac:	103d0100 	eorsne	r0, sp, r0, lsl #2
    14b0:	00000076 	andeq	r0, r0, r6, ror r0
    14b4:	00000bd2 	ldrdeq	r0, [r0], -r2
    14b8:	00000bca 	andeq	r0, r0, sl, asr #23
    14bc:	12624700 	rsbne	r4, r2, #0, 14
    14c0:	02300000 	eorseq	r0, r0, #0
    14c4:	30010800 	andcc	r0, r1, r0, lsl #16
    14c8:	38080002 	stmdacc	r8, {r1}
    14cc:	01080002 	tsteq	r8, r2
    14d0:	713c0343 	teqvc	ip, r3, asr #6
    14d4:	21000012 	tstcs	r0, r2, lsl r0
    14d8:	1f00000c 	svcne	0x0000000c
    14dc:	0000000c 	andeq	r0, r0, ip
    14e0:	de014800 	cdple	8, 0, cr4, cr1, cr0, {0}
    14e4:	01000006 	tsteq	r0, r6
    14e8:	86011b1b 			; <UNDEFINED> instruction: 0x86011b1b
    14ec:	e6000011 			; <UNDEFINED> instruction: 0xe6000011
    14f0:	ea080001 	b	2014fc <__Stack_Size+0x2010fc>
    14f4:	02080001 	andeq	r0, r8, #1
    14f8:	8601007d 			; <UNDEFINED> instruction: 0x8601007d
    14fc:	49000011 	stmdbmi	r0, {r0, r4}
    1500:	00716572 	rsbseq	r6, r1, r2, ror r5
    1504:	8d3c1b01 	fldmdbxhi	ip!, {d1-d0}	;@ Deprecated
    1508:	39000011 	stmdbcc	r0, {r0, r4}
    150c:	3500000c 	strcc	r0, [r0, #-12]
    1510:	3600000c 	strcc	r0, [r0], -ip
    1514:	00000b79 	andeq	r0, r0, r9, ror fp
    1518:	5e4a1b01 	vmlapl.f64	d17, d10, d1
    151c:	01000000 	mrseq	r0, (UNDEF: 0)
    1520:	06cc3651 			; <UNDEFINED> instruction: 0x06cc3651
    1524:	1b010000 	blne	4152c <__Stack_Size+0x4112c>
    1528:	00005e5b 	andeq	r5, r0, fp, asr lr
    152c:	00520100 	subseq	r0, r2, r0, lsl #2
    1530:	26080102 	strcs	r0, [r8], -r2, lsl #2
    1534:	07000001 	streq	r0, [r0, -r1]
    1538:	00011b04 	andeq	r1, r1, r4, lsl #22
    153c:	65014800 	strvs	r4, [r1, #-2048]	; 0xfffff800
    1540:	01000005 	tsteq	r0, r5
    1544:	86011b1a 			; <UNDEFINED> instruction: 0x86011b1a
    1548:	e2000011 	and	r0, r0, #17
    154c:	e6080001 	str	r0, [r8], -r1
    1550:	02080001 	andeq	r0, r8, #1
    1554:	e201007d 	and	r0, r1, #125	; 0x7d
    1558:	49000011 	stmdbmi	r0, {r0, r4}
    155c:	00716572 	rsbseq	r6, r1, r2, ror r5
    1560:	8d3b1a01 	vldmdbhi	fp!, {s2}
    1564:	5e000011 	mcrpl	0, 0, r0, cr0, cr1, {0}
    1568:	5a00000c 	bpl	15a0 <__Stack_Size+0x11a0>
    156c:	3600000c 	strcc	r0, [r0], -ip
    1570:	00000b4f 	andeq	r0, r0, pc, asr #22
    1574:	e2471a01 	sub	r1, r7, #4096	; 0x1000
    1578:	01000011 	tsteq	r0, r1, lsl r0
    157c:	06cf3651 			; <UNDEFINED> instruction: 0x06cf3651
    1580:	1a010000 	bne	41588 <__Stack_Size+0x41188>
    1584:	000a1e57 	andeq	r1, sl, r7, asr lr
    1588:	00520100 	subseq	r0, r2, r0, lsl #2
    158c:	0fe50407 	svceq	0x00e50407
    1590:	014a0000 	mrseq	r0, (UNDEF: 74)
    1594:	000000d8 	ldrdeq	r0, [r0], -r8
    1598:	4a1b1901 	bmi	6c79a4 <__Stack_Size+0x6c75a4>
    159c:	0004be01 	andeq	fp, r4, r1, lsl #28
    15a0:	1b180100 	blne	6019a8 <__Stack_Size+0x6015a8>
    15a4:	04f1014b 	ldrbteq	r0, [r1], #331	; 0x14b
    15a8:	17010000 	strne	r0, [r1, -r0]
    15ac:	774c011b 	smlaldvc	r0, ip, fp, r1
    15b0:	03000004 	movweq	r0, #4
    15b4:	950113d1 	strls	r1, [r1, #-977]	; 0xfffffc2f
    15b8:	03000000 	movweq	r0, #0
    15bc:	0000122f 	andeq	r1, r0, pc, lsr #4
    15c0:	0006c642 	andeq	ip, r6, r2, asr #12
    15c4:	27d10300 	ldrbcs	r0, [r1, r0, lsl #6]
    15c8:	00000041 	andeq	r0, r0, r1, asr #32
    15cc:	66756241 	ldrbtvs	r6, [r5], -r1, asr #4
    15d0:	38d10300 	ldmcc	r1, {r8, r9}^
    15d4:	00000a1e 	andeq	r0, r0, lr, lsl sl
    15d8:	03664000 	cmneq	r6, #0
    15dc:	c4030000 	strgt	r0, [r3], #-0
    15e0:	62030114 	andvs	r0, r3, #20, 2
    15e4:	42000012 	andmi	r0, r0, #18
    15e8:	000006c6 	andeq	r0, r0, r6, asr #13
    15ec:	4129c403 			; <UNDEFINED> instruction: 0x4129c403
    15f0:	41000000 	mrsmi	r0, (UNDEF: 0)
    15f4:	00667562 	rsbeq	r7, r6, r2, ror #10
    15f8:	983fc403 	ldmdals	pc!, {r0, r1, sl, lr, pc}	; <UNPREDICTABLE>
    15fc:	42000008 	andmi	r0, r0, #8
    1600:	000006cf 	andeq	r0, r0, pc, asr #13
    1604:	5e4dc403 	cdppl	4, 4, cr12, cr13, cr3, {0}
    1608:	00000000 	andeq	r0, r0, r0
    160c:	0003864d 	andeq	r8, r3, sp, asr #12
    1610:	05de0200 	ldrbeq	r0, [lr, #512]	; 0x200
    1614:	7f030116 	svcvc	0x00030116
    1618:	4e000012 	mcrmi	0, 0, r0, cr0, cr2, {0}
    161c:	000002f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1620:	2f05de02 	svccs	0x0005de02
    1624:	0000026e 	andeq	r0, r0, lr, ror #4
    1628:	11fa4f00 	mvnsne	r4, r0, lsl #30
    162c:	01dc0000 	bicseq	r0, ip, r0
    1630:	01de0800 	bicseq	r0, lr, r0, lsl #16
    1634:	7d020800 	stcvc	8, cr0, [r2, #-0]
    1638:	01500100 	cmpeq	r0, r0, lsl #2
    163c:	0003bf01 	andeq	fp, r3, r1, lsl #30
    1640:	0003bf00 	andeq	fp, r3, r0, lsl #30
    1644:	06390300 	ldrteq	r0, [r9], -r0, lsl #6
    1648:	0014a400 	andseq	sl, r4, r0, lsl #8
    164c:	d7000200 	strle	r0, [r0, -r0, lsl #4]
    1650:	04000006 	streq	r0, [r0], #-6
    1654:	00000a01 	andeq	r0, r0, r1, lsl #20
    1658:	090a0c00 	stmdbeq	sl, {sl, fp}
    165c:	01720000 	cmneq	r2, r0
    1660:	07c80000 	strbeq	r0, [r8, r0]
    1664:	09ac0800 	stmibeq	ip!, {fp}
    1668:	09c90800 	stmibeq	r9, {fp}^
    166c:	01020000 	mrseq	r0, (UNDEF: 2)
    1670:	00011f06 	andeq	r1, r1, r6, lsl #30
    1674:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    1678:	000001de 	ldrdeq	r0, [r0], -lr
    167c:	ac050402 	cfstrsge	mvf0, [r5], {2}
    1680:	02000001 	andeq	r0, r0, #1
    1684:	01a70508 			; <UNDEFINED> instruction: 0x01a70508
    1688:	6a030000 	bvs	c1690 <__Stack_Size+0xc1290>
    168c:	03000001 	movweq	r0, #1
    1690:	0052182e 	subseq	r1, r2, lr, lsr #16
    1694:	41040000 	mrsmi	r0, (UNDEF: 4)
    1698:	02000000 	andeq	r0, r0, #0
    169c:	011d0801 	tsteq	sp, r1, lsl #16
    16a0:	76030000 	strvc	r0, [r3], -r0
    16a4:	03000005 	movweq	r0, #5
    16a8:	006a1931 	rsbeq	r1, sl, r1, lsr r9
    16ac:	59050000 	stmdbpl	r5, {}	; <UNPREDICTABLE>
    16b0:	02000000 	andeq	r0, r0, #0
    16b4:	00f50702 	rscseq	r0, r5, r2, lsl #14
    16b8:	f4030000 	vst4.8	{d0-d3}, [r3], r0
    16bc:	03000001 	movweq	r0, #1
    16c0:	007d1934 	rsbseq	r1, sp, r4, lsr r9
    16c4:	04020000 	streq	r0, [r2], #-0
    16c8:	00015807 	andeq	r5, r1, r7, lsl #16
    16cc:	07080200 	streq	r0, [r8, -r0, lsl #4]
    16d0:	00000153 	andeq	r0, r0, r3, asr r1
    16d4:	69050406 	stmdbvs	r5, {r1, r2, sl}
    16d8:	0500746e 	streq	r7, [r0, #-1134]	; 0xfffffb92
    16dc:	0000008b 	andeq	r0, r0, fp, lsl #1
    16e0:	5d070402 	cfstrspl	mvf0, [r7, #-8]
    16e4:	07000001 	streq	r0, [r0, -r1]
    16e8:	091b0208 	ldmdbeq	fp, {r3, r9}
    16ec:	000000f3 	strdeq	r0, [r0], -r3
    16f0:	00029008 	andeq	r9, r2, r8
    16f4:	0b1c0200 	bleq	701efc <__Stack_Size+0x701afc>
    16f8:	00000041 	andeq	r0, r0, r1, asr #32
    16fc:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
    1700:	00000675 	andeq	r0, r0, r5, ror r6
    1704:	410b1d02 	tstmi	fp, r2, lsl #26
    1708:	02000000 	andeq	r0, r0, #0
    170c:	13080123 	movwne	r0, #33059	; 0x8123
    1710:	02000003 	andeq	r0, r0, #3
    1714:	00590c1e 	subseq	r0, r9, lr, lsl ip
    1718:	23020000 	movwcs	r0, #8192	; 0x2000
    171c:	02220802 	eoreq	r0, r2, #131072	; 0x20000
    1720:	1f020000 	svcne	0x00020000
    1724:	0000590c 	andeq	r5, r0, ip, lsl #18
    1728:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    172c:	00064b08 	andeq	r4, r6, r8, lsl #22
    1730:	0c200200 	sfmeq	f0, 4, [r0], #-0
    1734:	00000059 	andeq	r0, r0, r9, asr r0
    1738:	00062302 	andeq	r2, r6, r2, lsl #6
    173c:	0006f503 	andeq	pc, r6, r3, lsl #10
    1740:	02210200 	eoreq	r0, r1, #0, 4
    1744:	0000009e 	muleq	r0, lr, r0
    1748:	00010809 	andeq	r0, r1, r9, lsl #16
    174c:	06ce0400 	strbeq	r0, [lr], r0, lsl #8
    1750:	00009215 	andeq	r9, r0, r5, lsl r2
    1754:	0a010100 	beq	41b5c <__Stack_Size+0x4175c>
    1758:	000001b5 			; <UNDEFINED> instruction: 0x000001b5
    175c:	71114505 	tstvc	r1, r5, lsl #10
    1760:	01000000 	mrseq	r0, (UNDEF: 0)
    1764:	004d0b01 	subeq	r0, sp, r1, lsl #22
    1768:	012c0000 			; <UNDEFINED> instruction: 0x012c0000
    176c:	970c0000 	strls	r0, [ip, -r0]
    1770:	0f000000 	svceq	0x00000000
    1774:	011c0400 	tsteq	ip, r0, lsl #8
    1778:	e70a0000 	str	r0, [sl, -r0]
    177c:	05000000 	streq	r0, [r0, #-0]
    1780:	012c1746 			; <UNDEFINED> instruction: 0x012c1746
    1784:	01010000 	mrseq	r0, (UNDEF: 1)
    1788:	00004d0b 	andeq	r4, r0, fp, lsl #26
    178c:	00014f00 	andeq	r4, r1, r0, lsl #30
    1790:	00970c00 	addseq	r0, r7, r0, lsl #24
    1794:	00070000 	andeq	r0, r7, r0
    1798:	00013f04 	andeq	r3, r1, r4, lsl #30
    179c:	01d00a00 	bicseq	r0, r0, r0, lsl #20
    17a0:	47050000 	strmi	r0, [r5, -r0]
    17a4:	00014f17 	andeq	r4, r1, r7, lsl pc
    17a8:	0d010100 	stfeqs	f0, [r1, #-0]
    17ac:	02390654 	eorseq	r0, r9, #84, 12	; 0x5400000
    17b0:	00030d09 	andeq	r0, r3, r9, lsl #26
    17b4:	04180e00 	ldreq	r0, [r8], #-3584	; 0xfffff200
    17b8:	3b060000 	blcc	1817c0 <__Stack_Size+0x1813c0>
    17bc:	00651102 	rsbeq	r1, r5, r2, lsl #2
    17c0:	23020000 	movwcs	r0, #8192	; 0x2000
    17c4:	05bb0e00 	ldreq	r0, [fp, #3584]!	; 0xe00
    17c8:	3c060000 	stccc	0, cr0, [r6], {-0}
    17cc:	00651102 	rsbeq	r1, r5, r2, lsl #2
    17d0:	23020000 	movwcs	r0, #8192	; 0x2000
    17d4:	04510e02 	ldrbeq	r0, [r1], #-3586	; 0xfffff1fe
    17d8:	3d060000 	stccc	0, cr0, [r6, #-0]
    17dc:	00651102 	rsbeq	r1, r5, r2, lsl #2
    17e0:	23020000 	movwcs	r0, #8192	; 0x2000
    17e4:	05c50e04 	strbeq	r0, [r5, #3588]	; 0xe04
    17e8:	3e060000 	cdpcc	0, 0, cr0, cr6, cr0, {0}
    17ec:	00651102 	rsbeq	r1, r5, r2, lsl #2
    17f0:	23020000 	movwcs	r0, #8192	; 0x2000
    17f4:	04a00e06 	strteq	r0, [r0], #3590	; 0xe06
    17f8:	3f060000 	svccc	0x00060000
    17fc:	00651102 	rsbeq	r1, r5, r2, lsl #2
    1800:	23020000 	movwcs	r0, #8192	; 0x2000
    1804:	05cf0e08 	strbeq	r0, [pc, #3592]	; 2614 <__Stack_Size+0x2214>
    1808:	40060000 	andmi	r0, r6, r0
    180c:	00651102 	rsbeq	r1, r5, r2, lsl #2
    1810:	23020000 	movwcs	r0, #8192	; 0x2000
    1814:	04d30e0a 	ldrbeq	r0, [r3], #3594	; 0xe0a
    1818:	41060000 	mrsmi	r0, (UNDEF: 6)
    181c:	00651102 	rsbeq	r1, r5, r2, lsl #2
    1820:	23020000 	movwcs	r0, #8192	; 0x2000
    1824:	05d90e0c 	ldrbeq	r0, [r9, #3596]	; 0xe0c
    1828:	42060000 	andmi	r0, r6, #0
    182c:	00651102 	rsbeq	r1, r5, r2, lsl #2
    1830:	23020000 	movwcs	r0, #8192	; 0x2000
    1834:	05240e0e 	streq	r0, [r4, #-3598]!	; 0xfffff1f2
    1838:	43060000 	movwmi	r0, #24576	; 0x6000
    183c:	00651102 	rsbeq	r1, r5, r2, lsl #2
    1840:	23020000 	movwcs	r0, #8192	; 0x2000
    1844:	05e30e10 	strbeq	r0, [r3, #3600]!	; 0xe10
    1848:	44060000 	strmi	r0, [r6], #-0
    184c:	00651102 	rsbeq	r1, r5, r2, lsl #2
    1850:	23020000 	movwcs	r0, #8192	; 0x2000
    1854:	05b60e12 	ldreq	r0, [r6, #3602]!	; 0xe12
    1858:	45060000 	strmi	r0, [r6, #-0]
    185c:	00651102 	rsbeq	r1, r5, r2, lsl #2
    1860:	23020000 	movwcs	r0, #8192	; 0x2000
    1864:	05ed0e14 	strbeq	r0, [sp, #3604]!	; 0xe14
    1868:	46060000 	strmi	r0, [r6], -r0
    186c:	00651102 	rsbeq	r1, r5, r2, lsl #2
    1870:	23020000 	movwcs	r0, #8192	; 0x2000
    1874:	06600e16 			; <UNDEFINED> instruction: 0x06600e16
    1878:	47060000 	strmi	r0, [r6, -r0]
    187c:	00651102 	rsbeq	r1, r5, r2, lsl #2
    1880:	23020000 	movwcs	r0, #8192	; 0x2000
    1884:	05f70e18 	ldrbeq	r0, [r7, #3608]!	; 0xe18
    1888:	48060000 	stmdami	r6, {}	; <UNPREDICTABLE>
    188c:	00651102 	rsbeq	r1, r5, r2, lsl #2
    1890:	23020000 	movwcs	r0, #8192	; 0x2000
    1894:	06f00e1a 	usateq	r0, #16, sl, lsl #28
    1898:	49060000 	stmdbmi	r6, {}	; <UNPREDICTABLE>
    189c:	00651102 	rsbeq	r1, r5, r2, lsl #2
    18a0:	23020000 	movwcs	r0, #8192	; 0x2000
    18a4:	080b0e1c 	stmdaeq	fp, {r2, r3, r4, r9, sl, fp}
    18a8:	4a060000 	bmi	1818b0 <__Stack_Size+0x1814b0>
    18ac:	031d1102 	tsteq	sp, #-2147483648	; 0x80000000
    18b0:	23020000 	movwcs	r0, #8192	; 0x2000
    18b4:	06880e1e 	pkhbteq	r0, r8, lr, lsl #28
    18b8:	4b060000 	blmi	1818c0 <__Stack_Size+0x1814c0>
    18bc:	00651102 	rsbeq	r1, r5, r2, lsl #2
    18c0:	23020000 	movwcs	r0, #8192	; 0x2000
    18c4:	06010e40 	streq	r0, [r1], -r0, asr #28
    18c8:	4c060000 	stcmi	0, cr0, [r6], {-0}
    18cc:	00651102 	rsbeq	r1, r5, r2, lsl #2
    18d0:	23020000 	movwcs	r0, #8192	; 0x2000
    18d4:	033a0e42 	teqeq	sl, #1056	; 0x420
    18d8:	4d060000 	stcmi	0, cr0, [r6, #-0]
    18dc:	00651102 	rsbeq	r1, r5, r2, lsl #2
    18e0:	23020000 	movwcs	r0, #8192	; 0x2000
    18e4:	060b0e44 	streq	r0, [fp], -r4, asr #28
    18e8:	4e060000 	cdpmi	0, 0, cr0, cr6, cr0, {0}
    18ec:	00651102 	rsbeq	r1, r5, r2, lsl #2
    18f0:	23020000 	movwcs	r0, #8192	; 0x2000
    18f4:	4e460f46 	cdpmi	15, 4, cr0, cr6, cr6, {2}
    18f8:	4f060052 	svcmi	0x00060052
    18fc:	00651102 	rsbeq	r1, r5, r2, lsl #2
    1900:	23020000 	movwcs	r0, #8192	; 0x2000
    1904:	06150e48 	ldreq	r0, [r5], -r8, asr #28
    1908:	50060000 	andpl	r0, r6, r0
    190c:	00651102 	rsbeq	r1, r5, r2, lsl #2
    1910:	23020000 	movwcs	r0, #8192	; 0x2000
    1914:	03a10e4a 			; <UNDEFINED> instruction: 0x03a10e4a
    1918:	51060000 	mrspl	r0, (UNDEF: 6)
    191c:	00651102 	rsbeq	r1, r5, r2, lsl #2
    1920:	23020000 	movwcs	r0, #8192	; 0x2000
    1924:	03b50e4c 			; <UNDEFINED> instruction: 0x03b50e4c
    1928:	52060000 	andpl	r0, r6, #0
    192c:	00651102 	rsbeq	r1, r5, r2, lsl #2
    1930:	23020000 	movwcs	r0, #8192	; 0x2000
    1934:	07b50e4e 	ldreq	r0, [r5, lr, asr #28]!
    1938:	53060000 	movwpl	r0, #24576	; 0x6000
    193c:	00651102 	rsbeq	r1, r5, r2, lsl #2
    1940:	23020000 	movwcs	r0, #8192	; 0x2000
    1944:	082d0e50 	stmdaeq	sp!, {r4, r6, r9, sl, fp}
    1948:	54060000 	strpl	r0, [r6], #-0
    194c:	00651102 	rsbeq	r1, r5, r2, lsl #2
    1950:	23020000 	movwcs	r0, #8192	; 0x2000
    1954:	650b0052 	strvs	r0, [fp, #-82]	; 0xffffffae
    1958:	1d000000 	stcne	0, cr0, [r0, #-0]
    195c:	0c000003 	stceq	0, cr0, [r0], {3}
    1960:	00000097 	muleq	r0, r7, r0
    1964:	0d050010 	stceq	0, cr0, [r5, #-64]	; 0xffffffc0
    1968:	10000003 	andne	r0, r0, r3
    196c:	00000395 	muleq	r0, r5, r3
    1970:	03025506 	movweq	r5, #9478	; 0x2506
    1974:	00000162 	andeq	r0, r0, r2, ror #2
    1978:	e8040802 	stmda	r4, {r1, fp}
    197c:	1000000a 	andne	r0, r0, sl
    1980:	00000d69 	andeq	r0, r0, r9, ror #26
    1984:	17016507 	strne	r6, [r1, -r7, lsl #10]
    1988:	00000097 	muleq	r0, r7, r0
    198c:	000cf103 	andeq	pc, ip, r3, lsl #2
    1990:	0e2e0800 	cdpeq	8, 2, cr0, cr14, cr0, {0}
    1994:	00000033 	andeq	r0, r0, r3, lsr r0
    1998:	00090203 	andeq	r0, r9, r3, lsl #4
    199c:	0e740800 	cdpeq	8, 7, cr0, cr4, cr0, {0}
    19a0:	00000033 	andeq	r0, r0, r3, lsr r0
    19a4:	a5080411 	strge	r0, [r8, #-1041]	; 0xfffffbef
    19a8:	00037d03 	andeq	r7, r3, r3, lsl #26
    19ac:	0a6c1200 	beq	1b061b4 <__Stack_Size+0x1b05db4>
    19b0:	a7080000 	strge	r0, [r8, -r0]
    19b4:	0003360c 	andeq	r3, r3, ip, lsl #12
    19b8:	0b541200 	bleq	15061c0 <__Stack_Size+0x1505dc0>
    19bc:	a8080000 	stmdage	r8, {}	; <UNPREDICTABLE>
    19c0:	00037d13 	andeq	r7, r3, r3, lsl sp
    19c4:	520b0000 	andpl	r0, fp, #0
    19c8:	8d000000 	stchi	0, cr0, [r0, #-0]
    19cc:	0c000003 	stceq	0, cr0, [r0], {3}
    19d0:	00000097 	muleq	r0, r7, r0
    19d4:	08070003 	stmdaeq	r7, {r0, r1}
    19d8:	b509a208 	strlt	sl, [r9, #-520]	; 0xfffffdf8
    19dc:	08000003 	stmdaeq	r0, {r0, r1}
    19e0:	0000095d 	andeq	r0, r0, sp, asr r9
    19e4:	8b07a408 	blhi	1eaa0c <__Stack_Size+0x1ea60c>
    19e8:	02000000 	andeq	r0, r0, #0
    19ec:	fb080023 	blx	201a82 <__Stack_Size+0x201682>
    19f0:	08000009 	stmdaeq	r0, {r0, r3}
    19f4:	035b05a9 	cmpeq	fp, #708837376	; 0x2a400000
    19f8:	23020000 	movwcs	r0, #8192	; 0x2000
    19fc:	dd030004 	stcle	0, cr0, [r3, #-16]
    1a00:	0800000a 	stmdaeq	r0, {r1, r3}
    1a04:	038d03aa 	orreq	r0, sp, #-1476395006	; 0xa8000002
    1a08:	04130000 	ldreq	r0, [r3], #-0
    1a0c:	000ab603 	andeq	fp, sl, r3, lsl #12
    1a10:	19160900 	ldmdbne	r6, {r8, fp}
    1a14:	0000007d 	andeq	r0, r0, sp, ror r0
    1a18:	0008da03 	andeq	sp, r8, r3, lsl #20
    1a1c:	0d0c0a00 	vstreq	s0, [ip, #-0]
    1a20:	0000008b 	andeq	r0, r0, fp, lsl #1
    1a24:	000a6303 	andeq	r6, sl, r3, lsl #6
    1a28:	1b230900 	blne	8c3e30 <__Stack_Size+0x8c3a30>
    1a2c:	000003cf 	andeq	r0, r0, pc, asr #7
    1a30:	000b3314 	andeq	r3, fp, r4, lsl r3
    1a34:	34091800 	strcc	r1, [r9], #-2048	; 0xfffff800
    1a38:	00044d08 	andeq	r4, r4, r8, lsl #26
    1a3c:	0d470800 	stcleq	8, cr0, [r7, #-0]
    1a40:	36090000 	strcc	r0, [r9], -r0
    1a44:	00044d13 	andeq	r4, r4, r3, lsl sp
    1a48:	00230200 	eoreq	r0, r3, r0, lsl #4
    1a4c:	006b5f15 	rsbeq	r5, fp, r5, lsl pc
    1a50:	8b073709 	blhi	1cf67c <__Stack_Size+0x1cf27c>
    1a54:	02000000 	andeq	r0, r0, #0
    1a58:	d8080423 	stmdale	r8, {r0, r1, r5, sl}
    1a5c:	0900000b 	stmdbeq	r0, {r0, r1, r3}
    1a60:	008b0b37 	addeq	r0, fp, r7, lsr fp
    1a64:	23020000 	movwcs	r0, #8192	; 0x2000
    1a68:	0b480808 	bleq	1203a90 <__Stack_Size+0x1203690>
    1a6c:	37090000 	strcc	r0, [r9, -r0]
    1a70:	00008b14 	andeq	r8, r0, r4, lsl fp
    1a74:	0c230200 	sfmeq	f0, 4, [r3], #-0
    1a78:	0009b108 	andeq	fp, r9, r8, lsl #2
    1a7c:	1b370900 	blne	dc3e84 <__Stack_Size+0xdc3a84>
    1a80:	0000008b 	andeq	r0, r0, fp, lsl #1
    1a84:	15102302 	ldrne	r2, [r0, #-770]	; 0xfffffcfe
    1a88:	0900785f 	stmdbeq	r0, {r0, r1, r2, r3, r4, r6, fp, ip, sp, lr}
    1a8c:	04530b38 	ldrbeq	r0, [r3], #-2872	; 0xfffff4c8
    1a90:	23020000 	movwcs	r0, #8192	; 0x2000
    1a94:	04160014 	ldreq	r0, [r6], #-20	; 0xffffffec
    1a98:	000003e7 	andeq	r0, r0, r7, ror #7
    1a9c:	0003c30b 	andeq	ip, r3, fp, lsl #6
    1aa0:	00046300 	andeq	r6, r4, r0, lsl #6
    1aa4:	00970c00 	addseq	r0, r7, r0, lsl #24
    1aa8:	00000000 	andeq	r0, r0, r0
    1aac:	000bf314 	andeq	pc, fp, r4, lsl r3	; <UNPREDICTABLE>
    1ab0:	3c092400 	cfstrscc	mvf2, [r9], {-0}
    1ab4:	0004f808 	andeq	pc, r4, r8, lsl #16
    1ab8:	09cd0800 	stmibeq	sp, {fp}^
    1abc:	3e090000 	cdpcc	0, 0, cr0, cr9, cr0, {0}
    1ac0:	00008b09 	andeq	r8, r0, r9, lsl #22
    1ac4:	00230200 	eoreq	r0, r3, r0, lsl #4
    1ac8:	00096508 	andeq	r6, r9, r8, lsl #10
    1acc:	093f0900 	ldmdbeq	pc!, {r8, fp}	; <UNPREDICTABLE>
    1ad0:	0000008b 	andeq	r0, r0, fp, lsl #1
    1ad4:	08042302 	stmdaeq	r4, {r1, r8, r9, sp}
    1ad8:	00000953 	andeq	r0, r0, r3, asr r9
    1adc:	8b094009 	blhi	251b08 <__Stack_Size+0x251708>
    1ae0:	02000000 	andeq	r0, r0, #0
    1ae4:	37080823 	strcc	r0, [r8, -r3, lsr #16]
    1ae8:	0900000a 	stmdbeq	r0, {r1, r3}
    1aec:	008b0941 	addeq	r0, fp, r1, asr #18
    1af0:	23020000 	movwcs	r0, #8192	; 0x2000
    1af4:	0b19080c 	bleq	643b2c <__Stack_Size+0x64372c>
    1af8:	42090000 	andmi	r0, r9, #0
    1afc:	00008b09 	andeq	r8, r0, r9, lsl #22
    1b00:	10230200 	eorne	r0, r3, r0, lsl #4
    1b04:	000b6e08 	andeq	r6, fp, r8, lsl #28
    1b08:	09430900 	stmdbeq	r3, {r8, fp}^
    1b0c:	0000008b 	andeq	r0, r0, fp, lsl #1
    1b10:	08142302 	ldmdaeq	r4, {r1, r8, r9, sp}
    1b14:	0000093a 	andeq	r0, r0, sl, lsr r9
    1b18:	8b094409 	blhi	252b44 <__Stack_Size+0x252744>
    1b1c:	02000000 	andeq	r0, r0, #0
    1b20:	d6081823 	strle	r1, [r8], -r3, lsr #16
    1b24:	09000009 	stmdbeq	r0, {r0, r3}
    1b28:	008b0945 	addeq	r0, fp, r5, asr #18
    1b2c:	23020000 	movwcs	r0, #8192	; 0x2000
    1b30:	0af4081c 	beq	ffd03ba8 <BootRAM+0xec74349>
    1b34:	46090000 	strmi	r0, [r9], -r0
    1b38:	00008b09 	andeq	r8, r0, r9, lsl #22
    1b3c:	20230200 	eorcs	r0, r3, r0, lsl #4
    1b40:	085c1700 	ldmdaeq	ip, {r8, r9, sl, ip}^
    1b44:	01080000 	mrseq	r0, (UNDEF: 8)
    1b48:	46084f09 	strmi	r4, [r8], -r9, lsl #30
    1b4c:	08000005 	stmdaeq	r0, {r0, r2}
    1b50:	00000cc0 	andeq	r0, r0, r0, asr #25
    1b54:	460a5009 	strmi	r5, [sl], -r9
    1b58:	02000005 	andeq	r0, r0, #5
    1b5c:	23080023 	movwcs	r0, #32803	; 0x8023
    1b60:	0900000c 	stmdbeq	r0, {r2, r3}
    1b64:	05460951 	strbeq	r0, [r6, #-2385]	; 0xfffff6af
    1b68:	23030000 	movwcs	r0, #12288	; 0x3000
    1b6c:	e8080180 	stmda	r8, {r7, r8}
    1b70:	0900000c 	stmdbeq	r0, {r2, r3}
    1b74:	03c30a53 	biceq	r0, r3, #339968	; 0x53000
    1b78:	23030000 	movwcs	r0, #12288	; 0x3000
    1b7c:	34080280 	strcc	r0, [r8], #-640	; 0xfffffd80
    1b80:	0900000d 	stmdbeq	r0, {r0, r2, r3}
    1b84:	03c30a56 	biceq	r0, r3, #352256	; 0x56000
    1b88:	23030000 	movwcs	r0, #12288	; 0x3000
    1b8c:	0b000284 	bleq	25a4 <__Stack_Size+0x21a4>
    1b90:	000003c1 	andeq	r0, r0, r1, asr #7
    1b94:	00000556 	andeq	r0, r0, r6, asr r5
    1b98:	0000970c 	andeq	r9, r0, ip, lsl #14
    1b9c:	17001f00 	strne	r1, [r0, -r0, lsl #30]
    1ba0:	00000b22 	andeq	r0, r0, r2, lsr #22
    1ba4:	62090190 	andvs	r0, r9, #144, 2	; 0x24
    1ba8:	0005a208 	andeq	sl, r5, r8, lsl #4
    1bac:	0d470800 	stcleq	8, cr0, [r7, #-0]
    1bb0:	63090000 	movwvs	r0, #36864	; 0x9000
    1bb4:	0005a212 	andeq	sl, r5, r2, lsl r2
    1bb8:	00230200 	eoreq	r0, r3, r0, lsl #4
    1bbc:	0009e508 	andeq	lr, r9, r8, lsl #10
    1bc0:	06640900 	strbteq	r0, [r4], -r0, lsl #18
    1bc4:	0000008b 	andeq	r0, r0, fp, lsl #1
    1bc8:	08042302 	stmdaeq	r4, {r1, r8, r9, sp}
    1bcc:	0000091e 	andeq	r0, r0, lr, lsl r9
    1bd0:	a8096609 	stmdage	r9, {r0, r3, r9, sl, sp, lr}
    1bd4:	02000005 	andeq	r0, r0, #5
    1bd8:	5c080823 	stcpl	8, cr0, [r8], {35}	; 0x23
    1bdc:	09000008 	stmdbeq	r0, {r3}
    1be0:	04f81e67 	ldrbteq	r1, [r8], #3687	; 0xe67
    1be4:	23030000 	movwcs	r0, #12288	; 0x3000
    1be8:	16000188 	strne	r0, [r0], -r8, lsl #3
    1bec:	00055604 	andeq	r5, r5, r4, lsl #12
    1bf0:	05b80b00 	ldreq	r0, [r8, #2816]!	; 0xb00
    1bf4:	05b80000 	ldreq	r0, [r8, #0]!
    1bf8:	970c0000 	strls	r0, [ip, -r0]
    1bfc:	1f000000 	svcne	0x00000000
    1c00:	be041600 	cfmadd32lt	mvax0, mvfx1, mvfx4, mvfx0
    1c04:	18000005 	stmdane	r0, {r0, r2}
    1c08:	0c881401 	cfstrseq	mvf1, [r8], {1}
    1c0c:	09080000 	stmdbeq	r8, {}	; <UNPREDICTABLE>
    1c10:	05ec087a 	strbeq	r0, [ip, #2170]!	; 0x87a
    1c14:	a0080000 	andge	r0, r8, r0
    1c18:	0900000a 	stmdbeq	r0, {r1, r3}
    1c1c:	05ec117b 	strbeq	r1, [ip, #379]!	; 0x17b
    1c20:	23020000 	movwcs	r0, #8192	; 0x2000
    1c24:	06ce0800 	strbeq	r0, [lr], r0, lsl #16
    1c28:	7c090000 	stcvc	0, cr0, [r9], {-0}
    1c2c:	00008b06 	andeq	r8, r0, r6, lsl #22
    1c30:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    1c34:	52041600 	andpl	r1, r4, #0, 12
    1c38:	14000000 	strne	r0, [r0], #-0
    1c3c:	000009a9 	andeq	r0, r0, r9, lsr #19
    1c40:	08ba0968 	ldmeq	sl!, {r3, r5, r6, r8, fp}
    1c44:	00000765 	andeq	r0, r0, r5, ror #14
    1c48:	00705f15 	rsbseq	r5, r0, r5, lsl pc
    1c4c:	ec12bb09 			; <UNDEFINED> instruction: 0xec12bb09
    1c50:	02000005 	andeq	r0, r0, #5
    1c54:	5f150023 	svcpl	0x00150023
    1c58:	bc090072 	stclt	0, cr0, [r9], {114}	; 0x72
    1c5c:	00008b07 	andeq	r8, r0, r7, lsl #22
    1c60:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    1c64:	00775f15 	rsbseq	r5, r7, r5, lsl pc
    1c68:	8b07bd09 	blhi	1f1094 <__Stack_Size+0x1f0c94>
    1c6c:	02000000 	andeq	r0, r0, #0
    1c70:	9b080823 	blls	203d04 <__Stack_Size+0x203904>
    1c74:	09000008 	stmdbeq	r0, {r3}
    1c78:	002c09be 	strhteq	r0, [ip], -lr
    1c7c:	23020000 	movwcs	r0, #8192	; 0x2000
    1c80:	0acd080c 	beq	ff343cb8 <BootRAM+0xe2b4459>
    1c84:	bf090000 	svclt	0x00090000
    1c88:	00002c09 	andeq	r2, r0, r9, lsl #24
    1c8c:	0e230200 	cdpeq	2, 2, cr0, cr3, cr0, {0}
    1c90:	66625f15 	uqadd16vs	r5, r2, r5
    1c94:	11c00900 	bicne	r0, r0, r0, lsl #18
    1c98:	000005c0 	andeq	r0, r0, r0, asr #11
    1c9c:	08102302 	ldmdaeq	r0, {r1, r8, r9, sp}
    1ca0:	00000892 	muleq	r0, r2, r8
    1ca4:	8b07c109 	blhi	1f20d0 <__Stack_Size+0x1f1cd0>
    1ca8:	02000000 	andeq	r0, r0, #0
    1cac:	23081823 	movwcs	r1, #34851	; 0x8823
    1cb0:	09000009 	stmdbeq	r0, {r0, r3}
    1cb4:	03c10ac8 	biceq	r0, r1, #200, 20	; 0xc8000
    1cb8:	23020000 	movwcs	r0, #8192	; 0x2000
    1cbc:	047d081c 	ldrbteq	r0, [sp], #-2076	; 0xfffff7e4
    1cc0:	ca090000 	bgt	241cc8 <__Stack_Size+0x2418c8>
    1cc4:	0009161d 	andeq	r1, r9, sp, lsl r6
    1cc8:	20230200 	eorcs	r0, r3, r0, lsl #4
    1ccc:	00036c08 	andeq	r6, r3, r8, lsl #24
    1cd0:	1dcc0900 	vstrne.16	s1, [ip]	; <UNPREDICTABLE>
    1cd4:	00000941 	andeq	r0, r0, r1, asr #18
    1cd8:	08242302 	stmdaeq	r4!, {r1, r8, r9, sp}
    1cdc:	000009b6 			; <UNDEFINED> instruction: 0x000009b6
    1ce0:	660dcf09 	strvs	ip, [sp], -r9, lsl #30
    1ce4:	02000009 	andeq	r0, r0, #9
    1ce8:	78082823 	stmdavc	r8, {r0, r1, r5, fp, sp}
    1cec:	0900000a 	stmdbeq	r0, {r1, r3}
    1cf0:	098109d0 	stmibeq	r1, {r4, r6, r7, r8, fp}
    1cf4:	23020000 	movwcs	r0, #8192	; 0x2000
    1cf8:	755f152c 	ldrbvc	r1, [pc, #-1324]	; 17d4 <__Stack_Size+0x13d4>
    1cfc:	d3090062 	movwle	r0, #36962	; 0x9062
    1d00:	0005c011 	andeq	ip, r5, r1, lsl r0
    1d04:	30230200 	eorcc	r0, r3, r0, lsl #4
    1d08:	70755f15 	rsbsvc	r5, r5, r5, lsl pc
    1d0c:	12d40900 	sbcsne	r0, r4, #0, 18
    1d10:	000005ec 	andeq	r0, r0, ip, ror #11
    1d14:	15382302 	ldrne	r2, [r8, #-770]!	; 0xfffffcfe
    1d18:	0072755f 	rsbseq	r7, r2, pc, asr r5
    1d1c:	8b07d509 	blhi	1f7148 <__Stack_Size+0x1f6d48>
    1d20:	02000000 	andeq	r0, r0, #0
    1d24:	bc083c23 	stclt	12, cr3, [r8], {35}	; 0x23
    1d28:	09000009 	stmdbeq	r0, {r0, r3}
    1d2c:	098711d8 	stmibeq	r7, {r3, r4, r6, r7, r8, ip}
    1d30:	23020000 	movwcs	r0, #8192	; 0x2000
    1d34:	0cf80840 	ldcleq	8, cr0, [r8], #256	; 0x100
    1d38:	d9090000 	stmdble	r9, {}	; <UNPREDICTABLE>
    1d3c:	00099711 	andeq	r9, r9, r1, lsl r7
    1d40:	43230200 			; <UNDEFINED> instruction: 0x43230200
    1d44:	626c5f15 	rsbvs	r5, ip, #21, 30	; 0x54
    1d48:	11dc0900 	bicsne	r0, ip, r0, lsl #18
    1d4c:	000005c0 	andeq	r0, r0, r0, asr #11
    1d50:	08442302 	stmdaeq	r4, {r1, r8, r9, sp}^
    1d54:	00000bea 	andeq	r0, r0, sl, ror #23
    1d58:	8b07df09 	blhi	1f9984 <__Stack_Size+0x1f9584>
    1d5c:	02000000 	andeq	r0, r0, #0
    1d60:	78084c23 	stmdavc	r8, {r0, r1, r5, sl, fp, lr}
    1d64:	0900000b 	stmdbeq	r0, {r0, r1, r3}
    1d68:	03430ae0 	movteq	r0, #15072	; 0x3ae0
    1d6c:	23020000 	movwcs	r0, #8192	; 0x2000
    1d70:	0b4e0850 	bleq	1383eb8 <__Stack_Size+0x1383ab8>
    1d74:	e3090000 	movw	r0, #36864	; 0x9000
    1d78:	00078412 	andeq	r8, r7, r2, lsl r4
    1d7c:	54230200 	strtpl	r0, [r3], #-512	; 0xfffffe00
    1d80:	000bf808 	andeq	pc, fp, r8, lsl #16
    1d84:	0ce70900 			; <UNDEFINED> instruction: 0x0ce70900
    1d88:	000003db 	ldrdeq	r0, [r0], -fp
    1d8c:	08582302 	ldmdaeq	r8, {r1, r8, r9, sp}^
    1d90:	00000b2a 	andeq	r0, r0, sl, lsr #22
    1d94:	b50ee909 	strlt	lr, [lr, #-2313]	; 0xfffff6f7
    1d98:	02000003 	andeq	r0, r0, #3
    1d9c:	2c085c23 	stccs	12, cr5, [r8], {35}	; 0x23
    1da0:	0900000d 	stmdbeq	r0, {r0, r2, r3}
    1da4:	008b09ea 	addeq	r0, fp, sl, ror #19
    1da8:	23020000 	movwcs	r0, #8192	; 0x2000
    1dac:	01190064 	tsteq	r9, r4, rrx
    1db0:	0000008b 	andeq	r0, r0, fp, lsl #1
    1db4:	00000784 	andeq	r0, r0, r4, lsl #15
    1db8:	0007841a 	andeq	r8, r7, sl, lsl r4
    1dbc:	03c11a00 	biceq	r1, r1, #0, 20
    1dc0:	041a0000 	ldreq	r0, [sl], #-0
    1dc4:	1a000009 	bne	1df0 <__Stack_Size+0x19f0>
    1dc8:	0000008b 	andeq	r0, r0, fp, lsl #1
    1dcc:	8f041600 	svchi	0x00041600
    1dd0:	04000007 	streq	r0, [r0], #-7
    1dd4:	00000784 	andeq	r0, r0, r4, lsl #15
    1dd8:	000cc81b 	andeq	ip, ip, fp, lsl r8
    1ddc:	09042800 	stmdbeq	r4, {fp, sp}
    1de0:	04080265 	streq	r0, [r8], #-613	; 0xfffffd9b
    1de4:	0e000009 	cdpeq	0, 0, cr0, cr0, cr9, {0}
    1de8:	00000b12 	andeq	r0, r0, r2, lsl fp
    1dec:	07026709 	streq	r6, [r2, -r9, lsl #14]
    1df0:	0000008b 	andeq	r0, r0, fp, lsl #1
    1df4:	0e002302 	cdpeq	3, 0, cr2, cr0, cr2, {0}
    1df8:	00000a8a 	andeq	r0, r0, sl, lsl #21
    1dfc:	0b026c09 	bleq	9ce28 <__Stack_Size+0x9ca28>
    1e00:	000009f9 	strdeq	r0, [r0], -r9
    1e04:	0e042302 	cdpeq	3, 0, cr2, cr4, cr2, {0}
    1e08:	000008fa 	strdeq	r0, [r0], -sl
    1e0c:	14026c09 	strne	r6, [r2], #-3081	; 0xfffff3f7
    1e10:	000009f9 	strdeq	r0, [r0], -r9
    1e14:	0e082302 	cdpeq	3, 0, cr2, cr8, cr2, {0}
    1e18:	00000d58 	andeq	r0, r0, r8, asr sp
    1e1c:	1e026c09 	cdpne	12, 0, cr6, cr2, cr9, {0}
    1e20:	000009f9 	strdeq	r0, [r0], -r9
    1e24:	0e0c2302 	cdpeq	3, 0, cr2, cr12, cr2, {0}
    1e28:	000009e0 	andeq	r0, r0, r0, ror #19
    1e2c:	08026e09 	stmdaeq	r2, {r0, r3, r9, sl, fp, sp, lr}
    1e30:	0000008b 	andeq	r0, r0, fp, lsl #1
    1e34:	0e102302 	cdpeq	3, 1, cr2, cr0, cr2, {0}
    1e38:	000009c2 	andeq	r0, r0, r2, asr #19
    1e3c:	08026f09 	stmdaeq	r2, {r0, r3, r8, r9, sl, fp, sp, lr}
    1e40:	00000c32 	andeq	r0, r0, r2, lsr ip
    1e44:	0e142302 	cdpeq	3, 1, cr2, cr4, cr2, {0}
    1e48:	00000d13 	andeq	r0, r0, r3, lsl sp
    1e4c:	07027209 	streq	r7, [r2, -r9, lsl #4]
    1e50:	0000008b 	andeq	r0, r0, fp, lsl #1
    1e54:	0e302302 	cdpeq	3, 3, cr2, cr0, cr2, {0}
    1e58:	00000cb8 			; <UNDEFINED> instruction: 0x00000cb8
    1e5c:	16027309 	strne	r7, [r2], -r9, lsl #6
    1e60:	00000c48 	andeq	r0, r0, r8, asr #24
    1e64:	0e342302 	cdpeq	3, 3, cr2, cr4, cr2, {0}
    1e68:	00000a7f 	andeq	r0, r0, pc, ror sl
    1e6c:	07027509 	streq	r7, [r2, -r9, lsl #10]
    1e70:	0000008b 	andeq	r0, r0, fp, lsl #1
    1e74:	0e382302 	cdpeq	3, 3, cr2, cr8, cr2, {0}
    1e78:	00000ad3 	ldrdeq	r0, [r0], -r3
    1e7c:	0a027709 	beq	9faa8 <__Stack_Size+0x9f6a8>
    1e80:	00000c5a 	andeq	r0, r0, sl, asr ip
    1e84:	0e3c2302 	cdpeq	3, 3, cr2, cr12, cr2, {0}
    1e88:	00000944 	andeq	r0, r0, r4, asr #18
    1e8c:	13027a09 	movwne	r7, #10761	; 0x2a09
    1e90:	0000044d 	andeq	r0, r0, sp, asr #8
    1e94:	0e402302 	cdpeq	3, 4, cr2, cr0, cr2, {0}
    1e98:	0000097d 	andeq	r0, r0, sp, ror r9
    1e9c:	07027b09 	streq	r7, [r2, -r9, lsl #22]
    1ea0:	0000008b 	andeq	r0, r0, fp, lsl #1
    1ea4:	0e442302 	cdpeq	3, 4, cr2, cr4, cr2, {0}
    1ea8:	00000a03 	andeq	r0, r0, r3, lsl #20
    1eac:	13027c09 	movwne	r7, #11273	; 0x2c09
    1eb0:	0000044d 	andeq	r0, r0, sp, asr #8
    1eb4:	0e482302 	cdpeq	3, 4, cr2, cr8, cr2, {0}
    1eb8:	00000aa6 	andeq	r0, r0, r6, lsr #21
    1ebc:	14027d09 	strne	r7, [r2], #-3337	; 0xfffff2f7
    1ec0:	00000c60 	andeq	r0, r0, r0, ror #24
    1ec4:	0e4c2302 	cdpeq	3, 4, cr2, cr12, cr2, {0}
    1ec8:	00000bd0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1ecc:	07028009 	streq	r8, [r2, -r9]
    1ed0:	0000008b 	andeq	r0, r0, fp, lsl #1
    1ed4:	0e502302 	cdpeq	3, 5, cr2, cr0, cr2, {0}
    1ed8:	00000c2f 	andeq	r0, r0, pc, lsr #24
    1edc:	09028109 	stmdbeq	r2, {r0, r3, r8, pc}
    1ee0:	00000904 	andeq	r0, r0, r4, lsl #18
    1ee4:	0e542302 	cdpeq	3, 5, cr2, cr4, cr2, {0}
    1ee8:	00000bcb 	andeq	r0, r0, fp, asr #23
    1eec:	0702a409 	streq	sl, [r2, -r9, lsl #8]
    1ef0:	00000c0d 	andeq	r0, r0, sp, lsl #24
    1ef4:	0e582302 	cdpeq	3, 5, cr2, cr8, cr2, {0}
    1ef8:	00000b22 	andeq	r0, r0, r2, lsr #22
    1efc:	1302a809 	movwne	sl, #10249	; 0x2809
    1f00:	000005a2 	andeq	r0, r0, r2, lsr #11
    1f04:	02c82303 	sbceq	r2, r8, #201326592	; 0xc000000
    1f08:	000a5a0e 	andeq	r5, sl, lr, lsl #20
    1f0c:	02a90900 	adceq	r0, r9, #0, 18
    1f10:	00055612 	andeq	r5, r5, r2, lsl r6
    1f14:	cc230300 	stcgt	3, cr0, [r3], #-0
    1f18:	0a410e02 	beq	1045728 <__Stack_Size+0x1045328>
    1f1c:	ad090000 	stcge	0, cr0, [r9, #-0]
    1f20:	0c720c02 	ldcleq	12, cr0, [r2], #-8
    1f24:	23030000 	movwcs	r0, #12288	; 0x3000
    1f28:	950e05dc 	strls	r0, [lr, #-1500]	; 0xfffffa24
    1f2c:	0900000c 	stmdbeq	r0, {r2, r3}
    1f30:	b41002b2 	ldrlt	r0, [r0], #-690	; 0xfffffd4e
    1f34:	03000009 	movweq	r0, #9
    1f38:	0e05e023 	cdpeq	0, 0, cr14, cr5, cr3, {1}
    1f3c:	00000b43 	andeq	r0, r0, r3, asr #22
    1f40:	0a02b409 	beq	aef6c <__Stack_Size+0xaeb6c>
    1f44:	00000c7e 	andeq	r0, r0, lr, ror ip
    1f48:	05ec2303 	strbeq	r2, [ip, #771]!	; 0x303
    1f4c:	0a041600 	beq	107754 <__Stack_Size+0x107354>
    1f50:	02000009 	andeq	r0, r0, #9
    1f54:	01260801 			; <UNDEFINED> instruction: 0x01260801
    1f58:	0a040000 	beq	101f60 <__Stack_Size+0x101b60>
    1f5c:	16000009 	strne	r0, [r0], -r9
    1f60:	00076504 	andeq	r6, r7, r4, lsl #10
    1f64:	8b011900 	blhi	4836c <__Stack_Size+0x47f6c>
    1f68:	3b000000 	blcc	1f70 <__Stack_Size+0x1b70>
    1f6c:	1a000009 	bne	1f98 <__Stack_Size+0x1b98>
    1f70:	00000784 	andeq	r0, r0, r4, lsl #15
    1f74:	0003c11a 	andeq	ip, r3, sl, lsl r1
    1f78:	093b1a00 	ldmdbeq	fp!, {r9, fp, ip}
    1f7c:	8b1a0000 	blhi	681f84 <__Stack_Size+0x681b84>
    1f80:	00000000 	andeq	r0, r0, r0
    1f84:	09110416 	ldmdbeq	r1, {r1, r2, r4, sl}
    1f88:	04160000 	ldreq	r0, [r6], #-0
    1f8c:	0000091c 	andeq	r0, r0, ip, lsl r9
    1f90:	034f0119 	movteq	r0, #61721	; 0xf119
    1f94:	09660000 	stmdbeq	r6!, {}^	; <UNPREDICTABLE>
    1f98:	841a0000 	ldrhi	r0, [sl], #-0
    1f9c:	1a000007 	bne	1fc0 <__Stack_Size+0x1bc0>
    1fa0:	000003c1 	andeq	r0, r0, r1, asr #7
    1fa4:	00034f1a 	andeq	r4, r3, sl, lsl pc
    1fa8:	008b1a00 	addeq	r1, fp, r0, lsl #20
    1fac:	16000000 	strne	r0, [r0], -r0
    1fb0:	00094704 	andeq	r4, r9, r4, lsl #14
    1fb4:	8b011900 	blhi	483bc <__Stack_Size+0x47fbc>
    1fb8:	81000000 	mrshi	r0, (UNDEF: 0)
    1fbc:	1a000009 	bne	1fe8 <__Stack_Size+0x1be8>
    1fc0:	00000784 	andeq	r0, r0, r4, lsl #15
    1fc4:	0003c11a 	andeq	ip, r3, sl, lsl r1
    1fc8:	04160000 	ldreq	r0, [r6], #-0
    1fcc:	0000096c 	andeq	r0, r0, ip, ror #18
    1fd0:	0000520b 	andeq	r5, r0, fp, lsl #4
    1fd4:	00099700 	andeq	r9, r9, r0, lsl #14
    1fd8:	00970c00 	addseq	r0, r7, r0, lsl #24
    1fdc:	00020000 	andeq	r0, r2, r0
    1fe0:	0000520b 	andeq	r5, r0, fp, lsl #4
    1fe4:	0009a700 	andeq	sl, r9, r0, lsl #14
    1fe8:	00970c00 	addseq	r0, r7, r0, lsl #24
    1fec:	00000000 	andeq	r0, r0, r0
    1ff0:	00094c10 	andeq	r4, r9, r0, lsl ip
    1ff4:	01240900 			; <UNDEFINED> instruction: 0x01240900
    1ff8:	0005f21a 	andeq	pc, r5, sl, lsl r2	; <UNPREDICTABLE>
    1ffc:	0c8f1c00 	stceq	12, cr1, [pc], {0}
    2000:	090c0000 	stmdbeq	ip, {}	; <UNPREDICTABLE>
    2004:	f3080128 	vrhadd.u8	d0, d8, d24
    2008:	0e000009 	cdpeq	0, 0, cr0, cr0, cr9, {0}
    200c:	00000d47 	andeq	r0, r0, r7, asr #26
    2010:	11012a09 	tstne	r1, r9, lsl #20
    2014:	000009f3 	strdeq	r0, [r0], -r3
    2018:	0e002302 	cdpeq	3, 0, cr2, cr0, cr2, {0}
    201c:	00000c1c 	andeq	r0, r0, ip, lsl ip
    2020:	07012b09 	streq	r2, [r1, -r9, lsl #22]
    2024:	0000008b 	andeq	r0, r0, fp, lsl #1
    2028:	0e042302 	cdpeq	3, 0, cr2, cr4, cr2, {0}
    202c:	00000a72 	andeq	r0, r0, r2, ror sl
    2030:	0b012c09 	bleq	4d05c <__Stack_Size+0x4cc5c>
    2034:	000009f9 	strdeq	r0, [r0], -r9
    2038:	00082302 	andeq	r2, r8, r2, lsl #6
    203c:	09b40416 	ldmibeq	r4!, {r1, r2, r4, sl}
    2040:	04160000 	ldreq	r0, [r6], #-0
    2044:	000009a7 	andeq	r0, r0, r7, lsr #19
    2048:	0009751c 	andeq	r7, r9, ip, lsl r5
    204c:	44090e00 	strmi	r0, [r9], #-3584	; 0xfffff200
    2050:	0a3e0801 	beq	f8405c <__Stack_Size+0xf83c5c>
    2054:	3c0e0000 	stccc	0, cr0, [lr], {-0}
    2058:	0900000d 	stmdbeq	r0, {r0, r2, r3}
    205c:	3e120145 	mufccsm	f0, f2, f5
    2060:	0200000a 	andeq	r0, r0, #10
    2064:	b00e0023 	andlt	r0, lr, r3, lsr #32
    2068:	0900000a 	stmdbeq	r0, {r1, r3}
    206c:	3e120146 	mufccsm	f0, f2, f6
    2070:	0200000a 	andeq	r0, r0, #10
    2074:	620e0623 	andvs	r0, lr, #36700160	; 0x2300000
    2078:	0900000c 	stmdbeq	r0, {r2, r3}
    207c:	6a120147 	bvs	4825a0 <__Stack_Size+0x4821a0>
    2080:	02000000 	andeq	r0, r0, #0
    2084:	0b000c23 	bleq	5118 <__Stack_Size+0x4d18>
    2088:	0000006a 	andeq	r0, r0, sl, rrx
    208c:	00000a4e 	andeq	r0, r0, lr, asr #20
    2090:	0000970c 	andeq	r9, r0, ip, lsl #14
    2094:	0d000200 	sfmeq	f0, 4, [r0, #-0]
    2098:	028509d0 	addeq	r0, r5, #208, 18	; 0x340000
    209c:	000b9207 	andeq	r9, fp, r7, lsl #4
    20a0:	0cfe0e00 	ldcleq	14, cr0, [lr]
    20a4:	87090000 	strhi	r0, [r9, -r0]
    20a8:	00971802 	addseq	r1, r7, r2, lsl #16
    20ac:	23020000 	movwcs	r0, #8192	; 0x2000
    20b0:	0c9d0e00 	ldceq	14, cr0, [sp], {0}
    20b4:	88090000 	stmdahi	r9, {}	; <UNPREDICTABLE>
    20b8:	09041202 	stmdbeq	r4, {r1, r9, ip}
    20bc:	23020000 	movwcs	r0, #8192	; 0x2000
    20c0:	099c0e04 	ldmibeq	ip, {r2, r9, sl, fp}
    20c4:	89090000 	stmdbhi	r9, {}	; <UNPREDICTABLE>
    20c8:	0b921002 	bleq	fe4860d8 <BootRAM+0xd3f6879>
    20cc:	23020000 	movwcs	r0, #8192	; 0x2000
    20d0:	0b9b0e08 	bleq	fe6c58f8 <BootRAM+0xd636099>
    20d4:	8a090000 	bhi	2420dc <__Stack_Size+0x241cdc>
    20d8:	04631702 	strbteq	r1, [r3], #-1794	; 0xfffff8fe
    20dc:	23020000 	movwcs	r0, #8192	; 0x2000
    20e0:	0a910e24 	beq	fe445978 <BootRAM+0xd3b6119>
    20e4:	8b090000 	blhi	2420ec <__Stack_Size+0x241cec>
    20e8:	008b0f02 	addeq	r0, fp, r2, lsl #30
    20ec:	23020000 	movwcs	r0, #8192	; 0x2000
    20f0:	0d420e48 	stcleq	14, cr0, [r2, #-288]	; 0xfffffee0
    20f4:	8c090000 	stchi	0, cr0, [r9], {-0}
    20f8:	00842c02 	addeq	r2, r4, r2, lsl #24
    20fc:	23020000 	movwcs	r0, #8192	; 0x2000
    2100:	08780e50 	ldmdaeq	r8!, {r4, r6, r9, sl, fp}^
    2104:	8d090000 	stchi	0, cr0, [r9, #-0]
    2108:	09ff1a02 	ldmibeq	pc!, {r1, r9, fp, ip}^	; <UNPREDICTABLE>
    210c:	23020000 	movwcs	r0, #8192	; 0x2000
    2110:	0a2a0e58 	beq	a85a78 <__Stack_Size+0xa85678>
    2114:	8e090000 	cdphi	0, 0, cr0, cr9, cr0, {0}
    2118:	03b51602 			; <UNDEFINED> instruction: 0x03b51602
    211c:	23020000 	movwcs	r0, #8192	; 0x2000
    2120:	0caa0e68 	stceq	14, cr0, [sl], #416	; 0x1a0
    2124:	8f090000 	svchi	0x00090000
    2128:	03b51602 			; <UNDEFINED> instruction: 0x03b51602
    212c:	23020000 	movwcs	r0, #8192	; 0x2000
    2130:	086a0e70 	stmdaeq	sl!, {r4, r5, r6, r9, sl, fp}^
    2134:	90090000 	andls	r0, r9, r0
    2138:	03b51602 			; <UNDEFINED> instruction: 0x03b51602
    213c:	23020000 	movwcs	r0, #8192	; 0x2000
    2140:	0be00e78 	bleq	ff805b28 <BootRAM+0xe7762c9>
    2144:	91090000 	mrsls	r0, (UNDEF: 9)
    2148:	0ba21002 	bleq	fe886158 <BootRAM+0xd7f68f9>
    214c:	23030000 	movwcs	r0, #12288	; 0x3000
    2150:	860e0180 	strhi	r0, [lr], -r0, lsl #3
    2154:	09000008 	stmdbeq	r0, {r3}
    2158:	b2100292 	andslt	r0, r0, #536870921	; 0x20000009
    215c:	0300000b 	movweq	r0, #11
    2160:	0e018823 	cdpeq	8, 0, cr8, cr1, cr3, {1}
    2164:	00000c37 	andeq	r0, r0, r7, lsr ip
    2168:	0f029309 	svceq	0x00029309
    216c:	0000008b 	andeq	r0, r0, fp, lsl #1
    2170:	01a02303 	lsleq	r2, r3, #6
    2174:	0008ec0e 	andeq	lr, r8, lr, lsl #24
    2178:	02940900 	addseq	r0, r4, #0, 18
    217c:	0003b516 	andeq	fp, r3, r6, lsl r5
    2180:	a4230300 	strtge	r0, [r3], #-768	; 0xfffffd00
    2184:	0a4b0e01 	beq	12c5990 <__Stack_Size+0x12c5590>
    2188:	95090000 	strls	r0, [r9, #-0]
    218c:	03b51602 			; <UNDEFINED> instruction: 0x03b51602
    2190:	23030000 	movwcs	r0, #12288	; 0x3000
    2194:	ea0e01ac 	b	38284c <__Stack_Size+0x38244c>
    2198:	09000009 	stmdbeq	r0, {r0, r3}
    219c:	b5160296 	ldrlt	r0, [r6, #-662]	; 0xfffffd6a
    21a0:	03000003 	movweq	r0, #3
    21a4:	0e01b423 	cdpeq	4, 0, cr11, cr1, cr3, {1}
    21a8:	00000abe 			; <UNDEFINED> instruction: 0x00000abe
    21ac:	16029709 	strne	r9, [r2], -r9, lsl #14
    21b0:	000003b5 			; <UNDEFINED> instruction: 0x000003b5
    21b4:	01bc2303 			; <UNDEFINED> instruction: 0x01bc2303
    21b8:	000aff0e 	andeq	pc, sl, lr, lsl #30
    21bc:	02980900 	addseq	r0, r8, #0, 18
    21c0:	0003b516 	andeq	fp, r3, r6, lsl r5
    21c4:	c4230300 	strtgt	r0, [r3], #-768	; 0xfffffd00
    21c8:	0b100e01 	bleq	4059d4 <__Stack_Size+0x4055d4>
    21cc:	99090000 	stmdbls	r9, {}	; <UNPREDICTABLE>
    21d0:	008b0802 	addeq	r0, fp, r2, lsl #16
    21d4:	23030000 	movwcs	r0, #12288	; 0x3000
    21d8:	0b0001cc 	bleq	2910 <__Stack_Size+0x2510>
    21dc:	0000090a 	andeq	r0, r0, sl, lsl #18
    21e0:	00000ba2 	andeq	r0, r0, r2, lsr #23
    21e4:	0000970c 	andeq	r9, r0, ip, lsl #14
    21e8:	0b001900 	bleq	85f0 <__Stack_Size+0x81f0>
    21ec:	0000090a 	andeq	r0, r0, sl, lsl #18
    21f0:	00000bb2 			; <UNDEFINED> instruction: 0x00000bb2
    21f4:	0000970c 	andeq	r9, r0, ip, lsl #14
    21f8:	0b000700 	bleq	3e00 <__Stack_Size+0x3a00>
    21fc:	0000090a 	andeq	r0, r0, sl, lsl #18
    2200:	00000bc2 	andeq	r0, r0, r2, asr #23
    2204:	0000970c 	andeq	r9, r0, ip, lsl #14
    2208:	0d001700 	stceq	7, cr1, [r0, #-0]
    220c:	029e09f0 	addseq	r0, lr, #240, 18	; 0x3c0000
    2210:	000bed07 	andeq	lr, fp, r7, lsl #26
    2214:	096e0e00 	stmdbeq	lr!, {r9, sl, fp}^
    2218:	a1090000 	mrsge	r0, (UNDEF: 9)
    221c:	0bed1b02 	bleq	ffb48e2c <BootRAM+0xeab95cd>
    2220:	23020000 	movwcs	r0, #8192	; 0x2000
    2224:	0d600e00 	stcleq	14, cr0, [r0, #-0]
    2228:	a2090000 	andge	r0, r9, #0
    222c:	0bfd1802 	bleq	fff4823c <BootRAM+0xeeb89dd>
    2230:	23020000 	movwcs	r0, #8192	; 0x2000
    2234:	ec0b0078 	stc	0, cr0, [fp], {120}	; 0x78
    2238:	fd000005 	stc2	0, cr0, [r0, #-20]	; 0xffffffec
    223c:	0c00000b 	stceq	0, cr0, [r0], {11}
    2240:	00000097 	muleq	r0, r7, r0
    2244:	970b001d 	smladls	fp, sp, r0, r0
    2248:	0d000000 	stceq	0, cr0, [r0, #-0]
    224c:	0c00000c 	stceq	0, cr0, [r0], {12}
    2250:	00000097 	muleq	r0, r7, r0
    2254:	f01d001d 			; <UNDEFINED> instruction: 0xf01d001d
    2258:	03028309 	movweq	r8, #8969	; 0x2309
    225c:	00000c32 	andeq	r0, r0, r2, lsr ip
    2260:	000cc81e 	andeq	ip, ip, lr, lsl r8
    2264:	029a0900 	addseq	r0, sl, #0, 18
    2268:	000a4e0b 	andeq	r4, sl, fp, lsl #28
    226c:	0bc31e00 	bleq	ff0c9a74 <BootRAM+0xe03a215>
    2270:	a3090000 	movwge	r0, #36864	; 0x9000
    2274:	0bc20b02 	bleq	ff084e84 <BootRAM+0xdff5625>
    2278:	0b000000 	bleq	2280 <__Stack_Size+0x1e80>
    227c:	0000090a 	andeq	r0, r0, sl, lsl #18
    2280:	00000c42 	andeq	r0, r0, r2, asr #24
    2284:	0000970c 	andeq	r9, r0, ip, lsl #14
    2288:	1f001800 	svcne	0x00001800
    228c:	00000d4d 	andeq	r0, r0, sp, asr #26
    2290:	42041601 	andmi	r1, r4, #1048576	; 0x100000
    2294:	2000000c 	andcs	r0, r0, ip
    2298:	000c5a01 	andeq	r5, ip, r1, lsl #20
    229c:	07841a00 	streq	r1, [r4, r0, lsl #20]
    22a0:	16000000 	strne	r0, [r0], -r0
    22a4:	000c4e04 	andeq	r4, ip, r4, lsl #28
    22a8:	4d041600 	stcmi	6, cr1, [r4, #-0]
    22ac:	20000004 	andcs	r0, r0, r4
    22b0:	000c7201 	andeq	r7, ip, r1, lsl #4
    22b4:	008b1a00 	addeq	r1, fp, r0, lsl #20
    22b8:	16000000 	strne	r0, [r0], -r0
    22bc:	000c7804 	andeq	r7, ip, r4, lsl #16
    22c0:	66041600 	strvs	r1, [r4], -r0, lsl #12
    22c4:	0b00000c 	bleq	22fc <__Stack_Size+0x1efc>
    22c8:	000009a7 	andeq	r0, r0, r7, lsr #19
    22cc:	00000c8e 	andeq	r0, r0, lr, lsl #25
    22d0:	0000970c 	andeq	r9, r0, ip, lsl #14
    22d4:	09000200 	stmdbeq	r0, {r9}
    22d8:	00000b62 	andeq	r0, r0, r2, ror #22
    22dc:	17033309 	strne	r3, [r3, -r9, lsl #6]
    22e0:	00000784 	andeq	r0, r0, r4, lsl #15
    22e4:	5b090101 	blpl	2426f0 <__Stack_Size+0x2422f0>
    22e8:	0900000b 	stmdbeq	r0, {r0, r1, r3}
    22ec:	8a1d0334 	bhi	742fc4 <__Stack_Size+0x742bc4>
    22f0:	01000007 	tsteq	r0, r7
    22f4:	004d0b01 	subeq	r0, sp, r1, lsl #22
    22f8:	0cbc0000 	ldceq	0, cr0, [ip]
    22fc:	970c0000 	strls	r0, [ip, -r0]
    2300:	11000000 	mrsne	r0, (UNDEF: 0)
    2304:	0cac0400 	cfstrseq	mvf0, [ip]
    2308:	4d210000 	stcmi	0, cr0, [r1, #-0]
    230c:	0100000c 	tsteq	r0, ip
    2310:	0cbc161a 	ldceq	6, cr1, [ip], #104	; 0x68
    2314:	03050000 	movweq	r0, #20480	; 0x5000
    2318:	08000a16 	stmdaeq	r0, {r1, r2, r4, r9, fp}
    231c:	00004d0b 	andeq	r4, r0, fp, lsl #26
    2320:	000ce300 	andeq	lr, ip, r0, lsl #6
    2324:	00970c00 	addseq	r0, r7, r0, lsl #24
    2328:	00090000 	andeq	r0, r9, r0
    232c:	000cd304 	andeq	sp, ip, r4, lsl #6
    2330:	0bfe2100 	bleq	fff8a738 <BootRAM+0xeefaed9>
    2334:	2d010000 	stccs	0, cr0, [r1, #-0]
    2338:	000ce316 	andeq	lr, ip, r6, lsl r3
    233c:	6b030500 	blvs	c3744 <__Stack_Size+0xc3344>
    2340:	0b08000a 	bleq	202370 <__Stack_Size+0x201f70>
    2344:	0000004d 	andeq	r0, r0, sp, asr #32
    2348:	00000d0a 	andeq	r0, r0, sl, lsl #26
    234c:	0000970c 	andeq	r9, r0, ip, lsl #14
    2350:	04004200 	streq	r4, [r0], #-512	; 0xfffffe00
    2354:	00000cfa 	strdeq	r0, [r0], -sl
    2358:	00098721 	andeq	r8, r9, r1, lsr #14
    235c:	163d0100 	ldrtne	r0, [sp], -r0, lsl #2
    2360:	00000d0a 	andeq	r0, r0, sl, lsl #26
    2364:	0a280305 	beq	a02f80 <__Stack_Size+0xa02b80>
    2368:	aa140800 	bge	504370 <__Stack_Size+0x503f70>
    236c:	0400000b 	streq	r0, [r0], #-11
    2370:	5c019a01 			; <UNDEFINED> instruction: 0x5c019a01
    2374:	0800000d 	stmdaeq	r0, {r0, r2, r3}
    2378:	00000d0b 	andeq	r0, r0, fp, lsl #26
    237c:	41019a01 	tstmi	r1, r1, lsl #20
    2380:	02000000 	andeq	r0, r0, #0
    2384:	78080023 	stmdavc	r8, {r0, r1, r5}
    2388:	0100000c 	tsteq	r0, ip
    238c:	0041019a 	umaaleq	r0, r1, sl, r1
    2390:	23020000 	movwcs	r0, #8192	; 0x2000
    2394:	0b3b0801 	bleq	ec43a0 <__Stack_Size+0xec3fa0>
    2398:	9a010000 	bls	423a0 <__Stack_Size+0x41fa0>
    239c:	000d6101 	andeq	r6, sp, r1, lsl #2
    23a0:	02230200 	eoreq	r0, r3, #0, 4
    23a4:	0d210400 	cfstrseq	mvf0, [r1, #-0]
    23a8:	590b0000 	stmdbpl	fp, {}	; <UNPREDICTABLE>
    23ac:	71000000 	mrsvc	r0, (UNDEF: 0)
    23b0:	0c00000d 	stceq	0, cr0, [r0], {13}
    23b4:	00000097 	muleq	r0, r7, r0
    23b8:	aa210000 	bge	8423c0 <__Stack_Size+0x841fc0>
    23bc:	0100000b 	tsteq	r0, fp
    23c0:	0d5c019a 	ldfeqe	f0, [ip, #-616]	; 0xfffffd98
    23c4:	03050000 	movweq	r0, #20480	; 0x5000
    23c8:	08000a76 	stmdaeq	r0, {r1, r2, r4, r5, r6, r9, fp}
    23cc:	000a0814 	andeq	r0, sl, r4, lsl r8
    23d0:	9b011600 	blls	47bd8 <__Stack_Size+0x477d8>
    23d4:	000dbe01 	andeq	fp, sp, r1, lsl #28
    23d8:	0d0b0800 	stceq	8, cr0, [fp, #-0]
    23dc:	9b010000 	blls	423e4 <__Stack_Size+0x41fe4>
    23e0:	00004101 	andeq	r4, r0, r1, lsl #2
    23e4:	00230200 	eoreq	r0, r3, r0, lsl #4
    23e8:	000c7808 	andeq	r7, ip, r8, lsl #16
    23ec:	019b0100 	orrseq	r0, fp, r0, lsl #2
    23f0:	00000041 	andeq	r0, r0, r1, asr #32
    23f4:	08012302 	stmdaeq	r1, {r1, r8, r9, sp}
    23f8:	00000b3b 	andeq	r0, r0, fp, lsr fp
    23fc:	c3019b01 	movwgt	r9, #6913	; 0x1b01
    2400:	0200000d 	andeq	r0, r0, #13
    2404:	04000223 	streq	r0, [r0], #-547	; 0xfffffddd
    2408:	00000d83 	andeq	r0, r0, r3, lsl #27
    240c:	0000590b 	andeq	r5, r0, fp, lsl #18
    2410:	000dd300 	andeq	sp, sp, r0, lsl #6
    2414:	00970c00 	addseq	r0, r7, r0, lsl #24
    2418:	00090000 	andeq	r0, r9, r0
    241c:	000a0821 	andeq	r0, sl, r1, lsr #16
    2420:	019b0100 	orrseq	r0, fp, r0, lsl #2
    2424:	00000dbe 			; <UNDEFINED> instruction: 0x00000dbe
    2428:	0a7a0305 	beq	1e83044 <__Stack_Size+0x1e82c44>
    242c:	cf140800 	svcgt	0x00140800
    2430:	1000000c 	andne	r0, r0, ip
    2434:	20019c01 	andcs	r9, r1, r1, lsl #24
    2438:	0800000e 	stmdaeq	r0, {r1, r2, r3}
    243c:	00000d0b 	andeq	r0, r0, fp, lsl #26
    2440:	41019c01 	tstmi	r1, r1, lsl #24
    2444:	02000000 	andeq	r0, r0, #0
    2448:	78080023 	stmdavc	r8, {r0, r1, r5}
    244c:	0100000c 	tsteq	r0, ip
    2450:	0041019c 	umaaleq	r0, r1, ip, r1
    2454:	23020000 	movwcs	r0, #8192	; 0x2000
    2458:	0b3b0801 	bleq	ec4464 <__Stack_Size+0xec4064>
    245c:	9c010000 	stcls	0, cr0, [r1], {-0}
    2460:	000e2501 	andeq	r2, lr, r1, lsl #10
    2464:	02230200 	eoreq	r0, r3, #0, 4
    2468:	0de50400 	cfstrdeq	mvd0, [r5]
    246c:	590b0000 	stmdbpl	fp, {}	; <UNPREDICTABLE>
    2470:	35000000 	strcc	r0, [r0, #-0]
    2474:	0c00000e 	stceq	0, cr0, [r0], {14}
    2478:	00000097 	muleq	r0, r7, r0
    247c:	cf210006 	svcgt	0x00210006
    2480:	0100000c 	tsteq	r0, ip
    2484:	0e20019c 	mcreq	1, 1, r0, cr0, cr12, {4}
    2488:	03050000 	movweq	r0, #20480	; 0x5000
    248c:	08000a90 	stmdaeq	r0, {r4, r7, r9, fp}
    2490:	000b8014 	andeq	r8, fp, r4, lsl r0
    2494:	9d010400 	cfstrsls	mvf0, [r1, #-0]
    2498:	000e8201 	andeq	r8, lr, r1, lsl #4
    249c:	0d0b0800 	stceq	8, cr0, [fp, #-0]
    24a0:	9d010000 	stcls	0, cr0, [r1, #-0]
    24a4:	00004101 	andeq	r4, r0, r1, lsl #2
    24a8:	00230200 	eoreq	r0, r3, r0, lsl #4
    24ac:	000c7808 	andeq	r7, ip, r8, lsl #16
    24b0:	019d0100 	orrseq	r0, sp, r0, lsl #2
    24b4:	00000041 	andeq	r0, r0, r1, asr #32
    24b8:	08012302 	stmdaeq	r1, {r1, r8, r9, sp}
    24bc:	00000b3b 	andeq	r0, r0, fp, lsr fp
    24c0:	61019d01 	tstvs	r1, r1, lsl #26
    24c4:	0200000d 	andeq	r0, r0, #13
    24c8:	04000223 	streq	r0, [r0], #-547	; 0xfffffddd
    24cc:	00000e47 	andeq	r0, r0, r7, asr #28
    24d0:	000b8021 	andeq	r8, fp, r1, lsr #32
    24d4:	019d0100 	orrseq	r0, sp, r0, lsl #2
    24d8:	00000e82 	andeq	r0, r0, r2, lsl #29
    24dc:	0aa00305 	beq	fe8030f8 <BootRAM+0xd773899>
    24e0:	2b140800 	blcs	5044e8 <__Stack_Size+0x5040e8>
    24e4:	07000009 	streq	r0, [r0, -r9]
    24e8:	e308d401 	movw	sp, #33793	; 0x8401
    24ec:	0800000e 	stmdaeq	r0, {r1, r2, r3}
    24f0:	0000087d 	andeq	r0, r0, sp, ror r8
    24f4:	710cd501 	tstvc	ip, r1, lsl #10
    24f8:	02000000 	andeq	r0, r0, #0
    24fc:	70080023 	andvc	r0, r8, r3, lsr #32
    2500:	0100000d 	tsteq	r0, sp
    2504:	00410bd6 	ldrdeq	r0, [r1], #-182	; 0xffffff4a
    2508:	23020000 	movwcs	r0, #8192	; 0x2000
    250c:	083c0804 	ldmdaeq	ip!, {r2, fp}
    2510:	d7010000 	strle	r0, [r1, -r0]
    2514:	0000410b 	andeq	r4, r0, fp, lsl #2
    2518:	05230200 	streq	r0, [r3, #-512]!	; 0xfffffe00
    251c:	000c4408 	andeq	r4, ip, r8, lsl #8
    2520:	0bd80100 	bleq	ff602928 <BootRAM+0xe5730c9>
    2524:	00000041 	andeq	r0, r0, r1, asr #32
    2528:	00062302 	andeq	r2, r6, r2, lsl #6
    252c:	000e9905 	andeq	r9, lr, r5, lsl #18
    2530:	092f2200 	stmdbeq	pc!, {r9, sp}	; <UNPREDICTABLE>
    2534:	db010000 	blle	4253c <__Stack_Size+0x4213c>
    2538:	000ee320 	andeq	lr, lr, r0, lsr #6
    253c:	03050100 	movweq	r0, #20736	; 0x5100
    2540:	20000002 	andcs	r0, r0, r2
    2544:	00d80123 	sbcseq	r0, r8, r3, lsr #2
    2548:	2d010000 	stccs	0, cr0, [r1, #-0]
    254c:	09940601 	ldmibeq	r4, {r0, r9, sl}
    2550:	09ac0800 	stmibeq	ip!, {fp}
    2554:	0c7f0800 	ldcleq	8, cr0, [pc], #-0	; 255c <__Stack_Size+0x215c>
    2558:	44010000 	strmi	r0, [r1], #-0
    255c:	2400000f 	strcs	r0, [r0], #-15
    2560:	000012f6 	strdeq	r1, [r0], -r6
    2564:	0800099a 	stmdaeq	r0, {r1, r3, r4, r7, r8, fp}
    2568:	00017801 	andeq	r7, r1, r1, lsl #16
    256c:	013a0100 	teqeq	sl, r0, lsl #2
    2570:	000f3a03 	andeq	r3, pc, r3, lsl #20
    2574:	13042500 	movwne	r2, #17664	; 0x4500
    2578:	0ca70000 	stceq	0, cr0, [r7]
    257c:	0c9f0000 	ldceq	0, cr0, [pc], {0}
    2580:	26000000 	strcs	r0, [r0], -r0
    2584:	0800099a 	stmdaeq	r0, {r1, r3, r4, r7, r8, fp}
    2588:	00001004 	andeq	r1, r0, r4
    258c:	f1012300 			; <UNDEFINED> instruction: 0xf1012300
    2590:	01000004 	tsteq	r0, r4
    2594:	5c060125 	stfpls	f0, [r6], {37}	; 0x25
    2598:	94080009 	strls	r0, [r8], #-9
    259c:	e6080009 	str	r0, [r8], -r9
    25a0:	0100000c 	tsteq	r0, ip
    25a4:	00000fd3 	ldrdeq	r0, [r0], -r3
    25a8:	00096a27 	andeq	r6, r9, r7, lsr #20
    25ac:	00146f08 	andseq	r6, r4, r8, lsl #30
    25b0:	000f8600 	andeq	r8, pc, r0, lsl #12
    25b4:	50012800 	andpl	r2, r1, r0, lsl #16
    25b8:	28830902 	stmcs	r3, {r1, r8, fp}
    25bc:	33015101 	movwcc	r5, #4353	; 0x1101
    25c0:	01520128 	cmpeq	r2, r8, lsr #2
    25c4:	53012838 	movwpl	r2, #6200	; 0x1838
    25c8:	07c90305 	strbeq	r0, [r9, r5, lsl #6]
    25cc:	27000800 	strcs	r0, [r0, -r0, lsl #16]
    25d0:	08000976 	stmdaeq	r0, {r1, r2, r4, r5, r6, r8, fp}
    25d4:	0000147d 	andeq	r1, r0, sp, ror r4
    25d8:	00000fae 	andeq	r0, r0, lr, lsr #31
    25dc:	02500128 	subseq	r0, r0, #40, 2
    25e0:	01288109 			; <UNDEFINED> instruction: 0x01288109
    25e4:	28320151 	ldmdacs	r2!, {r0, r4, r6, r8}
    25e8:	08025201 	stmdaeq	r2, {r0, r9, ip, lr}
    25ec:	53012840 	movwpl	r2, #6208	; 0x1840
    25f0:	09410305 	stmdbeq	r1, {r0, r2, r8, r9}^
    25f4:	29000800 	stmdbcs	r0, {fp}
    25f8:	08000986 	stmdaeq	r0, {r1, r2, r7, r8, fp}
    25fc:	00147d01 	andseq	r7, r4, r1, lsl #26
    2600:	50012800 	andpl	r2, r1, r0, lsl #16
    2604:	01283201 			; <UNDEFINED> instruction: 0x01283201
    2608:	28320151 	ldmdacs	r2!, {r0, r4, r6, r8}
    260c:	08025201 	stmdaeq	r2, {r0, r9, ip, lr}
    2610:	53012840 	movwpl	r2, #6208	; 0x1840
    2614:	07cb0305 	strbeq	r0, [fp, r5, lsl #6]
    2618:	00000800 	andeq	r0, r0, r0, lsl #16
    261c:	0c67012a 	stfeqe	f0, [r7], #-168	; 0xffffff58
    2620:	1e010000 	cdpne	0, 0, cr0, cr1, cr0, {0}
    2624:	01010601 	tsteq	r1, r1, lsl #12
    2628:	00001004 	andeq	r1, r0, r4
    262c:	0006c62b 	andeq	ip, r6, fp, lsr #12
    2630:	011e0100 	tsteq	lr, r0, lsl #2
    2634:	0000411f 	andeq	r4, r0, pc, lsl r1
    2638:	6e632c00 	cdpvs	12, 6, cr2, cr3, cr0, {0}
    263c:	1f010074 	svcne	0x00010074
    2640:	00411201 	subeq	r1, r1, r1, lsl #4
    2644:	03050000 	movweq	r0, #20480	; 0x5000
    2648:	20000020 	andcs	r0, r0, r0, lsr #32
    264c:	a2012d00 	andge	r2, r1, #0, 26
    2650:	01000008 	tsteq	r0, r8
    2654:	0a060115 	beq	182ab0 <__Stack_Size+0x1826b0>
    2658:	fa000009 	blx	2684 <__Stack_Size+0x2284>
    265c:	40080008 	andmi	r0, r8, r8
    2660:	12080009 	andne	r0, r8, #9
    2664:	0100000d 	tsteq	r0, sp
    2668:	000010c8 	andeq	r1, r0, r8, asr #1
    266c:	0100782c 	tsteq	r0, ip, lsr #16
    2670:	41120116 	tstmi	r2, r6, lsl r1
    2674:	05000000 	streq	r0, [r0, #-0]
    2678:	00001f03 	andeq	r1, r0, r3, lsl #30
    267c:	68632c20 	stmdavs	r3!, {r5, sl, fp, sp}^
    2680:	01170100 	tsteq	r7, r0, lsl #2
    2684:	0010c80b 	andseq	ip, r0, fp, lsl #16
    2688:	70910200 	addsvc	r0, r1, r0, lsl #4
    268c:	0013d72e 	andseq	sp, r3, lr, lsr #14
    2690:	00090600 	andeq	r0, r9, r0, lsl #12
    2694:	09060108 	stmdbeq	r6, {r3, r8}
    2698:	092c0800 	stmdbeq	ip!, {fp}
    269c:	19010800 	stmdbne	r1, {fp}
    26a0:	10b10301 	adcsne	r0, r1, r1, lsl #6
    26a4:	e5250000 	str	r0, [r5, #-0]!
    26a8:	42000013 	andmi	r0, r0, #19
    26ac:	3e00000d 	cdpcc	0, 0, cr0, cr0, cr13, {0}
    26b0:	2500000d 	strcs	r0, [r0, #-13]
    26b4:	000013fd 	strdeq	r1, [r0], -sp
    26b8:	00000d65 	andeq	r0, r0, r5, ror #26
    26bc:	00000d63 	andeq	r0, r0, r3, ror #26
    26c0:	0013f125 	andseq	pc, r3, r5, lsr #2
    26c4:	000d7d00 	andeq	r7, sp, r0, lsl #26
    26c8:	000d7900 	andeq	r7, sp, r0, lsl #18
    26cc:	09062f00 	stmdbeq	r6, {r8, r9, sl, fp, sp}
    26d0:	092c0800 	stmdbeq	ip!, {fp}
    26d4:	09300800 	ldmdbeq	r0!, {fp}
    26d8:	a1000014 	tstge	r0, r4, lsl r0
    26dc:	9b00000d 	blls	2718 <__Stack_Size+0x2318>
    26e0:	3100000d 	tstcc	r0, sp
    26e4:	0800092c 	stmdaeq	r0, {r2, r3, r5, r8, fp}
    26e8:	0000148b 	andeq	r1, r0, fp, lsl #9
    26ec:	02510128 	subseq	r0, r1, #40, 2
    26f0:	0128007d 			; <UNDEFINED> instruction: 0x0128007d
    26f4:	00350152 	eorseq	r0, r5, r2, asr r1
    26f8:	06310000 	ldrteq	r0, [r1], -r0
    26fc:	d8080009 	stmdale	r8, {r0, r3}
    2700:	28000010 	stmdacs	r0, {r4}
    2704:	70025001 	andvc	r5, r2, r1
    2708:	51012800 	tstpl	r1, r0, lsl #16
    270c:	00007102 	andeq	r7, r0, r2, lsl #2
    2710:	00410b00 	subeq	r0, r1, r0, lsl #22
    2714:	10d80000 	sbcsne	r0, r8, r0
    2718:	970c0000 	strls	r0, [ip, -r0]
    271c:	05000000 	streq	r0, [r0, #-0]
    2720:	56013200 	strpl	r3, [r1], -r0, lsl #4
    2724:	01000008 	tsteq	r0, r8
    2728:	0106010c 	tsteq	r6, ip, lsl #2
    272c:	080008c8 	stmdaeq	r0, {r3, r6, r7, fp}
    2730:	080008fa 	stmdaeq	r0, {r1, r3, r4, r5, r6, r7, fp}
    2734:	00000dce 	andeq	r0, r0, lr, asr #27
    2738:	00111101 	andseq	r1, r1, r1, lsl #2
    273c:	00783300 	rsbseq	r3, r8, r0, lsl #6
    2740:	14010c01 	strne	r0, [r1], #-3073	; 0xfffff3ff
    2744:	00000041 	andeq	r0, r0, r1, asr #32
    2748:	62335001 	eorsvs	r5, r3, #1
    274c:	01006675 	tsteq	r0, r5, ror r6
    2750:	041d010c 	ldreq	r0, [sp], #-268	; 0xfffffef4
    2754:	01000009 	tsteq	r0, r9
    2758:	01320051 	teqeq	r2, r1, asr r0
    275c:	000008a7 	andeq	r0, r0, r7, lsr #17
    2760:	06010401 	streq	r0, [r1], -r1, lsl #8
    2764:	0007ca01 	andeq	ip, r7, r1, lsl #20
    2768:	00080008 	andeq	r0, r8, r8
    276c:	000dee08 	andeq	lr, sp, r8, lsl #28
    2770:	11b60100 			; <UNDEFINED> instruction: 0x11b60100
    2774:	c6340000 	ldrtgt	r0, [r4], -r0
    2778:	01000006 	tsteq	r0, r6
    277c:	41200104 			; <UNDEFINED> instruction: 0x41200104
    2780:	2b000000 	blcs	2788 <__Stack_Size+0x2388>
    2784:	2700000e 	strcs	r0, [r0, -lr]
    2788:	2c00000e 	stccs	0, cr0, [r0], {14}
    278c:	00667562 	rsbeq	r7, r6, r2, ror #10
    2790:	0b010501 	bleq	43b9c <__Stack_Size+0x4379c>
    2794:	000011b6 			; <UNDEFINED> instruction: 0x000011b6
    2798:	7fb89103 	svcvc	0x00b89103
    279c:	6e656c35 	mcrvs	12, 3, r6, cr5, cr5, {1}
    27a0:	01060100 	mrseq	r0, (UNDEF: 22)
    27a4:	00008b07 	andeq	r8, r0, r7, lsl #22
    27a8:	13693600 	cmnne	r9, #0, 12
    27ac:	07d00000 	ldrbeq	r0, [r0, r0]
    27b0:	48000800 	stmdami	r0, {fp}
    27b4:	01000001 	tsteq	r0, r1
    27b8:	250d0106 	strcs	r0, [sp, #-262]	; 0xfffffefa
    27bc:	0000137b 	andeq	r1, r0, fp, ror r3
    27c0:	00000e4e 	andeq	r0, r0, lr, asr #28
    27c4:	00000e4c 	andeq	r0, r0, ip, asr #28
    27c8:	00138725 	andseq	r8, r3, r5, lsr #14
    27cc:	000e6400 	andeq	r6, lr, r0, lsl #8
    27d0:	000e6200 	andeq	r6, lr, r0, lsl #4
    27d4:	01483700 	cmpeq	r8, r0, lsl #14
    27d8:	93300000 	teqls	r0, #0
    27dc:	79000013 	stmdbvc	r0, {r0, r1, r4}
    27e0:	7700000e 	strvc	r0, [r0, -lr]
    27e4:	3800000e 	stmdacc	r0, {r1, r2, r3}
    27e8:	0000139f 	muleq	r0, pc, r3	; <UNPREDICTABLE>
    27ec:	0007e231 	andeq	lr, r7, r1, lsr r2
    27f0:	00149908 	andseq	r9, r4, r8, lsl #18
    27f4:	51012800 	tstpl	r1, r0, lsl #16
    27f8:	00007d02 	andeq	r7, r0, r2, lsl #26
    27fc:	0b000000 	bleq	2804 <__Stack_Size+0x2404>
    2800:	00000041 	andeq	r0, r0, r1, asr #32
    2804:	000011c6 	andeq	r1, r0, r6, asr #3
    2808:	0000970c 	andeq	r9, r0, ip, lsl #14
    280c:	39003f00 	stmdbcc	r0, {r8, r9, sl, fp, ip, sp}
    2810:	0008cd01 	andeq	ip, r8, r1, lsl #26
    2814:	01000100 	mrseq	r0, (UNDEF: 16)
    2818:	07c80106 	strbeq	r0, [r8, r6, lsl #2]
    281c:	07ca0800 	strbeq	r0, [sl, r0, lsl #16]
    2820:	7d020800 	stcvc	8, cr0, [r2, #-0]
    2824:	11f10100 	mvnsne	r0, r0, lsl #2
    2828:	c63a0000 	ldrtgt	r0, [sl], -r0
    282c:	01000006 	tsteq	r0, r6
    2830:	411b0100 	tstmi	fp, r0, lsl #2
    2834:	01000000 	mrseq	r0, (UNDEF: 0)
    2838:	013b0050 	teqeq	fp, r0, asr r0
    283c:	000006de 	ldrdeq	r0, [r0], -lr
    2840:	0106ed01 	tsteq	r6, r1, lsl #26
    2844:	0000090a 	andeq	r0, r0, sl, lsl #18
    2848:	080008a0 	stmdaeq	r0, {r5, r7, fp}
    284c:	080008c8 	stmdaeq	r0, {r3, r6, r7, fp}
    2850:	00000e96 	muleq	r0, r6, lr
    2854:	00129501 	andseq	r9, r2, r1, lsl #10
    2858:	65723c00 	ldrbvs	r3, [r2, #-3072]!	; 0xfffff400
    285c:	ed010071 	stc	0, cr0, [r1, #-452]	; 0xfffffe3c
    2860:	00129527 	andseq	r9, r2, r7, lsr #10
    2864:	000ebe00 	andeq	fp, lr, r0, lsl #28
    2868:	000eb600 	andeq	fp, lr, r0, lsl #12
    286c:	0b793d00 	bleq	1e51c74 <__Stack_Size+0x1e51874>
    2870:	ed010000 	stc	0, cr0, [r1, #-0]
    2874:	00005935 	andeq	r5, r0, r5, lsr r9
    2878:	000f0000 	andeq	r0, pc, r0
    287c:	000ef800 	andeq	pc, lr, r0, lsl #16
    2880:	06cc3d00 	strbeq	r3, [ip], r0, lsl #26
    2884:	ed010000 	stc	0, cr0, [r1, #-0]
    2888:	00005946 	andeq	r5, r0, r6, asr #18
    288c:	000f4200 	andeq	r4, pc, r0, lsl #4
    2890:	000f3a00 	andeq	r3, pc, r0, lsl #20
    2894:	13ac3e00 			; <UNDEFINED> instruction: 0x13ac3e00
    2898:	08b40000 	ldmeq	r4!, {}	; <UNPREDICTABLE>
    289c:	b4010800 	strlt	r0, [r1], #-2048	; 0xfffff800
    28a0:	bc080008 	stclt	0, cr0, [r8], {8}
    28a4:	01080008 	tsteq	r8, r8
    28a8:	be2507f2 	mcrlt	7, 1, r0, cr5, cr2, {7}
    28ac:	7e000013 	mcrvc	0, 0, r0, cr0, cr3, {0}
    28b0:	7c00000f 	stcvc	0, cr0, [r0], {15}
    28b4:	2500000f 	strcs	r0, [r0, #-15]
    28b8:	000013ca 	andeq	r1, r0, sl, asr #7
    28bc:	00000f94 	muleq	r0, r4, pc	; <UNPREDICTABLE>
    28c0:	00000f92 	muleq	r0, r2, pc	; <UNPREDICTABLE>
    28c4:	0008bc31 	andeq	fp, r8, r1, lsr ip
    28c8:	00149908 	andseq	r9, r4, r8, lsl #18
    28cc:	50012800 	andpl	r2, r1, r0, lsl #16
    28d0:	01283101 			; <UNDEFINED> instruction: 0x01283101
    28d4:	02030551 	andeq	r0, r3, #339738624	; 0x14400000
    28d8:	00200000 	eoreq	r0, r0, r0
    28dc:	04160000 	ldreq	r0, [r6], #-0
    28e0:	000000f3 	strdeq	r0, [r0], -r3
    28e4:	0565013f 	strbeq	r0, [r5, #-319]!	; 0xfffffec1
    28e8:	e2010000 	and	r0, r1, #0
    28ec:	090a0106 	stmdbeq	sl, {r1, r2, r8}
    28f0:	087c0000 	ldmdaeq	ip!, {}^	; <UNPREDICTABLE>
    28f4:	08a00800 	stmiaeq	r0!, {fp}
    28f8:	7d020800 	stcvc	8, cr0, [r2, #-0]
    28fc:	12ea0100 	rscne	r0, sl, #0, 2
    2900:	723c0000 	eorsvc	r0, ip, #0
    2904:	01007165 	tsteq	r0, r5, ror #2
    2908:	129526e2 	addsne	r2, r5, #236978176	; 0xe200000
    290c:	0fb40000 	svceq	0x00b40000
    2910:	0fac0000 	svceq	0x00ac0000
    2914:	4f400000 	svcmi	0x00400000
    2918:	0100000b 	tsteq	r0, fp
    291c:	12ea32e2 	rscne	r3, sl, #536870926	; 0x2000000e
    2920:	51010000 	mrspl	r0, (UNDEF: 1)
    2924:	0006cf40 	andeq	ip, r6, r0, asr #30
    2928:	42e20100 	rscmi	r0, r2, #0, 2
    292c:	000012f0 	strdeq	r1, [r0], -r0
    2930:	16005201 	strne	r5, [r0], -r1, lsl #4
    2934:	0003c104 	andeq	ip, r3, r4, lsl #2
    2938:	59041600 	stmdbpl	r4, {r9, sl, ip}
    293c:	41000000 	mrsmi	r0, (UNDEF: 0)
    2940:	00000207 	andeq	r0, r0, r7, lsl #4
    2944:	010dc501 	tsteq	sp, r1, lsl #10
    2948:	00131101 	andseq	r1, r3, r1, lsl #2
    294c:	01974200 	orrseq	r4, r7, r0, lsl #4
    2950:	c5010000 	strgt	r0, [r1, #-0]
    2954:	0000711c 	andeq	r7, r0, ip, lsl r1
    2958:	01430000 	mrseq	r0, (UNDEF: 67)
    295c:	000003bf 			; <UNDEFINED> instruction: 0x000003bf
    2960:	01069f01 	tsteq	r6, r1, lsl #30
    2964:	08000800 	stmdaeq	r0, {fp}
    2968:	0800087c 	stmdaeq	r0, {r2, r3, r4, r5, r6, fp}
    296c:	01007d02 	tsteq	r0, r2, lsl #26
    2970:	0000135c 	andeq	r1, r0, ip, asr r3
    2974:	0003d13d 	andeq	sp, r3, sp, lsr r1
    2978:	279f0100 	ldrcs	r0, [pc, r0, lsl #2]
    297c:	00000059 	andeq	r0, r0, r9, asr r0
    2980:	00000ff6 	strdeq	r0, [r0], -r6
    2984:	00000fee 	andeq	r0, r0, lr, ror #31
    2988:	000b4f40 	andeq	r4, fp, r0, asr #30
    298c:	3b9f0100 	blcc	fe7c2d94 <BootRAM+0xd733535>
    2990:	0000135c 	andeq	r1, r0, ip, asr r3
    2994:	cf405101 	svcgt	0x00405101
    2998:	01000006 	tsteq	r0, r6
    299c:	12f04b9f 	rscsne	r4, r0, #162816	; 0x27c00
    29a0:	52010000 	andpl	r0, r1, #0
    29a4:	62041600 	andvs	r1, r4, #0, 12
    29a8:	16000013 			; <UNDEFINED> instruction: 0x16000013
    29ac:	00136804 	andseq	r6, r3, r4, lsl #16
    29b0:	43454400 	movtmi	r4, #21504	; 0x5400
    29b4:	02000008 	andeq	r0, r0, #8
    29b8:	8b0113d4 	blhi	47910 <__Stack_Size+0x47510>
    29bc:	03000000 	movweq	r0, #0
    29c0:	000013ac 	andeq	r1, r0, ip, lsr #7
    29c4:	0006c642 	andeq	ip, r6, r2, asr #12
    29c8:	2ed40200 	cdpcs	2, 13, cr0, cr4, cr0, {0}
    29cc:	00000041 	andeq	r0, r0, r1, asr #32
    29d0:	66756246 	ldrbtvs	r6, [r5], -r6, asr #4
    29d4:	3fd40200 	svccc	0x00d40200
    29d8:	000012f0 	strdeq	r1, [r0], -r0
    29dc:	78646947 	stmdavc	r4!, {r0, r1, r2, r6, r8, fp, sp, lr}^
    29e0:	0bd50200 	bleq	ff5431e8 <BootRAM+0xe4b3989>
    29e4:	00000041 	andeq	r0, r0, r1, asr #32
    29e8:	73657247 	cmnvc	r5, #1879048196	; 0x70000004
    29ec:	07d60200 	ldrbeq	r0, [r6, r0, lsl #4]
    29f0:	0000008b 	andeq	r0, r0, fp, lsl #1
    29f4:	04774500 	ldrbteq	r4, [r7], #-1280	; 0xfffffb00
    29f8:	d1020000 	mrsle	r0, (UNDEF: 2)
    29fc:	008b0113 	addeq	r0, fp, r3, lsl r1
    2a00:	d7030000 	strle	r0, [r3, -r0]
    2a04:	42000013 	andmi	r0, r0, #19
    2a08:	000006c6 	andeq	r0, r0, r6, asr #13
    2a0c:	4127d102 			; <UNDEFINED> instruction: 0x4127d102
    2a10:	46000000 	strmi	r0, [r0], -r0
    2a14:	00667562 	rsbeq	r7, r6, r2, ror #10
    2a18:	f038d102 			; <UNDEFINED> instruction: 0xf038d102
    2a1c:	00000012 	andeq	r0, r0, r2, lsl r0
    2a20:	0008b941 	andeq	fp, r8, r1, asr #18
    2a24:	14c80200 	strbne	r0, [r8], #512	; 0x200
    2a28:	14160301 	ldrne	r0, [r6], #-769	; 0xfffffcff
    2a2c:	c6420000 	strbgt	r0, [r2], -r0
    2a30:	02000006 	andeq	r0, r0, #6
    2a34:	004130c8 	subeq	r3, r1, r8, asr #1
    2a38:	62460000 	subvs	r0, r6, #0
    2a3c:	02006675 	andeq	r6, r0, #122683392	; 0x7500000
    2a40:	141646c8 	ldrne	r4, [r6], #-1736	; 0xfffff938
    2a44:	cf420000 	svcgt	0x00420000
    2a48:	02000006 	andeq	r0, r0, #6
    2a4c:	005954c8 	subseq	r5, r9, r8, asr #9
    2a50:	69470000 	stmdbvs	r7, {}^	; <UNPREDICTABLE>
    2a54:	02007864 	andeq	r7, r0, #100, 16	; 0x640000
    2a58:	00410bca 	subeq	r0, r1, sl, asr #23
    2a5c:	16000000 	strne	r0, [r0], -r0
    2a60:	00004d04 	andeq	r4, r0, r4, lsl #26
    2a64:	0fd34800 	svceq	0x00d34800
    2a68:	09400000 	stmdbeq	r0, {}^	; <UNPREDICTABLE>
    2a6c:	095c0800 	ldmdbeq	ip, {fp}^
    2a70:	10300800 	eorsne	r0, r0, r0, lsl #16
    2a74:	6f010000 	svcvs	0x00010000
    2a78:	25000014 	strcs	r0, [r0, #-20]	; 0xffffffec
    2a7c:	00000fe3 	andeq	r0, r0, r3, ror #31
    2a80:	00001058 	andeq	r1, r0, r8, asr r0
    2a84:	00001050 	andeq	r1, r0, r0, asr r0
    2a88:	000fd336 	andeq	sp, pc, r6, lsr r3	; <UNPREDICTABLE>
    2a8c:	00094e00 	andeq	r4, r9, r0, lsl #28
    2a90:	01600008 	cmneq	r0, r8
    2a94:	1e010000 	cdpne	0, 0, cr0, cr1, cr0, {0}
    2a98:	e3250601 			; <UNDEFINED> instruction: 0xe3250601
    2a9c:	9400000f 	strls	r0, [r0], #-15
    2aa0:	92000010 	andls	r0, r0, #16
    2aa4:	37000010 	smladcc	r0, r0, r0, r0
    2aa8:	00000160 	andeq	r0, r0, r0, ror #2
    2aac:	00095226 	andeq	r5, r9, r6, lsr #4
    2ab0:	00100408 	andseq	r0, r0, r8, lsl #8
    2ab4:	00000000 	andeq	r0, r0, r0
    2ab8:	2b010149 	blcs	42fe4 <__Stack_Size+0x42be4>
    2abc:	2b000006 	blcs	2adc <__Stack_Size+0x26dc>
    2ac0:	02000006 	andeq	r0, r0, #6
    2ac4:	01490625 	cmpeq	r9, r5, lsr #12
    2ac8:	00075601 	andeq	r5, r7, r1, lsl #12
    2acc:	00075600 	andeq	r5, r7, r0, lsl #12
    2ad0:	06260200 	strteq	r0, [r6], -r0, lsl #4
    2ad4:	65010149 	strvs	r0, [r1, #-329]	; 0xfffffeb7
    2ad8:	65000003 	strvs	r0, [r0, #-3]
    2adc:	02000003 	andeq	r0, r0, #3
    2ae0:	014906c3 	smlalbteq	r0, r9, r3, r6
    2ae4:	00047601 	andeq	r7, r4, r1, lsl #12
    2ae8:	00047600 	andeq	r7, r4, r0, lsl #12
    2aec:	05d00200 	ldrbeq	r0, [r0, #512]	; 0x200
	...

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
   c:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
  10:	00061001 	andeq	r1, r6, r1
  14:	00240200 	eoreq	r0, r4, r0, lsl #4
  18:	0b3e0b0b 	bleq	f82c4c <__Stack_Size+0xf8284c>
  1c:	00000e03 	andeq	r0, r0, r3, lsl #28
  20:	03001603 	movweq	r1, #1539	; 0x603
  24:	3b0b3a0e 	blcc	2ce864 <__Stack_Size+0x2ce464>
  28:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
  2c:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
  30:	13490026 	movtne	r0, #36902	; 0x9026
  34:	35050000 	strcc	r0, [r5, #-0]
  38:	00134900 	andseq	r4, r3, r0, lsl #18
  3c:	00240600 	eoreq	r0, r4, r0, lsl #12
  40:	0b3e0b0b 	bleq	f82c74 <__Stack_Size+0xf82874>
  44:	00000803 	andeq	r0, r0, r3, lsl #16
  48:	03003407 	movweq	r3, #1031	; 0x407
  4c:	3b0b3a0e 	blcc	2ce88c <__Stack_Size+0x2ce48c>
  50:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
  54:	3c0c3f13 	stccc	15, cr3, [ip], {19}
  58:	0800000c 	stmdaeq	r0, {r2, r3}
  5c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
  60:	0b3b0b3a 	bleq	ec2d50 <__Stack_Size+0xec2950>
  64:	13490b39 	movtne	r0, #39737	; 0x9b39
  68:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
  6c:	01090000 	mrseq	r0, (UNDEF: 9)
  70:	01134901 	tsteq	r3, r1, lsl #18
  74:	0a000013 	beq	c8 <_Minimum_Stack_Size-0x38>
  78:	13490021 	movtne	r0, #36897	; 0x9021
  7c:	00000b2f 	andeq	r0, r0, pc, lsr #22
  80:	0b01130b 	bleq	44cb4 <__Stack_Size+0x448b4>
  84:	3b0b3a0b 	blcc	2ce8b8 <__Stack_Size+0x2ce4b8>
  88:	010b3905 	tsteq	fp, r5, lsl #18
  8c:	0c000013 	stceq	0, cr0, [r0], {19}
  90:	0803000d 	stmdaeq	r3, {r0, r2, r3}
  94:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
  98:	13490b39 	movtne	r0, #39737	; 0x9b39
  9c:	00000a38 	andeq	r0, r0, r8, lsr sl
  a0:	03000d0d 	movweq	r0, #3341	; 0xd0d
  a4:	3b0b3a0e 	blcc	2ce8e4 <__Stack_Size+0x2ce4e4>
  a8:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
  ac:	000a3813 	andeq	r3, sl, r3, lsl r8
  b0:	00160e00 	andseq	r0, r6, r0, lsl #28
  b4:	0b3a0e03 	bleq	e838c8 <__Stack_Size+0xe834c8>
  b8:	0b39053b 	bleq	e415ac <__Stack_Size+0xe411ac>
  bc:	00001349 	andeq	r1, r0, r9, asr #6
  c0:	3f012e0f 	svccc	0x00012e0f
  c4:	3a0e030c 	bcc	380cfc <__Stack_Size+0x3808fc>
  c8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  cc:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
  d0:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
  d4:	97064001 	strls	r4, [r6, -r1]
  d8:	13010c42 	movwne	r0, #7234	; 0x1c42
  dc:	1d100000 	ldcne	0, cr0, [r0, #-0]
  e0:	52133100 	andspl	r3, r3, #0, 2
  e4:	0b42b801 	bleq	10ae0f0 <__Stack_Size+0x10adcf0>
  e8:	01120111 	tsteq	r2, r1, lsl r1
  ec:	0b590b58 	bleq	1642e54 <__Stack_Size+0x1642a54>
  f0:	00000b57 	andeq	r0, r0, r7, asr fp
  f4:	01828911 	orreq	r8, r2, r1, lsl r9
  f8:	31011100 	mrscc	r1, (UNDEF: 17)
  fc:	12000013 	andne	r0, r0, #19
 100:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 50 <_Minimum_Stack_Size-0xb0>
 104:	0b3a0e03 	bleq	e83918 <__Stack_Size+0xe83518>
 108:	0b390b3b 	bleq	e42dfc <__Stack_Size+0xe429fc>
 10c:	01110c27 	tsteq	r1, r7, lsr #24
 110:	0a400112 	beq	1000560 <__Stack_Size+0x1000160>
 114:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
 118:	13000013 	movwne	r0, #19
 11c:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
 120:	0b3b0b3a 	bleq	ec2e10 <__Stack_Size+0xec2a10>
 124:	13490b39 	movtne	r0, #39737	; 0x9b39
 128:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
 12c:	14000006 	strne	r0, [r0], #-6
 130:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 80 <_Minimum_Stack_Size-0x80>
 134:	0b3a0e03 	bleq	e83948 <__Stack_Size+0xe83548>
 138:	0b390b3b 	bleq	e42e2c <__Stack_Size+0xe42a2c>
 13c:	01110c27 	tsteq	r1, r7, lsr #24
 140:	0a400112 	beq	1000590 <__Stack_Size+0x1000190>
 144:	000c4297 	muleq	ip, r7, r2
 148:	002e1500 	eoreq	r1, lr, r0, lsl #10
 14c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
 150:	0b3b0b3a 	bleq	ec2e40 <__Stack_Size+0xec2a40>
 154:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
 158:	2e160000 	cdpcs	0, 1, cr0, cr6, cr0, {0}
 15c:	030c3f01 	movweq	r3, #52993	; 0xcf01
 160:	3b0b3a0e 	blcc	2ce9a0 <__Stack_Size+0x2ce5a0>
 164:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 168:	010b2013 	tsteq	fp, r3, lsl r0
 16c:	17000013 	smladne	r0, r3, r0, r0
 170:	08030034 	stmdaeq	r3, {r2, r4, r5}
 174:	0b3b0b3a 	bleq	ec2e64 <__Stack_Size+0xec2a64>
 178:	13490b39 	movtne	r0, #39737	; 0x9b39
 17c:	2e180000 	cdpcs	0, 1, cr0, cr8, cr0, {0}
 180:	3a0e0300 	bcc	380d88 <__Stack_Size+0x380988>
 184:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 188:	000b200b 	andeq	r2, fp, fp
 18c:	012e1900 			; <UNDEFINED> instruction: 0x012e1900
 190:	01111331 	tsteq	r1, r1, lsr r3
 194:	0a400112 	beq	10005e4 <__Stack_Size+0x10001e4>
 198:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
 19c:	1a000013 	bne	1f0 <_Minimum_Stack_Size+0xf0>
 1a0:	13310034 	teqne	r1, #52	; 0x34
 1a4:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
 1a8:	1b000006 	blne	1c8 <_Minimum_Stack_Size+0xc8>
 1ac:	13310034 	teqne	r1, #52	; 0x34
 1b0:	1d1c0000 	ldcne	0, cr0, [ip, #-0]
 1b4:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
 1b8:	0b42b801 	bleq	10ae1c4 <__Stack_Size+0x10addc4>
 1bc:	0b580655 	bleq	1601b18 <__Stack_Size+0x1601718>
 1c0:	0b570b59 	bleq	15c2f2c <__Stack_Size+0x15c2b2c>
 1c4:	0b1d0000 	bleq	7401cc <__Stack_Size+0x73fdcc>
 1c8:	00065501 	andeq	r5, r6, r1, lsl #10
 1cc:	002e1e00 	eoreq	r1, lr, r0, lsl #28
 1d0:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
 1d4:	030e4087 	movweq	r4, #57479	; 0xe087
 1d8:	3b0b3a0e 	blcc	2cea18 <__Stack_Size+0x2ce618>
 1dc:	000b390b 	andeq	r3, fp, fp, lsl #18
 1e0:	11010000 	mrsne	r0, (UNDEF: 1)
 1e4:	130e2501 	movwne	r2, #58625	; 0xe501
 1e8:	1b0e030b 	blne	380e1c <__Stack_Size+0x380a1c>
 1ec:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
 1f0:	00061001 	andeq	r1, r6, r1
 1f4:	00240200 	eoreq	r0, r4, r0, lsl #4
 1f8:	0b3e0b0b 	bleq	f82e2c <__Stack_Size+0xf82a2c>
 1fc:	00000e03 	andeq	r0, r0, r3, lsl #28
 200:	03001603 	movweq	r1, #1539	; 0x603
 204:	3b0b3a0e 	blcc	2cea44 <__Stack_Size+0x2ce644>
 208:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 20c:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
 210:	13490035 	movtne	r0, #36917	; 0x9035
 214:	26050000 	strcs	r0, [r5], -r0
 218:	00134900 	andseq	r4, r3, r0, lsl #18
 21c:	00240600 	eoreq	r0, r4, r0, lsl #12
 220:	0b3e0b0b 	bleq	f82e54 <__Stack_Size+0xf82a54>
 224:	00000803 	andeq	r0, r0, r3, lsl #16
 228:	0b000f07 	bleq	3e4c <__Stack_Size+0x3a4c>
 22c:	0013490b 	andseq	r4, r3, fp, lsl #18
 230:	01150800 	tsteq	r5, r0, lsl #16
 234:	13010c27 	movwne	r0, #7207	; 0x1c27
 238:	05090000 	streq	r0, [r9, #-0]
 23c:	00134900 	andseq	r4, r3, r0, lsl #18
 240:	01130a00 	tsteq	r3, r0, lsl #20
 244:	0b3a0b0b 	bleq	e82e78 <__Stack_Size+0xe82a78>
 248:	0b390b3b 	bleq	e42f3c <__Stack_Size+0xe42b3c>
 24c:	00001301 	andeq	r1, r0, r1, lsl #6
 250:	03000d0b 	movweq	r0, #3339	; 0xd0b
 254:	3b0b3a0e 	blcc	2cea94 <__Stack_Size+0x2ce694>
 258:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 25c:	000a3813 	andeq	r3, sl, r3, lsl r8
 260:	01040c00 	tsteq	r4, r0, lsl #24
 264:	0b0b0b3e 	bleq	2c2f64 <__Stack_Size+0x2c2b64>
 268:	0b3a1349 	bleq	e84f94 <__Stack_Size+0xe84b94>
 26c:	0b390b3b 	bleq	e42f60 <__Stack_Size+0xe42b60>
 270:	00001301 	andeq	r1, r0, r1, lsl #6
 274:	0300280d 	movweq	r2, #2061	; 0x80d
 278:	000d1c0e 	andeq	r1, sp, lr, lsl #24
 27c:	00280e00 	eoreq	r0, r8, r0, lsl #28
 280:	0b1c0e03 	bleq	703a94 <__Stack_Size+0x703694>
 284:	130f0000 	movwne	r0, #61440	; 0xf000
 288:	3a050b01 	bcc	142e94 <__Stack_Size+0x142a94>
 28c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 290:	0013010b 	andseq	r0, r3, fp, lsl #2
 294:	000d1000 	andeq	r1, sp, r0
 298:	0b3a0803 	bleq	e822ac <__Stack_Size+0xe81eac>
 29c:	0b390b3b 	bleq	e42f90 <__Stack_Size+0xe42b90>
 2a0:	0a381349 	beq	e04fcc <__Stack_Size+0xe04bcc>
 2a4:	01110000 	tsteq	r1, r0
 2a8:	01134901 	tsteq	r3, r1, lsl #18
 2ac:	12000013 	andne	r0, r0, #19
 2b0:	13490021 	movtne	r0, #36897	; 0x9021
 2b4:	00000b2f 	andeq	r0, r0, pc, lsr #22
 2b8:	49002113 	stmdbmi	r0, {r0, r1, r4, r8, sp}
 2bc:	00052f13 	andeq	r2, r5, r3, lsl pc
 2c0:	00341400 	eorseq	r1, r4, r0, lsl #8
 2c4:	0b3a0e03 	bleq	e83ad8 <__Stack_Size+0xe836d8>
 2c8:	0b39053b 	bleq	e417bc <__Stack_Size+0xe413bc>
 2cc:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 1b0 <_Minimum_Stack_Size+0xb0>
 2d0:	00000c3c 	andeq	r0, r0, ip, lsr ip
 2d4:	03003415 	movweq	r3, #1045	; 0x415
 2d8:	3b0b3a0e 	blcc	2ceb18 <__Stack_Size+0x2ce718>
 2dc:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 2e0:	3c0c3f13 	stccc	15, cr3, [ip], {19}
 2e4:	1600000c 	strne	r0, [r0], -ip
 2e8:	0b0b0113 	bleq	2c073c <__Stack_Size+0x2c033c>
 2ec:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 2f0:	13010b39 	movwne	r0, #6969	; 0x1b39
 2f4:	0d170000 	ldceq	0, cr0, [r7, #-0]
 2f8:	3a080300 	bcc	200f00 <__Stack_Size+0x200b00>
 2fc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 300:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 304:	1800000a 	stmdane	r0, {r1, r3}
 308:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 30c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 310:	13490b39 	movtne	r0, #39737	; 0x9b39
 314:	00000a38 	andeq	r0, r0, r8, lsr sl
 318:	03001619 	movweq	r1, #1561	; 0x619
 31c:	3b0b3a0e 	blcc	2ceb5c <__Stack_Size+0x2ce75c>
 320:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 324:	1a000013 	bne	378 <_Minimum_Stack_Size+0x278>
 328:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 32c:	0b3b0b3a 	bleq	ec301c <__Stack_Size+0xec2c1c>
 330:	13490b39 	movtne	r0, #39737	; 0x9b39
 334:	0b0d0b0b 	bleq	342f68 <__Stack_Size+0x342b68>
 338:	0a380b0c 	beq	e02f70 <__Stack_Size+0xe02b70>
 33c:	171b0000 	ldrne	r0, [fp, -r0]
 340:	3a0b0b01 	bcc	2c2f4c <__Stack_Size+0x2c2b4c>
 344:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 348:	0013010b 	andseq	r0, r3, fp, lsl #2
 34c:	000d1c00 	andeq	r1, sp, r0, lsl #24
 350:	0b3a0e03 	bleq	e83b64 <__Stack_Size+0xe83764>
 354:	0b390b3b 	bleq	e43048 <__Stack_Size+0xe42c48>
 358:	00001349 	andeq	r1, r0, r9, asr #6
 35c:	49000d1d 	stmdbmi	r0, {r0, r2, r3, r4, r8, sl, fp}
 360:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
 364:	1349000d 	movtne	r0, #36877	; 0x900d
 368:	00000a38 	andeq	r0, r0, r8, lsr sl
 36c:	0300341f 	movweq	r3, #1055	; 0x41f
 370:	3b0b3a0e 	blcc	2cebb0 <__Stack_Size+0x2ce7b0>
 374:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 378:	020c3f13 	andeq	r3, ip, #19, 30	; 0x4c
 37c:	2000000a 	andcs	r0, r0, sl
 380:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 384:	0b3b0b3a 	bleq	ec3074 <__Stack_Size+0xec2c74>
 388:	13490b39 	movtne	r0, #39737	; 0x9b39
 38c:	00000a02 	andeq	r0, r0, r2, lsl #20
 390:	03000d21 	movweq	r0, #3361	; 0xd21
 394:	3b0b3a0e 	blcc	2cebd4 <__Stack_Size+0x2ce7d4>
 398:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 39c:	0d0b0b13 	vstreq	d0, [fp, #-76]	; 0xffffffb4
 3a0:	380b0c0b 	stmdacc	fp, {r0, r1, r3, sl, fp}
 3a4:	2200000a 	andcs	r0, r0, #10
 3a8:	0b0b0117 	bleq	2c080c <__Stack_Size+0x2c040c>
 3ac:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 3b0:	13010b39 	movwne	r0, #6969	; 0x1b39
 3b4:	0d230000 	stceq	0, cr0, [r3, #-0]
 3b8:	3a0e0300 	bcc	380fc0 <__Stack_Size+0x380bc0>
 3bc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 3c0:	0013490b 	andseq	r4, r3, fp, lsl #18
 3c4:	012e2400 			; <UNDEFINED> instruction: 0x012e2400
 3c8:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
 3cc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 3d0:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
 3d4:	01111349 	tsteq	r1, r9, asr #6
 3d8:	06400112 			; <UNDEFINED> instruction: 0x06400112
 3dc:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
 3e0:	25000013 	strcs	r0, [r0, #-19]	; 0xffffffed
 3e4:	08030005 	stmdaeq	r3, {r0, r2}
 3e8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 3ec:	13490b39 	movtne	r0, #39737	; 0x9b39
 3f0:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
 3f4:	26000006 	strcs	r0, [r0], -r6
 3f8:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 3fc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 400:	13490b39 	movtne	r0, #39737	; 0x9b39
 404:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
 408:	27000006 	strcs	r0, [r0, -r6]
 40c:	08030034 	stmdaeq	r3, {r2, r4, r5}
 410:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 414:	13490b39 	movtne	r0, #39737	; 0x9b39
 418:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
 41c:	28000006 	stmdacs	r0, {r1, r2}
 420:	0655010b 	ldrbeq	r0, [r5], -fp, lsl #2
 424:	2e290000 	cdpcs	0, 2, cr0, cr9, cr0, {0}
 428:	030c3f01 	movweq	r3, #52993	; 0xcf01
 42c:	3b0b3a0e 	blcc	2cec6c <__Stack_Size+0x2ce86c>
 430:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
 434:	1201110c 	andne	r1, r1, #12, 2
 438:	97064001 	strls	r4, [r6, -r1]
 43c:	13010c42 	movwne	r0, #7234	; 0x1c42
 440:	052a0000 	streq	r0, [sl, #-0]!
 444:	3a080300 	bcc	20104c <__Stack_Size+0x200c4c>
 448:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 44c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 450:	2b00000a 	blcs	480 <__Stack_Size+0x80>
 454:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
 458:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 45c:	13490b39 	movtne	r0, #39737	; 0x9b39
 460:	00000a02 	andeq	r0, r0, r2, lsl #20
 464:	3f012e2c 	svccc	0x00012e2c
 468:	3a0e030c 	bcc	3810a0 <__Stack_Size+0x380ca0>
 46c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 470:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
 474:	97064001 	strls	r4, [r6, -r1]
 478:	13010c42 	movwne	r0, #7234	; 0x1c42
 47c:	0b2d0000 	bleq	b40484 <__Stack_Size+0xb40084>
 480:	01065501 	tsteq	r6, r1, lsl #10
 484:	2e000013 	mcrcs	0, 0, r0, cr0, cr3, {0}
 488:	0111010b 	tsteq	r1, fp, lsl #2
 48c:	13010112 	movwne	r0, #4370	; 0x1112
 490:	892f0000 	stmdbhi	pc!, {}	; <UNPREDICTABLE>
 494:	11010182 	smlabbne	r1, r2, r1, r0
 498:	00130101 	andseq	r0, r3, r1, lsl #2
 49c:	828a3000 	addhi	r3, sl, #0
 4a0:	0a020001 	beq	804ac <__Stack_Size+0x800ac>
 4a4:	000a4291 	muleq	sl, r1, r2
 4a8:	82893100 	addhi	r3, r9, #0, 2
 4ac:	01110101 	tsteq	r1, r1, lsl #2
 4b0:	89320000 	ldmdbhi	r2!, {}	; <UNPREDICTABLE>
 4b4:	11000182 	smlabbne	r0, r2, r1, r0
 4b8:	00133101 	andseq	r3, r3, r1, lsl #2
 4bc:	82893300 	addhi	r3, r9, #0, 6
 4c0:	01110101 	tsteq	r1, r1, lsl #2
 4c4:	13011331 	movwne	r1, #4913	; 0x1331
 4c8:	2e340000 	cdpcs	0, 3, cr0, cr4, cr0, {0}
 4cc:	030c3f01 	movweq	r3, #52993	; 0xcf01
 4d0:	3b0b3a0e 	blcc	2ced10 <__Stack_Size+0x2ce910>
 4d4:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 4d8:	1201110c 	andne	r1, r1, #12, 2
 4dc:	97064001 	strls	r4, [r6, -r1]
 4e0:	13010c42 	movwne	r0, #7234	; 0x1c42
 4e4:	05350000 	ldreq	r0, [r5, #-0]!
 4e8:	3a0e0300 	bcc	3810f0 <__Stack_Size+0x380cf0>
 4ec:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 4f0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 4f4:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
 4f8:	05360000 	ldreq	r0, [r6, #-0]!
 4fc:	3a0e0300 	bcc	381104 <__Stack_Size+0x380d04>
 500:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 504:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 508:	3700000a 	strcc	r0, [r0, -sl]
 50c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 510:	0b3b0b3a 	bleq	ec3200 <__Stack_Size+0xec2e00>
 514:	13490b39 	movtne	r0, #39737	; 0x9b39
 518:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
 51c:	38000006 	stmdacc	r0, {r1, r2}
 520:	08030034 	stmdaeq	r3, {r2, r4, r5}
 524:	0b3b0b3a 	bleq	ec3214 <__Stack_Size+0xec2e14>
 528:	13490b39 	movtne	r0, #39737	; 0x9b39
 52c:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
 530:	39000006 	stmdbcc	r0, {r1, r2}
 534:	0e03012e 	adfeqsp	f0, f3, #0.5
 538:	0b3b0b3a 	bleq	ec3228 <__Stack_Size+0xec2e28>
 53c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
 540:	01120111 	tsteq	r2, r1, lsl r1
 544:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
 548:	0013010c 	andseq	r0, r3, ip, lsl #2
 54c:	82893a00 	addhi	r3, r9, #0, 20
 550:	01110101 	tsteq	r1, r1, lsl #2
 554:	00001331 	andeq	r1, r0, r1, lsr r3
 558:	31011d3b 	tstcc	r1, fp, lsr sp
 55c:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
 560:	01110b42 	tsteq	r1, r2, asr #22
 564:	0b580112 	bleq	16009b4 <__Stack_Size+0x16005b4>
 568:	0b570b59 	bleq	15c32d4 <__Stack_Size+0x15c2ed4>
 56c:	00001301 	andeq	r1, r0, r1, lsl #6
 570:	3100053c 	tstcc	r0, ip, lsr r5
 574:	b7060213 	smladlt	r6, r3, r2, r0
 578:	00000642 	andeq	r0, r0, r2, asr #12
 57c:	31011d3d 	tstcc	r1, sp, lsr sp
 580:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
 584:	06550b42 	ldrbeq	r0, [r5], -r2, asr #22
 588:	0b590b58 	bleq	16432f0 <__Stack_Size+0x1642ef0>
 58c:	13010b57 	movwne	r0, #6999	; 0x1b57
 590:	0f3e0000 	svceq	0x003e0000
 594:	000b0b00 	andeq	r0, fp, r0, lsl #22
 598:	00263f00 	eoreq	r3, r6, r0, lsl #30
 59c:	2e400000 	cdpcs	0, 4, cr0, cr0, cr0, {0}
 5a0:	3a0e0301 	bcc	3811ac <__Stack_Size+0x380dac>
 5a4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 5a8:	200c270b 	andcs	r2, ip, fp, lsl #14
 5ac:	0013010b 	andseq	r0, r3, fp, lsl #2
 5b0:	00054100 	andeq	r4, r5, r0, lsl #2
 5b4:	0b3a0803 	bleq	e825c8 <__Stack_Size+0xe821c8>
 5b8:	0b390b3b 	bleq	e432ac <__Stack_Size+0xe42eac>
 5bc:	00001349 	andeq	r1, r0, r9, asr #6
 5c0:	03000542 	movweq	r0, #1346	; 0x542
 5c4:	3b0b3a0e 	blcc	2cee04 <__Stack_Size+0x2cea04>
 5c8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 5cc:	43000013 	movwmi	r0, #19
 5d0:	1331011d 	teqne	r1, #1073741831	; 0x40000007
 5d4:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
 5d8:	5806550b 	stmdapl	r6, {r0, r1, r3, r8, sl, ip, lr}
 5dc:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
 5e0:	4400000b 	strmi	r0, [r0], #-11
 5e4:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 534 <__Stack_Size+0x134>
 5e8:	0b3a0e03 	bleq	e83dfc <__Stack_Size+0xe839fc>
 5ec:	0b390b3b 	bleq	e432e0 <__Stack_Size+0xe42ee0>
 5f0:	01120111 	tsteq	r2, r1, lsl r1
 5f4:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
 5f8:	0013010c 	andseq	r0, r3, ip, lsl #2
 5fc:	010b4500 	tsteq	fp, r0, lsl #10
 600:	00001301 	andeq	r1, r0, r1, lsl #6
 604:	03003446 	movweq	r3, #1094	; 0x446
 608:	3b0b3a0e 	blcc	2cee48 <__Stack_Size+0x2cea48>
 60c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 610:	47000013 	smladmi	r0, r3, r0, r0
 614:	1331011d 	teqne	r1, #1073741831	; 0x40000007
 618:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
 61c:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
 620:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
 624:	000b570b 	andeq	r5, fp, fp, lsl #14
 628:	012e4800 			; <UNDEFINED> instruction: 0x012e4800
 62c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
 630:	0b3b0b3a 	bleq	ec3320 <__Stack_Size+0xec2f20>
 634:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
 638:	01111349 	tsteq	r1, r9, asr #6
 63c:	0a400112 	beq	1000a8c <__Stack_Size+0x100068c>
 640:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
 644:	49000013 	stmdbmi	r0, {r0, r1, r4}
 648:	08030005 	stmdaeq	r3, {r0, r2}
 64c:	0b3b0b3a 	bleq	ec333c <__Stack_Size+0xec2f3c>
 650:	13490b39 	movtne	r0, #39737	; 0x9b39
 654:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
 658:	4a000006 	bmi	678 <__Stack_Size+0x278>
 65c:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 5ac <__Stack_Size+0x1ac>
 660:	0b3a0e03 	bleq	e83e74 <__Stack_Size+0xe83a74>
 664:	0b390b3b 	bleq	e43358 <__Stack_Size+0xe42f58>
 668:	2e4b0000 	cdpcs	0, 4, cr0, cr11, cr0, {0}
 66c:	030c3f00 	movweq	r3, #52992	; 0xcf00
 670:	3b0b3a0e 	blcc	2ceeb0 <__Stack_Size+0x2ceab0>
 674:	200b390b 	andcs	r3, fp, fp, lsl #18
 678:	4c00000b 	stcmi	0, cr0, [r0], {11}
 67c:	0e03012e 	adfeqsp	f0, f3, #0.5
 680:	0b3b0b3a 	bleq	ec3370 <__Stack_Size+0xec2f70>
 684:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
 688:	0b201349 	bleq	8053b4 <__Stack_Size+0x804fb4>
 68c:	00001301 	andeq	r1, r0, r1, lsl #6
 690:	03012e4d 	movweq	r2, #7757	; 0x1e4d
 694:	3b0b3a0e 	blcc	2ceed4 <__Stack_Size+0x2cead4>
 698:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
 69c:	010b200c 	tsteq	fp, ip
 6a0:	4e000013 	mcrmi	0, 0, r0, cr0, cr3, {0}
 6a4:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
 6a8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 6ac:	13490b39 	movtne	r0, #39737	; 0x9b39
 6b0:	2e4f0000 	cdpcs	0, 4, cr0, cr15, cr0, {0}
 6b4:	11133100 	tstne	r3, r0, lsl #2
 6b8:	40011201 	andmi	r1, r1, r1, lsl #4
 6bc:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
 6c0:	2e500000 	cdpcs	0, 5, cr0, cr0, cr0, {0}
 6c4:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
 6c8:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
 6cc:	0b3a0e03 	bleq	e83ee0 <__Stack_Size+0xe83ae0>
 6d0:	0b390b3b 	bleq	e433c4 <__Stack_Size+0xe42fc4>
 6d4:	01000000 	mrseq	r0, (UNDEF: 0)
 6d8:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
 6dc:	0e030b13 	vmoveq.32	d3[0], r0
 6e0:	01110e1b 	tsteq	r1, fp, lsl lr
 6e4:	06100112 			; <UNDEFINED> instruction: 0x06100112
 6e8:	24020000 	strcs	r0, [r2], #-0
 6ec:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 6f0:	000e030b 	andeq	r0, lr, fp, lsl #6
 6f4:	00160300 	andseq	r0, r6, r0, lsl #6
 6f8:	0b3a0e03 	bleq	e83f0c <__Stack_Size+0xe83b0c>
 6fc:	0b390b3b 	bleq	e433f0 <__Stack_Size+0xe42ff0>
 700:	00001349 	andeq	r1, r0, r9, asr #6
 704:	49002604 	stmdbmi	r0, {r2, r9, sl, sp}
 708:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
 70c:	13490035 	movtne	r0, #36917	; 0x9035
 710:	24060000 	strcs	r0, [r6], #-0
 714:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 718:	0008030b 	andeq	r0, r8, fp, lsl #6
 71c:	01130700 	tsteq	r3, r0, lsl #14
 720:	0b3a0b0b 	bleq	e83354 <__Stack_Size+0xe82f54>
 724:	0b390b3b 	bleq	e43418 <__Stack_Size+0xe43018>
 728:	00001301 	andeq	r1, r0, r1, lsl #6
 72c:	03000d08 	movweq	r0, #3336	; 0xd08
 730:	3b0b3a0e 	blcc	2cef70 <__Stack_Size+0x2ceb70>
 734:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 738:	000a3813 	andeq	r3, sl, r3, lsl r8
 73c:	00340900 	eorseq	r0, r4, r0, lsl #18
 740:	0b3a0e03 	bleq	e83f54 <__Stack_Size+0xe83b54>
 744:	0b39053b 	bleq	e41c38 <__Stack_Size+0xe41838>
 748:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 62c <__Stack_Size+0x22c>
 74c:	00000c3c 	andeq	r0, r0, ip, lsr ip
 750:	0300340a 	movweq	r3, #1034	; 0x40a
 754:	3b0b3a0e 	blcc	2cef94 <__Stack_Size+0x2ceb94>
 758:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 75c:	3c0c3f13 	stccc	15, cr3, [ip], {19}
 760:	0b00000c 	bleq	798 <__Stack_Size+0x398>
 764:	13490101 	movtne	r0, #37121	; 0x9101
 768:	00001301 	andeq	r1, r0, r1, lsl #6
 76c:	4900210c 	stmdbmi	r0, {r2, r3, r8, sp}
 770:	000b2f13 	andeq	r2, fp, r3, lsl pc
 774:	01130d00 	tsteq	r3, r0, lsl #26
 778:	0b3a0b0b 	bleq	e833ac <__Stack_Size+0xe82fac>
 77c:	0b39053b 	bleq	e41c70 <__Stack_Size+0xe41870>
 780:	00001301 	andeq	r1, r0, r1, lsl #6
 784:	03000d0e 	movweq	r0, #3342	; 0xd0e
 788:	3b0b3a0e 	blcc	2cefc8 <__Stack_Size+0x2cebc8>
 78c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 790:	000a3813 	andeq	r3, sl, r3, lsl r8
 794:	000d0f00 	andeq	r0, sp, r0, lsl #30
 798:	0b3a0803 	bleq	e827ac <__Stack_Size+0xe823ac>
 79c:	0b39053b 	bleq	e41c90 <__Stack_Size+0xe41890>
 7a0:	0a381349 	beq	e054cc <__Stack_Size+0xe050cc>
 7a4:	16100000 	ldrne	r0, [r0], -r0
 7a8:	3a0e0300 	bcc	3813b0 <__Stack_Size+0x380fb0>
 7ac:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 7b0:	0013490b 	andseq	r4, r3, fp, lsl #18
 7b4:	01171100 	tsteq	r7, r0, lsl #2
 7b8:	0b3a0b0b 	bleq	e833ec <__Stack_Size+0xe82fec>
 7bc:	0b390b3b 	bleq	e434b0 <__Stack_Size+0xe430b0>
 7c0:	00001301 	andeq	r1, r0, r1, lsl #6
 7c4:	03000d12 	movweq	r0, #3346	; 0xd12
 7c8:	3b0b3a0e 	blcc	2cf008 <__Stack_Size+0x2cec08>
 7cc:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 7d0:	13000013 	movwne	r0, #19
 7d4:	0b0b000f 	bleq	2c0818 <__Stack_Size+0x2c0418>
 7d8:	13140000 	tstne	r4, #0
 7dc:	0b0e0301 	bleq	3813e8 <__Stack_Size+0x380fe8>
 7e0:	3b0b3a0b 	blcc	2cf014 <__Stack_Size+0x2cec14>
 7e4:	010b390b 	tsteq	fp, fp, lsl #18
 7e8:	15000013 	strne	r0, [r0, #-19]	; 0xffffffed
 7ec:	0803000d 	stmdaeq	r3, {r0, r2, r3}
 7f0:	0b3b0b3a 	bleq	ec34e0 <__Stack_Size+0xec30e0>
 7f4:	13490b39 	movtne	r0, #39737	; 0x9b39
 7f8:	00000a38 	andeq	r0, r0, r8, lsr sl
 7fc:	0b000f16 	bleq	445c <__Stack_Size+0x405c>
 800:	0013490b 	andseq	r4, r3, fp, lsl #18
 804:	01131700 	tsteq	r3, r0, lsl #14
 808:	050b0e03 	streq	r0, [fp, #-3587]	; 0xfffff1fd
 80c:	0b3b0b3a 	bleq	ec34fc <__Stack_Size+0xec30fc>
 810:	13010b39 	movwne	r0, #6969	; 0x1b39
 814:	15180000 	ldrne	r0, [r8, #-0]
 818:	000c2700 	andeq	r2, ip, r0, lsl #14
 81c:	01151900 	tsteq	r5, r0, lsl #18
 820:	13490c27 	movtne	r0, #39975	; 0x9c27
 824:	00001301 	andeq	r1, r0, r1, lsl #6
 828:	4900051a 	stmdbmi	r0, {r1, r3, r4, r8, sl}
 82c:	1b000013 	blne	880 <__Stack_Size+0x480>
 830:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
 834:	0b3a050b 	bleq	e81c68 <__Stack_Size+0xe81868>
 838:	0b39053b 	bleq	e41d2c <__Stack_Size+0xe4192c>
 83c:	00001301 	andeq	r1, r0, r1, lsl #6
 840:	0301131c 	movweq	r1, #4892	; 0x131c
 844:	3a0b0b0e 	bcc	2c3484 <__Stack_Size+0x2c3084>
 848:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 84c:	0013010b 	andseq	r0, r3, fp, lsl #2
 850:	01171d00 	tsteq	r7, r0, lsl #26
 854:	0b3a0b0b 	bleq	e83488 <__Stack_Size+0xe83088>
 858:	0b39053b 	bleq	e41d4c <__Stack_Size+0xe4194c>
 85c:	00001301 	andeq	r1, r0, r1, lsl #6
 860:	03000d1e 	movweq	r0, #3358	; 0xd1e
 864:	3b0b3a0e 	blcc	2cf0a4 <__Stack_Size+0x2ceca4>
 868:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 86c:	1f000013 	svcne	0x00000013
 870:	0e030013 	mcreq	0, 0, r0, cr3, cr3, {0}
 874:	00000c3c 	andeq	r0, r0, ip, lsr ip
 878:	27011520 	strcs	r1, [r1, -r0, lsr #10]
 87c:	0013010c 	andseq	r0, r3, ip, lsl #2
 880:	00342100 	eorseq	r2, r4, r0, lsl #2
 884:	0b3a0e03 	bleq	e84098 <__Stack_Size+0xe83c98>
 888:	0b390b3b 	bleq	e4357c <__Stack_Size+0xe4317c>
 88c:	0a021349 	beq	855b8 <__Stack_Size+0x851b8>
 890:	34220000 	strtcc	r0, [r2], #-0
 894:	3a0e0300 	bcc	38149c <__Stack_Size+0x38109c>
 898:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 89c:	3f13490b 	svccc	0x0013490b
 8a0:	000a020c 	andeq	r0, sl, ip, lsl #4
 8a4:	012e2300 			; <UNDEFINED> instruction: 0x012e2300
 8a8:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
 8ac:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 8b0:	01110b39 	tsteq	r1, r9, lsr fp
 8b4:	06400112 			; <UNDEFINED> instruction: 0x06400112
 8b8:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
 8bc:	24000013 	strcs	r0, [r0], #-19	; 0xffffffed
 8c0:	1331011d 	teqne	r1, #1073741831	; 0x40000007
 8c4:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
 8c8:	5806550b 	stmdapl	r6, {r0, r1, r3, r8, sl, ip, lr}
 8cc:	5705590b 	strpl	r5, [r5, -fp, lsl #18]
 8d0:	0013010b 	andseq	r0, r3, fp, lsl #2
 8d4:	00052500 	andeq	r2, r5, r0, lsl #10
 8d8:	06021331 			; <UNDEFINED> instruction: 0x06021331
 8dc:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
 8e0:	82892600 	addhi	r2, r9, #0, 12
 8e4:	01110001 	tsteq	r1, r1
 8e8:	00001331 	andeq	r1, r0, r1, lsr r3
 8ec:	01828927 	orreq	r8, r2, r7, lsr #18
 8f0:	31011101 	tstcc	r1, r1, lsl #2
 8f4:	00130113 	andseq	r0, r3, r3, lsl r1
 8f8:	828a2800 	addhi	r2, sl, #0, 16
 8fc:	0a020001 	beq	80908 <__Stack_Size+0x80508>
 900:	000a4291 	muleq	sl, r1, r2
 904:	82892900 	addhi	r2, r9, #0, 18
 908:	01110101 	tsteq	r1, r1, lsl #2
 90c:	310c4295 			; <UNDEFINED> instruction: 0x310c4295
 910:	2a000013 	bcs	964 <__Stack_Size+0x564>
 914:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 864 <__Stack_Size+0x464>
 918:	0b3a0e03 	bleq	e8412c <__Stack_Size+0xe83d2c>
 91c:	0b39053b 	bleq	e41e10 <__Stack_Size+0xe41a10>
 920:	0b200c27 	bleq	8039c4 <__Stack_Size+0x8035c4>
 924:	00001301 	andeq	r1, r0, r1, lsl #6
 928:	0300052b 	movweq	r0, #1323	; 0x52b
 92c:	3b0b3a0e 	blcc	2cf16c <__Stack_Size+0x2ced6c>
 930:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 934:	2c000013 	stccs	0, cr0, [r0], {19}
 938:	08030034 	stmdaeq	r3, {r2, r4, r5}
 93c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 940:	13490b39 	movtne	r0, #39737	; 0x9b39
 944:	00000a02 	andeq	r0, r0, r2, lsl #20
 948:	3f012e2d 	svccc	0x00012e2d
 94c:	3a0e030c 	bcc	381584 <__Stack_Size+0x381184>
 950:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 954:	1113490b 	tstne	r3, fp, lsl #18
 958:	40011201 	andmi	r1, r1, r1, lsl #4
 95c:	0c429706 	mcrreq	7, 0, r9, r2, cr6
 960:	00001301 	andeq	r1, r0, r1, lsl #6
 964:	31011d2e 	tstcc	r1, lr, lsr #26
 968:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
 96c:	01110b42 	tsteq	r1, r2, asr #22
 970:	0b580112 	bleq	1600dc0 <__Stack_Size+0x16009c0>
 974:	0b570559 	bleq	15c1ee0 <__Stack_Size+0x15c1ae0>
 978:	00001301 	andeq	r1, r0, r1, lsl #6
 97c:	11010b2f 	tstne	r1, pc, lsr #22
 980:	00011201 	andeq	r1, r1, r1, lsl #4
 984:	00343000 	eorseq	r3, r4, r0
 988:	06021331 			; <UNDEFINED> instruction: 0x06021331
 98c:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
 990:	82893100 	addhi	r3, r9, #0, 2
 994:	01110101 	tsteq	r1, r1, lsl #2
 998:	00001331 	andeq	r1, r0, r1, lsr r3
 99c:	3f012e32 	svccc	0x00012e32
 9a0:	3a0e030c 	bcc	3815d8 <__Stack_Size+0x3811d8>
 9a4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 9a8:	110c270b 	tstne	ip, fp, lsl #14
 9ac:	40011201 	andmi	r1, r1, r1, lsl #4
 9b0:	0c429706 	mcrreq	7, 0, r9, r2, cr6
 9b4:	00001301 	andeq	r1, r0, r1, lsl #6
 9b8:	03000533 	movweq	r0, #1331	; 0x533
 9bc:	3b0b3a08 	blcc	2cf1e4 <__Stack_Size+0x2cede4>
 9c0:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 9c4:	000a0213 	andeq	r0, sl, r3, lsl r2
 9c8:	00053400 	andeq	r3, r5, r0, lsl #8
 9cc:	0b3a0e03 	bleq	e841e0 <__Stack_Size+0xe83de0>
 9d0:	0b39053b 	bleq	e41ec4 <__Stack_Size+0xe41ac4>
 9d4:	06021349 	streq	r1, [r2], -r9, asr #6
 9d8:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
 9dc:	00343500 	eorseq	r3, r4, r0, lsl #10
 9e0:	0b3a0803 	bleq	e829f4 <__Stack_Size+0xe825f4>
 9e4:	0b39053b 	bleq	e41ed8 <__Stack_Size+0xe41ad8>
 9e8:	00001349 	andeq	r1, r0, r9, asr #6
 9ec:	31011d36 	tstcc	r1, r6, lsr sp
 9f0:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
 9f4:	06550b42 	ldrbeq	r0, [r5], -r2, asr #22
 9f8:	05590b58 	ldrbeq	r0, [r9, #-2904]	; 0xfffff4a8
 9fc:	00000b57 	andeq	r0, r0, r7, asr fp
 a00:	55010b37 	strpl	r0, [r1, #-2871]	; 0xfffff4c9
 a04:	38000006 	stmdacc	r0, {r1, r2}
 a08:	13310034 	teqne	r1, #52	; 0x34
 a0c:	2e390000 	cdpcs	0, 3, cr0, cr9, cr0, {0}
 a10:	030c3f01 	movweq	r3, #52993	; 0xcf01
 a14:	3b0b3a0e 	blcc	2cf254 <__Stack_Size+0x2cee54>
 a18:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
 a1c:	1201110c 	andne	r1, r1, #12, 2
 a20:	970a4001 	strls	r4, [sl, -r1]
 a24:	13010c42 	movwne	r0, #7234	; 0x1c42
 a28:	053a0000 	ldreq	r0, [sl, #-0]!
 a2c:	3a0e0300 	bcc	381634 <__Stack_Size+0x381234>
 a30:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 a34:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 a38:	3b00000a 	blcc	a68 <__Stack_Size+0x668>
 a3c:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 98c <__Stack_Size+0x58c>
 a40:	0b3a0e03 	bleq	e84254 <__Stack_Size+0xe83e54>
 a44:	0b390b3b 	bleq	e43738 <__Stack_Size+0xe43338>
 a48:	13490c27 	movtne	r0, #39975	; 0x9c27
 a4c:	01120111 	tsteq	r2, r1, lsl r1
 a50:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
 a54:	0013010c 	andseq	r0, r3, ip, lsl #2
 a58:	00053c00 	andeq	r3, r5, r0, lsl #24
 a5c:	0b3a0803 	bleq	e82a70 <__Stack_Size+0xe82670>
 a60:	0b390b3b 	bleq	e43754 <__Stack_Size+0xe43354>
 a64:	06021349 	streq	r1, [r2], -r9, asr #6
 a68:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
 a6c:	00053d00 	andeq	r3, r5, r0, lsl #26
 a70:	0b3a0e03 	bleq	e84284 <__Stack_Size+0xe83e84>
 a74:	0b390b3b 	bleq	e43768 <__Stack_Size+0xe43368>
 a78:	06021349 	streq	r1, [r2], -r9, asr #6
 a7c:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
 a80:	011d3e00 	tsteq	sp, r0, lsl #28
 a84:	01521331 	cmpeq	r2, r1, lsr r3
 a88:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
 a8c:	58011201 	stmdapl	r1, {r0, r9, ip}
 a90:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
 a94:	3f00000b 	svccc	0x0000000b
 a98:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 9e8 <__Stack_Size+0x5e8>
 a9c:	0b3a0e03 	bleq	e842b0 <__Stack_Size+0xe83eb0>
 aa0:	0b390b3b 	bleq	e43794 <__Stack_Size+0xe43394>
 aa4:	13490c27 	movtne	r0, #39975	; 0x9c27
 aa8:	01120111 	tsteq	r2, r1, lsl r1
 aac:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
 ab0:	0013010c 	andseq	r0, r3, ip, lsl #2
 ab4:	00054000 	andeq	r4, r5, r0
 ab8:	0b3a0e03 	bleq	e842cc <__Stack_Size+0xe83ecc>
 abc:	0b390b3b 	bleq	e437b0 <__Stack_Size+0xe433b0>
 ac0:	0a021349 	beq	857ec <__Stack_Size+0x853ec>
 ac4:	2e410000 	cdpcs	0, 4, cr0, cr1, cr0, {0}
 ac8:	3a0e0301 	bcc	3816d4 <__Stack_Size+0x3812d4>
 acc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 ad0:	200c270b 	andcs	r2, ip, fp, lsl #14
 ad4:	0013010b 	andseq	r0, r3, fp, lsl #2
 ad8:	00054200 	andeq	r4, r5, r0, lsl #4
 adc:	0b3a0e03 	bleq	e842f0 <__Stack_Size+0xe83ef0>
 ae0:	0b390b3b 	bleq	e437d4 <__Stack_Size+0xe433d4>
 ae4:	00001349 	andeq	r1, r0, r9, asr #6
 ae8:	3f012e43 	svccc	0x00012e43
 aec:	3a0e030c 	bcc	381724 <__Stack_Size+0x381324>
 af0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 af4:	110c270b 	tstne	ip, fp, lsl #14
 af8:	40011201 	andmi	r1, r1, r1, lsl #4
 afc:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
 b00:	00001301 	andeq	r1, r0, r1, lsl #6
 b04:	00002644 	andeq	r2, r0, r4, asr #12
 b08:	012e4500 			; <UNDEFINED> instruction: 0x012e4500
 b0c:	0b3a0e03 	bleq	e84320 <__Stack_Size+0xe83f20>
 b10:	0b390b3b 	bleq	e43804 <__Stack_Size+0xe43404>
 b14:	13490c27 	movtne	r0, #39975	; 0x9c27
 b18:	13010b20 	movwne	r0, #6944	; 0x1b20
 b1c:	05460000 	strbeq	r0, [r6, #-0]
 b20:	3a080300 	bcc	201728 <__Stack_Size+0x201328>
 b24:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 b28:	0013490b 	andseq	r4, r3, fp, lsl #18
 b2c:	00344700 	eorseq	r4, r4, r0, lsl #14
 b30:	0b3a0803 	bleq	e82b44 <__Stack_Size+0xe82744>
 b34:	0b390b3b 	bleq	e43828 <__Stack_Size+0xe43428>
 b38:	00001349 	andeq	r1, r0, r9, asr #6
 b3c:	31012e48 	tstcc	r1, r8, asr #28
 b40:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
 b44:	97064001 	strls	r4, [r6, -r1]
 b48:	13010c42 	movwne	r0, #7234	; 0x1c42
 b4c:	2e490000 	cdpcs	0, 4, cr0, cr9, cr0, {0}
 b50:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
 b54:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
 b58:	0b3a0e03 	bleq	e8436c <__Stack_Size+0xe83f6c>
 b5c:	0b390b3b 	bleq	e43850 <__Stack_Size+0xe43450>
 b60:	Address 0x0000000000000b60 is out of bounds.


Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	00000234 	andeq	r0, r0, r4, lsr r2
   4:	00af0003 	adceq	r0, pc, r3
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	73010000 	movwvc	r0, #4096	; 0x1000
  1c:	6c006372 	stcvs	3, cr6, [r0], {114}	; 0x72
  20:	692f6269 	stmdbvs	pc!, {r0, r3, r5, r6, r9, sp, lr}	; <UNPREDICTABLE>
  24:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
  28:	2f006564 	svccs	0x00006564
  2c:	2f727375 	svccs	0x00727375
  30:	2f62696c 	svccs	0x0062696c
  34:	2f636367 	svccs	0x00636367
  38:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
  3c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
  40:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
  44:	2e382f69 	cdpcs	15, 3, cr2, cr8, cr9, {3}
  48:	2f312e33 	svccs	0x00312e33
  4c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
  50:	00656475 	rsbeq	r6, r5, r5, ror r4
  54:	6f6c6300 	svcvs	0x006c6300
  58:	682e6b63 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
  5c:	00000100 	andeq	r0, r0, r0, lsl #2
  60:	6e69616d 	powvsez	f6, f1, #5.0
  64:	0100632e 	tsteq	r0, lr, lsr #6
  68:	6f630000 	svcvs	0x00630000
  6c:	635f6572 	cmpvs	pc, #478150656	; 0x1c800000
  70:	682e336d 	stmdavs	lr!, {r0, r2, r3, r5, r6, r8, r9, ip, sp}
  74:	00000200 	andeq	r0, r0, r0, lsl #4
  78:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
  7c:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
  80:	00000300 	andeq	r0, r0, r0, lsl #6
  84:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
  88:	735f6d65 	cmpvc	pc, #6464	; 0x1940
  8c:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
  90:	78783166 	ldmdavc	r8!, {r1, r2, r5, r6, r8, ip, sp}^
  94:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
  98:	74730000 	ldrbtvc	r0, [r3], #-0
  9c:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
  a0:	78333031 	ldmdavc	r3!, {r0, r4, r5, ip, sp}
  a4:	00682e62 	rsbeq	r2, r8, r2, ror #28
  a8:	75000002 	strvc	r0, [r0, #-2]
  ac:	6c5f6273 	lfmvs	f6, 2, [pc], {115}	; 0x73
  b0:	682e6269 	stmdavs	lr!, {r0, r3, r5, r6, r9, sp, lr}
  b4:	00000100 	andeq	r0, r0, r0, lsl #2
  b8:	00150500 	andseq	r0, r5, r0, lsl #10
  bc:	01200205 			; <UNDEFINED> instruction: 0x01200205
  c0:	0c030800 	stceq	8, cr0, [r3], {-0}
  c4:	13030501 	movwne	r0, #13569	; 0x3501
  c8:	0b051313 	bleq	144d1c <__Stack_Size+0x14491c>
  cc:	03050106 	movweq	r0, #20742	; 0x5106
  d0:	0b055906 	bleq	1564f0 <__Stack_Size+0x1560f0>
  d4:	03050106 	movweq	r0, #20742	; 0x5106
  d8:	0b054b06 	bleq	152cf8 <__Stack_Size+0x1528f8>
  dc:	03050106 	movweq	r0, #20742	; 0x5106
  e0:	0b054b06 	bleq	152d00 <__Stack_Size+0x152900>
  e4:	05051106 	streq	r1, [r5, #-262]	; 0xfffffefa
  e8:	0b053006 	bleq	14c108 <__Stack_Size+0x14bd08>
  ec:	07050106 	streq	r0, [r5, -r6, lsl #2]
  f0:	00030520 	andeq	r0, r3, r0, lsr #10
  f4:	2d020402 	cfstrscs	mvf0, [r2, #-8]
  f8:	02040200 	andeq	r0, r4, #0, 4
  fc:	23190520 	tstcs	r9, #32, 10	; 0x8000000
 100:	24030a05 	strcs	r0, [r3], #-2565	; 0xfffff5fb
 104:	2101052e 	tstcs	r1, lr, lsr #10
 108:	03060305 	movweq	r0, #25349	; 0x6305
 10c:	05132076 	ldreq	r2, [r3, #-118]	; 0xffffff8a
 110:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
 114:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
 118:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
 11c:	052f0603 	streq	r0, [pc, #-1539]!	; fffffb21 <BootRAM+0xef702c2>
 120:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
 124:	052f0603 	streq	r0, [pc, #-1539]!	; fffffb29 <BootRAM+0xef702ca>
 128:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
 12c:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
 130:	0511060d 	ldreq	r0, [r1, #-1549]	; 0xfffff9f3
 134:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
 138:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
 13c:	07052013 	smladeq	r5, r3, r0, r2
 140:	2d03052e 	cfstr32cs	mvfx0, [r3, #-184]	; 0xffffff48
 144:	23190520 	tstcs	r9, #32, 10	; 0x8000000
 148:	0603052e 	streq	r0, [r3], -lr, lsr #10
 14c:	05015d03 	streq	r5, [r1, #-3331]	; 0xfffff2fd
 150:	01770308 	cmneq	r7, r8, lsl #6
 154:	0a030305 	beq	c0d70 <__Stack_Size+0xc0970>
 158:	060e0501 	streq	r0, [lr], -r1, lsl #10
 15c:	06030501 	streq	r0, [r3], -r1, lsl #10
 160:	060e0559 			; <UNDEFINED> instruction: 0x060e0559
 164:	06030501 	streq	r0, [r3], -r1, lsl #10
 168:	060e054c 	streq	r0, [lr], -ip, asr #10
 16c:	06030501 	streq	r0, [r3], -r1, lsl #10
 170:	060e054b 	streq	r0, [lr], -fp, asr #10
 174:	06030501 	streq	r0, [r3], -r1, lsl #10
 178:	0607054c 	streq	r0, [r7], -ip, asr #10
 17c:	06030501 	streq	r0, [r3], -r1, lsl #10
 180:	13151321 	tstne	r5, #-2080374784	; 0x84000000
 184:	2f141314 	svccs	0x00141314
 188:	01060705 	tsteq	r6, r5, lsl #14
 18c:	0603052e 	streq	r0, [r3], -lr, lsr #10
 190:	060d0530 			; <UNDEFINED> instruction: 0x060d0530
 194:	06030501 	streq	r0, [r3], -r1, lsl #10
 198:	060b0522 	streq	r0, [fp], -r2, lsr #10
 19c:	03052001 	movweq	r2, #20481	; 0x5001
 1a0:	0b053d06 	bleq	14f5c0 <__Stack_Size+0x14f1c0>
 1a4:	05051106 	streq	r1, [r5, #-262]	; 0xfffffefa
 1a8:	0b053006 	bleq	14c1c8 <__Stack_Size+0x14bdc8>
 1ac:	07050106 	streq	r0, [r5, -r6, lsl #2]
 1b0:	2d030520 	cfstr32cs	mvfx0, [r3, #-128]	; 0xffffff80
 1b4:	23190520 	tstcs	r9, #32, 10	; 0x8000000
 1b8:	2c050204 	sfmcs	f0, 4, [r5], {4}
 1bc:	02050006 	andeq	r0, r5, #6
 1c0:	080001ce 	stmdaeq	r0, {r1, r2, r3, r6, r7, r8}
 1c4:	05015703 	streq	r5, [r1, #-1795]	; 0xfffff8fd
 1c8:	0105012d 	tsteq	r5, sp, lsr #2
 1cc:	1a050106 	bne	1405ec <__Stack_Size+0x1401ec>
 1d0:	03052206 	movweq	r2, #20998	; 0x5206
 1d4:	00080513 	andeq	r0, r8, r3, lsl r5
 1d8:	06010402 	streq	r0, [r1], -r2, lsl #8
 1dc:	04020001 	streq	r0, [r2], #-1
 1e0:	01052e01 	tsteq	r5, r1, lsl #28
 1e4:	00100521 	andseq	r0, r0, r1, lsr #10
 1e8:	06020402 	streq	r0, [r2], -r2, lsl #8
 1ec:	0002021f 	andeq	r0, r2, pc, lsl r2
 1f0:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
 1f4:	05000f05 	streq	r0, [r0, #-3845]	; 0xfffff0fb
 1f8:	0009f402 	andeq	pc, r9, r2, lsl #8
 1fc:	010d0308 	tsteq	sp, r8, lsl #6
 200:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
 204:	0511060f 	ldreq	r0, [r1, #-1551]	; 0xfffff9f1
 208:	2f062103 	svccs	0x00062103
 20c:	01061005 	tsteq	r6, r5
 210:	5d060305 	stcpl	3, cr0, [r6, #-20]	; 0xffffffec
 214:	0503042f 	streq	r0, [r3, #-1071]	; 0xfffffbd1
 218:	099e0316 	ldmibeq	lr, {r1, r2, r4, r8, r9}
 21c:	01350501 	teqeq	r5, r1, lsl #10
 220:	03050204 	movweq	r0, #20996	; 0x5204
 224:	01040200 	mrseq	r0, R12_usr
 228:	2076e403 	rsbscs	lr, r6, r3, lsl #8
 22c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
 230:	02130104 	andseq	r0, r3, #4, 2
 234:	01010005 	tsteq	r1, r5
 238:	0000078d 	andeq	r0, r0, sp, lsl #15
 23c:	00a70003 	adceq	r0, r7, r3
 240:	01020000 	mrseq	r0, (UNDEF: 2)
 244:	000d0efb 	strdeq	r0, [sp], -fp
 248:	01010101 	tsteq	r1, r1, lsl #2
 24c:	01000000 	mrseq	r0, (UNDEF: 0)
 250:	73010000 	movwvc	r0, #4096	; 0x1000
 254:	6c006372 	stcvs	3, cr6, [r0], {114}	; 0x72
 258:	692f6269 	stmdbvs	pc!, {r0, r3, r5, r6, r9, sp, lr}	; <UNPREDICTABLE>
 25c:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
 260:	2f006564 	svccs	0x00006564
 264:	2f727375 	svccs	0x00727375
 268:	2f62696c 	svccs	0x0062696c
 26c:	2f636367 	svccs	0x00636367
 270:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
 274:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
 278:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
 27c:	2e382f69 	cdpcs	15, 3, cr2, cr8, cr9, {3}
 280:	2f312e33 	svccs	0x00312e33
 284:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
 288:	00656475 	rsbeq	r6, r5, r5, ror r4
 28c:	62737500 	rsbsvs	r7, r3, #0, 10
 290:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
 294:	0100632e 	tsteq	r0, lr, lsr #6
 298:	6f630000 	svcvs	0x00630000
 29c:	635f6572 	cmpvs	pc, #478150656	; 0x1c800000
 2a0:	682e336d 	stmdavs	lr!, {r0, r2, r3, r5, r6, r8, r9, ip, sp}
 2a4:	00000200 	andeq	r0, r0, r0, lsl #4
 2a8:	5f627375 	svcpl	0x00627375
 2ac:	2e62696c 	vnmulcs.f16	s13, s4, s25	; <UNPREDICTABLE>
 2b0:	00010068 	andeq	r0, r1, r8, rrx
 2b4:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
 2b8:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
 2bc:	00030068 	andeq	r0, r3, r8, rrx
 2c0:	6d747300 	ldclvs	3, cr7, [r4, #-0]
 2c4:	31663233 	cmncc	r6, r3, lsr r2
 2c8:	62783330 	rsbsvs	r3, r8, #48, 6	; 0xc0000000
 2cc:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
 2d0:	79730000 	ldmdbvc	r3!, {}^	; <UNPREDICTABLE>
 2d4:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
 2d8:	6d74735f 	ldclvs	3, cr7, [r4, #-380]!	; 0xfffffe84
 2dc:	31663233 	cmncc	r6, r3, lsr r2
 2e0:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
 2e4:	00000200 	andeq	r0, r0, r0, lsl #4
 2e8:	002b0500 	eoreq	r0, fp, r0, lsl #10
 2ec:	01dc0205 	bicseq	r0, ip, r5, lsl #4
 2f0:	16030800 	strne	r0, [r3], -r0, lsl #16
 2f4:	012c0501 			; <UNDEFINED> instruction: 0x012c0501
 2f8:	01060105 	tsteq	r6, r5, lsl #2
 2fc:	3f065c05 	svccc	0x00065c05
 300:	05015d05 	streq	r5, [r1, #-3333]	; 0xfffff2fb
 304:	20010601 	andcs	r0, r1, r1, lsl #12
 308:	21066305 	tstcs	r6, r5, lsl #6
 30c:	05016405 	streq	r6, [r1, #-1029]	; 0xfffffbfb
 310:	20010601 	andcs	r0, r1, r1, lsl #12
 314:	03061105 	movweq	r1, #24837	; 0x6105
 318:	0305201c 	movweq	r2, #20508	; 0x501c
 31c:	06100513 			; <UNDEFINED> instruction: 0x06100513
 320:	21030501 	tstcs	r3, r1, lsl #10
 324:	051f1005 	ldreq	r1, [pc, #-5]	; 327 <_Minimum_Stack_Size+0x227>
 328:	014b0603 	cmpeq	fp, r3, lsl #12
 32c:	20010101 	andcs	r0, r1, r1, lsl #2
 330:	15060f05 	strne	r0, [r6, #-3845]	; 0xfffff0fb
 334:	061d0305 	ldreq	r0, [sp], -r5, lsl #6
 338:	14202e2e 	strtne	r2, [r0], #-3630	; 0xfffff1d2
 33c:	062e0601 	strteq	r0, [lr], -r1, lsl #12
 340:	060f0521 	streq	r0, [pc], -r1, lsr #10
 344:	06030501 	streq	r0, [r3], -r1, lsl #10
 348:	0107053d 	tsteq	r7, sp, lsr r5
 34c:	0f050106 	svceq	0x00050106
 350:	002e0511 	eoreq	r0, lr, r1, lsl r5
 354:	06030402 	streq	r0, [r3], -r2, lsl #8
 358:	00030521 	andeq	r0, r3, r1, lsr #10
 35c:	06030402 	streq	r0, [r3], -r2, lsl #8
 360:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
 364:	21062003 	tstcs	r6, r3
 368:	01060f05 	tsteq	r6, r5, lsl #30
 36c:	2f060305 	svccs	0x00060305
 370:	01060f05 	tsteq	r6, r5, lsl #30
 374:	2f060305 	svccs	0x00060305
 378:	01060f05 	tsteq	r6, r5, lsl #30
 37c:	2f060305 	svccs	0x00060305
 380:	01060f05 	tsteq	r6, r5, lsl #30
 384:	2f060305 	svccs	0x00060305
 388:	01060f05 	tsteq	r6, r5, lsl #30
 38c:	0603052e 	streq	r0, [r3], -lr, lsr #10
 390:	0502042f 	streq	r0, [r2, #-1071]	; 0xfffffbd1
 394:	0b9b0316 	bleq	fe6c0ff4 <BootRAM+0xd631795>
 398:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
 39c:	01062705 	tsteq	r6, r5, lsl #14
 3a0:	0501044a 	streq	r0, [r1, #-1098]	; 0xfffffbb6
 3a4:	e4030603 	str	r0, [r3], #-1539	; 0xfffff9fd
 3a8:	05010174 	streq	r0, [r1, #-372]	; 0xfffffe8c
 3ac:	053d0601 	ldreq	r0, [sp, #-1537]!	; 0xfffff9ff
 3b0:	e603064f 	str	r0, [r3], -pc, asr #12
 3b4:	0305ac00 	movweq	sl, #23552	; 0x5c00
 3b8:	4f051313 	svcmi	0x00051313
 3bc:	09051006 	stmdbeq	r5, {r1, r2, ip}
 3c0:	06030522 	streq	r0, [r3], -r2, lsr #10
 3c4:	06050530 			; <UNDEFINED> instruction: 0x06050530
 3c8:	21062d59 	tstcs	r6, r9, asr sp
 3cc:	2c3e0601 	ldccs	6, cr0, [lr], #-4
 3d0:	30061e22 	andcc	r1, r6, r2, lsr #28
 3d4:	69030501 	stmdbvs	r3, {r0, r8, sl}
 3d8:	01060c05 	tsteq	r6, r5, lsl #24
 3dc:	21060305 	tstcs	r6, r5, lsl #6
 3e0:	13061413 	movwne	r1, #25619	; 0x6413
 3e4:	052e063c 	streq	r0, [lr, #-1596]!	; 0xfffff9c4
 3e8:	1d054b19 	vstrne	d4, [r5, #-100]	; 0xffffff9c
 3ec:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
 3f0:	12051e07 	andne	r1, r5, #7, 28	; 0x70
 3f4:	06030533 			; <UNDEFINED> instruction: 0x06030533
 3f8:	06120530 			; <UNDEFINED> instruction: 0x06120530
 3fc:	06030520 	streq	r0, [r3], -r0, lsr #10
 400:	06050522 	streq	r0, [r5], -r2, lsr #10
 404:	2106583c 	tstcs	r6, ip, lsr r8
 408:	01062305 	tsteq	r6, r5, lsl #6
 40c:	21060505 	tstcs	r6, r5, lsl #10
 410:	01061605 	tsteq	r6, r5, lsl #12
 414:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
 418:	05200601 	streq	r0, [r0, #-1537]!	; 0xfffff9ff
 41c:	820e030c 	andhi	r0, lr, #12, 6	; 0x30000000
 420:	051e0505 	ldreq	r0, [lr, #-1285]	; 0xfffffafb
 424:	05220603 	streq	r0, [r2, #-1539]!	; 0xfffff9fd
 428:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
 42c:	19052101 	stmdbne	r5, {r0, r8, sp}
 430:	20690306 	rsbcs	r0, r9, r6, lsl #6
 434:	01061d05 	tsteq	r6, r5, lsl #26
 438:	060e052e 	streq	r0, [lr], -lr, lsr #10
 43c:	06120521 	ldreq	r0, [r2], -r1, lsr #10
 440:	05052e01 	streq	r2, [r5, #-3585]	; 0xfffff1ff
 444:	20090306 	andcs	r0, r9, r6, lsl #6
 448:	01062305 	tsteq	r6, r5, lsl #6
 44c:	21060505 	tstcs	r6, r5, lsl #10
 450:	13062605 	movwne	r2, #26117	; 0x6605
 454:	061f0705 	ldreq	r0, [pc], -r5, lsl #14
 458:	06260521 	strteq	r0, [r6], -r1, lsr #10
 45c:	1d313915 			; <UNDEFINED> instruction: 0x1d313915
 460:	21060705 	tstcs	r6, r5, lsl #14
 464:	16062705 	strne	r2, [r6], -r5, lsl #14
 468:	052e3305 	streq	r3, [lr, #-773]!	; 0xfffffcfb
 46c:	07052a2e 	streq	r2, [r5, -lr, lsr #20]
 470:	13133006 	tstne	r3, #6
 474:	01063305 	tsteq	r6, r5, lsl #6
 478:	052e2705 	streq	r2, [lr, #-1797]!	; 0xfffff8fb
 47c:	054c0605 	strbeq	r0, [ip, #-1541]	; 0xfffff9fb
 480:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
 484:	013d0605 	teqeq	sp, r5, lsl #12
 488:	56052006 	strpl	r2, [r5], -r6
 48c:	0305e906 	movweq	lr, #22790	; 0x5906
 490:	56051313 			; <UNDEFINED> instruction: 0x56051313
 494:	03051006 	movweq	r1, #20486	; 0x5006
 498:	2c090524 	cfstr32cs	mvfx0, [r9], {36}	; 0x24
 49c:	30060305 	andcc	r0, r6, r5, lsl #6
 4a0:	036e0601 	cmneq	lr, #1048576	; 0x100000
 4a4:	91062078 	tstls	r6, r8, ror r0
 4a8:	0c05a001 	stceq	0, cr10, [r5], {1}
 4ac:	03050106 	movweq	r0, #20742	; 0x5106
 4b0:	14132106 	ldrne	r2, [r3], #-262	; 0xfffffefa
 4b4:	2f062e06 	svccs	0x00062e06
 4b8:	054b1905 	strbeq	r1, [fp, #-2309]	; 0xfffff6fb
 4bc:	2e01061d 	mcrcs	6, 0, r0, cr1, cr13, {0}
 4c0:	05311205 	ldreq	r1, [r1, #-517]!	; 0xfffffdfb
 4c4:	05300603 	ldreq	r0, [r0, #-1539]!	; 0xfffff9fd
 4c8:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
 4cc:	06240603 	strteq	r0, [r4], -r3, lsl #12
 4d0:	2e05053c 	mcrcs	5, 0, r0, cr5, cr12, {1}
 4d4:	05210674 	streq	r0, [r1, #-1652]!	; 0xfffff98c
 4d8:	05130624 	ldreq	r0, [r3, #-1572]	; 0xfffff9dc
 4dc:	05052d23 	streq	r2, [r5, #-3363]	; 0xfffff2dd
 4e0:	24052106 	strcs	r2, [r5], #-262	; 0xfffffefa
 4e4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
 4e8:	23052f06 	movwcs	r2, #24326	; 0x5f06
 4ec:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
 4f0:	24052106 	strcs	r2, [r5], #-262	; 0xfffffefa
 4f4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
 4f8:	09053006 	stmdbeq	r5, {r1, r2, ip, sp}
 4fc:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
 500:	2e052106 	adfcss	f2, f5, f6
 504:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
 508:	3c0d0305 	stccc	3, cr0, [sp], {5}
 50c:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
 510:	01061405 	tsteq	r6, r5, lsl #8
 514:	05230c05 	streq	r0, [r3, #-3077]!	; 0xfffff3fb
 518:	03052b14 	movweq	r2, #23316	; 0x5b14
 51c:	14052f06 	strne	r2, [r5], #-3846	; 0xfffff0fa
 520:	0c050106 	stfeqs	f0, [r5], {6}
 524:	1e140522 	cfmul64ne	mvdx0, mvdx4, mvdx2
 528:	30060305 	andcc	r0, r6, r5, lsl #6
 52c:	13060105 	movwne	r0, #24837	; 0x6105
 530:	03061905 	movweq	r1, #26885	; 0x6905
 534:	1d05205e 	stcne	0, cr2, [r5, #-376]	; 0xfffffe88
 538:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
 53c:	05210619 	streq	r0, [r1, #-1561]!	; 0xfffff9e7
 540:	2e01061d 	mcrcs	6, 0, r0, cr1, cr13, {0}
 544:	21060e05 	tstcs	r6, r5, lsl #28
 548:	01061205 	tsteq	r6, r5, lsl #4
 54c:	0605052e 	streq	r0, [r5], -lr, lsr #10
 550:	05200f03 	streq	r0, [r0, #-3843]!	; 0xfffff0fd
 554:	05010623 	streq	r0, [r1, #-1571]	; 0xfffff9dd
 558:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
 55c:	05130607 	ldreq	r0, [r3, #-1543]	; 0xfffff9f9
 560:	05051f23 	streq	r1, [r5, #-3875]	; 0xfffff0dd
 564:	47052106 	strmi	r2, [r5, -r6, lsl #2]
 568:	07051306 	streq	r1, [r5, -r6, lsl #6]
 56c:	0521061f 	streq	r0, [r1, #-1567]!	; 0xfffff9e1
 570:	05010647 	streq	r0, [r1, #-1607]	; 0xfffff9b9
 574:	07053c26 	streq	r3, [r5, -r6, lsr #24]
 578:	50054b06 	andpl	r4, r5, r6, lsl #22
 57c:	49050106 	stmdbmi	r5, {r1, r2, r8}
 580:	66270532 			; <UNDEFINED> instruction: 0x66270532
 584:	68060505 	stmdavs	r6, {r0, r2, r8, sl}
 588:	05019f01 	streq	r9, [r1, #-3841]	; 0xfffff0ff
 58c:	47059907 	strmi	r9, [r5, -r7, lsl #18]
 590:	26050106 	strcs	r0, [r5], -r6, lsl #2
 594:	0607053c 			; <UNDEFINED> instruction: 0x0607053c
 598:	5505134b 	strpl	r1, [r5, #-843]	; 0xfffffcb5
 59c:	19050106 	stmdbne	r5, {r1, r2, r8}
 5a0:	ac0c0306 	stcge	3, cr0, [ip], {6}
 5a4:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
 5a8:	05110619 	ldreq	r0, [r1, #-1561]	; 0xfffff9e7
 5ac:	05052109 	streq	r2, [r5, #-265]	; 0xfffffef7
 5b0:	2f2f063c 	svccs	0x002f063c
 5b4:	01060f05 	tsteq	r6, r5, lsl #30
 5b8:	052f0e05 	streq	r0, [pc, #-3589]!	; fffff7bb <BootRAM+0xef6ff5c>
 5bc:	05051f0f 	streq	r1, [r5, #-3855]	; 0xfffff0f1
 5c0:	0e052f06 	cdpeq	15, 0, cr2, cr5, cr6, {0}
 5c4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
 5c8:	10053d06 	andne	r3, r5, r6, lsl #26
 5cc:	24050106 	strcs	r0, [r5], #-262	; 0xfffffefa
 5d0:	1e100522 	cfmul64ne	mvdx0, mvdx0, mvdx2
 5d4:	2f060505 	svccs	0x00060505
 5d8:	06010905 	streq	r0, [r1], -r5, lsl #18
 5dc:	11100501 	tstne	r0, r1, lsl #10
 5e0:	02000705 	andeq	r0, r0, #1310720	; 0x140000
 5e4:	30060304 	andcc	r0, r6, r4, lsl #6
 5e8:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
 5ec:	1f060304 	svcne	0x00060304
 5f0:	02002405 	andeq	r2, r0, #83886080	; 0x5000000
 5f4:	052f0304 	streq	r0, [pc, #-772]!	; 2f8 <_Minimum_Stack_Size+0x1f8>
 5f8:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
 5fc:	05052e03 	streq	r2, [r5, #-3587]	; 0xfffff1fd
 600:	03040200 	movweq	r0, #16896	; 0x4200
 604:	0524062d 	streq	r0, [r4, #-1581]!	; 0xfffff9d3
 608:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
 60c:	0f053d05 	svceq	0x00053d05
 610:	0605051f 			; <UNDEFINED> instruction: 0x0605051f
 614:	0567592f 	strbeq	r5, [r7, #-2351]!	; 0xfffff6d1
 618:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
 61c:	052f0605 	streq	r0, [pc, #-1541]!	; 1f <_Minimum_Stack_Size-0xe1>
 620:	09053103 	stmdbeq	r5, {r0, r1, r8, ip, sp}
 624:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
 628:	052f063c 	streq	r0, [pc, #-1596]!	; fffffff4 <BootRAM+0xef70795>
 62c:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
 630:	05052e0d 	streq	r2, [r5, #-3597]	; 0xfffff1f3
 634:	08052f06 	stmdaeq	r5, {r1, r2, r8, r9, sl, fp, sp}
 638:	07050106 	streq	r0, [r5, -r6, lsl #2]
 63c:	052f0666 	streq	r0, [pc, #-1638]!	; ffffffde <BootRAM+0xef7077f>
 640:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
 644:	4b062007 	blmi	188668 <__Stack_Size+0x188268>
 648:	84050501 	strhi	r0, [r5], #-1281	; 0xfffffaff
 64c:	01060805 	tsteq	r6, r5, lsl #16
 650:	06200705 	strteq	r0, [r0], -r5, lsl #14
 654:	0610052f 	ldreq	r0, [r0], -pc, lsr #10
 658:	20070501 	andcs	r0, r7, r1, lsl #10
 65c:	06015906 	streq	r5, [r1], -r6, lsl #18
 660:	06030582 	streq	r0, [r3], -r2, lsl #11
 664:	06090516 			; <UNDEFINED> instruction: 0x06090516
 668:	3c050501 	cfstr32cc	mvfx0, [r5], {1}
 66c:	052f2f06 	streq	r2, [pc, #-3846]!	; fffff76e <BootRAM+0xef6ff0f>
 670:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
 674:	05670605 	strbeq	r0, [r7, #-1541]!	; 0xfffff9fb
 678:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
 67c:	054d0603 	strbeq	r0, [sp, #-1539]	; 0xfffff9fd
 680:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
 684:	2f063c05 	svccs	0x00063c05
 688:	01060f05 	tsteq	r6, r5, lsl #30
 68c:	83060505 	movwhi	r0, #25861	; 0x6505
 690:	01060f05 	tsteq	r6, r5, lsl #30
 694:	054c0105 	strbeq	r0, [ip, #-261]	; 0xfffffefb
 698:	0f030643 	svceq	0x00030643
 69c:	130305f2 	movwne	r0, #13810	; 0x35f2
 6a0:	11064305 	tstne	r6, r5, lsl #6
 6a4:	05260305 	streq	r0, [r6, #-773]!	; 0xfffffcfb
 6a8:	10051b33 	andne	r1, r5, r3, lsr fp
 6ac:	06030520 	streq	r0, [r3], -r0, lsr #10
 6b0:	063f054b 	ldrteq	r0, [pc], -fp, asr #10
 6b4:	1d170515 	cfldr32ne	mvfx0, [r7, #-84]	; 0xffffffac
 6b8:	05233805 	streq	r3, [r3, #-2053]!	; 0xfffff7fb
 6bc:	0305470c 	movweq	r4, #22284	; 0x570c
 6c0:	05132206 	ldreq	r2, [r3, #-518]	; 0xfffffdfa
 6c4:	05010638 	streq	r0, [r1, #-1592]	; 0xfffff9c8
 6c8:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
 6cc:	03050107 	movweq	r0, #20743	; 0x5107
 6d0:	01040200 	mrseq	r0, R12_usr
 6d4:	3f060106 	svccc	0x00060106
 6d8:	05201406 	streq	r1, [r0, #-1030]!	; 0xfffffbfa
 6dc:	03053a10 	movweq	r3, #23056	; 0x5a10
 6e0:	06012206 	streq	r2, [r1], -r6, lsl #4
 6e4:	9101053c 	tstls	r1, ip, lsr r5
 6e8:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
 6ec:	1b060304 	blne	181304 <__Stack_Size+0x180f04>
 6f0:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
 6f4:	01060304 	tsteq	r6, r4, lsl #6
 6f8:	03040200 	movweq	r0, #16896	; 0x4200
 6fc:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
 700:	22052003 	andcs	r2, r5, #3
 704:	02050006 	andeq	r0, r5, #6
 708:	080005f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, sl}
 70c:	017e8503 	cmneq	lr, r3, lsl #10
 710:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
 714:	05110622 	ldreq	r0, [r1, #-1570]	; 0xfffff9de
 718:	2405210b 	strcs	r2, [r5], #-267	; 0xfffffef5
 71c:	200b0520 	andcs	r0, fp, r0, lsr #10
 720:	052e2405 	streq	r2, [lr, #-1029]!	; 0xfffffbfb
 724:	3d062005 	stccc	0, cr2, [r6, #-20]	; 0xffffffec
 728:	01061005 	tsteq	r6, r5
 72c:	5b060305 	blpl	181348 <__Stack_Size+0x180f48>
 730:	01060805 	tsteq	r6, r5, lsl #16
 734:	05200505 	streq	r0, [r0, #-1285]!	; 0xfffffafb
 738:	054b0603 	strbeq	r0, [fp, #-1539]	; 0xfffff9fd
 73c:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
 740:	03052005 	movweq	r2, #20485	; 0x5005
 744:	0c052106 	stfeqs	f2, [r5], {6}
 748:	03050106 	movweq	r0, #20742	; 0x5106
 74c:	03042106 	movweq	r2, #16646	; 0x4106
 750:	00f20306 	rscseq	r0, r2, r6, lsl #6
 754:	01045801 	tsteq	r4, r1, lsl #16
 758:	7f8f0306 	svcvc	0x008f0306
 75c:	05030401 	streq	r0, [r3, #-1025]	; 0xfffffbff
 760:	00f00314 	rscseq	r0, r0, r4, lsl r3
 764:	13030501 	movwne	r0, #13569	; 0x3501
 768:	043c2006 	ldrteq	r2, [ip], #-6
 76c:	91030601 	tstls	r3, r1, lsl #12
 770:	0505017f 	streq	r0, [r5, #-383]	; 0xfffffe81
 774:	0d051506 	cfstr32eq	mvfx1, [r5, #-24]	; 0xffffffe8
 778:	0603051d 			; <UNDEFINED> instruction: 0x0603051d
 77c:	0d05143d 	cfstrseq	mvf1, [r5, #-244]	; 0xffffff0c
 780:	0b051306 	bleq	1453a0 <__Stack_Size+0x144fa0>
 784:	0605052b 	streq	r0, [r5], -fp, lsr #10
 788:	060d0531 			; <UNDEFINED> instruction: 0x060d0531
 78c:	22010501 	andcs	r0, r1, #4194304	; 0x400000
 790:	03062d05 	movweq	r2, #27909	; 0x6d05
 794:	056601f1 	strbeq	r0, [r6, #-497]!	; 0xfffffe0f
 798:	2d051303 	stccs	3, cr1, [r5, #-12]
 79c:	33051106 	movwcc	r1, #20742	; 0x5106
 7a0:	20100521 	andscs	r0, r0, r1, lsr #10
 7a4:	4b060305 	blmi	1813c0 <__Stack_Size+0x180fc0>
 7a8:	10062d05 	andne	r2, r6, r5, lsl #26
 7ac:	20221105 	eorcs	r1, r2, r5, lsl #2
 7b0:	2f060305 	svccs	0x00060305
 7b4:	01060505 	tsteq	r6, r5, lsl #10
 7b8:	21060305 	tstcs	r6, r5, lsl #6
 7bc:	063e0513 			; <UNDEFINED> instruction: 0x063e0513
 7c0:	1f0f0501 	svcne	0x000f0501
 7c4:	05213705 	streq	r3, [r1, #-1797]!	; 0xfffff8fb
 7c8:	05590603 	ldrbeq	r0, [r9, #-1539]	; 0xfffff9fd
 7cc:	01060107 	tsteq	r6, r7, lsl #2
 7d0:	05202010 	streq	r2, [r0, #-16]!
 7d4:	04020005 	streq	r0, [r2], #-5
 7d8:	05310603 	ldreq	r0, [r1, #-1539]!	; 0xfffff9fd
 7dc:	0402000e 	streq	r0, [r2], #-14
 7e0:	05010603 	streq	r0, [r1, #-1539]	; 0xfffff9fd
 7e4:	04020003 	streq	r0, [r2], #-3
 7e8:	0c052d03 	stceq	13, cr2, [r5], {3}
 7ec:	03040200 	movweq	r0, #16896	; 0x4200
 7f0:	00030521 	andeq	r0, r3, r1, lsr #10
 7f4:	2d030402 	cfstrscs	mvf0, [r3, #-8]
 7f8:	06012306 	streq	r2, [r1], -r6, lsl #6
 7fc:	91066620 	tstls	r6, r0, lsr #12
 800:	13060105 	movwne	r0, #24837	; 0x6105
 804:	03062305 	movweq	r2, #25349	; 0x6305
 808:	05207e8e 	streq	r7, [r0, #-3726]!	; 0xfffff172
 80c:	05131303 	ldreq	r1, [r3, #-771]	; 0xfffffcfd
 810:	22100623 	andscs	r0, r0, #36700160	; 0x2300000
 814:	053d1605 	ldreq	r1, [sp, #-1541]!	; 0xfffff9fb
 818:	03053b23 	movweq	r3, #23331	; 0x5b23
 81c:	05142f06 	ldreq	r2, [r4, #-3846]	; 0xfffff0fa
 820:	06010605 	streq	r0, [r1], -r5, lsl #12
 824:	0607053d 			; <UNDEFINED> instruction: 0x0607053d
 828:	2f062e01 	svccs	0x00062e01
 82c:	13050304 	movwne	r0, #21252	; 0x5304
 830:	0100e403 	tsteq	r0, r3, lsl #8
 834:	04130305 	ldreq	r0, [r3], #-773	; 0xfffffcfb
 838:	06110501 	ldreq	r0, [r1], -r1, lsl #10
 83c:	017f9c03 	cmneq	pc, r3, lsl #24
 840:	0a050304 	beq	141458 <__Stack_Size+0x141058>
 844:	2000e403 	andcs	lr, r0, r3, lsl #8
 848:	01042e2e 	tsteq	r4, lr, lsr #28
 84c:	03060705 	movweq	r0, #26373	; 0x6705
 850:	05017f9c 	streq	r7, [r1, #-3996]	; 0xfffff064
 854:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
 858:	05210607 	streq	r0, [r1, #-1543]!	; 0xfffff9f9
 85c:	010a0303 	tsteq	sl, r3, lsl #6
 860:	01061d05 	tsteq	r6, r5, lsl #26
 864:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
 868:	05300603 	ldreq	r0, [r0, #-1539]!	; 0xfffff9fd
 86c:	06010605 	streq	r0, [r1], -r5, lsl #12
 870:	06070530 			; <UNDEFINED> instruction: 0x06070530
 874:	06050501 	streq	r0, [r5], -r1, lsl #10
 878:	06070521 	streq	r0, [r7], -r1, lsr #10
 87c:	05210601 	streq	r0, [r1, #-1537]!	; 0xfffff9ff
 880:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
 884:	0b052007 	bleq	1488a8 <__Stack_Size+0x1484a8>
 888:	580a0306 	stmdapl	sl, {r1, r2, r8, r9}
 88c:	14050304 	strne	r0, [r5], #-772	; 0xfffffcfc
 890:	05013b03 	streq	r3, [r1, #-2819]	; 0xfffff4fd
 894:	2e061303 	cdpcs	3, 0, cr1, cr6, cr3, {0}
 898:	0501043c 	streq	r0, [r1, #-1084]	; 0xfffffbc4
 89c:	ac030607 	stcge	6, cr0, [r3], {7}
 8a0:	0905017f 	stmdbeq	r5, {r0, r1, r2, r3, r4, r5, r6, r8}
 8a4:	0b050106 	bleq	140cc4 <__Stack_Size+0x1408c4>
 8a8:	58100306 	ldmdapl	r0, {r1, r2, r8, r9}
 8ac:	01061705 	tsteq	r6, r5, lsl #14
 8b0:	05220b05 	streq	r0, [r2, #-2821]!	; 0xfffff4fb
 8b4:	0b051e17 	bleq	148118 <__Stack_Size+0x147d18>
 8b8:	13062106 	movwne	r2, #24838	; 0x6106
 8bc:	053b1405 	ldreq	r1, [fp, #-1029]!	; 0xfffffbfb
 8c0:	2f2f060b 	svccs	0x002f060b
 8c4:	0f030505 	svceq	0x00030505
 8c8:	06140501 	ldreq	r0, [r4], -r1, lsl #10
 8cc:	20070501 	andcs	r0, r7, r1, lsl #10
 8d0:	4e030305 	cdpmi	3, 0, cr0, cr3, cr5, {0}
 8d4:	0307052e 	movweq	r0, #29998	; 0x752e
 8d8:	25052032 	strcs	r2, [r5, #-50]	; 0xffffffce
 8dc:	2a052006 	bcs	1488fc <__Stack_Size+0x1484fc>
 8e0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
 8e4:	14053d06 	strne	r3, [r5], #-3334	; 0xfffff2fa
 8e8:	05014a03 	streq	r4, [r1, #-2563]	; 0xfffff5fd
 8ec:	0d051303 	stceq	3, cr1, [r5, #-12]
 8f0:	03050106 	movweq	r0, #20742	; 0x5106
 8f4:	0b053d06 	bleq	14fd14 <__Stack_Size+0x14f914>
 8f8:	03050106 	movweq	r0, #20742	; 0x5106
 8fc:	2e062f06 	cdpcs	15, 0, cr2, cr6, cr6, {0}
 900:	c7030105 	strgt	r0, [r3, -r5, lsl #2]
 904:	0b050100 	bleq	140d0c <__Stack_Size+0x14090c>
 908:	2e640306 	cdpcs	3, 6, cr0, cr4, cr6, {0}
 90c:	14050304 	strne	r0, [r5], #-772	; 0xfffffcfc
 910:	05013803 	streq	r3, [r1, #-2051]	; 0xfffff7fd
 914:	4a061303 	bmi	185528 <__Stack_Size+0x185128>
 918:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
 91c:	014b0306 	cmpeq	fp, r6, lsl #6
 920:	01060b05 	tsteq	r6, r5, lsl #22
 924:	06050520 	streq	r0, [r5], -r0, lsr #10
 928:	060e0521 	streq	r0, [lr], -r1, lsr #10
 92c:	21050501 	tstcs	r5, r1, lsl #10
 930:	05490e05 	strbeq	r0, [r9, #-3589]	; 0xfffff1fb
 934:	062f0605 	strteq	r0, [pc], -r5, lsl #12
 938:	1706202e 	strne	r2, [r6, -lr, lsr #32]
 93c:	01060705 	tsteq	r6, r5, lsl #14
 940:	16052106 	strne	r2, [r5], -r6, lsl #2
 944:	09050106 	stmdbeq	r5, {r1, r2, r8}
 948:	052f0620 	streq	r0, [pc, #-1568]!	; 330 <_Minimum_Stack_Size+0x230>
 94c:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
 950:	042f0609 	strteq	r0, [pc], #-1545	; 958 <__Stack_Size+0x558>
 954:	03140503 	tsteq	r4, #12582912	; 0xc00000
 958:	0305012a 	movweq	r0, #20778	; 0x512a
 95c:	04010613 	streq	r0, [r1], #-1555	; 0xfffff9ed
 960:	062c0501 	strteq	r0, [ip], -r1, lsl #10
 964:	04016103 	streq	r6, [r1], #-259	; 0xfffffefd
 968:	03140503 	tsteq	r4, #12582912	; 0xc00000
 96c:	0305011e 	movweq	r0, #20766	; 0x511e
 970:	044a0613 	strbeq	r0, [sl], #-1555	; 0xfffff9ed
 974:	060d0501 	streq	r0, [sp], -r1, lsl #10
 978:	05015703 	streq	r5, [r1, #-1795]	; 0xfffff8fd
 97c:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
 980:	052f0609 	streq	r0, [pc, #-1545]!	; 37f <_Minimum_Stack_Size+0x27f>
 984:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
 988:	042f0609 	strteq	r0, [pc], #-1545	; 990 <__Stack_Size+0x590>
 98c:	03140503 	tsteq	r4, #12582912	; 0xc00000
 990:	03050126 	movweq	r0, #20774	; 0x5126
 994:	04200613 	strteq	r0, [r0], #-1555	; 0xfffff9ed
 998:	06050501 	streq	r0, [r5], -r1, lsl #10
 99c:	05015d03 	streq	r5, [r1, #-3331]	; 0xfffff2fd
 9a0:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
 9a4:	21065807 	tstcs	r6, r7, lsl #16
 9a8:	ae050501 	cfsh32ge	mvfx0, mvfx5, #1
 9ac:	01060f05 	tsteq	r6, r5, lsl #30
 9b0:	052f0705 	streq	r0, [pc, #-1797]!	; 2b3 <_Minimum_Stack_Size+0x1b3>
 9b4:	07051f0f 	streq	r1, [r5, -pc, lsl #30]
 9b8:	1f0f0521 	svcne	0x000f0521
 9bc:	21060505 	tstcs	r6, r5, lsl #10
 9c0:	01060705 	tsteq	r6, r5, lsl #14
 9c4:	01000f02 	tsteq	r0, r2, lsl #30
 9c8:	00038101 	andeq	r8, r3, r1, lsl #2
 9cc:	f2000300 	vcgt.s8	d0, d0, d0
 9d0:	02000000 	andeq	r0, r0, #0
 9d4:	0d0efb01 	vstreq	d15, [lr, #-4]
 9d8:	01010100 	mrseq	r0, (UNDEF: 17)
 9dc:	00000001 	andeq	r0, r0, r1
 9e0:	01000001 	tsteq	r0, r1
 9e4:	00637273 	rsbeq	r7, r3, r3, ror r2
 9e8:	7273752f 	rsbsvc	r7, r3, #197132288	; 0xbc00000
 9ec:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
 9f0:	6363672f 	cmnvs	r3, #12320768	; 0xbc0000
 9f4:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
 9f8:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
 9fc:	61652d65 	cmnvs	r5, r5, ror #26
 a00:	382f6962 	stmdacc	pc!, {r1, r5, r6, r8, fp, sp, lr}	; <UNPREDICTABLE>
 a04:	312e332e 			; <UNDEFINED> instruction: 0x312e332e
 a08:	636e692f 	cmnvs	lr, #770048	; 0xbc000
 a0c:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
 a10:	62696c00 	rsbvs	r6, r9, #0, 24
 a14:	636e692f 	cmnvs	lr, #770048	; 0xbc000
 a18:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
 a1c:	73752f00 	cmnvc	r5, #0, 30
 a20:	6e692f72 	mcrvs	15, 3, r2, cr9, cr2, {3}
 a24:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
 a28:	656e2f65 	strbvs	r2, [lr, #-3941]!	; 0xfffff09b
 a2c:	62696c77 	rsbvs	r6, r9, #30464	; 0x7700
 a30:	7379732f 	cmnvc	r9, #-1140850688	; 0xbc000000
 a34:	73750000 	cmnvc	r5, #0
 a38:	6c635f62 	stclvs	15, cr5, [r3], #-392	; 0xfffffe78
 a3c:	5f737361 	svcpl	0x00737361
 a40:	2e636463 	cdpcs	4, 6, cr6, cr3, cr3, {3}
 a44:	00010063 	andeq	r0, r1, r3, rrx
 a48:	62737500 	rsbsvs	r7, r3, #0, 10
 a4c:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
 a50:	0100682e 	tsteq	r0, lr, lsr #16
 a54:	74730000 	ldrbtvc	r0, [r3], #-0
 a58:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
 a5c:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
 a60:	6f630000 	svcvs	0x00630000
 a64:	635f6572 	cmpvs	pc, #478150656	; 0x1c800000
 a68:	682e336d 	stmdavs	lr!, {r0, r2, r3, r5, r6, r8, r9, ip, sp}
 a6c:	00000300 	andeq	r0, r0, r0, lsl #6
 a70:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
 a74:	735f6d65 	cmpvc	pc, #6464	; 0x1940
 a78:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
 a7c:	78783166 	ldmdavc	r8!, {r1, r2, r5, r6, r8, ip, sp}^
 a80:	0300682e 	movweq	r6, #2094	; 0x82e
 a84:	74730000 	ldrbtvc	r0, [r3], #-0
 a88:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
 a8c:	78333031 	ldmdavc	r3!, {r0, r4, r5, ip, sp}
 a90:	00682e62 	rsbeq	r2, r8, r2, ror #28
 a94:	73000003 	movwvc	r0, #3
 a98:	65646474 	strbvs	r6, [r4, #-1140]!	; 0xfffffb8c
 a9c:	00682e66 	rsbeq	r2, r8, r6, ror #28
 aa0:	5f000002 	svcpl	0x00000002
 aa4:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 aa8:	00682e73 	rsbeq	r2, r8, r3, ror lr
 aac:	72000004 	andvc	r0, r0, #4
 ab0:	746e6565 	strbtvc	r6, [lr], #-1381	; 0xfffffa9b
 ab4:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
 ab8:	6f6c0000 	svcvs	0x006c0000
 abc:	682e6b63 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
 ac0:	00000400 	andeq	r0, r0, r0, lsl #8
 ac4:	00210500 	eoreq	r0, r1, r0, lsl #10
 ac8:	07c80205 	strbeq	r0, [r8, r5, lsl #4]
 acc:	ff030800 			; <UNDEFINED> instruction: 0xff030800
 ad0:	01050101 	tsteq	r5, r1, lsl #2
 ad4:	22260514 	eorcs	r0, r6, #20, 10	; 0x5000000
 ad8:	13130305 	tstne	r3, #335544320	; 0x14000000
 adc:	10062605 	andne	r2, r6, r5, lsl #12
 ae0:	13050204 	movwne	r0, #20996	; 0x5204
 ae4:	04205103 	strteq	r5, [r0], #-259	; 0xfffffefd
 ae8:	03260501 			; <UNDEFINED> instruction: 0x03260501
 aec:	0204202f 	andeq	r2, r4, #47	; 0x2f
 af0:	03061305 	movweq	r1, #25349	; 0x6305
 af4:	03052050 	movweq	r2, #20560	; 0x5050
 af8:	06130513 			; <UNDEFINED> instruction: 0x06130513
 afc:	06030501 	streq	r0, [r3], -r1, lsl #10
 b00:	060d0521 	streq	r0, [sp], -r1, lsr #10
 b04:	1f110501 	svcne	0x00110501
 b08:	2f0d052e 	svccs	0x000d052e
 b0c:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
 b10:	01069f01 	tsteq	r6, r1, lsl #30
 b14:	03060104 	movweq	r0, #24836	; 0x6104
 b18:	0f05012f 	svceq	0x0005012f
 b1c:	06010501 	streq	r0, [r1], -r1, lsl #10
 b20:	06500515 			; <UNDEFINED> instruction: 0x06500515
 b24:	00020500 	andeq	r0, r2, r0, lsl #10
 b28:	03080008 	movweq	r0, #32776	; 0x8008
 b2c:	05017f95 	streq	r7, [r1, #-3989]	; 0xfffff06b
 b30:	07051303 	streq	r1, [r5, -r3, lsl #6]
 b34:	0d051408 	cfstrseq	mvf1, [r5, #-32]	; 0xffffffe0
 b38:	07050106 	streq	r0, [r5, -r6, lsl #2]
 b3c:	0d052f06 	stceq	15, cr2, [r5, #-24]	; 0xffffffe8
 b40:	20050106 	andcs	r0, r5, r6, lsl #2
 b44:	05201b03 	streq	r1, [r0, #-2819]!	; 0xfffff4fd
 b48:	05210607 	streq	r0, [r1, #-1543]!	; 0xfffff9f9
 b4c:	05160601 	ldreq	r0, [r6, #-1537]	; 0xfffff9ff
 b50:	63030607 	movwvs	r0, #13831	; 0x3607
 b54:	060d0520 	streq	r0, [sp], -r0, lsr #10
 b58:	06070501 	streq	r0, [r7], -r1, lsl #10
 b5c:	060d052f 	streq	r0, [sp], -pc, lsr #10
 b60:	06070501 	streq	r0, [r7], -r1, lsl #10
 b64:	060d0531 			; <UNDEFINED> instruction: 0x060d0531
 b68:	06070501 	streq	r0, [r7], -r1, lsl #10
 b6c:	060d052f 	streq	r0, [sp], -pc, lsr #10
 b70:	06070501 	streq	r0, [r7], -r1, lsl #10
 b74:	05200631 	streq	r0, [r0, #-1585]!	; 0xfffff9cf
 b78:	0568060b 	strbeq	r0, [r8, #-1547]!	; 0xfffff9f5
 b7c:	03010611 	movweq	r0, #5649	; 0x1611
 b80:	0b052009 	bleq	148bac <__Stack_Size+0x1487ac>
 b84:	07052106 	streq	r2, [r5, -r6, lsl #2]
 b88:	06200516 			; <UNDEFINED> instruction: 0x06200516
 b8c:	060b0501 	streq	r0, [fp], -r1, lsl #10
 b90:	053c7503 	ldreq	r7, [ip, #-1283]!	; 0xfffffafd
 b94:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
 b98:	0531060b 	ldreq	r0, [r1, #-1547]!	; 0xfffff9f5
 b9c:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
 ba0:	0531060b 	ldreq	r0, [r1, #-1547]!	; 0xfffff9f5
 ba4:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
 ba8:	05000647 	streq	r0, [r0, #-1607]	; 0xfffff9b9
 bac:	00087c02 	andeq	r7, r8, r2, lsl #24
 bb0:	01290308 			; <UNDEFINED> instruction: 0x01290308
 bb4:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
 bb8:	06010605 	streq	r0, [r1], -r5, lsl #12
 bbc:	06070559 			; <UNDEFINED> instruction: 0x06070559
 bc0:	053d0601 	ldreq	r0, [sp, #-1537]!	; 0xfffff9ff
 bc4:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
 bc8:	0d05220e 	sfmeq	f2, 4, [r5, #-56]	; 0xffffffc8
 bcc:	0607051e 			; <UNDEFINED> instruction: 0x0607051e
 bd0:	060d0521 	streq	r0, [sp], -r1, lsr #10
 bd4:	06070501 	streq	r0, [r7], -r1, lsl #10
 bd8:	060e052f 	streq	r0, [lr], -pc, lsr #10
 bdc:	230a0501 	movwcs	r0, #42241	; 0xa501
 be0:	05210105 	streq	r0, [r1, #-261]!	; 0xfffffefb
 be4:	053e064e 	ldreq	r0, [lr, #-1614]!	; 0xfffff9b2
 be8:	4e051303 	cdpmi	3, 0, cr1, cr5, cr3, {0}
 bec:	05051106 	streq	r1, [r5, #-262]	; 0xfffffefa
 bf0:	05590621 	ldrbeq	r0, [r9, #-1569]	; 0xfffff9df
 bf4:	06010607 	streq	r0, [r1], -r7, lsl #12
 bf8:	0609053d 			; <UNDEFINED> instruction: 0x0609053d
 bfc:	06070501 	streq	r0, [r7], -r1, lsl #10
 c00:	05020422 	streq	r0, [r2, #-1058]	; 0xfffffbde
 c04:	015f0313 	cmpeq	pc, r3, lsl r3	; <UNPREDICTABLE>
 c08:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
 c0c:	2001060a 	andcs	r0, r1, sl, lsl #12
 c10:	01042e20 	tsteq	r4, r0, lsr #28
 c14:	1e031e05 	cdpne	14, 0, cr1, cr3, cr5, {0}
 c18:	030a0501 	movweq	r0, #42241	; 0xa501
 c1c:	01052e0d 	tsteq	r5, sp, lsl #28
 c20:	06210521 	strteq	r0, [r1], -r1, lsr #10
 c24:	053c0e03 	ldreq	r0, [ip, #-3587]!	; 0xfffff1fd
 c28:	12051303 	andne	r1, r5, #201326592	; 0xc000000
 c2c:	0a050106 	beq	14104c <__Stack_Size+0x140c4c>
 c30:	0603054a 	streq	r0, [r3], -sl, asr #10
 c34:	06160521 	ldreq	r0, [r6], -r1, lsr #10
 c38:	3a210501 	bcc	842044 <__Stack_Size+0x841c44>
 c3c:	05221605 	streq	r1, [r2, #-1541]!	; 0xfffff9fb
 c40:	0a054b13 	beq	153894 <__Stack_Size+0x153494>
 c44:	052f223c 	streq	r2, [pc, #-572]!	; a10 <__Stack_Size+0x610>
 c48:	0a051c16 	beq	147ca8 <__Stack_Size+0x1478a8>
 c4c:	06030520 	streq	r0, [r3], -r0, lsr #10
 c50:	0a051321 	beq	1458dc <__Stack_Size+0x1454dc>
 c54:	03050106 	movweq	r0, #20742	; 0x5106
 c58:	05132106 	ldreq	r2, [r3, #-262]	; 0xfffffefa
 c5c:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
 c60:	0c052101 	stfeqs	f2, [r5], {1}
 c64:	03052206 	movweq	r2, #20998	; 0x5206
 c68:	05131313 	ldreq	r1, [r3, #-787]	; 0xfffffced
 c6c:	050f060c 	streq	r0, [pc, #-1548]	; 668 <__Stack_Size+0x268>
 c70:	59062303 	stmdbpl	r6, {r0, r1, r8, r9, sp}
 c74:	14050204 	strne	r0, [r5], #-516	; 0xfffffdfc
 c78:	017faf03 	cmneq	pc, r3, lsl #30
 c7c:	13130305 	tstne	r3, #335544320	; 0x14000000
 c80:	01061505 	tsteq	r6, r5, lsl #10
 c84:	05230305 	streq	r0, [r3, #-773]!	; 0xfffffcfb
 c88:	03051d15 	movweq	r1, #23829	; 0x5d15
 c8c:	1e0b0522 	cfsh32ne	mvfx0, mvfx11, #18
 c90:	2f060305 	svccs	0x00060305
 c94:	06910113 			; <UNDEFINED> instruction: 0x06910113
 c98:	01043c20 	tsteq	r4, r0, lsr #24
 c9c:	00cd0306 	sbceq	r0, sp, r6, lsl #6
 ca0:	06010501 	streq	r0, [r1], -r1, lsl #10
 ca4:	1e040514 	mcrne	5, 0, r0, cr4, cr4, {0}
 ca8:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
 cac:	13060105 	movwne	r0, #24837	; 0x6105
 cb0:	00062505 	andeq	r2, r6, r5, lsl #10
 cb4:	09400205 	stmdbeq	r0, {r0, r2, r9}^
 cb8:	05140800 	ldreq	r0, [r4, #-2048]	; 0xfffff800
 cbc:	05131303 	ldreq	r1, [r3, #-771]	; 0xfffffcfd
 cc0:	05100625 	ldreq	r0, [r0, #-1573]	; 0xfffff9db
 cc4:	0505220a 	streq	r2, [r5, #-522]	; 0xfffffdf6
 cc8:	00100520 	andseq	r0, r0, r0, lsr #10
 ccc:	06010402 	streq	r0, [r1], -r2, lsl #8
 cd0:	0014052e 	andseq	r0, r4, lr, lsr #10
 cd4:	06010402 	streq	r0, [r1], -r2, lsl #8
 cd8:	22060501 	andcs	r0, r6, #4194304	; 0x400000
 cdc:	05210105 	streq	r0, [r1, #-261]!	; 0xfffffefb
 ce0:	051b0606 	ldreq	r0, [fp, #-1542]	; 0xfffff9fa
 ce4:	052f1503 	streq	r1, [pc, #-1283]!	; 7e9 <__Stack_Size+0x3e9>
 ce8:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
 cec:	05000616 	streq	r0, [r0, #-1558]	; 0xfffff9ea
 cf0:	00095c02 	andeq	r5, r9, r2, lsl #24
 cf4:	03051508 	movweq	r1, #21768	; 0x5508
 cf8:	06160513 			; <UNDEFINED> instruction: 0x06160513
 cfc:	21030511 	tstcs	r3, r1, lsl r5
 d00:	05676806 	strbeq	r6, [r7, #-2054]!	; 0xfffff7fa
 d04:	05140601 	ldreq	r0, [r4, #-1537]	; 0xfffff9ff
 d08:	16052c03 	strne	r2, [r5], -r3, lsl #24
 d0c:	02050006 	andeq	r0, r5, #6
 d10:	08000994 	stmdaeq	r0, {r2, r4, r7, r8, fp}
 d14:	03030516 	movweq	r0, #13590	; 0x3516
 d18:	1605010a 	strne	r0, [r5], -sl, lsl #2
 d1c:	01760306 	cmneq	r6, r6, lsl #6
 d20:	0a030305 	beq	c193c <__Stack_Size+0xc153c>
 d24:	05310620 	ldreq	r0, [r1, #-1568]!	; 0xfffff9e0
 d28:	7f8b030d 	svcvc	0x008b030d
 d2c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
 d30:	00f20303 	rscseq	r0, r2, r3, lsl #6
 d34:	03080501 	movweq	r0, #34049	; 0x8501
 d38:	20207f8f 	eorcs	r7, r0, pc, lsl #31
 d3c:	f5030105 			; <UNDEFINED> instruction: 0xf5030105
 d40:	10052000 	andne	r2, r5, r0
 d44:	7f8b0306 	svcvc	0x008b0306
 d48:	00050220 	andeq	r0, r5, r0, lsr #4
 d4c:	Address 0x0000000000000d4c is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	08000120 	stmdaeq	r0, {r5, r8}
  1c:	000000ac 	andeq	r0, r0, ip, lsr #1
  20:	0000000c 	andeq	r0, r0, ip
  24:	00000000 	andeq	r0, r0, r0
  28:	080001cc 	stmdaeq	r0, {r2, r3, r6, r7, r8}
  2c:	00000002 	andeq	r0, r0, r2
  30:	0000000c 	andeq	r0, r0, ip
  34:	00000000 	andeq	r0, r0, r0
  38:	080001ce 	stmdaeq	r0, {r1, r2, r3, r6, r7, r8}
  3c:	00000002 	andeq	r0, r0, r2
  40:	0000000c 	andeq	r0, r0, ip
  44:	00000000 	andeq	r0, r0, r0
  48:	080001d0 	stmdaeq	r0, {r4, r6, r7, r8}
  4c:	0000000c 	andeq	r0, r0, ip
  50:	00000014 	andeq	r0, r0, r4, lsl r0
  54:	00000000 	andeq	r0, r0, r0
  58:	080009f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, fp}
  5c:	00000020 	andeq	r0, r0, r0, lsr #32
  60:	83080e41 	movwhi	r0, #36417	; 0x8e41
  64:	00018e02 	andeq	r8, r1, r2, lsl #28
  68:	0000000c 	andeq	r0, r0, ip
  6c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
  70:	7c020001 	stcvc	0, cr0, [r2], {1}
  74:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  78:	0000000c 	andeq	r0, r0, ip
  7c:	00000068 	andeq	r0, r0, r8, rrx
  80:	080001dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8}
  84:	00000002 	andeq	r0, r0, r2
  88:	0000000c 	andeq	r0, r0, ip
  8c:	00000068 	andeq	r0, r0, r8, rrx
  90:	080001de 	stmdaeq	r0, {r1, r2, r3, r4, r6, r7, r8}
  94:	00000002 	andeq	r0, r0, r2
  98:	0000000c 	andeq	r0, r0, ip
  9c:	00000068 	andeq	r0, r0, r8, rrx
  a0:	080001e0 	stmdaeq	r0, {r5, r6, r7, r8}
  a4:	00000002 	andeq	r0, r0, r2
  a8:	0000000c 	andeq	r0, r0, ip
  ac:	00000068 	andeq	r0, r0, r8, rrx
  b0:	080001e2 	stmdaeq	r0, {r1, r5, r6, r7, r8}
  b4:	00000004 	andeq	r0, r0, r4
  b8:	0000000c 	andeq	r0, r0, ip
  bc:	00000068 	andeq	r0, r0, r8, rrx
  c0:	080001e6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r8}
  c4:	00000004 	andeq	r0, r0, r4
  c8:	0000000c 	andeq	r0, r0, ip
  cc:	00000068 	andeq	r0, r0, r8, rrx
  d0:	080001ea 	stmdaeq	r0, {r1, r3, r5, r6, r7, r8}
  d4:	0000006a 	andeq	r0, r0, sl, rrx
  d8:	0000001c 	andeq	r0, r0, ip, lsl r0
  dc:	00000068 	andeq	r0, r0, r8, rrx
  e0:	08000254 	stmdaeq	r0, {r2, r4, r6, r9}
  e4:	000000ec 	andeq	r0, r0, ip, ror #1
  e8:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
  ec:	86048505 	strhi	r8, [r4], -r5, lsl #10
  f0:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
  f4:	00000001 	andeq	r0, r0, r1
  f8:	0000001c 	andeq	r0, r0, ip, lsl r0
  fc:	00000068 	andeq	r0, r0, r8, rrx
 100:	08000340 	stmdaeq	r0, {r6, r8, r9}
 104:	0000013c 	andeq	r0, r0, ip, lsr r1
 108:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
 10c:	86048505 	strhi	r8, [r4], -r5, lsl #10
 110:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 114:	00000001 	andeq	r0, r0, r1
 118:	00000018 	andeq	r0, r0, r8, lsl r0
 11c:	00000068 	andeq	r0, r0, r8, rrx
 120:	0800047c 	stmdaeq	r0, {r2, r3, r4, r5, r6, sl}
 124:	00000128 	andeq	r0, r0, r8, lsr #2
 128:	83100e41 	tsthi	r0, #1040	; 0x410
 12c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
 130:	00018e02 	andeq	r8, r1, r2, lsl #28
 134:	0000001c 	andeq	r0, r0, ip, lsl r0
 138:	00000068 	andeq	r0, r0, r8, rrx
 13c:	080005a4 	stmdaeq	r0, {r2, r5, r7, r8, sl}
 140:	00000054 	andeq	r0, r0, r4, asr r0
 144:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
 148:	86048505 	strhi	r8, [r4], -r5, lsl #10
 14c:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 150:	00000001 	andeq	r0, r0, r1
 154:	0000001c 	andeq	r0, r0, ip, lsl r0
 158:	00000068 	andeq	r0, r0, r8, rrx
 15c:	080005f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, sl}
 160:	0000005c 	andeq	r0, r0, ip, asr r0
 164:	83180e41 	tsthi	r8, #1040	; 0x410
 168:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
 16c:	87038604 	strhi	r8, [r3, -r4, lsl #12]
 170:	00018e02 	andeq	r8, r1, r2, lsl #28
 174:	00000018 	andeq	r0, r0, r8, lsl r0
 178:	00000068 	andeq	r0, r0, r8, rrx
 17c:	08000654 	stmdaeq	r0, {r2, r4, r6, r9, sl}
 180:	0000005a 	andeq	r0, r0, sl, asr r0
 184:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 188:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
 18c:	00000001 	andeq	r0, r0, r1
 190:	00000020 	andeq	r0, r0, r0, lsr #32
 194:	00000068 	andeq	r0, r0, r8, rrx
 198:	080006ae 	stmdaeq	r0, {r1, r2, r3, r5, r7, r9, sl}
 19c:	0000011a 	andeq	r0, r0, sl, lsl r1
 1a0:	84180e41 	ldrhi	r0, [r8], #-3649	; 0xfffff1bf
 1a4:	86038504 	strhi	r8, [r3], -r4, lsl #10
 1a8:	02018e02 	andeq	r8, r1, #2, 28
 1ac:	100e0a46 	andne	r0, lr, r6, asr #20
 1b0:	00000b41 	andeq	r0, r0, r1, asr #22
 1b4:	0000000c 	andeq	r0, r0, ip
 1b8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 1bc:	7c020001 	stcvc	0, cr0, [r2], {1}
 1c0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 1c4:	0000000c 	andeq	r0, r0, ip
 1c8:	000001b4 			; <UNDEFINED> instruction: 0x000001b4
 1cc:	080007c8 	stmdaeq	r0, {r3, r6, r7, r8, r9, sl}
 1d0:	00000002 	andeq	r0, r0, r2
 1d4:	0000001c 	andeq	r0, r0, ip, lsl r0
 1d8:	000001b4 			; <UNDEFINED> instruction: 0x000001b4
 1dc:	080007ca 	stmdaeq	r0, {r1, r3, r6, r7, r8, r9, sl}
 1e0:	00000036 	andeq	r0, r0, r6, lsr r0
 1e4:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
 1e8:	42018e02 	andmi	r8, r1, #2, 28
 1ec:	0e54480e 	cdpeq	8, 5, cr4, cr4, cr14, {0}
 1f0:	00000008 	andeq	r0, r0, r8
 1f4:	0000000c 	andeq	r0, r0, ip
 1f8:	000001b4 			; <UNDEFINED> instruction: 0x000001b4
 1fc:	08000800 	stmdaeq	r0, {fp}
 200:	0000007c 	andeq	r0, r0, ip, ror r0
 204:	0000000c 	andeq	r0, r0, ip
 208:	000001b4 			; <UNDEFINED> instruction: 0x000001b4
 20c:	0800087c 	stmdaeq	r0, {r2, r3, r4, r5, r6, fp}
 210:	00000024 	andeq	r0, r0, r4, lsr #32
 214:	00000014 	andeq	r0, r0, r4, lsl r0
 218:	000001b4 			; <UNDEFINED> instruction: 0x000001b4
 21c:	080008a0 	stmdaeq	r0, {r5, r7, fp}
 220:	00000028 	andeq	r0, r0, r8, lsr #32
 224:	83080e41 	movwhi	r0, #36417	; 0x8e41
 228:	00018e02 	andeq	r8, r1, r2, lsl #28
 22c:	00000014 	andeq	r0, r0, r4, lsl r0
 230:	000001b4 			; <UNDEFINED> instruction: 0x000001b4
 234:	080008c8 	stmdaeq	r0, {r3, r6, r7, fp}
 238:	00000032 	andeq	r0, r0, r2, lsr r0
 23c:	84080e49 	strhi	r0, [r8], #-3657	; 0xfffff1b7
 240:	00018e02 	andeq	r8, r1, r2, lsl #28
 244:	00000018 	andeq	r0, r0, r8, lsl r0
 248:	000001b4 			; <UNDEFINED> instruction: 0x000001b4
 24c:	080008fa 	stmdaeq	r0, {r1, r3, r4, r5, r6, r7, fp}
 250:	00000046 	andeq	r0, r0, r6, asr #32
 254:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
 258:	5d018e02 	stcpl	14, cr8, [r1, #-8]
 25c:	0000080e 	andeq	r0, r0, lr, lsl #16
 260:	00000014 	andeq	r0, r0, r4, lsl r0
 264:	000001b4 			; <UNDEFINED> instruction: 0x000001b4
 268:	08000940 	stmdaeq	r0, {r6, r8, fp}
 26c:	0000001c 	andeq	r0, r0, ip, lsl r0
 270:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
 274:	00018e02 	andeq	r8, r1, r2, lsl #28
 278:	00000018 	andeq	r0, r0, r8, lsl r0
 27c:	000001b4 			; <UNDEFINED> instruction: 0x000001b4
 280:	0800095c 	stmdaeq	r0, {r2, r3, r4, r6, r8, fp}
 284:	00000038 	andeq	r0, r0, r8, lsr r0
 288:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
 28c:	4e018e02 	cdpmi	14, 0, cr8, cr1, cr2, {0}
 290:	000ec4ce 	andeq	ip, lr, lr, asr #9
 294:	00000014 	andeq	r0, r0, r4, lsl r0
 298:	000001b4 			; <UNDEFINED> instruction: 0x000001b4
 29c:	08000994 	stmdaeq	r0, {r2, r4, r7, r8, fp}
 2a0:	00000018 	andeq	r0, r0, r8, lsl r0
 2a4:	83080e41 	movwhi	r0, #36417	; 0x8e41
 2a8:	00018e02 	andeq	r8, r1, r2, lsl #28

Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	52434442 	subpl	r4, r3, #1107296256	; 0x42000000
   4:	47464300 	strbmi	r4, [r6, -r0, lsl #6]
   8:	4e470052 	mcrmi	0, 2, r0, cr7, cr2, {2}
   c:	31432055 	qdaddcc	r2, r5, r3
  10:	2e382037 	mrccs	0, 1, r2, cr8, cr7, {1}
  14:	20312e33 	eorscs	r2, r1, r3, lsr lr
  18:	39313032 	ldmdbcc	r1!, {r1, r4, r5, ip, sp}
  1c:	33303730 	teqcc	r0, #48, 14	; 0xc00000
  20:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
  24:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
  28:	5b202965 	blpl	80a5c4 <__Stack_Size+0x80a1c4>
  2c:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
  30:	72622d38 	rsbvc	r2, r2, #56, 26	; 0xe00
  34:	68636e61 	stmdavs	r3!, {r0, r5, r6, r9, sl, fp, sp, lr}^
  38:	76657220 	strbtvc	r7, [r5], -r0, lsr #4
  3c:	6f697369 	svcvs	0x00697369
  40:	3732206e 	ldrcc	r2, [r2, -lr, rrx]!
  44:	37323033 			; <UNDEFINED> instruction: 0x37323033
  48:	6d2d205d 	stcvs	0, cr2, [sp, #-372]!	; 0xfffffe8c
  4c:	6d756874 	ldclvs	8, cr6, [r5, #-464]!	; 0xfffffe30
  50:	6d2d2062 	stcvs	0, cr2, [sp, #-392]!	; 0xfffffe78
  54:	3d757063 	ldclcc	0, cr7, [r5, #-396]!	; 0xfffffe74
  58:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
  5c:	6d2d7865 	stcvs	8, cr7, [sp, #-404]!	; 0xfffffe6c
  60:	6d2d2033 	stcvs	0, cr2, [sp, #-204]!	; 0xffffff34
  64:	616f6c66 	cmnvs	pc, r6, ror #24
  68:	62612d74 	rsbvs	r2, r1, #116, 26	; 0x1d00
  6c:	6f733d69 	svcvs	0x00733d69
  70:	2d207466 	cfstrscs	mvf7, [r0, #-408]!	; 0xfffffe68
  74:	6372616d 	cmnvs	r2, #1073741851	; 0x4000001b
  78:	72613d68 	rsbvc	r3, r1, #104, 26	; 0x1a00
  7c:	2d37766d 	ldccs	6, cr7, [r7, #-436]!	; 0xfffffe4c
  80:	672d206d 	strvs	r2, [sp, -sp, rrx]!
  84:	72617764 	rsbvc	r7, r1, #100, 14	; 0x1900000
  88:	20322d66 	eorscs	r2, r2, r6, ror #26
  8c:	20734f2d 	rsbscs	r4, r3, sp, lsr #30
  90:	6f6e662d 	svcvs	0x006e662d
  94:	6975622d 	ldmdbvs	r5!, {r0, r2, r3, r5, r9, sp, lr}^
  98:	6e69746c 	cdpvs	4, 6, cr7, cr9, cr12, {3}
  9c:	414c4600 	cmpmi	ip, r0, lsl #12
  a0:	545f4853 	ldrbpl	r4, [pc], #-2131	; a8 <_Minimum_Stack_Size-0x58>
  a4:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
  a8:	41006665 	tstmi	r0, r5, ror #12
  ac:	4e454248 	cdpmi	2, 4, cr4, cr5, cr8, {2}
  b0:	52570052 	subspl	r0, r7, #82	; 0x52
  b4:	53005250 	movwpl	r5, #592	; 0x250
  b8:	6c437379 	mcrrvs	3, 7, r7, r3, cr9
  bc:	4d6b636f 	stclmi	3, cr6, [fp, #-444]!	; 0xfffffe44
  c0:	41007861 	tstmi	r0, r1, ror #16
  c4:	45324250 	ldrmi	r4, [r2, #-592]!	; 0xfffffdb0
  c8:	5f00524e 	svcpl	0x0000524e
  cc:	616e655f 	cmnvs	lr, pc, asr r5
  d0:	5f656c62 	svcpl	0x00656c62
  d4:	00717269 	rsbseq	r7, r1, r9, ror #4
  d8:	5f627375 	svcpl	0x00627375
  dc:	73616c63 	cmnvc	r1, #25344	; 0x6300
  e0:	6f705f73 	svcvs	0x00705f73
  e4:	41006c6c 	tstmi	r0, ip, ror #24
  e8:	72504248 	subsvc	r4, r0, #72, 4	; 0x80000004
  ec:	54637365 	strbtpl	r7, [r3], #-869	; 0xfffffc9b
  f0:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
  f4:	6f687300 	svcvs	0x00687300
  f8:	75207472 	strvc	r7, [r0, #-1138]!	; 0xfffffb8e
  fc:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
 100:	2064656e 	rsbcs	r6, r4, lr, ror #10
 104:	00746e69 	rsbseq	r6, r4, r9, ror #28
 108:	5f4d5449 	svcpl	0x004d5449
 10c:	75427852 	strbvc	r7, [r2, #-2130]	; 0xfffff7ae
 110:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
 114:	54504f00 	ldrbpl	r4, [r0], #-3840	; 0xfffff100
 118:	5259454b 	subspl	r4, r9, #314572800	; 0x12c00000
 11c:	736e7500 	cmnvc	lr, #0, 10
 120:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
 124:	68632064 	stmdavs	r3!, {r2, r5, r6, sp}^
 128:	52007261 	andpl	r7, r0, #268435462	; 0x10000006
 12c:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
 130:	00444556 	subeq	r4, r4, r6, asr r5
 134:	31425041 	cmpcc	r2, r1, asr #32
 138:	52545352 	subspl	r5, r4, #1207959553	; 0x48000001
 13c:	69616d00 	stmdbvs	r1!, {r8, sl, fp, sp, lr}^
 140:	5041006e 	subpl	r0, r1, lr, rrx
 144:	4e453142 	dvfmism	f3, f5, f2
 148:	50410052 	subpl	r0, r1, r2, asr r0
 14c:	53523242 	cmppl	r2, #536870916	; 0x20000004
 150:	6c005254 	sfmvs	f5, 4, [r0], {84}	; 0x54
 154:	20676e6f 	rsbcs	r6, r7, pc, ror #28
 158:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
 15c:	736e7520 	cmnvc	lr, #32, 10	; 0x8000000
 160:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
 164:	6e692064 	cdpvs	0, 6, cr2, cr9, cr4, {3}
 168:	69750074 	ldmdbvs	r5!, {r2, r4, r5, r6}^
 16c:	5f38746e 	svcpl	0x0038746e
 170:	6d2f0074 	stcvs	0, cr0, [pc, #-464]!	; ffffffa8 <BootRAM+0xef70749>
 174:	61696465 	cmnvs	r9, r5, ror #8
 178:	7478652f 	ldrbtvc	r6, [r8], #-1327	; 0xfffffad1
 17c:	7665642f 	strbtvc	r6, [r5], -pc, lsr #8
 180:	6f72702f 	svcvs	0x0072702f
 184:	72612f67 	rsbvc	r2, r1, #412	; 0x19c
 188:	73752f6d 	cmnvc	r5, #436	; 0x1b4
 18c:	2e352f62 	cdpcs	15, 3, cr2, cr5, cr2, {3}
 190:	5f434443 	svcpl	0x00434443
 194:	74003146 	strvc	r3, [r0], #-326	; 0xfffffeba
 198:	00656d69 	rsbeq	r6, r5, r9, ror #26
 19c:	74737953 	ldrbtvc	r7, [r3], #-2387	; 0xfffff6ad
 1a0:	6e496d65 	cdpvs	13, 4, cr6, cr9, cr5, {3}
 1a4:	6c007469 	cfstrsvs	mvf7, [r0], {105}	; 0x69
 1a8:	20676e6f 	rsbcs	r6, r7, pc, ror #28
 1ac:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
 1b0:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
 1b4:	73795300 	cmnvc	r9, #0, 6
 1b8:	436d6574 	cmnmi	sp, #116, 10	; 0x1d000000
 1bc:	4365726f 	cmnmi	r5, #-268435450	; 0xf0000006
 1c0:	6b636f6c 	blvs	18dbf78 <__Stack_Size+0x18dbb78>
 1c4:	63727300 	cmnvs	r2, #0, 6
 1c8:	69616d2f 	stmdbvs	r1!, {r0, r1, r2, r3, r5, r8, sl, fp, sp, lr}^
 1cc:	00632e6e 	rsbeq	r2, r3, lr, ror #28
 1d0:	50425041 	subpl	r5, r2, r1, asr #32
 1d4:	63736572 	cmnvs	r3, #478150656	; 0x1c800000
 1d8:	6c626154 	stfvse	f6, [r2], #-336	; 0xfffffeb0
 1dc:	68730065 	ldmdavs	r3!, {r0, r2, r5, r6}^
 1e0:	2074726f 	rsbscs	r7, r4, pc, ror #4
 1e4:	00746e69 	rsbseq	r6, r4, r9, ror #28
 1e8:	5f434352 	svcpl	0x00434352
 1ec:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
 1f0:	00666544 	rsbeq	r6, r6, r4, asr #10
 1f4:	746e6975 	strbtvc	r6, [lr], #-2421	; 0xfffff68b
 1f8:	745f3233 	ldrbvc	r3, [pc], #-563	; 200 <_Minimum_Stack_Size+0x100>
 1fc:	42535500 	subsmi	r5, r3, #0, 10
 200:	7465735f 	strbtvc	r7, [r5], #-863	; 0xfffffca1
 204:	73007075 	movwvc	r7, #117	; 0x75
 208:	7065656c 	rsbvc	r6, r5, ip, ror #10
 20c:	42535500 	subsmi	r5, r3, #0, 10
 210:	5f504c5f 	svcpl	0x00504c5f
 214:	314e4143 	cmpcc	lr, r3, asr #2
 218:	3058525f 	subscc	r5, r8, pc, asr r2
 21c:	5152495f 	cmppl	r2, pc, asr r9
 220:	4977006e 	ldmdbmi	r7!, {r1, r2, r3, r5, r6}^
 224:	7865646e 	stmdavc	r5!, {r1, r2, r3, r5, r6, sl, sp, lr}^
 228:	66756200 	ldrbtvs	r6, [r5], -r0, lsl #4
 22c:	42003631 	andmi	r3, r0, #51380224	; 0x3100000
 230:	00525253 	subseq	r5, r2, r3, asr r2
 234:	706d6574 	rsbvc	r6, sp, r4, ror r5
 238:	4e414300 	cdpmi	3, 4, cr4, cr1, cr0, {0}
 23c:	43535f31 	cmpmi	r3, #49, 30	; 0xc4
 240:	52495f45 	subpl	r5, r9, #276	; 0x114
 244:	44006e51 	strmi	r6, [r0], #-3665	; 0xfffff1af
 248:	5f31414d 	svcpl	0x0031414d
 24c:	6e616843 	cdpvs	8, 6, cr6, cr1, cr3, {2}
 250:	376c656e 	strbcc	r6, [ip, -lr, ror #10]!
 254:	5152495f 	cmppl	r2, pc, asr r9
 258:	3249006e 	subcc	r0, r9, #110	; 0x6e
 25c:	455f3243 	ldrbmi	r3, [pc, #-579]	; 21 <_Minimum_Stack_Size-0xdf>
 260:	52495f52 	subpl	r5, r9, #328	; 0x148
 264:	54006e51 	strpl	r6, [r0], #-3665	; 0xfffff1af
 268:	5f344d49 	svcpl	0x00344d49
 26c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 270:	414d4400 	cmpmi	sp, r0, lsl #8
 274:	68435f31 	stmdavs	r3, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
 278:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xfffff19f
 27c:	495f326c 	ldmdbmi	pc, {r2, r3, r5, r6, r9, ip, sp}^	; <UNPREDICTABLE>
 280:	006e5152 	rsbeq	r5, lr, r2, asr r1
 284:	5f616d70 	svcpl	0x00616d70
 288:	63736564 	cmnvs	r3, #100, 10	; 0x19000000
 28c:	00745f72 	rsbseq	r5, r4, r2, ror pc
 290:	65526d62 	ldrbvs	r6, [r2, #-3426]	; 0xfffff29e
 294:	73657571 	cmnvc	r5, #473956352	; 0x1c400000
 298:	70795474 	rsbsvc	r5, r9, r4, ror r4
 29c:	65730065 	ldrbvs	r0, [r3, #-101]!	; 0xffffff9b
 2a0:	5f707574 	svcpl	0x00707574
 2a4:	6b636170 	blvs	18d886c <__Stack_Size+0x18d846c>
 2a8:	46007465 	strmi	r7, [r0], -r5, ror #8
 2ac:	4853414c 	ldmdami	r3, {r2, r3, r6, r8, lr}^
 2b0:	5152495f 	cmppl	r2, pc, asr r9
 2b4:	7962006e 	stmdbvc	r2!, {r1, r2, r3, r5, r6}^
 2b8:	72736574 	rsbsvc	r6, r3, #116, 10	; 0x1d000000
 2bc:	00646165 	rsbeq	r6, r4, r5, ror #2
 2c0:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
 2c4:	52495f30 	subpl	r5, r9, #48, 30	; 0xc0
 2c8:	55006e51 	strpl	r6, [r0, #-3665]	; 0xfffff1af
 2cc:	4c5f4253 	lfmmi	f4, 2, [pc], {83}	; 0x53
 2d0:	41435f50 	cmpmi	r3, r0, asr pc
 2d4:	525f314e 	subspl	r3, pc, #-2147483629	; 0x80000013
 2d8:	495f3058 	ldmdbmi	pc, {r3, r4, r6, ip, sp}^	; <UNPREDICTABLE>
 2dc:	61485152 	cmpvs	r8, r2, asr r1
 2e0:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
 2e4:	58450072 	stmdapl	r5, {r1, r4, r5, r6}^
 2e8:	35314954 	ldrcc	r4, [r1, #-2388]!	; 0xfffff6ac
 2ec:	5f30315f 	svcpl	0x0030315f
 2f0:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 2f4:	73616c00 	cmnvc	r1, #0, 24
 2f8:	64646174 	strbtvs	r6, [r4], #-372	; 0xfffffe8c
 2fc:	65500072 	ldrbvs	r0, [r0, #-114]	; 0xffffff8e
 300:	5653646e 	ldrbpl	r6, [r3], -lr, ror #8
 304:	5152495f 	cmppl	r2, pc, asr r9
 308:	4352006e 	cmpmi	r2, #110	; 0x6e
 30c:	52495f43 	subpl	r5, r9, #268	; 0x10c
 310:	77006e51 	smlsdvc	r0, r1, lr, r6
 314:	756c6156 	strbvc	r6, [ip, #-342]!	; 0xfffffeaa
 318:	654d0065 	strbvs	r0, [sp, #-101]	; 0xffffff9b
 31c:	79726f6d 	ldmdbvc	r2!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 320:	616e614d 	cmnvs	lr, sp, asr #2
 324:	656d6567 	strbvs	r6, [sp, #-1383]!	; 0xfffffa99
 328:	495f746e 	ldmdbmi	pc, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
 32c:	006e5152 	rsbeq	r5, lr, r2, asr r1
 330:	5f307065 	svcpl	0x00307065
 334:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 338:	53490074 	movtpl	r0, #36980	; 0x9074
 33c:	49005254 	stmdbmi	r0, {r2, r4, r6, r9, ip, lr}
 340:	00524553 	subseq	r4, r2, r3, asr r5
 344:	314d4954 	cmpcc	sp, r4, asr r9
 348:	4b52425f 	blmi	1490ccc <__Stack_Size+0x14908cc>
 34c:	5152495f 	cmppl	r2, pc, asr r9
 350:	5352006e 	cmppl	r2, #110	; 0x6e
 354:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
 358:	53003144 	movwpl	r3, #324	; 0x144
 35c:	5f314950 	svcpl	0x00314950
 360:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 364:	73755f00 	cmnvc	r5, #0, 30
 368:	70655f62 	rsbvc	r5, r5, r2, ror #30
 36c:	6972775f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}^
 370:	44006574 	strmi	r6, [r0], #-1396	; 0xfffffa8c
 374:	5f31414d 	svcpl	0x0031414d
 378:	6e616843 	cdpvs	8, 6, cr6, cr1, cr3, {2}
 37c:	346c656e 	strbtcc	r6, [ip], #-1390	; 0xfffffa92
 380:	5152495f 	cmppl	r2, pc, asr r9
 384:	564e006e 	strbpl	r0, [lr], -lr, rrx
 388:	455f4349 	ldrbmi	r4, [pc, #-841]	; 47 <_Minimum_Stack_Size-0xb9>
 38c:	6c62616e 	stfvse	f6, [r2], #-440	; 0xfffffe48
 390:	51524965 	cmppl	r2, r5, ror #18
 394:	42535500 	subsmi	r5, r3, #0, 10
 398:	7079545f 	rsbsvc	r5, r9, pc, asr r4
 39c:	66654465 	strbtvs	r4, [r5], -r5, ror #8
 3a0:	44414400 	strbmi	r4, [r1], #-1024	; 0xfffffc00
 3a4:	43005244 	movwmi	r5, #580	; 0x244
 3a8:	5f314e41 	svcpl	0x00314e41
 3ac:	5f315852 	svcpl	0x00315852
 3b0:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 3b4:	53455200 	movtpl	r5, #20992	; 0x5200
 3b8:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
 3bc:	75004244 	strvc	r4, [r0, #-580]	; 0xfffffdbc
 3c0:	635f6273 	cmpvs	pc, #805306375	; 0x30000007
 3c4:	7373616c 	cmnvc	r3, #108, 2
 3c8:	7465675f 	strbtvc	r6, [r5], #-1887	; 0xfffff8a1
 3cc:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
 3d0:	7365645f 	cmnvc	r5, #1593835520	; 0x5f000000
 3d4:	55007263 	strpl	r7, [r0, #-611]	; 0xfffffd9d
 3d8:	485f4253 	ldmdami	pc, {r0, r1, r4, r6, r9, lr}^	; <UNPREDICTABLE>
 3dc:	41435f50 	cmpmi	r3, r0, asr pc
 3e0:	545f314e 	ldrbpl	r3, [pc], #-334	; 3e8 <_Minimum_Stack_Size+0x2e8>
 3e4:	52495f58 	subpl	r5, r9, #88, 30	; 0x160
 3e8:	49006e51 	stmdbmi	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
 3ec:	5f6e5152 	svcpl	0x006e5152
 3f0:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
 3f4:	30706500 	rsbscc	r6, r0, r0, lsl #10
 3f8:	6e65735f 	mcrvs	3, 3, r7, cr5, cr15, {2}
 3fc:	53550064 	cmppl	r5, #100	; 0x64
 400:	32545241 	subscc	r5, r4, #268435460	; 0x10000004
 404:	5152495f 	cmppl	r2, pc, asr r9
 408:	6f63006e 	svcvs	0x0063006e
 40c:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 410:	74617275 	strbtvc	r7, [r1], #-629	; 0xfffffd8b
 414:	006e6f69 	rsbeq	r6, lr, r9, ror #30
 418:	52305045 	eorspl	r5, r0, #69	; 0x45
 41c:	42535500 	subsmi	r5, r3, #0, 10
 420:	6464415f 	strbtvs	r4, [r4], #-351	; 0xfffffea1
 424:	70650072 	rsbvc	r0, r5, r2, ror r0
 428:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 42c:	74756f5f 	ldrbtvc	r6, [r5], #-3935	; 0xfffff0a1
 430:	30706500 	rsbscc	r6, r0, r0, lsl #10
 434:	6675625f 			; <UNDEFINED> instruction: 0x6675625f
 438:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
 43c:	495f3249 	ldmdbmi	pc, {r0, r3, r6, r9, ip, sp}^	; <UNPREDICTABLE>
 440:	006e5152 	rsbeq	r5, lr, r2, asr r1
 444:	32433249 	subcc	r3, r3, #-1879048188	; 0x90000004
 448:	5f56455f 	svcpl	0x0056455f
 44c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 450:	31504500 	cmpcc	r0, r0, lsl #10
 454:	73750052 	cmnvc	r5, #82	; 0x52
 458:	70655f62 	rsbvc	r5, r5, r2, ror #30
 45c:	61746164 	cmnvs	r4, r4, ror #2
 460:	4400745f 	strmi	r7, [r0], #-1119	; 0xfffffba1
 464:	5f31414d 	svcpl	0x0031414d
 468:	6e616843 	cdpvs	8, 6, cr6, cr1, cr3, {2}
 46c:	366c656e 	strbtcc	r6, [ip], -lr, ror #10
 470:	5152495f 	cmppl	r2, pc, asr r9
 474:	755f006e 	ldrbvc	r0, [pc, #-110]	; 40e <__Stack_Size+0xe>
 478:	655f6273 	ldrbvs	r6, [pc, #-627]	; 20d <_Minimum_Stack_Size+0x10d>
 47c:	65725f70 	ldrbvs	r5, [r2, #-3952]!	; 0xfffff090
 480:	54006461 	strpl	r6, [r0], #-1121	; 0xfffffb9f
 484:	5f334d49 	svcpl	0x00334d49
 488:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 48c:	414d4400 	cmpmi	sp, r0, lsl #8
 490:	68435f31 	stmdavs	r3, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
 494:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xfffff19f
 498:	495f316c 	ldmdbmi	pc, {r2, r3, r5, r6, r8, ip, sp}^	; <UNPREDICTABLE>
 49c:	006e5152 	rsbeq	r5, lr, r2, asr r1
 4a0:	52325045 	eorspl	r5, r2, #69	; 0x45
 4a4:	42535500 	subsmi	r5, r3, #0, 10
 4a8:	656b6157 	strbvs	r6, [fp, #-343]!	; 0xfffffea9
 4ac:	495f7055 	ldmdbmi	pc, {r0, r2, r4, r6, ip, sp, lr}^	; <UNPREDICTABLE>
 4b0:	006e5152 	rsbeq	r5, lr, r2, asr r1
 4b4:	47445757 	smlsldmi	r5, r4, r7, r7
 4b8:	5152495f 	cmppl	r2, pc, asr r9
 4bc:	7375006e 	cmnvc	r5, #110	; 0x6e
 4c0:	6c635f62 	stclvs	15, cr5, [r3], #-392	; 0xfffffe78
 4c4:	5f737361 	svcpl	0x00737361
 4c8:	63736964 	cmnvs	r3, #100, 18	; 0x190000
 4cc:	656e6e6f 	strbvs	r6, [lr, #-3695]!	; 0xfffff191
 4d0:	45007463 	strmi	r7, [r0, #-1123]	; 0xfffffb9d
 4d4:	00523350 	subseq	r3, r2, r0, asr r3
 4d8:	46737542 	ldrbtmi	r7, [r3], -r2, asr #10
 4dc:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
 4e0:	5152495f 	cmppl	r2, pc, asr r9
 4e4:	5845006e 	stmdapl	r5, {r1, r2, r3, r5, r6}^
 4e8:	5f344954 	svcpl	0x00344954
 4ec:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 4f0:	62737500 	rsbsvs	r7, r3, #0, 10
 4f4:	616c635f 	cmnvs	ip, pc, asr r3
 4f8:	695f7373 	ldmdbvs	pc, {r0, r1, r4, r5, r6, r8, r9, ip, sp, lr}^	; <UNPREDICTABLE>
 4fc:	0074696e 	rsbseq	r6, r4, lr, ror #18
 500:	5f445650 	svcpl	0x00445650
 504:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 508:	66706500 	ldrbtvs	r6, [r0], -r0, lsl #10
 50c:	5f636e75 	svcpl	0x00636e75
 510:	73750074 	cmnvc	r5, #116	; 0x74
 514:	78745f62 	ldmdavc	r4!, {r1, r5, r6, r8, r9, sl, fp, ip, lr}^
 518:	756f635f 	strbvc	r6, [pc, #-863]!	; 1c1 <_Minimum_Stack_Size+0xc1>
 51c:	4900746e 	stmdbmi	r0, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
 520:	00525043 	subseq	r5, r2, r3, asr #32
 524:	52345045 	eorspl	r5, r4, #69	; 0x45
 528:	414d4400 	cmpmi	sp, r0, lsl #8
 52c:	68435f31 	stmdavs	r3, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
 530:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xfffff19f
 534:	495f336c 	ldmdbmi	pc, {r2, r3, r5, r6, r8, r9, ip, sp}^	; <UNPREDICTABLE>
 538:	006e5152 	rsbeq	r5, lr, r2, asr r1
 53c:	2f637273 	svccs	0x00637273
 540:	5f627375 	svcpl	0x00627375
 544:	2e62696c 	vnmulcs.f16	s13, s4, s25	; <UNPREDICTABLE>
 548:	32490063 	subcc	r0, r9, #99	; 0x63
 54c:	455f3143 	ldrbmi	r3, [pc, #-323]	; 411 <__Stack_Size+0x11>
 550:	52495f56 	subpl	r5, r9, #344	; 0x158
 554:	72006e51 	andvc	r6, r0, #1296	; 0x510
 558:	756e5f78 	strbvc	r5, [lr, #-3960]!	; 0xfffff088
 55c:	6c625f6d 	stclvs	15, cr5, [r2], #-436	; 0xfffffe4c
 560:	736b636f 	cmnvc	fp, #-1140850687	; 0xbc000001
 564:	62737500 	rsbsvs	r7, r3, #0, 10
 568:	616c635f 	cmnvs	ip, pc, asr r3
 56c:	655f7373 	ldrbvs	r7, [pc, #-883]	; 201 <_Minimum_Stack_Size+0x101>
 570:	695f3070 	ldmdbvs	pc, {r4, r5, r6, ip, sp}^	; <UNPREDICTABLE>
 574:	6975006e 	ldmdbvs	r5!, {r1, r2, r3, r5, r6}^
 578:	3631746e 	ldrtcc	r7, [r1], -lr, ror #8
 57c:	7400745f 	strvc	r7, [r0], #-1119	; 0xfffffba1
 580:	6c625f78 	stclvs	15, cr5, [r2], #-480	; 0xfffffe20
 584:	736b636f 	cmnvc	fp, #-1140850687	; 0xbc000001
 588:	00657a69 	rsbeq	r7, r5, r9, ror #20
 58c:	314d4954 	cmpcc	sp, r4, asr r9
 590:	5f50555f 	svcpl	0x0050555f
 594:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 598:	49545300 	ldmdbmi	r4, {r8, r9, ip, lr}^
 59c:	54520052 	ldrbpl	r0, [r2], #-82	; 0xffffffae
 5a0:	6c415f43 	mcrrvs	15, 4, r5, r1, cr3
 5a4:	5f6d7261 	svcpl	0x006d7261
 5a8:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 5ac:	43545200 	cmpmi	r4, #0, 4
 5b0:	5152495f 	cmppl	r2, pc, asr r9
 5b4:	5045006e 	subpl	r0, r5, lr, rrx
 5b8:	52005235 	andpl	r5, r0, #1342177283	; 0x50000003
 5bc:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
 5c0:	30444556 	subcc	r4, r4, r6, asr r5
 5c4:	53455200 	movtpl	r5, #20992	; 0x5200
 5c8:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
 5cc:	52003144 	andpl	r3, r0, #68, 2
 5d0:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
 5d4:	32444556 	subcc	r4, r4, #360710144	; 0x15800000
 5d8:	53455200 	movtpl	r5, #20992	; 0x5200
 5dc:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
 5e0:	52003344 	andpl	r3, r0, #68, 6	; 0x10000001
 5e4:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
 5e8:	34444556 	strbcc	r4, [r4], #-1366	; 0xfffffaaa
 5ec:	53455200 	movtpl	r5, #20992	; 0x5200
 5f0:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
 5f4:	52003544 	andpl	r3, r0, #68, 10	; 0x11000000
 5f8:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
 5fc:	36444556 			; <UNDEFINED> instruction: 0x36444556
 600:	53455200 	movtpl	r5, #20992	; 0x5200
 604:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
 608:	52003844 	andpl	r3, r0, #68, 16	; 0x440000
 60c:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
 610:	39444556 	stmdbcc	r4, {r1, r2, r4, r6, r8, sl, lr}^
 614:	53455200 	movtpl	r5, #20992	; 0x5200
 618:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
 61c:	55004144 	strpl	r4, [r0, #-324]	; 0xfffffebc
 620:	54524153 	ldrbpl	r4, [r2], #-339	; 0xfffffead
 624:	52495f31 	subpl	r5, r9, #49, 30	; 0xc4
 628:	75006e51 	strvc	r6, [r0, #-3665]	; 0xfffff1af
 62c:	655f6273 	ldrbvs	r6, [pc, #-627]	; 3c1 <_Minimum_Stack_Size+0x2c1>
 630:	6e695f70 	mcrvs	15, 3, r5, cr9, cr0, {3}
 634:	4e007469 	cdpmi	4, 0, cr7, cr0, cr9, {3}
 638:	614d6e6f 	cmpvs	sp, pc, ror #28
 63c:	62616b73 	rsbvs	r6, r1, #117760	; 0x1cc00
 640:	6e49656c 	cdpvs	5, 4, cr6, cr9, cr12, {3}
 644:	52495f74 	subpl	r5, r9, #116, 30	; 0x1d0
 648:	77006e51 	smlsdvc	r0, r1, lr, r6
 64c:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
 650:	54006874 	strpl	r6, [r0], #-2164	; 0xfffff78c
 654:	5f314d49 	svcpl	0x00314d49
 658:	495f4343 	ldmdbmi	pc, {r0, r1, r6, r8, r9, lr}^	; <UNPREDICTABLE>
 65c:	006e5152 	rsbeq	r5, lr, r2, asr r1
 660:	52365045 	eorspl	r5, r6, #69	; 0x45
 664:	66656c00 	strbtvs	r6, [r5], -r0, lsl #24
 668:	58450074 	stmdapl	r5, {r2, r4, r5, r6}^
 66c:	5f314954 	svcpl	0x00314954
 670:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 674:	65526200 	ldrbvs	r6, [r2, #-512]	; 0xfffffe00
 678:	73657571 	cmnvc	r5, #473956352	; 0x1c400000
 67c:	564e0074 			; <UNDEFINED> instruction: 0x564e0074
 680:	545f4349 	ldrbpl	r4, [pc], #-841	; 688 <__Stack_Size+0x288>
 684:	00657079 	rsbeq	r7, r5, r9, ror r0
 688:	52544e43 	subspl	r4, r4, #1072	; 0x430
 68c:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
 690:	52545f31 	subspl	r5, r4, #49, 30	; 0xc4
 694:	4f435f47 	svcmi	0x00435f47
 698:	52495f4d 	subpl	r5, r9, #308	; 0x134
 69c:	47006e51 	smlsdmi	r0, r1, lr, r6
 6a0:	5f4f4950 	svcpl	0x004f4950
 6a4:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
 6a8:	00666544 	rsbeq	r6, r6, r4, asr #10
 6ac:	31433249 	cmpcc	r3, r9, asr #4
 6b0:	5f52455f 	svcpl	0x0052455f
 6b4:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 6b8:	73795300 	cmnvc	r9, #0, 6
 6bc:	6b636954 	blvs	18dac14 <__Stack_Size+0x18da814>
 6c0:	5152495f 	cmppl	r2, pc, asr r9
 6c4:	7065006e 	rsbvc	r0, r5, lr, rrx
 6c8:	006d756e 	rsbeq	r7, sp, lr, ror #10
 6cc:	735f7872 	cmpvc	pc, #7471104	; 0x720000
 6d0:	00657a69 	rsbeq	r7, r5, r9, ror #20
 6d4:	324d4954 	subcc	r4, sp, #84, 18	; 0x150000
 6d8:	5152495f 	cmppl	r2, pc, asr r9
 6dc:	7375006e 	cmnvc	r5, #110	; 0x6e
 6e0:	6c635f62 	stclvs	15, cr5, [r3], #-392	; 0xfffffe78
 6e4:	5f737361 	svcpl	0x00737361
 6e8:	5f307065 	svcpl	0x00307065
 6ec:	0074756f 	rsbseq	r7, r4, pc, ror #10
 6f0:	52375045 	eorspl	r5, r7, #69	; 0x45
 6f4:	6e6f6300 	cdpvs	3, 6, cr6, cr15, cr0, {0}
 6f8:	5f676966 	svcpl	0x00676966
 6fc:	6b636170 	blvs	18d8cc4 <__Stack_Size+0x18d88c4>
 700:	7500745f 	strvc	r7, [r0, #-1119]	; 0xfffffba1
 704:	725f6273 	subsvc	r6, pc, #805306375	; 0x30000007
 708:	64615f78 	strbtvs	r5, [r1], #-3960	; 0xfffff088
 70c:	74007264 	strvc	r7, [r0], #-612	; 0xfffffd9c
 710:	756e5f78 	strbvc	r5, [lr, #-3960]!	; 0xfffff088
 714:	6c625f6d 	stclvs	15, cr5, [r2], #-436	; 0xfffffe4c
 718:	736b636f 	cmnvc	fp, #-1140850687	; 0xbc000001
 71c:	62654400 	rsbvs	r4, r5, #0, 8
 720:	6f4d6775 	svcvs	0x004d6775
 724:	6f74696e 	svcvs	0x0074696e
 728:	52495f72 	subpl	r5, r9, #456	; 0x1c8
 72c:	55006e51 	strpl	r6, [r0, #-3665]	; 0xfffff1af
 730:	65676173 	strbvs	r6, [r7, #-371]!	; 0xfffffe8d
 734:	6c756146 	ldfvse	f6, [r5], #-280	; 0xfffffee8
 738:	52495f74 	subpl	r5, r9, #116, 30	; 0x1d0
 73c:	72006e51 	andvc	r6, r0, #1296	; 0x510
 740:	6c625f78 	stclvs	15, cr5, [r2], #-480	; 0xfffffe20
 744:	736b636f 	cmnvc	fp, #-1140850687	; 0xbc000001
 748:	00657a69 	rsbeq	r7, r5, r9, ror #20
 74c:	75667065 	strbvc	r7, [r6, #-101]!	; 0xffffff9b
 750:	695f636e 	ldmdbvs	pc, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^	; <UNPREDICTABLE>
 754:	7375006e 	cmnvc	r5, #110	; 0x6e
 758:	70655f62 	rsbvc	r5, r5, r2, ror #30
 75c:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
 760:	6f645f74 	svcvs	0x00645f74
 764:	656c6275 	strbvs	r6, [ip, #-629]!	; 0xfffffd8b
 768:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
 76c:	355f3949 	ldrbcc	r3, [pc, #-2377]	; fffffe2b <BootRAM+0xef705cc>
 770:	5152495f 	cmppl	r2, pc, asr r9
 774:	5653006e 	ldrbpl	r0, [r3], -lr, rrx
 778:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
 77c:	5152495f 	cmppl	r2, pc, asr r9
 780:	4349006e 	movtmi	r0, #36974	; 0x906e
 784:	53005245 	movwpl	r5, #581	; 0x245
 788:	5f324950 	svcpl	0x00324950
 78c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 790:	42414900 	submi	r4, r1, #0, 18
 794:	73750052 	cmnvc	r5, #82	; 0x52
 798:	78745f62 	ldmdavc	r4!, {r1, r5, r6, r8, r9, sl, fp, ip, lr}^
 79c:	6464615f 	strbtvs	r6, [r4], #-351	; 0xfffffea1
 7a0:	4d440072 	stclmi	0, cr0, [r4, #-456]	; 0xfffffe38
 7a4:	435f3141 	cmpmi	pc, #1073741840	; 0x40000010
 7a8:	6e6e6168 	powvsez	f6, f6, #0.0
 7ac:	5f356c65 	svcpl	0x00356c65
 7b0:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 7b4:	41544200 	cmpmi	r4, r0, lsl #4
 7b8:	00454c42 	subeq	r4, r5, r2, asr #24
 7bc:	745f7065 	ldrbvc	r7, [pc], #-101	; 7c4 <__Stack_Size+0x3c4>
 7c0:	00657079 	rsbeq	r7, r5, r9, ror r0
 7c4:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
 7c8:	52495f33 	subpl	r5, r9, #51, 30	; 0xcc
 7cc:	64006e51 	strvs	r6, [r0], #-3665	; 0xfffff1af
 7d0:	695f7269 	ldmdbvs	pc, {r0, r3, r5, r6, r9, ip, sp, lr}^	; <UNPREDICTABLE>
 7d4:	6148006e 	cmpvs	r8, lr, rrx
 7d8:	61466472 	hvcvs	26178	; 0x6642
 7dc:	5f746c75 	svcpl	0x00746c75
 7e0:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 7e4:	50534900 	subspl	r4, r3, r0, lsl #18
 7e8:	73750052 	cmnvc	r5, #82	; 0x52
 7ec:	78725f62 	ldmdavc	r2!, {r1, r5, r6, r8, r9, sl, fp, ip, lr}^
 7f0:	756f635f 	strbvc	r6, [pc, #-863]!	; 499 <__Stack_Size+0x99>
 7f4:	7200746e 	andvc	r7, r0, #1845493760	; 0x6e000000
 7f8:	756f6378 	strbvc	r6, [pc, #-888]!	; 488 <__Stack_Size+0x88>
 7fc:	4100746e 	tstmi	r0, lr, ror #8
 800:	5f314344 	svcpl	0x00314344
 804:	52495f32 	subpl	r5, r9, #50, 30	; 0xc8
 808:	52006e51 	andpl	r6, r0, #1296	; 0x510
 80c:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
 810:	37444556 	smlsldcc	r4, r4, r6, r5	; <UNPREDICTABLE>
 814:	41535500 	cmpmi	r3, r0, lsl #10
 818:	5f335452 	svcpl	0x00335452
 81c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 820:	4d415400 	cfstrdmi	mvd5, [r1, #-0]
 824:	5f524550 	svcpl	0x00524550
 828:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 82c:	53455200 	movtpl	r5, #20992	; 0x5200
 830:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
 834:	4c004344 	stcmi	3, cr4, [r0], {68}	; 0x44
 838:	00524b43 	subseq	r4, r2, r3, asr #22
 83c:	69726170 	ldmdbvs	r2!, {r4, r5, r6, r8, sp, lr}^
 840:	75007974 	strvc	r7, [r0, #-2420]	; 0xfffff68c
 844:	655f6273 	ldrbvs	r6, [pc, #-627]	; 5d9 <__Stack_Size+0x1d9>
 848:	65725f70 	ldrbvs	r5, [r2, #-3952]!	; 0xfffff090
 84c:	645f6461 	ldrbvs	r6, [pc], #-1121	; 854 <__Stack_Size+0x454>
 850:	6c62756f 	cfstr64vs	mvdx7, [r2], #-444	; 0xfffffe44
 854:	6d660065 	stclvs	0, cr0, [r6, #-404]!	; 0xfffffe6c
 858:	00387574 	eorseq	r7, r8, r4, ror r5
 85c:	5f6e6f5f 	svcpl	0x006e6f5f
 860:	74697865 	strbtvc	r7, [r9], #-2149	; 0xfffff79b
 864:	6772615f 			; <UNDEFINED> instruction: 0x6772615f
 868:	775f0073 			; <UNDEFINED> instruction: 0x775f0073
 86c:	6d6f7463 	cfstrdvs	mvd7, [pc, #-396]!	; 6e8 <__Stack_Size+0x2e8>
 870:	74735f62 	ldrbtvc	r5, [r3], #-3938	; 0xfffff09e
 874:	00657461 	rsbeq	r7, r5, r1, ror #8
 878:	3834725f 	ldmdacc	r4!, {r0, r1, r2, r3, r4, r6, r9, ip, sp, lr}
 87c:	75616200 	strbvc	r6, [r1, #-512]!	; 0xfffffe00
 880:	74617264 	strbtvc	r7, [r1], #-612	; 0xfffffd9c
 884:	735f0065 	cmpvc	pc, #101	; 0x65
 888:	616e6769 	cmnvs	lr, r9, ror #14
 88c:	75625f6c 	strbvc	r5, [r2, #-3948]!	; 0xfffff094
 890:	6c5f0066 	mrrcvs	0, 6, r0, pc, cr6	; <UNPREDICTABLE>
 894:	69736662 	ldmdbvs	r3!, {r1, r5, r6, r9, sl, sp, lr}^
 898:	5f00657a 	svcpl	0x0000657a
 89c:	67616c66 	strbvs	r6, [r1, -r6, ror #24]!
 8a0:	65740073 	ldrbvs	r0, [r4, #-115]!	; 0xffffff8d
 8a4:	64007473 	strvs	r7, [r0], #-1139	; 0xfffffb8d
 8a8:	5f617461 	svcpl	0x00617461
 8ac:	5f74756f 	svcpl	0x0074756f
 8b0:	6c6c6163 	stfvse	f6, [ip], #-396	; 0xfffffe74
 8b4:	6b636162 	blvs	18d8e44 <__Stack_Size+0x18d8a44>
 8b8:	62737500 	rsbsvs	r7, r3, #0, 10
 8bc:	5f70655f 	svcpl	0x0070655f
 8c0:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 8c4:	6f645f65 	svcvs	0x00645f65
 8c8:	656c6275 	strbvs	r6, [ip, #-629]!	; 0xfffffd8b
 8cc:	6c746300 	ldclvs	3, cr6, [r4], #-0
 8d0:	6c61635f 	stclvs	3, cr6, [r1], #-380	; 0xfffffe84
 8d4:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
 8d8:	4c5f006b 	mrrcmi	0, 6, r0, pc, cr11	; <UNPREDICTABLE>
 8dc:	5f4b434f 	svcpl	0x004b434f
 8e0:	55434552 	strbpl	r4, [r3, #-1362]	; 0xfffffaae
 8e4:	56495352 			; <UNDEFINED> instruction: 0x56495352
 8e8:	00545f45 	subseq	r5, r4, r5, asr #30
 8ec:	72626d5f 	rsbvc	r6, r2, #6080	; 0x17c0
 8f0:	5f6e656c 	svcpl	0x006e656c
 8f4:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
 8f8:	735f0065 	cmpvc	pc, #101	; 0x65
 8fc:	756f6474 	strbvc	r6, [pc, #-1140]!	; 490 <__Stack_Size+0x90>
 900:	665f0074 			; <UNDEFINED> instruction: 0x665f0074
 904:	5f736f70 	svcpl	0x00736f70
 908:	72730074 	rsbsvc	r0, r3, #116	; 0x74
 90c:	73752f63 	cmnvc	r5, #396	; 0x18c
 910:	6c635f62 	stclvs	15, cr5, [r3], #-392	; 0xfffffe78
 914:	5f737361 	svcpl	0x00737361
 918:	2e636463 	cdpcs	4, 6, cr6, cr3, cr3, {3}
 91c:	665f0063 	ldrbvs	r0, [pc], -r3, rrx
 920:	5f00736e 	svcpl	0x0000736e
 924:	6b6f6f63 	blvs	1bdc6b8 <__Stack_Size+0x1bdc2b8>
 928:	63006569 	movwvs	r6, #1385	; 0x569
 92c:	6c5f6364 	mrrcvs	3, 6, r6, pc, cr4	; <UNPREDICTABLE>
 930:	63656e69 	cmnvs	r5, #1680	; 0x690
 934:	6e69646f 	cdpvs	4, 6, cr6, cr9, cr15, {3}
 938:	5f5f0067 	svcpl	0x005f0067
 93c:	775f6d74 			; <UNDEFINED> instruction: 0x775f6d74
 940:	00796164 	rsbseq	r6, r9, r4, ror #2
 944:	7365725f 	cmnvc	r5, #-268435451	; 0xf0000005
 948:	00746c75 	rsbseq	r6, r4, r5, ror ip
 94c:	49465f5f 	stmdbmi	r6, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
 950:	5f00454c 	svcpl	0x0000454c
 954:	5f6d745f 	svcpl	0x006d745f
 958:	72756f68 	rsbsvc	r6, r5, #104, 30	; 0x1a0
 95c:	635f5f00 	cmpvs	pc, #0, 30
 960:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
 964:	745f5f00 	ldrbvc	r5, [pc], #-3840	; 96c <__Stack_Size+0x56c>
 968:	696d5f6d 	stmdbvs	sp!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
 96c:	6e5f006e 	cdpvs	0, 5, cr0, cr15, cr14, {3}
 970:	66747865 	ldrbtvs	r7, [r4], -r5, ror #16
 974:	61725f00 	cmnvs	r2, r0, lsl #30
 978:	3834646e 	ldmdacc	r4!, {r1, r2, r3, r5, r6, sl, sp, lr}
 97c:	65725f00 	ldrbvs	r5, [r2, #-3840]!	; 0xfffff100
 980:	746c7573 	strbtvc	r7, [ip], #-1395	; 0xfffffa8d
 984:	55006b5f 	strpl	r6, [r0, #-2911]	; 0xfffff4a1
 988:	435f4253 	cmpmi	pc, #805306373	; 0x30000005
 98c:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 990:	73654467 	cmnvc	r5, #1728053248	; 0x67000000
 994:	70697263 	rsbvc	r7, r9, r3, ror #4
 998:	00726f74 	rsbseq	r6, r2, r4, ror pc
 99c:	6373615f 	cmnvs	r3, #-1073741801	; 0xc0000017
 9a0:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 9a4:	6675625f 			; <UNDEFINED> instruction: 0x6675625f
 9a8:	735f5f00 	cmpvc	pc, #0, 30
 9ac:	454c4946 	strbmi	r4, [ip, #-2374]	; 0xfffff6ba
 9b0:	64775f00 	ldrbtvs	r5, [r7], #-3840	; 0xfffff100
 9b4:	735f0073 	cmpvc	pc, #115	; 0x73
 9b8:	006b6565 	rsbeq	r6, fp, r5, ror #10
 9bc:	7562755f 	strbvc	r7, [r2, #-1375]!	; 0xfffffaa1
 9c0:	655f0066 	ldrbvs	r0, [pc, #-102]	; 962 <__Stack_Size+0x562>
 9c4:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 9c8:	79636e65 	stmdbvc	r3!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
 9cc:	745f5f00 	ldrbvc	r5, [pc], #-3840	; 9d4 <__Stack_Size+0x5d4>
 9d0:	65735f6d 	ldrbvs	r5, [r3, #-3949]!	; 0xfffff093
 9d4:	5f5f0063 	svcpl	0x005f0063
 9d8:	795f6d74 	ldmdbvc	pc, {r2, r4, r5, r6, r8, sl, fp, sp, lr}^	; <UNPREDICTABLE>
 9dc:	00796164 	rsbseq	r6, r9, r4, ror #2
 9e0:	636e695f 	cmnvs	lr, #1556480	; 0x17c000
 9e4:	6e695f00 	cdpvs	15, 6, cr5, cr9, cr0, {0}
 9e8:	6d5f0064 	ldclvs	0, cr0, [pc, #-400]	; 860 <__Stack_Size+0x460>
 9ec:	74727362 	ldrbtvc	r7, [r2], #-866	; 0xfffffc9e
 9f0:	7363776f 	cmnvc	r3, #29097984	; 0x1bc0000
 9f4:	6174735f 	cmnvs	r4, pc, asr r3
 9f8:	5f006574 	svcpl	0x00006574
 9fc:	6c61765f 	stclvs	6, cr7, [r1], #-380	; 0xfffffe84
 a00:	5f006575 	svcpl	0x00006575
 a04:	00733570 	rsbseq	r3, r3, r0, ror r5
 a08:	5f425355 	svcpl	0x00425355
 a0c:	69727453 	ldmdbvs	r2!, {r0, r1, r4, r6, sl, ip, sp, lr}^
 a10:	614d676e 	cmpvs	sp, lr, ror #14
 a14:	6166756e 	cmnvs	r6, lr, ror #10
 a18:	72757463 	rsbsvc	r7, r5, #1660944384	; 0x63000000
 a1c:	44676e69 	strbtmi	r6, [r7], #-3689	; 0xfffff197
 a20:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
 a24:	6f747069 	svcvs	0x00747069
 a28:	6d5f0072 	ldclvs	0, cr0, [pc, #-456]	; 868 <__Stack_Size+0x468>
 a2c:	6e656c62 	cdpvs	12, 6, cr6, cr5, cr2, {3}
 a30:	6174735f 	cmnvs	r4, pc, asr r3
 a34:	5f006574 	svcpl	0x00006574
 a38:	5f6d745f 	svcpl	0x006d745f
 a3c:	7961646d 	stmdbvc	r1!, {r0, r2, r3, r5, r6, sl, sp, lr}^
 a40:	69735f00 	ldmdbvs	r3!, {r8, r9, sl, fp, ip, lr}^
 a44:	75665f67 	strbvc	r5, [r6, #-3943]!	; 0xfffff099
 a48:	5f00636e 	svcpl	0x0000636e
 a4c:	7472626d 	ldrbtvc	r6, [r2], #-621	; 0xfffffd93
 a50:	5f63776f 	svcpl	0x0063776f
 a54:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
 a58:	615f0065 	cmpvs	pc, r5, rrx
 a5c:	69786574 	ldmdbvs	r8!, {r2, r4, r5, r6, r8, sl, sp, lr}^
 a60:	5f003074 	svcpl	0x00003074
 a64:	636f6c66 	cmnvs	pc, #26112	; 0x6600
 a68:	00745f6b 	rsbseq	r5, r4, fp, ror #30
 a6c:	63775f5f 	cmnvs	r7, #380	; 0x17c
 a70:	695f0068 	ldmdbvs	pc, {r3, r5, r6}^	; <UNPREDICTABLE>
 a74:	0073626f 	rsbseq	r6, r3, pc, ror #4
 a78:	6f6c635f 	svcvs	0x006c635f
 a7c:	5f006573 	svcpl	0x00006573
 a80:	6964735f 	stmdbvs	r4!, {r0, r1, r2, r3, r4, r6, r8, r9, ip, sp, lr}^
 a84:	696e6964 	stmdbvs	lr!, {r2, r5, r6, r8, fp, sp, lr}^
 a88:	735f0074 	cmpvc	pc, #116	; 0x74
 a8c:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
 a90:	61675f00 	cmnvs	r7, r0, lsl #30
 a94:	5f616d6d 	svcpl	0x00616d6d
 a98:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
 a9c:	006d6167 	rsbeq	r6, sp, r7, ror #2
 aa0:	7361625f 	cmnvc	r1, #-268435451	; 0xf0000005
 aa4:	665f0065 	ldrbvs	r0, [pc], -r5, rrx
 aa8:	6c656572 	cfstr64vs	mvdx6, [r5], #-456	; 0xfffffe38
 aac:	00747369 	rsbseq	r7, r4, r9, ror #6
 ab0:	6c756d5f 	ldclvs	13, cr6, [r5], #-380	; 0xfffffe84
 ab4:	5f5f0074 	svcpl	0x005f0074
 ab8:	6e6f4c55 	mcrvs	12, 3, r4, cr15, cr5, {2}
 abc:	775f0067 	ldrbvc	r0, [pc, -r7, rrx]
 ac0:	6f747263 	svcvs	0x00747263
 ac4:	735f626d 	cmpvc	pc, #-805306362	; 0xd0000006
 ac8:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
 acc:	69665f00 	stmdbvs	r6!, {r8, r9, sl, fp, ip, lr}^
 ad0:	5f00656c 	svcpl	0x0000656c
 ad4:	656c635f 	strbvs	r6, [ip, #-863]!	; 0xfffffca1
 ad8:	70756e61 	rsbsvc	r6, r5, r1, ror #28
 adc:	626d5f00 	rsbvs	r5, sp, #0, 30
 ae0:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
 ae4:	00745f65 	rsbseq	r5, r4, r5, ror #30
 ae8:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
 aec:	756f6420 	strbvc	r6, [pc, #-1056]!	; 6d4 <__Stack_Size+0x2d4>
 af0:	00656c62 	rsbeq	r6, r5, r2, ror #24
 af4:	6d745f5f 	ldclvs	15, cr5, [r4, #-380]!	; 0xfffffe84
 af8:	6473695f 	ldrbtvs	r6, [r3], #-2399	; 0xfffff6a1
 afc:	5f007473 	svcpl	0x00007473
 b00:	72736377 	rsbsvc	r6, r3, #-603979775	; 0xdc000001
 b04:	626d6f74 	rsbvs	r6, sp, #116, 30	; 0x1d0
 b08:	74735f73 	ldrbtvc	r5, [r3], #-3955	; 0xfffff08d
 b0c:	00657461 	rsbeq	r7, r5, r1, ror #8
 b10:	655f685f 	ldrbvs	r6, [pc, #-2143]	; 2b9 <_Minimum_Stack_Size+0x1b9>
 b14:	6f6e7272 	svcvs	0x006e7272
 b18:	745f5f00 	ldrbvc	r5, [pc], #-3840	; b20 <__Stack_Size+0x720>
 b1c:	6f6d5f6d 	svcvs	0x006d5f6d
 b20:	615f006e 	cmpvs	pc, lr, rrx
 b24:	69786574 	ldmdbvs	r8!, {r2, r4, r5, r6, r8, sl, sp, lr}^
 b28:	6d5f0074 	ldclvs	0, cr0, [pc, #-464]	; 960 <__Stack_Size+0x560>
 b2c:	61747362 	cmnvs	r4, r2, ror #6
 b30:	5f006574 	svcpl	0x00006574
 b34:	69676942 	stmdbvs	r7!, {r1, r6, r8, fp, sp, lr}^
 b38:	6200746e 	andvs	r7, r0, #1845493760	; 0x6e000000
 b3c:	69727453 	ldmdbvs	r2!, {r0, r1, r4, r6, sl, ip, sp, lr}^
 b40:	5f00676e 	svcpl	0x0000676e
 b44:	0066735f 	rsbeq	r7, r6, pc, asr r3
 b48:	6769735f 			; <UNDEFINED> instruction: 0x6769735f
 b4c:	645f006e 	ldrbvs	r0, [pc], #-110	; b54 <__Stack_Size+0x754>
 b50:	00617461 	rsbeq	r7, r1, r1, ror #8
 b54:	63775f5f 	cmnvs	r7, #380	; 0x17c
 b58:	5f006268 	svcpl	0x00006268
 b5c:	626f6c67 	rsbvs	r6, pc, #26368	; 0x6700
 b60:	695f6c61 	ldmdbvs	pc, {r0, r5, r6, sl, fp, sp, lr}^	; <UNPREDICTABLE>
 b64:	7275706d 	rsbsvc	r7, r5, #109	; 0x6d
 b68:	74705f65 	ldrbtvc	r5, [r0], #-3941	; 0xfffff09b
 b6c:	5f5f0072 	svcpl	0x005f0072
 b70:	795f6d74 	ldmdbvc	pc, {r2, r4, r5, r6, r8, sl, fp, sp, lr}^	; <UNPREDICTABLE>
 b74:	00726165 	rsbseq	r6, r2, r5, ror #2
 b78:	66666f5f 	uqsaxvs	r6, r6, pc	; <UNPREDICTABLE>
 b7c:	00746573 	rsbseq	r6, r4, r3, ror r5
 b80:	5f425355 	svcpl	0x00425355
 b84:	69727453 	ldmdbvs	r2!, {r0, r1, r4, r6, sl, ip, sp, lr}^
 b88:	6553676e 	ldrbvs	r6, [r3, #-1902]	; 0xfffff892
 b8c:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
 b90:	63736544 	cmnvs	r3, #68, 10	; 0x11000000
 b94:	74706972 	ldrbtvc	r6, [r0], #-2418	; 0xfffff68e
 b98:	5f00726f 	svcpl	0x0000726f
 b9c:	61636f6c 	cmnvs	r3, ip, ror #30
 ba0:	6d69746c 	cfstrdvs	mvd7, [r9, #-432]!	; 0xfffffe50
 ba4:	75625f65 	strbvc	r5, [r2, #-3941]!	; 0xfffff09b
 ba8:	53550066 	cmppl	r5, #102	; 0x66
 bac:	74535f42 	ldrbvc	r5, [r3], #-3906	; 0xfffff0be
 bb0:	676e6972 			; <UNDEFINED> instruction: 0x676e6972
 bb4:	676e614c 	strbvs	r6, [lr, -ip, asr #2]!
 bb8:	63736544 	cmnvs	r3, #68, 10	; 0x11000000
 bbc:	74706972 	ldrbtvc	r6, [r0], #-2418	; 0xfffff68e
 bc0:	5f00726f 	svcpl	0x0000726f
 bc4:	73756e75 	cmnvc	r5, #1872	; 0x750
 bc8:	5f006465 	svcpl	0x00006465
 bcc:	0077656e 	rsbseq	r6, r7, lr, ror #10
 bd0:	7476635f 	ldrbtvc	r6, [r6], #-863	; 0xfffffca1
 bd4:	006e656c 	rsbeq	r6, lr, ip, ror #10
 bd8:	78616d5f 	stmdavc	r1!, {r0, r1, r2, r3, r4, r6, r8, sl, fp, sp, lr}^
 bdc:	00736477 	rsbseq	r6, r3, r7, ror r4
 be0:	34366c5f 	ldrtcc	r6, [r6], #-3167	; 0xfffff3a1
 be4:	75625f61 	strbvc	r5, [r2, #-3937]!	; 0xfffff09f
 be8:	625f0066 	subsvs	r0, pc, #102	; 0x66
 bec:	69736b6c 	ldmdbvs	r3!, {r2, r3, r5, r6, r8, r9, fp, sp, lr}^
 bf0:	5f00657a 	svcpl	0x0000657a
 bf4:	006d745f 	rsbeq	r7, sp, pc, asr r4
 bf8:	636f6c5f 	cmnvs	pc, #24320	; 0x5f00
 bfc:	5355006b 	cmppl	r5, #107	; 0x6b
 c00:	65445f42 	strbvs	r5, [r4, #-3906]	; 0xfffff0be
 c04:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
 c08:	6c617551 	cfstr64vs	mvdx7, [r1], #-324	; 0xfffffebc
 c0c:	65696669 	strbvs	r6, [r9, #-1641]!	; 0xfffff997
 c10:	73654472 	cmnvc	r5, #1912602624	; 0x72000000
 c14:	70697263 	rsbvc	r7, r9, r3, ror #4
 c18:	00726f74 	rsbseq	r6, r2, r4, ror pc
 c1c:	6f696e5f 	svcvs	0x00696e5f
 c20:	5f007362 	svcpl	0x00007362
 c24:	5f6f7364 	svcpl	0x006f7364
 c28:	646e6168 	strbtvs	r6, [lr], #-360	; 0xfffffe98
 c2c:	5f00656c 	svcpl	0x0000656c
 c30:	62747663 	rsbsvs	r7, r4, #103809024	; 0x6300000
 c34:	5f006675 	svcpl	0x00006675
 c38:	64746567 	ldrbtvs	r6, [r4], #-1383	; 0xfffffa99
 c3c:	5f657461 	svcpl	0x00657461
 c40:	00727265 	rsbseq	r7, r2, r5, ror #4
 c44:	64726f77 	ldrbtvs	r6, [r2], #-3959	; 0xfffff089
 c48:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
 c4c:	42535500 	subsmi	r5, r3, #0, 10
 c50:	7665445f 			; <UNDEFINED> instruction: 0x7665445f
 c54:	44656369 	strbtmi	r6, [r5], #-873	; 0xfffffc97
 c58:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
 c5c:	6f747069 	svcvs	0x00747069
 c60:	615f0072 	cmpvs	pc, r2, ror r0	; <UNPREDICTABLE>
 c64:	64006464 	strvs	r6, [r0], #-1124	; 0xfffffb9c
 c68:	5f617461 	svcpl	0x00617461
 c6c:	635f6e69 	cmpvs	pc, #1680	; 0x690
 c70:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
 c74:	006b6361 	rsbeq	r6, fp, r1, ror #6
 c78:	73654462 	cmnvc	r5, #1644167168	; 0x62000000
 c7c:	70697263 	rsbvc	r7, r9, r3, ror #4
 c80:	54726f74 	ldrbtpl	r6, [r2], #-3956	; 0xfffff08c
 c84:	00657079 	rsbeq	r7, r5, r9, ror r0
 c88:	62735f5f 	rsbsvs	r5, r3, #380	; 0x17c
 c8c:	5f006675 	svcpl	0x00006675
 c90:	65756c67 	ldrbvs	r6, [r5, #-3175]!	; 0xfffff399
 c94:	735f5f00 	cmpvc	pc, #0, 30
 c98:	65756c67 	ldrbvs	r6, [r5, #-3175]!	; 0xfffff399
 c9c:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
 ca0:	6b6f7472 	blvs	1bdde70 <__Stack_Size+0x1bdda70>
 ca4:	73616c5f 	cmnvc	r1, #24320	; 0x5f00
 ca8:	6d5f0074 	ldclvs	0, cr0, [pc, #-464]	; ae0 <__Stack_Size+0x6e0>
 cac:	776f7462 	strbvc	r7, [pc, -r2, ror #8]!
 cb0:	74735f63 	ldrbtvc	r5, [r3], #-3939	; 0xfffff09d
 cb4:	00657461 	rsbeq	r7, r5, r1, ror #8
 cb8:	636f6c5f 	cmnvs	pc, #24320	; 0x5f00
 cbc:	00656c61 	rsbeq	r6, r5, r1, ror #24
 cc0:	616e665f 	cmnvs	lr, pc, asr r6
 cc4:	00736772 	rsbseq	r6, r3, r2, ror r7
 cc8:	6565725f 	strbvs	r7, [r5, #-607]!	; 0xfffffda1
 ccc:	5500746e 	strpl	r7, [r0, #-1134]	; 0xfffffb92
 cd0:	535f4253 	cmppl	pc, #805306373	; 0x30000005
 cd4:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
 cd8:	6f725067 	svcvs	0x00725067
 cdc:	73654464 	cmnvc	r5, #100, 8	; 0x64000000
 ce0:	70697263 	rsbvc	r7, r9, r3, ror #4
 ce4:	00726f74 	rsbseq	r6, r2, r4, ror pc
 ce8:	746e665f 	strbtvc	r6, [lr], #-1631	; 0xfffff9a1
 cec:	73657079 	cmnvc	r5, #121	; 0x79
 cf0:	666f5f00 	strbtvs	r5, [pc], -r0, lsl #30
 cf4:	00745f66 	rsbseq	r5, r4, r6, ror #30
 cf8:	75626e5f 	strbvc	r6, [r2, #-3679]!	; 0xfffff1a1
 cfc:	755f0066 	ldrbvc	r0, [pc, #-102]	; c9e <__Stack_Size+0x89e>
 d00:	6573756e 	ldrbvs	r7, [r3, #-1390]!	; 0xfffffa92
 d04:	61725f64 	cmnvs	r2, r4, ror #30
 d08:	6200646e 	andvs	r6, r0, #1845493760	; 0x6e000000
 d0c:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
 d10:	5f006874 	svcpl	0x00006874
 d14:	70736e75 	rsbsvc	r6, r3, r5, ror lr
 d18:	66696365 	strbtvs	r6, [r9], -r5, ror #6
 d1c:	5f646569 	svcpl	0x00646569
 d20:	61636f6c 	cmnvs	r3, ip, ror #30
 d24:	695f656c 	ldmdbvs	pc, {r2, r3, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
 d28:	006f666e 	rsbeq	r6, pc, lr, ror #12
 d2c:	616c665f 	cmnvs	ip, pc, asr r6
 d30:	00327367 	eorseq	r7, r2, r7, ror #6
 d34:	5f73695f 	svcpl	0x0073695f
 d38:	00617863 	rsbeq	r7, r1, r3, ror #16
 d3c:	6565735f 	strbvs	r7, [r5, #-863]!	; 0xfffffca1
 d40:	725f0064 	subsvc	r0, pc, #100	; 0x64
 d44:	5f646e61 	svcpl	0x00646e61
 d48:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
 d4c:	6c5f5f00 	mrrcvs	15, 0, r5, pc, cr0	; <UNPREDICTABLE>
 d50:	6c61636f 	stclvs	3, cr6, [r1], #-444	; 0xfffffe44
 d54:	00745f65 	rsbseq	r5, r4, r5, ror #30
 d58:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
 d5c:	00727265 	rsbseq	r7, r2, r5, ror #4
 d60:	616d6e5f 	cmnvs	sp, pc, asr lr
 d64:	636f6c6c 	cmnvs	pc, #108, 24	; 0x6c00
 d68:	6e697700 	cdpvs	7, 6, cr7, cr9, cr0, {0}
 d6c:	00745f74 	rsbseq	r5, r4, r4, ror pc
 d70:	706f7473 	rsbvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
 d74:	73746962 	cmnvc	r4, #1605632	; 0x188000
	...

Disassembly of section .debug_loc:

00000000 <.debug_loc>:
       0:	080009f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, fp}
       4:	080009f6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, r8, fp}
       8:	007d0002 	rsbseq	r0, sp, r2
       c:	080009f6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, r8, fp}
      10:	08000a14 	stmdaeq	r0, {r2, r4, r9, fp}
      14:	087d0002 	ldmdaeq	sp!, {r1}^
	...
      20:	00020200 	andeq	r0, r2, r0, lsl #4
      24:	01d00000 	bicseq	r0, r0, r0
      28:	01d00800 	bicseq	r0, r0, r0, lsl #16
      2c:	00010800 	andeq	r0, r1, r0, lsl #16
      30:	0001d050 	andeq	sp, r1, r0, asr r0
      34:	0001d408 	andeq	sp, r1, r8, lsl #8
      38:	50000108 	andpl	r0, r0, r8, lsl #2
      3c:	080001d4 	stmdaeq	r0, {r2, r4, r6, r7, r8}
      40:	080001dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8}
      44:	01700003 	cmneq	r0, r3
      48:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
      4c:	00000000 	andeq	r0, r0, r0
      50:	00000100 	andeq	r0, r0, r0, lsl #2
      54:	00000000 	andeq	r0, r0, r0
      58:	3a000000 	bcc	60 <_Minimum_Stack_Size-0xa0>
      5c:	3e080001 	cdpcc	0, 0, cr0, cr8, cr1, {0}
      60:	02080001 	andeq	r0, r8, #1
      64:	3e9f3000 	cdpcc	0, 9, cr3, cr15, cr0, {0}
      68:	44080001 	strmi	r0, [r8], #-1
      6c:	07080001 	streq	r0, [r8, -r1]
      70:	0fff0a00 	svceq	0x00ff0a00
      74:	9f1c0072 	svcls	0x001c0072
      78:	08000144 	stmdaeq	r0, {r2, r6, r8}
      7c:	08000146 	stmdaeq	r0, {r1, r2, r6, r8}
      80:	000a0007 	andeq	r0, sl, r7
      84:	1c007210 	sfmne	f7, 4, [r0], {16}
      88:	0001469f 	muleq	r1, pc, r6	; <UNPREDICTABLE>
      8c:	00014c08 	andeq	r4, r1, r8, lsl #24
      90:	0a000708 	beq	1cb8 <__Stack_Size+0x18b8>
      94:	00720fff 	ldrshteq	r0, [r2], #-255	; 0xffffff01
      98:	014c9f1c 	cmpeq	ip, ip, lsl pc
      9c:	01cc0800 	biceq	r0, ip, r0, lsl #16
      a0:	00040800 	andeq	r0, r4, r0, lsl #16
      a4:	9f1fff0a 	svcls	0x001fff0a
	...
      b0:	01000000 	mrseq	r0, (UNDEF: 0)
      b4:	00000001 	andeq	r0, r0, r1
      b8:	00000000 	andeq	r0, r0, r0
      bc:	00000001 	andeq	r0, r0, r1
      c0:	00000000 	andeq	r0, r0, r0
      c4:	0800014c 	stmdaeq	r0, {r2, r3, r6, r8}
      c8:	08000150 	stmdaeq	r0, {r4, r6, r8}
      cc:	ff0a0007 			; <UNDEFINED> instruction: 0xff0a0007
      d0:	1c00720f 	sfmne	f7, 4, [r0], {15}
      d4:	0001509f 	muleq	r1, pc, r0	; <UNPREDICTABLE>
      d8:	00015c08 	andeq	r5, r1, r8, lsl #24
      dc:	0a000408 	beq	1104 <__Stack_Size+0xd04>
      e0:	5c9f1fff 	ldcpl	15, cr1, [pc], {255}	; 0xff
      e4:	60080001 	andvs	r0, r8, r1
      e8:	02080001 	andeq	r0, r8, #1
      ec:	609f3000 	addsvs	r3, pc, r0
      f0:	6a080001 	bvs	2000fc <__Stack_Size+0x1ffcfc>
      f4:	07080001 	streq	r0, [r8, -r1]
      f8:	0fff0a00 	svceq	0x00ff0a00
      fc:	9f1c0072 	svcls	0x001c0072
     100:	0800016a 	stmdaeq	r0, {r1, r3, r5, r6, r8}
     104:	0800016c 	stmdaeq	r0, {r2, r3, r5, r6, r8}
     108:	000a0007 	andeq	r0, sl, r7
     10c:	1c007210 	sfmne	f7, 4, [r0], {16}
     110:	00016c9f 	muleq	r1, pc, ip	; <UNPREDICTABLE>
     114:	00017208 	andeq	r7, r1, r8, lsl #4
     118:	0a000708 	beq	1d40 <__Stack_Size+0x1940>
     11c:	00720fff 	ldrshteq	r0, [r2], #-255	; 0xffffff01
     120:	01ac9f1c 			; <UNDEFINED> instruction: 0x01ac9f1c
     124:	01b00800 	lslseq	r0, r0, #16
     128:	00020800 	andeq	r0, r2, r0, lsl #16
     12c:	01b09f30 	lsrseq	r9, r0, pc
     130:	01b60800 			; <UNDEFINED> instruction: 0x01b60800
     134:	00070800 	andeq	r0, r7, r0, lsl #16
     138:	720fff0a 	andvc	pc, pc, #10, 30	; 0x28
     13c:	b69f1c00 	ldrlt	r1, [pc], r0, lsl #24
     140:	b8080001 	stmdalt	r8, {r0}
     144:	07080001 	streq	r0, [r8, -r1]
     148:	10000a00 	andne	r0, r0, r0, lsl #20
     14c:	9f1c0072 	svcls	0x001c0072
     150:	080001b8 	stmdaeq	r0, {r3, r4, r5, r7, r8}
     154:	080001cc 	stmdaeq	r0, {r2, r3, r6, r7, r8}
     158:	ff0a0007 			; <UNDEFINED> instruction: 0xff0a0007
     15c:	1c00720f 	sfmne	f7, 4, [r0], {15}
     160:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     170:	02020101 	andeq	r0, r2, #1073741824	; 0x40000000
     174:	05050303 	streq	r0, [r5, #-771]	; 0xfffffcfd
	...
     180:	00014c00 	andeq	r4, r1, r0, lsl #24
     184:	00015008 	andeq	r5, r1, r8
     188:	73000208 	movwvc	r0, #520	; 0x208
     18c:	00015204 	andeq	r5, r1, r4, lsl #4
     190:	00016008 	andeq	r6, r1, r8
     194:	52000108 	andpl	r0, r0, #8, 2
     198:	08000160 	stmdaeq	r0, {r5, r6, r8}
     19c:	08000172 	stmdaeq	r0, {r1, r4, r5, r6, r8}
     1a0:	04730002 	ldrbteq	r0, [r3], #-2
     1a4:	08000196 	stmdaeq	r0, {r1, r2, r4, r7, r8}
     1a8:	08000196 	stmdaeq	r0, {r1, r2, r4, r7, r8}
     1ac:	96510001 	ldrbls	r0, [r1], -r1
     1b0:	96080001 	strls	r0, [r8], -r1
     1b4:	09080001 	stmdbeq	r8, {r0}
     1b8:	11007100 	mrsne	r7, (UNDEF: 16)
     1bc:	7e8bffff 	mcrvc	15, 4, pc, cr11, cr15, {7}	; <UNPREDICTABLE>
     1c0:	01969f1a 	orrseq	r9, r6, sl, lsl pc
     1c4:	01960800 	orrseq	r0, r6, r0, lsl #16
     1c8:	000d0800 	andeq	r0, sp, r0, lsl #16
     1cc:	ff110071 			; <UNDEFINED> instruction: 0xff110071
     1d0:	1a7e8bff 	bne	1fa31d4 <__Stack_Size+0x1fa2dd4>
     1d4:	2124404d 			; <UNDEFINED> instruction: 0x2124404d
     1d8:	0001969f 	muleq	r1, pc, r6	; <UNPREDICTABLE>
     1dc:	00019608 	andeq	r9, r1, r8, lsl #12
     1e0:	71000d08 	tstvc	r0, r8, lsl #26
     1e4:	fe8f1100 	cdp2	1, 8, cr1, cr15, cr0, {0}
     1e8:	4d1a7e8b 	ldcmi	14, cr7, [sl, #-556]	; 0xfffffdd4
     1ec:	9f212440 	svcls	0x00212440
     1f0:	08000196 	stmdaeq	r0, {r1, r2, r4, r7, r8}
     1f4:	0800019a 	stmdaeq	r0, {r1, r3, r4, r7, r8}
     1f8:	0071000d 	rsbseq	r0, r1, sp
     1fc:	8b8e8f11 	blhi	fe3a3e48 <BootRAM+0xd3145e9>
     200:	404d1a7e 	submi	r1, sp, lr, ror sl
     204:	9a9f2124 	bls	fe7c869c <BootRAM+0xd738e3d>
     208:	9e080001 	cdpls	0, 0, cr0, cr8, cr1, {0}
     20c:	07080001 	streq	r0, [r8, -r1]
     210:	4d007200 	sfmmi	f7, 4, [r0, #-0]
     214:	9f212440 	svcls	0x00212440
     218:	0800019e 	stmdaeq	r0, {r1, r2, r3, r4, r7, r8}
     21c:	080001a6 	stmdaeq	r0, {r1, r2, r5, r7, r8}
     220:	a6520001 	ldrbge	r0, [r2], -r1
     224:	ac080001 	stcge	0, cr0, [r8], {1}
     228:	02080001 	andeq	r0, r8, #1
     22c:	ac047300 	stcge	3, cr7, [r4], {-0}
     230:	b0080001 	andlt	r0, r8, r1
     234:	0f080001 	svceq	0x00080001
     238:	11007100 	mrsne	r7, (UNDEF: 16)
     23c:	7e8b808f 	cdpvc	0, 8, cr8, cr11, cr15, {4}
     240:	04000c1a 	streq	r0, [r0], #-3098	; 0xfffff3e6
     244:	9f21001d 	svcls	0x0021001d
	...
     250:	00000478 	andeq	r0, r0, r8, ror r4
     254:	0000047a 	andeq	r0, r0, sl, ror r4
     258:	007d0002 	rsbseq	r0, sp, r2
     25c:	0000047a 	andeq	r0, r0, sl, ror r4
     260:	000004d2 	ldrdeq	r0, [r0], -r2
     264:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
	...
     274:	00000478 	andeq	r0, r0, r8, ror r4
     278:	00000488 	andeq	r0, r0, r8, lsl #9
     27c:	88500001 	ldmdahi	r0, {r0}^
     280:	d2000004 	andle	r0, r0, #4
     284:	04000004 	streq	r0, [r0], #-4
     288:	5001f300 	andpl	pc, r1, r0, lsl #6
     28c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     298:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
     29c:	a0000004 	andge	r0, r0, r4
     2a0:	01000004 	tsteq	r0, r4
     2a4:	04a05100 	strteq	r5, [r0], #256	; 0x100
     2a8:	04a40000 	strteq	r0, [r4], #0
     2ac:	00030000 	andeq	r0, r3, r0
     2b0:	a49f0271 	ldrge	r0, [pc], #625	; 2b8 <_Minimum_Stack_Size+0x1b8>
     2b4:	d2000004 	andle	r0, r0, #4
     2b8:	04000004 	streq	r0, [r0], #-4
     2bc:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
     2c0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     2cc:	00048400 	andeq	r8, r4, r0, lsl #8
     2d0:	00049000 	andeq	r9, r4, r0
     2d4:	52000100 	andpl	r0, r0, #0, 2
     2d8:	00000490 	muleq	r0, r0, r4
     2dc:	000004b2 			; <UNDEFINED> instruction: 0x000004b2
     2e0:	0073000b 	rsbseq	r0, r3, fp
     2e4:	80232433 	eorhi	r2, r3, r3, lsr r4
     2e8:	048081c0 	streq	r8, [r0], #448	; 0x1c0
     2ec:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     2f0:	00000000 	andeq	r0, r0, r0
     2f4:	8c000000 	stchi	0, cr0, [r0], {-0}
     2f8:	d2000004 	andle	r0, r0, #4
     2fc:	01000004 	tsteq	r0, r4
     300:	00005000 	andeq	r5, r0, r0
     304:	00000000 	andeq	r0, r0, r0
     308:	00010000 	andeq	r0, r1, r0
     30c:	01000000 	mrseq	r0, (UNDEF: 0)
     310:	0000048e 	andeq	r0, r0, lr, lsl #9
     314:	0000049e 	muleq	r0, lr, r4
     318:	01700005 	cmneq	r0, r5
     31c:	9e9f2631 	mrcls	6, 4, r2, cr15, cr1, {1}
     320:	a4000004 	strge	r0, [r0], #-4
     324:	01000004 	tsteq	r0, r4
     328:	04a45400 	strteq	r5, [r4], #1024	; 0x400
     32c:	04d00000 	ldrbeq	r0, [r0], #0
     330:	00050000 	andeq	r0, r5, r0
     334:	26310170 			; <UNDEFINED> instruction: 0x26310170
     338:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     344:	9c000000 	stcls	0, cr0, [r0], {-0}
     348:	a8000004 	stmdage	r0, {r2}
     34c:	01000004 	tsteq	r0, r4
     350:	04a85200 	strteq	r5, [r8], #512	; 0x200
     354:	04ae0000 	strteq	r0, [lr], #0
     358:	00030000 	andeq	r0, r3, r0
     35c:	ae9f7c72 	mrcge	12, 4, r7, cr15, cr2, {3}
     360:	be000004 	cdplt	0, 0, cr0, cr0, cr4, {0}
     364:	01000004 	tsteq	r0, r4
     368:	00005200 	andeq	r5, r0, r0, lsl #4
     36c:	00000000 	andeq	r0, r0, r0
     370:	00020000 	andeq	r0, r2, r0
     374:	0000049c 	muleq	r0, ip, r4
     378:	000004a4 	andeq	r0, r0, r4, lsr #9
     37c:	9f300002 	svcls	0x00300002
	...
     388:	000003c8 	andeq	r0, r0, r8, asr #7
     38c:	000003ca 	andeq	r0, r0, sl, asr #7
     390:	007d0002 	rsbseq	r0, sp, r2
     394:	000003ca 	andeq	r0, r0, sl, asr #7
     398:	0000041c 	andeq	r0, r0, ip, lsl r4
     39c:	147d0002 	ldrbtne	r0, [sp], #-2
	...
     3ac:	03c80000 	biceq	r0, r8, #0
     3b0:	03ee0000 	mvneq	r0, #0
     3b4:	00010000 	andeq	r0, r1, r0
     3b8:	0003ee50 	andeq	lr, r3, r0, asr lr
     3bc:	00041000 	andeq	r1, r4, r0
     3c0:	f3000400 	vshl.u8	d0, d0, d0
     3c4:	109f5001 	addsne	r5, pc, r1
     3c8:	1c000004 	stcne	0, cr0, [r0], {4}
     3cc:	01000004 	tsteq	r0, r4
     3d0:	00005000 	andeq	r5, r0, r0
	...
     3dc:	000003d6 	ldrdeq	r0, [r0], -r6
     3e0:	0000041c 	andeq	r0, r0, ip, lsl r4
     3e4:	00540001 	subseq	r0, r4, r1
	...
     3f0:	0003e400 	andeq	lr, r3, r0, lsl #8
     3f4:	00041c00 	andeq	r1, r4, r0, lsl #24
     3f8:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
     404:	03e40001 	mvneq	r0, #1
     408:	041c0000 	ldreq	r0, [ip], #-0
     40c:	00010000 	andeq	r0, r1, r0
     410:	00000051 	andeq	r0, r0, r1, asr r0
     414:	00000000 	andeq	r0, r0, r0
     418:	02020000 	andeq	r0, r2, #0
     41c:	e6000000 	str	r0, [r0], -r0
     420:	e6000003 	str	r0, [r0], -r3
     424:	01000003 	tsteq	r0, r3
     428:	03e65300 	mvneq	r5, #0, 6
     42c:	03fc0000 	mvnseq	r0, #0
     430:	00080000 	andeq	r0, r8, r0
     434:	24320075 	ldrtcs	r0, [r2], #-117	; 0xffffff8b
     438:	9f220073 	svcls	0x00220073
     43c:	00000410 	andeq	r0, r0, r0, lsl r4
     440:	00000418 	andeq	r0, r0, r8, lsl r4
     444:	00750008 	rsbseq	r0, r5, r8
     448:	00732432 	rsbseq	r2, r3, r2, lsr r4
     44c:	00009f22 	andeq	r9, r0, r2, lsr #30
     450:	00000000 	andeq	r0, r0, r0
     454:	00020000 	andeq	r0, r2, r0
     458:	03e60000 	mvneq	r0, #0
     45c:	04180000 	ldreq	r0, [r8], #-0
     460:	00010000 	andeq	r0, r1, r0
     464:	00041855 	andeq	r1, r4, r5, asr r8
     468:	00041a00 	andeq	r1, r4, r0, lsl #20
     46c:	75000300 	strvc	r0, [r0, #-768]	; 0xfffffd00
     470:	00009f01 	andeq	r9, r0, r1, lsl #30
     474:	00000000 	andeq	r0, r0, r0
     478:	02a00000 	adceq	r0, r0, #0
     47c:	02a20000 	adceq	r0, r2, #0
     480:	00020000 	andeq	r0, r2, r0
     484:	02a2007d 	adceq	r0, r2, #125	; 0x7d
     488:	03c80000 	biceq	r0, r8, #0
     48c:	00020000 	andeq	r0, r2, r0
     490:	0000107d 	andeq	r1, r0, sp, ror r0
     494:	00000000 	andeq	r0, r0, r0
     498:	00020000 	andeq	r0, r2, r0
     49c:	02c80000 	sbceq	r0, r8, #0
     4a0:	02cc0000 	sbceq	r0, ip, #0
     4a4:	00020000 	andeq	r0, r2, r0
     4a8:	02cc9f30 	sbceq	r9, ip, #48, 30	; 0xc0
     4ac:	02ce0000 	sbceq	r0, lr, #0
     4b0:	00050000 	andeq	r0, r5, r0
     4b4:	1c007438 	cfstrsne	mvf7, [r0], {56}	; 0x38
     4b8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     4bc:	00000000 	andeq	r0, r0, r0
     4c0:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
     4c4:	64000003 	strvs	r0, [r0], #-3
     4c8:	01000003 	tsteq	r0, r3
     4cc:	00005500 	andeq	r5, r0, r0, lsl #10
     4d0:	00000000 	andeq	r0, r0, r0
     4d4:	01640000 	cmneq	r4, r0
     4d8:	01660000 	cmneq	r6, r0
     4dc:	00020000 	andeq	r0, r2, r0
     4e0:	0166007d 	smceq	24589	; 0x600d
     4e4:	02a00000 	adceq	r0, r0, #0
     4e8:	00020000 	andeq	r0, r2, r0
     4ec:	0000147d 	andeq	r1, r0, sp, ror r4
	...
     4f8:	01640000 	cmneq	r4, r0
     4fc:	016e0000 	cmneq	lr, r0
     500:	00010000 	andeq	r0, r1, r0
     504:	00016e50 	andeq	r6, r1, r0, asr lr
     508:	0002a000 	andeq	sl, r2, r0
     50c:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
     528:	00000164 	andeq	r0, r0, r4, ror #2
     52c:	000001b8 			; <UNDEFINED> instruction: 0x000001b8
     530:	b8510001 	ldmdalt	r1, {r0}^
     534:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
     538:	04000002 	streq	r0, [r0], #-2
     53c:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
     540:	00020e9f 	muleq	r2, pc, lr	; <UNPREDICTABLE>
     544:	00021200 	andeq	r1, r2, r0, lsl #4
     548:	51000100 	mrspl	r0, (UNDEF: 16)
     54c:	00000212 	andeq	r0, r0, r2, lsl r2
     550:	00000214 	andeq	r0, r0, r4, lsl r2
     554:	01f30004 	mvnseq	r0, r4
     558:	02149f51 	andseq	r9, r4, #324	; 0x144
     55c:	02180000 	andseq	r0, r8, #0
     560:	00010000 	andeq	r0, r1, r0
     564:	00021851 	andeq	r1, r2, r1, asr r8
     568:	00021a00 	andeq	r1, r2, r0, lsl #20
     56c:	f3000400 	vshl.u8	d0, d0, d0
     570:	1a9f5101 	bne	fe7d497c <BootRAM+0xd74511d>
     574:	1e000002 	cdpne	0, 0, cr0, cr0, cr2, {0}
     578:	01000002 	tsteq	r0, r2
     57c:	021e5100 	andseq	r5, lr, #0, 2
     580:	02a00000 	adceq	r0, r0, #0
     584:	00040000 	andeq	r0, r4, r0
     588:	9f5101f3 	svcls	0x005101f3
	...
     598:	01640000 	cmneq	r4, r0
     59c:	02000000 	andeq	r0, r0, #0
     5a0:	00010000 	andeq	r0, r1, r0
     5a4:	00020052 	andeq	r0, r2, r2, asr r0
     5a8:	00020e00 	andeq	r0, r2, r0, lsl #28
     5ac:	f3000400 	vshl.u8	d0, d0, d0
     5b0:	0e9f5201 	cdpeq	2, 9, cr5, cr15, cr1, {0}
     5b4:	a0000002 	andge	r0, r0, r2
     5b8:	01000002 	tsteq	r0, r2
     5bc:	00005200 	andeq	r5, r0, r0, lsl #4
     5c0:	00000000 	andeq	r0, r0, r0
     5c4:	00020000 	andeq	r0, r2, r0
     5c8:	00000000 	andeq	r0, r0, r0
     5cc:	01640000 	cmneq	r4, r0
     5d0:	01da0000 	bicseq	r0, sl, r0
     5d4:	00060000 	andeq	r0, r6, r0
     5d8:	80090070 	andhi	r0, r9, r0, ror r0
     5dc:	01da9f1a 	bicseq	r9, sl, sl, lsl pc
     5e0:	020e0000 	andeq	r0, lr, #0
     5e4:	00070000 	andeq	r0, r7, r0
     5e8:	095001f3 	ldmdbeq	r0, {r0, r1, r4, r5, r6, r7, r8}^
     5ec:	0e9f1a80 	vfnmseq.f32	s2, s31, s0
     5f0:	20000002 	andcs	r0, r0, r2
     5f4:	06000002 	streq	r0, [r0], -r2
     5f8:	09007000 	stmdbeq	r0, {ip, sp, lr}
     5fc:	209f1a80 	addscs	r1, pc, r0, lsl #21
     600:	a0000002 	andge	r0, r0, r2
     604:	07000002 	streq	r0, [r0, -r2]
     608:	5001f300 	andpl	pc, r1, r0, lsl #6
     60c:	9f1a8009 	svcls	0x001a8009
	...
     618:	02010100 	andeq	r0, r1, #0, 2
     61c:	00000002 	andeq	r0, r0, r2
	...
     628:	01a40000 			; <UNDEFINED> instruction: 0x01a40000
     62c:	01a40000 			; <UNDEFINED> instruction: 0x01a40000
     630:	00010000 	andeq	r0, r1, r0
     634:	0001a454 	andeq	sl, r1, r4, asr r4
     638:	0001a400 	andeq	sl, r1, r0, lsl #8
     63c:	74000b00 	strvc	r0, [r0], #-2816	; 0xfffff500
     640:	0f0f0a00 	svceq	0x000f0a00
     644:	80800b1a 	addhi	r0, r0, sl, lsl fp
     648:	01a49f21 			; <UNDEFINED> instruction: 0x01a49f21
     64c:	01a80000 			; <UNDEFINED> instruction: 0x01a80000
     650:	00110000 	andseq	r0, r1, r0
     654:	000a0074 	andeq	r0, sl, r4, ror r0
     658:	00761a0f 	rsbseq	r1, r6, pc, lsl #20
     65c:	211aff08 	tstcs	sl, r8, lsl #30	; <UNPREDICTABLE>
     660:	2180800b 	orrcs	r8, r0, fp
     664:	0001ac9f 	muleq	r1, pc, ip	; <UNPREDICTABLE>
     668:	0001c000 	andeq	ip, r1, r0
     66c:	74000700 	strvc	r0, [r0], #-1792	; 0xfffff900
     670:	80800b00 	addhi	r0, r0, r0, lsl #22
     674:	01c09f21 	biceq	r9, r0, r1, lsr #30
     678:	01c80000 	biceq	r0, r8, r0
     67c:	00010000 	andeq	r0, r1, r0
     680:	0001c851 	andeq	ip, r1, r1, asr r8
     684:	0001e200 	andeq	lr, r1, r0, lsl #4
     688:	75000200 	strvc	r0, [r0, #-512]	; 0xfffffe00
     68c:	0001ee00 	andeq	lr, r1, r0, lsl #28
     690:	0001f200 	andeq	pc, r1, r0, lsl #4
     694:	51000100 	mrspl	r0, (UNDEF: 16)
     698:	0000020e 	andeq	r0, r0, lr, lsl #4
     69c:	00000220 	andeq	r0, r0, r0, lsr #4
     6a0:	00740007 	rsbseq	r0, r4, r7
     6a4:	2180800b 	orrcs	r8, r0, fp
     6a8:	0002209f 	muleq	r2, pc, r0	; <UNPREDICTABLE>
     6ac:	00022200 	andeq	r2, r2, r0, lsl #4
     6b0:	75000200 	strvc	r0, [r0, #-512]	; 0xfffffe00
	...
     6bc:	00007800 	andeq	r7, r0, r0, lsl #16
     6c0:	00007a00 	andeq	r7, r0, r0, lsl #20
     6c4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     6c8:	00007a00 	andeq	r7, r0, r0, lsl #20
     6cc:	00016400 	andeq	r6, r1, r0, lsl #8
     6d0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     6d4:	00000014 	andeq	r0, r0, r4, lsl r0
	...
     6e0:	00007800 	andeq	r7, r0, r0, lsl #16
     6e4:	00007e00 	andeq	r7, r0, r0, lsl #28
     6e8:	50000100 	andpl	r0, r0, r0, lsl #2
     6ec:	0000007e 	andeq	r0, r0, lr, ror r0
     6f0:	00000164 	andeq	r0, r0, r4, ror #2
     6f4:	00560001 	subseq	r0, r6, r1
	...
     70c:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
     710:	c4000000 	strgt	r0, [r0], #-0
     714:	01000000 	mrseq	r0, (UNDEF: 0)
     718:	00c45100 	sbceq	r5, r4, r0, lsl #2
     71c:	00c60000 	sbceq	r0, r6, r0
     720:	00040000 	andeq	r0, r4, r0
     724:	9f5101f3 	svcls	0x005101f3
     728:	000000c6 	andeq	r0, r0, r6, asr #1
     72c:	000000ca 	andeq	r0, r0, sl, asr #1
     730:	ca510001 	bgt	144073c <__Stack_Size+0x144033c>
     734:	06000000 	streq	r0, [r0], -r0
     738:	04000001 	streq	r0, [r0], #-1
     73c:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
     740:	0001069f 	muleq	r1, pc, r6	; <UNPREDICTABLE>
     744:	00010a00 	andeq	r0, r1, r0, lsl #20
     748:	51000100 	mrspl	r0, (UNDEF: 16)
     74c:	0000010a 	andeq	r0, r0, sl, lsl #2
     750:	0000010c 	andeq	r0, r0, ip, lsl #2
     754:	01f30004 	mvnseq	r0, r4
     758:	010c9f51 	tsteq	ip, r1, asr pc
     75c:	01100000 	tsteq	r0, r0
     760:	00010000 	andeq	r0, r1, r0
     764:	00011051 	andeq	r1, r1, r1, asr r0
     768:	00016400 	andeq	r6, r1, r0, lsl #8
     76c:	f3000400 	vshl.u8	d0, d0, d0
     770:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
     780:	00007800 	andeq	r7, r0, r0, lsl #16
     784:	00010000 	andeq	r0, r1, r0
     788:	52000100 	andpl	r0, r0, #0, 2
     78c:	00000100 	andeq	r0, r0, r0, lsl #2
     790:	00000102 	andeq	r0, r0, r2, lsl #2
     794:	01f30004 	mvnseq	r0, r4
     798:	01069f52 	tsteq	r6, r2, asr pc
     79c:	01640000 	cmneq	r4, r0
     7a0:	00010000 	andeq	r0, r1, r0
     7a4:	00000052 	andeq	r0, r0, r2, asr r0
	...
     7b4:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
     7b8:	ee000000 	cdp	0, 0, cr0, cr0, cr0, {0}
     7bc:	01000000 	mrseq	r0, (UNDEF: 0)
     7c0:	00ee5300 	rsceq	r5, lr, r0, lsl #6
     7c4:	00fe0000 	rscseq	r0, lr, r0
     7c8:	00070000 	andeq	r0, r7, r0
     7cc:	24320076 	ldrtcs	r0, [r2], #-118	; 0xffffff8a
     7d0:	fe220071 	mcr2	0, 1, r0, cr2, cr1, {3}
     7d4:	06000000 	streq	r0, [r0], -r0
     7d8:	04000001 	streq	r0, [r0], #-1
     7dc:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
     7e0:	0001069f 	muleq	r1, pc, r6	; <UNPREDICTABLE>
     7e4:	00014600 	andeq	r4, r1, r0, lsl #12
     7e8:	53000100 	movwpl	r0, #256	; 0x100
     7ec:	00000146 	andeq	r0, r0, r6, asr #2
     7f0:	00000164 	andeq	r0, r0, r4, ror #2
     7f4:	00760007 	rsbseq	r0, r6, r7
     7f8:	00712432 	rsbseq	r2, r1, r2, lsr r4
     7fc:	00000022 	andeq	r0, r0, r2, lsr #32
     800:	00000000 	andeq	r0, r0, r0
     804:	00000200 	andeq	r0, r0, r0, lsl #4
     808:	00007800 	andeq	r7, r0, r0, lsl #16
     80c:	0000e200 	andeq	lr, r0, r0, lsl #4
     810:	70000600 	andvc	r0, r0, r0, lsl #12
     814:	1a800900 	bne	fe002c1c <BootRAM+0xcf733bd>
     818:	0000e29f 	muleq	r0, pc, r2	; <UNPREDICTABLE>
     81c:	00016400 	andeq	r6, r1, r0, lsl #8
     820:	f3000700 	vabd.u8	d0, d0, d0
     824:	80095001 	andhi	r5, r9, r1
     828:	00009f1a 	andeq	r9, r0, sl, lsl pc
     82c:	00000000 	andeq	r0, r0, r0
     830:	01000000 	mrseq	r0, (UNDEF: 0)
     834:	00020201 	andeq	r0, r2, r1, lsl #4
     838:	00000000 	andeq	r0, r0, r0
     83c:	000000ae 	andeq	r0, r0, lr, lsr #1
     840:	000000ae 	andeq	r0, r0, lr, lsr #1
     844:	ae540001 	cdpge	0, 5, cr0, cr4, cr1, {0}
     848:	ae000000 	cdpge	0, 0, cr0, cr0, cr0, {0}
     84c:	0b000000 	bleq	854 <__Stack_Size+0x454>
     850:	0a007400 	beq	1d858 <__Stack_Size+0x1d458>
     854:	0b1a0f0f 	bleq	684498 <__Stack_Size+0x684098>
     858:	9f218080 	svcls	0x00218080
     85c:	000000ae 	andeq	r0, r0, lr, lsr #1
     860:	000000b4 	strheq	r0, [r0], -r4
     864:	00740011 	rsbseq	r0, r4, r1, lsl r0
     868:	1a0f000a 	bne	3c0898 <__Stack_Size+0x3c0498>
     86c:	ff080076 			; <UNDEFINED> instruction: 0xff080076
     870:	800b211a 	andhi	r2, fp, sl, lsl r1
     874:	b89f2180 	ldmlt	pc, {r7, r8, sp}	; <UNPREDICTABLE>
     878:	ce000000 	cdpgt	0, 0, cr0, cr0, cr0, {0}
     87c:	07000000 	streq	r0, [r0, -r0]
     880:	0b007400 	bleq	1d888 <__Stack_Size+0x1d488>
     884:	9f218080 	svcls	0x00218080
     888:	00000106 	andeq	r0, r0, r6, lsl #2
     88c:	00000112 	andeq	r0, r0, r2, lsl r1
     890:	00740007 	rsbseq	r0, r4, r7
     894:	2180800b 	orrcs	r8, r0, fp
     898:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     89c:	00000000 	andeq	r0, r0, r0
     8a0:	0004d200 	andeq	sp, r4, r0, lsl #4
     8a4:	0004d400 	andeq	sp, r4, r0, lsl #8
     8a8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     8ac:	0004d400 	andeq	sp, r4, r0, lsl #8
     8b0:	00056000 	andeq	r6, r5, r0
     8b4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     8b8:	00056018 	andeq	r6, r5, r8, lsl r0
     8bc:	00056200 	andeq	r6, r5, r0, lsl #4
     8c0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     8c4:	00056210 	andeq	r6, r5, r0, lsl r2
     8c8:	0005ec00 	andeq	lr, r5, r0, lsl #24
     8cc:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     8d0:	00000018 	andeq	r0, r0, r8, lsl r0
	...
     8e0:	0004d200 	andeq	sp, r4, r0, lsl #4
     8e4:	0004f800 	andeq	pc, r4, r0, lsl #16
     8e8:	50000100 	andpl	r0, r0, r0, lsl #2
     8ec:	000004f8 	strdeq	r0, [r0], -r8
     8f0:	00000522 	andeq	r0, r0, r2, lsr #10
     8f4:	01f30004 	mvnseq	r0, r4
     8f8:	05229f50 	streq	r9, [r2, #-3920]!	; 0xfffff0b0
     8fc:	052c0000 	streq	r0, [ip, #-0]!
     900:	00010000 	andeq	r0, r1, r0
     904:	00052c50 	andeq	r2, r5, r0, asr ip
     908:	0005ec00 	andeq	lr, r5, r0, lsl #24
     90c:	f3000400 	vshl.u8	d0, d0, d0
     910:	009f5001 	addseq	r5, pc, r1
     914:	00000000 	andeq	r0, r0, r0
     918:	01000000 	mrseq	r0, (UNDEF: 0)
     91c:	00000000 	andeq	r0, r0, r0
     920:	fe000003 	cdp2	0, 0, cr0, cr0, cr3, {0}
     924:	1c000004 	stcne	0, cr0, [r0], {4}
     928:	01000005 	tsteq	r0, r5
     92c:	052c5500 	streq	r5, [ip, #-1280]!	; 0xfffffb00
     930:	055e0000 	ldrbeq	r0, [lr, #-0]
     934:	00010000 	andeq	r0, r1, r0
     938:	00056255 	andeq	r6, r5, r5, asr r2
     93c:	00058e00 	andeq	r8, r5, r0, lsl #28
     940:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
     944:	00000596 	muleq	r0, r6, r5
     948:	000005c6 	andeq	r0, r0, r6, asr #11
     94c:	00550001 	subseq	r0, r5, r1
     950:	00000000 	andeq	r0, r0, r0
     954:	01000000 	mrseq	r0, (UNDEF: 0)
     958:	0004e400 	andeq	lr, r4, r0, lsl #8
     95c:	0004ee00 	andeq	lr, r4, r0, lsl #28
     960:	73000b00 	movwvc	r0, #2816	; 0xb00
     964:	08000a00 	stmdaeq	r0, {r9, fp}
     968:	3024401a 	eorcc	r4, r4, sl, lsl r0
     96c:	00009f2e 	andeq	r9, r0, lr, lsr #30
	...
     97c:	03000000 	movweq	r0, #0
     980:	05040000 	streq	r0, [r4, #-0]
     984:	051c0000 	ldreq	r0, [ip, #-0]
     988:	00010000 	andeq	r0, r1, r0
     98c:	00052c53 	andeq	r2, r5, r3, asr ip
     990:	00053f00 	andeq	r3, r5, r0, lsl #30
     994:	53000100 	movwpl	r0, #256	; 0x100
     998:	00000562 	andeq	r0, r0, r2, ror #10
     99c:	0000056c 	andeq	r0, r0, ip, ror #10
     9a0:	6c530001 	mrrcvs	0, 0, r0, r3, cr1
     9a4:	7f000005 	svcvc	0x00000005
     9a8:	0b000005 	bleq	9c4 <__Stack_Size+0x5c4>
     9ac:	00140300 	andseq	r0, r4, r0, lsl #6
     9b0:	01942000 	orrseq	r2, r4, r0
     9b4:	9f1a7f08 	svcls	0x001a7f08
     9b8:	00000582 	andeq	r0, r0, r2, lsl #11
     9bc:	0000058e 	andeq	r0, r0, lr, lsl #11
     9c0:	96530001 	ldrbls	r0, [r3], -r1
     9c4:	a9000005 	stmdbge	r0, {r0, r2}
     9c8:	01000005 	tsteq	r0, r5
     9cc:	00005300 	andeq	r5, r0, r0, lsl #6
     9d0:	00000000 	andeq	r0, r0, r0
     9d4:	00010000 	andeq	r0, r1, r0
     9d8:	00000518 	andeq	r0, r0, r8, lsl r5
     9dc:	0000051c 	andeq	r0, r0, ip, lsl r5
     9e0:	9f320002 	svcls	0x00320002
	...
     9ec:	05180001 	ldreq	r0, [r8, #-1]
     9f0:	051c0000 	ldreq	r0, [ip, #-0]
     9f4:	00060000 	andeq	r0, r6, r0
     9f8:	000a1403 	andeq	r1, sl, r3, lsl #8
     9fc:	00009f08 	andeq	r9, r0, r8, lsl #30
     a00:	00000000 	andeq	r0, r0, r0
     a04:	00010000 	andeq	r0, r1, r0
     a08:	00000518 	andeq	r0, r0, r8, lsl r5
     a0c:	0000051c 	andeq	r0, r0, ip, lsl r5
     a10:	9f300002 	svcls	0x00300002
	...
     a1c:	05500001 	ldrbeq	r0, [r0, #-1]
     a20:	055d0000 	ldrbeq	r0, [sp, #-0]
     a24:	00020000 	andeq	r0, r2, r0
     a28:	00006a91 	muleq	r0, r1, sl
     a2c:	00000000 	andeq	r0, r0, r0
     a30:	00010000 	andeq	r0, r1, r0
     a34:	00000550 	andeq	r0, r0, r0, asr r5
     a38:	0000055d 	andeq	r0, r0, sp, asr r5
     a3c:	6c910002 	ldcvs	0, cr0, [r1], {2}
	...
     a48:	05620001 	strbeq	r0, [r2, #-1]!
     a4c:	056a0000 	strbeq	r0, [sl, #-0]!
     a50:	00020000 	andeq	r0, r2, r0
     a54:	00009f31 	andeq	r9, r0, r1, lsr pc
     a58:	00000000 	andeq	r0, r0, r0
     a5c:	00010000 	andeq	r0, r1, r0
     a60:	00000562 	andeq	r0, r0, r2, ror #10
     a64:	0000056a 	andeq	r0, r0, sl, ror #10
     a68:	1e030006 	cdpne	0, 0, cr0, cr3, cr6, {0}
     a6c:	9f200000 	svcls	0x00200000
	...
     a78:	05620001 	strbeq	r0, [r2, #-1]!
     a7c:	056a0000 	strbeq	r0, [sl, #-0]!
     a80:	00020000 	andeq	r0, r2, r0
     a84:	00009f30 	andeq	r9, r0, r0, lsr pc
     a88:	00000000 	andeq	r0, r0, r0
     a8c:	00020000 	andeq	r0, r2, r0
     a90:	000004f2 	strdeq	r0, [r0], -r2
     a94:	000004fc 	strdeq	r0, [r0], -ip
     a98:	9f300002 	svcls	0x00300002
	...
     aa4:	04f20002 	ldrbteq	r0, [r2], #2
     aa8:	04fc0000 	ldrbteq	r0, [ip], #0
     aac:	00060000 	andeq	r0, r6, r0
     ab0:	00001403 	andeq	r1, r0, r3, lsl #8
     ab4:	00009f20 	andeq	r9, r0, r0, lsr #30
     ab8:	00000000 	andeq	r0, r0, r0
     abc:	00050000 	andeq	r0, r5, r0
     ac0:	0000058e 	andeq	r0, r0, lr, lsl #11
     ac4:	00000596 	muleq	r0, r6, r5
     ac8:	9f300002 	svcls	0x00300002
	...
     ad4:	058e0301 	streq	r0, [lr, #769]	; 0x301
     ad8:	058e0000 	streq	r0, [lr]
     adc:	00020000 	andeq	r0, r2, r0
     ae0:	00009f30 	andeq	r9, r0, r0, lsr pc
     ae4:	00000000 	andeq	r0, r0, r0
     ae8:	00010000 	andeq	r0, r1, r0
     aec:	0000059e 	muleq	r0, lr, r5
     af0:	000005a0 	andeq	r0, r0, r0, lsr #11
     af4:	9f300002 	svcls	0x00300002
	...
     b00:	0000041c 	andeq	r0, r0, ip, lsl r4
     b04:	0000041e 	andeq	r0, r0, lr, lsl r4
     b08:	007d0002 	rsbseq	r0, sp, r2
     b0c:	0000041e 	andeq	r0, r0, lr, lsl r4
     b10:	00000478 	andeq	r0, r0, r8, ror r4
     b14:	187d0002 	ldmdane	sp!, {r1}^
	...
     b24:	0000041c 	andeq	r0, r0, ip, lsl r4
     b28:	00000454 	andeq	r0, r0, r4, asr r4
     b2c:	54500001 	ldrbpl	r0, [r0], #-1
     b30:	78000004 	stmdavc	r0, {r2}
     b34:	04000004 	streq	r0, [r0], #-4
     b38:	5001f300 	andpl	pc, r1, r0, lsl #6
     b3c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     b48:	00044800 	andeq	r4, r4, r0, lsl #16
     b4c:	00045200 	andeq	r5, r4, r0, lsl #4
     b50:	57000100 	strpl	r0, [r0, -r0, lsl #2]
     b54:	00000452 	andeq	r0, r0, r2, asr r4
     b58:	0000046c 	andeq	r0, r0, ip, ror #8
     b5c:	00560001 	subseq	r0, r6, r1
     b60:	00000000 	andeq	r0, r0, r0
     b64:	02000000 	andeq	r0, r0, #0
     b68:	00045200 	andeq	r5, r4, r0, lsl #4
     b6c:	00045a00 	andeq	r5, r4, r0, lsl #20
     b70:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
     b7c:	04520002 	ldrbeq	r0, [r2], #-2
     b80:	045a0000 	ldrbeq	r0, [sl], #-0
     b84:	00010000 	andeq	r0, r1, r0
     b88:	00000051 	andeq	r0, r0, r1, asr r0
     b8c:	00000000 	andeq	r0, r0, r0
     b90:	52000200 	andpl	r0, r0, #0, 4
     b94:	5a000004 	bpl	bac <__Stack_Size+0x7ac>
     b98:	02000004 	andeq	r0, r0, #4
     b9c:	009f3000 	addseq	r3, pc, r0
	...
     ba8:	1c000000 	stcne	0, cr0, [r0], {-0}
     bac:	2c000000 	stccs	0, cr0, [r0], {-0}
     bb0:	01000000 	mrseq	r0, (UNDEF: 0)
     bb4:	002c5300 	eoreq	r5, ip, r0, lsl #6
     bb8:	002e0000 	eoreq	r0, lr, r0
     bbc:	00020000 	andeq	r0, r2, r0
     bc0:	00000471 	andeq	r0, r0, r1, ror r4
     bc4:	00000000 	andeq	r0, r0, r0
     bc8:	00020000 	andeq	r0, r2, r0
     bcc:	00000000 	andeq	r0, r0, r0
     bd0:	00340000 	eorseq	r0, r4, r0
     bd4:	00360000 	eorseq	r0, r6, r0
     bd8:	00020000 	andeq	r0, r2, r0
     bdc:	00369f30 	eorseq	r9, r6, r0, lsr pc
     be0:	00380000 	eorseq	r0, r8, r0
     be4:	00090000 	andeq	r0, r9, r0
     be8:	0186a00c 	orreq	sl, r6, ip
     bec:	1c007200 	sfmne	f7, 4, [r0], {-0}
     bf0:	0000389f 	muleq	r0, pc, r8	; <UNPREDICTABLE>
     bf4:	00003a00 	andeq	r3, r0, r0, lsl #20
     bf8:	0c000900 			; <UNDEFINED> instruction: 0x0c000900
     bfc:	000186a1 	andeq	r8, r1, r1, lsr #13
     c00:	9f1c0072 	svcls	0x001c0072
     c04:	0000003a 	andeq	r0, r0, sl, lsr r0
     c08:	00000050 	andeq	r0, r0, r0, asr r0
     c0c:	a00c0009 	andge	r0, ip, r9
     c10:	72000186 	andvc	r0, r0, #-2147483615	; 0x80000021
     c14:	009f1c00 	addseq	r1, pc, r0, lsl #24
     c18:	00000000 	andeq	r0, r0, r0
     c1c:	01000000 	mrseq	r0, (UNDEF: 0)
     c20:	00005400 	andeq	r5, r0, r0, lsl #8
     c24:	00005c00 	andeq	r5, r0, r0, lsl #24
     c28:	44000200 	strmi	r0, [r0], #-512	; 0xfffffe00
     c2c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     c38:	00000a00 	andeq	r0, r0, r0, lsl #20
     c3c:	00000c00 	andeq	r0, r0, r0, lsl #24
     c40:	50000100 	andpl	r0, r0, r0, lsl #2
     c44:	0000000c 	andeq	r0, r0, ip
     c48:	0000000e 	andeq	r0, r0, lr
     c4c:	01f30004 	mvnseq	r0, r4
     c50:	00009f50 	andeq	r9, r0, r0, asr pc
	...
     c5c:	00060000 	andeq	r0, r6, r0
     c60:	00080000 	andeq	r0, r8, r0
     c64:	00010000 	andeq	r0, r1, r0
     c68:	00000850 	andeq	r0, r0, r0, asr r8
     c6c:	00000a00 	andeq	r0, r0, r0, lsl #20
     c70:	f3000400 	vshl.u8	d0, d0, d0
     c74:	009f5001 	addseq	r5, pc, r1
     c78:	00000000 	andeq	r0, r0, r0
     c7c:	cc000000 	stcgt	0, cr0, [r0], {-0}
     c80:	ce000001 	cdpgt	0, 0, cr0, cr0, cr1, {0}
     c84:	02000001 	andeq	r0, r0, #1
     c88:	ce007d00 	cdpgt	13, 0, cr7, cr0, cr0, {0}
     c8c:	e4000001 	str	r0, [r0], #-1
     c90:	02000001 	andeq	r0, r0, #1
     c94:	00087d00 	andeq	r7, r8, r0, lsl #26
     c98:	00000000 	andeq	r0, r0, r0
     c9c:	02000000 	andeq	r0, r0, #0
     ca0:	00000000 	andeq	r0, r0, r0
     ca4:	d2000000 	andle	r0, r0, #0
     ca8:	d4000001 	strle	r0, [r0], #-1
     cac:	06000001 	streq	r0, [r0], -r1
     cb0:	4b400c00 	blmi	1003cb8 <__Stack_Size+0x10038b8>
     cb4:	d49f004c 	ldrle	r0, [pc], #76	; cbc <__Stack_Size+0x8bc>
     cb8:	d6000001 	strle	r0, [r0], -r1
     cbc:	03000001 	movweq	r0, #1
     cc0:	9f7e7300 	svcls	0x007e7300
     cc4:	000001d6 	ldrdeq	r0, [r0], -r6
     cc8:	000001da 	ldrdeq	r0, [r0], -sl
     ccc:	7f730003 	svcvc	0x00730003
     cd0:	0001da9f 	muleq	r1, pc, sl	; <UNPREDICTABLE>
     cd4:	0001e400 	andeq	lr, r1, r0, lsl #8
     cd8:	73000300 	movwvc	r0, #768	; 0x300
     cdc:	00009f7e 	andeq	r9, r0, lr, ror pc
     ce0:	00000000 	andeq	r0, r0, r0
     ce4:	01940000 	orrseq	r0, r4, r0
     ce8:	01960000 	orrseq	r0, r6, r0
     cec:	00020000 	andeq	r0, r2, r0
     cf0:	0196007d 	orrseq	r0, r6, sp, ror r0
     cf4:	01b20000 			; <UNDEFINED> instruction: 0x01b20000
     cf8:	00020000 	andeq	r0, r2, r0
     cfc:	01b2087d 			; <UNDEFINED> instruction: 0x01b2087d
     d00:	01cc0000 	biceq	r0, ip, r0
     d04:	00020000 	andeq	r0, r2, r0
     d08:	0000007d 	andeq	r0, r0, sp, ror r0
     d0c:	00000000 	andeq	r0, r0, r0
     d10:	01320000 	teqeq	r2, r0
     d14:	01340000 	teqeq	r4, r0
     d18:	00020000 	andeq	r0, r2, r0
     d1c:	0134007d 	teqeq	r4, sp, ror r0
     d20:	016e0000 	cmneq	lr, r0
     d24:	00020000 	andeq	r0, r2, r0
     d28:	016e107d 	smceq	57613	; 0xe10d
     d2c:	01780000 	cmneq	r8, r0
     d30:	00020000 	andeq	r0, r2, r0
     d34:	0000087d 	andeq	r0, r0, sp, ror r8
     d38:	00000000 	andeq	r0, r0, r0
     d3c:	03020000 	movweq	r0, #8192	; 0x2000
     d40:	013e0003 	teqeq	lr, r3
     d44:	013e0000 	teqeq	lr, r0
     d48:	00030000 	andeq	r0, r3, r0
     d4c:	3e9f8109 	coscce	f0, #1.0
     d50:	64000001 	strvs	r0, [r0], #-1
     d54:	02000001 	andeq	r0, r0, #1
     d58:	009f3100 	addseq	r3, pc, r0, lsl #2
     d5c:	00000000 	andeq	r0, r0, r0
     d60:	02000000 	andeq	r0, r0, #0
     d64:	00013e00 	andeq	r3, r1, r0, lsl #28
     d68:	00016400 	andeq	r6, r1, r0, lsl #8
     d6c:	35000200 	strcc	r0, [r0, #-512]	; 0xfffffe00
     d70:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     d74:	00000000 	andeq	r0, r0, r0
     d78:	00000100 	andeq	r0, r0, r0, lsl #2
     d7c:	00013e00 	andeq	r3, r1, r0, lsl #28
     d80:	00016300 	andeq	r6, r1, r0, lsl #6
     d84:	51000100 	mrspl	r0, (UNDEF: 16)
     d88:	00000163 	andeq	r0, r0, r3, ror #2
     d8c:	00000164 	andeq	r0, r0, r4, ror #2
     d90:	005d0001 	subseq	r0, sp, r1
	...
     d9c:	00000101 	andeq	r0, r0, r1, lsl #2
     da0:	00014a00 	andeq	r4, r1, r0, lsl #20
     da4:	00014a00 	andeq	r4, r1, r0, lsl #20
     da8:	50000100 	andpl	r0, r0, r0, lsl #2
     dac:	0000014a 	andeq	r0, r0, sl, asr #2
     db0:	0000015e 	andeq	r0, r0, lr, asr r1
     db4:	02700003 	rsbseq	r0, r0, #3
     db8:	00015e9f 	muleq	r1, pc, lr	; <UNPREDICTABLE>
     dbc:	00016300 	andeq	r6, r1, r0, lsl #6
     dc0:	70000300 	andvc	r0, r0, r0, lsl #6
     dc4:	00009f00 	andeq	r9, r0, r0, lsl #30
     dc8:	00000000 	andeq	r0, r0, r0
     dcc:	01000000 	mrseq	r0, (UNDEF: 0)
     dd0:	01120000 	tsteq	r2, r0
     dd4:	00020000 	andeq	r0, r2, r0
     dd8:	0112007d 	tsteq	r2, sp, ror r0
     ddc:	01320000 	teqeq	r2, r0
     de0:	00020000 	andeq	r0, r2, r0
     de4:	0000087d 	andeq	r0, r0, sp, ror r8
     de8:	00000000 	andeq	r0, r0, r0
     dec:	00020000 	andeq	r0, r2, r0
     df0:	00040000 	andeq	r0, r4, r0
     df4:	00020000 	andeq	r0, r2, r0
     df8:	0004007d 	andeq	r0, r4, sp, ror r0
     dfc:	00080000 	andeq	r0, r8, r0
     e00:	00020000 	andeq	r0, r2, r0
     e04:	0008087d 	andeq	r0, r8, sp, ror r8
     e08:	00300000 	eorseq	r0, r0, r0
     e0c:	00030000 	andeq	r0, r3, r0
     e10:	3000c87d 	andcc	ip, r0, sp, ror r8
     e14:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
     e18:	02000000 	andeq	r0, r0, #0
     e1c:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
     e28:	02000000 	andeq	r0, r0, #0
     e2c:	0a000000 	beq	e34 <__Stack_Size+0xa34>
     e30:	01000000 	mrseq	r0, (UNDEF: 0)
     e34:	000a5000 	andeq	r5, sl, r0
     e38:	00380000 	eorseq	r0, r8, r0
     e3c:	00040000 	andeq	r0, r4, r0
     e40:	9f5001f3 	svcls	0x005001f3
	...
     e4c:	00080101 	andeq	r0, r8, r1, lsl #2
     e50:	002e0000 	eoreq	r0, lr, r0
     e54:	00020000 	andeq	r0, r2, r0
     e58:	00009f32 	andeq	r9, r0, r2, lsr pc
     e5c:	00000000 	andeq	r0, r0, r0
     e60:	01000000 	mrseq	r0, (UNDEF: 0)
     e64:	00000008 	andeq	r0, r0, r8
     e68:	0000002e 	andeq	r0, r0, lr, lsr #32
     e6c:	005d0001 	subseq	r0, sp, r1
	...
     e78:	00000a00 	andeq	r0, r0, r0, lsl #20
     e7c:	00001000 	andeq	r1, r0, r0
     e80:	70000b00 	andvc	r0, r0, r0, lsl #22
     e84:	40000a00 	andmi	r0, r0, r0, lsl #20
     e88:	3024401a 	eorcc	r4, r4, sl, lsl r0
     e8c:	00009f29 	andeq	r9, r0, r9, lsr #30
     e90:	00000000 	andeq	r0, r0, r0
     e94:	00d80000 	sbcseq	r0, r8, r0
     e98:	00da0000 	sbcseq	r0, sl, r0
     e9c:	00020000 	andeq	r0, r2, r0
     ea0:	00da007d 	sbcseq	r0, sl, sp, ror r0
     ea4:	01000000 	mrseq	r0, (UNDEF: 0)
     ea8:	00020000 	andeq	r0, r2, r0
     eac:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     ebc:	00d80000 	sbcseq	r0, r8, r0
     ec0:	00f00000 	rscseq	r0, r0, r0
     ec4:	00010000 	andeq	r0, r1, r0
     ec8:	0000f050 	andeq	pc, r0, r0, asr r0	; <UNPREDICTABLE>
     ecc:	0000f800 	andeq	pc, r0, r0, lsl #16
     ed0:	f3000400 	vshl.u8	d0, d0, d0
     ed4:	f89f5001 			; <UNDEFINED> instruction: 0xf89f5001
     ed8:	fa000000 	blx	ee0 <__Stack_Size+0xae0>
     edc:	01000000 	mrseq	r0, (UNDEF: 0)
     ee0:	00fa5000 	rscseq	r5, sl, r0
     ee4:	01000000 	mrseq	r0, (UNDEF: 0)
     ee8:	00040000 	andeq	r0, r4, r0
     eec:	9f5001f3 	svcls	0x005001f3
	...
     f00:	000000d8 	ldrdeq	r0, [r0], -r8
     f04:	000000ee 	andeq	r0, r0, lr, ror #1
     f08:	ee510001 	cdp	0, 5, cr0, cr1, cr1, {0}
     f0c:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
     f10:	04000000 	streq	r0, [r0], #-0
     f14:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
     f18:	0000f89f 	muleq	r0, pc, r8	; <UNPREDICTABLE>
     f1c:	0000fa00 	andeq	pc, r0, r0, lsl #20
     f20:	51000100 	mrspl	r0, (UNDEF: 16)
     f24:	000000fa 	strdeq	r0, [r0], -sl
     f28:	00000100 	andeq	r0, r0, r0, lsl #2
     f2c:	01f30004 	mvnseq	r0, r4
     f30:	00009f51 	andeq	r9, r0, r1, asr pc
	...
     f40:	00d80000 	sbcseq	r0, r8, r0
     f44:	00f30000 	rscseq	r0, r3, r0
     f48:	00010000 	andeq	r0, r1, r0
     f4c:	0000f352 	andeq	pc, r0, r2, asr r3	; <UNPREDICTABLE>
     f50:	0000f800 	andeq	pc, r0, r0, lsl #16
     f54:	f3000400 	vshl.u8	d0, d0, d0
     f58:	f89f5201 			; <UNDEFINED> instruction: 0xf89f5201
     f5c:	fa000000 	blx	f64 <__Stack_Size+0xb64>
     f60:	01000000 	mrseq	r0, (UNDEF: 0)
     f64:	00fa5200 	rscseq	r5, sl, r0, lsl #4
     f68:	01000000 	mrseq	r0, (UNDEF: 0)
     f6c:	00040000 	andeq	r0, r4, r0
     f70:	9f5201f3 	svcls	0x005201f3
	...
     f7c:	00ec0002 	rsceq	r0, ip, r2
     f80:	00f40000 	rscseq	r0, r4, r0
     f84:	00020000 	andeq	r0, r2, r0
     f88:	00009f30 	andeq	r9, r0, r0, lsr pc
     f8c:	00000000 	andeq	r0, r0, r0
     f90:	00020000 	andeq	r0, r2, r0
     f94:	000000ec 	andeq	r0, r0, ip, ror #1
     f98:	000000f4 	strdeq	r0, [r0], -r4
     f9c:	02030006 	andeq	r0, r3, #6
     fa0:	9f200000 	svcls	0x00200000
	...
     fb4:	000000b4 	strheq	r0, [r0], -r4
     fb8:	000000c8 	andeq	r0, r0, r8, asr #1
     fbc:	c8500001 	ldmdagt	r0, {r0}^
     fc0:	d0000000 	andle	r0, r0, r0
     fc4:	04000000 	streq	r0, [r0], #-0
     fc8:	5001f300 	andpl	pc, r1, r0, lsl #6
     fcc:	0000d09f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     fd0:	0000d200 	andeq	sp, r0, r0, lsl #4
     fd4:	50000100 	andpl	r0, r0, r0, lsl #2
     fd8:	000000d2 	ldrdeq	r0, [r0], -r2
     fdc:	000000d8 	ldrdeq	r0, [r0], -r8
     fe0:	01f30004 	mvnseq	r0, r4
     fe4:	00009f50 	andeq	r9, r0, r0, asr pc
	...
     ff4:	00380000 	eorseq	r0, r8, r0
     ff8:	00600000 	rsbeq	r0, r0, r0
     ffc:	00010000 	andeq	r0, r1, r0
    1000:	00006050 	andeq	r6, r0, r0, asr r0
    1004:	00006400 	andeq	r6, r0, r0, lsl #8
    1008:	f3000400 	vshl.u8	d0, d0, d0
    100c:	649f5001 	ldrvs	r5, [pc], #1	; 1014 <__Stack_Size+0xc14>
    1010:	76000000 	strvc	r0, [r0], -r0
    1014:	01000000 	mrseq	r0, (UNDEF: 0)
    1018:	00765000 	rsbseq	r5, r6, r0
    101c:	00b40000 	adcseq	r0, r4, r0
    1020:	00040000 	andeq	r0, r4, r0
    1024:	9f5001f3 	svcls	0x005001f3
	...
    1030:	00000178 	andeq	r0, r0, r8, ror r1
    1034:	0000017a 	andeq	r0, r0, sl, ror r1
    1038:	007d0002 	rsbseq	r0, sp, r2
    103c:	0000017a 	andeq	r0, r0, sl, ror r1
    1040:	00000194 	muleq	r0, r4, r1
    1044:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    1058:	00000178 	andeq	r0, r0, r8, ror r1
    105c:	00000182 	andeq	r0, r0, r2, lsl #3
    1060:	82500001 	subshi	r0, r0, #1
    1064:	86000001 	strhi	r0, [r0], -r1
    1068:	04000001 	streq	r0, [r0], #-1
    106c:	5001f300 	andpl	pc, r1, r0, lsl #6
    1070:	0001869f 	muleq	r1, pc, r6	; <UNPREDICTABLE>
    1074:	00018900 	andeq	r8, r1, r0, lsl #18
    1078:	50000100 	andpl	r0, r0, r0, lsl #2
    107c:	00000189 	andeq	r0, r0, r9, lsl #3
    1080:	00000194 	muleq	r0, r4, r1
    1084:	01f30004 	mvnseq	r0, r4
    1088:	00009f50 	andeq	r9, r0, r0, asr pc
    108c:	00000000 	andeq	r0, r0, r0
    1090:	00010000 	andeq	r0, r1, r0
    1094:	00000186 	andeq	r0, r0, r6, lsl #3
    1098:	00000194 	muleq	r0, r4, r1
    109c:	01f30004 	mvnseq	r0, r4
    10a0:	00009f50 	andeq	r9, r0, r0, asr pc
    10a4:	00000000 	andeq	r0, r0, r0
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	0800014c 	stmdaeq	r0, {r2, r3, r6, r8}
   4:	0800014e 	stmdaeq	r0, {r1, r2, r3, r6, r8}
   8:	08000150 	stmdaeq	r0, {r4, r6, r8}
   c:	08000172 	stmdaeq	r0, {r1, r4, r5, r6, r8}
  10:	08000172 	stmdaeq	r0, {r1, r4, r5, r6, r8}
  14:	080001cc 	stmdaeq	r0, {r2, r3, r6, r7, r8}
	...
  20:	08000120 	stmdaeq	r0, {r5, r8}
  24:	080001dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8}
  28:	080009f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, fp}
  2c:	08000a14 	stmdaeq	r0, {r2, r4, r9, fp}
	...
  38:	00000010 	andeq	r0, r0, r0, lsl r0
  3c:	00000012 	andeq	r0, r0, r2, lsl r0
  40:	0000001a 	andeq	r0, r0, sl, lsl r0
  44:	0000001c 	andeq	r0, r0, ip, lsl r0
  48:	0000001e 	andeq	r0, r0, lr, lsl r0
  4c:	00000028 	andeq	r0, r0, r8, lsr #32
	...
  58:	00000034 	andeq	r0, r0, r4, lsr r0
  5c:	00000034 	andeq	r0, r0, r4, lsr r0
  60:	00000036 	andeq	r0, r0, r6, lsr r0
  64:	0000003c 	andeq	r0, r0, ip, lsr r0
	...
  70:	000002c2 	andeq	r0, r0, r2, asr #5
  74:	000002c4 	andeq	r0, r0, r4, asr #5
  78:	000002c8 	andeq	r0, r0, r8, asr #5
  7c:	000002c8 	andeq	r0, r0, r8, asr #5
  80:	000002cc 	andeq	r0, r0, ip, asr #5
  84:	000002dc 	ldrdeq	r0, [r0], -ip
	...
  90:	000003ca 	andeq	r0, r0, sl, asr #7
  94:	000003cc 	andeq	r0, r0, ip, asr #7
  98:	000003e6 	andeq	r0, r0, r6, ror #7
  9c:	000003ec 	andeq	r0, r0, ip, ror #7
  a0:	00000410 	andeq	r0, r0, r0, lsl r4
  a4:	0000041c 	andeq	r0, r0, ip, lsl r4
	...
  b0:	00000448 	andeq	r0, r0, r8, asr #8
  b4:	00000452 	andeq	r0, r0, r2, asr r4
  b8:	00000452 	andeq	r0, r0, r2, asr r4
  bc:	0000045a 	andeq	r0, r0, sl, asr r4
	...
  c8:	0000049c 	muleq	r0, ip, r4
  cc:	0000049c 	muleq	r0, ip, r4
  d0:	000004a4 	andeq	r0, r0, r4, lsr #9
  d4:	000004b0 			; <UNDEFINED> instruction: 0x000004b0
	...
  e0:	000004f2 	strdeq	r0, [r0], -r2
  e4:	000004f2 	strdeq	r0, [r0], -r2
  e8:	000004f4 	strdeq	r0, [r0], -r4
  ec:	000004fc 	strdeq	r0, [r0], -ip
	...
  f8:	00000508 	andeq	r0, r0, r8, lsl #10
  fc:	0000051c 	andeq	r0, r0, ip, lsl r5
 100:	0000052c 	andeq	r0, r0, ip, lsr #10
 104:	0000055e 	andeq	r0, r0, lr, asr r5
 108:	00000562 	andeq	r0, r0, r2, ror #10
 10c:	00000582 	andeq	r0, r0, r2, lsl #11
	...
 118:	00000546 	andeq	r0, r0, r6, asr #10
 11c:	00000548 	andeq	r0, r0, r8, asr #10
 120:	00000550 	andeq	r0, r0, r0, asr r5
 124:	0000055e 	andeq	r0, r0, lr, asr r5
	...
 130:	0000051c 	andeq	r0, r0, ip, lsl r5
 134:	00000522 	andeq	r0, r0, r2, lsr #10
 138:	0000058e 	andeq	r0, r0, lr, lsl #11
 13c:	00000596 	muleq	r0, r6, r5
	...
 148:	00000004 	andeq	r0, r0, r4
 14c:	00000006 	andeq	r0, r0, r6
 150:	00000008 	andeq	r0, r0, r8
 154:	0000002e 	andeq	r0, r0, lr, lsr #32
	...
 160:	00000182 	andeq	r0, r0, r2, lsl #3
 164:	00000184 	andeq	r0, r0, r4, lsl #3
 168:	00000186 	andeq	r0, r0, r6, lsl #3
 16c:	00000194 	muleq	r0, r4, r1
	...
 178:	000001d2 	ldrdeq	r0, [r0], -r2
 17c:	000001d2 	ldrdeq	r0, [r0], -r2
 180:	000001d4 	ldrdeq	r0, [r0], -r4
 184:	000001d8 	ldrdeq	r0, [r0], -r8
 188:	000001da 	ldrdeq	r0, [r0], -sl
 18c:	000001e4 	andeq	r0, r0, r4, ror #3
	...
