
res/firmware.elf:     file format elf32-littlearm


Disassembly of section .isr_vector:

08000000 <g_pfnVectors>:
 8000000:	20007fff 	strdcs	r7, [r0], -pc	; <UNPREDICTABLE>
 8000004:	08000b8d 	stmdaeq	r0, {r0, r2, r3, r7, r8, r9, fp}
 8000008:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 800000c:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 8000010:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 8000014:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 8000018:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
	...
 800002c:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 8000030:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 8000034:	00000000 	andeq	r0, r0, r0
 8000038:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 800003c:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 8000040:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 8000044:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 8000048:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 800004c:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 8000050:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 8000054:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 8000058:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 800005c:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 8000060:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 8000064:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 8000068:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 800006c:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 8000070:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 8000074:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 8000078:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 800007c:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 8000080:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 8000084:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 8000088:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 800008c:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 8000090:	08000639 	stmdaeq	r0, {r0, r3, r4, r5, r9, sl}
 8000094:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 8000098:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 800009c:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 80000a0:	00000000 	andeq	r0, r0, r0
 80000a4:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 80000a8:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 80000ac:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 80000b0:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 80000b4:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 80000b8:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 80000bc:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 80000c0:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 80000c4:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 80000c8:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 80000cc:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 80000d0:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 80000d4:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 80000d8:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 80000dc:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 80000e0:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 80000e4:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 80000e8:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 80000ec:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 80000f0:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 80000f4:	00000000 	andeq	r0, r0, r0
 80000f8:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 80000fc:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
	...
 8000108:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 800010c:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 8000110:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 8000114:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 8000118:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
 800011c:	00000000 	andeq	r0, r0, r0
 8000120:	08000bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp}
	...
 8000138:	f108f85f 			; <UNDEFINED> instruction: 0xf108f85f

Disassembly of section .text:

0800013c <init32-0x14>:
 800013c:	08000d68 	stmdaeq	r0, {r3, r5, r6, r8, sl, fp}
 8000140:	20000000 	andcs	r0, r0, r0
 8000144:	20000014 	andcs	r0, r0, r4, lsl r0
 8000148:	20000014 	andcs	r0, r0, r4, lsl r0
 800014c:	20000068 	andcs	r0, r0, r8, rrx

08000150 <init32>:
#define CLOCK_FAIL_LSI -4

#define RTC_LSE 1

void init32(uint8_t reinit){
  RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 8000150:	4b21      	ldr	r3, [pc, #132]	; (80001d8 <init32+0x88>)
  PWR->CR |= PWR_CR_DBP;
 8000152:	4922      	ldr	r1, [pc, #136]	; (80001dc <init32+0x8c>)
  RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 8000154:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8000156:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800015a:	625a      	str	r2, [r3, #36]	; 0x24
  PWR->CR |= PWR_CR_DBP;
 800015c:	680a      	ldr	r2, [r1, #0]
 800015e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8000162:	600a      	str	r2, [r1, #0]
  
  if(!reinit){
    //if(RCC->CSR & RCC_CSR_RTCEN)return;
  }
  
  RCC->CSR |= RCC_CSR_RTCRST;
 8000164:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000166:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 800016a:	635a      	str	r2, [r3, #52]	; 0x34
  RCC->CSR &=~RCC_CSR_RTCRST;
 800016c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800016e:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8000172:	635a      	str	r2, [r3, #52]	; 0x34
  
#if RTC_LSE
  RCC->CSR |= RCC_CSR_LSEON; while(!(RCC->CSR & RCC_CSR_LSERDY)){}
 8000174:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000176:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800017a:	635a      	str	r2, [r3, #52]	; 0x34
 800017c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800017e:	0591      	lsls	r1, r2, #22
 8000180:	d5fc      	bpl.n	800017c <init32+0x2c>
#else
  RCC->CSR |= RCC_CSR_LSION; while(!(RCC->CSR & RCC_CSR_LSIRDY)){}
#endif
  
  RCC->CSR &=~RCC_CSR_RTCSEL;
 8000182:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000184:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 8000188:	635a      	str	r2, [r3, #52]	; 0x34
#if RTC_LSE
  RCC->CSR |= RCC_CSR_RTCSEL_LSE; // NOCLOCK / LSI / LSE / HSE
 800018a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800018c:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8000190:	635a      	str	r2, [r3, #52]	; 0x34
#else
  RCC->CSR |= RCC_CSR_RTCSEL_LSI; // NOCLOCK / LSI / LSE / HSE
#endif
  RCC->CSR |= RCC_CSR_RTCEN;
 8000192:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000194:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8000198:	635a      	str	r2, [r3, #52]	; 0x34
  
  RTC->WPR = 0xCA;
 800019a:	22ca      	movs	r2, #202	; 0xca
 800019c:	4b10      	ldr	r3, [pc, #64]	; (80001e0 <init32+0x90>)
 800019e:	625a      	str	r2, [r3, #36]	; 0x24
  RTC->WPR = 0x53;
 80001a0:	2253      	movs	r2, #83	; 0x53
 80001a2:	625a      	str	r2, [r3, #36]	; 0x24
  RTC->ISR |= RTC_ISR_INIT;
 80001a4:	68da      	ldr	r2, [r3, #12]
 80001a6:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80001aa:	60da      	str	r2, [r3, #12]
  while(!(RTC->ISR & RTC_ISR_INITF)){}
 80001ac:	68da      	ldr	r2, [r3, #12]
 80001ae:	0652      	lsls	r2, r2, #25
 80001b0:	d5fc      	bpl.n	80001ac <init32+0x5c>
  //LSE
  RTC->PRER &=~(RTC_PRER_PREDIV_A | RTC_PRER_PREDIV_S);
 80001b2:	6919      	ldr	r1, [r3, #16]
 80001b4:	4a0b      	ldr	r2, [pc, #44]	; (80001e4 <init32+0x94>)
 80001b6:	400a      	ands	r2, r1
 80001b8:	611a      	str	r2, [r3, #16]
#if RTC_LSE
  RTC->PRER |= 255;
 80001ba:	691a      	ldr	r2, [r3, #16]
 80001bc:	f042 02ff 	orr.w	r2, r2, #255	; 0xff
 80001c0:	611a      	str	r2, [r3, #16]
  RTC->PRER |= (127 << 16);
 80001c2:	691a      	ldr	r2, [r3, #16]
 80001c4:	f442 02fe 	orr.w	r2, r2, #8323072	; 0x7f0000
 80001c8:	611a      	str	r2, [r3, #16]
  //RTC->TR &=~RTC_TR_SU;
  //RTC->DR = 0;
  //RTC->DR &=~RTC_DR_DU;
  
  
  RTC->ISR &=~RTC_ISR_INIT;
 80001ca:	68da      	ldr	r2, [r3, #12]
 80001cc:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80001d0:	60da      	str	r2, [r3, #12]
  RTC->WPR = 0xFF;
 80001d2:	22ff      	movs	r2, #255	; 0xff
 80001d4:	625a      	str	r2, [r3, #36]	; 0x24
}
 80001d6:	4770      	bx	lr
 80001d8:	40023800 	andmi	r3, r2, r0, lsl #16
 80001dc:	40007000 	andmi	r7, r0, r0
 80001e0:	40002800 	andmi	r2, r0, r0, lsl #16
 80001e4:	ff808000 			; <UNDEFINED> instruction: 0xff808000

080001e8 <clock_HS>:
int8_t clock_HS(int8_t quartz){
  uint16_t i;
  uint32_t tmp;
  
  //clock by MSI
  tmp = RCC->CFGR;
 80001e8:	4b45      	ldr	r3, [pc, #276]	; (8000300 <clock_HS+0x118>)
 80001ea:	689a      	ldr	r2, [r3, #8]
  tmp &=~RCC_CFGR_SW;
 80001ec:	f022 0203 	bic.w	r2, r2, #3
  tmp |= RCC_CFGR_SW_MSI; // MSI / HSI / HSE / PLL
  RCC->CFGR = tmp;
 80001f0:	609a      	str	r2, [r3, #8]
 80001f2:	f640 72ff 	movw	r2, #4095	; 0xfff
  for(i=0;i<0x0FFF;i++){
    if((RCC->CFGR & RCC_CFGR_SWS)==RCC_CFGR_SWS_MSI){i=0x1FFF; break;}
 80001f6:	6899      	ldr	r1, [r3, #8]
 80001f8:	f011 0f0c 	tst.w	r1, #12
 80001fc:	d047      	beq.n	800028e <clock_HS+0xa6>
 80001fe:	3a01      	subs	r2, #1
 8000200:	b292      	uxth	r2, r2
  for(i=0;i<0x0FFF;i++){
 8000202:	2a00      	cmp	r2, #0
 8000204:	d1f7      	bne.n	80001f6 <clock_HS+0xe>
  }
  if(i != 0x1FFF)return CLOCK_FAIL_MSI;
 8000206:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800020a:	4770      	bx	lr
 800020c:	2000      	movs	r0, #0
    }
    if(i != 0x1FFF)return CLOCK_FAIL_HSI;
  }
  
  // configure flash
  FLASH->ACR |= FLASH_ACR_ACC64;
 800020e:	4b3d      	ldr	r3, [pc, #244]	; (8000304 <clock_HS+0x11c>)
 8000210:	681a      	ldr	r2, [r3, #0]
 8000212:	f042 0204 	orr.w	r2, r2, #4
 8000216:	601a      	str	r2, [r3, #0]
  FLASH->ACR |= FLASH_ACR_PRFTEN;
 8000218:	681a      	ldr	r2, [r3, #0]
 800021a:	f042 0202 	orr.w	r2, r2, #2
 800021e:	601a      	str	r2, [r3, #0]
  FLASH->ACR |= FLASH_ACR_LATENCY;
 8000220:	681a      	ldr	r2, [r3, #0]
 8000222:	f042 0201 	orr.w	r2, r2, #1
 8000226:	601a      	str	r2, [r3, #0]

  
  tmp = RCC->CFGR;
 8000228:	4a35      	ldr	r2, [pc, #212]	; (8000300 <clock_HS+0x118>)
 800022a:	6893      	ldr	r3, [r2, #8]
  tmp &=~ (RCC_CFGR_PLLSRC | RCC_CFGR_PLLMUL | RCC_CFGR_PLLDIV);
 800022c:	f423 037d 	bic.w	r3, r3, #16580608	; 0xfd0000
  
  if(quartz){
 8000230:	b1a8      	cbz	r0, 800025e <clock_HS+0x76>
    tmp |= RCC_CFGR_PLLSRC;  //PLL src = HSE
    tmp |= RCC_CFGR_PLLMUL12;//PLLCLK = F_HSE * 12 = 96 MHz
    tmp |= RCC_CFGR_PLLDIV3; //PLLCLK = F_HSE * 12 / 3 = 32 MHz
 8000232:	f443 0311 	orr.w	r3, r3, #9502720	; 0x910000
  tmp |= RCC_CFGR_HPRE_DIV1;
  //AHB = PLLCLK/HPRE = 32 MHz
  tmp &=~RCC_CFGR_PPRE2;
  tmp |= RCC_CFGR_PPRE2_DIV1;
  //APB2 = HCLK/PPRE2 = 32 MHz
  tmp &=~RCC_CFGR_PPRE1;
 8000236:	4934      	ldr	r1, [pc, #208]	; (8000308 <clock_HS+0x120>)
 8000238:	4019      	ands	r1, r3
  tmp |= RCC_CFGR_PPRE1_DIV1;
  //APB1 = HCLK/PPRE1 = 32 MHz
  RCC->CFGR = tmp;
 800023a:	6091      	str	r1, [r2, #8]
  
  RCC->CR |= RCC_CR_PLLON;
 800023c:	6813      	ldr	r3, [r2, #0]
 800023e:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000242:	6013      	str	r3, [r2, #0]
 8000244:	f640 73ff 	movw	r3, #4095	; 0xfff
  for(i=0;i<0x0FFF;i++){
    if(RCC->CR & RCC_CR_PLLRDY){i=0x1FFF; break;}
 8000248:	4a2d      	ldr	r2, [pc, #180]	; (8000300 <clock_HS+0x118>)
 800024a:	6811      	ldr	r1, [r2, #0]
 800024c:	0189      	lsls	r1, r1, #6
 800024e:	d40d      	bmi.n	800026c <clock_HS+0x84>
 8000250:	3b01      	subs	r3, #1
 8000252:	b29b      	uxth	r3, r3
  for(i=0;i<0x0FFF;i++){
 8000254:	2b00      	cmp	r3, #0
 8000256:	d1f8      	bne.n	800024a <clock_HS+0x62>
  }
  if(i != 0x1FFF)return CLOCK_FAIL_PLL; //can not enable PLL
 8000258:	f06f 0002 	mvn.w	r0, #2
 800025c:	4770      	bx	lr
    tmp |= RCC_CFGR_PLLDIV3; //PLLCLK = F_HSI * 6 / 3 = 32 MHz
 800025e:	f443 0308 	orr.w	r3, r3, #8912896	; 0x880000
 8000262:	e7e8      	b.n	8000236 <clock_HS+0x4e>
  tmp |= RCC_CFGR_SW_PLL; // MSI / HSI / HSE / PLL
  RCC->CFGR = tmp;
  for(i=0;i<0x0FFF;i++){
    if((RCC->CFGR & RCC_CFGR_SWS)==RCC_CFGR_SWS_PLL){i=0x1FFF; break;}
  }
  if(i != 0x1FFF)return CLOCK_FAIL_PLL;
 8000264:	3000      	adds	r0, #0
 8000266:	bf18      	it	ne
 8000268:	2001      	movne	r0, #1
  
  if(quartz)return CLOCK_HSE;
    else return CLOCK_HSI;
}
 800026a:	4770      	bx	lr
  tmp = RCC->CFGR;
 800026c:	6893      	ldr	r3, [r2, #8]
    if((RCC->CFGR & RCC_CFGR_SWS)==RCC_CFGR_SWS_PLL){i=0x1FFF; break;}
 800026e:	4924      	ldr	r1, [pc, #144]	; (8000300 <clock_HS+0x118>)
  tmp |= RCC_CFGR_SW_PLL; // MSI / HSI / HSE / PLL
 8000270:	f043 0303 	orr.w	r3, r3, #3
  RCC->CFGR = tmp;
 8000274:	6093      	str	r3, [r2, #8]
 8000276:	f640 73ff 	movw	r3, #4095	; 0xfff
    if((RCC->CFGR & RCC_CFGR_SWS)==RCC_CFGR_SWS_PLL){i=0x1FFF; break;}
 800027a:	688a      	ldr	r2, [r1, #8]
 800027c:	f002 020c 	and.w	r2, r2, #12
 8000280:	2a0c      	cmp	r2, #12
 8000282:	d0ef      	beq.n	8000264 <clock_HS+0x7c>
 8000284:	3b01      	subs	r3, #1
 8000286:	b29b      	uxth	r3, r3
  for(i=0;i<0x0FFF;i++){
 8000288:	2b00      	cmp	r3, #0
 800028a:	d1f6      	bne.n	800027a <clock_HS+0x92>
 800028c:	e7e4      	b.n	8000258 <clock_HS+0x70>
  RCC->CR &=~ RCC_CR_HSEON;
 800028e:	681a      	ldr	r2, [r3, #0]
 8000290:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8000294:	601a      	str	r2, [r3, #0]
  RCC->CR &=~ RCC_CR_HSION;
 8000296:	681a      	ldr	r2, [r3, #0]
 8000298:	f022 0201 	bic.w	r2, r2, #1
 800029c:	601a      	str	r2, [r3, #0]
  RCC->CR &=~ RCC_CR_HSEBYP;
 800029e:	681a      	ldr	r2, [r3, #0]
 80002a0:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 80002a4:	601a      	str	r2, [r3, #0]
  RCC->CR &=~ RCC_CR_PLLON;
 80002a6:	681a      	ldr	r2, [r3, #0]
 80002a8:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 80002ac:	601a      	str	r2, [r3, #0]
  RCC->CR &=~ RCC_CR_RTCPRE;
 80002ae:	681a      	ldr	r2, [r3, #0]
 80002b0:	f022 42c0 	bic.w	r2, r2, #1610612736	; 0x60000000
 80002b4:	601a      	str	r2, [r3, #0]
  RCC->CR |= RCC_CR_RTCPRE_1; //0b00=2 MHz ; 0b01=4MHz ; 0b10=8MHz ; 0b11=16MHz
 80002b6:	681a      	ldr	r2, [r3, #0]
 80002b8:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 80002bc:	601a      	str	r2, [r3, #0]
  if(quartz){
 80002be:	b168      	cbz	r0, 80002dc <clock_HS+0xf4>
    RCC->CR |= RCC_CR_HSEON;
 80002c0:	681a      	ldr	r2, [r3, #0]
 80002c2:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80002c6:	601a      	str	r2, [r3, #0]
 80002c8:	f640 73ff 	movw	r3, #4095	; 0xfff
      if(RCC->CR & RCC_CR_HSERDY){i=0x1FFF; break;}
 80002cc:	4a0c      	ldr	r2, [pc, #48]	; (8000300 <clock_HS+0x118>)
 80002ce:	6811      	ldr	r1, [r2, #0]
 80002d0:	0389      	lsls	r1, r1, #14
 80002d2:	d49c      	bmi.n	800020e <clock_HS+0x26>
 80002d4:	3b01      	subs	r3, #1
 80002d6:	b29b      	uxth	r3, r3
    for(i=0;i<0x0FFF;i++){
 80002d8:	2b00      	cmp	r3, #0
 80002da:	d1f8      	bne.n	80002ce <clock_HS+0xe6>
    RCC->CR |= RCC_CR_HSION;
 80002dc:	4a08      	ldr	r2, [pc, #32]	; (8000300 <clock_HS+0x118>)
 80002de:	6813      	ldr	r3, [r2, #0]
 80002e0:	f043 0301 	orr.w	r3, r3, #1
 80002e4:	6013      	str	r3, [r2, #0]
 80002e6:	f640 73ff 	movw	r3, #4095	; 0xfff
      if(RCC->CR & RCC_CR_HSIRDY){i=0x1FFF; break;}
 80002ea:	6811      	ldr	r1, [r2, #0]
 80002ec:	0788      	lsls	r0, r1, #30
 80002ee:	d48d      	bmi.n	800020c <clock_HS+0x24>
 80002f0:	3b01      	subs	r3, #1
 80002f2:	b29b      	uxth	r3, r3
    for(i=0;i<0x0FFF;i++){
 80002f4:	2b00      	cmp	r3, #0
 80002f6:	d1f8      	bne.n	80002ea <clock_HS+0x102>
    if(i != 0x1FFF)return CLOCK_FAIL_HSI;
 80002f8:	f06f 0001 	mvn.w	r0, #1
 80002fc:	4770      	bx	lr
 80002fe:	bf00      	nop
 8000300:	40023800 	andmi	r3, r2, r0, lsl #16
 8000304:	40023c00 	andmi	r3, r2, r0, lsl #24
 8000308:	ff9bc00f 			; <UNDEFINED> instruction: 0xff9bc00f

0800030c <clock_MS>:
void clock_MS(){
  uint16_t i;
  uint32_t tmp;
  
  //clock by MSI
  tmp = RCC->CFGR;
 800030c:	4b10      	ldr	r3, [pc, #64]	; (8000350 <clock_MS+0x44>)
 800030e:	689a      	ldr	r2, [r3, #8]
  tmp &=~RCC_CFGR_SW;
 8000310:	f022 0203 	bic.w	r2, r2, #3
  tmp |= RCC_CFGR_SW_MSI; // MSI / HSI / HSE / PLL
  RCC->CFGR = tmp;
 8000314:	609a      	str	r2, [r3, #8]
 8000316:	f640 72ff 	movw	r2, #4095	; 0xfff
  for(i=0;i<0x0FFF;i++){
    if((RCC->CFGR & RCC_CFGR_SWS)==RCC_CFGR_SWS_MSI){i=0x1FFF; break;}
 800031a:	6899      	ldr	r1, [r3, #8]
 800031c:	f011 0f0c 	tst.w	r1, #12
 8000320:	d004      	beq.n	800032c <clock_MS+0x20>
 8000322:	3a01      	subs	r2, #1
 8000324:	b292      	uxth	r2, r2
  for(i=0;i<0x0FFF;i++){
 8000326:	2a00      	cmp	r2, #0
 8000328:	d1f7      	bne.n	800031a <clock_MS+0xe>
 800032a:	4770      	bx	lr
  }
  if(i != 0x1FFF)return;;
  
  //disable HSE, PLL
  RCC->CR &=~ RCC_CR_HSEON;
 800032c:	681a      	ldr	r2, [r3, #0]
 800032e:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8000332:	601a      	str	r2, [r3, #0]
  RCC->CR &=~ RCC_CR_HSION;
 8000334:	681a      	ldr	r2, [r3, #0]
 8000336:	f022 0201 	bic.w	r2, r2, #1
 800033a:	601a      	str	r2, [r3, #0]
  RCC->CR &=~ RCC_CR_HSEBYP;
 800033c:	681a      	ldr	r2, [r3, #0]
 800033e:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8000342:	601a      	str	r2, [r3, #0]
  RCC->CR &=~ RCC_CR_PLLON;
 8000344:	681a      	ldr	r2, [r3, #0]
 8000346:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 800034a:	601a      	str	r2, [r3, #0]
}
 800034c:	4770      	bx	lr
 800034e:	bf00      	nop
 8000350:	40023800 	andmi	r3, r2, r0, lsl #16

08000354 <_init>:
 8000354:	4770      	bx	lr

08000356 <SystemInit>:
#include "hardware.h"
#include "usb_lib.h"
#include "clock.h"

void __attribute__((weak)) _init(void){}
void __attribute__((weak)) SystemInit(void){}
 8000356:	4770      	bx	lr

08000358 <sleep>:

void sleep(uint32_t time){
  while(time--)asm volatile("nop");
 8000358:	f110 30ff 	adds.w	r0, r0, #4294967295	; 0xffffffff
 800035c:	d200      	bcs.n	8000360 <sleep+0x8>
}
 800035e:	4770      	bx	lr
  while(time--)asm volatile("nop");
 8000360:	bf00      	nop
 8000362:	e7f9      	b.n	8000358 <sleep>

#define STM32ENDPOINTS          8
#define usb_epdata   ((volatile usb_epdata_t*)(USB_PMAADDR))
#define LASTADDR_DEFAULT                (STM32ENDPOINTS * 8)

__attribute__((weak))void usb_class_init(){}
 8000364:	4770      	bx	lr

08000366 <usb_class_disconnect>:
 8000366:	4770      	bx	lr
 8000368:	4770      	bx	lr
__attribute__((weak))void usb_class_disconnect(){}
__attribute__((weak))void usb_class_poll(){}
__attribute__((weak))char usb_class_ep0_in(config_pack_t *req, void **data, uint16_t *size){return 0;}
 800036a:	2000      	movs	r0, #0
 800036c:	4770      	bx	lr

0800036e <usb_class_ep0_out>:
__attribute__((weak))char usb_class_ep0_out(config_pack_t *req, uint16_t offset, uint16_t rx_size){return 0;}
 800036e:	2000      	movs	r0, #0
 8000370:	4770      	bx	lr

08000372 <USB_setup>:
epfunc_t epfunc_out[STM32ENDPOINTS];

static config_pack_t setup_packet;

void USB_setup(){
  RCC->APB1ENR |= RCC_APB1ENR_USBEN;
 8000372:	4b16      	ldr	r3, [pc, #88]	; (80003cc <USB_setup+0x5a>)
 8000374:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8000376:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 800037a:	625a      	str	r2, [r3, #36]	; 0x24
  RCC->APB2ENR |= RCC_APB2ENR_SYSCFGEN;
 800037c:	6a1a      	ldr	r2, [r3, #32]
 800037e:	f042 0201 	orr.w	r2, r2, #1
 8000382:	621a      	str	r2, [r3, #32]
  
  SYSCFG->PMC &=~ SYSCFG_PMC_USB_PU;
 8000384:	4a12      	ldr	r2, [pc, #72]	; (80003d0 <USB_setup+0x5e>)
 8000386:	6853      	ldr	r3, [r2, #4]
 8000388:	f023 0301 	bic.w	r3, r3, #1
 800038c:	6053      	str	r3, [r2, #4]
  USB->CNTR   = USB_CNTR_FRES; // Force USB Reset
 800038e:	2201      	movs	r2, #1
 8000390:	4b10      	ldr	r3, [pc, #64]	; (80003d4 <USB_setup+0x62>)
 8000392:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
 8000396:	4a10      	ldr	r2, [pc, #64]	; (80003d8 <USB_setup+0x66>)
  for(uint32_t ctr = 0; ctr < 100000; ++ctr) asm volatile("nop"); // wait >1ms
 8000398:	bf00      	nop
 800039a:	3a01      	subs	r2, #1
 800039c:	d1fc      	bne.n	8000398 <USB_setup+0x26>
  USB->CNTR   = 0;
 800039e:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
  USB->BTABLE = 0;
 80003a2:	f8a3 2050 	strh.w	r2, [r3, #80]	; 0x50
  USB->DADDR  = 0;
 80003a6:	f8a3 204c 	strh.w	r2, [r3, #76]	; 0x4c
  USB->ISTR   = 0;
 80003aa:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
  USB->CNTR   = USB_CNTR_RESETM | USB_CNTR_WKUPM;
 80003ae:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
 80003b2:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
 * Enable a device specific interupt in the NVIC interrupt controller.
 * The interrupt number cannot be a negative value.
 */
static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
 80003b6:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
 80003ba:	4b08      	ldr	r3, [pc, #32]	; (80003dc <USB_setup+0x6a>)
 80003bc:	601a      	str	r2, [r3, #0]
  NVIC_EnableIRQ(USB_LP_IRQn);
  SYSCFG->PMC |= SYSCFG_PMC_USB_PU;
 80003be:	4a04      	ldr	r2, [pc, #16]	; (80003d0 <USB_setup+0x5e>)
 80003c0:	6853      	ldr	r3, [r2, #4]
 80003c2:	f043 0301 	orr.w	r3, r3, #1
 80003c6:	6053      	str	r3, [r2, #4]
}
 80003c8:	4770      	bx	lr
 80003ca:	bf00      	nop
 80003cc:	40023800 	andmi	r3, r2, r0, lsl #16
 80003d0:	40010000 	andmi	r0, r1, r0
 80003d4:	40005c00 	andmi	r5, r0, r0, lsl #24
 80003d8:	000186a0 	andeq	r8, r1, r0, lsr #13
 80003dc:	e000e100 	and	lr, r0, r0, lsl #2

080003e0 <usb_ep_init>:
    if( bytesread >= setup_packet.wLength )usb_ep_write(0, NULL, 0);
  }
}

static uint16_t lastaddr = LASTADDR_DEFAULT;
void usb_ep_init(uint8_t epnum, uint8_t ep_type, uint16_t size, epfunc_t func){
 80003e0:	b5f0      	push	{r4, r5, r6, r7, lr}
  uint8_t dir_in = (epnum & 0x80);
  epnum &= 0x0F;
 80003e2:	f000 070f 	and.w	r7, r0, #15
  
  if(dir_in){
 80003e6:	fa4f fc80 	sxtb.w	ip, r0
 80003ea:	00bd      	lsls	r5, r7, #2
 80003ec:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 80003f0:	f1bc 0f00 	cmp.w	ip, #0
 80003f4:	f505 45b8 	add.w	r5, r5, #23552	; 0x5c00
 80003f8:	da17      	bge.n	800042a <usb_ep_init+0x4a>
    ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 80003fa:	8828      	ldrh	r0, [r5, #0]
 80003fc:	f020 00c0 	bic.w	r0, r0, #192	; 0xc0
 8000400:	0500      	lsls	r0, r0, #20
 8000402:	0d00      	lsrs	r0, r0, #20
 8000404:	f440 4000 	orr.w	r0, r0, #32768	; 0x8000
 8000408:	f040 0080 	orr.w	r0, r0, #128	; 0x80
 800040c:	8028      	strh	r0, [r5, #0]
  }else{
    ENDP_STAT_RX(epnum, USB_EP_RX_DIS);
  }
  
  uint16_t buf = USB_EPx(epnum);
 800040e:	882c      	ldrh	r4, [r5, #0]
  buf = (buf & ~(USB_EP_DTOG_RX | USB_EP_DTOG_TX | USB_EPTX_STAT | USB_EPRX_STAT)) | USB_EP_CTR_RX | USB_EP_CTR_TX;
  buf = (buf & ~USB_EPADDR_FIELD) | epnum;
  //buf = (buf & ~USB_EP_T_FIELD) | ep_type;
  buf &=~ USB_EP_T_FIELD;
  switch(ep_type){
 8000410:	2902      	cmp	r1, #2
 8000412:	f404 6410 	and.w	r4, r4, #2304	; 0x900
 8000416:	ea44 0407 	orr.w	r4, r4, r7
 800041a:	d011      	beq.n	8000440 <usb_ep_init+0x60>
 800041c:	2903      	cmp	r1, #3
 800041e:	d035      	beq.n	800048c <usb_ep_init+0xac>
 8000420:	2900      	cmp	r1, #0
 8000422:	d136      	bne.n	8000492 <usb_ep_init+0xb2>
    case USB_ENDP_CTRL: buf |= USB_EP_CONTROL; break;
 8000424:	f444 4402 	orr.w	r4, r4, #33280	; 0x8200
 8000428:	e00c      	b.n	8000444 <usb_ep_init+0x64>
    ENDP_STAT_RX(epnum, USB_EP_RX_DIS);
 800042a:	882c      	ldrh	r4, [r5, #0]
 800042c:	f024 04f0 	bic.w	r4, r4, #240	; 0xf0
 8000430:	04a4      	lsls	r4, r4, #18
 8000432:	0ca4      	lsrs	r4, r4, #18
 8000434:	f444 4400 	orr.w	r4, r4, #32768	; 0x8000
 8000438:	f044 0480 	orr.w	r4, r4, #128	; 0x80
 800043c:	802c      	strh	r4, [r5, #0]
 800043e:	e7e6      	b.n	800040e <usb_ep_init+0x2e>
  buf &=~ USB_EP_T_FIELD;
 8000440:	f444 4400 	orr.w	r4, r4, #32768	; 0x8000
    case USB_ENDP_BULK: buf |= USB_EP_BULK; break;
    case USB_ENDP_INTR: buf |= USB_EP_INTERRUPT; break;
    default: buf |= USB_EP_ISOCHRONOUS; //в дескрипторах изохронные точки могут иметь расширенные настройки
 8000444:	f044 0480 	orr.w	r4, r4, #128	; 0x80
  }
  USB_EPx(epnum) = buf;
 8000448:	802c      	strh	r4, [r5, #0]
  
  if( dir_in ){
 800044a:	4825      	ldr	r0, [pc, #148]	; (80004e0 <usb_ep_init+0x100>)
 800044c:	013c      	lsls	r4, r7, #4
 800044e:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
 8000452:	f1bc 0f00 	cmp.w	ip, #0
 8000456:	8806      	ldrh	r6, [r0, #0]
 8000458:	f504 44c0 	add.w	r4, r4, #24576	; 0x6000
 800045c:	da1c      	bge.n	8000498 <usb_ep_init+0xb8>
    usb_epdata[epnum].usb_tx_addr = lastaddr;
 800045e:	6026      	str	r6, [r4, #0]
    epfunc_in[epnum] = func;
 8000460:	4c20      	ldr	r4, [pc, #128]	; (80004e4 <usb_ep_init+0x104>)
    if((ep_type & 0x03) == USB_ENDP_ISO){
 8000462:	f001 0103 	and.w	r1, r1, #3
    epfunc_in[epnum] = func;
 8000466:	f844 3027 	str.w	r3, [r4, r7, lsl #2]
    if((ep_type & 0x03) == USB_ENDP_ISO){
 800046a:	f640 733f 	movw	r3, #3903	; 0xf3f
 800046e:	2901      	cmp	r1, #1
      ENDP_STAT_TX(epnum, USB_EP_TX_VALID);
 8000470:	8829      	ldrh	r1, [r5, #0]
 8000472:	ea03 0301 	and.w	r3, r3, r1
 8000476:	f483 4300 	eor.w	r3, r3, #32768	; 0x8000
 800047a:	bf0c      	ite	eq
 800047c:	f083 03b0 	eoreq.w	r3, r3, #176	; 0xb0
    }else{
      ENDP_STAT_TX(epnum, USB_EP_TX_NAK);
 8000480:	f083 03a0 	eorne.w	r3, r3, #160	; 0xa0
      usb_epdata[epnum].rx_num_blocks = size / 32 - 1;
    }
    epfunc_out[epnum] = func;
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
  }
  lastaddr += size;
 8000484:	4432      	add	r2, r6
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
 8000486:	802b      	strh	r3, [r5, #0]
  lastaddr += size;
 8000488:	8002      	strh	r2, [r0, #0]
}
 800048a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    case USB_ENDP_INTR: buf |= USB_EP_INTERRUPT; break;
 800048c:	f444 4406 	orr.w	r4, r4, #34304	; 0x8600
 8000490:	e7d8      	b.n	8000444 <usb_ep_init+0x64>
    default: buf |= USB_EP_ISOCHRONOUS; //в дескрипторах изохронные точки могут иметь расширенные настройки
 8000492:	f444 4404 	orr.w	r4, r4, #33792	; 0x8400
 8000496:	e7d5      	b.n	8000444 <usb_ep_init+0x64>
    usb_epdata[epnum].usb_rx_addr = lastaddr;
 8000498:	60a6      	str	r6, [r4, #8]
      usb_epdata[epnum].rx_blocksize = 0;
 800049a:	89a1      	ldrh	r1, [r4, #12]
    if(size < 64){
 800049c:	2a3f      	cmp	r2, #63	; 0x3f
      usb_epdata[epnum].rx_blocksize = 1;
 800049e:	bf8b      	itete	hi
 80004a0:	f441 4100 	orrhi.w	r1, r1, #32768	; 0x8000
      usb_epdata[epnum].rx_blocksize = 0;
 80004a4:	f36f 31cf 	bfcls	r1, #15, #1
      usb_epdata[epnum].rx_blocksize = 1;
 80004a8:	81a1      	strhhi	r1, [r4, #12]
      usb_epdata[epnum].rx_blocksize = 0;
 80004aa:	81a1      	strhls	r1, [r4, #12]
      usb_epdata[epnum].rx_num_blocks = size / 32 - 1;
 80004ac:	f8b4 c00c 	ldrh.w	ip, [r4, #12]
 80004b0:	bf8a      	itet	hi
 80004b2:	0951      	lsrhi	r1, r2, #5
      usb_epdata[epnum].rx_num_blocks = size / 2;
 80004b4:	f3c2 0144 	ubfxls	r1, r2, #1, #5
      usb_epdata[epnum].rx_num_blocks = size / 32 - 1;
 80004b8:	f101 31ff 	addhi.w	r1, r1, #4294967295	; 0xffffffff
 80004bc:	f361 2c8e 	bfi	ip, r1, #10, #5
    epfunc_out[epnum] = func;
 80004c0:	4909      	ldr	r1, [pc, #36]	; (80004e8 <usb_ep_init+0x108>)
      usb_epdata[epnum].rx_num_blocks = size / 32 - 1;
 80004c2:	f8a4 c00c 	strh.w	ip, [r4, #12]
    epfunc_out[epnum] = func;
 80004c6:	f841 3027 	str.w	r3, [r1, r7, lsl #2]
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
 80004ca:	882b      	ldrh	r3, [r5, #0]
 80004cc:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80004d0:	049b      	lsls	r3, r3, #18
 80004d2:	0c9b      	lsrs	r3, r3, #18
 80004d4:	f483 4330 	eor.w	r3, r3, #45056	; 0xb000
 80004d8:	f083 0380 	eor.w	r3, r3, #128	; 0x80
 80004dc:	e7d2      	b.n	8000484 <usb_ep_init+0xa4>
 80004de:	bf00      	nop
 80004e0:	20000000 	andcs	r0, r0, r0
 80004e4:	20000028 	andcs	r0, r0, r8, lsr #32
 80004e8:	20000048 	andcs	r0, r0, r8, asr #32

080004ec <usb_ep_init_double>:

void usb_ep_init_double(uint8_t epnum, uint8_t ep_type, uint16_t size, epfunc_t func){
 80004ec:	b5f0      	push	{r4, r5, r6, r7, lr}
  uint8_t dir_in = (epnum & 0x80);
  epnum &= 0x0F;
  
  ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 80004ee:	f248 0780 	movw	r7, #32896	; 0x8080
  epnum &= 0x0F;
 80004f2:	f000 060f 	and.w	r6, r0, #15
  ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 80004f6:	00b5      	lsls	r5, r6, #2
 80004f8:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 80004fc:	f505 45b8 	add.w	r5, r5, #23552	; 0x5c00
 8000500:	882c      	ldrh	r4, [r5, #0]
  uint16_t buf = USB_EPx(epnum);
  buf = (buf & ~(USB_EP_DTOG_RX | USB_EP_DTOG_TX | USB_EPTX_STAT | USB_EPRX_STAT)) | USB_EP_CTR_RX | USB_EP_CTR_TX;
  buf = (buf & ~USB_EPADDR_FIELD) | epnum;
  
  buf &=~ USB_EP_T_FIELD;
  switch(ep_type){
 8000502:	2902      	cmp	r1, #2
  ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 8000504:	f024 04c0 	bic.w	r4, r4, #192	; 0xc0
 8000508:	ea4f 5404 	mov.w	r4, r4, lsl #20
 800050c:	ea4f 5414 	mov.w	r4, r4, lsr #20
 8000510:	ea44 0407 	orr.w	r4, r4, r7
 8000514:	802c      	strh	r4, [r5, #0]
  ENDP_STAT_RX(epnum, USB_EP_RX_DIS);
 8000516:	882c      	ldrh	r4, [r5, #0]
 8000518:	f024 04f0 	bic.w	r4, r4, #240	; 0xf0
 800051c:	ea4f 4484 	mov.w	r4, r4, lsl #18
 8000520:	ea4f 4494 	mov.w	r4, r4, lsr #18
 8000524:	ea44 0407 	orr.w	r4, r4, r7
 8000528:	802c      	strh	r4, [r5, #0]
  uint16_t buf = USB_EPx(epnum);
 800052a:	882c      	ldrh	r4, [r5, #0]
  buf &=~ USB_EP_T_FIELD;
 800052c:	f404 6410 	and.w	r4, r4, #2304	; 0x900
 8000530:	ea44 0406 	orr.w	r4, r4, r6
  switch(ep_type){
 8000534:	d008      	beq.n	8000548 <usb_ep_init_double+0x5c>
 8000536:	2903      	cmp	r1, #3
 8000538:	d038      	beq.n	80005ac <usb_ep_init_double+0xc0>
 800053a:	2900      	cmp	r1, #0
 800053c:	d139      	bne.n	80005b2 <usb_ep_init_double+0xc6>
    case USB_ENDP_CTRL: buf |= USB_EP_CONTROL; break;
 800053e:	f444 4102 	orr.w	r1, r4, #33280	; 0x8200
    case USB_ENDP_BULK: buf |= USB_EP_BULK; break;
    case USB_ENDP_INTR: buf |= USB_EP_INTERRUPT; break;
    default: buf |= USB_EP_ISOCHRONOUS; //в дескрипторах изохронные точки могут иметь расширенные настройки
 8000542:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8000546:	e001      	b.n	800054c <usb_ep_init_double+0x60>
  buf &=~ USB_EP_T_FIELD;
 8000548:	ea44 0107 	orr.w	r1, r4, r7
  }
  USB_EPx(epnum) = buf;
 800054c:	f8df c0e4 	ldr.w	ip, [pc, #228]	; 8000634 <usb_ep_init_double+0x148>
 8000550:	8029      	strh	r1, [r5, #0]
  
  if( dir_in ){
 8000552:	f8bc 4000 	ldrh.w	r4, [ip]
 8000556:	0131      	lsls	r1, r6, #4
 8000558:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 800055c:	f010 0f80 	tst.w	r0, #128	; 0x80
 8000560:	f501 41c0 	add.w	r1, r1, #24576	; 0x6000
 8000564:	eb02 0704 	add.w	r7, r2, r4
 8000568:	4660      	mov	r0, ip
 800056a:	d025      	beq.n	80005b8 <usb_ep_init_double+0xcc>
    usb_epdata[epnum].usb_tx_addr = lastaddr;
 800056c:	600c      	str	r4, [r1, #0]
    usb_epdata[epnum].usb_rx_addr = lastaddr + size;
 800056e:	608f      	str	r7, [r1, #8]
    ENDP_STAT_TX(epnum, USB_EP_TX_NAK);
 8000570:	8829      	ldrh	r1, [r5, #0]
 8000572:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8000576:	0509      	lsls	r1, r1, #20
 8000578:	0d09      	lsrs	r1, r1, #20
 800057a:	f481 4100 	eor.w	r1, r1, #32768	; 0x8000
 800057e:	f081 01a0 	eor.w	r1, r1, #160	; 0xa0
 8000582:	8029      	strh	r1, [r5, #0]
    ENDP_STAT_RX(epnum, USB_EP_RX_NAK);
 8000584:	8829      	ldrh	r1, [r5, #0]
 8000586:	f021 01f0 	bic.w	r1, r1, #240	; 0xf0
 800058a:	0489      	lsls	r1, r1, #18
 800058c:	0c89      	lsrs	r1, r1, #18
 800058e:	f481 4120 	eor.w	r1, r1, #40960	; 0xa000
 8000592:	f081 0180 	eor.w	r1, r1, #128	; 0x80
      usb_epdata[epnum].rx_blocksize = usb_epdata[epnum].tx_blocksize = 1;
      if(size < 32)size = 32;
      usb_epdata[epnum].rx_num_blocks = usb_epdata[epnum].tx_num_blocks = size / 32 - 1;
    }
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
    ENDP_STAT_TX(epnum, USB_EP_TX_VALID);
 8000596:	8029      	strh	r1, [r5, #0]
  }
  epfunc_in[epnum] = func;
 8000598:	4924      	ldr	r1, [pc, #144]	; (800062c <usb_ep_init_double+0x140>)
  epfunc_out[epnum]= func;
    
  lastaddr += 2*size;
 800059a:	eb04 0242 	add.w	r2, r4, r2, lsl #1
  epfunc_in[epnum] = func;
 800059e:	f841 3026 	str.w	r3, [r1, r6, lsl #2]
  epfunc_out[epnum]= func;
 80005a2:	4923      	ldr	r1, [pc, #140]	; (8000630 <usb_ep_init_double+0x144>)
  lastaddr += 2*size;
 80005a4:	8002      	strh	r2, [r0, #0]
  epfunc_out[epnum]= func;
 80005a6:	f841 3026 	str.w	r3, [r1, r6, lsl #2]
}
 80005aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
    case USB_ENDP_INTR: buf |= USB_EP_INTERRUPT; break;
 80005ac:	f444 4106 	orr.w	r1, r4, #34304	; 0x8600
 80005b0:	e7c7      	b.n	8000542 <usb_ep_init_double+0x56>
    default: buf |= USB_EP_ISOCHRONOUS; //в дескрипторах изохронные точки могут иметь расширенные настройки
 80005b2:	f444 4104 	orr.w	r1, r4, #33792	; 0x8400
 80005b6:	e7c4      	b.n	8000542 <usb_ep_init_double+0x56>
    usb_epdata[epnum].usb_rx_addr = lastaddr;
 80005b8:	608c      	str	r4, [r1, #8]
    if(size < 64){
 80005ba:	2a3f      	cmp	r2, #63	; 0x3f
    usb_epdata[epnum].usb_tx_addr = lastaddr + size;
 80005bc:	600f      	str	r7, [r1, #0]
      usb_epdata[epnum].rx_blocksize = usb_epdata[epnum].tx_blocksize = 0;
 80005be:	888f      	ldrh	r7, [r1, #4]
    if(size < 64){
 80005c0:	d828      	bhi.n	8000614 <usb_ep_init_double+0x128>
      usb_epdata[epnum].rx_blocksize = usb_epdata[epnum].tx_blocksize = 0;
 80005c2:	f36f 37cf 	bfc	r7, #15, #1
 80005c6:	808f      	strh	r7, [r1, #4]
 80005c8:	898f      	ldrh	r7, [r1, #12]
 80005ca:	f36f 37cf 	bfc	r7, #15, #1
 80005ce:	818f      	strh	r7, [r1, #12]
      usb_epdata[epnum].rx_num_blocks = usb_epdata[epnum].tx_num_blocks = size / 2;
 80005d0:	f3c2 0744 	ubfx	r7, r2, #1, #5
      usb_epdata[epnum].rx_num_blocks = usb_epdata[epnum].tx_num_blocks = size / 32 - 1;
 80005d4:	f8b1 c004 	ldrh.w	ip, [r1, #4]
 80005d8:	f367 2c8e 	bfi	ip, r7, #10, #5
 80005dc:	f8a1 c004 	strh.w	ip, [r1, #4]
 80005e0:	f8b1 c00c 	ldrh.w	ip, [r1, #12]
 80005e4:	f367 2c8e 	bfi	ip, r7, #10, #5
 80005e8:	f8a1 c00c 	strh.w	ip, [r1, #12]
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
 80005ec:	8829      	ldrh	r1, [r5, #0]
 80005ee:	f021 01f0 	bic.w	r1, r1, #240	; 0xf0
 80005f2:	0489      	lsls	r1, r1, #18
 80005f4:	0c89      	lsrs	r1, r1, #18
 80005f6:	f481 4130 	eor.w	r1, r1, #45056	; 0xb000
 80005fa:	f081 0180 	eor.w	r1, r1, #128	; 0x80
 80005fe:	8029      	strh	r1, [r5, #0]
    ENDP_STAT_TX(epnum, USB_EP_TX_VALID);
 8000600:	8829      	ldrh	r1, [r5, #0]
 8000602:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8000606:	0509      	lsls	r1, r1, #20
 8000608:	0d09      	lsrs	r1, r1, #20
 800060a:	f481 4100 	eor.w	r1, r1, #32768	; 0x8000
 800060e:	f081 01b0 	eor.w	r1, r1, #176	; 0xb0
 8000612:	e7c0      	b.n	8000596 <usb_ep_init_double+0xaa>
      usb_epdata[epnum].rx_blocksize = usb_epdata[epnum].tx_blocksize = 1;
 8000614:	f447 4700 	orr.w	r7, r7, #32768	; 0x8000
 8000618:	808f      	strh	r7, [r1, #4]
 800061a:	898f      	ldrh	r7, [r1, #12]
 800061c:	f447 4700 	orr.w	r7, r7, #32768	; 0x8000
 8000620:	818f      	strh	r7, [r1, #12]
      usb_epdata[epnum].rx_num_blocks = usb_epdata[epnum].tx_num_blocks = size / 32 - 1;
 8000622:	0957      	lsrs	r7, r2, #5
 8000624:	3f01      	subs	r7, #1
 8000626:	f007 071f 	and.w	r7, r7, #31
 800062a:	e7d3      	b.n	80005d4 <usb_ep_init_double+0xe8>
 800062c:	20000028 	andcs	r0, r0, r8, lsr #32
 8000630:	20000048 	andcs	r0, r0, r8, asr #32
 8000634:	20000000 	andcs	r0, r0, r0

08000638 <USB_LP_IRQHandler>:

// standard IRQ handler
void USB_LP_IRQHandler(){
 8000638:	b538      	push	{r3, r4, r5, lr}
  if(USB->ISTR & USB_ISTR_RESET){
 800063a:	4c42      	ldr	r4, [pc, #264]	; (8000744 <USB_LP_IRQHandler+0x10c>)
 800063c:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 8000640:	055d      	lsls	r5, r3, #21
 8000642:	d52c      	bpl.n	800069e <USB_LP_IRQHandler+0x66>
    usb_class_disconnect();
 8000644:	f7ff fe8f 	bl	8000366 <usb_class_disconnect>
    USB->CNTR = USB_CNTR_RESETM | USB_CNTR_CTRM | USB_CNTR_SUSPM | USB_CNTR_WKUPM;
 8000648:	f44f 431c 	mov.w	r3, #39936	; 0x9c00
    lastaddr = LASTADDR_DEFAULT;
 800064c:	2240      	movs	r2, #64	; 0x40
    USB->CNTR = USB_CNTR_RESETM | USB_CNTR_CTRM | USB_CNTR_SUSPM | USB_CNTR_WKUPM;
 800064e:	f8a4 3040 	strh.w	r3, [r4, #64]	; 0x40
    lastaddr = LASTADDR_DEFAULT;
 8000652:	4b3d      	ldr	r3, [pc, #244]	; (8000748 <USB_LP_IRQHandler+0x110>)
 8000654:	493d      	ldr	r1, [pc, #244]	; (800074c <USB_LP_IRQHandler+0x114>)
 8000656:	801a      	strh	r2, [r3, #0]
    USB->DADDR = USB_DADDR_EF;
 8000658:	2380      	movs	r3, #128	; 0x80
    for(uint8_t i=0; i<STM32ENDPOINTS; i++){
      epfunc_in[i] = epfunc_out[i] = NULL;
 800065a:	2200      	movs	r2, #0
    USB->DADDR = USB_DADDR_EF;
 800065c:	f8a4 304c 	strh.w	r3, [r4, #76]	; 0x4c
 8000660:	2408      	movs	r4, #8
 8000662:	4b3b      	ldr	r3, [pc, #236]	; (8000750 <USB_LP_IRQHandler+0x118>)
      epfunc_in[i] = epfunc_out[i] = NULL;
 8000664:	3c01      	subs	r4, #1
    for(uint8_t i=0; i<STM32ENDPOINTS; i++){
 8000666:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
      epfunc_in[i] = epfunc_out[i] = NULL;
 800066a:	f841 2b04 	str.w	r2, [r1], #4
 800066e:	f843 2b04 	str.w	r2, [r3], #4
    for(uint8_t i=0; i<STM32ENDPOINTS; i++){
 8000672:	d1f7      	bne.n	8000664 <USB_LP_IRQHandler+0x2c>
    }
    // state is default - wait for enumeration
    USB->ISTR = (uint16_t)~USB_ISTR_RESET;
 8000674:	f64f 32ff 	movw	r2, #64511	; 0xfbff
 8000678:	4b32      	ldr	r3, [pc, #200]	; (8000744 <USB_LP_IRQHandler+0x10c>)
    usb_ep_init(0x00, USB_ENDP_CTRL, USB_EP0_BUFSZ, ep0_out);
 800067a:	4621      	mov	r1, r4
    USB->ISTR = (uint16_t)~USB_ISTR_RESET;
 800067c:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
    usb_ep_init(0x00, USB_ENDP_CTRL, USB_EP0_BUFSZ, ep0_out);
 8000680:	4620      	mov	r0, r4
 8000682:	4b34      	ldr	r3, [pc, #208]	; (8000754 <USB_LP_IRQHandler+0x11c>)
 8000684:	2208      	movs	r2, #8
 8000686:	f7ff feab 	bl	80003e0 <usb_ep_init>
    usb_ep_init(0x80, USB_ENDP_CTRL, USB_EP0_BUFSZ, ep0_in);
 800068a:	4b33      	ldr	r3, [pc, #204]	; (8000758 <USB_LP_IRQHandler+0x120>)
 800068c:	2208      	movs	r2, #8
 800068e:	4621      	mov	r1, r4
 8000690:	2080      	movs	r0, #128	; 0x80
 8000692:	f7ff fea5 	bl	80003e0 <usb_ep_init>
    ep0_buf = NULL;
 8000696:	4b31      	ldr	r3, [pc, #196]	; (800075c <USB_LP_IRQHandler+0x124>)
 8000698:	601c      	str	r4, [r3, #0]
    usb_class_init();
 800069a:	f000 f9e3 	bl	8000a64 <usb_class_init>
  }
  
  if(USB->ISTR & USB_ISTR_CTR){
 800069e:	4b29      	ldr	r3, [pc, #164]	; (8000744 <USB_LP_IRQHandler+0x10c>)
 80006a0:	f8b3 2044 	ldrh.w	r2, [r3, #68]	; 0x44
 80006a4:	0414      	lsls	r4, r2, #16
 80006a6:	d529      	bpl.n	80006fc <USB_LP_IRQHandler+0xc4>
    uint8_t epnum = USB->ISTR & USB_ISTR_EP_ID;
 80006a8:	f8b3 5044 	ldrh.w	r5, [r3, #68]	; 0x44
 80006ac:	f005 050f 	and.w	r5, r5, #15
    if(USB_EPx(epnum) & USB_EP_CTR_RX){ //OUT
 80006b0:	00ac      	lsls	r4, r5, #2
 80006b2:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
 80006b6:	f504 44b8 	add.w	r4, r4, #23552	; 0x5c00
 80006ba:	8823      	ldrh	r3, [r4, #0]
 80006bc:	0418      	lsls	r0, r3, #16
 80006be:	d50c      	bpl.n	80006da <USB_LP_IRQHandler+0xa2>
      epfunc_out[epnum](epnum);
 80006c0:	4b22      	ldr	r3, [pc, #136]	; (800074c <USB_LP_IRQHandler+0x114>)
 80006c2:	4628      	mov	r0, r5
 80006c4:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 80006c8:	4798      	blx	r3
      ENDP_CTR_RX_CLR(epnum);
 80006ca:	8823      	ldrh	r3, [r4, #0]
 80006cc:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80006d0:	051b      	lsls	r3, r3, #20
 80006d2:	0d1b      	lsrs	r3, r3, #20
 80006d4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80006d8:	8023      	strh	r3, [r4, #0]
    }
    if(USB_EPx(epnum) & USB_EP_CTR_TX){//IN
 80006da:	8823      	ldrh	r3, [r4, #0]
 80006dc:	0619      	lsls	r1, r3, #24
 80006de:	d50d      	bpl.n	80006fc <USB_LP_IRQHandler+0xc4>
      epfunc_in[epnum](epnum | 0x80);
 80006e0:	4b1b      	ldr	r3, [pc, #108]	; (8000750 <USB_LP_IRQHandler+0x118>)
 80006e2:	f045 0080 	orr.w	r0, r5, #128	; 0x80
 80006e6:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 80006ea:	4798      	blx	r3
      ENDP_CTR_TX_CLR(epnum);
 80006ec:	8823      	ldrh	r3, [r4, #0]
 80006ee:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80006f2:	051b      	lsls	r3, r3, #20
 80006f4:	0d1b      	lsrs	r3, r3, #20
 80006f6:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80006fa:	8023      	strh	r3, [r4, #0]
    }
  }
  
  if(USB->ISTR & USB_ISTR_SUSP){ // suspend -> still no connection, may sleep
 80006fc:	4c11      	ldr	r4, [pc, #68]	; (8000744 <USB_LP_IRQHandler+0x10c>)
 80006fe:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 8000702:	051a      	lsls	r2, r3, #20
 8000704:	d50b      	bpl.n	800071e <USB_LP_IRQHandler+0xe6>
    usb_class_disconnect();
 8000706:	f7ff fe2e 	bl	8000366 <usb_class_disconnect>
    USB->CNTR |= USB_CNTR_FSUSP | USB_CNTR_LP_MODE;
 800070a:	f8b4 3040 	ldrh.w	r3, [r4, #64]	; 0x40
 800070e:	f043 030c 	orr.w	r3, r3, #12
 8000712:	f8a4 3040 	strh.w	r3, [r4, #64]	; 0x40
    USB->ISTR = (uint16_t)~USB_ISTR_SUSP;
 8000716:	f24f 73ff 	movw	r3, #63487	; 0xf7ff
 800071a:	f8a4 3044 	strh.w	r3, [r4, #68]	; 0x44
  }
  
  if(USB->ISTR & USB_ISTR_WKUP){ // wakeup
 800071e:	4a09      	ldr	r2, [pc, #36]	; (8000744 <USB_LP_IRQHandler+0x10c>)
 8000720:	f8b2 3044 	ldrh.w	r3, [r2, #68]	; 0x44
 8000724:	04db      	lsls	r3, r3, #19
 8000726:	d50b      	bpl.n	8000740 <USB_LP_IRQHandler+0x108>
    USB->CNTR &= ~(USB_CNTR_FSUSP | USB_CNTR_LP_MODE); // clear suspend flags
 8000728:	f8b2 3040 	ldrh.w	r3, [r2, #64]	; 0x40
 800072c:	f023 030c 	bic.w	r3, r3, #12
 8000730:	041b      	lsls	r3, r3, #16
 8000732:	0c1b      	lsrs	r3, r3, #16
 8000734:	f8a2 3040 	strh.w	r3, [r2, #64]	; 0x40
    USB->ISTR = (uint16_t)~USB_ISTR_WKUP;
 8000738:	f64e 73ff 	movw	r3, #61439	; 0xefff
 800073c:	f8a2 3044 	strh.w	r3, [r2, #68]	; 0x44
  }
}
 8000740:	bd38      	pop	{r3, r4, r5, pc}
 8000742:	bf00      	nop
 8000744:	40005c00 	andmi	r5, r0, r0, lsl #24
 8000748:	20000000 	andcs	r0, r0, r0
 800074c:	20000048 	andcs	r0, r0, r8, asr #32
 8000750:	20000028 	andcs	r0, r0, r8, lsr #32
 8000754:	0800086b 	stmdaeq	r0, {r0, r1, r3, r5, r6, fp}
 8000758:	080007b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, r9, sl}
 800075c:	20000014 	andcs	r0, r0, r4, lsl r0

08000760 <_usb_ep_write>:
      uint32_t rx_blocksize:1;
    };
  };
}pma_descr_t;

void _usb_ep_write(uint8_t idx, const uint8_t *buf, uint16_t size){
 8000760:	b5f0      	push	{r4, r5, r6, r7, lr}
  pma_descr_t *descr = &((pma_descr_t*)usb_epdata)[idx];
  uint16_t N2 = (size + 1) >> 1;
  // the buffer is 16-bit, so we should copy data as it would be uint16_t
  uint16_t *buf16 = (uint16_t *)buf;
  uint32_t *out = (uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
  for(uint16_t i = 0; i < N2; ++i, ++out){
 8000762:	2500      	movs	r5, #0
  pma_descr_t *descr = &((pma_descr_t*)usb_epdata)[idx];
 8000764:	00c4      	lsls	r4, r0, #3
 8000766:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
 800076a:	f504 44c0 	add.w	r4, r4, #24576	; 0x6000
  uint32_t *out = (uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
 800076e:	6823      	ldr	r3, [r4, #0]
  uint16_t N2 = (size + 1) >> 1;
 8000770:	1c56      	adds	r6, r2, #1
  uint32_t *out = (uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
 8000772:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
 8000776:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
  uint16_t N2 = (size + 1) >> 1;
 800077a:	0876      	lsrs	r6, r6, #1
  uint32_t *out = (uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
 800077c:	005b      	lsls	r3, r3, #1
  for(uint16_t i = 0; i < N2; ++i, ++out){
 800077e:	b2af      	uxth	r7, r5
 8000780:	42be      	cmp	r6, r7
 8000782:	d811      	bhi.n	80007a8 <_usb_ep_write+0x48>
    *out = buf16[i];
  }
  descr->count = size;
  
  ENDP_STAT_TX((idx/2), USB_EP_TX_VALID);
 8000784:	0840      	lsrs	r0, r0, #1
 8000786:	0080      	lsls	r0, r0, #2
 8000788:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
  descr->count = size;
 800078c:	6062      	str	r2, [r4, #4]
  ENDP_STAT_TX((idx/2), USB_EP_TX_VALID);
 800078e:	f500 40b8 	add.w	r0, r0, #23552	; 0x5c00
 8000792:	8803      	ldrh	r3, [r0, #0]
 8000794:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 8000798:	051b      	lsls	r3, r3, #20
 800079a:	0d1b      	lsrs	r3, r3, #20
 800079c:	f483 4300 	eor.w	r3, r3, #32768	; 0x8000
 80007a0:	f083 03b0 	eor.w	r3, r3, #176	; 0xb0
 80007a4:	8003      	strh	r3, [r0, #0]
}
 80007a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    *out = buf16[i];
 80007a8:	f831 7015 	ldrh.w	r7, [r1, r5, lsl #1]
 80007ac:	f843 7025 	str.w	r7, [r3, r5, lsl #2]
 80007b0:	3501      	adds	r5, #1
 80007b2:	e7e4      	b.n	800077e <_usb_ep_write+0x1e>

080007b4 <ep0_in>:
static void ep0_in(uint8_t epnum){
 80007b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if( (USB->DADDR & USB_DADDR_ADD) != USB_Addr ){
 80007b6:	4b14      	ldr	r3, [pc, #80]	; (8000808 <ep0_in+0x54>)
 80007b8:	4c14      	ldr	r4, [pc, #80]	; (800080c <ep0_in+0x58>)
 80007ba:	f8b3 104c 	ldrh.w	r1, [r3, #76]	; 0x4c
 80007be:	7922      	ldrb	r2, [r4, #4]
 80007c0:	f001 017f 	and.w	r1, r1, #127	; 0x7f
 80007c4:	4291      	cmp	r1, r2
    USB->DADDR = USB_DADDR_EF | USB_Addr;
 80007c6:	bf1c      	itt	ne
 80007c8:	f042 0280 	orrne.w	r2, r2, #128	; 0x80
 80007cc:	f8a3 204c 	strhne.w	r2, [r3, #76]	; 0x4c
  if( (USB_EPx(0) & USB_EPTX_STAT) == USB_EP_TX_VALID )return;
 80007d0:	881b      	ldrh	r3, [r3, #0]
 80007d2:	f003 0330 	and.w	r3, r3, #48	; 0x30
 80007d6:	2b30      	cmp	r3, #48	; 0x30
 80007d8:	d014      	beq.n	8000804 <ep0_in+0x50>
  if(ep0_buf == NULL)return;
 80007da:	6825      	ldr	r5, [r4, #0]
 80007dc:	b195      	cbz	r5, 8000804 <ep0_in+0x50>
  uint16_t left = ep0_count;
 80007de:	88e7      	ldrh	r7, [r4, #6]
#define bLENGTH 0
#define wTOTALLENGTH 0,0

void _usb_ep_write(uint8_t idx, const uint8_t *buf, uint16_t size);
static inline void usb_ep_write(uint8_t epnum, const uint8_t *buf, uint16_t size){
  _usb_ep_write((epnum & 0x0F)*2, buf, size);
 80007e0:	4629      	mov	r1, r5
 80007e2:	2f08      	cmp	r7, #8
 80007e4:	463e      	mov	r6, r7
 80007e6:	bf28      	it	cs
 80007e8:	2608      	movcs	r6, #8
 80007ea:	2000      	movs	r0, #0
 80007ec:	4632      	mov	r2, r6
 80007ee:	f7ff ffb7 	bl	8000760 <_usb_ep_write>
  if(left < USB_EP0_BUFSZ){
 80007f2:	2f07      	cmp	r7, #7
  ep0_count -= left;
 80007f4:	eba7 0306 	sub.w	r3, r7, r6
 80007f8:	80e3      	strh	r3, [r4, #6]
    ep0_buf = NULL;
 80007fa:	bf93      	iteet	ls
 80007fc:	2300      	movls	r3, #0
  ep0_buf += left;
 80007fe:	19ad      	addhi	r5, r5, r6
 8000800:	6025      	strhi	r5, [r4, #0]
    ep0_buf = NULL;
 8000802:	6023      	strls	r3, [r4, #0]
}
 8000804:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000806:	bf00      	nop
 8000808:	40005c00 	andmi	r5, r0, r0, lsl #24
 800080c:	20000014 	andcs	r0, r0, r4, lsl r0

08000810 <_usb_ep_read>:

int _usb_ep_read(uint8_t idx, uint16_t *buf){
 8000810:	b530      	push	{r4, r5, lr}
  pma_descr_t *descr = &((pma_descr_t*)usb_epdata)[idx];
 8000812:	00c2      	lsls	r2, r0, #3
 8000814:	f102 4280 	add.w	r2, r2, #1073741824	; 0x40000000
 8000818:	f502 42c0 	add.w	r2, r2, #24576	; 0x6000
int _usb_ep_read(uint8_t idx, uint16_t *buf){
 800081c:	4603      	mov	r3, r0
  int sz = descr->rx_count;
 800081e:	6850      	ldr	r0, [r2, #4]
 8000820:	f3c0 0009 	ubfx	r0, r0, #0, #10
  if(!sz) return 0;
 8000824:	b300      	cbz	r0, 8000868 <_usb_ep_read+0x58>
  int n = (sz + 1) >> 1;
  uint32_t *in = (uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
 8000826:	6812      	ldr	r2, [r2, #0]
  int n = (sz + 1) >> 1;
 8000828:	1c44      	adds	r4, r0, #1
  uint32_t *in = (uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
 800082a:	f102 5200 	add.w	r2, r2, #536870912	; 0x20000000
 800082e:	f502 5240 	add.w	r2, r2, #12288	; 0x3000
 8000832:	0052      	lsls	r2, r2, #1
  int n = (sz + 1) >> 1;
 8000834:	1064      	asrs	r4, r4, #1
 8000836:	3902      	subs	r1, #2
 8000838:	eb02 0484 	add.w	r4, r2, r4, lsl #2
  for(int i = 0; i < n; ++i, ++in)
    buf[i] = *(uint16_t*)in;
 800083c:	f832 5b04 	ldrh.w	r5, [r2], #4
  for(int i = 0; i < n; ++i, ++in)
 8000840:	42a2      	cmp	r2, r4
    buf[i] = *(uint16_t*)in;
 8000842:	f821 5f02 	strh.w	r5, [r1, #2]!
  for(int i = 0; i < n; ++i, ++in)
 8000846:	d1f9      	bne.n	800083c <_usb_ep_read+0x2c>
  
  ENDP_STAT_RX((idx/2), USB_EP_RX_VALID);
 8000848:	085b      	lsrs	r3, r3, #1
 800084a:	009b      	lsls	r3, r3, #2
 800084c:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8000850:	f503 43b8 	add.w	r3, r3, #23552	; 0x5c00
 8000854:	881a      	ldrh	r2, [r3, #0]
 8000856:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800085a:	0492      	lsls	r2, r2, #18
 800085c:	0c92      	lsrs	r2, r2, #18
 800085e:	f482 4230 	eor.w	r2, r2, #45056	; 0xb000
 8000862:	f082 0280 	eor.w	r2, r2, #128	; 0x80
 8000866:	801a      	strh	r2, [r3, #0]
  return sz;
}
 8000868:	bd30      	pop	{r4, r5, pc}

0800086a <ep0_out>:
static void ep0_out(uint8_t epnum){
 800086a:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint16_t rxcount = usb_epdata[0].rx_count;
 800086c:	4b3f      	ldr	r3, [pc, #252]	; (800096c <ep0_out+0x102>)
 800086e:	4c40      	ldr	r4, [pc, #256]	; (8000970 <ep0_out+0x106>)
 8000870:	68dd      	ldr	r5, [r3, #12]
  uint8_t setup = !!(USB_EPx(0) & USB_EP_SETUP);
 8000872:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 8000876:	881b      	ldrh	r3, [r3, #0]
  uint16_t rxcount = usb_epdata[0].rx_count;
 8000878:	f3c5 0509 	ubfx	r5, r5, #0, #10
  if( setup ){
 800087c:	f413 6600 	ands.w	r6, r3, #2048	; 0x800
 8000880:	d009      	beq.n	8000896 <ep0_out+0x2c>
    if( setup_packet.bmRequestType & 0x80 ){ //предыдущий пакет=IN, этот точно будет запросом
 8000882:	f994 3008 	ldrsb.w	r3, [r4, #8]
 8000886:	2b00      	cmp	r3, #0
 8000888:	da17      	bge.n	80008ba <ep0_out+0x50>
      bytesread = 0;
 800088a:	2500      	movs	r5, #0
  _usb_ep_write((epnum & 0x0F)*2 + idx, buf, size);
}

int _usb_ep_read(uint8_t idx, uint16_t *buf);
static inline int usb_ep_read(uint8_t epnum, uint16_t *buf){
  return _usb_ep_read((epnum & 0x0F)*2 + 1, buf);
 800088c:	4939      	ldr	r1, [pc, #228]	; (8000974 <ep0_out+0x10a>)
 800088e:	2001      	movs	r0, #1
 8000890:	f7ff ffbe 	bl	8000810 <_usb_ep_read>
 8000894:	8225      	strh	r5, [r4, #16]
  uint8_t req = setup_packet.bmRequestType & 0x7F;
 8000896:	7a22      	ldrb	r2, [r4, #8]
 8000898:	f002 037f 	and.w	r3, r2, #127	; 0x7f
  if(setup_packet.bmRequestType & 0x80){
 800089c:	0612      	lsls	r2, r2, #24
 800089e:	d53c      	bpl.n	800091a <ep0_out+0xb0>
    if( !setup )return; //какой-то костыль. Иначе вызывается два раза
 80008a0:	b34e      	cbz	r6, 80008f6 <ep0_out+0x8c>
    if(req == (USB_REQ_STANDARD | USB_REQ_DEVICE)){
 80008a2:	bb73      	cbnz	r3, 8000902 <ep0_out+0x98>
      switch(setup_packet.bRequest){
 80008a4:	7a60      	ldrb	r0, [r4, #9]
 80008a6:	2806      	cmp	r0, #6
 80008a8:	d00c      	beq.n	80008c4 <ep0_out+0x5a>
 80008aa:	2808      	cmp	r0, #8
 80008ac:	d025      	beq.n	80008fa <ep0_out+0x90>
 80008ae:	bb40      	cbnz	r0, 8000902 <ep0_out+0x98>
  _usb_ep_write((epnum & 0x0F)*2, buf, size);
 80008b0:	2202      	movs	r2, #2
 80008b2:	4931      	ldr	r1, [pc, #196]	; (8000978 <ep0_out+0x10e>)
 80008b4:	f7ff ff54 	bl	8000760 <_usb_ep_write>
 80008b8:	e01d      	b.n	80008f6 <ep0_out+0x8c>
      if( bytesread >= setup_packet.wLength ){
 80008ba:	89e2      	ldrh	r2, [r4, #14]
 80008bc:	8a23      	ldrh	r3, [r4, #16]
 80008be:	429a      	cmp	r2, r3
 80008c0:	d8e9      	bhi.n	8000896 <ep0_out+0x2c>
 80008c2:	e7e2      	b.n	800088a <ep0_out+0x20>
          const void *data = ZLPP;
 80008c4:	2201      	movs	r2, #1
          usb_class_get_std_descr(setup_packet.wValue, &data, &size);
 80008c6:	a901      	add	r1, sp, #4
          const void *data = ZLPP;
 80008c8:	9201      	str	r2, [sp, #4]
          usb_class_get_std_descr(setup_packet.wValue, &data, &size);
 80008ca:	8960      	ldrh	r0, [r4, #10]
 80008cc:	f10d 0202 	add.w	r2, sp, #2
          uint16_t size = 0;
 80008d0:	f8ad 3002 	strh.w	r3, [sp, #2]
          usb_class_get_std_descr(setup_packet.wValue, &data, &size);
 80008d4:	f000 f874 	bl	80009c0 <usb_class_get_std_descr>
    if(setup_packet.wLength < size) size = setup_packet.wLength;
 80008d8:	89e3      	ldrh	r3, [r4, #14]
 80008da:	f8bd 2002 	ldrh.w	r2, [sp, #2]
  ep0_in(0x80);
 80008de:	2080      	movs	r0, #128	; 0x80
    if(setup_packet.wLength < size) size = setup_packet.wLength;
 80008e0:	429a      	cmp	r2, r3
 80008e2:	bf88      	it	hi
 80008e4:	f8ad 3002 	strhhi.w	r3, [sp, #2]
  ep0_count = size;
 80008e8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80008ec:	80e3      	strh	r3, [r4, #6]
  ep0_buf = buf;
 80008ee:	9b01      	ldr	r3, [sp, #4]
 80008f0:	6023      	str	r3, [r4, #0]
  ep0_in(0x80);
 80008f2:	f7ff ff5f 	bl	80007b4 <ep0_in>
}
 80008f6:	b002      	add	sp, #8
 80008f8:	bd70      	pop	{r4, r5, r6, pc}
 80008fa:	2201      	movs	r2, #1
 80008fc:	491f      	ldr	r1, [pc, #124]	; (800097c <ep0_out+0x112>)
 80008fe:	4618      	mov	r0, r3
 8000900:	e7d8      	b.n	80008b4 <ep0_out+0x4a>
    void *data = ZLPP;
 8000902:	2301      	movs	r3, #1
 8000904:	9301      	str	r3, [sp, #4]
    uint16_t size = 0;
 8000906:	2300      	movs	r3, #0
    usb_class_ep0_in( &setup_packet, &data, &size );
 8000908:	f10d 0202 	add.w	r2, sp, #2
 800090c:	a901      	add	r1, sp, #4
 800090e:	4819      	ldr	r0, [pc, #100]	; (8000974 <ep0_out+0x10a>)
    uint16_t size = 0;
 8000910:	f8ad 3002 	strh.w	r3, [sp, #2]
    usb_class_ep0_in( &setup_packet, &data, &size );
 8000914:	f000 f892 	bl	8000a3c <usb_class_ep0_in>
 8000918:	e7de      	b.n	80008d8 <ep0_out+0x6e>
    if(req == (USB_REQ_STANDARD | USB_REQ_DEVICE)){
 800091a:	b96b      	cbnz	r3, 8000938 <ep0_out+0xce>
      if(setup_packet.bRequest == SET_ADDRESS){
 800091c:	7a62      	ldrb	r2, [r4, #9]
 800091e:	2a05      	cmp	r2, #5
 8000920:	d105      	bne.n	800092e <ep0_out+0xc4>
        USB_Addr = setup_packet.wValue;
 8000922:	8962      	ldrh	r2, [r4, #10]
 8000924:	7122      	strb	r2, [r4, #4]
 8000926:	2200      	movs	r2, #0
 8000928:	4611      	mov	r1, r2
 800092a:	4610      	mov	r0, r2
 800092c:	e7c2      	b.n	80008b4 <ep0_out+0x4a>
      }else if(setup_packet.bRequest == SET_CONFIGURATION){
 800092e:	2a09      	cmp	r2, #9
 8000930:	d102      	bne.n	8000938 <ep0_out+0xce>
        configuration = setup_packet.wValue;
 8000932:	8962      	ldrh	r2, [r4, #10]
 8000934:	74a2      	strb	r2, [r4, #18]
 8000936:	e7f6      	b.n	8000926 <ep0_out+0xbc>
    if(!usb_class_ep0_out( &setup_packet, bytesread, rxcount )){
 8000938:	462a      	mov	r2, r5
 800093a:	8a21      	ldrh	r1, [r4, #16]
 800093c:	480d      	ldr	r0, [pc, #52]	; (8000974 <ep0_out+0x10a>)
 800093e:	f7ff fd16 	bl	800036e <usb_class_ep0_out>
 8000942:	b950      	cbnz	r0, 800095a <ep0_out+0xf0>
      ENDP_STAT_RX(0, USB_EP_RX_VALID);
 8000944:	4a0e      	ldr	r2, [pc, #56]	; (8000980 <ep0_out+0x116>)
 8000946:	8813      	ldrh	r3, [r2, #0]
 8000948:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800094c:	049b      	lsls	r3, r3, #18
 800094e:	0c9b      	lsrs	r3, r3, #18
 8000950:	f483 4330 	eor.w	r3, r3, #45056	; 0xb000
 8000954:	f083 0380 	eor.w	r3, r3, #128	; 0x80
 8000958:	8013      	strh	r3, [r2, #0]
    bytesread += rxcount;
 800095a:	8a23      	ldrh	r3, [r4, #16]
 800095c:	441d      	add	r5, r3
    if( bytesread >= setup_packet.wLength )usb_ep_write(0, NULL, 0);
 800095e:	89e3      	ldrh	r3, [r4, #14]
    bytesread += rxcount;
 8000960:	b2ad      	uxth	r5, r5
    if( bytesread >= setup_packet.wLength )usb_ep_write(0, NULL, 0);
 8000962:	42ab      	cmp	r3, r5
    bytesread += rxcount;
 8000964:	8225      	strh	r5, [r4, #16]
    if( bytesread >= setup_packet.wLength )usb_ep_write(0, NULL, 0);
 8000966:	d8c6      	bhi.n	80008f6 <ep0_out+0x8c>
 8000968:	e7dd      	b.n	8000926 <ep0_out+0xbc>
 800096a:	bf00      	nop
 800096c:	40006000 	andmi	r6, r0, r0
 8000970:	20000014 	andcs	r0, r0, r4, lsl r0
 8000974:	2000001c 	andcs	r0, r0, ip, lsl r0
 8000978:	08000c5c 	stmdaeq	r0, {r2, r3, r4, r6, sl, fp}
 800097c:	20000026 	andcs	r0, r0, r6, lsr #32
 8000980:	40005c00 	andmi	r5, r0, r0, lsl #24

08000984 <intr_req>:
  }
  return 0;
}

static void intr_req(uint8_t epnum){
}
 8000984:	4770      	bx	lr

08000986 <outp_req>:

static void outp_req(uint8_t epnum){
 8000986:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  return _usb_ep_read((epnum & 0x0F)*2 + 1, buf);
 8000988:	2003      	movs	r0, #3
 800098a:	a901      	add	r1, sp, #4
 800098c:	f7ff ff40 	bl	8000810 <_usb_ep_read>
  uint8_t buf[10];
  usb_ep_read(INTR_NUM, (void*)&buf);
  if(buf[1] & (1<<HID_KBDLED_CAPSLOCK))GPO_ON(RLED); else GPO_OFF(RLED);
 8000990:	f89d 2005 	ldrb.w	r2, [sp, #5]
 8000994:	4b09      	ldr	r3, [pc, #36]	; (80009bc <outp_req+0x36>)
 8000996:	f012 0f02 	tst.w	r2, #2
 800099a:	bf14      	ite	ne
 800099c:	f44f 7180 	movne.w	r1, #256	; 0x100
 80009a0:	f04f 7180 	moveq.w	r1, #16777216	; 0x1000000
  if(buf[1] & (1<<HID_KBDLED_NUMLOCK))GPO_ON(GLED); else GPO_OFF(GLED);
 80009a4:	07d2      	lsls	r2, r2, #31
 80009a6:	bf4c      	ite	mi
 80009a8:	f44f 7200 	movmi.w	r2, #512	; 0x200
 80009ac:	f04f 7200 	movpl.w	r2, #33554432	; 0x2000000
  if(buf[1] & (1<<HID_KBDLED_CAPSLOCK))GPO_ON(RLED); else GPO_OFF(RLED);
 80009b0:	6199      	str	r1, [r3, #24]
  if(buf[1] & (1<<HID_KBDLED_NUMLOCK))GPO_ON(GLED); else GPO_OFF(GLED);
 80009b2:	619a      	str	r2, [r3, #24]
}
 80009b4:	b005      	add	sp, #20
 80009b6:	f85d fb04 	ldr.w	pc, [sp], #4
 80009ba:	bf00      	nop
 80009bc:	40020400 	andmi	r0, r2, r0, lsl #8

080009c0 <usb_class_get_std_descr>:
  switch(descr & 0xFF00){
 80009c0:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 80009c4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80009c8:	d010      	beq.n	80009ec <usb_class_get_std_descr+0x2c>
 80009ca:	d803      	bhi.n	80009d4 <usb_class_get_std_descr+0x14>
 80009cc:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80009d0:	d007      	beq.n	80009e2 <usb_class_get_std_descr+0x22>
 80009d2:	4770      	bx	lr
 80009d4:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80009d8:	d010      	beq.n	80009fc <usb_class_get_std_descr+0x3c>
 80009da:	f5b3 6fc0 	cmp.w	r3, #1536	; 0x600
 80009de:	d009      	beq.n	80009f4 <usb_class_get_std_descr+0x34>
 80009e0:	4770      	bx	lr
      *data = &USB_DeviceDescriptor;
 80009e2:	4b0f      	ldr	r3, [pc, #60]	; (8000a20 <usb_class_get_std_descr+0x60>)
 80009e4:	600b      	str	r3, [r1, #0]
      *size = sizeof(USB_DeviceDescriptor);
 80009e6:	2312      	movs	r3, #18
      *size = ((uint8_t*)*data)[0]; //data->bLength
 80009e8:	8013      	strh	r3, [r2, #0]
}
 80009ea:	4770      	bx	lr
      *data = &USB_ConfigDescriptor;
 80009ec:	4b0d      	ldr	r3, [pc, #52]	; (8000a24 <usb_class_get_std_descr+0x64>)
 80009ee:	600b      	str	r3, [r1, #0]
      *size = sizeof(USB_ConfigDescriptor);
 80009f0:	2329      	movs	r3, #41	; 0x29
 80009f2:	e7f9      	b.n	80009e8 <usb_class_get_std_descr+0x28>
      *data = &USB_DeviceQualifierDescriptor;
 80009f4:	4b0c      	ldr	r3, [pc, #48]	; (8000a28 <usb_class_get_std_descr+0x68>)
 80009f6:	600b      	str	r3, [r1, #0]
      *size = USB_DeviceQualifierDescriptor[0];
 80009f8:	230a      	movs	r3, #10
 80009fa:	e7f5      	b.n	80009e8 <usb_class_get_std_descr+0x28>
      switch(descr & 0xFF){
 80009fc:	b2c0      	uxtb	r0, r0
 80009fe:	2803      	cmp	r0, #3
 8000a00:	d8f3      	bhi.n	80009ea <usb_class_get_std_descr+0x2a>
 8000a02:	e8df f000 	tbb	[pc, r0]
 8000a06:	0b090702 	bleq	8242616 <__exidx_end+0x2418ae>
          *data = &USB_StringLangDescriptor;
 8000a0a:	4b08      	ldr	r3, [pc, #32]	; (8000a2c <usb_class_get_std_descr+0x6c>)
          *data = &USB_StringSerialDescriptor;
 8000a0c:	600b      	str	r3, [r1, #0]
      *size = ((uint8_t*)*data)[0]; //data->bLength
 8000a0e:	680b      	ldr	r3, [r1, #0]
 8000a10:	781b      	ldrb	r3, [r3, #0]
 8000a12:	e7e9      	b.n	80009e8 <usb_class_get_std_descr+0x28>
          *data = &USB_StringManufacturingDescriptor;
 8000a14:	4b06      	ldr	r3, [pc, #24]	; (8000a30 <usb_class_get_std_descr+0x70>)
 8000a16:	e7f9      	b.n	8000a0c <usb_class_get_std_descr+0x4c>
          *data = &USB_StringProdDescriptor;
 8000a18:	4b06      	ldr	r3, [pc, #24]	; (8000a34 <usb_class_get_std_descr+0x74>)
 8000a1a:	e7f7      	b.n	8000a0c <usb_class_get_std_descr+0x4c>
          *data = &USB_StringSerialDescriptor;
 8000a1c:	4b06      	ldr	r3, [pc, #24]	; (8000a38 <usb_class_get_std_descr+0x78>)
 8000a1e:	e7f5      	b.n	8000a0c <usb_class_get_std_descr+0x4c>
 8000a20:	08000c5e 	stmdaeq	r0, {r1, r2, r3, r4, r6, sl, fp}
 8000a24:	08000c70 	stmdaeq	r0, {r4, r5, r6, sl, fp}
 8000a28:	08000c99 	stmdaeq	r0, {r0, r3, r4, r7, sl, fp}
 8000a2c:	08000ca4 	stmdaeq	r0, {r2, r5, r7, sl, fp}
 8000a30:	08000ca8 	stmdaeq	r0, {r3, r5, r7, sl, fp}
 8000a34:	08000cbe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r7, sl, fp}
 8000a38:	08000ce8 	stmdaeq	r0, {r3, r5, r6, r7, sl, fp}

08000a3c <usb_class_ep0_in>:
  if( req->bmRequestType == (USB_REQ_INTERFACE | 0x80) ){
 8000a3c:	7803      	ldrb	r3, [r0, #0]
 8000a3e:	2b81      	cmp	r3, #129	; 0x81
 8000a40:	d10c      	bne.n	8000a5c <usb_class_ep0_in+0x20>
    if( req->bRequest == GET_DESCRIPTOR ){
 8000a42:	7843      	ldrb	r3, [r0, #1]
 8000a44:	2b06      	cmp	r3, #6
 8000a46:	d109      	bne.n	8000a5c <usb_class_ep0_in+0x20>
      if( req->wValue == HID_REPORT_DESCRIPTOR){
 8000a48:	8843      	ldrh	r3, [r0, #2]
 8000a4a:	f5b3 5f08 	cmp.w	r3, #8704	; 0x2200
 8000a4e:	d105      	bne.n	8000a5c <usb_class_ep0_in+0x20>
        *data = (void**)&USB_HIDDescriptor;
 8000a50:	4b03      	ldr	r3, [pc, #12]	; (8000a60 <usb_class_ep0_in+0x24>)
        return 1;
 8000a52:	2001      	movs	r0, #1
        *data = (void**)&USB_HIDDescriptor;
 8000a54:	600b      	str	r3, [r1, #0]
        *size = sizeof(USB_HIDDescriptor);
 8000a56:	237a      	movs	r3, #122	; 0x7a
 8000a58:	8013      	strh	r3, [r2, #0]
        return 1;
 8000a5a:	4770      	bx	lr
  return 0;
 8000a5c:	2000      	movs	r0, #0
}
 8000a5e:	4770      	bx	lr
 8000a60:	08000cec 	stmdaeq	r0, {r2, r3, r5, r6, r7, sl, fp}

08000a64 <usb_class_init>:

void usb_class_init(){
 8000a64:	b510      	push	{r4, lr}
  usb_ep_init( INTR_NUM, USB_ENDP_INTR, INTR_SIZE, outp_req);
 8000a66:	4b07      	ldr	r3, [pc, #28]	; (8000a84 <usb_class_init+0x20>)
 8000a68:	2240      	movs	r2, #64	; 0x40
 8000a6a:	2103      	movs	r1, #3
 8000a6c:	2001      	movs	r0, #1
 8000a6e:	f7ff fcb7 	bl	80003e0 <usb_ep_init>
  usb_ep_init( INTR_NUM | 0x80, USB_ENDP_INTR, INTR_SIZE, intr_req);
}
 8000a72:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  usb_ep_init( INTR_NUM | 0x80, USB_ENDP_INTR, INTR_SIZE, intr_req);
 8000a76:	4b04      	ldr	r3, [pc, #16]	; (8000a88 <usb_class_init+0x24>)
 8000a78:	2240      	movs	r2, #64	; 0x40
 8000a7a:	2103      	movs	r1, #3
 8000a7c:	2081      	movs	r0, #129	; 0x81
 8000a7e:	f7ff bcaf 	b.w	80003e0 <usb_ep_init>
 8000a82:	bf00      	nop
 8000a84:	08000987 	stmdaeq	r0, {r0, r1, r2, r7, r8, fp}
 8000a88:	08000985 	stmdaeq	r0, {r0, r2, r7, r8, fp}

08000a8c <delay>:
  .x = 1000,
  .y = 1000,
};

void delay(uint32_t t){
  for(;t;t--)asm volatile("nop");
 8000a8c:	b900      	cbnz	r0, 8000a90 <delay+0x4>
}
 8000a8e:	4770      	bx	lr
  for(;t;t--)asm volatile("nop");
 8000a90:	bf00      	nop
 8000a92:	3801      	subs	r0, #1
 8000a94:	e7fa      	b.n	8000a8c <delay>

08000a96 <usb_class_poll>:

void usb_class_poll(){
  if(GPI_ON( LBTN )){
 8000a96:	4b27      	ldr	r3, [pc, #156]	; (8000b34 <usb_class_poll+0x9e>)
void usb_class_poll(){
 8000a98:	b510      	push	{r4, lr}
  if(GPI_ON( LBTN )){
 8000a9a:	691a      	ldr	r2, [r3, #16]
 8000a9c:	0494      	lsls	r4, r2, #18
 8000a9e:	d41f      	bmi.n	8000ae0 <usb_class_poll+0x4a>
    while( GPI_ON(LBTN) ){}
 8000aa0:	691a      	ldr	r2, [r3, #16]
 8000aa2:	0490      	lsls	r0, r2, #18
 8000aa4:	d5fc      	bpl.n	8000aa0 <usb_class_poll+0xa>
    report_tablet.touch = 1;
 8000aa6:	4c24      	ldr	r4, [pc, #144]	; (8000b38 <usb_class_poll+0xa2>)
    report_tablet.inrange = 1;
    report_tablet.x = 5000;
 8000aa8:	f06f 0277 	mvn.w	r2, #119	; 0x77
    report_tablet.touch = 1;
 8000aac:	7863      	ldrb	r3, [r4, #1]
  _usb_ep_write((epnum & 0x0F)*2, buf, size);
 8000aae:	4621      	mov	r1, r4
 8000ab0:	f023 0303 	bic.w	r3, r3, #3
 8000ab4:	f043 0303 	orr.w	r3, r3, #3
 8000ab8:	7063      	strb	r3, [r4, #1]
    report_tablet.x = 5000;
 8000aba:	2313      	movs	r3, #19
 8000abc:	70a2      	strb	r2, [r4, #2]
    report_tablet.y = 5000;
 8000abe:	7122      	strb	r2, [r4, #4]
 8000ac0:	2002      	movs	r0, #2
 8000ac2:	2206      	movs	r2, #6
    report_tablet.x = 5000;
 8000ac4:	70e3      	strb	r3, [r4, #3]
    report_tablet.y = 5000;
 8000ac6:	7163      	strb	r3, [r4, #5]
 8000ac8:	f7ff fe4a 	bl	8000760 <_usb_ep_write>
    usb_ep_write(INTR_NUM | 0x80, (void*)&report_tablet, sizeof(report_tablet));
    delay(1000000);
 8000acc:	481b      	ldr	r0, [pc, #108]	; (8000b3c <usb_class_poll+0xa6>)
 8000ace:	f7ff ffdd 	bl	8000a8c <delay>
    report_tablet.buttons = 0;
 8000ad2:	2300      	movs	r3, #0
 8000ad4:	2206      	movs	r2, #6
 8000ad6:	4621      	mov	r1, r4
 8000ad8:	2002      	movs	r0, #2
 8000ada:	7063      	strb	r3, [r4, #1]
 8000adc:	f7ff fe40 	bl	8000760 <_usb_ep_write>
    usb_ep_write(INTR_NUM | 0x80, (void*)&report_tablet, sizeof(report_tablet));
  }
  if(GPI_ON( JBTN )){
 8000ae0:	4b17      	ldr	r3, [pc, #92]	; (8000b40 <usb_class_poll+0xaa>)
 8000ae2:	691a      	ldr	r2, [r3, #16]
 8000ae4:	0691      	lsls	r1, r2, #26
 8000ae6:	d424      	bmi.n	8000b32 <usb_class_poll+0x9c>
    while( GPI_ON(JBTN) ){}
 8000ae8:	691a      	ldr	r2, [r3, #16]
 8000aea:	0692      	lsls	r2, r2, #26
 8000aec:	d5fc      	bpl.n	8000ae8 <usb_class_poll+0x52>
    report_kbd.lshift = 1;
 8000aee:	4c12      	ldr	r4, [pc, #72]	; (8000b38 <usb_class_poll+0xa2>)
 8000af0:	2209      	movs	r2, #9
 8000af2:	79e3      	ldrb	r3, [r4, #7]
 8000af4:	1da1      	adds	r1, r4, #6
 8000af6:	f043 0302 	orr.w	r3, r3, #2
 8000afa:	71e3      	strb	r3, [r4, #7]
    report_kbd.keys[0] = 0x06;
 8000afc:	2306      	movs	r3, #6
 8000afe:	7263      	strb	r3, [r4, #9]
    report_kbd.keys[1] = 0x12;
 8000b00:	2312      	movs	r3, #18
 8000b02:	72a3      	strb	r3, [r4, #10]
    report_kbd.keys[2] = 0x0E;
 8000b04:	230e      	movs	r3, #14
 8000b06:	72e3      	strb	r3, [r4, #11]
    report_kbd.keys[3] = 0x13;
 8000b08:	2313      	movs	r3, #19
 8000b0a:	2002      	movs	r0, #2
 8000b0c:	7323      	strb	r3, [r4, #12]
 8000b0e:	f7ff fe27 	bl	8000760 <_usb_ep_write>
    usb_ep_write(INTR_NUM | 0x80, (void*)&report_kbd, sizeof(report_kbd));
    delay(1000000);
 8000b12:	480a      	ldr	r0, [pc, #40]	; (8000b3c <usb_class_poll+0xa6>)
 8000b14:	f7ff ffba 	bl	8000a8c <delay>
    report_kbd.modifiers = report_kbd.keys[0] = report_kbd.keys[1] = report_kbd.keys[2] = report_kbd.keys[3] = 0;
 8000b18:	2300      	movs	r3, #0
 8000b1a:	1da1      	adds	r1, r4, #6
 8000b1c:	7323      	strb	r3, [r4, #12]
 8000b1e:	72e3      	strb	r3, [r4, #11]
 8000b20:	72a3      	strb	r3, [r4, #10]
 8000b22:	7263      	strb	r3, [r4, #9]
 8000b24:	71e3      	strb	r3, [r4, #7]
 8000b26:	2209      	movs	r2, #9
    
    usb_ep_write(INTR_NUM | 0x80, (void*)&report_kbd, sizeof(report_kbd));
  }
}
 8000b28:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000b2c:	2002      	movs	r0, #2
 8000b2e:	f7ff be17 	b.w	8000760 <_usb_ep_write>
 8000b32:	bd10      	pop	{r4, pc}
 8000b34:	40020800 	andmi	r0, r2, r0, lsl #16
 8000b38:	20000002 	andcs	r0, r0, r2
 8000b3c:	000f4240 	andeq	r4, pc, r0, asr #4
 8000b40:	40020400 	andmi	r0, r2, r0, lsl #8

08000b44 <__libc_init_array>:
 8000b44:	b570      	push	{r4, r5, r6, lr}
 8000b46:	4e0d      	ldr	r6, [pc, #52]	; (8000b7c <__libc_init_array+0x38>)
 8000b48:	4d0d      	ldr	r5, [pc, #52]	; (8000b80 <__libc_init_array+0x3c>)
 8000b4a:	1b76      	subs	r6, r6, r5
 8000b4c:	10b6      	asrs	r6, r6, #2
 8000b4e:	d006      	beq.n	8000b5e <__libc_init_array+0x1a>
 8000b50:	2400      	movs	r4, #0
 8000b52:	3401      	adds	r4, #1
 8000b54:	f855 3b04 	ldr.w	r3, [r5], #4
 8000b58:	4798      	blx	r3
 8000b5a:	42a6      	cmp	r6, r4
 8000b5c:	d1f9      	bne.n	8000b52 <__libc_init_array+0xe>
 8000b5e:	4e09      	ldr	r6, [pc, #36]	; (8000b84 <__libc_init_array+0x40>)
 8000b60:	4d09      	ldr	r5, [pc, #36]	; (8000b88 <__libc_init_array+0x44>)
 8000b62:	f7ff fbf7 	bl	8000354 <_init>
 8000b66:	1b76      	subs	r6, r6, r5
 8000b68:	10b6      	asrs	r6, r6, #2
 8000b6a:	d006      	beq.n	8000b7a <__libc_init_array+0x36>
 8000b6c:	2400      	movs	r4, #0
 8000b6e:	3401      	adds	r4, #1
 8000b70:	f855 3b04 	ldr.w	r3, [r5], #4
 8000b74:	4798      	blx	r3
 8000b76:	42a6      	cmp	r6, r4
 8000b78:	d1f9      	bne.n	8000b6e <__libc_init_array+0x2a>
 8000b7a:	bd70      	pop	{r4, r5, r6, pc}
 8000b7c:	08000d68 	stmdaeq	r0, {r3, r5, r6, r8, sl, fp}
 8000b80:	08000d68 	stmdaeq	r0, {r3, r5, r6, r8, sl, fp}
 8000b84:	08000d68 	stmdaeq	r0, {r3, r5, r6, r8, sl, fp}
 8000b88:	08000d68 	stmdaeq	r0, {r3, r5, r6, r8, sl, fp}

08000b8c <Reset_Handler>:
 8000b8c:	2100      	movs	r1, #0
 8000b8e:	e003      	b.n	8000b98 <LoopCopyDataInit>

08000b90 <CopyDataInit>:
 8000b90:	4b0b      	ldr	r3, [pc, #44]	; (8000bc0 <LoopFillZerobss+0x14>)
 8000b92:	585b      	ldr	r3, [r3, r1]
 8000b94:	5043      	str	r3, [r0, r1]
 8000b96:	3104      	adds	r1, #4

08000b98 <LoopCopyDataInit>:
 8000b98:	480a      	ldr	r0, [pc, #40]	; (8000bc4 <LoopFillZerobss+0x18>)
 8000b9a:	4b0b      	ldr	r3, [pc, #44]	; (8000bc8 <LoopFillZerobss+0x1c>)
 8000b9c:	1842      	adds	r2, r0, r1
 8000b9e:	429a      	cmp	r2, r3
 8000ba0:	d3f6      	bcc.n	8000b90 <CopyDataInit>
 8000ba2:	4a0a      	ldr	r2, [pc, #40]	; (8000bcc <LoopFillZerobss+0x20>)
 8000ba4:	e002      	b.n	8000bac <LoopFillZerobss>

08000ba6 <FillZerobss>:
 8000ba6:	2300      	movs	r3, #0
 8000ba8:	f842 3b04 	str.w	r3, [r2], #4

08000bac <LoopFillZerobss>:
 8000bac:	4b08      	ldr	r3, [pc, #32]	; (8000bd0 <LoopFillZerobss+0x24>)
 8000bae:	429a      	cmp	r2, r3
 8000bb0:	d3f9      	bcc.n	8000ba6 <FillZerobss>
 8000bb2:	f7ff fbd0 	bl	8000356 <SystemInit>
 8000bb6:	f7ff ffc5 	bl	8000b44 <__libc_init_array>
 8000bba:	f000 f80d 	bl	8000bd8 <main>
 8000bbe:	4770      	bx	lr
 8000bc0:	08000d68 	stmdaeq	r0, {r3, r5, r6, r8, sl, fp}
 8000bc4:	20000000 	andcs	r0, r0, r0
 8000bc8:	20000014 	andcs	r0, r0, r4, lsl r0
 8000bcc:	20000014 	andcs	r0, r0, r4, lsl r0
 8000bd0:	20000068 	andcs	r0, r0, r8, rrx

08000bd4 <ADC1_IRQHandler>:
 8000bd4:	e7fe      	b.n	8000bd4 <ADC1_IRQHandler>
	...

08000bd8 <main>:

int main(void){
 8000bd8:	b510      	push	{r4, lr}
  clock_HS(1);
 8000bda:	2001      	movs	r0, #1
 8000bdc:	f7ff fb04 	bl	80001e8 <clock_HS>
  RCC->AHBENR |= RCC_AHBENR_GPIOAEN | RCC_AHBENR_GPIOBEN | RCC_AHBENR_GPIOCEN | RCC_AHBENR_GPIODEN;
 8000be0:	4a1a      	ldr	r2, [pc, #104]	; (8000c4c <main+0x74>)
 8000be2:	69d3      	ldr	r3, [r2, #28]
 8000be4:	f043 030f 	orr.w	r3, r3, #15
 8000be8:	61d3      	str	r3, [r2, #28]
  GPIO_config(GLED); GPIO_config(RLED);
 8000bea:	4b19      	ldr	r3, [pc, #100]	; (8000c50 <main+0x78>)
 8000bec:	681a      	ldr	r2, [r3, #0]
 8000bee:	f422 2240 	bic.w	r2, r2, #786432	; 0xc0000
 8000bf2:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 8000bf6:	601a      	str	r2, [r3, #0]
 8000bf8:	689a      	ldr	r2, [r3, #8]
 8000bfa:	f442 2240 	orr.w	r2, r2, #786432	; 0xc0000
 8000bfe:	609a      	str	r2, [r3, #8]
 8000c00:	681a      	ldr	r2, [r3, #0]
 8000c02:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 8000c06:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8000c0a:	601a      	str	r2, [r3, #0]
 8000c0c:	689a      	ldr	r2, [r3, #8]
 8000c0e:	f442 3240 	orr.w	r2, r2, #196608	; 0x30000
 8000c12:	609a      	str	r2, [r3, #8]
  GPIO_config(LBTN); GPIO_config(JBTN);
 8000c14:	4a0f      	ldr	r2, [pc, #60]	; (8000c54 <main+0x7c>)
 8000c16:	6811      	ldr	r1, [r2, #0]
 8000c18:	f021 6140 	bic.w	r1, r1, #201326592	; 0xc000000
 8000c1c:	6011      	str	r1, [r2, #0]
 8000c1e:	6891      	ldr	r1, [r2, #8]
 8000c20:	f041 6140 	orr.w	r1, r1, #201326592	; 0xc000000
 8000c24:	6091      	str	r1, [r2, #8]
 8000c26:	681a      	ldr	r2, [r3, #0]
 8000c28:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
 8000c2c:	601a      	str	r2, [r3, #0]
 8000c2e:	689a      	ldr	r2, [r3, #8]
 8000c30:	f442 6240 	orr.w	r2, r2, #3072	; 0xc00
 8000c34:	609a      	str	r2, [r3, #8]
  
  USB_setup();
 8000c36:	f7ff fb9c 	bl	8000372 <USB_setup>
static __INLINE void __enable_irq()               { __ASM volatile ("cpsie i"); }
 8000c3a:	b662      	cpsie	i
  __enable_irq();
  while (1){
    usb_class_poll();
    sleep(100000);
 8000c3c:	4c06      	ldr	r4, [pc, #24]	; (8000c58 <main+0x80>)
    usb_class_poll();
 8000c3e:	f7ff ff2a 	bl	8000a96 <usb_class_poll>
    sleep(100000);
 8000c42:	4620      	mov	r0, r4
 8000c44:	f7ff fb88 	bl	8000358 <sleep>
 8000c48:	e7f9      	b.n	8000c3e <main+0x66>
 8000c4a:	bf00      	nop
 8000c4c:	40023800 	andmi	r3, r2, r0, lsl #16
 8000c50:	40020400 	andmi	r0, r2, r0, lsl #8
 8000c54:	40020800 	andmi	r0, r2, r0, lsl #16
 8000c58:	000186a0 	andeq	r8, r1, r0, lsr #13

Disassembly of section .rodata:

08000c5c <USB_DeviceDescriptor-0x2>:
	...

08000c5e <USB_DeviceDescriptor>:
static const uint8_t USB_DeviceDescriptor[] = {
 8000c5e:	01100112 	tsteq	r0, r2, lsl r1
 8000c62:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
 8000c66:	05df16c0 	ldrbeq	r1, [pc, #1728]	; 800132e <__exidx_end+0x5c6>
 8000c6a:	02010001 	andeq	r0, r1, #1
 8000c6e:	 	andeq	r0, r9, #-1073741824	; 0xc0000000

08000c70 <USB_ConfigDescriptor>:
static const uint8_t USB_ConfigDescriptor[] = {
 8000c70:	00290209 	eoreq	r0, r9, r9, lsl #4
 8000c74:	80000101 	andhi	r0, r0, r1, lsl #2
 8000c78:	00040932 	andeq	r0, r4, r2, lsr r9
 8000c7c:	01030200 	mrseq	r0, R11_usr
 8000c80:	21090001 	tstcs	r9, r1
 8000c84:	01000110 	tsteq	r0, r0, lsl r1
 8000c88:	07007a22 	streq	r7, [r0, -r2, lsr #20]
 8000c8c:	40030105 	andmi	r0, r3, r5, lsl #2
 8000c90:	05070a00 	streq	r0, [r7, #-2560]	; 0xfffff600
 8000c94:	00400381 	subeq	r0, r0, r1, lsl #7
 8000c98:	 	andeq	r0, r6, sl, lsl #20

08000c99 <USB_DeviceQualifierDescriptor>:
static const uint8_t USB_DeviceQualifierDescriptor[] = {
 8000c99:	0200060a 	andeq	r0, r0, #10485760	; 0xa00000
 8000c9d:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
 8000ca1:	 	streq	r0, [r0], #-1

08000ca4 <USB_StringLangDescriptor>:
USB_STRING(USB_StringLangDescriptor, u"\x0409"); //lang US
 8000ca4:	04090304 	streq	r0, [r9], #-772	; 0xfffffcfc

08000ca8 <USB_StringManufacturingDescriptor>:
USB_STRING(USB_StringManufacturingDescriptor, u"COKPOWEHEU"); //Vendor
 8000ca8:	00430316 	subeq	r0, r3, r6, lsl r3
 8000cac:	004b004f 	subeq	r0, fp, pc, asr #32
 8000cb0:	004f0050 	subeq	r0, pc, r0, asr r0	; <UNPREDICTABLE>
 8000cb4:	00450057 	subeq	r0, r5, r7, asr r0
 8000cb8:	00450048 	subeq	r0, r5, r8, asr #32
 8000cbc:	 			; <UNDEFINED> instruction: 0x032a0055

08000cbe <USB_StringProdDescriptor>:
USB_STRING(USB_StringProdDescriptor, u"USB Keyboard + Mouse"); //Product
 8000cbe:	0055032a 	subseq	r0, r5, sl, lsr #6
 8000cc2:	00420053 	subeq	r0, r2, r3, asr r0
 8000cc6:	004b0020 	subeq	r0, fp, r0, lsr #32
 8000cca:	00790065 	rsbseq	r0, r9, r5, rrx
 8000cce:	006f0062 	rsbeq	r0, pc, r2, rrx
 8000cd2:	00720061 	rsbseq	r0, r2, r1, rrx
 8000cd6:	00200064 	eoreq	r0, r0, r4, rrx
 8000cda:	0020002b 	eoreq	r0, r0, fp, lsr #32
 8000cde:	006f004d 	rsbeq	r0, pc, sp, asr #32
 8000ce2:	00730075 	rsbseq	r0, r3, r5, ror r0
 8000ce6:	 	movweq	r0, #16485	; 0x4065

08000ce8 <USB_StringSerialDescriptor>:
USB_STRING(USB_StringSerialDescriptor, u"1"); //Serial (BCD)
 8000ce8:	00310304 	eorseq	r0, r1, r4, lsl #6

08000cec <USB_HIDDescriptor>:
static const uint8_t USB_HIDDescriptor[] = {
 8000cec:	06090105 	streq	r0, [r9], -r5, lsl #2
 8000cf0:	018501a1 	orreq	r0, r5, r1, lsr #3
 8000cf4:	e0190705 	ands	r0, r9, r5, lsl #14
 8000cf8:	0015e729 	andseq	lr, r5, r9, lsr #14
 8000cfc:	01750125 	cmneq	r5, r5, lsr #2
 8000d00:	02810895 	addeq	r0, r1, #9764864	; 0x950000
 8000d04:	01950875 	orrseq	r0, r5, r5, ror r8
 8000d08:	01750181 	cmneq	r5, r1, lsl #3
 8000d0c:	08050595 	stmdaeq	r5, {r0, r2, r4, r7, r8, sl}
 8000d10:	05290119 	streq	r0, [r9, #-281]!	; 0xfffffee7
 8000d14:	03750291 	cmneq	r5, #268435465	; 0x10000009
 8000d18:	01910195 			; <UNDEFINED> instruction: 0x01910195
 8000d1c:	06950875 			; <UNDEFINED> instruction: 0x06950875
 8000d20:	65250015 	strvs	r0, [r5, #-21]!	; 0xffffffeb
 8000d24:	00190705 	andseq	r0, r9, r5, lsl #14
 8000d28:	00816529 	addeq	r6, r1, r9, lsr #10
 8000d2c:	090d05c0 	stmdbeq	sp, {r6, r7, r8, sl}
 8000d30:	8501a102 	strhi	sl, [r1, #-258]	; 0xfffffefe
 8000d34:	a1220902 			; <UNDEFINED> instruction: 0xa1220902
 8000d38:	09330900 	ldmdbeq	r3!, {r8, fp}
 8000d3c:	25001532 	strcs	r1, [r0, #-1330]	; 0xffffface
 8000d40:	95017501 	strls	r7, [r1, #-1281]	; 0xfffffaff
 8000d44:	75028102 	strvc	r8, [r2, #-258]	; 0xfffffefe
 8000d48:	81069501 	tsthi	r6, r1, lsl #10
 8000d4c:	09010501 	stmdbeq	r1, {r0, r8, sl}
 8000d50:	0900a101 	stmdbeq	r0, {r0, r8, sp, pc}
 8000d54:	16310930 			; <UNDEFINED> instruction: 0x16310930
 8000d58:	10260000 	eorne	r0, r6, r0
 8000d5c:	95107527 	ldrls	r7, [r0, #-1319]	; 0xfffffad9
 8000d60:	c0028102 	andgt	r8, r2, r2, lsl #2
 8000d64:	0000c0c0 	andeq	ip, r0, r0, asr #1

Disassembly of section .data:

20000000 <lastaddr>:
20000000:	 	andeq	r0, r2, r0, asr #32

20000002 <report_tablet>:
}__attribute__((packed)) report_tablet = {
20000002:	03e80002 	mvneq	r0, #2
20000006:	 	andeq	r0, r1, r8, ror #7

20000008 <report_kbd>:
}__attribute__((packed)) report_kbd = {
20000008:	00000001 	andeq	r0, r0, r1
	...

Disassembly of section .bss:

20000014 <ep0_buf>:
20000014:	00000000 	andeq	r0, r0, r0

20000018 <USB_Addr>:
	...

2000001a <ep0_count>:
	...

2000001c <setup_packet>:
	...

20000024 <bytesread.4440>:
	...

20000026 <configuration>:
	...

20000028 <epfunc_in>:
	...

20000048 <epfunc_out>:
	...

Disassembly of section ._user_heap_stack:

20000068 <._user_heap_stack>:
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002e41 	andeq	r2, r0, r1, asr #28
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000024 	andeq	r0, r0, r4, lsr #32
  10:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
  14:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
  18:	0600334d 	streq	r3, [r0], -sp, asr #6
  1c:	094d070a 	stmdbeq	sp, {r1, r3, r8, r9, sl}^
  20:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  24:	17011501 	strne	r1, [r1, -r1, lsl #10]
  28:	1a011803 	bne	4603c <_Min_Stack_Size+0x45c3c>
  2c:	Address 0x000000000000002c is out of bounds.


Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	00000928 	andeq	r0, r0, r8, lsr #18
       4:	00000002 	andeq	r0, r0, r2
       8:	01040000 	mrseq	r0, (UNDEF: 4)
       c:	00000345 	andeq	r0, r0, r5, asr #6
      10:	0000120c 	andeq	r1, r0, ip, lsl #4
      14:	00007d00 	andeq	r7, r0, r0, lsl #26
	...
      28:	06010200 	streq	r0, [r1], -r0, lsl #4
      2c:	0000027d 	andeq	r0, r0, sp, ror r2
      30:	00031703 	andeq	r1, r3, r3, lsl #14
      34:	17220400 	strne	r0, [r2, -r0, lsl #8]!
      38:	00000029 	andeq	r0, r0, r9, lsr #32
      3c:	96050202 	strls	r0, [r5], -r2, lsl #4
      40:	02000002 	andeq	r0, r0, #2
      44:	00a70504 	adceq	r0, r7, r4, lsl #10
      48:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
      4c:	0000a205 	andeq	sl, r0, r5, lsl #4
      50:	03160300 	tsteq	r6, #0, 6
      54:	2e040000 	cdpcs	0, 0, cr0, cr4, cr0, {0}
      58:	00005d18 	andeq	r5, r0, r8, lsl sp
      5c:	08010200 	stmdaeq	r1, {r9}
      60:	0000027b 	andeq	r0, r0, fp, ror r2
      64:	00012403 	andeq	r2, r1, r3, lsl #8
      68:	19310400 	ldmdbne	r1!, {sl}
      6c:	00000070 	andeq	r0, r0, r0, ror r0
      70:	a3070202 	movwge	r0, #29186	; 0x7202
      74:	03000001 	movweq	r0, #1
      78:	000002d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
      7c:	88193404 	ldmdahi	r9, {r2, sl, ip, sp}
      80:	04000000 	streq	r0, [r0], #-0
      84:	00000077 	andeq	r0, r0, r7, ror r0
      88:	57070402 	strpl	r0, [r7, -r2, lsl #8]
      8c:	02000000 	andeq	r0, r0, #0
      90:	00520708 	subseq	r0, r2, r8, lsl #14
      94:	04050000 	streq	r0, [r5], #-0
      98:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
      9c:	00960400 	addseq	r0, r6, r0, lsl #8
      a0:	04020000 	streq	r0, [r2], #-0
      a4:	00005c07 	andeq	r5, r0, r7, lsl #24
      a8:	02890600 	addeq	r0, r9, #0, 12
      ac:	ce030000 	cdpgt	0, 0, cr0, cr3, cr0, {0}
      b0:	009d1506 	addseq	r1, sp, r6, lsl #10
      b4:	01010000 	mrseq	r0, (UNDEF: 1)
      b8:	00015f07 	andeq	r5, r1, r7, lsl #30
      bc:	114c0500 	cmpne	ip, r0, lsl #10
      c0:	00000077 	andeq	r0, r0, r7, ror r0
      c4:	84080101 	strhi	r0, [r8], #-257	; 0xfffffeff
      c8:	09012506 	stmdbeq	r1, {r1, r2, r8, sl, sp}
      cc:	00000181 	andeq	r0, r0, r1, lsl #3
      d0:	52434109 	subpl	r4, r3, #1073741826	; 0x40000002
      d4:	01270600 			; <UNDEFINED> instruction: 0x01270600
      d8:	00008311 	andeq	r8, r0, r1, lsl r3
      dc:	00230200 	eoreq	r0, r3, r0, lsl #4
      e0:	0000c30a 	andeq	ip, r0, sl, lsl #6
      e4:	01280600 			; <UNDEFINED> instruction: 0x01280600
      e8:	00008311 	andeq	r8, r0, r1, lsl r3
      ec:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
      f0:	0001340a 	andeq	r3, r1, sl, lsl #8
      f4:	01290600 			; <UNDEFINED> instruction: 0x01290600
      f8:	00008311 	andeq	r8, r0, r1, lsl r3
      fc:	08230200 	stmdaeq	r3!, {r9}
     100:	00031e0a 	andeq	r1, r3, sl, lsl #28
     104:	012a0600 			; <UNDEFINED> instruction: 0x012a0600
     108:	00008311 	andeq	r8, r0, r1, lsl r3
     10c:	0c230200 	sfmeq	f0, 4, [r3], #-0
     110:	0000690a 	andeq	r6, r0, sl, lsl #18
     114:	012b0600 			; <UNDEFINED> instruction: 0x012b0600
     118:	00008311 	andeq	r8, r0, r1, lsl r3
     11c:	10230200 	eorne	r0, r3, r0, lsl #4
     120:	00010d0a 	andeq	r0, r1, sl, lsl #26
     124:	012c0600 			; <UNDEFINED> instruction: 0x012c0600
     128:	00008311 	andeq	r8, r0, r1, lsl r3
     12c:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     130:	00525309 	subseq	r5, r2, r9, lsl #6
     134:	11012d06 	tstne	r1, r6, lsl #26
     138:	00000083 	andeq	r0, r0, r3, lsl #1
     13c:	09182302 	ldmdbeq	r8, {r1, r8, r9, sp}
     140:	0052424f 	subseq	r4, r2, pc, asr #4
     144:	11012e06 	tstne	r1, r6, lsl #28
     148:	00000083 	andeq	r0, r0, r3, lsl #1
     14c:	0a1c2302 	beq	708d5c <_Min_Stack_Size+0x70895c>
     150:	00000215 	andeq	r0, r0, r5, lsl r2
     154:	11012f06 	tstne	r1, r6, lsl #30
     158:	00000083 	andeq	r0, r0, r3, lsl #1
     15c:	0a202302 	beq	808d6c <_Min_Stack_Size+0x80896c>
     160:	000002a6 	andeq	r0, r0, r6, lsr #5
     164:	0e013006 	cdpeq	0, 0, cr3, cr1, cr6, {0}
     168:	00000181 	andeq	r0, r0, r1, lsl #3
     16c:	0a242302 	beq	908d7c <_Min_Stack_Size+0x90897c>
     170:	0000021b 	andeq	r0, r0, fp, lsl r2
     174:	11013106 	tstne	r1, r6, lsl #2
     178:	00000083 	andeq	r0, r0, r3, lsl #1
     17c:	01802303 	orreq	r2, r0, r3, lsl #6
     180:	00770b00 	rsbseq	r0, r7, r0, lsl #22
     184:	01910000 	orrseq	r0, r1, r0
     188:	a20c0000 	andge	r0, ip, #0
     18c:	16000000 	strne	r0, [r0], -r0
     190:	00b50d00 	adcseq	r0, r5, r0, lsl #26
     194:	32060000 	andcc	r0, r6, #0
     198:	00c60301 	sbceq	r0, r6, r1, lsl #6
     19c:	2c080000 	stccs	0, cr0, [r8], {-0}
     1a0:	09014f06 	stmdbeq	r1, {r1, r2, r8, r9, sl, fp, lr}
     1a4:	00000249 	andeq	r0, r0, r9, asr #4
     1a8:	00004c0a 	andeq	r4, r0, sl, lsl #24
     1ac:	01510600 	cmpeq	r1, r0, lsl #12
     1b0:	00008311 	andeq	r8, r0, r1, lsl r3
     1b4:	00230200 	eoreq	r0, r3, r0, lsl #4
     1b8:	0000290a 	andeq	r2, r0, sl, lsl #18
     1bc:	01520600 	cmpeq	r2, r0, lsl #12
     1c0:	00008311 	andeq	r8, r0, r1, lsl r3
     1c4:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     1c8:	00013b0a 	andeq	r3, r1, sl, lsl #22
     1cc:	01530600 	cmpeq	r3, r0, lsl #12
     1d0:	00008311 	andeq	r8, r0, r1, lsl r3
     1d4:	08230200 	stmdaeq	r3!, {r9}
     1d8:	0000070a 	andeq	r0, r0, sl, lsl #14
     1dc:	01540600 	cmpeq	r4, r0, lsl #12
     1e0:	00008311 	andeq	r8, r0, r1, lsl r3
     1e4:	0c230200 	sfmeq	f0, 4, [r3], #-0
     1e8:	52444909 	subpl	r4, r4, #147456	; 0x24000
     1ec:	01550600 	cmpeq	r5, r0, lsl #12
     1f0:	00008311 	andeq	r8, r0, r1, lsl r3
     1f4:	10230200 	eorne	r0, r3, r0, lsl #4
     1f8:	52444f09 	subpl	r4, r4, #9, 30	; 0x24
     1fc:	01560600 	cmpeq	r6, r0, lsl #12
     200:	00008311 	andeq	r8, r0, r1, lsl r3
     204:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     208:	0000b00a 	andeq	fp, r0, sl
     20c:	01570600 	cmpeq	r7, r0, lsl #12
     210:	00008311 	andeq	r8, r0, r1, lsl r3
     214:	18230200 	stmdane	r3!, {r9}
     218:	00000d0a 	andeq	r0, r0, sl, lsl #26
     21c:	01580600 	cmpeq	r8, r0, lsl #12
     220:	00008311 	andeq	r8, r0, r1, lsl r3
     224:	1c230200 	sfmne	f0, 4, [r3], #-0
     228:	52464109 	subpl	r4, r6, #1073741826	; 0x40000002
     22c:	01590600 	cmpeq	r9, r0, lsl #12
     230:	00025911 	andeq	r5, r2, r1, lsl r9
     234:	20230200 	eorcs	r0, r3, r0, lsl #4
     238:	52524209 	subspl	r4, r2, #-1879048192	; 0x90000000
     23c:	015a0600 	cmpeq	sl, r0, lsl #12
     240:	00008311 	andeq	r8, r0, r1, lsl r3
     244:	28230200 	stmdacs	r3!, {r9}
     248:	00830b00 	addeq	r0, r3, r0, lsl #22
     24c:	02590000 	subseq	r0, r9, #0
     250:	a20c0000 	andge	r0, ip, #0
     254:	01000000 	mrseq	r0, (UNDEF: 0)
     258:	02490400 	subeq	r0, r9, #0, 8
     25c:	7c0d0000 	stcvc	0, cr0, [sp], {-0}
     260:	06000001 	streq	r0, [r0], -r1
     264:	9e03015b 	mcrls	1, 0, r0, cr3, cr11, {2}
     268:	08000001 	stmdaeq	r0, {r0}
     26c:	01890608 	orreq	r0, r9, r8, lsl #12
     270:	00029509 	andeq	r9, r2, r9, lsl #10
     274:	52430900 	subpl	r0, r3, #0, 18
     278:	018b0600 	orreq	r0, fp, r0, lsl #12
     27c:	00008311 	andeq	r8, r0, r1, lsl r3
     280:	00230200 	eoreq	r0, r3, r0, lsl #4
     284:	52534309 	subspl	r4, r3, #603979776	; 0x24000000
     288:	018c0600 	orreq	r0, ip, r0, lsl #12
     28c:	00008311 	andeq	r8, r0, r1, lsl r3
     290:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     294:	01e90d00 	mvneq	r0, r0, lsl #26
     298:	8d060000 	stchi	0, cr0, [r6, #-0]
     29c:	026b0301 	rsbeq	r0, fp, #67108864	; 0x4000000
     2a0:	38080000 	stmdacc	r8, {}	; <UNPREDICTABLE>
     2a4:	09019306 	stmdbeq	r1, {r1, r2, r8, r9, ip, pc}
     2a8:	0000038c 	andeq	r0, r0, ip, lsl #7
     2ac:	00524309 	subseq	r4, r2, r9, lsl #6
     2b0:	11019506 	tstne	r1, r6, lsl #10
     2b4:	00000083 	andeq	r0, r0, r3, lsl #1
     2b8:	0a002302 	beq	8ec8 <_Min_Stack_Size+0x8ac8>
     2bc:	0000030a 	andeq	r0, r0, sl, lsl #6
     2c0:	11019606 	tstne	r1, r6, lsl #12
     2c4:	00000083 	andeq	r0, r0, r3, lsl #1
     2c8:	0a042302 	beq	108ed8 <_Min_Stack_Size+0x108ad8>
     2cc:	000002c5 	andeq	r0, r0, r5, asr #5
     2d0:	11019706 	tstne	r1, r6, lsl #14
     2d4:	00000083 	andeq	r0, r0, r3, lsl #1
     2d8:	09082302 	stmdbeq	r8, {r1, r8, r9, sp}
     2dc:	00524943 	subseq	r4, r2, r3, asr #18
     2e0:	11019806 	tstne	r1, r6, lsl #16
     2e4:	00000083 	andeq	r0, r0, r3, lsl #1
     2e8:	0a0c2302 	beq	308ef8 <_Min_Stack_Size+0x308af8>
     2ec:	00000228 	andeq	r0, r0, r8, lsr #4
     2f0:	11019906 	tstne	r1, r6, lsl #18
     2f4:	00000083 	andeq	r0, r0, r3, lsl #1
     2f8:	0a102302 	beq	408f08 <_Min_Stack_Size+0x408b08>
     2fc:	000000e5 	andeq	r0, r0, r5, ror #1
     300:	11019a06 	tstne	r1, r6, lsl #20
     304:	00000083 	andeq	r0, r0, r3, lsl #1
     308:	0a142302 	beq	508f18 <_Min_Stack_Size+0x508b18>
     30c:	00000235 	andeq	r0, r0, r5, lsr r2
     310:	11019b06 	tstne	r1, r6, lsl #22
     314:	00000083 	andeq	r0, r0, r3, lsl #1
     318:	0a182302 	beq	608f28 <_Min_Stack_Size+0x608b28>
     31c:	000003d8 	ldrdeq	r0, [r0], -r8
     320:	11019c06 	tstne	r1, r6, lsl #24
     324:	00000083 	andeq	r0, r0, r3, lsl #1
     328:	0a1c2302 	beq	708f38 <_Min_Stack_Size+0x708b38>
     32c:	000002b6 			; <UNDEFINED> instruction: 0x000002b6
     330:	11019d06 	tstne	r1, r6, lsl #26
     334:	00000083 	andeq	r0, r0, r3, lsl #1
     338:	0a202302 	beq	808f48 <_Min_Stack_Size+0x808b48>
     33c:	000002eb 	andeq	r0, r0, fp, ror #5
     340:	11019e06 	tstne	r1, r6, lsl #28
     344:	00000083 	andeq	r0, r0, r3, lsl #1
     348:	0a242302 	beq	908f58 <_Min_Stack_Size+0x908b58>
     34c:	000000fd 	strdeq	r0, [r0], -sp
     350:	11019f06 	tstne	r1, r6, lsl #30
     354:	00000083 	andeq	r0, r0, r3, lsl #1
     358:	0a282302 	beq	a08f68 <_Min_Stack_Size+0xa08b68>
     35c:	000001df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
     360:	1101a006 	tstne	r1, r6
     364:	00000083 	andeq	r0, r0, r3, lsl #1
     368:	0a2c2302 	beq	b08f78 <_Min_Stack_Size+0xb08b78>
     36c:	000001bc 			; <UNDEFINED> instruction: 0x000001bc
     370:	1101a106 	tstne	r1, r6, lsl #2
     374:	00000083 	andeq	r0, r0, r3, lsl #1
     378:	09302302 	ldmdbeq	r0!, {r1, r8, r9, sp}
     37c:	00525343 	subseq	r5, r2, r3, asr #6
     380:	1101a206 	tstne	r1, r6, lsl #4
     384:	00000083 	andeq	r0, r0, r3, lsl #1
     388:	00342302 	eorseq	r2, r4, r2, lsl #6
     38c:	0001890d 	andeq	r8, r1, sp, lsl #18
     390:	01a30600 			; <UNDEFINED> instruction: 0x01a30600
     394:	0002a203 	andeq	sl, r2, r3, lsl #4
     398:	06d00800 	ldrbeq	r0, [r0], r0, lsl #16
     39c:	f50901c0 			; <UNDEFINED> instruction: 0xf50901c0
     3a0:	09000006 	stmdbeq	r0, {r1, r2}
     3a4:	06005254 			; <UNDEFINED> instruction: 0x06005254
     3a8:	831101c2 	tsthi	r1, #-2147483600	; 0x80000030
     3ac:	02000000 	andeq	r0, r0, #0
     3b0:	44090023 	strmi	r0, [r9], #-35	; 0xffffffdd
     3b4:	c3060052 	movwgt	r0, #24658	; 0x6052
     3b8:	00831101 	addeq	r1, r3, r1, lsl #2
     3bc:	23020000 	movwcs	r0, #8192	; 0x2000
     3c0:	52430904 	subpl	r0, r3, #4, 18	; 0x10000
     3c4:	01c40600 	biceq	r0, r4, r0, lsl #12
     3c8:	00008311 	andeq	r8, r0, r1, lsl r3
     3cc:	08230200 	stmdaeq	r3!, {r9}
     3d0:	52534909 	subspl	r4, r3, #147456	; 0x24000
     3d4:	01c50600 	biceq	r0, r5, r0, lsl #12
     3d8:	00008311 	andeq	r8, r0, r1, lsl r3
     3dc:	0c230200 	sfmeq	f0, 4, [r3], #-0
     3e0:	0000470a 	andeq	r4, r0, sl, lsl #14
     3e4:	01c60600 	biceq	r0, r6, r0, lsl #12
     3e8:	00008311 	andeq	r8, r0, r1, lsl r3
     3ec:	10230200 	eorne	r0, r3, r0, lsl #4
     3f0:	0002d90a 	andeq	sp, r2, sl, lsl #18
     3f4:	01c70600 	biceq	r0, r7, r0, lsl #12
     3f8:	00008311 	andeq	r8, r0, r1, lsl r3
     3fc:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     400:	0000000a 	andeq	r0, r0, sl
     404:	01c80600 	biceq	r0, r8, r0, lsl #12
     408:	00008311 	andeq	r8, r0, r1, lsl r3
     40c:	18230200 	stmdane	r3!, {r9}
     410:	00024b0a 	andeq	r4, r2, sl, lsl #22
     414:	01c90600 	biceq	r0, r9, r0, lsl #12
     418:	00008311 	andeq	r8, r0, r1, lsl r3
     41c:	1c230200 	sfmne	f0, 4, [r3], #-0
     420:	0002be0a 	andeq	fp, r2, sl, lsl #28
     424:	01ca0600 	biceq	r0, sl, r0, lsl #12
     428:	00008311 	andeq	r8, r0, r1, lsl r3
     42c:	20230200 	eorcs	r0, r3, r0, lsl #4
     430:	52505709 	subspl	r5, r0, #2359296	; 0x240000
     434:	01cb0600 	biceq	r0, fp, r0, lsl #12
     438:	00008311 	andeq	r8, r0, r1, lsl r3
     43c:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
     440:	52535309 	subspl	r5, r3, #603979776	; 0x24000000
     444:	01cc0600 	biceq	r0, ip, r0, lsl #12
     448:	00008311 	andeq	r8, r0, r1, lsl r3
     44c:	28230200 	stmdacs	r3!, {r9}
     450:	0003030a 	andeq	r0, r3, sl, lsl #6
     454:	01cd0600 	biceq	r0, sp, r0, lsl #12
     458:	00008311 	andeq	r8, r0, r1, lsl r3
     45c:	2c230200 	sfmcs	f0, 4, [r3], #-0
     460:	0001c60a 	andeq	ip, r1, sl, lsl #12
     464:	01ce0600 	biceq	r0, lr, r0, lsl #12
     468:	00008311 	andeq	r8, r0, r1, lsl r3
     46c:	30230200 	eorcc	r0, r3, r0, lsl #4
     470:	00001d0a 	andeq	r1, r0, sl, lsl #26
     474:	01cf0600 	biceq	r0, pc, r0, lsl #12
     478:	00008311 	andeq	r8, r0, r1, lsl r3
     47c:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
     480:	0000d80a 	andeq	sp, r0, sl, lsl #16
     484:	01d00600 	bicseq	r0, r0, r0, lsl #12
     488:	00008311 	andeq	r8, r0, r1, lsl r3
     48c:	38230200 	stmdacc	r3!, {r9}
     490:	0002020a 	andeq	r0, r2, sl, lsl #4
     494:	01d10600 	bicseq	r0, r1, r0, lsl #12
     498:	00008311 	andeq	r8, r0, r1, lsl r3
     49c:	3c230200 	sfmcc	f0, 4, [r3], #-0
     4a0:	0001cb0a 	andeq	ip, r1, sl, lsl #22
     4a4:	01d20600 	bicseq	r0, r2, r0, lsl #12
     4a8:	00008311 	andeq	r8, r0, r1, lsl r3
     4ac:	40230200 	eormi	r0, r3, r0, lsl #4
     4b0:	0001560a 	andeq	r5, r1, sl, lsl #12
     4b4:	01d30600 	bicseq	r0, r3, r0, lsl #12
     4b8:	00008311 	andeq	r8, r0, r1, lsl r3
     4bc:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
     4c0:	0000f40a 	andeq	pc, r0, sl, lsl #8
     4c4:	01d40600 	bicseq	r0, r4, r0, lsl #12
     4c8:	00008311 	andeq	r8, r0, r1, lsl r3
     4cc:	48230200 	stmdami	r3!, {r9}
     4d0:	00025f0a 	andeq	r5, r2, sl, lsl #30
     4d4:	01d50600 	bicseq	r0, r5, r0, lsl #12
     4d8:	0000770c 	andeq	r7, r0, ip, lsl #14
     4dc:	4c230200 	sfmmi	f0, 4, [r3], #-0
     4e0:	0002a00a 	andeq	sl, r2, sl
     4e4:	01d60600 	bicseq	r0, r6, r0, lsl #12
     4e8:	00008311 	andeq	r8, r0, r1, lsl r3
     4ec:	50230200 	eorpl	r0, r3, r0, lsl #4
     4f0:	0002e50a 	andeq	lr, r2, sl, lsl #10
     4f4:	01d70600 	bicseq	r0, r7, r0, lsl #12
     4f8:	00008311 	andeq	r8, r0, r1, lsl r3
     4fc:	54230200 	strtpl	r0, [r3], #-512	; 0xfffffe00
     500:	00032c0a 	andeq	r2, r3, sl, lsl #24
     504:	01d80600 	bicseq	r0, r8, r0, lsl #12
     508:	00008311 	andeq	r8, r0, r1, lsl r3
     50c:	58230200 	stmdapl	r3!, {r9}
     510:	0000410a 	andeq	r4, r0, sl, lsl #2
     514:	01d90600 	bicseq	r0, r9, r0, lsl #12
     518:	00008311 	andeq	r8, r0, r1, lsl r3
     51c:	5c230200 	sfmpl	f0, 4, [r3], #-0
     520:	0000ee0a 	andeq	lr, r0, sl, lsl #28
     524:	01da0600 	bicseq	r0, sl, r0, lsl #12
     528:	00008311 	andeq	r8, r0, r1, lsl r3
     52c:	60230200 	eorvs	r0, r3, r0, lsl #4
     530:	00016f0a 	andeq	r6, r1, sl, lsl #30
     534:	01db0600 	bicseq	r0, fp, r0, lsl #12
     538:	00008311 	andeq	r8, r0, r1, lsl r3
     53c:	64230200 	strtvs	r0, [r3], #-512	; 0xfffffe00
     540:	0001f50a 	andeq	pc, r1, sl, lsl #10
     544:	01dc0600 	bicseq	r0, ip, r0, lsl #12
     548:	00008311 	andeq	r8, r0, r1, lsl r3
     54c:	68230200 	stmdavs	r3!, {r9}
     550:	0002520a 	andeq	r5, r2, sl, lsl #4
     554:	01dd0600 	bicseq	r0, sp, r0, lsl #12
     558:	00008311 	andeq	r8, r0, r1, lsl r3
     55c:	6c230200 	sfmvs	f0, 4, [r3], #-0
     560:	0002ca0a 	andeq	ip, r2, sl, lsl #20
     564:	01de0600 	bicseq	r0, lr, r0, lsl #12
     568:	00008311 	andeq	r8, r0, r1, lsl r3
     56c:	70230200 	eorvc	r0, r3, r0, lsl #4
     570:	0003100a 	andeq	r1, r3, sl
     574:	01df0600 	bicseq	r0, pc, r0, lsl #12
     578:	00008311 	andeq	r8, r0, r1, lsl r3
     57c:	74230200 	strtvc	r0, [r3], #-512	; 0xfffffe00
     580:	0001d10a 	andeq	sp, r1, sl, lsl #2
     584:	01e00600 	mvneq	r0, r0, lsl #12
     588:	00008311 	andeq	r8, r0, r1, lsl r3
     58c:	78230200 	stmdavc	r3!, {r9}
     590:	0002210a 	andeq	r2, r2, sl, lsl #2
     594:	01e10600 	mvneq	r0, r0, lsl #12
     598:	00008311 	andeq	r8, r0, r1, lsl r3
     59c:	7c230200 	sfmvc	f0, 4, [r3], #-0
     5a0:	0002af0a 	andeq	sl, r2, sl, lsl #30
     5a4:	01e20600 	mvneq	r0, r0, lsl #12
     5a8:	00008311 	andeq	r8, r0, r1, lsl r3
     5ac:	80230300 	eorhi	r0, r3, r0, lsl #6
     5b0:	02f30a01 	rscseq	r0, r3, #4096	; 0x1000
     5b4:	e3060000 	movw	r0, #24576	; 0x6000
     5b8:	00831101 	addeq	r1, r3, r1, lsl #2
     5bc:	23030000 	movwcs	r0, #12288	; 0x3000
     5c0:	390a0184 	stmdbcc	sl, {r2, r7, r8}
     5c4:	06000003 	streq	r0, [r0], -r3
     5c8:	831101e4 	tsthi	r1, #228, 2	; 0x39
     5cc:	03000000 	movweq	r0, #0
     5d0:	0a018823 	beq	62664 <_Min_Stack_Size+0x62264>
     5d4:	00000195 	muleq	r0, r5, r1
     5d8:	1101e506 	tstne	r1, r6, lsl #10
     5dc:	00000083 	andeq	r0, r0, r3, lsl #1
     5e0:	018c2303 	orreq	r2, ip, r3, lsl #6
     5e4:	0001060a 	andeq	r0, r1, sl, lsl #12
     5e8:	01e60600 	mvneq	r0, r0, lsl #12
     5ec:	00008311 	andeq	r8, r0, r1, lsl r3
     5f0:	90230300 	eorls	r0, r3, r0, lsl #6
     5f4:	01750a01 	cmneq	r5, r1, lsl #20
     5f8:	e7060000 	str	r0, [r6, -r0]
     5fc:	00831101 	addeq	r1, r3, r1, lsl #2
     600:	23030000 	movwcs	r0, #12288	; 0x3000
     604:	fb0a0194 	blx	280c5e <_Min_Stack_Size+0x28085e>
     608:	06000001 	streq	r0, [r0], -r1
     60c:	831101e8 	tsthi	r1, #232, 2	; 0x3a
     610:	03000000 	movweq	r0, #0
     614:	0a019823 	beq	666a8 <_Min_Stack_Size+0x662a8>
     618:	00000258 	andeq	r0, r0, r8, asr r2
     61c:	1101e906 	tstne	r1, r6, lsl #18
     620:	00000083 	andeq	r0, r0, r3, lsl #1
     624:	019c2303 	orrseq	r2, ip, r3, lsl #6
     628:	00012d0a 	andeq	r2, r1, sl, lsl #26
     62c:	01ea0600 	mvneq	r0, r0, lsl #12
     630:	00008311 	andeq	r8, r0, r1, lsl r3
     634:	a0230300 	eorge	r0, r3, r0, lsl #6
     638:	019c0a01 	orrseq	r0, ip, r1, lsl #20
     63c:	eb060000 	bl	180644 <_Min_Stack_Size+0x180244>
     640:	00831101 	addeq	r1, r3, r1, lsl #2
     644:	23030000 	movwcs	r0, #12288	; 0x3000
     648:	0e0a01a4 	adfeq<illegal precision>p	f0, f2, f4
     64c:	06000002 	streq	r0, [r0], -r2
     650:	831101ec 	tsthi	r1, #236, 2	; 0x3b
     654:	03000000 	movweq	r0, #0
     658:	0a01a823 	beq	6a6ec <_Min_Stack_Size+0x6a2ec>
     65c:	00000274 	andeq	r0, r0, r4, ror r2
     660:	1101ed06 	tstne	r1, r6, lsl #26
     664:	00000083 	andeq	r0, r0, r3, lsl #1
     668:	01ac2303 			; <UNDEFINED> instruction: 0x01ac2303
     66c:	0002de0a 	andeq	sp, r2, sl, lsl #28
     670:	01ee0600 	mvneq	r0, r0, lsl #12
     674:	00008311 	andeq	r8, r0, r1, lsl r3
     678:	b0230300 	eorlt	r0, r3, r0, lsl #6
     67c:	03250a01 			; <UNDEFINED> instruction: 0x03250a01
     680:	ef060000 	svc	0x00060000
     684:	00831101 	addeq	r1, r3, r1, lsl #2
     688:	23030000 	movwcs	r0, #12288	; 0x3000
     68c:	220a01b4 	andcs	r0, sl, #180, 2	; 0x2d
     690:	06000000 	streq	r0, [r0], -r0
     694:	831101f0 	tsthi	r1, #240, 2	; 0x3c
     698:	03000000 	movweq	r0, #0
     69c:	0a01b823 	beq	6e730 <_Min_Stack_Size+0x6e330>
     6a0:	000000d1 	ldrdeq	r0, [r0], -r1
     6a4:	1101f106 	tstne	r1, r6, lsl #2	; <UNPREDICTABLE>
     6a8:	00000083 	andeq	r0, r0, r3, lsl #1
     6ac:	01bc2303 			; <UNDEFINED> instruction: 0x01bc2303
     6b0:	00014a0a 	andeq	r4, r1, sl, lsl #20
     6b4:	01f20600 	mvnseq	r0, r0, lsl #12
     6b8:	00008311 	andeq	r8, r0, r1, lsl r3
     6bc:	c0230300 	eorgt	r0, r3, r0, lsl #6
     6c0:	01d80a01 	bicseq	r0, r8, r1, lsl #20
     6c4:	f3060000 	vhadd.u8	d0, d6, d0
     6c8:	00831101 	addeq	r1, r3, r1, lsl #2
     6cc:	23030000 	movwcs	r0, #12288	; 0x3000
     6d0:	3a0a01c4 	bcc	280de8 <_Min_Stack_Size+0x2809e8>
     6d4:	06000000 	streq	r0, [r0], -r0
     6d8:	831101f4 	tsthi	r1, #244, 2	; 0x3d
     6dc:	03000000 	movweq	r0, #0
     6e0:	0a01c823 	beq	72774 <_Min_Stack_Size+0x72374>
     6e4:	000000de 	ldrdeq	r0, [r0], -lr
     6e8:	1101f506 	tstne	r1, r6, lsl #10	; <UNPREDICTABLE>
     6ec:	00000083 	andeq	r0, r0, r3, lsl #1
     6f0:	01cc2303 	biceq	r2, ip, r3, lsl #6
     6f4:	00710d00 	rsbseq	r0, r1, r0, lsl #26
     6f8:	f6060000 			; <UNDEFINED> instruction: 0xf6060000
     6fc:	03990301 	orrseq	r0, r9, #67108864	; 0x4000000
     700:	010e0000 	mrseq	r0, (UNDEF: 14)
     704:	00000340 	andeq	r0, r0, r0, asr #6
     708:	01050e02 	tsteq	r5, r2, lsl #28
     70c:	00000096 	muleq	r0, r6, r0
     710:	08000bd8 	stmdaeq	r0, {r3, r4, r6, r7, r8, r9, fp}
     714:	08000c5c 	stmdaeq	r0, {r2, r3, r4, r6, sl, fp}
     718:	00000000 	andeq	r0, r0, r0
     71c:	0007f401 	andeq	pc, r7, r1, lsl #8
     720:	0bea0f00 	bleq	ffa84328 <BootRAM+0xe9f4ac9>
     724:	0c000800 	stceq	8, cr0, [r0], {-0}
     728:	07430800 	strbeq	r0, [r3, -r0, lsl #16]
     72c:	51100000 	tstpl	r0, r0
     730:	02000001 	andeq	r0, r0, #1
     734:	00770311 	rsbseq	r0, r7, r1, lsl r3
     738:	00280000 	eoreq	r0, r8, r0
     73c:	00200000 	eoreq	r0, r0, r0
     740:	0f000000 	svceq	0x00000000
     744:	08000c00 	stmdaeq	r0, {sl, fp}
     748:	08000c14 	stmdaeq	r0, {r2, r4, sl, fp}
     74c:	00000765 	andeq	r0, r0, r5, ror #14
     750:	00015110 	andeq	r5, r1, r0, lsl r1
     754:	16110200 	ldrne	r0, [r1], -r0, lsl #4
     758:	00000077 	andeq	r0, r0, r7, ror r0
     75c:	0000006c 	andeq	r0, r0, ip, rrx
     760:	00000064 	andeq	r0, r0, r4, rrx
     764:	0c140f00 	ldceq	15, cr0, [r4], {-0}
     768:	0c260800 	stceq	8, cr0, [r6], #-0
     76c:	07870800 	streq	r0, [r7, r0, lsl #16]
     770:	51100000 	tstpl	r0, r0
     774:	02000001 	andeq	r0, r0, #1
     778:	00770312 	rsbseq	r0, r7, r2, lsl r3
     77c:	00ae0000 	adceq	r0, lr, r0
     780:	00a80000 	adceq	r0, r8, r0
     784:	0f000000 	svceq	0x00000000
     788:	08000c26 	stmdaeq	r0, {r1, r2, r5, sl, fp}
     78c:	08000c36 	stmdaeq	r0, {r1, r2, r4, r5, sl, fp}
     790:	000007a9 	andeq	r0, r0, r9, lsr #15
     794:	00015110 	andeq	r5, r1, r0, lsl r1
     798:	16120200 	ldrne	r0, [r2], -r0, lsl #4
     79c:	00000077 	andeq	r0, r0, r7, ror r0
     7a0:	000000e6 	andeq	r0, r0, r6, ror #1
     7a4:	000000e0 	andeq	r0, r0, r0, ror #1
     7a8:	09051100 	stmdbeq	r5, {r8, ip}
     7ac:	0c3a0000 	ldceq	0, cr0, [sl], #-0
     7b0:	3a010800 	bcc	427b8 <_Min_Stack_Size+0x423b8>
     7b4:	3c08000c 	stccc	0, cr0, [r8], {12}
     7b8:	0208000c 	andeq	r0, r8, #12
     7bc:	e0120315 	ands	r0, r2, r5, lsl r3
     7c0:	8308000b 	movwhi	r0, #32779	; 0x800b
     7c4:	d1000008 	tstle	r0, r8
     7c8:	13000007 	movwne	r0, #7
     7cc:	31015001 	tstcc	r1, r1
     7d0:	0c3a1400 	cfldrseq	mvf1, [sl], #-0
     7d4:	090f0800 	stmdbeq	pc, {fp}	; <UNPREDICTABLE>
     7d8:	42140000 	andsmi	r0, r4, #0
     7dc:	1d08000c 	stcne	0, cr0, [r8, #-48]	; 0xffffffd0
     7e0:	15000009 	strne	r0, [r0, #-9]
     7e4:	08000c48 	stmdaeq	r0, {r3, r6, sl, fp}
     7e8:	000007f4 	strdeq	r0, [r0], -r4
     7ec:	02500113 	subseq	r0, r0, #-1073741820	; 0xc0000004
     7f0:	00000074 	andeq	r0, r0, r4, ror r0
     7f4:	01b60116 			; <UNDEFINED> instruction: 0x01b60116
     7f8:	0a020000 	beq	80800 <_Min_Stack_Size+0x80400>
     7fc:	03580106 	cmpeq	r8, #-2147483647	; 0x80000001
     800:	03640800 	cmneq	r4, #0, 16
     804:	7d020800 	stcvc	8, cr0, [r2, #-0]
     808:	08230100 	stmdaeq	r3!, {r8}
     80c:	30170000 	andscc	r0, r7, r0
     810:	02000002 	andeq	r0, r0, #2
     814:	0077150a 	rsbseq	r1, r7, sl, lsl #10
     818:	011b0000 	tsteq	fp, r0
     81c:	01150000 	tsteq	r5, r0
     820:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
     824:	00026901 	andeq	r6, r2, r1, lsl #18
     828:	1c080200 	sfmne	f0, 4, [r8], {-0}
     82c:	00035601 	andeq	r5, r3, r1, lsl #12
     830:	00035808 	andeq	r5, r3, r8, lsl #16
     834:	007d0208 	rsbseq	r0, sp, r8, lsl #4
     838:	4e011901 	vmlami.f16	s2, s2, s2	; <UNPREDICTABLE>
     83c:	02000008 	andeq	r0, r0, #8
     840:	1a011c07 	bne	47864 <_Min_Stack_Size+0x47464>
     844:	0002fa01 	andeq	pc, r2, r1, lsl #20
     848:	06a40100 	strteq	r0, [r4], r0, lsl #2
     84c:	0800030c 	stmdaeq	r0, {r2, r3, r8, r9}
     850:	08000354 	stmdaeq	r0, {r2, r4, r6, r8, r9}
     854:	01007d02 	tsteq	r0, r2, lsl #26
     858:	00000883 	andeq	r0, r0, r3, lsl #17
     85c:	0100691b 	tsteq	r0, fp, lsl r9
     860:	00640ca5 	rsbeq	r0, r4, r5, lsr #25
     864:	014e0000 	mrseq	r0, (UNDEF: 78)
     868:	01460000 	mrseq	r0, (UNDEF: 70)
     86c:	741b0000 	ldrvc	r0, [fp], #-0
     870:	0100706d 	tsteq	r0, sp, rrx
     874:	00770ca6 	rsbseq	r0, r7, r6, lsr #25
     878:	01960000 	orrseq	r0, r6, r0
     87c:	01920000 	orrseq	r0, r2, r0
     880:	1c000000 	stcne	0, cr0, [r0], {-0}
     884:	0000c801 	andeq	ip, r0, r1, lsl #16
     888:	084c0100 	stmdaeq	ip, {r8}^
     88c:	00003001 	andeq	r3, r0, r1
     890:	0001e800 	andeq	lr, r1, r0, lsl #16
     894:	00030c08 	andeq	r0, r3, r8, lsl #24
     898:	007d0208 	rsbseq	r0, sp, r8, lsl #4
     89c:	0008dc01 	andeq	sp, r8, r1, lsl #24
     8a0:	02071700 	andeq	r1, r7, #0, 14
     8a4:	4c010000 	stcmi	0, cr0, [r1], {-0}
     8a8:	00003018 	andeq	r3, r0, r8, lsl r0
     8ac:	0001bd00 	andeq	fp, r1, r0, lsl #26
     8b0:	0001b500 	andeq	fp, r1, r0, lsl #10
     8b4:	00691b00 	rsbeq	r1, r9, r0, lsl #22
     8b8:	640c4d01 	strvs	r4, [ip], #-3329	; 0xfffff2ff
     8bc:	1b000000 	blne	8c4 <_Min_Stack_Size+0x4c4>
     8c0:	f7000002 			; <UNDEFINED> instruction: 0xf7000002
     8c4:	1b000001 	blne	8d0 <_Min_Stack_Size+0x4d0>
     8c8:	00706d74 	rsbseq	r6, r0, r4, ror sp
     8cc:	770c4e01 	strvc	r4, [ip, -r1, lsl #28]
     8d0:	5a000000 	bpl	8d8 <_Min_Stack_Size+0x4d8>
     8d4:	36000003 	strcc	r0, [r0], -r3
     8d8:	00000003 	andeq	r0, r0, r3
     8dc:	01430116 	cmpeq	r3, r6, lsl r1
     8e0:	1c010000 	stcne	0, cr0, [r1], {-0}
     8e4:	01500106 	cmpeq	r0, r6, lsl #2
     8e8:	01e80800 	mvneq	r0, r0, lsl #16
     8ec:	7d020800 	stcvc	8, cr0, [r2, #-0]
     8f0:	09050100 	stmdbeq	r5, {r8}
     8f4:	321d0000 	andscc	r0, sp, #0
     8f8:	01000003 	tsteq	r0, r3
     8fc:	0051151c 	subseq	r1, r1, ip, lsl r5
     900:	50010000 	andpl	r0, r1, r0
     904:	023e1e00 	eorseq	r1, lr, #0, 28
     908:	b4030000 	strlt	r0, [r3], #-0
     90c:	1f031604 	svcne	0x00031604
     910:	00300101 	eorseq	r0, r0, r1, lsl #2
     914:	00300000 	eorseq	r0, r0, r0
     918:	24070000 	strcs	r0, [r7], #-0
     91c:	01011f06 	tsteq	r1, r6, lsl #30
     920:	00000115 	andeq	r0, r0, r5, lsl r1
     924:	00000115 	andeq	r0, r0, r5, lsl r1
     928:	00064207 	andeq	r4, r6, r7, lsl #4
     92c:	0000126a 	andeq	r1, r0, sl, ror #4
     930:	02170002 	andseq	r0, r7, #2
     934:	01040000 	mrseq	r0, (UNDEF: 4)
     938:	00000345 	andeq	r0, r0, r5, asr #6
     93c:	0007690c 	andeq	r6, r7, ip, lsl #18
     940:	00007d00 	andeq	r7, r0, r0, lsl #26
     944:	00036400 	andeq	r6, r3, r0, lsl #8
     948:	00098408 	andeq	r8, r9, r8, lsl #8
     94c:	00043308 	andeq	r3, r4, r8, lsl #6
     950:	06010200 	streq	r0, [r1], -r0, lsl #4
     954:	0000027d 	andeq	r0, r0, sp, ror r2
     958:	96050202 	strls	r0, [r5], -r2, lsl #4
     95c:	02000002 	andeq	r0, r0, #2
     960:	00a70504 	adceq	r0, r7, r4, lsl #10
     964:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
     968:	0000a205 	andeq	sl, r0, r5, lsl #4
     96c:	03160300 	tsteq	r6, #0, 6
     970:	2e040000 	cdpcs	0, 0, cr0, cr4, cr0, {0}
     974:	00005718 	andeq	r5, r0, r8, lsl r7
     978:	00410400 	subeq	r0, r1, r0, lsl #8
     97c:	41050000 	mrsmi	r0, (UNDEF: 5)
     980:	02000000 	andeq	r0, r0, #0
     984:	027b0801 	rsbseq	r0, fp, #65536	; 0x10000
     988:	24030000 	strcs	r0, [r3], #-0
     98c:	04000001 	streq	r0, [r0], #-1
     990:	006f1931 	rsbeq	r1, pc, r1, lsr r9	; <UNPREDICTABLE>
     994:	5e040000 	cdppl	0, 0, cr0, cr4, cr0, {0}
     998:	02000000 	andeq	r0, r0, #0
     99c:	01a30702 			; <UNDEFINED> instruction: 0x01a30702
     9a0:	d0030000 	andle	r0, r3, r0
     9a4:	04000002 	streq	r0, [r0], #-2
     9a8:	00871934 	addeq	r1, r7, r4, lsr r9
     9ac:	76040000 	strvc	r0, [r4], -r0
     9b0:	02000000 	andeq	r0, r0, #0
     9b4:	00570704 	subseq	r0, r7, r4, lsl #14
     9b8:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
     9bc:	00005207 	andeq	r5, r0, r7, lsl #4
     9c0:	05040600 	streq	r0, [r4, #-1536]	; 0xfffffa00
     9c4:	00746e69 	rsbseq	r6, r4, r9, ror #28
     9c8:	00009504 	andeq	r9, r0, r4, lsl #10
     9cc:	07040200 	streq	r0, [r4, -r0, lsl #4]
     9d0:	0000005c 	andeq	r0, r0, ip, asr r0
     9d4:	00071e03 	andeq	r1, r7, r3, lsl #28
     9d8:	0f1a0300 	svceq	0x001a0300
     9dc:	000000b4 	strheq	r0, [r0], -r4
     9e0:	00ba0407 	adcseq	r0, sl, r7, lsl #8
     9e4:	01080000 	mrseq	r0, (UNDEF: 8)
     9e8:	000000c6 	andeq	r0, r0, r6, asr #1
     9ec:	00004109 	andeq	r4, r0, r9, lsl #2
     9f0:	080a0000 	stmdaeq	sl, {}	; <UNPREDICTABLE>
     9f4:	1b091b03 	blne	247608 <_Min_Stack_Size+0x247208>
     9f8:	0b000001 	bleq	a04 <_Min_Stack_Size+0x604>
     9fc:	00000462 	andeq	r0, r0, r2, ror #8
     a00:	410b1c03 	tstmi	fp, r3, lsl #24
     a04:	02000000 	andeq	r0, r0, #0
     a08:	850b0023 	strhi	r0, [fp, #-35]	; 0xffffffdd
     a0c:	03000008 	movweq	r0, #8
     a10:	00410b1d 	subeq	r0, r1, sp, lsl fp
     a14:	23020000 	movwcs	r0, #8192	; 0x2000
     a18:	04d10b01 	ldrbeq	r0, [r1], #2817	; 0xb01
     a1c:	1e030000 	cdpne	0, 0, cr0, cr3, cr0, {0}
     a20:	00005e0c 	andeq	r5, r0, ip, lsl #28
     a24:	02230200 	eoreq	r0, r3, #0, 4
     a28:	0003ea0b 	andeq	lr, r3, fp, lsl #20
     a2c:	0c1f0300 	ldceq	3, cr0, [pc], {-0}
     a30:	0000005e 	andeq	r0, r0, lr, asr r0
     a34:	0b042302 	bleq	109644 <_Min_Stack_Size+0x109244>
     a38:	00000868 	andeq	r0, r0, r8, ror #16
     a3c:	5e0c2003 	cdppl	0, 0, cr2, cr12, cr3, {0}
     a40:	02000000 	andeq	r0, r0, #0
     a44:	03000623 	movweq	r0, #1571	; 0x623
     a48:	000008f1 	strdeq	r0, [r0], -r1
     a4c:	c6022103 	strgt	r2, [r2], -r3, lsl #2
     a50:	0c000000 	stceq	0, cr0, [r0], {-0}
     a54:	00250105 	eoreq	r0, r5, r5, lsl #2
     a58:	58050000 	stmdapl	r5, {}	; <UNPREDICTABLE>
     a5c:	00029e01 	andeq	r9, r2, r1, lsl #28
     a60:	08540d00 	ldmdaeq	r4, {r8, sl, fp}^
     a64:	0d720000 	ldcleq	0, cr0, [r2, #-0]
     a68:	000004d8 	ldrdeq	r0, [r0], -r8
     a6c:	06fc0d74 			; <UNDEFINED> instruction: 0x06fc0d74
     a70:	0d750000 	ldcleq	0, cr0, [r5, #-0]
     a74:	00000937 	andeq	r0, r0, r7, lsr r9
     a78:	04300d76 	ldrteq	r0, [r0], #-3446	; 0xfffff28a
     a7c:	0d7b0000 	ldcleq	0, cr0, [fp, #-0]
     a80:	00000925 	andeq	r0, r0, r5, lsr #18
     a84:	04b50d7c 	ldrteq	r0, [r5], #3452	; 0xd7c
     a88:	0d7e0000 	ldcleq	0, cr0, [lr, #-0]
     a8c:	000008bd 			; <UNDEFINED> instruction: 0x000008bd
     a90:	06d80e7f 			; <UNDEFINED> instruction: 0x06d80e7f
     a94:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
     a98:	00000715 	andeq	r0, r0, r5, lsl r7
     a9c:	04fd0e01 	ldrbteq	r0, [sp], #3585	; 0xe01
     aa0:	0e020000 	cdpeq	0, 0, cr0, cr2, cr0, {0}
     aa4:	000005ec 	andeq	r0, r0, ip, ror #11
     aa8:	047d0e03 	ldrbteq	r0, [sp], #-3587	; 0xfffff1fd
     aac:	0e040000 	cdpeq	0, 0, cr0, cr4, cr0, {0}
     ab0:	000004c8 	andeq	r0, r0, r8, asr #9
     ab4:	04920e05 	ldreq	r0, [r2], #3589	; 0xe05
     ab8:	0e060000 	cdpeq	0, 0, cr0, cr6, cr0, {0}
     abc:	0000087a 	andeq	r0, r0, sl, ror r8
     ac0:	06160e07 	ldreq	r0, [r6], -r7, lsl #28
     ac4:	0e080000 	cdpeq	0, 0, cr0, cr8, cr0, {0}
     ac8:	000009cc 	andeq	r0, r0, ip, asr #19
     acc:	070a0e09 	streq	r0, [sl, -r9, lsl #28]
     ad0:	0e0a0000 	cdpeq	0, 0, cr0, cr10, cr0, {0}
     ad4:	0000069f 	muleq	r0, pc, r6	; <UNPREDICTABLE>
     ad8:	04430e0b 	strbeq	r0, [r3], #-3595	; 0xfffff1f5
     adc:	0e0c0000 	cdpeq	0, 0, cr0, cr12, cr0, {0}
     ae0:	00000756 	andeq	r0, r0, r6, asr r7
     ae4:	05520e0d 	ldrbeq	r0, [r2, #-3597]	; 0xfffff1f3
     ae8:	0e0e0000 	cdpeq	0, 0, cr0, cr14, cr0, {0}
     aec:	000009a1 	andeq	r0, r0, r1, lsr #19
     af0:	06620e0f 	strbteq	r0, [r2], -pc, lsl #28
     af4:	0e100000 	cdpeq	0, 1, cr0, cr0, cr0, {0}
     af8:	00000410 	andeq	r0, r0, r0, lsl r4
     afc:	06210e11 			; <UNDEFINED> instruction: 0x06210e11
     b00:	0e120000 	cdpeq	0, 1, cr0, cr2, cr0, {0}
     b04:	00000919 	andeq	r0, r0, r9, lsl r9
     b08:	0a2d0e13 	beq	b4435c <_Min_Stack_Size+0xb43f5c>
     b0c:	0e140000 	cdpeq	0, 1, cr0, cr4, cr0, {0}
     b10:	000009bb 			; <UNDEFINED> instruction: 0x000009bb
     b14:	05740e15 	ldrbeq	r0, [r4, #-3605]!	; 0xfffff1eb
     b18:	0e160000 	cdpeq	0, 1, cr0, cr6, cr0, {0}
     b1c:	00000971 	andeq	r0, r0, r1, ror r9
     b20:	04060e17 	streq	r0, [r6], #-3607	; 0xfffff1e9
     b24:	0e190000 	cdpeq	0, 1, cr0, cr9, cr0, {0}
     b28:	000006cd 	andeq	r0, r0, sp, asr #13
     b2c:	03df0e1a 	bicseq	r0, pc, #416	; 0x1a0
     b30:	0e1b0000 	cdpeq	0, 1, cr0, cr11, cr0, {0}
     b34:	000008d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     b38:	06950e1c 			; <UNDEFINED> instruction: 0x06950e1c
     b3c:	0e1d0000 	cdpeq	0, 1, cr0, cr13, cr0, {0}
     b40:	00000439 	andeq	r0, r0, r9, lsr r4
     b44:	07770e1e 			; <UNDEFINED> instruction: 0x07770e1e
     b48:	0e1f0000 	cdpeq	0, 1, cr0, cr15, cr0, {0}
     b4c:	000008b0 			; <UNDEFINED> instruction: 0x000008b0
     b50:	062b0e20 	strteq	r0, [fp], -r0, lsr #28
     b54:	0e210000 	cdpeq	0, 2, cr0, cr1, cr0, {0}
     b58:	00000423 	andeq	r0, r0, r3, lsr #8
     b5c:	05300e22 	ldreq	r0, [r0, #-3618]!	; 0xfffff1de
     b60:	0e230000 	cdpeq	0, 2, cr0, cr3, cr0, {0}
     b64:	00000988 	andeq	r0, r0, r8, lsl #19
     b68:	083c0e24 	ldmdaeq	ip!, {r2, r5, r9, sl, fp}
     b6c:	0e250000 	cdpeq	0, 2, cr0, cr5, cr0, {0}
     b70:	000005cd 	andeq	r0, r0, sp, asr #11
     b74:	0a170e26 	beq	5c4414 <_Min_Stack_Size+0x5c4014>
     b78:	0e270000 	cdpeq	0, 2, cr0, cr7, cr0, {0}
     b7c:	0000049d 	muleq	r0, sp, r4
     b80:	07b50e28 	ldreq	r0, [r5, r8, lsr #28]!
     b84:	0e290000 	cdpeq	0, 2, cr0, cr9, cr0, {0}
     b88:	00000817 	andeq	r0, r0, r7, lsl r8
     b8c:	05480e2a 	strbeq	r0, [r8, #-3626]	; 0xfffff1d6
     b90:	0e2b0000 	cdpeq	0, 2, cr0, cr11, cr0, {0}
     b94:	00000997 	muleq	r0, r7, r9
     b98:	074c0e2c 	strbeq	r0, [ip, -ip, lsr #28]
     b9c:	0e2e0000 	cdpeq	0, 2, cr0, cr14, cr0, {0}
     ba0:	0000063d 	andeq	r0, r0, sp, lsr r6
     ba4:	06750e2f 	ldrbteq	r0, [r5], -pc, lsr #28
     ba8:	0e320000 	cdpeq	0, 3, cr0, cr2, cr0, {0}
     bac:	00000a04 	andeq	r0, r0, r4, lsl #20
     bb0:	07390e33 			; <UNDEFINED> instruction: 0x07390e33
     bb4:	0e340000 	cdpeq	0, 3, cr0, cr4, cr0, {0}
     bb8:	00000514 	andeq	r0, r0, r4, lsl r5
     bbc:	089d0e35 	ldmeq	sp, {r0, r2, r4, r5, r9, sl, fp}
     bc0:	0e360000 	cdpeq	0, 3, cr0, cr6, cr0, {0}
     bc4:	00000654 	andeq	r0, r0, r4, asr r6
     bc8:	ba030038 	blt	c0cb0 <_Min_Stack_Size+0xc08b0>
     bcc:	05000005 	streq	r0, [r0, #-5]
     bd0:	01270398 			; <UNDEFINED> instruction: 0x01270398
     bd4:	040f0000 	streq	r0, [pc], #-0	; bdc <_Min_Stack_Size+0x7dc>
     bd8:	0984020e 	stmibeq	r4, {r1, r2, r3, r9}
     bdc:	00000382 	andeq	r0, r0, r2, lsl #7
     be0:	00050f0b 	andeq	r0, r5, fp, lsl #30
     be4:	11860200 	orrne	r0, r6, r0, lsl #4
     be8:	00000392 	muleq	r0, r2, r3
     bec:	0b002302 	bleq	97fc <_Min_Stack_Size+0x93fc>
     bf0:	000007d1 	ldrdeq	r0, [r0], -r1
     bf4:	97118702 	ldrls	r8, [r1, -r2, lsl #14]
     bf8:	02000003 	andeq	r0, r0, #3
     bfc:	830b2023 	movwhi	r2, #45091	; 0xb023
     c00:	02000009 	andeq	r0, r0, #9
     c04:	03921188 	orrseq	r1, r2, #136, 2	; 0x22
     c08:	23030000 	movwcs	r0, #12288	; 0x3000
     c0c:	270b0180 	strcs	r0, [fp, -r0, lsl #3]
     c10:	02000005 	andeq	r0, r0, #5
     c14:	03971189 	orrseq	r1, r7, #1073741858	; 0x40000022
     c18:	23030000 	movwcs	r0, #12288	; 0x3000
     c1c:	ea0b01a0 	b	2c12a4 <_Min_Stack_Size+0x2c0ea4>
     c20:	02000009 	andeq	r0, r0, #9
     c24:	0392118a 	orrseq	r1, r2, #-2147483614	; 0x80000022
     c28:	23030000 	movwcs	r0, #12288	; 0x3000
     c2c:	e50b0280 	str	r0, [fp, #-640]	; 0xfffffd80
     c30:	02000007 	andeq	r0, r0, #7
     c34:	0397118b 	orrseq	r1, r7, #-1073741790	; 0xc0000022
     c38:	23030000 	movwcs	r0, #12288	; 0x3000
     c3c:	340b02a0 	strcc	r0, [fp], #-672	; 0xfffffd60
     c40:	02000007 	andeq	r0, r0, #7
     c44:	0392118c 	orrseq	r1, r2, #140, 2	; 0x23
     c48:	23030000 	movwcs	r0, #12288	; 0x3000
     c4c:	ef0b0380 	svc	0x000b0380
     c50:	02000007 	andeq	r0, r0, #7
     c54:	0397118d 	orrseq	r1, r7, #1073741859	; 0x40000023
     c58:	23030000 	movwcs	r0, #12288	; 0x3000
     c5c:	920b03a0 	andls	r0, fp, #160, 6	; 0x80000002
     c60:	02000009 	andeq	r0, r0, #9
     c64:	0392118e 	orrseq	r1, r2, #-2147483613	; 0x80000023
     c68:	23030000 	movwcs	r0, #12288	; 0x3000
     c6c:	f90b0480 			; <UNDEFINED> instruction: 0xf90b0480
     c70:	02000007 	andeq	r0, r0, #7
     c74:	03a7118f 			; <UNDEFINED> instruction: 0x03a7118f
     c78:	23030000 	movwcs	r0, #12288	; 0x3000
     c7c:	491004a0 	ldmdbmi	r0, {r5, r7, sl}
     c80:	90020050 	andls	r0, r2, r0, asr r0
     c84:	0003c711 	andeq	ip, r3, r1, lsl r7
     c88:	80230300 	eorhi	r0, r3, r0, lsl #6
     c8c:	08030b06 	stmdaeq	r3, {r1, r2, r8, r9, fp}
     c90:	91020000 	mrsls	r0, (UNDEF: 2)
     c94:	0003cc11 	andeq	ip, r3, r1, lsl ip
     c98:	f0230300 			; <UNDEFINED> instruction: 0xf0230300
     c9c:	07b00b07 	ldreq	r0, [r0, r7, lsl #22]!
     ca0:	92020000 	andls	r0, r2, #0
     ca4:	00008211 	andeq	r8, r0, r1, lsl r2
     ca8:	80230300 	eorhi	r0, r3, r0, lsl #6
     cac:	8211001c 	andshi	r0, r1, #28
     cb0:	92000000 	andls	r0, r0, #0
     cb4:	12000003 	andne	r0, r0, #3
     cb8:	000000a1 	andeq	r0, r0, r1, lsr #1
     cbc:	82040007 	andhi	r0, r4, #7
     cc0:	11000003 	tstne	r0, r3
     cc4:	00000076 	andeq	r0, r0, r6, ror r0
     cc8:	000003a7 	andeq	r0, r0, r7, lsr #7
     ccc:	0000a112 	andeq	sl, r0, r2, lsl r1
     cd0:	11001700 	tstne	r0, r0, lsl #14
     cd4:	00000076 	andeq	r0, r0, r6, ror r0
     cd8:	000003b7 			; <UNDEFINED> instruction: 0x000003b7
     cdc:	0000a112 	andeq	sl, r0, r2, lsl r1
     ce0:	11003700 	tstne	r0, r0, lsl #14
     ce4:	0000004d 	andeq	r0, r0, sp, asr #32
     ce8:	000003c7 	andeq	r0, r0, r7, asr #7
     cec:	0000a112 	andeq	sl, r0, r2, lsl r1
     cf0:	0400ef00 	streq	lr, [r0], #-3840	; 0xfffff100
     cf4:	000003b7 			; <UNDEFINED> instruction: 0x000003b7
     cf8:	00007611 	andeq	r7, r0, r1, lsl r6
     cfc:	0003dd00 	andeq	sp, r3, r0, lsl #26
     d00:	00a11300 	adceq	r1, r1, r0, lsl #6
     d04:	02830000 	addeq	r0, r3, #0
     d08:	088e0300 	stmeq	lr, {r8, r9}
     d0c:	93020000 	movwls	r0, #8192	; 0x2000
     d10:	0002aa04 	andeq	sl, r2, r4, lsl #20
     d14:	02891400 	addeq	r1, r9, #0, 8
     d18:	ce020000 	cdpgt	0, 0, cr0, cr2, cr0, {0}
     d1c:	009c1506 	addseq	r1, ip, r6, lsl #10
     d20:	01010000 	mrseq	r0, (UNDEF: 1)
     d24:	00015f15 	andeq	r5, r1, r5, lsl pc
     d28:	114c0600 	cmpne	ip, r0, lsl #12
     d2c:	00000076 	andeq	r0, r0, r6, ror r0
     d30:	18160101 	ldmdane	r6, {r0, r8}
     d34:	09016105 	stmdbeq	r1, {r0, r2, r8, sp, lr}
     d38:	00000441 	andeq	r0, r0, r1, asr #8
     d3c:	0004c117 	andeq	ip, r4, r7, lsl r1
     d40:	01630500 	cmneq	r3, r0, lsl #10
     d44:	00008211 	andeq	r8, r0, r1, lsl r2
     d48:	00230200 	eoreq	r0, r3, r0, lsl #4
     d4c:	434d5018 	movtmi	r5, #53272	; 0xd018
     d50:	01640500 	cmneq	r4, r0, lsl #10
     d54:	00008211 	andeq	r8, r0, r1, lsl r2
     d58:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     d5c:	0006c117 	andeq	ip, r6, r7, lsl r1
     d60:	01650500 	cmneq	r5, r0, lsl #10
     d64:	00045111 	andeq	r5, r4, r1, lsl r1
     d68:	08230200 	stmdaeq	r3!, {r9}
     d6c:	00821100 	addeq	r1, r2, r0, lsl #2
     d70:	04510000 	ldrbeq	r0, [r1], #-0
     d74:	a1120000 	tstge	r2, r0
     d78:	03000000 	movweq	r0, #0
     d7c:	04410400 	strbeq	r0, [r1], #-1024	; 0xfffffc00
     d80:	f1190000 			; <UNDEFINED> instruction: 0xf1190000
     d84:	05000003 	streq	r0, [r0, #-3]
     d88:	06030166 	streq	r0, [r3], -r6, ror #2
     d8c:	16000004 	strne	r0, [r0], -r4
     d90:	01930538 	orrseq	r0, r3, r8, lsr r5
     d94:	00054d09 	andeq	r4, r5, r9, lsl #26
     d98:	52431800 	subpl	r1, r3, #0, 16
     d9c:	01950500 	orrseq	r0, r5, r0, lsl #10
     da0:	00008211 	andeq	r8, r0, r1, lsl r2
     da4:	00230200 	eoreq	r0, r3, r0, lsl #4
     da8:	00030a17 	andeq	r0, r3, r7, lsl sl
     dac:	01960500 	orrseq	r0, r6, r0, lsl #10
     db0:	00008211 	andeq	r8, r0, r1, lsl r2
     db4:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     db8:	0002c517 	andeq	ip, r2, r7, lsl r5
     dbc:	01970500 	orrseq	r0, r7, r0, lsl #10
     dc0:	00008211 	andeq	r8, r0, r1, lsl r2
     dc4:	08230200 	stmdaeq	r3!, {r9}
     dc8:	52494318 	subpl	r4, r9, #24, 6	; 0x60000000
     dcc:	01980500 	orrseq	r0, r8, r0, lsl #10
     dd0:	00008211 	andeq	r8, r0, r1, lsl r2
     dd4:	0c230200 	sfmeq	f0, 4, [r3], #-0
     dd8:	00022817 	andeq	r2, r2, r7, lsl r8
     ddc:	01990500 	orrseq	r0, r9, r0, lsl #10
     de0:	00008211 	andeq	r8, r0, r1, lsl r2
     de4:	10230200 	eorne	r0, r3, r0, lsl #4
     de8:	0000e517 	andeq	lr, r0, r7, lsl r5
     dec:	019a0500 	orrseq	r0, sl, r0, lsl #10
     df0:	00008211 	andeq	r8, r0, r1, lsl r2
     df4:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     df8:	00023517 	andeq	r3, r2, r7, lsl r5
     dfc:	019b0500 	orrseq	r0, fp, r0, lsl #10
     e00:	00008211 	andeq	r8, r0, r1, lsl r2
     e04:	18230200 	stmdane	r3!, {r9}
     e08:	0003d817 	andeq	sp, r3, r7, lsl r8
     e0c:	019c0500 	orrseq	r0, ip, r0, lsl #10
     e10:	00008211 	andeq	r8, r0, r1, lsl r2
     e14:	1c230200 	sfmne	f0, 4, [r3], #-0
     e18:	0002b617 	andeq	fp, r2, r7, lsl r6
     e1c:	019d0500 	orrseq	r0, sp, r0, lsl #10
     e20:	00008211 	andeq	r8, r0, r1, lsl r2
     e24:	20230200 	eorcs	r0, r3, r0, lsl #4
     e28:	0002eb17 	andeq	lr, r2, r7, lsl fp
     e2c:	019e0500 	orrseq	r0, lr, r0, lsl #10
     e30:	00008211 	andeq	r8, r0, r1, lsl r2
     e34:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
     e38:	0000fd17 	andeq	pc, r0, r7, lsl sp	; <UNPREDICTABLE>
     e3c:	019f0500 	orrseq	r0, pc, r0, lsl #10
     e40:	00008211 	andeq	r8, r0, r1, lsl r2
     e44:	28230200 	stmdacs	r3!, {r9}
     e48:	0001df17 	andeq	sp, r1, r7, lsl pc
     e4c:	01a00500 	lsleq	r0, r0, #10
     e50:	00008211 	andeq	r8, r0, r1, lsl r2
     e54:	2c230200 	sfmcs	f0, 4, [r3], #-0
     e58:	0001bc17 	andeq	fp, r1, r7, lsl ip
     e5c:	01a10500 			; <UNDEFINED> instruction: 0x01a10500
     e60:	00008211 	andeq	r8, r0, r1, lsl r2
     e64:	30230200 	eorcc	r0, r3, r0, lsl #4
     e68:	52534318 	subspl	r4, r3, #24, 6	; 0x60000000
     e6c:	01a20500 			; <UNDEFINED> instruction: 0x01a20500
     e70:	00008211 	andeq	r8, r0, r1, lsl r2
     e74:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
     e78:	01891900 	orreq	r1, r9, r0, lsl #18
     e7c:	a3050000 	movwge	r0, #20480	; 0x5000
     e80:	04630301 	strbteq	r0, [r3], #-769	; 0xfffffcff
     e84:	54160000 	ldrpl	r0, [r6], #-0
     e88:	09023705 	stmdbeq	r2, {r0, r2, r8, r9, sl, ip, sp}
     e8c:	00000705 	andeq	r0, r0, r5, lsl #14
     e90:	0005e717 	andeq	lr, r5, r7, lsl r7
     e94:	02390500 	eorseq	r0, r9, #0, 10
     e98:	00006a11 	andeq	r6, r0, r1, lsl sl
     e9c:	00230200 	eoreq	r0, r3, r0, lsl #4
     ea0:	0007d117 	andeq	sp, r7, r7, lsl r1
     ea4:	023a0500 	eorseq	r0, sl, #0, 10
     ea8:	00006a11 	andeq	r6, r0, r1, lsl sl
     eac:	02230200 	eoreq	r0, r3, #0, 4
     eb0:	00063817 	andeq	r3, r6, r7, lsl r8
     eb4:	023b0500 	eorseq	r0, fp, #0, 10
     eb8:	00006a11 	andeq	r6, r0, r1, lsl sl
     ebc:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     ec0:	0007db17 	andeq	sp, r7, r7, lsl fp
     ec4:	023c0500 	eorseq	r0, ip, #0, 10
     ec8:	00006a11 	andeq	r6, r0, r1, lsl sl
     ecc:	06230200 	strteq	r0, [r3], -r0, lsl #4
     ed0:	0006c817 	andeq	ip, r6, r7, lsl r8
     ed4:	023d0500 	eorseq	r0, sp, #0, 10
     ed8:	00006a11 	andeq	r6, r0, r1, lsl sl
     edc:	08230200 	stmdaeq	r3!, {r9}
     ee0:	0007e517 	andeq	lr, r7, r7, lsl r5
     ee4:	023e0500 	eorseq	r0, lr, #0, 10
     ee8:	00006a11 	andeq	r6, r0, r1, lsl sl
     eec:	0a230200 	beq	8c16f4 <_Min_Stack_Size+0x8c12f4>
     ef0:	0006f717 	andeq	pc, r6, r7, lsl r7	; <UNPREDICTABLE>
     ef4:	023f0500 	eorseq	r0, pc, #0, 10
     ef8:	00006a11 	andeq	r6, r0, r1, lsl sl
     efc:	0c230200 	sfmeq	f0, 4, [r3], #-0
     f00:	0007ef17 	andeq	lr, r7, r7, lsl pc
     f04:	02400500 	subeq	r0, r0, #0, 10
     f08:	00006a11 	andeq	r6, r0, r1, lsl sl
     f0c:	0e230200 	cdpeq	2, 2, cr0, cr3, cr0, {0}
     f10:	00097e17 	andeq	r7, r9, r7, lsl lr
     f14:	02410500 	subeq	r0, r1, #0, 10
     f18:	00006a11 	andeq	r6, r0, r1, lsl sl
     f1c:	10230200 	eorne	r0, r3, r0, lsl #4
     f20:	0007f917 	andeq	pc, r7, r7, lsl r9	; <UNPREDICTABLE>
     f24:	02420500 	subeq	r0, r2, #0, 10
     f28:	00006a11 	andeq	r6, r0, r1, lsl sl
     f2c:	12230200 	eorne	r0, r3, #0, 4
     f30:	0007cc17 	andeq	ip, r7, r7, lsl ip
     f34:	02430500 	subeq	r0, r3, #0, 10
     f38:	00006a11 	andeq	r6, r0, r1, lsl sl
     f3c:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     f40:	00080317 	andeq	r0, r8, r7, lsl r3
     f44:	02440500 	subeq	r0, r4, #0, 10
     f48:	00006a11 	andeq	r6, r0, r1, lsl sl
     f4c:	16230200 	strtne	r0, [r3], -r0, lsl #4
     f50:	00087017 	andeq	r7, r8, r7, lsl r0
     f54:	02450500 	subeq	r0, r5, #0, 10
     f58:	00006a11 	andeq	r6, r0, r1, lsl sl
     f5c:	18230200 	stmdane	r3!, {r9}
     f60:	00080d17 	andeq	r0, r8, r7, lsl sp
     f64:	02460500 	subeq	r0, r6, #0, 10
     f68:	00006a11 	andeq	r6, r0, r1, lsl sl
     f6c:	1a230200 	bne	8c1774 <_Min_Stack_Size+0x8c1374>
     f70:	0008ec17 	andeq	lr, r8, r7, lsl ip
     f74:	02470500 	subeq	r0, r7, #0, 10
     f78:	00006a11 	andeq	r6, r0, r1, lsl sl
     f7c:	1c230200 	sfmne	f0, 4, [r3], #-0
     f80:	00025f17 	andeq	r5, r2, r7, lsl pc
     f84:	02480500 	subeq	r0, r8, #0, 10
     f88:	00071511 	andeq	r1, r7, r1, lsl r5
     f8c:	1e230200 	cdpne	2, 2, cr0, cr3, cr0, {0}
     f90:	00089817 	andeq	r9, r8, r7, lsl r8
     f94:	02490500 	subeq	r0, r9, #0, 10
     f98:	00006a11 	andeq	r6, r0, r1, lsl sl
     f9c:	40230200 	eormi	r0, r3, r0, lsl #4
     fa0:	000a2317 	andeq	r2, sl, r7, lsl r3
     fa4:	024a0500 	subeq	r0, sl, #0, 10
     fa8:	00006a11 	andeq	r6, r0, r1, lsl sl
     fac:	42230200 	eormi	r0, r3, #0, 4
     fb0:	0004f817 	andeq	pc, r4, r7, lsl r8	; <UNPREDICTABLE>
     fb4:	024b0500 	subeq	r0, fp, #0, 10
     fb8:	00006a11 	andeq	r6, r0, r1, lsl sl
     fbc:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
     fc0:	00082817 	andeq	r2, r8, r7, lsl r8
     fc4:	024c0500 	subeq	r0, ip, #0, 10
     fc8:	00006a11 	andeq	r6, r0, r1, lsl sl
     fcc:	46230200 	strtmi	r0, [r3], -r0, lsl #4
     fd0:	524e4618 	subpl	r4, lr, #24, 12	; 0x1800000
     fd4:	024d0500 	subeq	r0, sp, #0, 10
     fd8:	00006a11 	andeq	r6, r0, r1, lsl sl
     fdc:	48230200 	stmdami	r3!, {r9}
     fe0:	00083217 	andeq	r3, r8, r7, lsl r2
     fe4:	024e0500 	subeq	r0, lr, #0, 10
     fe8:	00006a11 	andeq	r6, r0, r1, lsl sl
     fec:	4a230200 	bmi	8c17f4 <_Min_Stack_Size+0x8c13f4>
     ff0:	00058a17 	andeq	r8, r5, r7, lsl sl
     ff4:	024f0500 	subeq	r0, pc, #0, 10
     ff8:	00006a11 	andeq	r6, r0, r1, lsl sl
     ffc:	4c230200 	sfmmi	f0, 4, [r3], #-0
    1000:	000a3917 	andeq	r3, sl, r7, lsl r9
    1004:	02500500 	subseq	r0, r0, #0, 10
    1008:	00006a11 	andeq	r6, r0, r1, lsl sl
    100c:	4e230200 	cdpmi	2, 2, cr0, cr3, cr0, {0}
    1010:	0009b417 	andeq	fp, r9, r7, lsl r4
    1014:	02510500 	subseq	r0, r1, #0, 10
    1018:	00006a11 	andeq	r6, r0, r1, lsl sl
    101c:	50230200 	eorpl	r0, r3, r0, lsl #4
    1020:	000a4317 	andeq	r4, sl, r7, lsl r3
    1024:	02520500 	subseq	r0, r2, #0, 10
    1028:	00006a11 	andeq	r6, r0, r1, lsl sl
    102c:	52230200 	eorpl	r0, r3, #0, 4
    1030:	006a1100 	rsbeq	r1, sl, r0, lsl #2
    1034:	07150000 	ldreq	r0, [r5, -r0]
    1038:	a1120000 	tstge	r2, r0
    103c:	10000000 	andne	r0, r0, r0
    1040:	07050400 	streq	r0, [r5, -r0, lsl #8]
    1044:	7e190000 	cdpvc	0, 1, cr0, cr9, cr0, {0}
    1048:	05000005 	streq	r0, [r0, #-5]
    104c:	5a030253 	bpl	c19a0 <_Min_Stack_Size+0xc15a0>
    1050:	0a000005 	beq	106c <_Min_Stack_Size+0xc6c>
    1054:	07210104 	streq	r0, [r1, -r4, lsl #2]!
    1058:	00000767 	andeq	r0, r0, r7, ror #14
    105c:	00072b1a 	andeq	r2, r7, sl, lsl fp
    1060:	12220100 	eorne	r0, r2, #0, 2
    1064:	00000076 	andeq	r0, r0, r6, ror r0
    1068:	02160a04 	andseq	r0, r6, #4, 20	; 0x4000
    106c:	0b1a0023 	bleq	681100 <_Min_Stack_Size+0x680d00>
    1070:	01000009 	tsteq	r0, r9
    1074:	00761223 	rsbseq	r1, r6, r3, lsr #4
    1078:	05040000 	streq	r0, [r4, #-0]
    107c:	00230211 	eoreq	r0, r3, r1, lsl r2
    1080:	0007a31a 	andeq	sl, r7, sl, lsl r3
    1084:	12240100 	eorne	r0, r4, #0, 2
    1088:	00000076 	andeq	r0, r0, r6, ror r0
    108c:	02100104 	andseq	r0, r0, #4, 2
    1090:	1b000023 	blne	1124 <_Min_Stack_Size+0xd24>
    1094:	0e1f0104 	mufeqe	f0, f7, f4
    1098:	00000782 	andeq	r0, r0, r2, lsl #15
    109c:	0007271c 	andeq	r2, r7, ip, lsl r7
    10a0:	10200100 	eorne	r0, r0, r0, lsl #2
    10a4:	00000076 	andeq	r0, r0, r6, ror r0
    10a8:	0007271d 	andeq	r2, r7, sp, lsl r7
    10ac:	67040000 	strvs	r0, [r4, -r0]
    10b0:	0a000007 	beq	10d4 <_Min_Stack_Size+0xcd4>
    10b4:	072a0104 	streq	r0, [sl, -r4, lsl #2]!
    10b8:	000007c7 	andeq	r0, r0, r7, asr #15
    10bc:	0009f31a 	andeq	pc, r9, sl, lsl r3	; <UNPREDICTABLE>
    10c0:	122b0100 	eorne	r0, fp, #0, 2
    10c4:	00000076 	andeq	r0, r0, r6, ror r0
    10c8:	02160a04 	andseq	r0, r6, #4, 20	; 0x4000
    10cc:	841a0023 	ldrhi	r0, [sl], #-35	; 0xffffffdd
    10d0:	01000007 	tsteq	r0, r7
    10d4:	0076122c 	rsbseq	r1, r6, ip, lsr #4
    10d8:	05040000 	streq	r0, [r4, #-0]
    10dc:	00230211 	eoreq	r0, r3, r1, lsl r2
    10e0:	0009471a 	andeq	r4, r9, sl, lsl r7
    10e4:	122d0100 	eorne	r0, sp, #0, 2
    10e8:	00000076 	andeq	r0, r0, r6, ror r0
    10ec:	02100104 	andseq	r0, r0, #4, 2
    10f0:	1b000023 	blne	1184 <_Min_Stack_Size+0xd84>
    10f4:	0e280104 	sufeqe	f0, f0, f4
    10f8:	000007e2 	andeq	r0, r0, r2, ror #15
    10fc:	0009ef1c 	andeq	lr, r9, ip, lsl pc
    1100:	10290100 	eorne	r0, r9, r0, lsl #2
    1104:	00000076 	andeq	r0, r0, r6, ror r0
    1108:	0007871d 	andeq	r8, r7, sp, lsl r7
    110c:	c7040000 	strgt	r0, [r4, -r0]
    1110:	0a000007 	beq	1134 <_Min_Stack_Size+0xd34>
    1114:	091d0110 	ldmdbeq	sp, {r4, r8}
    1118:	0000081f 	andeq	r0, r0, pc, lsl r8
    111c:	0009de0b 	andeq	sp, r9, fp, lsl #28
    1120:	171e0100 	ldrne	r0, [lr, -r0, lsl #2]
    1124:	00000082 	andeq	r0, r0, r2, lsl #1
    1128:	1e002302 	cdpne	3, 0, cr2, cr0, cr2, {0}
    112c:	00000782 	andeq	r0, r0, r2, lsl #15
    1130:	0b042302 	bleq	109d40 <_Min_Stack_Size+0x109940>
    1134:	000008ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    1138:	82172701 	andshi	r2, r7, #262144	; 0x40000
    113c:	02000000 	andeq	r0, r0, #0
    1140:	e21e0823 	ands	r0, lr, #2293760	; 0x230000
    1144:	02000007 	andeq	r0, r0, #7
    1148:	03000c23 	movweq	r0, #3107	; 0xc23
    114c:	00000647 	andeq	r0, r0, r7, asr #12
    1150:	e7023001 	str	r3, [r2, -r1]
    1154:	11000007 	tstne	r0, r7
    1158:	000000a8 	andeq	r0, r0, r8, lsr #1
    115c:	0000083b 	andeq	r0, r0, fp, lsr r8
    1160:	0000a112 	andeq	sl, r0, r2, lsl r1
    1164:	1f000700 	svcne	0x00000700
    1168:	00000954 	andeq	r0, r0, r4, asr r9
    116c:	2b0a3201 	blcs	28d978 <_Min_Stack_Size+0x28d578>
    1170:	01000008 	tsteq	r0, r8
    1174:	00280305 	eoreq	r0, r8, r5, lsl #6
    1178:	031f2000 	tsteq	pc, #0
    117c:	01000006 	tsteq	r0, r6
    1180:	082b0a33 	stmdaeq	fp!, {r0, r1, r4, r5, r9, fp}
    1184:	05010000 	streq	r0, [r1, #-0]
    1188:	00004803 	andeq	r4, r0, r3, lsl #16
    118c:	04702020 	ldrbteq	r2, [r0], #-32	; 0xffffffe0
    1190:	35010000 	strcc	r0, [r1, #-0]
    1194:	00011b16 	andeq	r1, r1, r6, lsl fp
    1198:	1c030500 	cfstr32ne	mvfx0, [r3], {-0}
    119c:	20200000 	eorcs	r0, r0, r0
    11a0:	000005fa 	strdeq	r0, [r0], -sl
    11a4:	41104701 	tstmi	r0, r1, lsl #14
    11a8:	05000000 	streq	r0, [r0, #-0]
    11ac:	00001803 	andeq	r1, r0, r3, lsl #16
    11b0:	060e2020 	streq	r2, [lr], -r0, lsr #32
    11b4:	48010000 	stmdami	r1, {}	; <UNPREDICTABLE>
    11b8:	00089717 	andeq	r9, r8, r7, lsl r7
    11bc:	14030500 	strne	r0, [r3], #-1280	; 0xfffffb00
    11c0:	07200000 	streq	r0, [r0, -r0]!
    11c4:	00005204 	andeq	r5, r0, r4, lsl #4
    11c8:	04ee2000 	strbteq	r2, [lr], #0
    11cc:	49010000 	stmdbmi	r1, {}	; <UNPREDICTABLE>
    11d0:	00005e11 	andeq	r5, r0, r1, lsl lr
    11d4:	1a030500 	bne	c25dc <_Min_Stack_Size+0xc21dc>
    11d8:	20200000 	eorcs	r0, r0, r0
    11dc:	000005d9 	ldrdeq	r0, [r0], -r9
    11e0:	41106401 	tstmi	r0, r1, lsl #8
    11e4:	05000000 	streq	r0, [r0, #-0]
    11e8:	00002603 	andeq	r2, r0, r3, lsl #12
    11ec:	04ac2020 	strteq	r2, [ip], #32
    11f0:	aa010000 	bge	411f8 <_Min_Stack_Size+0x40df8>
    11f4:	00005e11 	andeq	r5, r0, r1, lsl lr
    11f8:	00030500 	andeq	r0, r3, r0, lsl #10
    11fc:	16200000 	strtne	r0, [r0], -r0
    1200:	01360104 	teqeq	r6, r4, lsl #2
    1204:	00091705 	andeq	r1, r9, r5, lsl #14
    1208:	09f32100 	ldmibeq	r3!, {r8, sp}^
    120c:	37010000 	strcc	r0, [r1, -r0]
    1210:	00761001 	rsbseq	r1, r6, r1
    1214:	0a040000 	beq	10121c <_Min_Stack_Size+0x100e1c>
    1218:	00230216 	eoreq	r0, r3, r6, lsl r2
    121c:	00078421 	andeq	r8, r7, r1, lsr #8
    1220:	01380100 	teqeq	r8, r0, lsl #2
    1224:	00007610 	andeq	r7, r0, r0, lsl r6
    1228:	11050400 	tstne	r5, r0, lsl #8
    122c:	21002302 	tstcs	r0, r2, lsl #6
    1230:	00000947 	andeq	r0, r0, r7, asr #18
    1234:	10013901 	andne	r3, r1, r1, lsl #18
    1238:	00000076 	andeq	r0, r0, r6, ror r0
    123c:	02100104 	andseq	r0, r0, #4, 2
    1240:	22000023 	andcs	r0, r0, #35	; 0x23
    1244:	01340104 	teqeq	r4, r4, lsl #2
    1248:	0009340c 	andeq	r3, r9, ip, lsl #8
    124c:	04f22300 	ldrbteq	r2, [r2], #768	; 0x300
    1250:	35010000 	strcc	r0, [r1, #-0]
    1254:	00760e01 	rsbseq	r0, r6, r1, lsl #28
    1258:	d31d0000 	tstle	sp, #0
    125c:	00000008 	andeq	r0, r0, r8
    1260:	00091704 	andeq	r1, r9, r4, lsl #14
    1264:	01081600 	tsteq	r8, r0, lsl #12
    1268:	5c090132 	stfpls	f0, [r9], {50}	; 0x32
    126c:	17000009 	strne	r0, [r0, -r9]
    1270:	00000906 	andeq	r0, r0, r6, lsl #18
    1274:	15013301 	strne	r3, [r1, #-769]	; 0xfffffcff
    1278:	00000082 	andeq	r0, r0, r2, lsl #1
    127c:	1e002302 	cdpne	3, 0, cr2, cr0, cr2, {0}
    1280:	00000934 	andeq	r0, r0, r4, lsr r9
    1284:	00042302 	andeq	r2, r4, r2, lsl #6
    1288:	00045619 	andeq	r5, r4, r9, lsl r6
    128c:	013c0100 	teqeq	ip, r0, lsl #2
    1290:	00093902 	andeq	r3, r9, r2, lsl #18
    1294:	88012400 	stmdahi	r1, {sl, sp}
    1298:	01000006 	tsteq	r0, r6
    129c:	0105014c 	tsteq	r5, ip, asr #2
    12a0:	00000095 	muleq	r0, r5, r0
    12a4:	08000810 	stmdaeq	r0, {r4, fp}
    12a8:	0800086a 	stmdaeq	r0, {r1, r3, r5, r6, fp}
    12ac:	0000044f 	andeq	r0, r0, pc, asr #8
    12b0:	000a1d01 	andeq	r1, sl, r1, lsl #26
    12b4:	64692500 	strbtvs	r2, [r9], #-1280	; 0xfffffb00
    12b8:	4c010078 	stcmi	0, cr0, [r1], {120}	; 0x78
    12bc:	00411a01 	subeq	r1, r1, r1, lsl #20
    12c0:	04730000 	ldrbteq	r0, [r3], #-0
    12c4:	046f0000 	strbteq	r0, [pc], #-0	; 12cc <_Min_Stack_Size+0xecc>
    12c8:	62250000 	eorvs	r0, r5, #0
    12cc:	01006675 	tsteq	r0, r5, ror r6
    12d0:	1d29014c 	stfnes	f0, [r9, #-304]!	; 0xfffffed0
    12d4:	9a00000a 	bls	1304 <_Min_Stack_Size+0xf04>
    12d8:	94000004 	strls	r0, [r0], #-4
    12dc:	26000004 	strcs	r0, [r0], -r4
    12e0:	000005b4 			; <UNDEFINED> instruction: 0x000005b4
    12e4:	10014d01 	andne	r4, r1, r1, lsl #26
    12e8:	00000a23 	andeq	r0, r0, r3, lsr #20
    12ec:	000004cc 	andeq	r0, r0, ip, asr #9
    12f0:	000004c8 	andeq	r0, r0, r8, asr #9
    12f4:	007a7327 	rsbseq	r7, sl, r7, lsr #6
    12f8:	07014e01 	streq	r4, [r1, -r1, lsl #28]
    12fc:	00000095 	muleq	r0, r5, r0
    1300:	000004f6 	strdeq	r0, [r0], -r6
    1304:	000004f4 	strdeq	r0, [r0], -r4
    1308:	01006e27 	tsteq	r0, r7, lsr #28
    130c:	95070150 	strls	r0, [r7, #-336]	; 0xfffffeb0
    1310:	0f000000 	svceq	0x00000000
    1314:	09000005 	stmdbeq	r0, {r0, r2}
    1318:	27000005 	strcs	r0, [r0, -r5]
    131c:	01006e69 	tsteq	r0, r9, ror #28
    1320:	290d0151 	stmdbcs	sp, {r0, r4, r6, r8}
    1324:	4600000a 	strmi	r0, [r0], -sl
    1328:	40000005 	andmi	r0, r0, r5
    132c:	28000005 	stmdacs	r0, {r0, r2}
    1330:	00000088 	andeq	r0, r0, r8, lsl #1
    1334:	01006927 	tsteq	r0, r7, lsr #18
    1338:	950b0152 	strls	r0, [fp, #-338]	; 0xfffffeae
    133c:	73000000 	movwvc	r0, #0
    1340:	71000005 	tstvc	r0, r5
    1344:	00000005 	andeq	r0, r0, r5
    1348:	5e040700 	cdppl	7, 0, cr0, cr4, cr0, {0}
    134c:	07000000 	streq	r0, [r0, -r0]
    1350:	00095c04 	andeq	r5, r9, r4, lsl #24
    1354:	76040700 	strvc	r0, [r4], -r0, lsl #14
    1358:	29000000 	stmdbcs	r0, {}	; <UNPREDICTABLE>
    135c:	00053a01 	andeq	r3, r5, r1, lsl #20
    1360:	013e0100 	teqeq	lr, r0, lsl #2
    1364:	07600106 	strbeq	r0, [r0, -r6, lsl #2]!
    1368:	07b40800 	ldreq	r0, [r4, r0, lsl #16]!
    136c:	05870800 	streq	r0, [r7, #2048]	; 0x800
    1370:	eb010000 	bl	41378 <_Min_Stack_Size+0x40f78>
    1374:	2500000a 	strcs	r0, [r0, #-10]
    1378:	00786469 	rsbseq	r6, r8, r9, ror #8
    137c:	1c013e01 	stcne	14, cr3, [r1], {1}
    1380:	00000041 	andeq	r0, r0, r1, asr #32
    1384:	000005ad 	andeq	r0, r0, sp, lsr #11
    1388:	000005a7 	andeq	r0, r0, r7, lsr #11
    138c:	6675622a 	ldrbtvs	r6, [r5], -sl, lsr #4
    1390:	013e0100 	teqeq	lr, r0, lsl #2
    1394:	00089730 	andeq	r9, r8, r0, lsr r7
    1398:	2b510100 	blcs	14417a0 <_Min_Stack_Size+0x14413a0>
    139c:	000007c7 	andeq	r0, r0, r7, asr #15
    13a0:	3e013e01 	cdpcc	14, 0, cr3, cr1, cr1, {0}
    13a4:	0000005e 	andeq	r0, r0, lr, asr r0
    13a8:	b4265201 	strtlt	r5, [r6], #-513	; 0xfffffdff
    13ac:	01000005 	tsteq	r0, r5
    13b0:	2310013f 	tstcs	r0, #-1073741809	; 0xc000000f
    13b4:	db00000a 	blle	13e4 <_Min_Stack_Size+0xfe4>
    13b8:	d9000005 	stmdble	r0, {r0, r2}
    13bc:	27000005 	strcs	r0, [r0, -r5]
    13c0:	0100324e 	tsteq	r0, lr, asr #4
    13c4:	5e0c0140 	adfplem	f0, f4, f0
    13c8:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
    13cc:	ee000005 	cdp	0, 0, cr0, cr0, cr5, {0}
    13d0:	26000005 	strcs	r0, [r0], -r5
    13d4:	00000400 	andeq	r0, r0, r0, lsl #8
    13d8:	0d014201 	sfmeq	f4, 4, [r1, #-4]
    13dc:	00000a1d 	andeq	r0, r0, sp, lsl sl
    13e0:	00000605 	andeq	r0, r0, r5, lsl #12
    13e4:	00000603 	andeq	r0, r0, r3, lsl #12
    13e8:	74756f27 	ldrbtvc	r6, [r5], #-3879	; 0xfffff0d9
    13ec:	01430100 	mrseq	r0, (UNDEF: 83)
    13f0:	000a290d 	andeq	r2, sl, sp, lsl #18
    13f4:	00061e00 	andeq	r1, r6, r0, lsl #28
    13f8:	00061800 	andeq	r1, r6, r0, lsl #16
    13fc:	00502800 	subseq	r2, r0, r0, lsl #16
    1400:	69270000 	stmdbvs	r7!, {}	; <UNPREDICTABLE>
    1404:	01440100 	mrseq	r0, (UNDEF: 84)
    1408:	00005e10 	andeq	r5, r0, r0, lsl lr
    140c:	00065900 	andeq	r5, r6, r0, lsl #18
    1410:	00065500 	andeq	r5, r6, r0, lsl #10
    1414:	2c000000 	stccs	0, cr0, [r0], {-0}
    1418:	00059001 	andeq	r9, r5, r1
    141c:	01080100 	mrseq	r0, (UNDEF: 24)
    1420:	00063806 	andeq	r3, r6, r6, lsl #16
    1424:	00076008 	andeq	r6, r7, r8
    1428:	00067908 	andeq	r7, r6, r8, lsl #18
    142c:	0bd10100 	bleq	ff441834 <BootRAM+0xe3b1fd5>
    1430:	302d0000 	eorcc	r0, sp, r0
    1434:	23000000 	movwcs	r0, #0
    1438:	2700000b 	strcs	r0, [r0, -fp]
    143c:	0e010069 	cdpeq	0, 0, cr0, cr1, cr9, {3}
    1440:	00411101 	subeq	r1, r1, r1, lsl #2
    1444:	069d0000 	ldreq	r0, [sp], r0
    1448:	06990000 	ldreq	r0, [r9], r0
    144c:	2e000000 	cdpcs	0, 0, cr0, cr0, cr0, {0}
    1450:	080006a8 	stmdaeq	r0, {r3, r5, r7, r9, sl}
    1454:	080006fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r9, sl}
    1458:	00000b65 	andeq	r0, r0, r5, ror #22
    145c:	0008ca26 	andeq	ip, r8, r6, lsr #20
    1460:	011a0100 	tsteq	sl, r0, lsl #2
    1464:	0000410d 	andeq	r4, r0, sp, lsl #2
    1468:	0006c200 	andeq	ip, r6, r0, lsl #4
    146c:	0006c000 	andeq	ip, r6, r0
    1470:	06ca2f00 	strbeq	r2, [sl], r0, lsl #30
    1474:	0b550800 	bleq	154347c <_Min_Stack_Size+0x154307c>
    1478:	01300000 	teqeq	r0, r0
    147c:	00750250 	rsbseq	r0, r5, r0, asr r2
    1480:	06ec3100 	strbteq	r3, [ip], r0, lsl #2
    1484:	01300800 	teqeq	r0, r0, lsl #16
    1488:	00750550 	rsbseq	r0, r5, r0, asr r5
    148c:	00218008 	eoreq	r8, r1, r8
    1490:	06483200 	strbeq	r3, [r8], -r0, lsl #4
    1494:	11c00800 	bicne	r0, r0, r0, lsl #16
    1498:	8a330000 	bhi	cc14a0 <_Min_Stack_Size+0xcc10a0>
    149c:	5f080006 	svcpl	0x00080006
    14a0:	9600000c 	strls	r0, [r0], -ip
    14a4:	3000000b 	andcc	r0, r0, fp
    14a8:	74025001 	strvc	r5, [r2], #-1
    14ac:	51013000 	mrspl	r3, (UNDEF: 1)
    14b0:	30007402 	andcc	r7, r0, r2, lsl #8
    14b4:	38015201 	stmdacc	r1, {r0, r9, ip, lr}
    14b8:	05530130 	ldrbeq	r0, [r3, #-304]	; 0xfffffed0
    14bc:	00086b03 	andeq	r6, r8, r3, lsl #22
    14c0:	96330008 	ldrtls	r0, [r3], -r8
    14c4:	5f080006 	svcpl	0x00080006
    14c8:	be00000c 	cdplt	0, 0, cr0, cr0, cr12, {0}
    14cc:	3000000b 	andcc	r0, r0, fp
    14d0:	09025001 	stmdbeq	r2, {r0, ip, lr}
    14d4:	51013080 	smlabbpl	r1, r0, r0, r3
    14d8:	30007402 	andcc	r7, r0, r2, lsl #8
    14dc:	38015201 	stmdacc	r1, {r0, r9, ip, lr}
    14e0:	05530130 	ldrbeq	r0, [r3, #-304]	; 0xfffffed0
    14e4:	0007b503 	andeq	fp, r7, r3, lsl #10
    14e8:	9e320008 	cdpls	0, 3, cr0, cr2, cr8, {0}
    14ec:	c9080006 	stmdbgt	r8, {r1, r2}
    14f0:	32000011 	andcc	r0, r0, #17
    14f4:	0800070a 	stmdaeq	r0, {r1, r3, r8, r9, sl}
    14f8:	000011c0 	andeq	r1, r0, r0, asr #3
    14fc:	5e013400 	cfcpyspl	mvf3, mvf1
    1500:	01000009 	tsteq	r0, r9
    1504:	ec0106da 	stc	6, cr0, [r1], {218}	; 0xda
    1508:	38080004 	stmdacc	r8, {r2}
    150c:	d5080006 	strle	r0, [r8, #-6]
    1510:	01000006 	tsteq	r0, r6
    1514:	00000c5f 	andeq	r0, r0, pc, asr ip
    1518:	0008ca35 	andeq	ip, r8, r5, lsr sl
    151c:	21da0100 	bicscs	r0, sl, r0, lsl #2
    1520:	00000041 	andeq	r0, r0, r1, asr #32
    1524:	000006f9 	strdeq	r0, [r0], -r9
    1528:	000006f5 	strdeq	r0, [r0], -r5
    152c:	0009c435 	andeq	ip, r9, r5, lsr r4
    1530:	30da0100 	sbcscc	r0, sl, r0, lsl #2
    1534:	00000041 	andeq	r0, r0, r1, asr #32
    1538:	00000727 	andeq	r0, r0, r7, lsr #14
    153c:	00000717 	andeq	r0, r0, r7, lsl r7
    1540:	0007c735 	andeq	ip, r7, r5, lsr r7
    1544:	42da0100 	sbcsmi	r0, sl, #0, 2
    1548:	0000005e 	andeq	r0, r0, lr, asr r0
    154c:	00000799 	muleq	r0, r9, r7
    1550:	00000793 	muleq	r0, r3, r7
    1554:	000c2136 	andeq	r2, ip, r6, lsr r1
    1558:	51da0100 	bicspl	r0, sl, r0, lsl #2
    155c:	000000a8 	andeq	r0, r0, r8, lsr #1
    1560:	d7375301 	ldrle	r5, [r7, -r1, lsl #6]!
    1564:	01000009 	tsteq	r0, r9
    1568:	00410bdb 	ldrdeq	r0, [r1], #-187	; 0xffffff45
    156c:	07cd0000 	strbeq	r0, [sp, r0]
    1570:	07c50000 	strbeq	r0, [r5, r0]
    1574:	62380000 	eorsvs	r0, r8, #0
    1578:	01006675 	tsteq	r0, r5, ror r6
    157c:	005e0ce1 	subseq	r0, lr, r1, ror #25
    1580:	082b0000 	stmdaeq	fp!, {}	; <UNPREDICTABLE>
    1584:	08170000 	ldmdaeq	r7, {}	; <UNPREDICTABLE>
    1588:	34000000 	strcc	r0, [r0], #-0
    158c:	00084801 	andeq	r4, r8, r1, lsl #16
    1590:	06ab0100 	strteq	r0, [fp], r0, lsl #2
    1594:	0003e001 	andeq	lr, r3, r1
    1598:	0004ec08 	andeq	lr, r4, r8, lsl #24
    159c:	0008cf08 	andeq	ip, r8, r8, lsl #30
    15a0:	0cf30100 	ldfeqe	f0, [r3]
    15a4:	ca350000 	bgt	d415ac <_Min_Stack_Size+0xd411ac>
    15a8:	01000008 	tsteq	r0, r8
    15ac:	00411aab 	subeq	r1, r1, fp, lsr #21
    15b0:	08f30000 	ldmeq	r3!, {}^	; <UNPREDICTABLE>
    15b4:	08ef0000 	stmiaeq	pc!, {}^	; <UNPREDICTABLE>
    15b8:	c4350000 	ldrtgt	r0, [r5], #-0
    15bc:	01000009 	tsteq	r0, r9
    15c0:	004129ab 	subeq	r2, r1, fp, lsr #19
    15c4:	09190000 	ldmdbeq	r9, {}	; <UNPREDICTABLE>
    15c8:	09110000 	ldmdbeq	r1, {}	; <UNPREDICTABLE>
    15cc:	c7350000 	ldrgt	r0, [r5, -r0]!
    15d0:	01000007 	tsteq	r0, r7
    15d4:	005e3bab 	subseq	r3, lr, fp, lsr #23
    15d8:	09590000 	ldmdbeq	r9, {}^	; <UNPREDICTABLE>
    15dc:	09530000 	ldmdbeq	r3, {}^	; <UNPREDICTABLE>
    15e0:	21350000 	teqcs	r5, r0
    15e4:	0100000c 	tsteq	r0, ip
    15e8:	00a84aab 	adceq	r4, r8, fp, lsr #21
    15ec:	098f0000 	stmibeq	pc, {}	; <UNPREDICTABLE>
    15f0:	09850000 	stmibeq	r5, {}	; <UNPREDICTABLE>
    15f4:	d7370000 	ldrle	r0, [r7, -r0]!
    15f8:	01000009 	tsteq	r0, r9
    15fc:	00410bac 	subeq	r0, r1, ip, lsr #23
    1600:	09e70000 	stmibeq	r7!, {}^	; <UNPREDICTABLE>
    1604:	09dd0000 	ldmibeq	sp, {}^	; <UNPREDICTABLE>
    1608:	62380000 	eorsvs	r0, r8, #0
    160c:	01006675 	tsteq	r0, r5, ror r6
    1610:	005e0cb5 	ldrheq	r0, [lr], #-197	; 0xffffff3b
    1614:	0a4e0000 	beq	138161c <_Min_Stack_Size+0x138121c>
    1618:	0a400000 	beq	1001620 <_Min_Stack_Size+0x1001220>
    161c:	39000000 	stmdbcc	r0, {}	; <UNPREDICTABLE>
    1620:	000008e4 	andeq	r0, r0, r4, ror #17
    1624:	010d6601 	tsteq	sp, r1, lsl #12
    1628:	0800086a 	stmdaeq	r0, {r1, r3, r5, r6, fp}
    162c:	08000984 	stmdaeq	r0, {r2, r7, r8, fp}
    1630:	00000ad5 	ldrdeq	r0, [r0], -r5
    1634:	000fe401 	andeq	lr, pc, r1, lsl #8
    1638:	08ca3500 	stmiaeq	sl, {r8, sl, ip, sp}^
    163c:	66010000 	strvs	r0, [r1], -r0
    1640:	0000411d 	andeq	r4, r0, sp, lsl r1
    1644:	000b1500 	andeq	r1, fp, r0, lsl #10
    1648:	000b0d00 	andeq	r0, fp, r0, lsl #26
    164c:	04882000 	streq	r2, [r8], #0
    1650:	67010000 	strvs	r0, [r1, -r0]
    1654:	00005e13 	andeq	r5, r0, r3, lsl lr
    1658:	24030500 	strcs	r0, [r3], #-1280	; 0xfffffb00
    165c:	37200000 	strcc	r0, [r0, -r0]!
    1660:	000009fc 	strdeq	r0, [r0], -ip
    1664:	5e0c6801 	cdppl	8, 0, cr6, cr12, cr1, {0}
    1668:	57000000 	strpl	r0, [r0, -r0]
    166c:	4f00000b 	svcmi	0x0000000b
    1670:	3700000b 	strcc	r0, [r0, -fp]
    1674:	00000034 	andeq	r0, r0, r4, lsr r0
    1678:	410b6901 	tstmi	fp, r1, lsl #18
    167c:	8d000000 	stchi	0, cr0, [r0, #-0]
    1680:	8b00000b 	blhi	16b4 <_Min_Stack_Size+0x12b4>
    1684:	3800000b 	stmdacc	r0, {r0, r1, r3}
    1688:	00716572 	rsbseq	r6, r1, r2, ror r5
    168c:	410b7901 	tstmi	fp, r1, lsl #18
    1690:	b6000000 	strlt	r0, [r0], -r0
    1694:	aa00000b 	bge	16c8 <_Min_Stack_Size+0x12c8>
    1698:	2d00000b 	stccs	0, cr0, [r0, #-44]	; 0xffffffd4
    169c:	000000b8 	strheq	r0, [r0], -r8
    16a0:	00000eba 			; <UNDEFINED> instruction: 0x00000eba
    16a4:	000d5220 	andeq	r5, sp, r0, lsr #4
    16a8:	0b900100 	bleq	fe401ab0 <BootRAM+0xd372251>
    16ac:	00000fe4 	andeq	r0, r0, r4, ror #31
    16b0:	206c9102 	rsbcs	r9, ip, r2, lsl #2
    16b4:	000007c7 	andeq	r0, r0, r7, asr #15
    16b8:	5e0e9101 	mvfple	f1, f1
    16bc:	02000000 	andeq	r0, r0, #0
    16c0:	c42e6a91 	strtgt	r6, [lr], #-2705	; 0xfffff56f
    16c4:	d8080008 	stmdale	r8, {r3}
    16c8:	d8080008 	stmdale	r8, {r3}
    16cc:	2000000d 	andcs	r0, r0, sp
    16d0:	00000d52 	andeq	r0, r0, r2, asr sp
    16d4:	e6178101 	ldr	r8, [r7], -r1, lsl #2
    16d8:	0200000f 	andeq	r0, r0, #15
    16dc:	c7206c91 			; <UNDEFINED> instruction: 0xc7206c91
    16e0:	01000007 	tsteq	r0, r7
    16e4:	005e1482 	subseq	r1, lr, r2, lsl #9
    16e8:	91020000 	mrsls	r0, (UNDEF: 2)
    16ec:	08d83a6a 	ldmeq	r8, {r1, r3, r5, r6, r9, fp, ip, sp}^
    16f0:	125f0800 	subsne	r0, pc, #0, 16
    16f4:	01300000 	teqeq	r0, r0
    16f8:	6c910251 	lfmvs	f0, 4, [r1], {81}	; 0x51
    16fc:	02520130 	subseq	r0, r2, #48, 2
    1700:	00006a91 	muleq	r0, r1, sl
    1704:	0011fe3b 	andseq	pc, r1, fp, lsr lr	; <UNPREDICTABLE>
    1708:	0008b000 	andeq	fp, r8, r0
    170c:	08b00108 	ldmeq	r0!, {r3, r8}
    1710:	08b40800 	ldmeq	r4!, {fp}
    1714:	89010800 	stmdbhi	r1, {fp}
    1718:	000e190b 	andeq	r1, lr, fp, lsl #18
    171c:	12243c00 	eorne	r3, r4, #0, 24
    1720:	0c0c0000 	stceq	0, cr0, [ip], {-0}
    1724:	0c0a0000 	stceq	0, cr0, [sl], {-0}
    1728:	183c0000 	ldmdane	ip!, {}	; <UNPREDICTABLE>
    172c:	22000012 	andcs	r0, r0, #18
    1730:	2000000c 	andcs	r0, r0, ip
    1734:	3c00000c 	stccc	0, cr0, [r0], {12}
    1738:	0000120c 	andeq	r1, r0, ip, lsl #4
    173c:	00000c3c 	andeq	r0, r0, ip, lsr ip
    1740:	00000c3a 	andeq	r0, r0, sl, lsr ip
    1744:	0fed3d00 	svceq	0x00ed3d00
    1748:	08e80000 	stmiaeq	r8!, {}^	; <UNPREDICTABLE>
    174c:	d8010800 	stmdale	r1, {fp}
    1750:	01000000 	mrseq	r0, (UNDEF: 0)
    1754:	0e590594 	mrceq	5, 2, r0, cr9, cr4, {4}
    1758:	073c0000 	ldreq	r0, [ip, -r0]!
    175c:	52000010 	andpl	r0, r0, #16
    1760:	5000000c 	andpl	r0, r0, ip
    1764:	3c00000c 	stccc	0, cr0, [r0], {12}
    1768:	00000ffb 	strdeq	r0, [r0], -fp
    176c:	00000c68 	andeq	r0, r0, r8, ror #24
    1770:	00000c66 	andeq	r0, r0, r6, ror #24
    1774:	0008f63a 	andeq	pc, r8, sl, lsr r6	; <UNPREDICTABLE>
    1778:	00101408 	andseq	r1, r0, r8, lsl #8
    177c:	50013000 	andpl	r3, r1, r0
    1780:	00800902 	addeq	r0, r0, r2, lsl #18
    1784:	11fe3b00 	mvnsne	r3, r0, lsl #22
    1788:	08fa0000 	ldmeq	sl!, {}^	; <UNPREDICTABLE>
    178c:	fa010800 	blx	43794 <_Min_Stack_Size+0x43394>
    1790:	02080008 	andeq	r0, r8, #8
    1794:	01080009 	tsteq	r8, r9
    1798:	0e9a0b8c 	vfnmseq.f64	d0, d26, d12
    179c:	243c0000 	ldrtcs	r0, [ip], #-0
    17a0:	7e000012 	mcrvc	0, 0, r0, cr0, cr2, {0}
    17a4:	7c00000c 	stcvc	0, cr0, [r0], {12}
    17a8:	3c00000c 	stccc	0, cr0, [r0], {12}
    17ac:	00001218 	andeq	r1, r0, r8, lsl r2
    17b0:	00000c94 	muleq	r0, r4, ip
    17b4:	00000c92 	muleq	r0, r2, ip
    17b8:	00120c3c 	andseq	r0, r2, ip, lsr ip
    17bc:	000cae00 	andeq	sl, ip, r0, lsl #28
    17c0:	000cac00 	andeq	sl, ip, r0, lsl #24
    17c4:	183a0000 	ldmdane	sl!, {}	; <UNPREDICTABLE>
    17c8:	62080009 	andvs	r0, r8, #9
    17cc:	30000011 	andcc	r0, r0, r1, lsl r0
    17d0:	03055001 	movweq	r5, #20481	; 0x5001
    17d4:	2000001c 	andcs	r0, r0, ip, lsl r0
    17d8:	02510130 	subseq	r0, r1, #48, 2
    17dc:	01306c91 	teqeq	r0, r1	; <illegal shifter operand>
    17e0:	6a910252 	bvs	fe442130 <BootRAM+0xd3b28d1>
    17e4:	d33d0000 	teqle	sp, #0
    17e8:	8a000011 	bhi	1834 <_Min_Stack_Size+0x1434>
    17ec:	01080008 	tsteq	r8, r8
    17f0:	000000a0 	andeq	r0, r0, r0, lsr #1
    17f4:	02076d01 	andeq	r6, r7, #1, 26	; 0x40
    17f8:	3c00000f 	stccc	0, cr0, [r0], {15}
    17fc:	000011e5 	andeq	r1, r0, r5, ror #3
    1800:	00000cc4 	andeq	r0, r0, r4, asr #25
    1804:	00000cc2 	andeq	r0, r0, r2, asr #25
    1808:	0011f13c 	andseq	pc, r1, ip, lsr r1	; <UNPREDICTABLE>
    180c:	000cda00 	andeq	sp, ip, r0, lsl #20
    1810:	000cd800 	andeq	sp, ip, r0, lsl #16
    1814:	08943a00 	ldmeq	r4, {r9, fp, ip, sp}
    1818:	09690800 	stmdbeq	r9!, {fp}^
    181c:	01300000 	teqeq	r0, r0
    1820:	30310150 	eorscc	r0, r1, r0, asr r1
    1824:	03055101 	movweq	r5, #20737	; 0x5101
    1828:	2000001c 	andcs	r0, r0, ip, lsl r0
    182c:	fe3d0000 	cdp2	0, 3, cr0, cr13, cr0, {0}
    1830:	26000011 			; <UNDEFINED> instruction: 0x26000011
    1834:	05080009 	streq	r0, [r8, #-9]
    1838:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    183c:	482ca601 	stmdami	ip!, {r0, r9, sl, sp, pc}
    1840:	3c00000f 	stccc	0, cr0, [r0], {15}
    1844:	00001224 	andeq	r1, r0, r4, lsr #4
    1848:	00000cf4 	strdeq	r0, [r0], -r4
    184c:	00000cf2 	strdeq	r0, [r0], -r2
    1850:	0012183c 	andseq	r1, r2, ip, lsr r8
    1854:	000cf400 	andeq	pc, ip, r0, lsl #8
    1858:	000cf200 	andeq	pc, ip, r0, lsl #4
    185c:	120c3c00 	andne	r3, ip, #0, 24
    1860:	0cf40000 	ldcleq	0, cr0, [r4]
    1864:	0cf20000 	ldcleq	0, cr0, [r2]
    1868:	b8320000 	ldmdalt	r2!, {}	; <UNPREDICTABLE>
    186c:	2f080008 	svccs	0x00080008
    1870:	0000000a 	andeq	r0, r0, sl
    1874:	0011fe3b 	andseq	pc, r1, fp, lsr lr	; <UNPREDICTABLE>
    1878:	00092600 	andeq	r2, r9, r0, lsl #12
    187c:	09260108 	stmdbeq	r6!, {r3, r8}
    1880:	09260800 	stmdbeq	r6!, {fp}
    1884:	9a010800 	bls	4388c <_Min_Stack_Size+0x4348c>
    1888:	000f8909 	andeq	r8, pc, r9, lsl #18
    188c:	12243c00 	eorne	r3, r4, #0, 24
    1890:	0d0a0000 	stceq	0, cr0, [sl, #-0]
    1894:	0d080000 	stceq	0, cr0, [r8, #-0]
    1898:	183c0000 	ldmdane	ip!, {}	; <UNPREDICTABLE>
    189c:	0a000012 	beq	18ec <_Min_Stack_Size+0x14ec>
    18a0:	0800000d 	stmdaeq	r0, {r0, r2, r3}
    18a4:	3c00000d 	stccc	0, cr0, [r0], {13}
    18a8:	0000120c 	andeq	r1, r0, ip, lsl #4
    18ac:	00000d0a 	andeq	r0, r0, sl, lsl #26
    18b0:	00000d08 	andeq	r0, r0, r8, lsl #26
    18b4:	11fe3b00 	mvnsne	r3, r0, lsl #22
    18b8:	09360000 	ldmdbeq	r6!, {}	; <UNPREDICTABLE>
    18bc:	36010800 	strcc	r0, [r1], -r0, lsl #16
    18c0:	38080009 	stmdacc	r8, {r0, r3}
    18c4:	01080009 	tsteq	r8, r9
    18c8:	0fca099e 	svceq	0x00ca099e
    18cc:	243c0000 	ldrtcs	r0, [ip], #-0
    18d0:	20000012 	andcs	r0, r0, r2, lsl r0
    18d4:	1e00000d 	cdpne	0, 0, cr0, cr0, cr13, {0}
    18d8:	3c00000d 	stccc	0, cr0, [r0], {13}
    18dc:	00001218 	andeq	r1, r0, r8, lsl r2
    18e0:	00000d20 	andeq	r0, r0, r0, lsr #26
    18e4:	00000d1e 	andeq	r0, r0, lr, lsl sp
    18e8:	00120c3c 	andseq	r0, r2, ip, lsr ip
    18ec:	000d2000 	andeq	r2, sp, r0
    18f0:	000d1e00 	andeq	r1, sp, r0, lsl #28
    18f4:	423a0000 	eorsmi	r0, sl, #0
    18f8:	06080009 	streq	r0, [r8], -r9
    18fc:	30000011 	andcc	r0, r0, r1, lsl r0
    1900:	03055001 	movweq	r5, #20481	; 0x5001
    1904:	2000001c 	andcs	r0, r0, ip, lsl r0
    1908:	02520130 	subseq	r0, r2, #48, 2
    190c:	00000075 	andeq	r0, r0, r5, ror r0
    1910:	0407043e 	streq	r0, [r7], #-1086	; 0xfffffbc2
    1914:	00000fec 	andeq	r0, r0, ip, ror #31
    1918:	05c4403f 	strbeq	r4, [r4, #63]	; 0x3f
    191c:	5e010000 	cdppl	0, 0, cr0, cr1, cr0, {0}
    1920:	14030114 	strne	r0, [r3], #-276	; 0xfffffeec
    1924:	41000010 	tstmi	r0, r0, lsl r0
    1928:	00667562 	rsbeq	r7, r6, r2, ror #10
    192c:	972c5e01 	strls	r5, [ip, -r1, lsl #28]!
    1930:	42000008 	andmi	r0, r0, #8
    1934:	000007c7 	andeq	r0, r0, r7, asr #15
    1938:	5e3a5e01 	cdppl	14, 3, cr5, cr10, cr1, {0}
    193c:	00000000 	andeq	r0, r0, r0
    1940:	00079c39 	andeq	r9, r7, r9, lsr ip
    1944:	0d4b0100 	stfeqe	f0, [fp, #-0]
    1948:	0007b401 	andeq	fp, r7, r1, lsl #8
    194c:	00081008 	andeq	r1, r8, r8
    1950:	000d3408 	andeq	r3, sp, r8, lsl #8
    1954:	10ab0100 	adcne	r0, fp, r0, lsl #2
    1958:	ca350000 	bgt	d41960 <_Min_Stack_Size+0xd41560>
    195c:	01000008 	tsteq	r0, r8
    1960:	00411c4b 	subeq	r1, r1, fp, asr #24
    1964:	0d580000 	ldcleq	0, cr0, [r8, #-0]
    1968:	0d540000 	ldcleq	0, cr0, [r4, #-0]
    196c:	75370000 	ldrvc	r0, [r7, #-0]!
    1970:	01000008 	tsteq	r0, r8
    1974:	005e0c52 	subseq	r0, lr, r2, asr ip
    1978:	0d7d0000 	ldcleq	0, cr0, [sp, #-0]
    197c:	0d790000 	ldcleq	0, cr0, [r9, #-0]
    1980:	fe430000 	cdp2	0, 4, cr0, cr3, cr0, {0}
    1984:	ea000011 	b	19d0 <_Min_Stack_Size+0x15d0>
    1988:	02080007 	andeq	r0, r8, #7
    198c:	00000070 	andeq	r0, r0, r0, ror r0
    1990:	3c035401 	cfstrscc	mvf5, [r3], {1}
    1994:	00001224 	andeq	r1, r0, r4, lsr #4
    1998:	00000d9d 	muleq	r0, sp, sp
    199c:	00000d9b 	muleq	r0, fp, sp
    19a0:	0012183c 	andseq	r1, r2, ip, lsr r8
    19a4:	000db200 	andeq	fp, sp, r0, lsl #4
    19a8:	000db000 	andeq	fp, sp, r0
    19ac:	120c3c00 	andne	r3, ip, #0, 24
    19b0:	0dc70000 	stcleq	0, cr0, [r7]
    19b4:	0dc50000 	stcleq	0, cr0, [r5]
    19b8:	f23a0000 	vhadd.s<illegal width 64>	d0, d10, d0
    19bc:	2f080007 	svccs	0x00080007
    19c0:	3000000a 	andcc	r0, r0, sl
    19c4:	30015001 	andcc	r5, r1, r1
    19c8:	02510130 	subseq	r0, r1, #48, 2
    19cc:	01300071 	teqeq	r0, r1, ror r0
    19d0:	00720252 	rsbseq	r0, r2, r2, asr r2
    19d4:	44000000 	strmi	r0, [r0], #-0
    19d8:	00003001 	andeq	r3, r0, r1
    19dc:	06370100 	ldrteq	r0, [r7], -r0, lsl #2
    19e0:	08000372 	stmdaeq	r0, {r1, r4, r5, r6, r8, r9}
    19e4:	080003e0 	stmdaeq	r0, {r5, r6, r7, r8, r9}
    19e8:	01007d02 	tsteq	r0, r2, lsl #26
    19ec:	00001106 	andeq	r1, r0, r6, lsl #2
    19f0:	0000182d 	andeq	r1, r0, sp, lsr #16
    19f4:	0010e200 	andseq	lr, r0, r0, lsl #4
    19f8:	74633800 	strbtvc	r3, [r3], #-2048	; 0xfffff800
    19fc:	3d010072 	stccc	0, cr0, [r1, #-456]	; 0xfffffe38
    1a00:	00007610 	andeq	r7, r0, r0, lsl r6
    1a04:	000de300 	andeq	lr, sp, r0, lsl #6
    1a08:	000ddb00 	andeq	sp, sp, r0, lsl #22
    1a0c:	31450000 	mrscc	r0, (UNDEF: 69)
    1a10:	b6000012 			; <UNDEFINED> instruction: 0xb6000012
    1a14:	01080003 	tsteq	r8, r3
    1a18:	080003b6 	stmdaeq	r0, {r1, r2, r4, r5, r7, r8, r9}
    1a1c:	080003be 	stmdaeq	r0, {r1, r2, r3, r4, r5, r7, r8, r9}
    1a20:	3c034301 	stccc	3, cr4, [r3], {1}
    1a24:	00001240 	andeq	r1, r0, r0, asr #4
    1a28:	00000e32 	andeq	r0, r0, r2, lsr lr
    1a2c:	00000e30 	andeq	r0, r0, r0, lsr lr
    1a30:	01460000 	mrseq	r0, (UNDEF: 70)
    1a34:	000008da 	ldrdeq	r0, [r0], -sl
    1a38:	011b1b01 	tsteq	fp, r1, lsl #22
    1a3c:	00001155 	andeq	r1, r0, r5, asr r1
    1a40:	0800036e 	stmdaeq	r0, {r1, r2, r3, r5, r6, r8, r9}
    1a44:	08000372 	stmdaeq	r0, {r1, r4, r5, r6, r8, r9}
    1a48:	01007d02 	tsteq	r0, r2, lsl #26
    1a4c:	00001155 	andeq	r1, r0, r5, asr r1
    1a50:	71657247 	cmnvc	r5, r7, asr #4
    1a54:	3c1b0100 	ldfccs	f0, [fp], {-0}
    1a58:	0000115c 	andeq	r1, r0, ip, asr r1
    1a5c:	00000e4a 	andeq	r0, r0, sl, asr #28
    1a60:	00000e46 	andeq	r0, r0, r6, asr #28
    1a64:	000b8036 	andeq	r8, fp, r6, lsr r0
    1a68:	4a1b0100 	bmi	6c1e70 <_Min_Stack_Size+0x6c1a70>
    1a6c:	0000005e 	andeq	r0, r0, lr, asr r0
    1a70:	c4365101 	ldrtgt	r5, [r6], #-257	; 0xfffffeff
    1a74:	01000007 	tsteq	r0, r7
    1a78:	005e5b1b 	subseq	r5, lr, fp, lsl fp
    1a7c:	52010000 	andpl	r0, r1, #0
    1a80:	08010200 	stmdaeq	r1, {r9}
    1a84:	00000284 	andeq	r0, r0, r4, lsl #5
    1a88:	011b0407 	tsteq	fp, r7, lsl #8
    1a8c:	01460000 	mrseq	r0, (UNDEF: 70)
    1a90:	00000792 	muleq	r0, r2, r7
    1a94:	011b1a01 	tsteq	fp, r1, lsl #20
    1a98:	00001155 	andeq	r1, r0, r5, asr r1
    1a9c:	0800036a 	stmdaeq	r0, {r1, r3, r5, r6, r8, r9}
    1aa0:	0800036e 	stmdaeq	r0, {r1, r2, r3, r5, r6, r8, r9}
    1aa4:	01007d02 	tsteq	r0, r2, lsl #26
    1aa8:	000011b1 			; <UNDEFINED> instruction: 0x000011b1
    1aac:	71657247 	cmnvc	r5, r7, asr #4
    1ab0:	3b1a0100 	blcc	681eb8 <_Min_Stack_Size+0x681ab8>
    1ab4:	0000115c 	andeq	r1, r0, ip, asr r1
    1ab8:	00000e6f 	andeq	r0, r0, pc, ror #28
    1abc:	00000e6b 	andeq	r0, r0, fp, ror #28
    1ac0:	000d5236 	andeq	r5, sp, r6, lsr r2
    1ac4:	471a0100 	ldrmi	r0, [sl, -r0, lsl #2]
    1ac8:	000011b1 			; <UNDEFINED> instruction: 0x000011b1
    1acc:	c7365101 	ldrgt	r5, [r6, -r1, lsl #2]!
    1ad0:	01000007 	tsteq	r0, r7
    1ad4:	0a1d571a 	beq	757744 <_Min_Stack_Size+0x757344>
    1ad8:	52010000 	andpl	r0, r1, #0
    1adc:	e4040700 	str	r0, [r4], #-1792	; 0xfffff900
    1ae0:	4800000f 	stmdami	r0, {r0, r1, r2, r3}
    1ae4:	00011501 	andeq	r1, r1, r1, lsl #10
    1ae8:	1b190100 	blne	641ef0 <_Min_Stack_Size+0x641af0>
    1aec:	06e20148 	strbteq	r0, [r2], r8, asr #2
    1af0:	18010000 	stmdane	r1, {}	; <UNPREDICTABLE>
    1af4:	b201491b 	andlt	r4, r1, #442368	; 0x6c000
    1af8:	01000006 	tsteq	r0, r6
    1afc:	4a011b17 	bmi	48760 <_Min_Stack_Size+0x48360>
    1b00:	00000689 	andeq	r0, r0, r9, lsl #13
    1b04:	0113b403 	tsteq	r3, r3, lsl #8
    1b08:	00000095 	muleq	r0, r5, r0
    1b0c:	0011fe03 	andseq	pc, r1, r3, lsl #28
    1b10:	08ca4200 	stmiaeq	sl, {r9, lr}^
    1b14:	b4030000 	strlt	r0, [r3], #-0
    1b18:	00004127 	andeq	r4, r0, r7, lsr #2
    1b1c:	75624100 	strbvc	r4, [r2, #-256]!	; 0xffffff00
    1b20:	b4030066 	strlt	r0, [r3], #-102	; 0xffffff9a
    1b24:	000a1d38 	andeq	r1, sl, r8, lsr sp
    1b28:	3b400000 	blcc	1001b30 <_Min_Stack_Size+0x1001730>
    1b2c:	03000005 	movweq	r0, #5
    1b30:	030114ab 	movweq	r1, #5291	; 0x14ab
    1b34:	00001231 	andeq	r1, r0, r1, lsr r2
    1b38:	0008ca42 	andeq	ip, r8, r2, asr #20
    1b3c:	29ab0300 	stmibcs	fp!, {r8, r9}
    1b40:	00000041 	andeq	r0, r0, r1, asr #32
    1b44:	66756241 	ldrbtvs	r6, [r5], -r1, asr #4
    1b48:	3fab0300 	svccc	0x00ab0300
    1b4c:	00000897 	muleq	r0, r7, r8
    1b50:	0007c742 	andeq	ip, r7, r2, asr #14
    1b54:	4dab0300 	stcmi	3, cr0, [fp]
    1b58:	0000005e 	andeq	r0, r0, lr, asr r0
    1b5c:	05654b00 	strbeq	r4, [r5, #-2816]!	; 0xfffff500
    1b60:	de020000 	cdple	0, 0, cr0, cr2, cr0, {0}
    1b64:	03011605 	movweq	r1, #5637	; 0x1605
    1b68:	0000124e 	andeq	r1, r0, lr, asr #4
    1b6c:	0006d34c 	andeq	sp, r6, ip, asr #6
    1b70:	05de0200 	ldrbeq	r0, [lr, #512]	; 0x200
    1b74:	00029e2f 	andeq	r9, r2, pc, lsr #28
    1b78:	c94d0000 	stmdbgt	sp, {}^	; <UNPREDICTABLE>
    1b7c:	64000011 	strvs	r0, [r0], #-17	; 0xffffffef
    1b80:	66080003 	strvs	r0, [r8], -r3
    1b84:	02080003 	andeq	r0, r8, #3
    1b88:	4e01007d 	mcrmi	0, 0, r0, cr1, cr13, {3}
    1b8c:	05a20101 	streq	r0, [r2, #257]!	; 0x101
    1b90:	05a20000 	streq	r0, [r2, #0]!
    1b94:	39030000 	stmdbcc	r3, {}	; <UNPREDICTABLE>
    1b98:	13840006 	orrne	r0, r4, #6
    1b9c:	00020000 	andeq	r0, r2, r0
    1ba0:	000006f6 	strdeq	r0, [r0], -r6
    1ba4:	03450104 	movteq	r0, #20740	; 0x5104
    1ba8:	320c0000 	andcc	r0, ip, #0
    1bac:	7d00000d 	stcvc	0, cr0, [r0, #-52]	; 0xffffffcc
    1bb0:	84000000 	strhi	r0, [r0], #-0
    1bb4:	44080009 	strmi	r0, [r8], #-9
    1bb8:	a808000b 	stmdage	r8, {r0, r1, r3}
    1bbc:	0200000b 	andeq	r0, r0, #11
    1bc0:	027d0601 	rsbseq	r0, sp, #1048576	; 0x100000
    1bc4:	02020000 	andeq	r0, r2, #0
    1bc8:	00029605 	andeq	r9, r2, r5, lsl #12
    1bcc:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    1bd0:	000000a7 	andeq	r0, r0, r7, lsr #1
    1bd4:	a2050802 	andge	r0, r5, #131072	; 0x20000
    1bd8:	03000000 	movweq	r0, #0
    1bdc:	00000316 	andeq	r0, r0, r6, lsl r3
    1be0:	52182e03 	andspl	r2, r8, #3, 28	; 0x30
    1be4:	04000000 	streq	r0, [r0], #-0
    1be8:	00000041 	andeq	r0, r0, r1, asr #32
    1bec:	7b080102 	blvc	201ffc <_Min_Stack_Size+0x201bfc>
    1bf0:	03000002 	movweq	r0, #2
    1bf4:	00000124 	andeq	r0, r0, r4, lsr #2
    1bf8:	65193103 	ldrvs	r3, [r9, #-259]	; 0xfffffefd
    1bfc:	02000000 	andeq	r0, r0, #0
    1c00:	01a30702 			; <UNDEFINED> instruction: 0x01a30702
    1c04:	d0030000 	andle	r0, r3, r0
    1c08:	03000002 	movweq	r0, #2
    1c0c:	007d1934 	rsbseq	r1, sp, r4, lsr r9
    1c10:	6c050000 	stcvs	0, cr0, [r5], {-0}
    1c14:	02000000 	andeq	r0, r0, #0
    1c18:	00570704 	subseq	r0, r7, r4, lsl #14
    1c1c:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    1c20:	00005207 	andeq	r5, r0, r7, lsl #4
    1c24:	05040600 	streq	r0, [r4, #-1536]	; 0xfffffa00
    1c28:	00746e69 	rsbseq	r6, r4, r9, ror #28
    1c2c:	00008b05 	andeq	r8, r0, r5, lsl #22
    1c30:	07040200 	streq	r0, [r4, -r0, lsl #4]
    1c34:	0000005c 	andeq	r0, r0, ip, asr r0
    1c38:	1b020807 	blne	83c5c <_Min_Stack_Size+0x8385c>
    1c3c:	0000f309 	andeq	pc, r0, r9, lsl #6
    1c40:	04620800 	strbteq	r0, [r2], #-2048	; 0xfffff800
    1c44:	1c020000 	stcne	0, cr0, [r2], {-0}
    1c48:	0000410b 	andeq	r4, r0, fp, lsl #2
    1c4c:	00230200 	eoreq	r0, r3, r0, lsl #4
    1c50:	00088508 	andeq	r8, r8, r8, lsl #10
    1c54:	0b1d0200 	bleq	74245c <_Min_Stack_Size+0x74205c>
    1c58:	00000041 	andeq	r0, r0, r1, asr #32
    1c5c:	08012302 	stmdaeq	r1, {r1, r8, r9, sp}
    1c60:	000004d1 	ldrdeq	r0, [r0], -r1
    1c64:	590c1e02 	stmdbpl	ip, {r1, r9, sl, fp, ip}
    1c68:	02000000 	andeq	r0, r0, #0
    1c6c:	ea080223 	b	202500 <_Min_Stack_Size+0x202100>
    1c70:	02000003 	andeq	r0, r0, #3
    1c74:	00590c1f 	subseq	r0, r9, pc, lsl ip
    1c78:	23020000 	movwcs	r0, #8192	; 0x2000
    1c7c:	08680804 	stmdaeq	r8!, {r2, fp}^
    1c80:	20020000 	andcs	r0, r2, r0
    1c84:	0000590c 	andeq	r5, r0, ip, lsl #18
    1c88:	06230200 	strteq	r0, [r3], -r0, lsl #4
    1c8c:	08f10300 	ldmeq	r1!, {r8, r9}^
    1c90:	21020000 	mrscs	r0, (UNDEF: 2)
    1c94:	00009e02 	andeq	r9, r0, r2, lsl #28
    1c98:	02890900 	addeq	r0, r9, #0, 18
    1c9c:	ce040000 	cdpgt	0, 0, cr0, cr4, cr0, {0}
    1ca0:	00921506 	addseq	r1, r2, r6, lsl #10
    1ca4:	01010000 	mrseq	r0, (UNDEF: 1)
    1ca8:	00015f0a 	andeq	r5, r1, sl, lsl #30
    1cac:	114c0500 	cmpne	ip, r0, lsl #10
    1cb0:	0000006c 	andeq	r0, r0, ip, rrx
    1cb4:	2c0b0101 	stfcss	f0, [fp], {1}
    1cb8:	09014f06 	stmdbeq	r1, {r1, r2, r8, r9, sl, fp, lr}
    1cbc:	000001c7 	andeq	r0, r0, r7, asr #3
    1cc0:	00004c0c 	andeq	r4, r0, ip, lsl #24
    1cc4:	01510600 	cmpeq	r1, r0, lsl #12
    1cc8:	00007811 	andeq	r7, r0, r1, lsl r8
    1ccc:	00230200 	eoreq	r0, r3, r0, lsl #4
    1cd0:	0000290c 	andeq	r2, r0, ip, lsl #18
    1cd4:	01520600 	cmpeq	r2, r0, lsl #12
    1cd8:	00007811 	andeq	r7, r0, r1, lsl r8
    1cdc:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    1ce0:	00013b0c 	andeq	r3, r1, ip, lsl #22
    1ce4:	01530600 	cmpeq	r3, r0, lsl #12
    1ce8:	00007811 	andeq	r7, r0, r1, lsl r8
    1cec:	08230200 	stmdaeq	r3!, {r9}
    1cf0:	0000070c 	andeq	r0, r0, ip, lsl #14
    1cf4:	01540600 	cmpeq	r4, r0, lsl #12
    1cf8:	00007811 	andeq	r7, r0, r1, lsl r8
    1cfc:	0c230200 	sfmeq	f0, 4, [r3], #-0
    1d00:	5244490d 	subpl	r4, r4, #212992	; 0x34000
    1d04:	01550600 	cmpeq	r5, r0, lsl #12
    1d08:	00007811 	andeq	r7, r0, r1, lsl r8
    1d0c:	10230200 	eorne	r0, r3, r0, lsl #4
    1d10:	52444f0d 	subpl	r4, r4, #13, 30	; 0x34
    1d14:	01560600 	cmpeq	r6, r0, lsl #12
    1d18:	00007811 	andeq	r7, r0, r1, lsl r8
    1d1c:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    1d20:	0000b00c 	andeq	fp, r0, ip
    1d24:	01570600 	cmpeq	r7, r0, lsl #12
    1d28:	00007811 	andeq	r7, r0, r1, lsl r8
    1d2c:	18230200 	stmdane	r3!, {r9}
    1d30:	00000d0c 	andeq	r0, r0, ip, lsl #26
    1d34:	01580600 	cmpeq	r8, r0, lsl #12
    1d38:	00007811 	andeq	r7, r0, r1, lsl r8
    1d3c:	1c230200 	sfmne	f0, 4, [r3], #-0
    1d40:	5246410d 	subpl	r4, r6, #1073741827	; 0x40000003
    1d44:	01590600 	cmpeq	r9, r0, lsl #12
    1d48:	0001d711 	andeq	sp, r1, r1, lsl r7
    1d4c:	20230200 	eorcs	r0, r3, r0, lsl #4
    1d50:	5252420d 	subspl	r4, r2, #-805306368	; 0xd0000000
    1d54:	015a0600 	cmpeq	sl, r0, lsl #12
    1d58:	00007811 	andeq	r7, r0, r1, lsl r8
    1d5c:	28230200 	stmdacs	r3!, {r9}
    1d60:	00780e00 	rsbseq	r0, r8, r0, lsl #28
    1d64:	01d70000 	bicseq	r0, r7, r0
    1d68:	970f0000 	strls	r0, [pc, -r0]
    1d6c:	01000000 	mrseq	r0, (UNDEF: 0)
    1d70:	01c70500 	biceq	r0, r7, r0, lsl #10
    1d74:	7c100000 	ldcvc	0, cr0, [r0], {-0}
    1d78:	06000001 	streq	r0, [r0], -r1
    1d7c:	1c03015b 	stfnes	f0, [r3], {91}	; 0x5b
    1d80:	02000001 	andeq	r0, r0, #1
    1d84:	0cff0408 	cfldrdeq	mvd0, [pc], #32	; 1dac <_Min_Stack_Size+0x19ac>
    1d88:	26100000 	ldrcs	r0, [r0], -r0
    1d8c:	0700000e 	streq	r0, [r0, -lr]
    1d90:	97170165 	ldrls	r0, [r7, -r5, ror #2]
    1d94:	03000000 	movweq	r0, #0
    1d98:	00000f1c 	andeq	r0, r0, ip, lsl pc
    1d9c:	330e2e08 	movwcc	r2, #60936	; 0xee08
    1da0:	03000000 	movweq	r0, #0
    1da4:	00000ade 	ldrdeq	r0, [r0], -lr
    1da8:	330e7408 	movwcc	r7, #58376	; 0xe408
    1dac:	11000000 	mrsne	r0, (UNDEF: 0)
    1db0:	03a50804 			; <UNDEFINED> instruction: 0x03a50804
    1db4:	00000237 	andeq	r0, r0, r7, lsr r2
    1db8:	000c4c12 	andeq	r4, ip, r2, lsl ip
    1dbc:	0ca70800 	stceq	8, cr0, [r7]
    1dc0:	000001f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1dc4:	000d5712 	andeq	r5, sp, r2, lsl r7
    1dc8:	13a80800 			; <UNDEFINED> instruction: 0x13a80800
    1dcc:	00000237 	andeq	r0, r0, r7, lsr r2
    1dd0:	00520e00 	subseq	r0, r2, r0, lsl #28
    1dd4:	02470000 	subeq	r0, r7, #0
    1dd8:	970f0000 	strls	r0, [pc, -r0]
    1ddc:	03000000 	movweq	r0, #0
    1de0:	08080700 	stmdaeq	r8, {r8, r9, sl}
    1de4:	026f09a2 	rsbeq	r0, pc, #2654208	; 0x288000
    1de8:	18080000 	stmdane	r8, {}	; <UNPREDICTABLE>
    1dec:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    1df0:	008b07a4 	addeq	r0, fp, r4, lsr #15
    1df4:	23020000 	movwcs	r0, #8192	; 0x2000
    1df8:	0bd40800 	bleq	ff503e00 <BootRAM+0xe4745a1>
    1dfc:	a9080000 	stmdbge	r8, {}	; <UNPREDICTABLE>
    1e00:	00021505 	andeq	r1, r2, r5, lsl #10
    1e04:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    1e08:	0cc80300 	stcleq	3, cr0, [r8], {0}
    1e0c:	aa080000 	bge	201e14 <_Min_Stack_Size+0x201a14>
    1e10:	00024703 	andeq	r4, r2, r3, lsl #14
    1e14:	03041300 	movweq	r1, #17152	; 0x4300
    1e18:	00000c9c 	muleq	r0, ip, ip
    1e1c:	7d191609 	ldcvc	6, cr1, [r9, #-36]	; 0xffffffdc
    1e20:	03000000 	movweq	r0, #0
    1e24:	00000ab6 			; <UNDEFINED> instruction: 0x00000ab6
    1e28:	8b0d0c0a 	blhi	344e58 <_Min_Stack_Size+0x344a58>
    1e2c:	03000000 	movweq	r0, #0
    1e30:	00000c43 	andeq	r0, r0, r3, asr #24
    1e34:	891b2309 	ldmdbhi	fp, {r0, r3, r8, r9, sp}
    1e38:	14000002 	strne	r0, [r0], #-2
    1e3c:	00000d1c 	andeq	r0, r0, ip, lsl sp
    1e40:	08340918 	ldmdaeq	r4!, {r3, r4, r8, fp}
    1e44:	00000307 	andeq	r0, r0, r7, lsl #6
    1e48:	000f7208 	andeq	r7, pc, r8, lsl #4
    1e4c:	13360900 	teqne	r6, #0, 18
    1e50:	00000307 	andeq	r0, r0, r7, lsl #6
    1e54:	15002302 	strne	r2, [r0, #-770]	; 0xfffffcfe
    1e58:	09006b5f 	stmdbeq	r0, {r0, r1, r2, r3, r4, r6, r8, r9, fp, sp, lr}
    1e5c:	008b0737 	addeq	r0, fp, r7, lsr r7
    1e60:	23020000 	movwcs	r0, #8192	; 0x2000
    1e64:	0dd30804 	ldcleq	8, cr0, [r3, #16]
    1e68:	37090000 	strcc	r0, [r9, -r0]
    1e6c:	00008b0b 	andeq	r8, r0, fp, lsl #22
    1e70:	08230200 	stmdaeq	r3!, {r9}
    1e74:	000d4b08 	andeq	r4, sp, r8, lsl #22
    1e78:	14370900 	ldrtne	r0, [r7], #-2304	; 0xfffff700
    1e7c:	0000008b 	andeq	r0, r0, fp, lsl #1
    1e80:	080c2302 	stmdaeq	ip, {r1, r8, r9, sp}
    1e84:	00000b73 	andeq	r0, r0, r3, ror fp
    1e88:	8b1b3709 	blhi	6cfab4 <_Min_Stack_Size+0x6cf6b4>
    1e8c:	02000000 	andeq	r0, r0, #0
    1e90:	5f151023 	svcpl	0x00151023
    1e94:	38090078 	stmdacc	r9, {r3, r4, r5, r6}
    1e98:	00030d0b 	andeq	r0, r3, fp, lsl #26
    1e9c:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    1ea0:	a1041600 	tstge	r4, r0, lsl #12
    1ea4:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    1ea8:	0000027d 	andeq	r0, r0, sp, ror r2
    1eac:	0000031d 	andeq	r0, r0, sp, lsl r3
    1eb0:	0000970f 	andeq	r9, r0, pc, lsl #14
    1eb4:	14000000 	strne	r0, [r0], #-0
    1eb8:	00000dee 	andeq	r0, r0, lr, ror #27
    1ebc:	083c0924 	ldmdaeq	ip!, {r2, r5, r8, fp}
    1ec0:	000003b2 			; <UNDEFINED> instruction: 0x000003b2
    1ec4:	000b9908 	andeq	r9, fp, r8, lsl #18
    1ec8:	093e0900 	ldmdbeq	lr!, {r8, fp}
    1ecc:	0000008b 	andeq	r0, r0, fp, lsl #1
    1ed0:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
    1ed4:	00000b20 	andeq	r0, r0, r0, lsr #22
    1ed8:	8b093f09 	blhi	251b04 <_Min_Stack_Size+0x251704>
    1edc:	02000000 	andeq	r0, r0, #0
    1ee0:	05080423 	streq	r0, [r8, #-1059]	; 0xfffffbdd
    1ee4:	0900000b 	stmdbeq	r0, {r0, r1, r3}
    1ee8:	008b0940 	addeq	r0, fp, r0, asr #18
    1eec:	23020000 	movwcs	r0, #8192	; 0x2000
    1ef0:	0c120808 	ldceq	8, cr0, [r2], {8}
    1ef4:	41090000 	mrsmi	r0, (UNDEF: 9)
    1ef8:	00008b09 	andeq	r8, r0, r9, lsl #22
    1efc:	0c230200 	sfmeq	f0, 4, [r3], #-0
    1f00:	000cf608 	andeq	pc, ip, r8, lsl #12
    1f04:	09420900 	stmdbeq	r2, {r8, fp}^
    1f08:	0000008b 	andeq	r0, r0, fp, lsl #1
    1f0c:	08102302 	ldmdaeq	r0, {r1, r8, r9, sp}
    1f10:	00000d71 	andeq	r0, r0, r1, ror sp
    1f14:	8b094309 	blhi	252b40 <_Min_Stack_Size+0x252740>
    1f18:	02000000 	andeq	r0, r0, #0
    1f1c:	f3081423 	vshl.u8	d1, d19, d8
    1f20:	0900000a 	stmdbeq	r0, {r1, r3}
    1f24:	008b0944 	addeq	r0, fp, r4, asr #18
    1f28:	23020000 	movwcs	r0, #8192	; 0x2000
    1f2c:	0ba20818 	bleq	fe883f94 <BootRAM+0xd7f4735>
    1f30:	45090000 	strmi	r0, [r9, #-0]
    1f34:	00008b09 	andeq	r8, r0, r9, lsl #22
    1f38:	1c230200 	sfmne	f0, 4, [r3], #-0
    1f3c:	000cd308 	andeq	sp, ip, r8, lsl #6
    1f40:	09460900 	stmdbeq	r6, {r8, fp}^
    1f44:	0000008b 	andeq	r0, r0, fp, lsl #1
    1f48:	00202302 	eoreq	r2, r0, r2, lsl #6
    1f4c:	000a6517 	andeq	r6, sl, r7, lsl r5
    1f50:	09010800 	stmdbeq	r1, {fp}
    1f54:	0400084f 	streq	r0, [r0], #-2127	; 0xfffff7b1
    1f58:	e2080000 	and	r0, r8, #0
    1f5c:	0900000e 	stmdbeq	r0, {r1, r2, r3}
    1f60:	04000a50 	streq	r0, [r0], #-2640	; 0xfffff5b0
    1f64:	23020000 	movwcs	r0, #8192	; 0x2000
    1f68:	0e2d0800 	cdpeq	8, 2, cr0, cr13, cr0, {0}
    1f6c:	51090000 	mrspl	r0, (UNDEF: 9)
    1f70:	00040009 	andeq	r0, r4, r9
    1f74:	80230300 	eorhi	r0, r3, r0, lsl #6
    1f78:	0f0a0801 	svceq	0x000a0801
    1f7c:	53090000 	movwpl	r0, #36864	; 0x9000
    1f80:	00027d0a 	andeq	r7, r2, sl, lsl #26
    1f84:	80230300 	eorhi	r0, r3, r0, lsl #6
    1f88:	0f5f0802 	svceq	0x005f0802
    1f8c:	56090000 	strpl	r0, [r9], -r0
    1f90:	00027d0a 	andeq	r7, r2, sl, lsl #26
    1f94:	84230300 	strthi	r0, [r3], #-768	; 0xfffffd00
    1f98:	7b0e0002 	blvc	381fa8 <_Min_Stack_Size+0x381ba8>
    1f9c:	10000002 	andne	r0, r0, r2
    1fa0:	0f000004 	svceq	0x00000004
    1fa4:	00000097 	muleq	r0, r7, r0
    1fa8:	0b17001f 	bleq	5c202c <_Min_Stack_Size+0x5c1c2c>
    1fac:	9000000d 	andls	r0, r0, sp
    1fb0:	08620901 	stmdaeq	r2!, {r0, r8, fp}^
    1fb4:	0000045c 	andeq	r0, r0, ip, asr r4
    1fb8:	000f7208 	andeq	r7, pc, r8, lsl #4
    1fbc:	12630900 	rsbne	r0, r3, #0, 18
    1fc0:	0000045c 	andeq	r0, r0, ip, asr r4
    1fc4:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
    1fc8:	00000bac 	andeq	r0, r0, ip, lsr #23
    1fcc:	8b066409 	blhi	19aff8 <_Min_Stack_Size+0x19abf8>
    1fd0:	02000000 	andeq	r0, r0, #0
    1fd4:	e6080423 	str	r0, [r8], -r3, lsr #8
    1fd8:	0900000a 	stmdbeq	r0, {r1, r3}
    1fdc:	04620966 	strbteq	r0, [r2], #-2406	; 0xfffff69a
    1fe0:	23020000 	movwcs	r0, #8192	; 0x2000
    1fe4:	0a650808 	beq	194400c <_Min_Stack_Size+0x1943c0c>
    1fe8:	67090000 	strvs	r0, [r9, -r0]
    1fec:	0003b21e 	andeq	fp, r3, lr, lsl r2
    1ff0:	88230300 	stmdahi	r3!, {r8, r9}
    1ff4:	04160001 	ldreq	r0, [r6], #-1
    1ff8:	00000410 	andeq	r0, r0, r0, lsl r4
    1ffc:	0004720e 	andeq	r7, r4, lr, lsl #4
    2000:	00047200 	andeq	r7, r4, r0, lsl #4
    2004:	00970f00 	addseq	r0, r7, r0, lsl #30
    2008:	001f0000 	andseq	r0, pc, r0
    200c:	04780416 	ldrbteq	r0, [r8], #-1046	; 0xfffffbea
    2010:	01180000 	tsteq	r8, r0
    2014:	000e8314 	andeq	r8, lr, r4, lsl r3
    2018:	7a090800 	bvc	244020 <_Min_Stack_Size+0x243c20>
    201c:	0004a608 	andeq	sl, r4, r8, lsl #12
    2020:	0c860800 	stceq	8, cr0, [r6], {0}
    2024:	7b090000 	blvc	24202c <_Min_Stack_Size+0x241c2c>
    2028:	0004a611 	andeq	sl, r4, r1, lsl r6
    202c:	00230200 	eoreq	r0, r3, r0, lsl #4
    2030:	0007c608 	andeq	ip, r7, r8, lsl #12
    2034:	067c0900 	ldrbteq	r0, [ip], -r0, lsl #18
    2038:	0000008b 	andeq	r0, r0, fp, lsl #1
    203c:	00042302 	andeq	r2, r4, r2, lsl #6
    2040:	00520416 	subseq	r0, r2, r6, lsl r4
    2044:	6b140000 	blvs	50204c <_Min_Stack_Size+0x501c4c>
    2048:	6800000b 	stmdavs	r0, {r0, r1, r3}
    204c:	1f08ba09 	svcne	0x0008ba09
    2050:	15000006 	strne	r0, [r0, #-6]
    2054:	0900705f 	stmdbeq	r0, {r0, r1, r2, r3, r4, r6, ip, sp, lr}
    2058:	04a612bb 	strteq	r1, [r6], #699	; 0x2bb
    205c:	23020000 	movwcs	r0, #8192	; 0x2000
    2060:	725f1500 	subsvc	r1, pc, #0, 10
    2064:	07bc0900 	ldreq	r0, [ip, r0, lsl #18]!
    2068:	0000008b 	andeq	r0, r0, fp, lsl #1
    206c:	15042302 	strne	r2, [r4, #-770]	; 0xfffffcfe
    2070:	0900775f 	stmdbeq	r0, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}
    2074:	008b07bd 			; <UNDEFINED> instruction: 0x008b07bd
    2078:	23020000 	movwcs	r0, #8192	; 0x2000
    207c:	0aa40808 	beq	fe9040a4 <BootRAM+0xd874845>
    2080:	be090000 	cdplt	0, 0, cr0, cr9, cr0, {0}
    2084:	00002c09 	andeq	r2, r0, r9, lsl #24
    2088:	0c230200 	sfmeq	f0, 4, [r3], #-0
    208c:	000cb308 	andeq	fp, ip, r8, lsl #6
    2090:	09bf0900 	ldmibeq	pc!, {r8, fp}	; <UNPREDICTABLE>
    2094:	0000002c 	andeq	r0, r0, ip, lsr #32
    2098:	150e2302 	strne	r2, [lr, #-770]	; 0xfffffcfe
    209c:	0066625f 	rsbeq	r6, r6, pc, asr r2
    20a0:	7a11c009 	bvc	4720cc <_Min_Stack_Size+0x471ccc>
    20a4:	02000004 	andeq	r0, r0, #4
    20a8:	9b081023 	blls	20613c <_Min_Stack_Size+0x205d3c>
    20ac:	0900000a 	stmdbeq	r0, {r1, r3}
    20b0:	008b07c1 	addeq	r0, fp, r1, asr #15
    20b4:	23020000 	movwcs	r0, #8192	; 0x2000
    20b8:	0aeb0818 	beq	ffac4120 <BootRAM+0xea348c1>
    20bc:	c8090000 	stmdagt	r9, {}	; <UNPREDICTABLE>
    20c0:	00027b0a 	andeq	r7, r2, sl, lsl #22
    20c4:	1c230200 	sfmne	f0, 4, [r3], #-0
    20c8:	00068f08 	andeq	r8, r6, r8, lsl #30
    20cc:	1dca0900 	vstrne.16	s1, [sl]	; <UNPREDICTABLE>
    20d0:	000007d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    20d4:	08202302 	stmdaeq	r0!, {r1, r8, r9, sp}
    20d8:	00000541 	andeq	r0, r0, r1, asr #10
    20dc:	fb1dcc09 	blx	77510a <_Min_Stack_Size+0x774d0a>
    20e0:	02000007 	andeq	r0, r0, #7
    20e4:	83082423 	movwhi	r2, #33827	; 0x8423
    20e8:	0900000f 	stmdbeq	r0, {r0, r1, r2, r3}
    20ec:	08200dcf 	stmdaeq	r0!, {r0, r1, r2, r3, r6, r7, r8, sl, fp}
    20f0:	23020000 	movwcs	r0, #8192	; 0x2000
    20f4:	0c5e0828 	mrrceq	8, 2, r0, lr, cr8
    20f8:	d0090000 	andle	r0, r9, r0
    20fc:	00083b09 	andeq	r3, r8, r9, lsl #22
    2100:	2c230200 	sfmcs	f0, 4, [r3], #-0
    2104:	62755f15 	rsbsvs	r5, r5, #21, 30	; 0x54
    2108:	11d30900 	bicsne	r0, r3, r0, lsl #18
    210c:	0000047a 	andeq	r0, r0, sl, ror r4
    2110:	15302302 	ldrne	r2, [r0, #-770]!	; 0xfffffcfe
    2114:	0070755f 	rsbseq	r7, r0, pc, asr r5
    2118:	a612d409 	ldrge	sp, [r2], -r9, lsl #8
    211c:	02000004 	andeq	r0, r0, #4
    2120:	5f153823 	svcpl	0x00153823
    2124:	09007275 	stmdbeq	r0, {r0, r2, r4, r5, r6, r9, ip, sp, lr}
    2128:	008b07d5 	ldrdeq	r0, [fp], r5
    212c:	23020000 	movwcs	r0, #8192	; 0x2000
    2130:	0f91083c 	svceq	0x0091083c
    2134:	d8090000 	stmdale	r9, {}	; <UNPREDICTABLE>
    2138:	00084111 	andeq	r4, r8, r1, lsl r1
    213c:	40230200 	eormi	r0, r3, r0, lsl #4
    2140:	000f2308 	andeq	r2, pc, r8, lsl #6
    2144:	11d90900 	bicsne	r0, r9, r0, lsl #18
    2148:	00000851 	andeq	r0, r0, r1, asr r8
    214c:	15432302 	strbne	r2, [r3, #-770]	; 0xfffffcfe
    2150:	00626c5f 	rsbeq	r6, r2, pc, asr ip
    2154:	7a11dc09 	bvc	479180 <_Min_Stack_Size+0x478d80>
    2158:	02000004 	andeq	r0, r0, #4
    215c:	e5084423 	str	r4, [r8, #-1059]	; 0xfffffbdd
    2160:	0900000d 	stmdbeq	r0, {r0, r2, r3}
    2164:	008b07df 	ldrdeq	r0, [fp], pc	; <UNPREDICTABLE>
    2168:	23020000 	movwcs	r0, #8192	; 0x2000
    216c:	0b7f084c 	bleq	1fc42a4 <_Min_Stack_Size+0x1fc3ea4>
    2170:	e0090000 	and	r0, r9, r0
    2174:	0001fd0a 	andeq	pc, r1, sl, lsl #26
    2178:	50230200 	eorpl	r0, r3, r0, lsl #4
    217c:	000d5108 	andeq	r5, sp, r8, lsl #2
    2180:	12e30900 	rscne	r0, r3, #0, 18
    2184:	0000063e 	andeq	r0, r0, lr, lsr r6
    2188:	08542302 	ldmdaeq	r4, {r1, r8, r9, sp}^
    218c:	00000df3 	strdeq	r0, [r0], -r3
    2190:	950ce709 	strls	lr, [ip, #-1801]	; 0xfffff8f7
    2194:	02000002 	andeq	r0, r0, #2
    2198:	13085823 	movwne	r5, #34851	; 0x8823
    219c:	0900000d 	stmdbeq	r0, {r0, r2, r3}
    21a0:	026f0ee9 	rsbeq	r0, pc, #3728	; 0xe90
    21a4:	23020000 	movwcs	r0, #8192	; 0x2000
    21a8:	0f57085c 	svceq	0x0057085c
    21ac:	ea090000 	b	2421b4 <_Min_Stack_Size+0x241db4>
    21b0:	00008b09 	andeq	r8, r0, r9, lsl #22
    21b4:	64230200 	strtvs	r0, [r3], #-512	; 0xfffffe00
    21b8:	8b011900 	blhi	485c0 <_Min_Stack_Size+0x481c0>
    21bc:	3e000000 	cdpcc	0, 0, cr0, cr0, cr0, {0}
    21c0:	1a000006 	bne	21e0 <_Min_Stack_Size+0x1de0>
    21c4:	0000063e 	andeq	r0, r0, lr, lsr r6
    21c8:	00027b1a 	andeq	r7, r2, sl, lsl fp
    21cc:	07be1a00 	ldreq	r1, [lr, r0, lsl #20]!
    21d0:	8b1a0000 	blhi	6821d8 <_Min_Stack_Size+0x681dd8>
    21d4:	00000000 	andeq	r0, r0, r0
    21d8:	06490416 			; <UNDEFINED> instruction: 0x06490416
    21dc:	3e040000 	cdpcc	0, 0, cr0, cr4, cr0, {0}
    21e0:	1b000006 	blne	2200 <_Min_Stack_Size+0x1e00>
    21e4:	00000eea 	andeq	r0, r0, sl, ror #29
    21e8:	65090428 	strvs	r0, [r9, #-1064]	; 0xfffffbd8
    21ec:	07be0802 	ldreq	r0, [lr, r2, lsl #16]!
    21f0:	e50c0000 	str	r0, [ip, #-0]
    21f4:	0900000c 	stmdbeq	r0, {r2, r3}
    21f8:	8b070267 	blhi	1c2b9c <_Min_Stack_Size+0x1c279c>
    21fc:	02000000 	andeq	r0, r0, #0
    2200:	700c0023 	andvc	r0, ip, r3, lsr #32
    2204:	0900000c 	stmdbeq	r0, {r2, r3}
    2208:	b30b026c 	movwlt	r0, #45676	; 0xb26c
    220c:	02000008 	andeq	r0, r0, #8
    2210:	d60c0423 	strle	r0, [ip], -r3, lsr #8
    2214:	0900000a 	stmdbeq	r0, {r1, r3}
    2218:	b314026c 	tstlt	r4, #108, 4	; 0xc0000006
    221c:	02000008 	andeq	r0, r0, #8
    2220:	890c0823 	stmdbhi	ip, {r0, r1, r5, fp}
    2224:	0900000f 	stmdbeq	r0, {r0, r1, r2, r3}
    2228:	b31e026c 	tstlt	lr, #108, 4	; 0xc0000006
    222c:	02000008 	andeq	r0, r0, #8
    2230:	de0c0c23 	cdple	12, 0, cr0, cr12, cr3, {1}
    2234:	0900000c 	stmdbeq	r0, {r2, r3}
    2238:	8b08026e 	blhi	202bf8 <_Min_Stack_Size+0x2027f8>
    223c:	02000000 	andeq	r0, r0, #0
    2240:	870c1023 	strhi	r1, [ip, -r3, lsr #32]
    2244:	0900000b 	stmdbeq	r0, {r0, r1, r3}
    2248:	ec08026f 	sfm	f0, 4, [r8], {111}	; 0x6f
    224c:	0200000a 	andeq	r0, r0, #10
    2250:	3e0c1423 	cdpcc	4, 0, cr1, cr12, cr3, {1}
    2254:	0900000f 	stmdbeq	r0, {r0, r1, r2, r3}
    2258:	8b070272 	blhi	1c2c28 <_Min_Stack_Size+0x1c2828>
    225c:	02000000 	andeq	r0, r0, #0
    2260:	d50c3023 	strle	r3, [ip, #-35]	; 0xffffffdd
    2264:	0900000e 	stmdbeq	r0, {r1, r2, r3}
    2268:	02160273 	andseq	r0, r6, #805306375	; 0x30000007
    226c:	0200000b 	andeq	r0, r0, #11
    2270:	650c3423 	strvs	r3, [ip, #-1059]	; 0xfffffbdd
    2274:	0900000c 	stmdbeq	r0, {r2, r3}
    2278:	8b070275 	blhi	1c2c54 <_Min_Stack_Size+0x1c2854>
    227c:	02000000 	andeq	r0, r0, #0
    2280:	b90c3823 	stmdblt	ip, {r0, r1, r5, fp, ip, sp}
    2284:	0900000c 	stmdbeq	r0, {r2, r3}
    2288:	140a0277 	strne	r0, [sl], #-631	; 0xfffffd89
    228c:	0200000b 	andeq	r0, r0, #11
    2290:	fd0c3c23 	stc2	12, cr3, [ip, #-140]	; 0xffffff74
    2294:	0900000a 	stmdbeq	r0, {r1, r3}
    2298:	0713027a 			; <UNDEFINED> instruction: 0x0713027a
    229c:	02000003 	andeq	r0, r0, #3
    22a0:	3f0c4023 	svccc	0x000c4023
    22a4:	0900000b 	stmdbeq	r0, {r0, r1, r3}
    22a8:	8b07027b 	blhi	1c2c9c <_Min_Stack_Size+0x1c289c>
    22ac:	02000000 	andeq	r0, r0, #0
    22b0:	ea0c4423 	b	313344 <_Min_Stack_Size+0x312f44>
    22b4:	0900000b 	stmdbeq	r0, {r0, r1, r3}
    22b8:	0713027c 			; <UNDEFINED> instruction: 0x0713027c
    22bc:	02000003 	andeq	r0, r0, #3
    22c0:	8c0c4823 	stchi	8, cr4, [ip], {35}	; 0x23
    22c4:	0900000c 	stmdbeq	r0, {r2, r3}
    22c8:	1a14027d 	bne	502cc4 <_Min_Stack_Size+0x5028c4>
    22cc:	0200000b 	andeq	r0, r0, #11
    22d0:	cb0c4c23 	blgt	315364 <_Min_Stack_Size+0x314f64>
    22d4:	0900000d 	stmdbeq	r0, {r0, r2, r3}
    22d8:	8b070280 	blhi	1c2ce0 <_Min_Stack_Size+0x1c28e0>
    22dc:	02000000 	andeq	r0, r0, #0
    22e0:	3f0c5023 	svccc	0x000c5023
    22e4:	0900000e 	stmdbeq	r0, {r1, r2, r3}
    22e8:	be090281 	cdplt	2, 0, cr0, cr9, cr1, {4}
    22ec:	02000007 	andeq	r0, r0, #7
    22f0:	c60c5423 	strgt	r5, [ip], -r3, lsr #8
    22f4:	0900000d 	stmdbeq	r0, {r0, r2, r3}
    22f8:	c70702a4 	strgt	r0, [r7, -r4, lsr #5]
    22fc:	0200000a 	andeq	r0, r0, #10
    2300:	0b0c5823 	bleq	318394 <_Min_Stack_Size+0x317f94>
    2304:	0900000d 	stmdbeq	r0, {r0, r2, r3}
    2308:	5c1302a8 	lfmpl	f0, 4, [r3], {168}	; 0xa8
    230c:	03000004 	movweq	r0, #4
    2310:	0c02c823 	stceq	8, cr12, [r2], {35}	; 0x23
    2314:	00000c35 	andeq	r0, r0, r5, lsr ip
    2318:	1202a909 	andne	sl, r2, #147456	; 0x24000
    231c:	00000410 	andeq	r0, r0, r0, lsl r4
    2320:	02cc2303 	sbceq	r2, ip, #201326592	; 0xc000000
    2324:	000c1c0c 	andeq	r1, ip, ip, lsl #24
    2328:	02ad0900 	adceq	r0, sp, #0, 18
    232c:	000b2c0c 	andeq	r2, fp, ip, lsl #24
    2330:	dc230300 	stcle	3, cr0, [r3], #-0
    2334:	0eb20c05 	cdpeq	12, 11, cr0, cr2, cr5, {0}
    2338:	b2090000 	andlt	r0, r9, #0
    233c:	086e1002 	stmdaeq	lr!, {r1, ip}^
    2340:	23030000 	movwcs	r0, #12288	; 0x3000
    2344:	460c05e0 	strmi	r0, [ip], -r0, ror #11
    2348:	0900000d 	stmdbeq	r0, {r0, r2, r3}
    234c:	380a02b4 	stmdacc	sl, {r2, r4, r5, r7, r9}
    2350:	0300000b 	movweq	r0, #11
    2354:	0005ec23 	andeq	lr, r5, r3, lsr #24
    2358:	07c40416 	bfieq	r0, r6, (invalid: 8:4)
    235c:	01020000 	mrseq	r0, (UNDEF: 2)
    2360:	00028408 	andeq	r8, r2, r8, lsl #8
    2364:	07c40400 	strbeq	r0, [r4, r0, lsl #8]
    2368:	04160000 	ldreq	r0, [r6], #-0
    236c:	0000061f 	andeq	r0, r0, pc, lsl r6
    2370:	008b0119 	addeq	r0, fp, r9, lsl r1
    2374:	07f50000 	ldrbeq	r0, [r5, r0]!
    2378:	3e1a0000 	cdpcc	0, 1, cr0, cr10, cr0, {0}
    237c:	1a000006 	bne	239c <_Min_Stack_Size+0x1f9c>
    2380:	0000027b 	andeq	r0, r0, fp, ror r2
    2384:	0007f51a 	andeq	pc, r7, sl, lsl r5	; <UNPREDICTABLE>
    2388:	008b1a00 	addeq	r1, fp, r0, lsl #20
    238c:	16000000 	strne	r0, [r0], -r0
    2390:	0007cb04 	andeq	ip, r7, r4, lsl #22
    2394:	d6041600 	strle	r1, [r4], -r0, lsl #12
    2398:	19000007 	stmdbne	r0, {r0, r1, r2}
    239c:	00020901 	andeq	r0, r2, r1, lsl #18
    23a0:	00082000 	andeq	r2, r8, r0
    23a4:	063e1a00 	ldrteq	r1, [lr], -r0, lsl #20
    23a8:	7b1a0000 	blvc	6823b0 <_Min_Stack_Size+0x681fb0>
    23ac:	1a000002 	bne	23bc <_Min_Stack_Size+0x1fbc>
    23b0:	00000209 	andeq	r0, r0, r9, lsl #4
    23b4:	00008b1a 	andeq	r8, r0, sl, lsl fp
    23b8:	04160000 	ldreq	r0, [r6], #-0
    23bc:	00000801 	andeq	r0, r0, r1, lsl #16
    23c0:	008b0119 	addeq	r0, fp, r9, lsl r1
    23c4:	083b0000 	ldmdaeq	fp!, {}	; <UNPREDICTABLE>
    23c8:	3e1a0000 	cdpcc	0, 1, cr0, cr10, cr0, {0}
    23cc:	1a000006 	bne	23ec <_Min_Stack_Size+0x1fec>
    23d0:	0000027b 	andeq	r0, r0, fp, ror r2
    23d4:	26041600 	strcs	r1, [r4], -r0, lsl #12
    23d8:	0e000008 	cdpeq	0, 0, cr0, cr0, cr8, {0}
    23dc:	00000052 	andeq	r0, r0, r2, asr r0
    23e0:	00000851 	andeq	r0, r0, r1, asr r8
    23e4:	0000970f 	andeq	r9, r0, pc, lsl #14
    23e8:	0e000200 	cdpeq	2, 0, cr0, cr0, cr0, {0}
    23ec:	00000052 	andeq	r0, r0, r2, asr r0
    23f0:	00000861 	andeq	r0, r0, r1, ror #16
    23f4:	0000970f 	andeq	r9, r0, pc, lsl #14
    23f8:	10000000 	andne	r0, r0, r0
    23fc:	00000b78 	andeq	r0, r0, r8, ror fp
    2400:	1a012409 	bne	4b42c <_Min_Stack_Size+0x4b02c>
    2404:	000004ac 	andeq	r0, r0, ip, lsr #9
    2408:	000eac1c 	andeq	sl, lr, ip, lsl ip
    240c:	28090c00 	stmdacs	r9, {sl, fp}
    2410:	08ad0801 	stmiaeq	sp!, {r0, fp}
    2414:	720c0000 	andvc	r0, ip, #0
    2418:	0900000f 	stmdbeq	r0, {r0, r1, r2, r3}
    241c:	ad11012a 	ldfges	f0, [r1, #-168]	; 0xffffff58
    2420:	02000008 	andeq	r0, r0, #8
    2424:	1f0c0023 	svcne	0x000c0023
    2428:	0900000e 	stmdbeq	r0, {r1, r2, r3}
    242c:	8b07012b 	blhi	1c28e0 <_Min_Stack_Size+0x1c24e0>
    2430:	02000000 	andeq	r0, r0, #0
    2434:	520c0423 	andpl	r0, ip, #587202560	; 0x23000000
    2438:	0900000c 	stmdbeq	r0, {r2, r3}
    243c:	b30b012c 	movwlt	r0, #45356	; 0xb12c
    2440:	02000008 	andeq	r0, r0, #8
    2444:	16000823 	strne	r0, [r0], -r3, lsr #16
    2448:	00086e04 	andeq	r6, r8, r4, lsl #28
    244c:	61041600 	tstvs	r4, r0, lsl #12
    2450:	1c000008 	stcne	0, cr0, [r0], {8}
    2454:	00000b30 	andeq	r0, r0, r0, lsr fp
    2458:	0144090e 	cmpeq	r4, lr, lsl #18
    245c:	0008f808 	andeq	pc, r8, r8, lsl #16
    2460:	0f670c00 	svceq	0x00670c00
    2464:	45090000 	strmi	r0, [r9, #-0]
    2468:	08f81201 	ldmeq	r8!, {r0, r9, ip}^
    246c:	23020000 	movwcs	r0, #8192	; 0x2000
    2470:	0c960c00 	ldceq	12, cr0, [r6], {0}
    2474:	46090000 	strmi	r0, [r9], -r0
    2478:	08f81201 	ldmeq	r8!, {r0, r9, ip}^
    247c:	23020000 	movwcs	r0, #8192	; 0x2000
    2480:	0e690c06 	cdpeq	12, 6, cr0, cr9, cr6, {0}
    2484:	47090000 	strmi	r0, [r9, -r0]
    2488:	00651201 	rsbeq	r1, r5, r1, lsl #4
    248c:	23020000 	movwcs	r0, #8192	; 0x2000
    2490:	650e000c 	strvs	r0, [lr, #-12]
    2494:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    2498:	0f000009 	svceq	0x00000009
    249c:	00000097 	muleq	r0, r7, r0
    24a0:	d00b0002 	andle	r0, fp, r2
    24a4:	07028509 	streq	r8, [r2, -r9, lsl #10]
    24a8:	00000a4c 	andeq	r0, r0, ip, asr #20
    24ac:	000f290c 	andeq	r2, pc, ip, lsl #18
    24b0:	02870900 	addeq	r0, r7, #0, 18
    24b4:	00009718 	andeq	r9, r0, r8, lsl r7
    24b8:	00230200 	eoreq	r0, r3, r0, lsl #4
    24bc:	000eba0c 	andeq	fp, lr, ip, lsl #20
    24c0:	02880900 	addeq	r0, r8, #0, 18
    24c4:	0007be12 	andeq	fp, r7, r2, lsl lr
    24c8:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    24cc:	000b5e0c 	andeq	r5, fp, ip, lsl #28
    24d0:	02890900 	addeq	r0, r9, #0, 18
    24d4:	000a4c10 	andeq	r4, sl, r0, lsl ip
    24d8:	08230200 	stmdaeq	r3!, {r9}
    24dc:	000d960c 	andeq	r9, sp, ip, lsl #12
    24e0:	028a0900 	addeq	r0, sl, #0, 18
    24e4:	00031d17 	andeq	r1, r3, r7, lsl sp
    24e8:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    24ec:	000c770c 	andeq	r7, ip, ip, lsl #14
    24f0:	028b0900 	addeq	r0, fp, #0, 18
    24f4:	00008b0f 	andeq	r8, r0, pc, lsl #22
    24f8:	48230200 	stmdami	r3!, {r9}
    24fc:	000f6d0c 	andeq	r6, pc, ip, lsl #26
    2500:	028c0900 	addeq	r0, ip, #0, 18
    2504:	0000842c 	andeq	r8, r0, ip, lsr #8
    2508:	50230200 	eorpl	r0, r3, r0, lsl #4
    250c:	000a8a0c 	andeq	r8, sl, ip, lsl #20
    2510:	028d0900 	addeq	r0, sp, #0, 18
    2514:	0008b91a 	andeq	fp, r8, sl, lsl r9
    2518:	58230200 	stmdapl	r3!, {r9}
    251c:	000c000c 	andeq	r0, ip, ip
    2520:	028e0900 	addeq	r0, lr, #0, 18
    2524:	00026f16 	andeq	r6, r2, r6, lsl pc
    2528:	68230200 	stmdavs	r3!, {r9}
    252c:	000ec70c 	andeq	ip, lr, ip, lsl #14
    2530:	028f0900 	addeq	r0, pc, #0, 18
    2534:	00026f16 	andeq	r6, r2, r6, lsl pc
    2538:	70230200 	eorvc	r0, r3, r0, lsl #4
    253c:	000a730c 	andeq	r7, sl, ip, lsl #6
    2540:	02900900 	addseq	r0, r0, #0, 18
    2544:	00026f16 	andeq	r6, r2, r6, lsl pc
    2548:	78230200 	stmdavc	r3!, {r9}
    254c:	000ddb0c 	andeq	sp, sp, ip, lsl #22
    2550:	02910900 	addseq	r0, r1, #0, 18
    2554:	000a5c10 	andeq	r5, sl, r0, lsl ip
    2558:	80230300 	eorhi	r0, r3, r0, lsl #6
    255c:	0a8f0c01 	beq	fe3c5568 <BootRAM+0xd335d09>
    2560:	92090000 	andls	r0, r9, #0
    2564:	0a6c1002 	beq	1b06574 <_Min_Stack_Size+0x1b06174>
    2568:	23030000 	movwcs	r0, #12288	; 0x3000
    256c:	470c0188 	strmi	r0, [ip, -r8, lsl #3]
    2570:	0900000e 	stmdbeq	r0, {r1, r2, r3}
    2574:	8b0f0293 	blhi	3c2fc8 <_Min_Stack_Size+0x3c2bc8>
    2578:	03000000 	movweq	r0, #0
    257c:	0c01a023 	stceq	0, cr10, [r1], {35}	; 0x23
    2580:	00000ac8 	andeq	r0, r0, r8, asr #21
    2584:	16029409 	strne	r9, [r2], -r9, lsl #8
    2588:	0000026f 	andeq	r0, r0, pc, ror #4
    258c:	01a42303 			; <UNDEFINED> instruction: 0x01a42303
    2590:	000c260c 	andeq	r2, ip, ip, lsl #12
    2594:	02950900 	addseq	r0, r5, #0, 18
    2598:	00026f16 	andeq	r6, r2, r6, lsl pc
    259c:	ac230300 	stcge	3, cr0, [r3], #-0
    25a0:	0bc30c01 	bleq	ff0c55ac <BootRAM+0xe035d4d>
    25a4:	96090000 	strls	r0, [r9], -r0
    25a8:	026f1602 	rsbeq	r1, pc, #2097152	; 0x200000
    25ac:	23030000 	movwcs	r0, #12288	; 0x3000
    25b0:	a40c01b4 	strge	r0, [ip], #-436	; 0xfffffe4c
    25b4:	0900000c 	stmdbeq	r0, {r2, r3}
    25b8:	6f160297 	svcvs	0x00160297
    25bc:	03000002 	movweq	r0, #2
    25c0:	0c01bc23 	stceq	12, cr11, [r1], {35}	; 0x23
    25c4:	00000bef 	andeq	r0, r0, pc, ror #23
    25c8:	16029809 	strne	r9, [r2], -r9, lsl #16
    25cc:	0000026f 	andeq	r0, r0, pc, ror #4
    25d0:	01c42303 	biceq	r2, r4, r3, lsl #6
    25d4:	000ce30c 	andeq	lr, ip, ip, lsl #6
    25d8:	02990900 	addseq	r0, r9, #0, 18
    25dc:	00008b08 	andeq	r8, r0, r8, lsl #22
    25e0:	cc230300 	stcgt	3, cr0, [r3], #-0
    25e4:	c40e0001 	strgt	r0, [lr], #-1
    25e8:	5c000007 	stcpl	0, cr0, [r0], {7}
    25ec:	0f00000a 	svceq	0x0000000a
    25f0:	00000097 	muleq	r0, r7, r0
    25f4:	c40e0019 	strgt	r0, [lr], #-25	; 0xffffffe7
    25f8:	6c000007 	stcvs	0, cr0, [r0], {7}
    25fc:	0f00000a 	svceq	0x0000000a
    2600:	00000097 	muleq	r0, r7, r0
    2604:	c40e0007 	strgt	r0, [lr], #-7
    2608:	7c000007 	stcvc	0, cr0, [r0], {7}
    260c:	0f00000a 	svceq	0x0000000a
    2610:	00000097 	muleq	r0, r7, r0
    2614:	f00b0017 			; <UNDEFINED> instruction: 0xf00b0017
    2618:	07029e09 	streq	r9, [r2, -r9, lsl #28]
    261c:	00000aa7 	andeq	r0, r0, r7, lsr #21
    2620:	000b290c 	andeq	r2, fp, ip, lsl #18
    2624:	02a10900 	adceq	r0, r1, #0, 18
    2628:	000aa71b 	andeq	sl, sl, fp, lsl r7
    262c:	00230200 	eoreq	r0, r3, r0, lsl #4
    2630:	000a810c 	andeq	r8, sl, ip, lsl #2
    2634:	02a20900 	adceq	r0, r2, #0, 18
    2638:	000ab718 	andeq	fp, sl, r8, lsl r7
    263c:	78230200 	stmdavc	r3!, {r9}
    2640:	04a60e00 	strteq	r0, [r6], #3584	; 0xe00
    2644:	0ab70000 	beq	fedc264c <BootRAM+0xdd32ded>
    2648:	970f0000 	strls	r0, [pc, -r0]
    264c:	1d000000 	stcne	0, cr0, [r0, #-0]
    2650:	00970e00 	addseq	r0, r7, r0, lsl #28
    2654:	0ac70000 	beq	ff1c265c <BootRAM+0xe132dfd>
    2658:	970f0000 	strls	r0, [pc, -r0]
    265c:	1d000000 	stcne	0, cr0, [r0, #-0]
    2660:	09f01d00 	ldmibeq	r0!, {r8, sl, fp, ip}^
    2664:	ec030283 	sfm	f0, 4, [r3], {131}	; 0x83
    2668:	1e00000a 	cdpne	0, 0, cr0, cr0, cr10, {0}
    266c:	00000eea 	andeq	r0, r0, sl, ror #29
    2670:	0b029a09 	bleq	a8e9c <_Min_Stack_Size+0xa8a9c>
    2674:	00000908 	andeq	r0, r0, r8, lsl #18
    2678:	000dbe1e 	andeq	fp, sp, lr, lsl lr
    267c:	02a30900 	adceq	r0, r3, #0, 18
    2680:	000a7c0b 	andeq	r7, sl, fp, lsl #24
    2684:	c40e0000 	strgt	r0, [lr], #-0
    2688:	fc000007 	stc2	0, cr0, [r0], {7}
    268c:	0f00000a 	svceq	0x0000000a
    2690:	00000097 	muleq	r0, r7, r0
    2694:	781f0018 	ldmdavc	pc, {r3, r4}	; <UNPREDICTABLE>
    2698:	0100000f 	tsteq	r0, pc
    269c:	0afc0416 	beq	fff036fc <BootRAM+0xee73e9d>
    26a0:	01200000 			; <UNDEFINED> instruction: 0x01200000
    26a4:	00000b14 	andeq	r0, r0, r4, lsl fp
    26a8:	00063e1a 	andeq	r3, r6, sl, lsl lr
    26ac:	04160000 	ldreq	r0, [r6], #-0
    26b0:	00000b08 	andeq	r0, r0, r8, lsl #22
    26b4:	03070416 	movweq	r0, #29718	; 0x7416
    26b8:	01200000 			; <UNDEFINED> instruction: 0x01200000
    26bc:	00000b2c 	andeq	r0, r0, ip, lsr #22
    26c0:	00008b1a 	andeq	r8, r0, sl, lsl fp
    26c4:	04160000 	ldreq	r0, [r6], #-0
    26c8:	00000b32 	andeq	r0, r0, r2, lsr fp
    26cc:	0b200416 	bleq	80372c <_Min_Stack_Size+0x80332c>
    26d0:	610e0000 	mrsvs	r0, (UNDEF: 14)
    26d4:	48000008 	stmdami	r0, {r3}
    26d8:	0f00000b 	svceq	0x0000000b
    26dc:	00000097 	muleq	r0, r7, r0
    26e0:	65090002 	strvs	r0, [r9, #-2]
    26e4:	0900000d 	stmdbeq	r0, {r0, r2, r3}
    26e8:	3e170333 	mrccc	3, 0, r0, cr7, cr3, {1}
    26ec:	01000006 	tsteq	r0, r6
    26f0:	0d5e0901 	vldreq.16	s1, [lr, #-2]	; <UNPREDICTABLE>
    26f4:	34090000 	strcc	r0, [r9], #-0
    26f8:	06441d03 	strbeq	r1, [r4], -r3, lsl #26
    26fc:	01010000 	mrseq	r0, (UNDEF: 1)
    2700:	00004d0e 	andeq	r4, r0, lr, lsl #26
    2704:	000b7600 	andeq	r7, fp, r0, lsl #12
    2708:	00970f00 	addseq	r0, r7, r0, lsl #30
    270c:	00110000 	andseq	r0, r1, r0
    2710:	000b6604 	andeq	r6, fp, r4, lsl #12
    2714:	0e542100 	rdfeqs	f2, f4, f0
    2718:	17010000 	strne	r0, [r1, -r0]
    271c:	000b7616 	andeq	r7, fp, r6, lsl r6
    2720:	5e030500 	cfsh32pl	mvfx0, mvfx3, #0
    2724:	0e08000c 	cdpeq	0, 0, cr0, cr8, cr12, {0}
    2728:	0000004d 	andeq	r0, r0, sp, asr #32
    272c:	00000b9d 	muleq	r0, sp, fp
    2730:	0000970f 	andeq	r9, r0, pc, lsl #14
    2734:	04000900 	streq	r0, [r0], #-2304	; 0xfffff700
    2738:	00000b8d 	andeq	r0, r0, sp, lsl #23
    273c:	000df921 	andeq	pc, sp, r1, lsr #18
    2740:	162a0100 	strtne	r0, [sl], -r0, lsl #2
    2744:	00000b9d 	muleq	r0, sp, fp
    2748:	0c990305 	ldceq	3, cr0, [r9], {5}
    274c:	4d0e0800 	stcmi	8, cr0, [lr, #-0]
    2750:	c4000000 	strgt	r0, [r0], #-0
    2754:	0f00000b 	svceq	0x0000000b
    2758:	00000097 	muleq	r0, r7, r0
    275c:	b4040079 	strlt	r0, [r4], #-121	; 0xffffff87
    2760:	2100000b 	tstcs	r0, fp
    2764:	00000a4d 	andeq	r0, r0, sp, asr #20
    2768:	c4163801 	ldrgt	r3, [r6], #-2049	; 0xfffff7ff
    276c:	0500000b 	streq	r0, [r0, #-11]
    2770:	000cec03 	andeq	lr, ip, r3, lsl #24
    2774:	004d0e08 	subeq	r0, sp, r8, lsl #28
    2778:	0beb0000 	bleq	ffac2780 <BootRAM+0xea32f21>
    277c:	970f0000 	strls	r0, [pc, -r0]
    2780:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    2784:	0bdb0400 	bleq	ff6c378c <BootRAM+0xe633f2d>
    2788:	49210000 	stmdbmi	r1!, {}	; <UNPREDICTABLE>
    278c:	0100000b 	tsteq	r0, fp
    2790:	0beb1670 	bleq	ffac8158 <BootRAM+0xea388f9>
    2794:	03050000 	movweq	r0, #20480	; 0x5000
    2798:	08000c70 	stmdaeq	r0, {r4, r5, r6, sl, fp}
    279c:	000da514 	andeq	sl, sp, r4, lsl r5
    27a0:	a3010400 	movwge	r0, #5120	; 0x1400
    27a4:	000c3d01 	andeq	r3, ip, r1, lsl #26
    27a8:	0f360800 	svceq	0x00360800
    27ac:	a3010000 	movwge	r0, #4096	; 0x1000
    27b0:	00004101 	andeq	r4, r0, r1, lsl #2
    27b4:	00230200 	eoreq	r0, r3, r0, lsl #4
    27b8:	000e7308 	andeq	r7, lr, r8, lsl #6
    27bc:	01a30100 			; <UNDEFINED> instruction: 0x01a30100
    27c0:	00000041 	andeq	r0, r0, r1, asr #32
    27c4:	08012302 	stmdaeq	r1, {r1, r8, r9, sp}
    27c8:	00000d2a 	andeq	r0, r0, sl, lsr #26
    27cc:	4201a301 	andmi	sl, r1, #67108864	; 0x4000000
    27d0:	0200000c 	andeq	r0, r0, #12
    27d4:	04000223 	streq	r0, [r0], #-547	; 0xfffffddd
    27d8:	00000c02 	andeq	r0, r0, r2, lsl #24
    27dc:	0000590e 	andeq	r5, r0, lr, lsl #18
    27e0:	000c5200 	andeq	r5, ip, r0, lsl #4
    27e4:	00970f00 	addseq	r0, r7, r0, lsl #30
    27e8:	00000000 	andeq	r0, r0, r0
    27ec:	000da521 	andeq	sl, sp, r1, lsr #10
    27f0:	01a30100 			; <UNDEFINED> instruction: 0x01a30100
    27f4:	00000c3d 	andeq	r0, r0, sp, lsr ip
    27f8:	0ca40305 	stceq	3, cr0, [r4], #20
    27fc:	8a140800 	bhi	504804 <_Min_Stack_Size+0x504404>
    2800:	1600000e 	strne	r0, [r0], -lr
    2804:	9f01a401 	svcls	0x0001a401
    2808:	0800000c 	stmdaeq	r0, {r2, r3}
    280c:	00000f36 	andeq	r0, r0, r6, lsr pc
    2810:	4101a401 	tstmi	r1, r1, lsl #8
    2814:	02000000 	andeq	r0, r0, #0
    2818:	73080023 	movwvc	r0, #32803	; 0x8023
    281c:	0100000e 	tsteq	r0, lr
    2820:	004101a4 	subeq	r0, r1, r4, lsr #3
    2824:	23020000 	movwcs	r0, #8192	; 0x2000
    2828:	0d2a0801 	stceq	8, cr0, [sl, #-4]!
    282c:	a4010000 	strge	r0, [r1], #-0
    2830:	000ca401 	andeq	sl, ip, r1, lsl #8
    2834:	02230200 	eoreq	r0, r3, #0, 4
    2838:	0c640400 	cfstrdeq	mvd0, [r4], #-0
    283c:	590e0000 	stmdbpl	lr, {}	; <UNPREDICTABLE>
    2840:	b4000000 	strlt	r0, [r0], #-0
    2844:	0f00000c 	svceq	0x0000000c
    2848:	00000097 	muleq	r0, r7, r0
    284c:	8a210009 	bhi	842878 <_Min_Stack_Size+0x842478>
    2850:	0100000e 	tsteq	r0, lr
    2854:	0c9f01a4 	ldfeqs	f0, [pc], {164}	; 0xa4
    2858:	03050000 	movweq	r0, #20480	; 0x5000
    285c:	08000ca8 	stmdaeq	r0, {r3, r5, r7, sl, fp}
    2860:	000ef114 	andeq	pc, lr, r4, lsl r1	; <UNPREDICTABLE>
    2864:	a5012a00 	strge	r2, [r1, #-2560]	; 0xfffff600
    2868:	000d0101 	andeq	r0, sp, r1, lsl #2
    286c:	0f360800 	svceq	0x00360800
    2870:	a5010000 	strge	r0, [r1, #-0]
    2874:	00004101 	andeq	r4, r0, r1, lsl #2
    2878:	00230200 	eoreq	r0, r3, r0, lsl #4
    287c:	000e7308 	andeq	r7, lr, r8, lsl #6
    2880:	01a50100 			; <UNDEFINED> instruction: 0x01a50100
    2884:	00000041 	andeq	r0, r0, r1, asr #32
    2888:	08012302 	stmdaeq	r1, {r1, r8, r9, sp}
    288c:	00000d2a 	andeq	r0, r0, sl, lsr #26
    2890:	0601a501 	streq	sl, [r1], -r1, lsl #10
    2894:	0200000d 	andeq	r0, r0, #13
    2898:	04000223 	streq	r0, [r0], #-547	; 0xfffffddd
    289c:	00000cc6 	andeq	r0, r0, r6, asr #25
    28a0:	0000590e 	andeq	r5, r0, lr, lsl #18
    28a4:	000d1600 	andeq	r1, sp, r0, lsl #12
    28a8:	00970f00 	addseq	r0, r7, r0, lsl #30
    28ac:	00130000 	andseq	r0, r3, r0
    28b0:	000ef121 	andeq	pc, lr, r1, lsr #2
    28b4:	01a50100 			; <UNDEFINED> instruction: 0x01a50100
    28b8:	00000d01 	andeq	r0, r0, r1, lsl #26
    28bc:	0cbe0305 	ldceq	3, cr0, [lr], #20
    28c0:	7b140800 	blvc	5048c8 <_Min_Stack_Size+0x5044c8>
    28c4:	0400000d 	streq	r0, [r0], #-13
    28c8:	6301a601 	movwvs	sl, #5633	; 0x1601
    28cc:	0800000d 	stmdaeq	r0, {r0, r2, r3}
    28d0:	00000f36 	andeq	r0, r0, r6, lsr pc
    28d4:	4101a601 	tstmi	r1, r1, lsl #12
    28d8:	02000000 	andeq	r0, r0, #0
    28dc:	73080023 	movwvc	r0, #32803	; 0x8023
    28e0:	0100000e 	tsteq	r0, lr
    28e4:	004101a6 	subeq	r0, r1, r6, lsr #3
    28e8:	23020000 	movwcs	r0, #8192	; 0x2000
    28ec:	0d2a0801 	stceq	8, cr0, [sl, #-4]!
    28f0:	a6010000 	strge	r0, [r1], -r0
    28f4:	000c4201 	andeq	r4, ip, r1, lsl #4
    28f8:	02230200 	eoreq	r0, r3, #0, 4
    28fc:	0d280400 	cfstrseq	mvf0, [r8, #-0]
    2900:	7b210000 	blvc	842908 <_Min_Stack_Size+0x842508>
    2904:	0100000d 	tsteq	r0, sp
    2908:	0d6301a6 	stfeqe	f0, [r3, #-664]!	; 0xfffffd68
    290c:	03050000 	movweq	r0, #20480	; 0x5000
    2910:	08000ce8 	stmdaeq	r0, {r3, r5, r6, r7, sl, fp}
    2914:	ee010107 	adfs	f0, f1, f7
    2918:	000e1405 	andeq	r1, lr, r5, lsl #8
    291c:	0a5f2200 	beq	17cb124 <_Min_Stack_Size+0x17cad24>
    2920:	ef010000 	svc	0x00010000
    2924:	0000410f 	andeq	r4, r0, pc, lsl #2
    2928:	07010100 	streq	r0, [r1, -r0, lsl #2]
    292c:	22002302 	andcs	r2, r0, #134217728	; 0x8000000
    2930:	00000b38 	andeq	r0, r0, r8, lsr fp
    2934:	410ff001 	tstmi	pc, r1	; <UNPREDICTABLE>
    2938:	01000000 	mrseq	r0, (UNDEF: 0)
    293c:	23020601 	movwcs	r0, #9729	; 0x2601
    2940:	0cc32200 	sfmeq	f2, 2, [r3], {0}
    2944:	f1010000 	setend	le
    2948:	0000410f 	andeq	r4, r0, pc, lsl #2
    294c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2950:	22002302 	andcs	r2, r0, #134217728	; 0x8000000
    2954:	00000c3e 	andeq	r0, r0, lr, lsr ip
    2958:	410ff201 	tstmi	pc, r1, lsl #4	; <UNPREDICTABLE>
    295c:	01000000 	mrseq	r0, (UNDEF: 0)
    2960:	23020401 	movwcs	r0, #9217	; 0x2401
    2964:	0e392200 	cdpeq	2, 3, cr2, cr9, cr0, {0}
    2968:	f3010000 	vhadd.u8	d0, d1, d0
    296c:	0000410f 	andeq	r4, r0, pc, lsl #2
    2970:	03010100 	movweq	r0, #4352	; 0x1100
    2974:	22002302 	andcs	r2, r0, #134217728	; 0x8000000
    2978:	00000b92 	muleq	r0, r2, fp
    297c:	410ff401 	tstmi	pc, r1, lsl #8	; <UNPREDICTABLE>
    2980:	01000000 	mrseq	r0, (UNDEF: 0)
    2984:	23020201 	movwcs	r0, #8705	; 0x2201
    2988:	0edd2200 	cdpeq	2, 13, cr2, cr13, cr0, {0}
    298c:	f5010000 			; <UNDEFINED> instruction: 0xf5010000
    2990:	0000410f 	andeq	r4, r0, pc, lsl #2
    2994:	01010100 	mrseq	r0, (UNDEF: 17)
    2998:	22002302 	andcs	r2, r0, #134217728	; 0x8000000
    299c:	00000e6e 	andeq	r0, r0, lr, ror #28
    29a0:	410ff601 	tstmi	pc, r1, lsl #12	; <UNPREDICTABLE>
    29a4:	01000000 	mrseq	r0, (UNDEF: 0)
    29a8:	23020001 	movwcs	r0, #8193	; 0x2001
    29ac:	01110000 	tsteq	r1, r0
    29b0:	2f03ec01 	svccs	0x0003ec01
    29b4:	1200000e 	andne	r0, r0, #14
    29b8:	00000cec 	andeq	r0, r0, ip, ror #25
    29bc:	410ded01 	tstmi	sp, r1, lsl #26
    29c0:	23000000 	movwcs	r0, #0
    29c4:	00000d7a 	andeq	r0, r0, sl, ror sp
    29c8:	01090700 	tsteq	r9, r0, lsl #14
    29cc:	0e6e01ea 	poweq<illegal precision>z	f0, f6, #2.0
    29d0:	b1080000 	mrslt	r0, (UNDEF: 8)
    29d4:	0100000b 	tsteq	r0, fp
    29d8:	00410beb 	subeq	r0, r1, fp, ror #23
    29dc:	23020000 	movwcs	r0, #8192	; 0x2000
    29e0:	0e142400 	cfmulseq	mvf2, mvf4, mvf0
    29e4:	23020000 	movwcs	r0, #8192	; 0x2000
    29e8:	0f130801 	svceq	0x00130801
    29ec:	f9010000 			; <UNDEFINED> instruction: 0xf9010000
    29f0:	0000410b 	andeq	r4, r0, fp, lsl #2
    29f4:	02230200 	eoreq	r0, r3, #0, 4
    29f8:	000c0d08 	andeq	r0, ip, r8, lsl #26
    29fc:	0bfa0100 	bleq	ffe82e04 <BootRAM+0xedf35a5>
    2a00:	00000e6e 	andeq	r0, r0, lr, ror #28
    2a04:	00032302 	andeq	r2, r3, r2, lsl #6
    2a08:	0000410e 	andeq	r4, r0, lr, lsl #2
    2a0c:	000e7e00 	andeq	r7, lr, r0, lsl #28
    2a10:	00970f00 	addseq	r0, r7, r0, lsl #30
    2a14:	00050000 	andeq	r0, r5, r0
    2a18:	000aab25 	andeq	sl, sl, r5, lsr #22
    2a1c:	1afb0100 	bne	ffec2e24 <BootRAM+0xee335c5>
    2a20:	00000e2f 	andeq	r0, r0, pc, lsr #28
    2a24:	08030501 	stmdaeq	r3, {r0, r8, sl}
    2a28:	0b200000 	bleq	802a30 <_Min_Stack_Size+0x802630>
    2a2c:	01050101 	tsteq	r5, r1, lsl #2
    2a30:	000ed505 	andeq	sp, lr, r5, lsl #10
    2a34:	0c582600 	mrrceq	6, 0, r2, r8, cr0
    2a38:	06010000 	streq	r0, [r1], -r0
    2a3c:	00410f01 	subeq	r0, r1, r1, lsl #30
    2a40:	01010000 	mrseq	r0, (UNDEF: 1)
    2a44:	00230207 	eoreq	r0, r3, r7, lsl #4
    2a48:	000bbb26 	andeq	fp, fp, r6, lsr #22
    2a4c:	01070100 	mrseq	r0, (UNDEF: 23)
    2a50:	0000410f 	andeq	r4, r0, pc, lsl #2
    2a54:	06010100 	streq	r0, [r1], -r0, lsl #2
    2a58:	26002302 	strcs	r2, [r0], -r2, lsl #6
    2a5c:	00000f13 	andeq	r0, r0, r3, lsl pc
    2a60:	0f010801 	svceq	0x00010801
    2a64:	00000041 	andeq	r0, r0, r1, asr #32
    2a68:	02000601 	andeq	r0, r0, #1048576	; 0x100000
    2a6c:	1d000023 	stcne	0, cr0, [r0, #-140]	; 0xffffff74
    2a70:	01030101 	tsteq	r3, r1, lsl #2
    2a74:	000ef203 	andeq	pc, lr, r3, lsl #4
    2a78:	0e171e00 	cdpeq	14, 1, cr1, cr7, cr0, {0}
    2a7c:	04010000 	streq	r0, [r1], #-0
    2a80:	00410d01 	subeq	r0, r1, r1, lsl #26
    2a84:	91230000 			; <UNDEFINED> instruction: 0x91230000
    2a88:	0000000e 	andeq	r0, r0, lr
    2a8c:	0101060b 	tsteq	r1, fp, lsl #12
    2a90:	0f310101 	svceq	0x00310101
    2a94:	b10c0000 	mrslt	r0, (UNDEF: 12)
    2a98:	0100000b 	tsteq	r0, fp
    2a9c:	410b0102 	tstmi	fp, r2, lsl #2
    2aa0:	02000000 	andeq	r0, r0, #0
    2aa4:	d5240023 	strle	r0, [r4, #-35]!	; 0xffffffdd
    2aa8:	0200000e 	andeq	r0, r0, #14
    2aac:	780d0123 	stmdavc	sp, {r0, r1, r5, r8}
    2ab0:	010b0100 	mrseq	r0, (UNDEF: 27)
    2ab4:	0000590c 	andeq	r5, r0, ip, lsl #18
    2ab8:	02230200 	eoreq	r0, r3, #0, 4
    2abc:	0100790d 	tsteq	r0, sp, lsl #18
    2ac0:	590c010c 	stmdbpl	ip, {r2, r3, r8}
    2ac4:	02000000 	andeq	r0, r0, #0
    2ac8:	27000423 	strcs	r0, [r0, -r3, lsr #8]
    2acc:	00000bdc 	ldrdeq	r0, [r0], -ip
    2ad0:	1a010d01 	bne	45edc <_Min_Stack_Size+0x45adc>
    2ad4:	00000ef2 	strdeq	r0, [r0], -r2
    2ad8:	02030501 	andeq	r0, r3, #4194304	; 0x400000
    2adc:	28200000 	stmdacs	r0!, {}	; <UNPREDICTABLE>
    2ae0:	00011501 	andeq	r1, r1, r1, lsl #10
    2ae4:	01180100 	tsteq	r8, r0, lsl #2
    2ae8:	000a9606 	andeq	r9, sl, r6, lsl #12
    2aec:	000b4408 	andeq	r4, fp, r8, lsl #8
    2af0:	000e9008 	andeq	r9, lr, r8
    2af4:	10ef0100 	rscne	r0, pc, r0, lsl #2
    2af8:	24290000 	strtcs	r0, [r9], #-0
    2afc:	c8000013 	stmdagt	r0, {r0, r1, r4}
    2b00:	0108000a 	tsteq	r8, sl
    2b04:	00000108 	andeq	r0, r0, r8, lsl #2
    2b08:	05011f01 	streq	r1, [r1, #-3841]	; 0xfffff0ff
    2b0c:	00000fb8 			; <UNDEFINED> instruction: 0x00000fb8
    2b10:	00134a2a 	andseq	r4, r3, sl, lsr #20
    2b14:	000eca00 	andeq	ip, lr, r0, lsl #20
    2b18:	000ec800 	andeq	ip, lr, r0, lsl #16
    2b1c:	133e2a00 	teqne	lr, #0, 20
    2b20:	0ee00000 	cdpeq	0, 14, cr0, cr0, cr0, {0}
    2b24:	0ede0000 	cdpeq	0, 13, cr0, cr14, cr0, {0}
    2b28:	322a0000 	eorcc	r0, sl, #0
    2b2c:	fa000013 	blx	2b80 <_Min_Stack_Size+0x2780>
    2b30:	f800000e 			; <UNDEFINED> instruction: 0xf800000e
    2b34:	2b00000e 	blcs	2b74 <_Min_Stack_Size+0x2774>
    2b38:	08000acc 	stmdaeq	r0, {r2, r3, r6, r7, r9, fp}
    2b3c:	0000135d 	andeq	r1, r0, sp, asr r3
    2b40:	0150012c 	cmpeq	r0, ip, lsr #2
    2b44:	51012c32 	tstpl	r1, r2, lsr ip
    2b48:	2c007402 	cfstrscs	mvf7, [r0], {2}
    2b4c:	36015201 	strcc	r5, [r1], -r1, lsl #4
    2b50:	24290000 	strtcs	r0, [r9], #-0
    2b54:	dc000013 	stcle	0, cr0, [r0], {19}
    2b58:	0108000a 	tsteq	r8, sl
    2b5c:	00000128 	andeq	r0, r0, r8, lsr #2
    2b60:	05012201 	streq	r2, [r1, #-513]	; 0xfffffdff
    2b64:	00001010 	andeq	r1, r0, r0, lsl r0
    2b68:	00134a2a 	andseq	r4, r3, sl, lsr #20
    2b6c:	000f1100 	andeq	r1, pc, r0, lsl #2
    2b70:	000f0f00 	andeq	r0, pc, r0, lsl #30
    2b74:	133e2a00 	teqne	lr, #0, 20
    2b78:	0f270000 	svceq	0x00270000
    2b7c:	0f250000 	svceq	0x00250000
    2b80:	322a0000 	eorcc	r0, sl, #0
    2b84:	41000013 	tstmi	r0, r3, lsl r0
    2b88:	3f00000f 	svccc	0x0000000f
    2b8c:	2b00000f 	blcs	2bd0 <_Min_Stack_Size+0x27d0>
    2b90:	08000ae0 	stmdaeq	r0, {r5, r6, r7, r9, fp}
    2b94:	0000135d 	andeq	r1, r0, sp, asr r3
    2b98:	0150012c 	cmpeq	r0, ip, lsr #2
    2b9c:	51012c32 	tstpl	r1, r2, lsr ip
    2ba0:	2c007402 	cfstrscs	mvf7, [r0], {2}
    2ba4:	36015201 	strcc	r5, [r1], -r1, lsl #4
    2ba8:	24290000 	strtcs	r0, [r9], #-0
    2bac:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
    2bb0:	0108000b 	tsteq	r8, fp
    2bb4:	00000140 	andeq	r0, r0, r0, asr #2
    2bb8:	05012b01 	streq	r2, [r1, #-2817]	; 0xfffff4ff
    2bbc:	00001068 	andeq	r1, r0, r8, rrx
    2bc0:	00134a2a 	andseq	r4, r3, sl, lsr #20
    2bc4:	000f5800 	andeq	r5, pc, r0, lsl #16
    2bc8:	000f5600 	andeq	r5, pc, r0, lsl #12
    2bcc:	133e2a00 	teqne	lr, #0, 20
    2bd0:	0f6e0000 	svceq	0x006e0000
    2bd4:	0f6c0000 	svceq	0x006c0000
    2bd8:	322a0000 	eorcc	r0, sl, #0
    2bdc:	88000013 	stmdahi	r0, {r0, r1, r4}
    2be0:	8600000f 	strhi	r0, [r0], -pc
    2be4:	2b00000f 	blcs	2c28 <_Min_Stack_Size+0x2828>
    2be8:	08000b12 	stmdaeq	r0, {r1, r4, r8, r9, fp}
    2bec:	0000135d 	andeq	r1, r0, sp, asr r3
    2bf0:	0150012c 	cmpeq	r0, ip, lsr #2
    2bf4:	51012c32 	tstpl	r1, r2, lsr ip
    2bf8:	2c067402 	cfstrscs	mvf7, [r6], {2}
    2bfc:	39015201 	stmdbcc	r1, {r0, r9, ip, lr}
    2c00:	24290000 	strtcs	r0, [r9], #-0
    2c04:	26000013 			; <UNDEFINED> instruction: 0x26000013
    2c08:	0108000b 	tsteq	r8, fp
    2c0c:	00000168 	andeq	r0, r0, r8, ror #2
    2c10:	05012f01 	streq	r2, [r1, #-3841]	; 0xfffff0ff
    2c14:	000010c4 	andeq	r1, r0, r4, asr #1
    2c18:	00134a2a 	andseq	r4, r3, sl, lsr #20
    2c1c:	000f9f00 	andeq	r9, pc, r0, lsl #30
    2c20:	000f9d00 	andeq	r9, pc, r0, lsl #26
    2c24:	133e2a00 	teqne	lr, #0, 20
    2c28:	0fb50000 	svceq	0x00b50000
    2c2c:	0fb30000 	svceq	0x00b30000
    2c30:	322a0000 	eorcc	r0, sl, #0
    2c34:	cf000013 	svcgt	0x00000013
    2c38:	cd00000f 	stcgt	0, cr0, [r0, #-60]	; 0xffffffc4
    2c3c:	2d00000f 	stccs	0, cr0, [r0, #-60]	; 0xffffffc4
    2c40:	08000b32 	stmdaeq	r0, {r1, r4, r5, r8, r9, fp}
    2c44:	00135d01 	andseq	r5, r3, r1, lsl #26
    2c48:	50012c00 	andpl	r2, r1, r0, lsl #24
    2c4c:	012c3201 			; <UNDEFINED> instruction: 0x012c3201
    2c50:	08030551 	stmdaeq	r3, {r0, r4, r6, r8, sl}
    2c54:	2c200000 	stccs	0, cr0, [r0], #-0
    2c58:	39015201 	stmdbcc	r1, {r0, r9, ip, lr}
    2c5c:	d22e0000 	eorle	r0, lr, #0
    2c60:	ef08000a 	svc	0x0008000a
    2c64:	db000010 	blle	2cac <_Min_Stack_Size+0x28ac>
    2c68:	2c000010 	stccs	0, cr0, [r0], {16}
    2c6c:	0c055001 	stceq	0, cr5, [r5], {1}
    2c70:	000f4240 	andeq	r4, pc, r0, asr #4
    2c74:	0b182b00 	bleq	60d87c <_Min_Stack_Size+0x60d47c>
    2c78:	10ef0800 	rscne	r0, pc, r0, lsl #16
    2c7c:	012c0000 			; <UNDEFINED> instruction: 0x012c0000
    2c80:	400c0550 	andmi	r0, ip, r0, asr r5
    2c84:	00000f42 	andeq	r0, r0, r2, asr #30
    2c88:	24012f00 	strcs	r2, [r1], #-3840	; 0xfffff100
    2c8c:	0100000d 	tsteq	r0, sp
    2c90:	01060114 	tsteq	r6, r4, lsl r1
    2c94:	08000a8c 	stmdaeq	r0, {r2, r3, r7, r9, fp}
    2c98:	08000a96 	stmdaeq	r0, {r1, r2, r4, r7, r9, fp}
    2c9c:	01007d02 	tsteq	r0, r2, lsl #26
    2ca0:	0000111e 	andeq	r1, r0, lr, lsl r1
    2ca4:	01007430 	tsteq	r0, r0, lsr r4
    2ca8:	6c150114 	ldfvss	f0, [r5], {20}
    2cac:	e8000000 	stmda	r0, {}	; <UNPREDICTABLE>
    2cb0:	e400000f 	str	r0, [r0], #-15
    2cb4:	0000000f 	andeq	r0, r0, pc
    2cb8:	06b20131 			; <UNDEFINED> instruction: 0x06b20131
    2cbc:	e5010000 	str	r0, [r1, #-0]
    2cc0:	000a6406 	andeq	r6, sl, r6, lsl #8
    2cc4:	000a8c08 	andeq	r8, sl, r8, lsl #24
    2cc8:	00100608 	andseq	r0, r0, r8, lsl #12
    2ccc:	11850100 	orrne	r0, r5, r0, lsl #2
    2cd0:	722e0000 	eorvc	r0, lr, #0
    2cd4:	6b08000a 	blvs	202d04 <_Min_Stack_Size+0x202904>
    2cd8:	5f000013 	svcpl	0x00000013
    2cdc:	2c000011 	stccs	0, cr0, [r0], {17}
    2ce0:	31015001 	tstcc	r1, r1
    2ce4:	0151012c 	cmpeq	r1, ip, lsr #2
    2ce8:	52012c33 	andpl	r2, r1, #13056	; 0x3300
    2cec:	2c400802 	mcrrcs	8, 0, r0, r0, cr2
    2cf0:	03055301 	movweq	r5, #21249	; 0x5301
    2cf4:	08000987 	stmdaeq	r0, {r0, r1, r2, r7, r8, fp}
    2cf8:	0a822d00 	beq	fe08e100 <BootRAM+0xcffe8a1>
    2cfc:	6b010800 	blvs	44d04 <_Min_Stack_Size+0x44904>
    2d00:	2c000013 	stccs	0, cr0, [r0], {19}
    2d04:	09025001 	stmdbeq	r2, {r0, ip, lr}
    2d08:	51012c81 	smlabbpl	r1, r1, ip, r2
    2d0c:	012c3301 			; <UNDEFINED> instruction: 0x012c3301
    2d10:	40080252 	andmi	r0, r8, r2, asr r2
    2d14:	0553012c 	ldrbeq	r0, [r3, #-300]	; 0xfffffed4
    2d18:	00098503 	andeq	r8, r9, r3, lsl #10
    2d1c:	32000008 	andcc	r0, r0, #8
    2d20:	00000f97 	muleq	r0, r7, pc	; <UNPREDICTABLE>
    2d24:	010dde01 	tsteq	sp, r1, lsl #28
    2d28:	08000986 	stmdaeq	r0, {r1, r2, r7, r8, fp}
    2d2c:	080009c0 	stmdaeq	r0, {r6, r7, r8, fp}
    2d30:	00001032 	andeq	r1, r0, r2, lsr r0
    2d34:	00120801 	andseq	r0, r2, r1, lsl #16
    2d38:	08ca3300 	stmiaeq	sl, {r8, r9, ip, sp}^
    2d3c:	de010000 	cdple	0, 0, cr0, cr1, cr0, {0}
    2d40:	0000411e 	andeq	r4, r0, lr, lsl r1
    2d44:	00106200 	andseq	r6, r0, r0, lsl #4
    2d48:	00105e00 	andseq	r5, r0, r0, lsl #28
    2d4c:	75623400 	strbvc	r3, [r2, #-1024]!	; 0xfffffc00
    2d50:	df010066 	svcle	0x00010066
    2d54:	0012080b 	andseq	r0, r2, fp, lsl #16
    2d58:	6c910200 	lfmvs	f0, 4, [r1], {0}
    2d5c:	0012f935 	andseq	pc, r2, r5, lsr r9	; <UNPREDICTABLE>
    2d60:	00098800 	andeq	r8, r9, r0, lsl #16
    2d64:	09880008 	stmibeq	r8, {r3}
    2d68:	09900800 	ldmibeq	r0, {fp}
    2d6c:	e0010800 	and	r0, r1, r0, lsl #16
    2d70:	130b2a03 	movwne	r2, #47619	; 0xba03
    2d74:	10850000 	addne	r0, r5, r0
    2d78:	10830000 	addne	r0, r3, r0
    2d7c:	172a0000 	strne	r0, [sl, -r0]!
    2d80:	9f000013 	svcls	0x00000013
    2d84:	99000010 	stmdbls	r0, {r4}
    2d88:	2b000010 	blcs	2dd0 <_Min_Stack_Size+0x29d0>
    2d8c:	08000990 	stmdaeq	r0, {r4, r7, r8, fp}
    2d90:	00001379 	andeq	r1, r0, r9, ror r3
    2d94:	0150012c 	cmpeq	r0, ip, lsr #2
    2d98:	51012c33 	tstpl	r1, r3, lsr ip
    2d9c:	006c9102 	rsbeq	r9, ip, r2, lsl #2
    2da0:	410e0000 	mrsmi	r0, (UNDEF: 14)
    2da4:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    2da8:	0f000012 	svceq	0x00000012
    2dac:	00000097 	muleq	r0, r7, r0
    2db0:	0f360009 	svceq	0x00360009
    2db4:	0100000b 	tsteq	r0, fp
    2db8:	84010ddb 	strhi	r0, [r1], #-3547	; 0xfffff225
    2dbc:	86080009 	strhi	r0, [r8], -r9
    2dc0:	02080009 	andeq	r0, r8, #9
    2dc4:	4001007d 	andmi	r0, r1, sp, ror r0
    2dc8:	37000012 	smladcc	r0, r2, r0, r0
    2dcc:	000008ca 	andeq	r0, r0, sl, asr #17
    2dd0:	411edb01 	tstmi	lr, r1, lsl #22
    2dd4:	01000000 	mrseq	r0, (UNDEF: 0)
    2dd8:	01380050 	teqeq	r8, r0, asr r0
    2ddc:	00000792 	muleq	r0, r2, r7
    2de0:	0106ce01 	tsteq	r6, r1, lsl #28
    2de4:	000007c4 	andeq	r0, r0, r4, asr #15
    2de8:	08000a3c 	stmdaeq	r0, {r2, r3, r4, r5, r9, fp}
    2dec:	08000a64 	stmdaeq	r0, {r2, r5, r6, r9, fp}
    2df0:	01007d02 	tsteq	r0, r2, lsl #26
    2df4:	0000128f 	andeq	r1, r0, pc, lsl #5
    2df8:	71657239 	cmnvc	r5, r9, lsr r2
    2dfc:	26ce0100 	strbcs	r0, [lr], r0, lsl #2
    2e00:	0000128f 	andeq	r1, r0, pc, lsl #5
    2e04:	000010d4 	ldrdeq	r1, [r0], -r4
    2e08:	000010cc 	andeq	r1, r0, ip, asr #1
    2e0c:	000d5237 	andeq	r5, sp, r7, lsr r2
    2e10:	32ce0100 	sbccc	r0, lr, #0, 2
    2e14:	00001295 	muleq	r0, r5, r2
    2e18:	c7375101 	ldrgt	r5, [r7, -r1, lsl #2]!
    2e1c:	01000007 	tsteq	r0, r7
    2e20:	129b42ce 	addsne	r4, fp, #-536870900	; 0xe000000c
    2e24:	52010000 	andpl	r0, r1, #0
    2e28:	f3041600 	vmax.u8	d1, d4, d0
    2e2c:	16000000 	strne	r0, [r0], -r0
    2e30:	00027b04 	andeq	r7, r2, r4, lsl #22
    2e34:	59041600 	stmdbpl	r4, {r9, sl, ip}
    2e38:	3a000000 	bcc	2e40 <_Min_Stack_Size+0x2a40>
    2e3c:	0005a201 	andeq	sl, r5, r1, lsl #4
    2e40:	06a80100 	strteq	r0, [r8], r0, lsl #2
    2e44:	0009c001 	andeq	ip, r9, r1
    2e48:	000a3c08 	andeq	r3, sl, r8, lsl #24
    2e4c:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    2e50:	0012ec01 	andseq	lr, r2, r1, lsl #24
    2e54:	05b43300 	ldreq	r3, [r4, #768]!	; 0x300
    2e58:	a8010000 	stmdage	r1, {}	; <UNPREDICTABLE>
    2e5c:	00005927 	andeq	r5, r0, r7, lsr #18
    2e60:	00111600 	andseq	r1, r1, r0, lsl #12
    2e64:	00110e00 	andseq	r0, r1, r0, lsl #28
    2e68:	0d523700 	ldcleq	7, cr3, [r2, #-0]
    2e6c:	a8010000 	stmdage	r1, {}	; <UNPREDICTABLE>
    2e70:	0012ec3b 	andseq	lr, r2, fp, lsr ip
    2e74:	37510100 	ldrbcc	r0, [r1, -r0, lsl #2]
    2e78:	000007c7 	andeq	r0, r0, r7, asr #15
    2e7c:	9b4ba801 	blls	12ece88 <_Min_Stack_Size+0x12eca88>
    2e80:	01000012 	tsteq	r0, r2, lsl r0
    2e84:	04160052 	ldreq	r0, [r6], #-82	; 0xffffffae
    2e88:	000012f2 	strdeq	r1, [r0], -r2
    2e8c:	12f80416 	rscsne	r0, r8, #369098752	; 0x16000000
    2e90:	3c3b0000 	ldccc	0, cr0, [fp], #-0
    2e94:	00000689 	andeq	r0, r0, r9, lsl #13
    2e98:	0113b402 	tsteq	r3, r2, lsl #8
    2e9c:	0000008b 	andeq	r0, r0, fp, lsl #1
    2ea0:	00132403 	andseq	r2, r3, r3, lsl #8
    2ea4:	08ca3d00 	stmiaeq	sl, {r8, sl, fp, ip, sp}^
    2ea8:	b4020000 	strlt	r0, [r2], #-0
    2eac:	00004127 	andeq	r4, r0, r7, lsr #2
    2eb0:	75623e00 	strbvc	r3, [r2, #-3584]!	; 0xfffff200
    2eb4:	b4020066 	strlt	r0, [r2], #-102	; 0xffffff9a
    2eb8:	00129b38 	andseq	r9, r2, r8, lsr fp
    2ebc:	3b3f0000 	blcc	fc2ec4 <_Min_Stack_Size+0xfc2ac4>
    2ec0:	02000005 	andeq	r0, r0, #5
    2ec4:	030114ab 	movweq	r1, #5291	; 0x14ab
    2ec8:	00001357 	andeq	r1, r0, r7, asr r3
    2ecc:	0008ca3d 	andeq	ip, r8, sp, lsr sl
    2ed0:	29ab0200 	stmibcs	fp!, {r9}
    2ed4:	00000041 	andeq	r0, r0, r1, asr #32
    2ed8:	6675623e 			; <UNDEFINED> instruction: 0x6675623e
    2edc:	3fab0200 	svccc	0x00ab0200
    2ee0:	00001357 	andeq	r1, r0, r7, asr r3
    2ee4:	0007c73d 	andeq	ip, r7, sp, lsr r7
    2ee8:	4dab0200 	sfmmi	f0, 4, [fp]
    2eec:	00000059 	andeq	r0, r0, r9, asr r0
    2ef0:	4d041600 	stcmi	6, cr1, [r4, #-0]
    2ef4:	40000000 	andmi	r0, r0, r0
    2ef8:	053a0101 	ldreq	r0, [sl, #-257]!	; 0xfffffeff
    2efc:	053a0000 	ldreq	r0, [sl, #-0]!
    2f00:	aa020000 	bge	82f08 <_Min_Stack_Size+0x82b08>
    2f04:	01014006 	tsteq	r1, r6
    2f08:	00000848 	andeq	r0, r0, r8, asr #16
    2f0c:	00000848 	andeq	r0, r0, r8, asr #16
    2f10:	40062502 	andmi	r2, r6, r2, lsl #10
    2f14:	06880101 	streq	r0, [r8], r1, lsl #2
    2f18:	06880000 	streq	r0, [r8], r0
    2f1c:	b3020000 	movwlt	r0, #8192	; 0x2000
    2f20:	01160005 	tsteq	r6, r5
    2f24:	00040000 	andeq	r0, r4, r0
    2f28:	00000afb 	strdeq	r0, [r0], -fp
    2f2c:	103e0104 	eorsne	r0, lr, r4, lsl #2
    2f30:	f00c0000 			; <UNDEFINED> instruction: 0xf00c0000
    2f34:	cc000010 	stcgt	0, cr0, [r0], {16}
    2f38:	4400000f 	strmi	r0, [r0], #-15
    2f3c:	4808000b 	stmdami	r8, {r0, r1, r3}
    2f40:	a7000000 	strge	r0, [r0, -r0]
    2f44:	0200000f 	andeq	r0, r0, #15
    2f48:	027d0601 	rsbseq	r0, sp, #1048576	; 0x100000
    2f4c:	01020000 	mrseq	r0, (UNDEF: 2)
    2f50:	00027b08 	andeq	r7, r2, r8, lsl #22
    2f54:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    2f58:	00000296 	muleq	r0, r6, r2
    2f5c:	a3070202 	movwge	r0, #29186	; 0x7202
    2f60:	02000001 	andeq	r0, r0, #1
    2f64:	00a70504 	adceq	r0, r7, r4, lsl #10
    2f68:	04020000 	streq	r0, [r2], #-0
    2f6c:	00005707 	andeq	r5, r0, r7, lsl #14
    2f70:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    2f74:	000000a2 	andeq	r0, r0, r2, lsr #1
    2f78:	52070802 	andpl	r0, r7, #131072	; 0x20000
    2f7c:	03000000 	movweq	r0, #0
    2f80:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    2f84:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    2f88:	00005c07 	andeq	r5, r0, r7, lsl #24
    2f8c:	0fb30400 	svceq	0x00b30400
    2f90:	d8020000 	stmdale	r2, {}	; <UNPREDICTABLE>
    2f94:	00006417 	andeq	r6, r0, r7, lsl r4
    2f98:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
    2f9c:	00000cff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    2fa0:	84080102 	strhi	r0, [r8], #-258	; 0xfffffefe
    2fa4:	05000002 	streq	r0, [r0, #-2]
    2fa8:	00000090 	muleq	r0, r0, r0
    2fac:	00000090 	muleq	r0, r0, r0
    2fb0:	04070006 	streq	r0, [r7], #-6
    2fb4:	00000096 	muleq	r0, r6, r0
    2fb8:	10280908 	eorne	r0, r8, r8, lsl #18
    2fbc:	13010000 	movwne	r0, #4096	; 0x1000
    2fc0:	0000850f 	andeq	r8, r0, pc, lsl #10
    2fc4:	10cb0900 	sbcne	r0, fp, r0, lsl #18
    2fc8:	14010000 	strne	r0, [r1], #-0
    2fcc:	0000850f 	andeq	r8, r0, pc, lsl #10
    2fd0:	0fa00900 	svceq	0x00a00900
    2fd4:	15010000 	strne	r0, [r1, #-0]
    2fd8:	0000850f 	andeq	r8, r0, pc, lsl #10
    2fdc:	10df0900 	sbcsne	r0, pc, r0, lsl #18
    2fe0:	16010000 	strne	r0, [r1], -r0
    2fe4:	0000850f 	andeq	r8, r0, pc, lsl #10
    2fe8:	0fba0a00 	svceq	0x00ba0a00
    2fec:	1e010000 	cdpne	0, 0, cr0, cr1, cr0, {0}
    2ff0:	000b4401 	andeq	r4, fp, r1, lsl #8
    2ff4:	00004808 	andeq	r4, r0, r8, lsl #16
    2ff8:	0d9c0100 	ldfeqs	f0, [ip]
    2ffc:	0b000001 	bleq	3008 <_Min_Stack_Size+0x2c08>
    3000:	000004f2 	strdeq	r0, [r0], -r2
    3004:	6b0a2001 	blvs	28b010 <_Min_Stack_Size+0x28ac10>
    3008:	58000000 	stmdapl	r0, {}	; <UNPREDICTABLE>
    300c:	50000011 	andpl	r0, r0, r1, lsl r0
    3010:	0c000011 	stceq	0, cr0, [r0], {17}
    3014:	21010069 	tstcs	r1, r9, rrx
    3018:	00006b0a 	andeq	r6, r0, sl, lsl #22
    301c:	0011a400 	andseq	sl, r1, r0, lsl #8
    3020:	00119400 	andseq	r9, r1, r0, lsl #8
    3024:	0b660d00 	bleq	198642c <_Min_Stack_Size+0x198602c>
    3028:	010d0800 	tsteq	sp, r0, lsl #16
    302c:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    3030:	0000084e 	andeq	r0, r0, lr, asr #16
    3034:	0000084e 	andeq	r0, r0, lr, asr #16
    3038:	000d1901 	andeq	r1, sp, r1, lsl #18

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
   c:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
  10:	00061001 	andeq	r1, r6, r1
  14:	00240200 	eoreq	r0, r4, r0, lsl #4
  18:	0b3e0b0b 	bleq	f82c4c <_Min_Stack_Size+0xf8284c>
  1c:	00000e03 	andeq	r0, r0, r3, lsl #28
  20:	03001603 	movweq	r1, #1539	; 0x603
  24:	3b0b3a0e 	blcc	2ce864 <_Min_Stack_Size+0x2ce464>
  28:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
  2c:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
  30:	13490035 	movtne	r0, #36917	; 0x9035
  34:	24050000 	strcs	r0, [r5], #-0
  38:	3e0b0b00 	vmlacc.f64	d0, d11, d0
  3c:	0008030b 	andeq	r0, r8, fp, lsl #6
  40:	00340600 	eorseq	r0, r4, r0, lsl #12
  44:	0b3a0e03 	bleq	e83858 <_Min_Stack_Size+0xe83458>
  48:	0b39053b 	bleq	e4153c <_Min_Stack_Size+0xe4113c>
  4c:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; ffffff30 <BootRAM+0xef706d1>
  50:	00000c3c 	andeq	r0, r0, ip, lsr ip
  54:	03003407 	movweq	r3, #1031	; 0x407
  58:	3b0b3a0e 	blcc	2ce898 <_Min_Stack_Size+0x2ce498>
  5c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
  60:	3c0c3f13 	stccc	15, cr3, [ip], {19}
  64:	0800000c 	stmdaeq	r0, {r2, r3}
  68:	0b0b0113 	bleq	2c04bc <_Min_Stack_Size+0x2c00bc>
  6c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
  70:	13010b39 	movwne	r0, #6969	; 0x1b39
  74:	0d090000 	stceq	0, cr0, [r9, #-0]
  78:	3a080300 	bcc	200c80 <_Min_Stack_Size+0x200880>
  7c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
  80:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
  84:	0a00000a 	beq	b4 <_Min_Heap_Size+0xb4>
  88:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
  8c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
  90:	13490b39 	movtne	r0, #39737	; 0x9b39
  94:	00000a38 	andeq	r0, r0, r8, lsr sl
  98:	4901010b 	stmdbmi	r1, {r0, r1, r3, r8}
  9c:	00130113 	andseq	r0, r3, r3, lsl r1
  a0:	00210c00 	eoreq	r0, r1, r0, lsl #24
  a4:	0b2f1349 	bleq	bc4dd0 <_Min_Stack_Size+0xbc49d0>
  a8:	160d0000 	strne	r0, [sp], -r0
  ac:	3a0e0300 	bcc	380cb4 <_Min_Stack_Size+0x3808b4>
  b0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
  b4:	0013490b 	andseq	r4, r3, fp, lsl #18
  b8:	012e0e00 			; <UNDEFINED> instruction: 0x012e0e00
  bc:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
  c0:	0b3b0b3a 	bleq	ec2db0 <_Min_Stack_Size+0xec29b0>
  c4:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
  c8:	01111349 	tsteq	r1, r9, asr #6
  cc:	06400112 			; <UNDEFINED> instruction: 0x06400112
  d0:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
  d4:	0f000013 	svceq	0x00000013
  d8:	0111010b 	tsteq	r1, fp, lsl #2
  dc:	13010112 	movwne	r0, #4370	; 0x1112
  e0:	34100000 	ldrcc	r0, [r0], #-0
  e4:	3a0e0300 	bcc	380cec <_Min_Stack_Size+0x3808ec>
  e8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  ec:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
  f0:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
  f4:	1d110000 	ldcne	0, cr0, [r1, #-0]
  f8:	52133100 	andspl	r3, r3, #0, 2
  fc:	0b42b801 	bleq	10ae108 <_Min_Stack_Size+0x10add08>
 100:	01120111 	tsteq	r2, r1, lsl r1
 104:	0b590b58 	bleq	1642e6c <_Min_Stack_Size+0x1642a6c>
 108:	00000b57 	andeq	r0, r0, r7, asr fp
 10c:	01828912 	orreq	r8, r2, r2, lsl r9
 110:	31011101 	tstcc	r1, r1, lsl #2
 114:	00130113 	andseq	r0, r3, r3, lsl r1
 118:	828a1300 	addhi	r1, sl, #0, 6
 11c:	0a020001 	beq	80128 <_Min_Stack_Size+0x7fd28>
 120:	000a4291 	muleq	sl, r1, r2
 124:	82891400 	addhi	r1, r9, #0, 8
 128:	01110001 	tsteq	r1, r1
 12c:	00001331 	andeq	r1, r0, r1, lsr r3
 130:	01828915 	orreq	r8, r2, r5, lsl r9
 134:	31011101 	tstcc	r1, r1, lsl #2
 138:	16000013 			; <UNDEFINED> instruction: 0x16000013
 13c:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 8c <_Min_Heap_Size+0x8c>
 140:	0b3a0e03 	bleq	e83954 <_Min_Stack_Size+0xe83554>
 144:	0b390b3b 	bleq	e42e38 <_Min_Stack_Size+0xe42a38>
 148:	01110c27 	tsteq	r1, r7, lsr #24
 14c:	0a400112 	beq	100059c <_Min_Stack_Size+0x100019c>
 150:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
 154:	17000013 	smladne	r0, r3, r0, r0
 158:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
 15c:	0b3b0b3a 	bleq	ec2e4c <_Min_Stack_Size+0xec2a4c>
 160:	13490b39 	movtne	r0, #39737	; 0x9b39
 164:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
 168:	18000006 	stmdane	r0, {r1, r2}
 16c:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; bc <_Min_Heap_Size+0xbc>
 170:	0b3a0e03 	bleq	e83984 <_Min_Stack_Size+0xe83584>
 174:	0b390b3b 	bleq	e42e68 <_Min_Stack_Size+0xe42a68>
 178:	01110c27 	tsteq	r1, r7, lsr #24
 17c:	0a400112 	beq	10005cc <_Min_Stack_Size+0x10001cc>
 180:	000c4297 	muleq	ip, r7, r2
 184:	002e1900 	eoreq	r1, lr, r0, lsl #18
 188:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
 18c:	0b3b0b3a 	bleq	ec2e7c <_Min_Stack_Size+0xec2a7c>
 190:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
 194:	2e1a0000 	cdpcs	0, 1, cr0, cr10, cr0, {0}
 198:	030c3f01 	movweq	r3, #52993	; 0xcf01
 19c:	3b0b3a0e 	blcc	2ce9dc <_Min_Stack_Size+0x2ce5dc>
 1a0:	110b390b 	tstne	fp, fp, lsl #18
 1a4:	40011201 	andmi	r1, r1, r1, lsl #4
 1a8:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
 1ac:	00001301 	andeq	r1, r0, r1, lsl #6
 1b0:	0300341b 	movweq	r3, #1051	; 0x41b
 1b4:	3b0b3a08 	blcc	2ce9dc <_Min_Stack_Size+0x2ce5dc>
 1b8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 1bc:	b7060213 	smladlt	r6, r3, r2, r0
 1c0:	00000642 	andeq	r0, r0, r2, asr #12
 1c4:	3f012e1c 	svccc	0x00012e1c
 1c8:	3a0e030c 	bcc	380e00 <_Min_Stack_Size+0x380a00>
 1cc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 1d0:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
 1d4:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
 1d8:	970a4001 	strls	r4, [sl, -r1]
 1dc:	13010c42 	movwne	r0, #7234	; 0x1c42
 1e0:	051d0000 	ldreq	r0, [sp, #-0]
 1e4:	3a0e0300 	bcc	380dec <_Min_Stack_Size+0x3809ec>
 1e8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 1ec:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 1f0:	1e00000a 	cdpne	0, 0, cr0, cr0, cr10, {0}
 1f4:	0e03002e 	cdpeq	0, 0, cr0, cr3, cr14, {1}
 1f8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 1fc:	0b200b39 	bleq	802ee8 <_Min_Stack_Size+0x802ae8>
 200:	2e1f0000 	cdpcs	0, 1, cr0, cr15, cr0, {0}
 204:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
 208:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
 20c:	0b3a0e03 	bleq	e83a20 <_Min_Stack_Size+0xe83620>
 210:	0b390b3b 	bleq	e42f04 <_Min_Stack_Size+0xe42b04>
 214:	01000000 	mrseq	r0, (UNDEF: 0)
 218:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
 21c:	0e030b13 	vmoveq.32	d3[0], r0
 220:	01110e1b 	tsteq	r1, fp, lsl lr
 224:	06100112 			; <UNDEFINED> instruction: 0x06100112
 228:	24020000 	strcs	r0, [r2], #-0
 22c:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 230:	000e030b 	andeq	r0, lr, fp, lsl #6
 234:	00160300 	andseq	r0, r6, r0, lsl #6
 238:	0b3a0e03 	bleq	e83a4c <_Min_Stack_Size+0xe8364c>
 23c:	0b390b3b 	bleq	e42f30 <_Min_Stack_Size+0xe42b30>
 240:	00001349 	andeq	r1, r0, r9, asr #6
 244:	49003504 	stmdbmi	r0, {r2, r8, sl, ip, sp}
 248:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
 24c:	13490026 	movtne	r0, #36902	; 0x9026
 250:	24060000 	strcs	r0, [r6], #-0
 254:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 258:	0008030b 	andeq	r0, r8, fp, lsl #6
 25c:	000f0700 	andeq	r0, pc, r0, lsl #14
 260:	13490b0b 	movtne	r0, #39691	; 0x9b0b
 264:	15080000 	strne	r0, [r8, #-0]
 268:	010c2701 	tsteq	ip, r1, lsl #14
 26c:	09000013 	stmdbeq	r0, {r0, r1, r4}
 270:	13490005 	movtne	r0, #36869	; 0x9005
 274:	130a0000 	movwne	r0, #40960	; 0xa000
 278:	3a0b0b01 	bcc	2c2e84 <_Min_Stack_Size+0x2c2a84>
 27c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 280:	0013010b 	andseq	r0, r3, fp, lsl #2
 284:	000d0b00 	andeq	r0, sp, r0, lsl #22
 288:	0b3a0e03 	bleq	e83a9c <_Min_Stack_Size+0xe8369c>
 28c:	0b390b3b 	bleq	e42f80 <_Min_Stack_Size+0xe42b80>
 290:	0a381349 	beq	e04fbc <_Min_Stack_Size+0xe04bbc>
 294:	040c0000 	streq	r0, [ip], #-0
 298:	0b0b3e01 	bleq	2cfaa4 <_Min_Stack_Size+0x2cf6a4>
 29c:	3a13490b 	bcc	4d26d0 <_Min_Stack_Size+0x4d22d0>
 2a0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 2a4:	0013010b 	andseq	r0, r3, fp, lsl #2
 2a8:	00280d00 	eoreq	r0, r8, r0, lsl #26
 2ac:	0d1c0e03 	ldceq	14, cr0, [ip, #-12]
 2b0:	280e0000 	stmdacs	lr, {}	; <UNPREDICTABLE>
 2b4:	1c0e0300 	stcne	3, cr0, [lr], {-0}
 2b8:	0f00000b 	svceq	0x0000000b
 2bc:	050b0113 	streq	r0, [fp, #-275]	; 0xfffffeed
 2c0:	0b3b0b3a 	bleq	ec2fb0 <_Min_Stack_Size+0xec2bb0>
 2c4:	13010b39 	movwne	r0, #6969	; 0x1b39
 2c8:	0d100000 	ldceq	0, cr0, [r0, #-0]
 2cc:	3a080300 	bcc	200ed4 <_Min_Stack_Size+0x200ad4>
 2d0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 2d4:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 2d8:	1100000a 	tstne	r0, sl
 2dc:	13490101 	movtne	r0, #37121	; 0x9101
 2e0:	00001301 	andeq	r1, r0, r1, lsl #6
 2e4:	49002112 	stmdbmi	r0, {r1, r4, r8, sp}
 2e8:	000b2f13 	andeq	r2, fp, r3, lsl pc
 2ec:	00211300 	eoreq	r1, r1, r0, lsl #6
 2f0:	052f1349 	streq	r1, [pc, #-841]!	; ffffffaf <BootRAM+0xef70750>
 2f4:	34140000 	ldrcc	r0, [r4], #-0
 2f8:	3a0e0300 	bcc	380f00 <_Min_Stack_Size+0x380b00>
 2fc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 300:	3f13490b 	svccc	0x0013490b
 304:	000c3c0c 	andeq	r3, ip, ip, lsl #24
 308:	00341500 	eorseq	r1, r4, r0, lsl #10
 30c:	0b3a0e03 	bleq	e83b20 <_Min_Stack_Size+0xe83720>
 310:	0b390b3b 	bleq	e43004 <_Min_Stack_Size+0xe42c04>
 314:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 1f8 <_Min_Heap_Size+0x1f8>
 318:	00000c3c 	andeq	r0, r0, ip, lsr ip
 31c:	0b011316 	bleq	44f7c <_Min_Stack_Size+0x44b7c>
 320:	3b0b3a0b 	blcc	2ceb54 <_Min_Stack_Size+0x2ce754>
 324:	010b3905 	tsteq	fp, r5, lsl #18
 328:	17000013 	smladne	r0, r3, r0, r0
 32c:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 330:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 334:	13490b39 	movtne	r0, #39737	; 0x9b39
 338:	00000a38 	andeq	r0, r0, r8, lsr sl
 33c:	03000d18 	movweq	r0, #3352	; 0xd18
 340:	3b0b3a08 	blcc	2ceb68 <_Min_Stack_Size+0x2ce768>
 344:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 348:	000a3813 	andeq	r3, sl, r3, lsl r8
 34c:	00161900 	andseq	r1, r6, r0, lsl #18
 350:	0b3a0e03 	bleq	e83b64 <_Min_Stack_Size+0xe83764>
 354:	0b39053b 	bleq	e41848 <_Min_Stack_Size+0xe41448>
 358:	00001349 	andeq	r1, r0, r9, asr #6
 35c:	03000d1a 	movweq	r0, #3354	; 0xd1a
 360:	3b0b3a0e 	blcc	2ceba0 <_Min_Stack_Size+0x2ce7a0>
 364:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 368:	0d0b0b13 	vstreq	d0, [fp, #-76]	; 0xffffffb4
 36c:	380b0c0b 	stmdacc	fp, {r0, r1, r3, sl, fp}
 370:	1b00000a 	blne	3a0 <_Min_Heap_Size+0x3a0>
 374:	0b0b0117 	bleq	2c07d8 <_Min_Stack_Size+0x2c03d8>
 378:	0b3b0b3a 	bleq	ec3068 <_Min_Stack_Size+0xec2c68>
 37c:	13010b39 	movwne	r0, #6969	; 0x1b39
 380:	0d1c0000 	ldceq	0, cr0, [ip, #-0]
 384:	3a0e0300 	bcc	380f8c <_Min_Stack_Size+0x380b8c>
 388:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 38c:	0013490b 	andseq	r4, r3, fp, lsl #18
 390:	000d1d00 	andeq	r1, sp, r0, lsl #26
 394:	00001349 	andeq	r1, r0, r9, asr #6
 398:	49000d1e 	stmdbmi	r0, {r1, r2, r3, r4, r8, sl, fp}
 39c:	000a3813 	andeq	r3, sl, r3, lsl r8
 3a0:	00341f00 	eorseq	r1, r4, r0, lsl #30
 3a4:	0b3a0e03 	bleq	e83bb8 <_Min_Stack_Size+0xe837b8>
 3a8:	0b390b3b 	bleq	e4309c <_Min_Stack_Size+0xe42c9c>
 3ac:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 290 <_Min_Heap_Size+0x290>
 3b0:	00000a02 	andeq	r0, r0, r2, lsl #20
 3b4:	03003420 	movweq	r3, #1056	; 0x420
 3b8:	3b0b3a0e 	blcc	2cebf8 <_Min_Stack_Size+0x2ce7f8>
 3bc:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 3c0:	000a0213 	andeq	r0, sl, r3, lsl r2
 3c4:	000d2100 	andeq	r2, sp, r0, lsl #2
 3c8:	0b3a0e03 	bleq	e83bdc <_Min_Stack_Size+0xe837dc>
 3cc:	0b39053b 	bleq	e418c0 <_Min_Stack_Size+0xe414c0>
 3d0:	0b0b1349 	bleq	2c50fc <_Min_Stack_Size+0x2c4cfc>
 3d4:	0b0c0b0d 	bleq	303010 <_Min_Stack_Size+0x302c10>
 3d8:	00000a38 	andeq	r0, r0, r8, lsr sl
 3dc:	0b011722 	bleq	4606c <_Min_Stack_Size+0x45c6c>
 3e0:	3b0b3a0b 	blcc	2cec14 <_Min_Stack_Size+0x2ce814>
 3e4:	010b3905 	tsteq	fp, r5, lsl #18
 3e8:	23000013 	movwcs	r0, #19
 3ec:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 3f0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 3f4:	13490b39 	movtne	r0, #39737	; 0x9b39
 3f8:	2e240000 	cdpcs	0, 2, cr0, cr4, cr0, {0}
 3fc:	030c3f01 	movweq	r3, #52993	; 0xcf01
 400:	3b0b3a0e 	blcc	2cec40 <_Min_Stack_Size+0x2ce840>
 404:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
 408:	1113490c 	tstne	r3, ip, lsl #18
 40c:	40011201 	andmi	r1, r1, r1, lsl #4
 410:	0c429706 	mcrreq	7, 0, r9, r2, cr6
 414:	00001301 	andeq	r1, r0, r1, lsl #6
 418:	03000525 	movweq	r0, #1317	; 0x525
 41c:	3b0b3a08 	blcc	2cec44 <_Min_Stack_Size+0x2ce844>
 420:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 424:	b7060213 	smladlt	r6, r3, r2, r0
 428:	00000642 	andeq	r0, r0, r2, asr #12
 42c:	03003426 	movweq	r3, #1062	; 0x426
 430:	3b0b3a0e 	blcc	2cec70 <_Min_Stack_Size+0x2ce870>
 434:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 438:	b7060213 	smladlt	r6, r3, r2, r0
 43c:	00000642 	andeq	r0, r0, r2, asr #12
 440:	03003427 	movweq	r3, #1063	; 0x427
 444:	3b0b3a08 	blcc	2cec6c <_Min_Stack_Size+0x2ce86c>
 448:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 44c:	b7060213 	smladlt	r6, r3, r2, r0
 450:	00000642 	andeq	r0, r0, r2, asr #12
 454:	55010b28 	strpl	r0, [r1, #-2856]	; 0xfffff4d8
 458:	29000006 	stmdbcs	r0, {r1, r2}
 45c:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 3ac <_Min_Heap_Size+0x3ac>
 460:	0b3a0e03 	bleq	e83c74 <_Min_Stack_Size+0xe83874>
 464:	0b39053b 	bleq	e41958 <_Min_Stack_Size+0xe41558>
 468:	01110c27 	tsteq	r1, r7, lsr #24
 46c:	06400112 			; <UNDEFINED> instruction: 0x06400112
 470:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
 474:	2a000013 	bcs	4c8 <_Min_Stack_Size+0xc8>
 478:	08030005 	stmdaeq	r3, {r0, r2}
 47c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 480:	13490b39 	movtne	r0, #39737	; 0x9b39
 484:	00000a02 	andeq	r0, r0, r2, lsl #20
 488:	0300052b 	movweq	r0, #1323	; 0x52b
 48c:	3b0b3a0e 	blcc	2ceccc <_Min_Stack_Size+0x2ce8cc>
 490:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 494:	000a0213 	andeq	r0, sl, r3, lsl r2
 498:	012e2c00 			; <UNDEFINED> instruction: 0x012e2c00
 49c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
 4a0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 4a4:	01110b39 	tsteq	r1, r9, lsr fp
 4a8:	06400112 			; <UNDEFINED> instruction: 0x06400112
 4ac:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
 4b0:	2d000013 	stccs	0, cr0, [r0, #-76]	; 0xffffffb4
 4b4:	0655010b 	ldrbeq	r0, [r5], -fp, lsl #2
 4b8:	00001301 	andeq	r1, r0, r1, lsl #6
 4bc:	11010b2e 	tstne	r1, lr, lsr #22
 4c0:	01011201 	tsteq	r1, r1, lsl #4
 4c4:	2f000013 	svccs	0x00000013
 4c8:	01018289 	smlabbeq	r1, r9, r2, r8
 4cc:	13010111 	movwne	r0, #4369	; 0x1111
 4d0:	8a300000 	bhi	c004d8 <_Min_Stack_Size+0xc000d8>
 4d4:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
 4d8:	0a42910a 	beq	10a4908 <_Min_Stack_Size+0x10a4508>
 4dc:	89310000 	ldmdbhi	r1!, {}	; <UNPREDICTABLE>
 4e0:	11010182 	smlabbne	r1, r2, r1, r0
 4e4:	32000001 	andcc	r0, r0, #1
 4e8:	00018289 	andeq	r8, r1, r9, lsl #5
 4ec:	13310111 	teqne	r1, #1073741828	; 0x40000004
 4f0:	89330000 	ldmdbhi	r3!, {}	; <UNPREDICTABLE>
 4f4:	11010182 	smlabbne	r1, r2, r1, r0
 4f8:	01133101 	tsteq	r3, r1, lsl #2
 4fc:	34000013 	strcc	r0, [r0], #-19	; 0xffffffed
 500:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 450 <_Min_Stack_Size+0x50>
 504:	0b3a0e03 	bleq	e83d18 <_Min_Stack_Size+0xe83918>
 508:	0b390b3b 	bleq	e431fc <_Min_Stack_Size+0xe42dfc>
 50c:	01110c27 	tsteq	r1, r7, lsr #24
 510:	06400112 			; <UNDEFINED> instruction: 0x06400112
 514:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
 518:	35000013 	strcc	r0, [r0, #-19]	; 0xffffffed
 51c:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
 520:	0b3b0b3a 	bleq	ec3210 <_Min_Stack_Size+0xec2e10>
 524:	13490b39 	movtne	r0, #39737	; 0x9b39
 528:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
 52c:	36000006 	strcc	r0, [r0], -r6
 530:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
 534:	0b3b0b3a 	bleq	ec3224 <_Min_Stack_Size+0xec2e24>
 538:	13490b39 	movtne	r0, #39737	; 0x9b39
 53c:	00000a02 	andeq	r0, r0, r2, lsl #20
 540:	03003437 	movweq	r3, #1079	; 0x437
 544:	3b0b3a0e 	blcc	2ced84 <_Min_Stack_Size+0x2ce984>
 548:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 54c:	b7060213 	smladlt	r6, r3, r2, r0
 550:	00000642 	andeq	r0, r0, r2, asr #12
 554:	03003438 	movweq	r3, #1080	; 0x438
 558:	3b0b3a08 	blcc	2ced80 <_Min_Stack_Size+0x2ce980>
 55c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 560:	b7060213 	smladlt	r6, r3, r2, r0
 564:	00000642 	andeq	r0, r0, r2, asr #12
 568:	03012e39 	movweq	r2, #7737	; 0x1e39
 56c:	3b0b3a0e 	blcc	2cedac <_Min_Stack_Size+0x2ce9ac>
 570:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 574:	1201110c 	andne	r1, r1, #12, 2
 578:	97064001 	strls	r4, [r6, -r1]
 57c:	13010c42 	movwne	r0, #7234	; 0x1c42
 580:	893a0000 	ldmdbhi	sl!, {}	; <UNPREDICTABLE>
 584:	11010182 	smlabbne	r1, r2, r1, r0
 588:	00133101 	andseq	r3, r3, r1, lsl #2
 58c:	011d3b00 	tsteq	sp, r0, lsl #22
 590:	01521331 	cmpeq	r2, r1, lsr r3
 594:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
 598:	58011201 	stmdapl	r1, {r0, r9, ip}
 59c:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
 5a0:	0013010b 	andseq	r0, r3, fp, lsl #2
 5a4:	00053c00 	andeq	r3, r5, r0, lsl #24
 5a8:	06021331 			; <UNDEFINED> instruction: 0x06021331
 5ac:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
 5b0:	011d3d00 	tsteq	sp, r0, lsl #26
 5b4:	01521331 	cmpeq	r2, r1, lsr r3
 5b8:	550b42b8 	strpl	r4, [fp, #-696]	; 0xfffffd48
 5bc:	590b5806 	stmdbpl	fp, {r1, r2, fp, ip, lr}
 5c0:	010b570b 	tsteq	fp, fp, lsl #14
 5c4:	3e000013 	mcrcc	0, 0, r0, cr0, cr3, {0}
 5c8:	0b0b000f 	bleq	2c060c <_Min_Stack_Size+0x2c020c>
 5cc:	263f0000 	ldrtcs	r0, [pc], -r0
 5d0:	40000000 	andmi	r0, r0, r0
 5d4:	0e03012e 	adfeqsp	f0, f3, #0.5
 5d8:	0b3b0b3a 	bleq	ec32c8 <_Min_Stack_Size+0xec2ec8>
 5dc:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
 5e0:	13010b20 	movwne	r0, #6944	; 0x1b20
 5e4:	05410000 	strbeq	r0, [r1, #-0]
 5e8:	3a080300 	bcc	2011f0 <_Min_Stack_Size+0x200df0>
 5ec:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 5f0:	0013490b 	andseq	r4, r3, fp, lsl #18
 5f4:	00054200 	andeq	r4, r5, r0, lsl #4
 5f8:	0b3a0e03 	bleq	e83e0c <_Min_Stack_Size+0xe83a0c>
 5fc:	0b390b3b 	bleq	e432f0 <_Min_Stack_Size+0xe42ef0>
 600:	00001349 	andeq	r1, r0, r9, asr #6
 604:	31011d43 	tstcc	r1, r3, asr #26
 608:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
 60c:	06550b42 	ldrbeq	r0, [r5], -r2, asr #22
 610:	0b590b58 	bleq	1643378 <_Min_Stack_Size+0x1642f78>
 614:	00000b57 	andeq	r0, r0, r7, asr fp
 618:	3f012e44 	svccc	0x00012e44
 61c:	3a0e030c 	bcc	381254 <_Min_Stack_Size+0x380e54>
 620:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 624:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
 628:	970a4001 	strls	r4, [sl, -r1]
 62c:	13010c42 	movwne	r0, #7234	; 0x1c42
 630:	1d450000 	stclne	0, cr0, [r5, #-0]
 634:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
 638:	0b42b801 	bleq	10ae644 <_Min_Stack_Size+0x10ae244>
 63c:	01120111 	tsteq	r2, r1, lsl r1
 640:	0b590b58 	bleq	16433a8 <_Min_Stack_Size+0x1642fa8>
 644:	00000b57 	andeq	r0, r0, r7, asr fp
 648:	3f012e46 	svccc	0x00012e46
 64c:	3a0e030c 	bcc	381284 <_Min_Stack_Size+0x380e84>
 650:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 654:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
 658:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
 65c:	970a4001 	strls	r4, [sl, -r1]
 660:	13010c42 	movwne	r0, #7234	; 0x1c42
 664:	05470000 	strbeq	r0, [r7, #-0]
 668:	3a080300 	bcc	201270 <_Min_Stack_Size+0x200e70>
 66c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 670:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 674:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
 678:	2e480000 	cdpcs	0, 4, cr0, cr8, cr0, {0}
 67c:	030c3f00 	movweq	r3, #52992	; 0xcf00
 680:	3b0b3a0e 	blcc	2ceec0 <_Min_Stack_Size+0x2ceac0>
 684:	000b390b 	andeq	r3, fp, fp, lsl #18
 688:	002e4900 	eoreq	r4, lr, r0, lsl #18
 68c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
 690:	0b3b0b3a 	bleq	ec3380 <_Min_Stack_Size+0xec2f80>
 694:	0b200b39 	bleq	803380 <_Min_Stack_Size+0x802f80>
 698:	2e4a0000 	cdpcs	0, 4, cr0, cr10, cr0, {0}
 69c:	3a0e0301 	bcc	3812a8 <_Min_Stack_Size+0x380ea8>
 6a0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 6a4:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
 6a8:	010b2013 	tsteq	fp, r3, lsl r0
 6ac:	4b000013 	blmi	700 <_Min_Stack_Size+0x300>
 6b0:	0e03012e 	adfeqsp	f0, f3, #0.5
 6b4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 6b8:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
 6bc:	13010b20 	movwne	r0, #6944	; 0x1b20
 6c0:	054c0000 	strbeq	r0, [ip, #-0]
 6c4:	3a0e0300 	bcc	3812cc <_Min_Stack_Size+0x380ecc>
 6c8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 6cc:	0013490b 	andseq	r4, r3, fp, lsl #18
 6d0:	002e4d00 	eoreq	r4, lr, r0, lsl #26
 6d4:	01111331 	tsteq	r1, r1, lsr r3
 6d8:	0a400112 	beq	1000b28 <_Min_Stack_Size+0x1000728>
 6dc:	000c4297 	muleq	ip, r7, r2
 6e0:	002e4e00 	eoreq	r4, lr, r0, lsl #28
 6e4:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
 6e8:	030e4087 	movweq	r4, #57479	; 0xe087
 6ec:	3b0b3a0e 	blcc	2cef2c <_Min_Stack_Size+0x2ceb2c>
 6f0:	000b390b 	andeq	r3, fp, fp, lsl #18
 6f4:	11010000 	mrsne	r0, (UNDEF: 1)
 6f8:	130e2501 	movwne	r2, #58625	; 0xe501
 6fc:	1b0e030b 	blne	381330 <_Min_Stack_Size+0x380f30>
 700:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
 704:	00061001 	andeq	r1, r6, r1
 708:	00240200 	eoreq	r0, r4, r0, lsl #4
 70c:	0b3e0b0b 	bleq	f83340 <_Min_Stack_Size+0xf82f40>
 710:	00000e03 	andeq	r0, r0, r3, lsl #28
 714:	03001603 	movweq	r1, #1539	; 0x603
 718:	3b0b3a0e 	blcc	2cef58 <_Min_Stack_Size+0x2ceb58>
 71c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 720:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
 724:	13490026 	movtne	r0, #36902	; 0x9026
 728:	35050000 	strcc	r0, [r5, #-0]
 72c:	00134900 	andseq	r4, r3, r0, lsl #18
 730:	00240600 	eoreq	r0, r4, r0, lsl #12
 734:	0b3e0b0b 	bleq	f83368 <_Min_Stack_Size+0xf82f68>
 738:	00000803 	andeq	r0, r0, r3, lsl #16
 73c:	0b011307 	bleq	45360 <_Min_Stack_Size+0x44f60>
 740:	3b0b3a0b 	blcc	2cef74 <_Min_Stack_Size+0x2ceb74>
 744:	010b390b 	tsteq	fp, fp, lsl #18
 748:	08000013 	stmdaeq	r0, {r0, r1, r4}
 74c:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 750:	0b3b0b3a 	bleq	ec3440 <_Min_Stack_Size+0xec3040>
 754:	13490b39 	movtne	r0, #39737	; 0x9b39
 758:	00000a38 	andeq	r0, r0, r8, lsr sl
 75c:	03003409 	movweq	r3, #1033	; 0x409
 760:	3b0b3a0e 	blcc	2cefa0 <_Min_Stack_Size+0x2ceba0>
 764:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 768:	3c0c3f13 	stccc	15, cr3, [ip], {19}
 76c:	0a00000c 	beq	7a4 <_Min_Stack_Size+0x3a4>
 770:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 774:	0b3b0b3a 	bleq	ec3464 <_Min_Stack_Size+0xec3064>
 778:	13490b39 	movtne	r0, #39737	; 0x9b39
 77c:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
 780:	130b0000 	movwne	r0, #45056	; 0xb000
 784:	3a0b0b01 	bcc	2c3390 <_Min_Stack_Size+0x2c2f90>
 788:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 78c:	0013010b 	andseq	r0, r3, fp, lsl #2
 790:	000d0c00 	andeq	r0, sp, r0, lsl #24
 794:	0b3a0e03 	bleq	e83fa8 <_Min_Stack_Size+0xe83ba8>
 798:	0b39053b 	bleq	e41c8c <_Min_Stack_Size+0xe4188c>
 79c:	0a381349 	beq	e054c8 <_Min_Stack_Size+0xe050c8>
 7a0:	0d0d0000 	stceq	0, cr0, [sp, #-0]
 7a4:	3a080300 	bcc	2013ac <_Min_Stack_Size+0x200fac>
 7a8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 7ac:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 7b0:	0e00000a 	cdpeq	0, 0, cr0, cr0, cr10, {0}
 7b4:	13490101 	movtne	r0, #37121	; 0x9101
 7b8:	00001301 	andeq	r1, r0, r1, lsl #6
 7bc:	4900210f 	stmdbmi	r0, {r0, r1, r2, r3, r8, sp}
 7c0:	000b2f13 	andeq	r2, fp, r3, lsl pc
 7c4:	00161000 	andseq	r1, r6, r0
 7c8:	0b3a0e03 	bleq	e83fdc <_Min_Stack_Size+0xe83bdc>
 7cc:	0b39053b 	bleq	e41cc0 <_Min_Stack_Size+0xe418c0>
 7d0:	00001349 	andeq	r1, r0, r9, asr #6
 7d4:	0b011711 	bleq	46420 <_Min_Stack_Size+0x46020>
 7d8:	3b0b3a0b 	blcc	2cf00c <_Min_Stack_Size+0x2cec0c>
 7dc:	010b390b 	tsteq	fp, fp, lsl #18
 7e0:	12000013 	andne	r0, r0, #19
 7e4:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 7e8:	0b3b0b3a 	bleq	ec34d8 <_Min_Stack_Size+0xec30d8>
 7ec:	13490b39 	movtne	r0, #39737	; 0x9b39
 7f0:	0f130000 	svceq	0x00130000
 7f4:	000b0b00 	andeq	r0, fp, r0, lsl #22
 7f8:	01131400 	tsteq	r3, r0, lsl #8
 7fc:	0b0b0e03 	bleq	2c4010 <_Min_Stack_Size+0x2c3c10>
 800:	0b3b0b3a 	bleq	ec34f0 <_Min_Stack_Size+0xec30f0>
 804:	13010b39 	movwne	r0, #6969	; 0x1b39
 808:	0d150000 	ldceq	0, cr0, [r5, #-0]
 80c:	3a080300 	bcc	201414 <_Min_Stack_Size+0x201014>
 810:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 814:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 818:	1600000a 	strne	r0, [r0], -sl
 81c:	0b0b000f 	bleq	2c0860 <_Min_Stack_Size+0x2c0460>
 820:	00001349 	andeq	r1, r0, r9, asr #6
 824:	03011317 	movweq	r1, #4887	; 0x1317
 828:	3a050b0e 	bcc	143468 <_Min_Stack_Size+0x143068>
 82c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 830:	0013010b 	andseq	r0, r3, fp, lsl #2
 834:	00151800 	andseq	r1, r5, r0, lsl #16
 838:	00000c27 	andeq	r0, r0, r7, lsr #24
 83c:	27011519 	smladcs	r1, r9, r5, r1
 840:	0113490c 	tsteq	r3, ip, lsl #18
 844:	1a000013 	bne	898 <_Min_Stack_Size+0x498>
 848:	13490005 	movtne	r0, #36869	; 0x9005
 84c:	131b0000 	tstne	fp, #0
 850:	0b0e0301 	bleq	38145c <_Min_Stack_Size+0x38105c>
 854:	3b0b3a05 	blcc	2cf070 <_Min_Stack_Size+0x2cec70>
 858:	010b3905 	tsteq	fp, r5, lsl #18
 85c:	1c000013 	stcne	0, cr0, [r0], {19}
 860:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
 864:	0b3a0b0b 	bleq	e83498 <_Min_Stack_Size+0xe83098>
 868:	0b39053b 	bleq	e41d5c <_Min_Stack_Size+0xe4195c>
 86c:	00001301 	andeq	r1, r0, r1, lsl #6
 870:	0b01171d 	bleq	464ec <_Min_Stack_Size+0x460ec>
 874:	3b0b3a0b 	blcc	2cf0a8 <_Min_Stack_Size+0x2ceca8>
 878:	010b3905 	tsteq	fp, r5, lsl #18
 87c:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
 880:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 884:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 888:	13490b39 	movtne	r0, #39737	; 0x9b39
 88c:	131f0000 	tstne	pc, #0
 890:	3c0e0300 	stccc	3, cr0, [lr], {-0}
 894:	2000000c 	andcs	r0, r0, ip
 898:	0c270115 	stfeqs	f0, [r7], #-84	; 0xffffffac
 89c:	00001301 	andeq	r1, r0, r1, lsl #6
 8a0:	03003421 	movweq	r3, #1057	; 0x421
 8a4:	3b0b3a0e 	blcc	2cf0e4 <_Min_Stack_Size+0x2cece4>
 8a8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 8ac:	000a0213 	andeq	r0, sl, r3, lsl r2
 8b0:	000d2200 	andeq	r2, sp, r0, lsl #4
 8b4:	0b3a0e03 	bleq	e840c8 <_Min_Stack_Size+0xe83cc8>
 8b8:	0b390b3b 	bleq	e435ac <_Min_Stack_Size+0xe431ac>
 8bc:	0b0b1349 	bleq	2c55e8 <_Min_Stack_Size+0x2c51e8>
 8c0:	0b0c0b0d 	bleq	3034fc <_Min_Stack_Size+0x3030fc>
 8c4:	00000a38 	andeq	r0, r0, r8, lsr sl
 8c8:	49000d23 	stmdbmi	r0, {r0, r1, r5, r8, sl, fp}
 8cc:	24000013 	strcs	r0, [r0], #-19	; 0xffffffed
 8d0:	1349000d 	movtne	r0, #36877	; 0x900d
 8d4:	00000a38 	andeq	r0, r0, r8, lsr sl
 8d8:	03003425 	movweq	r3, #1061	; 0x425
 8dc:	3b0b3a0e 	blcc	2cf11c <_Min_Stack_Size+0x2ced1c>
 8e0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 8e4:	020c3f13 	andeq	r3, ip, #19, 30	; 0x4c
 8e8:	2600000a 	strcs	r0, [r0], -sl
 8ec:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 8f0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 8f4:	13490b39 	movtne	r0, #39737	; 0x9b39
 8f8:	0b0d0b0b 	bleq	34352c <_Min_Stack_Size+0x34312c>
 8fc:	0a380b0c 	beq	e03534 <_Min_Stack_Size+0xe03134>
 900:	34270000 	strtcc	r0, [r7], #-0
 904:	3a0e0300 	bcc	38150c <_Min_Stack_Size+0x38110c>
 908:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 90c:	3f13490b 	svccc	0x0013490b
 910:	000a020c 	andeq	r0, sl, ip, lsl #4
 914:	012e2800 			; <UNDEFINED> instruction: 0x012e2800
 918:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
 91c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 920:	01110b39 	tsteq	r1, r9, lsr fp
 924:	06400112 			; <UNDEFINED> instruction: 0x06400112
 928:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
 92c:	29000013 	stmdbcs	r0, {r0, r1, r4}
 930:	1331011d 	teqne	r1, #1073741831	; 0x40000007
 934:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
 938:	5806550b 	stmdapl	r6, {r0, r1, r3, r8, sl, ip, lr}
 93c:	5705590b 	strpl	r5, [r5, -fp, lsl #18]
 940:	0013010b 	andseq	r0, r3, fp, lsl #2
 944:	00052a00 	andeq	r2, r5, r0, lsl #20
 948:	06021331 			; <UNDEFINED> instruction: 0x06021331
 94c:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
 950:	82892b00 	addhi	r2, r9, #0, 22
 954:	01110101 	tsteq	r1, r1, lsl #2
 958:	00001331 	andeq	r1, r0, r1, lsr r3
 95c:	01828a2c 	orreq	r8, r2, ip, lsr #20
 960:	910a0200 	mrsls	r0, R10_fiq
 964:	00000a42 	andeq	r0, r0, r2, asr #20
 968:	0182892d 	orreq	r8, r2, sp, lsr #18
 96c:	95011101 	strls	r1, [r1, #-257]	; 0xfffffeff
 970:	13310c42 	teqne	r1, #16896	; 0x4200
 974:	892e0000 	stmdbhi	lr!, {}	; <UNPREDICTABLE>
 978:	11010182 	smlabbne	r1, r2, r1, r0
 97c:	01133101 	tsteq	r3, r1, lsl #2
 980:	2f000013 	svccs	0x00000013
 984:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 8d4 <_Min_Stack_Size+0x4d4>
 988:	0b3a0e03 	bleq	e8419c <_Min_Stack_Size+0xe83d9c>
 98c:	0b39053b 	bleq	e41e80 <_Min_Stack_Size+0xe41a80>
 990:	01110c27 	tsteq	r1, r7, lsr #24
 994:	0a400112 	beq	1000de4 <_Min_Stack_Size+0x10009e4>
 998:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
 99c:	30000013 	andcc	r0, r0, r3, lsl r0
 9a0:	08030005 	stmdaeq	r3, {r0, r2}
 9a4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 9a8:	13490b39 	movtne	r0, #39737	; 0x9b39
 9ac:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
 9b0:	31000006 	tstcc	r0, r6
 9b4:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 904 <_Min_Stack_Size+0x504>
 9b8:	0b3a0e03 	bleq	e841cc <_Min_Stack_Size+0xe83dcc>
 9bc:	0b390b3b 	bleq	e436b0 <_Min_Stack_Size+0xe432b0>
 9c0:	01120111 	tsteq	r2, r1, lsl r1
 9c4:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
 9c8:	0013010c 	andseq	r0, r3, ip, lsl #2
 9cc:	012e3200 			; <UNDEFINED> instruction: 0x012e3200
 9d0:	0b3a0e03 	bleq	e841e4 <_Min_Stack_Size+0xe83de4>
 9d4:	0b390b3b 	bleq	e436c8 <_Min_Stack_Size+0xe432c8>
 9d8:	01110c27 	tsteq	r1, r7, lsr #24
 9dc:	06400112 			; <UNDEFINED> instruction: 0x06400112
 9e0:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
 9e4:	33000013 	movwcc	r0, #19
 9e8:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
 9ec:	0b3b0b3a 	bleq	ec36dc <_Min_Stack_Size+0xec32dc>
 9f0:	13490b39 	movtne	r0, #39737	; 0x9b39
 9f4:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
 9f8:	34000006 	strcc	r0, [r0], #-6
 9fc:	08030034 	stmdaeq	r3, {r2, r4, r5}
 a00:	0b3b0b3a 	bleq	ec36f0 <_Min_Stack_Size+0xec32f0>
 a04:	13490b39 	movtne	r0, #39737	; 0x9b39
 a08:	00000a02 	andeq	r0, r0, r2, lsl #20
 a0c:	31011d35 	tstcc	r1, r5, lsr sp
 a10:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
 a14:	01110b42 	tsteq	r1, r2, asr #22
 a18:	0b580112 	bleq	1600e68 <_Min_Stack_Size+0x1600a68>
 a1c:	0b570b59 	bleq	15c3788 <_Min_Stack_Size+0x15c3388>
 a20:	2e360000 	cdpcs	0, 3, cr0, cr6, cr0, {0}
 a24:	3a0e0301 	bcc	381630 <_Min_Stack_Size+0x381230>
 a28:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 a2c:	110c270b 	tstne	ip, fp, lsl #14
 a30:	40011201 	andmi	r1, r1, r1, lsl #4
 a34:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
 a38:	00001301 	andeq	r1, r0, r1, lsl #6
 a3c:	03000537 	movweq	r0, #1335	; 0x537
 a40:	3b0b3a0e 	blcc	2cf280 <_Min_Stack_Size+0x2cee80>
 a44:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 a48:	000a0213 	andeq	r0, sl, r3, lsl r2
 a4c:	012e3800 			; <UNDEFINED> instruction: 0x012e3800
 a50:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
 a54:	0b3b0b3a 	bleq	ec3744 <_Min_Stack_Size+0xec3344>
 a58:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
 a5c:	01111349 	tsteq	r1, r9, asr #6
 a60:	0a400112 	beq	1000eb0 <_Min_Stack_Size+0x1000ab0>
 a64:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
 a68:	39000013 	stmdbcc	r0, {r0, r1, r4}
 a6c:	08030005 	stmdaeq	r3, {r0, r2}
 a70:	0b3b0b3a 	bleq	ec3760 <_Min_Stack_Size+0xec3360>
 a74:	13490b39 	movtne	r0, #39737	; 0x9b39
 a78:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
 a7c:	3a000006 	bcc	a9c <_Min_Stack_Size+0x69c>
 a80:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 9d0 <_Min_Stack_Size+0x5d0>
 a84:	0b3a0e03 	bleq	e84298 <_Min_Stack_Size+0xe83e98>
 a88:	0b390b3b 	bleq	e4377c <_Min_Stack_Size+0xe4337c>
 a8c:	01110c27 	tsteq	r1, r7, lsr #24
 a90:	0a400112 	beq	1000ee0 <_Min_Stack_Size+0x1000ae0>
 a94:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
 a98:	3b000013 	blcc	aec <_Min_Stack_Size+0x6ec>
 a9c:	00000026 	andeq	r0, r0, r6, lsr #32
 aa0:	03012e3c 	movweq	r2, #7740	; 0x1e3c
 aa4:	3b0b3a0e 	blcc	2cf2e4 <_Min_Stack_Size+0x2ceee4>
 aa8:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 aac:	2013490c 	andscs	r4, r3, ip, lsl #18
 ab0:	0013010b 	andseq	r0, r3, fp, lsl #2
 ab4:	00053d00 	andeq	r3, r5, r0, lsl #26
 ab8:	0b3a0e03 	bleq	e842cc <_Min_Stack_Size+0xe83ecc>
 abc:	0b390b3b 	bleq	e437b0 <_Min_Stack_Size+0xe433b0>
 ac0:	00001349 	andeq	r1, r0, r9, asr #6
 ac4:	0300053e 	movweq	r0, #1342	; 0x53e
 ac8:	3b0b3a08 	blcc	2cf2f0 <_Min_Stack_Size+0x2ceef0>
 acc:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 ad0:	3f000013 	svccc	0x00000013
 ad4:	0e03012e 	adfeqsp	f0, f3, #0.5
 ad8:	0b3b0b3a 	bleq	ec37c8 <_Min_Stack_Size+0xec33c8>
 adc:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
 ae0:	13010b20 	movwne	r0, #6944	; 0x1b20
 ae4:	2e400000 	cdpcs	0, 4, cr0, cr0, cr0, {0}
 ae8:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
 aec:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
 af0:	0b3a0e03 	bleq	e84304 <_Min_Stack_Size+0xe83f04>
 af4:	0b390b3b 	bleq	e437e8 <_Min_Stack_Size+0xe433e8>
 af8:	01000000 	mrseq	r0, (UNDEF: 0)
 afc:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
 b00:	0e030b13 	vmoveq.32	d3[0], r0
 b04:	01110e1b 	tsteq	r1, fp, lsl lr
 b08:	17100612 			; <UNDEFINED> instruction: 0x17100612
 b0c:	24020000 	strcs	r0, [r2], #-0
 b10:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 b14:	000e030b 	andeq	r0, lr, fp, lsl #6
 b18:	00240300 	eoreq	r0, r4, r0, lsl #6
 b1c:	0b3e0b0b 	bleq	f83750 <_Min_Stack_Size+0xf83350>
 b20:	00000803 	andeq	r0, r0, r3, lsl #16
 b24:	03001604 	movweq	r1, #1540	; 0x604
 b28:	3b0b3a0e 	blcc	2cf368 <_Min_Stack_Size+0x2cef68>
 b2c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 b30:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
 b34:	13490101 	movtne	r0, #37121	; 0x9101
 b38:	00001301 	andeq	r1, r0, r1, lsl #6
 b3c:	00002106 	andeq	r2, r0, r6, lsl #2
 b40:	000f0700 	andeq	r0, pc, r0, lsl #14
 b44:	13490b0b 	movtne	r0, #39691	; 0x9b0b
 b48:	15080000 	strne	r0, [r8, #-0]
 b4c:	00192700 	andseq	r2, r9, r0, lsl #14
 b50:	00340900 	eorseq	r0, r4, r0, lsl #18
 b54:	0b3a0e03 	bleq	e84368 <_Min_Stack_Size+0xe83f68>
 b58:	0b390b3b 	bleq	e4384c <_Min_Stack_Size+0xe4344c>
 b5c:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
 b60:	0000193c 	andeq	r1, r0, ip, lsr r9
 b64:	3f012e0a 	svccc	0x00012e0a
 b68:	3a0e0319 	bcc	3817d4 <_Min_Stack_Size+0x3813d4>
 b6c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 b70:	1119270b 	tstne	r9, fp, lsl #14
 b74:	40061201 	andmi	r1, r6, r1, lsl #4
 b78:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
 b7c:	00001301 	andeq	r1, r0, r1, lsl #6
 b80:	0300340b 	movweq	r3, #1035	; 0x40b
 b84:	3b0b3a0e 	blcc	2cf3c4 <_Min_Stack_Size+0x2cefc4>
 b88:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 b8c:	b7170213 			; <UNDEFINED> instruction: 0xb7170213
 b90:	00001742 	andeq	r1, r0, r2, asr #14
 b94:	0300340c 	movweq	r3, #1036	; 0x40c
 b98:	3b0b3a08 	blcc	2cf3c0 <_Min_Stack_Size+0x2cefc0>
 b9c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 ba0:	b7170213 			; <UNDEFINED> instruction: 0xb7170213
 ba4:	00001742 	andeq	r1, r0, r2, asr #14
 ba8:	0182890d 	orreq	r8, r2, sp, lsl #18
 bac:	31011100 	mrscc	r1, (UNDEF: 17)
 bb0:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
 bb4:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
 bb8:	0e6e193c 			; <UNDEFINED> instruction: 0x0e6e193c
 bbc:	0b3a0e03 	bleq	e843d0 <_Min_Stack_Size+0xe83fd0>
 bc0:	0b390b3b 	bleq	e438b4 <_Min_Stack_Size+0xe434b4>
 bc4:	Address 0x0000000000000bc4 is out of bounds.


Disassembly of section .debug_loc:

00000000 <.debug_loc>:
       0:	08000bd8 	stmdaeq	r0, {r3, r4, r6, r7, r8, r9, fp}
       4:	08000bda 	stmdaeq	r0, {r1, r3, r4, r6, r7, r8, r9, fp}
       8:	007d0002 	rsbseq	r0, sp, r2
       c:	08000bda 	stmdaeq	r0, {r1, r3, r4, r6, r7, r8, r9, fp}
      10:	08000c5c 	stmdaeq	r0, {r2, r3, r4, r6, sl, fp}
      14:	087d0002 	ldmdaeq	sp!, {r1}^
	...
      20:	00010100 	andeq	r0, r1, r0, lsl #2
      24:	00000000 	andeq	r0, r0, r0
      28:	08000bee 	stmdaeq	r0, {r1, r2, r3, r5, r6, r7, r8, r9, fp}
      2c:	08000bfa 	stmdaeq	r0, {r1, r3, r4, r5, r6, r7, r8, r9, fp}
      30:	fa520001 	blx	148003c <_Min_Stack_Size+0x147fc3c>
      34:	fe08000b 	cdp2	0, 0, cr0, cr8, cr11, {0}
      38:	0808000b 	stmdaeq	r8, {r0, r1, r3}
      3c:	11007200 	mrsne	r7, R8_usr
      40:	1a4fffff 	bne	1400044 <_Min_Stack_Size+0x13ffc44>
      44:	000bfe9f 	muleq	fp, pc, lr	; <UNPREDICTABLE>
      48:	000c0208 	andeq	r0, ip, r8, lsl #4
      4c:	52000108 	andpl	r0, r0, #8, 2
      50:	08000c02 	stmdaeq	r0, {r1, sl, fp}
      54:	08000c0c 	stmdaeq	r0, {r2, r3, sl, fp}
      58:	08730002 	ldmdaeq	r3!, {r1}^
	...
      64:	00010100 	andeq	r0, r1, r0, lsl #2
      68:	00000000 	andeq	r0, r0, r0
      6c:	08000c02 	stmdaeq	r0, {r1, sl, fp}
      70:	08000c0e 	stmdaeq	r0, {r1, r2, r3, sl, fp}
      74:	0e520001 	cdpeq	0, 5, cr0, cr2, cr1, {0}
      78:	1208000c 	andne	r0, r8, #12
      7c:	0808000c 	stmdaeq	r8, {r2, r3}
      80:	11007200 	mrsne	r7, R8_usr
      84:	1a73ffff 	bne	1d00088 <_Min_Stack_Size+0x1cffc88>
      88:	000c129f 	muleq	ip, pc, r2	; <UNPREDICTABLE>
      8c:	000c1608 	andeq	r1, ip, r8, lsl #12
      90:	52000108 	andpl	r0, r0, #8, 2
      94:	08000c16 	stmdaeq	r0, {r1, r2, r4, sl, fp}
      98:	08000c1e 	stmdaeq	r0, {r1, r2, r3, r4, sl, fp}
      9c:	08730002 	ldmdaeq	r3!, {r1}^
	...
      a8:	00010100 	andeq	r0, r1, r0, lsl #2
      ac:	0c180000 	ldceq	0, cr0, [r8], {-0}
      b0:	0c200800 	stceq	8, cr0, [r0], #-0
      b4:	00010800 	andeq	r0, r1, r0, lsl #16
      b8:	000c2051 	andeq	r2, ip, r1, asr r0
      bc:	000c2408 	andeq	r2, ip, r8, lsl #8
      c0:	71000a08 	tstvc	r0, r8, lsl #20
      c4:	ffff1100 			; <UNDEFINED> instruction: 0xffff1100
      c8:	1a7f9fff 	bne	1fe80cc <_Min_Stack_Size+0x1fe7ccc>
      cc:	000c249f 	muleq	ip, pc, r4	; <UNPREDICTABLE>
      d0:	000c3908 	andeq	r3, ip, r8, lsl #18
      d4:	51000108 	tstpl	r0, r8, lsl #2
	...
      e0:	00010100 	andeq	r0, r1, r0, lsl #2
      e4:	0c280000 	stceq	0, cr0, [r8], #-0
      e8:	0c300800 	ldceq	8, cr0, [r0], #-0
      ec:	00010800 	andeq	r0, r1, r0, lsl #16
      f0:	000c3052 	andeq	r3, ip, r2, asr r0
      f4:	000c3408 	andeq	r3, ip, r8, lsl #8
      f8:	72000708 	andvc	r0, r0, #8, 14	; 0x200000
      fc:	f3ff0b00 	vtbl.8	d16, {d15-d18}, d0
     100:	0c349f1a 	ldceq	15, cr9, [r4], #-104	; 0xffffff98
     104:	0c390800 	ldceq	8, cr0, [r9], #-0
     108:	00010800 	andeq	r0, r1, r0, lsl #16
     10c:	00000052 	andeq	r0, r0, r2, asr r0
     110:	00000000 	andeq	r0, r0, r0
     114:	02020000 	andeq	r0, r2, #0
     118:	58000000 	stmdapl	r0, {}	; <UNPREDICTABLE>
     11c:	58080003 	stmdapl	r8, {r0, r1}
     120:	01080003 	tsteq	r8, r3
     124:	03585000 	cmpeq	r8, #0
     128:	035c0800 	cmpeq	ip, #0, 16
     12c:	00010800 	andeq	r0, r1, r0, lsl #16
     130:	00035c50 	andeq	r5, r3, r0, asr ip
     134:	00036408 	andeq	r6, r3, r8, lsl #8
     138:	70000308 	andvc	r0, r0, r8, lsl #6
     13c:	00009f01 	andeq	r9, r0, r1, lsl #30
     140:	00000000 	andeq	r0, r0, r0
     144:	00010000 	andeq	r0, r1, r0
     148:	00000000 	andeq	r0, r0, r0
     14c:	03160000 	tsteq	r6, #0
     150:	031a0800 	tsteq	sl, #0, 16
     154:	00020800 	andeq	r0, r2, r0, lsl #16
     158:	031a9f30 	tsteq	sl, #48, 30	; 0xc0
     15c:	03220800 			; <UNDEFINED> instruction: 0x03220800
     160:	00070800 	andeq	r0, r7, r0, lsl #16
     164:	720fff0a 	andvc	pc, pc, #10, 30	; 0x28
     168:	229f1c00 	addscs	r1, pc, #0, 24
     16c:	24080003 	strcs	r0, [r8], #-3
     170:	07080003 	streq	r0, [r8, -r3]
     174:	10000a00 	andne	r0, r0, r0, lsl #20
     178:	9f1c0072 	svcls	0x001c0072
     17c:	0800032c 	stmdaeq	r0, {r2, r3, r5, r8, r9}
     180:	08000354 	stmdaeq	r0, {r2, r4, r6, r8, r9}
     184:	ff0a0004 			; <UNDEFINED> instruction: 0xff0a0004
     188:	00009f1f 	andeq	r9, r0, pc, lsl pc
	...
     194:	03100000 	tsteq	r0, #0
     198:	031a0800 	tsteq	sl, #0, 16
     19c:	00010800 	andeq	r0, r1, r0, lsl #16
     1a0:	00031a52 	andeq	r1, r3, r2, asr sl
     1a4:	00033408 	andeq	r3, r3, r8, lsl #8
     1a8:	73000208 	movwvc	r0, #520	; 0x208
     1ac:	00000008 	andeq	r0, r0, r8
	...
     1bc:	0001e800 	andeq	lr, r1, r0, lsl #16
     1c0:	00020a08 	andeq	r0, r2, r8, lsl #20
     1c4:	50000108 	andpl	r0, r0, r8, lsl #2
     1c8:	0800020a 	stmdaeq	r0, {r1, r3, r9}
     1cc:	0800028e 	stmdaeq	r0, {r1, r2, r3, r7, r9}
     1d0:	01f30004 	mvnseq	r0, r4
     1d4:	028e9f50 	addeq	r9, lr, #80, 30	; 0x140
     1d8:	02ea0800 	rsceq	r0, sl, #0, 16
     1dc:	00010800 	andeq	r0, r1, r0, lsl #16
     1e0:	0002ea50 	andeq	lr, r2, r0, asr sl
     1e4:	00030c08 	andeq	r0, r3, r8, lsl #24
     1e8:	f3000408 	vshl.u8	d0, d8, d0
     1ec:	009f5001 	addseq	r5, pc, r1
     1f0:	00000000 	andeq	r0, r0, r0
     1f4:	01000000 	mrseq	r0, (UNDEF: 0)
     1f8:	00000000 	andeq	r0, r0, r0
     1fc:	01000000 	mrseq	r0, (UNDEF: 0)
     200:	00000000 	andeq	r0, r0, r0
     204:	01010000 	mrseq	r0, (UNDEF: 1)
     208:	00000000 	andeq	r0, r0, r0
     20c:	01010000 	mrseq	r0, (UNDEF: 1)
     210:	00000000 	andeq	r0, r0, r0
     214:	00000100 	andeq	r0, r0, r0, lsl #2
     218:	f2000000 	vhadd.s8	d0, d0, d0
     21c:	f6080001 			; <UNDEFINED> instruction: 0xf6080001
     220:	02080001 	andeq	r0, r8, #1
     224:	f69f3000 			; <UNDEFINED> instruction: 0xf69f3000
     228:	fe080001 	cdp2	0, 0, cr0, cr8, cr1, {0}
     22c:	07080001 	streq	r0, [r8, -r1]
     230:	0fff0a00 	svceq	0x00ff0a00
     234:	9f1c0072 	svcls	0x001c0072
     238:	080001fe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, r8}
     23c:	08000200 	stmdaeq	r0, {r9}
     240:	000a0007 	andeq	r0, sl, r7
     244:	1c007210 	sfmne	f7, 4, [r0], {16}
     248:	00020c9f 	muleq	r2, pc, ip	; <UNPREDICTABLE>
     24c:	00020e08 	andeq	r0, r2, r8, lsl #28
     250:	0a000708 	beq	1e78 <_Min_Stack_Size+0x1a78>
     254:	00730fff 	ldrshteq	r0, [r3], #-255	; 0xffffff01
     258:	02449f1c 	subeq	r9, r4, #28, 30	; 0x70
     25c:	024a0800 	subeq	r0, sl, #0, 16
     260:	00020800 	andeq	r0, r2, r0, lsl #16
     264:	024a9f30 	subeq	r9, sl, #48, 30	; 0xc0
     268:	02500800 	subseq	r0, r0, #0, 16
     26c:	00070800 	andeq	r0, r7, r0, lsl #16
     270:	730fff0a 	movwvc	pc, #65290	; 0xff0a	; <UNPREDICTABLE>
     274:	509f1c00 	addspl	r1, pc, r0, lsl #24
     278:	52080002 	andpl	r0, r8, #2
     27c:	07080002 	streq	r0, [r8, -r2]
     280:	10000a00 	andne	r0, r0, r0, lsl #20
     284:	9f1c0073 	svcls	0x001c0073
     288:	08000264 	stmdaeq	r0, {r2, r5, r6, r9}
     28c:	08000276 	stmdaeq	r0, {r1, r2, r4, r5, r6, r9}
     290:	ff0a0004 			; <UNDEFINED> instruction: 0xff0a0004
     294:	02769f1f 	rsbseq	r9, r6, #31, 30	; 0x7c
     298:	027a0800 	rsbseq	r0, sl, #0, 16
     29c:	00020800 	andeq	r0, r2, r0, lsl #16
     2a0:	027a9f30 	rsbseq	r9, sl, #48, 30	; 0xc0
     2a4:	02840800 	addeq	r0, r4, #0, 16
     2a8:	00070800 	andeq	r0, r7, r0, lsl #16
     2ac:	730fff0a 	movwvc	pc, #65290	; 0xff0a	; <UNPREDICTABLE>
     2b0:	849f1c00 	ldrhi	r1, [pc], #3072	; 2b8 <_Min_Heap_Size+0x2b8>
     2b4:	86080002 	strhi	r0, [r8], -r2
     2b8:	07080002 	streq	r0, [r8, -r2]
     2bc:	10000a00 	andne	r0, r0, r0, lsl #20
     2c0:	9f1c0073 	svcls	0x001c0073
     2c4:	0800028e 	stmdaeq	r0, {r1, r2, r3, r7, r9}
     2c8:	080002c8 	stmdaeq	r0, {r3, r6, r7, r9}
     2cc:	ff0a0004 			; <UNDEFINED> instruction: 0xff0a0004
     2d0:	02c89f1f 	sbceq	r9, r8, #31, 30	; 0x7c
     2d4:	02ce0800 	sbceq	r0, lr, #0, 16
     2d8:	00020800 	andeq	r0, r2, r0, lsl #16
     2dc:	02ce9f30 	sbceq	r9, lr, #48, 30	; 0xc0
     2e0:	02d40800 	sbcseq	r0, r4, #0, 16
     2e4:	00070800 	andeq	r0, r7, r0, lsl #16
     2e8:	730fff0a 	movwvc	pc, #65290	; 0xff0a	; <UNPREDICTABLE>
     2ec:	d49f1c00 	ldrle	r1, [pc], #3072	; 2f4 <_Min_Heap_Size+0x2f4>
     2f0:	d6080002 	strle	r0, [r8], -r2
     2f4:	07080002 	streq	r0, [r8, -r2]
     2f8:	10000a00 	andne	r0, r0, r0, lsl #20
     2fc:	9f1c0073 	svcls	0x001c0073
     300:	080002e6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r9}
     304:	080002ea 	stmdaeq	r0, {r1, r3, r5, r6, r7, r9}
     308:	9f300002 	svcls	0x00300002
     30c:	080002ea 	stmdaeq	r0, {r1, r3, r5, r6, r7, r9}
     310:	080002f0 	stmdaeq	r0, {r4, r5, r6, r7, r9}
     314:	ff0a0007 			; <UNDEFINED> instruction: 0xff0a0007
     318:	1c00730f 	stcne	3, cr7, [r0], {15}
     31c:	0002f09f 	muleq	r2, pc, r0	; <UNPREDICTABLE>
     320:	0002f208 	andeq	pc, r2, r8, lsl #4
     324:	0a000708 	beq	1f4c <_Min_Stack_Size+0x1b4c>
     328:	00731000 	rsbseq	r1, r3, r0
     32c:	00009f1c 	andeq	r9, r0, ip, lsl pc
	...
     338:	01000000 	mrseq	r0, (UNDEF: 0)
     33c:	00020201 	andeq	r0, r2, r1, lsl #4
     340:	03010100 	movweq	r0, #4352	; 0x1100
     344:	00000003 	andeq	r0, r0, r3
     348:	00010100 	andeq	r0, r1, r0, lsl #2
     34c:	00000000 	andeq	r0, r0, r0
     350:	00010100 	andeq	r0, r1, r0, lsl #2
     354:	00000000 	andeq	r0, r0, r0
     358:	01ec0000 	mvneq	r0, r0
     35c:	01f60800 	mvnseq	r0, r0, lsl #16
     360:	00010800 	andeq	r0, r1, r0, lsl #16
     364:	0001f652 	andeq	pc, r1, r2, asr r6	; <UNPREDICTABLE>
     368:	00020c08 	andeq	r0, r2, r8, lsl #24
     36c:	73000208 	movwvc	r0, #520	; 0x208
     370:	00022c08 	andeq	r2, r2, r8, lsl #24
     374:	00023208 	andeq	r3, r2, r8, lsl #4
     378:	53000108 	movwpl	r0, #264	; 0x108
     37c:	08000232 	stmdaeq	r0, {r1, r4, r5, r9}
     380:	08000232 	stmdaeq	r0, {r1, r4, r5, r9}
     384:	00730007 	rsbseq	r0, r3, r7
     388:	21243c40 			; <UNDEFINED> instruction: 0x21243c40
     38c:	0002329f 	muleq	r2, pc, r2	; <UNPREDICTABLE>
     390:	00023608 	andeq	r3, r2, r8, lsl #12
     394:	73000708 	movwvc	r0, #1800	; 0x708
     398:	24404100 	strbcs	r4, [r0], #-256	; 0xffffff00
     39c:	02369f21 	eorseq	r9, r6, #33, 30	; 0x84
     3a0:	02360800 	eorseq	r0, r6, #0, 16
     3a4:	00010800 	andeq	r0, r1, r0, lsl #16
     3a8:	00023653 	andeq	r3, r2, r3, asr r6
     3ac:	00023608 	andeq	r3, r2, r8, lsl #12
     3b0:	73000708 	movwvc	r0, #1800	; 0x708
     3b4:	ff0f0b00 			; <UNDEFINED> instruction: 0xff0f0b00
     3b8:	02369f1a 	eorseq	r9, r6, #26, 30	; 0x68
     3bc:	023a0800 	eorseq	r0, sl, #0, 16
     3c0:	00070800 	andeq	r0, r7, r0, lsl #16
     3c4:	0f0b0073 	svceq	0x000b0073
     3c8:	3a9f1ac7 	bcc	fe7c6eec <BootRAM+0xd73768d>
     3cc:	4a080002 	bmi	2003dc <_Min_Stack_Size+0x1fffdc>
     3d0:	01080002 	tsteq	r8, r2
     3d4:	025e5100 	subseq	r5, lr, #0, 2
     3d8:	025e0800 	subseq	r0, lr, #0, 16
     3dc:	00010800 	andeq	r0, r1, r0, lsl #16
     3e0:	00025e53 	andeq	r5, r2, r3, asr lr
     3e4:	00026208 	andeq	r6, r2, r8, lsl #4
     3e8:	73000708 	movwvc	r0, #1800	; 0x708
     3ec:	243f4000 	ldrtcs	r4, [pc], #-0	; 3f4 <_Min_Heap_Size+0x3f4>
     3f0:	02629f21 	rsbeq	r9, r2, #33, 30	; 0x84
     3f4:	02640800 	rsbeq	r0, r4, #0, 16
     3f8:	00010800 	andeq	r0, r1, r0, lsl #16
     3fc:	00026453 	andeq	r6, r2, r3, asr r4
     400:	00026c08 	andeq	r6, r2, r8, lsl #24
     404:	71000208 	tstvc	r0, r8, lsl #4
     408:	00026e08 	andeq	r6, r2, r8, lsl #28
     40c:	00026e08 	andeq	r6, r2, r8, lsl #28
     410:	53000108 	movwpl	r0, #264	; 0x108
     414:	0800026e 	stmdaeq	r0, {r1, r2, r3, r5, r6, r9}
     418:	08000274 	stmdaeq	r0, {r2, r4, r5, r6, r9}
     41c:	00730006 	rsbseq	r0, r3, r6
     420:	9f1afc09 	svcls	0x001afc09
     424:	08000274 	stmdaeq	r0, {r2, r4, r5, r6, r9}
     428:	0800027a 	stmdaeq	r0, {r1, r3, r4, r5, r6, r9}
     42c:	7a530001 	bvc	14c0438 <_Min_Stack_Size+0x14c0038>
     430:	8e080002 	cdphi	0, 0, cr0, cr8, cr2, {0}
     434:	02080002 	andeq	r0, r8, #2
     438:	8e087100 	adfhie	f7, f0, f0
     43c:	96080002 	strls	r0, [r8], -r2
     440:	02080002 	andeq	r0, r8, #2
     444:	00087300 	andeq	r7, r8, r0, lsl #6
     448:	00000000 	andeq	r0, r0, r0
     44c:	ac000000 	stcge	0, cr0, [r0], {-0}
     450:	ae000004 	cdpge	0, 0, cr0, cr0, cr4, {0}
     454:	02000004 	andeq	r0, r0, #4
     458:	ae007d00 	cdpge	13, 0, cr7, cr0, cr0, {0}
     45c:	06000004 	streq	r0, [r0], -r4
     460:	02000005 	andeq	r0, r0, #5
     464:	000c7d00 	andeq	r7, ip, r0, lsl #26
	...
     470:	ac000000 	stcge	0, cr0, [r0], {-0}
     474:	bc000004 	stclt	0, cr0, [r0], {4}
     478:	01000004 	tsteq	r0, r4
     47c:	04bc5000 	ldrteq	r5, [ip], #0
     480:	05060000 	streq	r0, [r6, #-0]
     484:	00040000 	andeq	r0, r4, r0
     488:	9f5001f3 	svcls	0x005001f3
	...
     498:	04ac0000 	strteq	r0, [ip], #0
     49c:	04d40000 	ldrbeq	r0, [r4], #0
     4a0:	00010000 	andeq	r0, r1, r0
     4a4:	0004d451 	andeq	sp, r4, r1, asr r4
     4a8:	0004d800 	andeq	sp, r4, r0, lsl #16
     4ac:	71000300 	mrsvc	r0, LR_irq
     4b0:	04d89f02 	ldrbeq	r9, [r8], #3842	; 0xf02
     4b4:	05060000 	streq	r0, [r6, #-0]
     4b8:	00040000 	andeq	r0, r4, r0
     4bc:	9f5101f3 	svcls	0x005101f3
	...
     4cc:	000004b8 			; <UNDEFINED> instruction: 0x000004b8
     4d0:	000004c4 	andeq	r0, r0, r4, asr #9
     4d4:	c4520001 	ldrbgt	r0, [r2], #-1
     4d8:	e6000004 	str	r0, [r0], -r4
     4dc:	0b000004 	bleq	4f4 <_Min_Stack_Size+0xf4>
     4e0:	33007300 	movwcc	r7, #768	; 0x300
     4e4:	c0802324 	addgt	r2, r0, r4, lsr #6
     4e8:	9f048081 	svcls	0x00048081
	...
     4f4:	04c00000 	strbeq	r0, [r0], #0
     4f8:	05060000 	streq	r0, [r6, #-0]
     4fc:	00010000 	andeq	r0, r1, r0
     500:	00000050 	andeq	r0, r0, r0, asr r0
     504:	00000000 	andeq	r0, r0, r0
     508:	00000100 	andeq	r0, r0, r0, lsl #2
     50c:	c2010000 	andgt	r0, r1, #0
     510:	d2000004 	andle	r0, r0, #4
     514:	05000004 	streq	r0, [r0, #-4]
     518:	31017000 	mrscc	r7, (UNDEF: 1)
     51c:	04d29f26 	ldrbeq	r9, [r2], #3878	; 0xf26
     520:	04d80000 	ldrbeq	r0, [r8], #0
     524:	00010000 	andeq	r0, r1, r0
     528:	0004d854 	andeq	sp, r4, r4, asr r8
     52c:	00050400 	andeq	r0, r5, r0, lsl #8
     530:	70000500 	andvc	r0, r0, r0, lsl #10
     534:	9f263101 	svcls	0x00263101
	...
     544:	04d00000 	ldrbeq	r0, [r0], #0
     548:	04dc0000 	ldrbeq	r0, [ip], #0
     54c:	00010000 	andeq	r0, r1, r0
     550:	0004dc52 	andeq	sp, r4, r2, asr ip
     554:	0004e200 	andeq	lr, r4, r0, lsl #4
     558:	72000300 	andvc	r0, r0, #0, 6
     55c:	04e29f7c 	strbteq	r9, [r2], #3964	; 0xf7c
     560:	04f20000 	ldrbteq	r0, [r2], #0
     564:	00010000 	andeq	r0, r1, r0
     568:	00000052 	andeq	r0, r0, r2, asr r0
     56c:	00000000 	andeq	r0, r0, r0
     570:	d0000200 	andle	r0, r0, r0, lsl #4
     574:	d8000004 	stmdale	r0, {r2}
     578:	02000004 	andeq	r0, r0, #4
     57c:	009f3000 	addseq	r3, pc, r0
     580:	00000000 	andeq	r0, r0, r0
     584:	fc000000 	stc2	0, cr0, [r0], {-0}
     588:	fe000003 	cdp2	0, 0, cr0, cr0, cr3, {0}
     58c:	02000003 	andeq	r0, r0, #3
     590:	fe007d00 	vdot.bf16	d7, d0, d0[0]
     594:	50000003 	andpl	r0, r0, r3
     598:	02000004 	andeq	r0, r0, #4
     59c:	00147d00 	andseq	r7, r4, r0, lsl #26
	...
     5ac:	0003fc00 	andeq	pc, r3, r0, lsl #24
     5b0:	00042200 	andeq	r2, r4, r0, lsl #4
     5b4:	50000100 	andpl	r0, r0, r0, lsl #2
     5b8:	00000422 	andeq	r0, r0, r2, lsr #8
     5bc:	00000444 	andeq	r0, r0, r4, asr #8
     5c0:	01f30004 	mvnseq	r0, r4
     5c4:	04449f50 	strbeq	r9, [r4], #-3920	; 0xfffff0b0
     5c8:	04500000 	ldrbeq	r0, [r0], #-0
     5cc:	00010000 	andeq	r0, r1, r0
     5d0:	00000050 	andeq	r0, r0, r0, asr r0
     5d4:	00000000 	andeq	r0, r0, r0
     5d8:	0a000000 	beq	5e0 <_Min_Stack_Size+0x1e0>
     5dc:	50000004 	andpl	r0, r0, r4
     5e0:	01000004 	tsteq	r0, r4
     5e4:	00005400 	andeq	r5, r0, r0, lsl #8
	...
     5f0:	00000418 	andeq	r0, r0, r8, lsl r4
     5f4:	00000450 	andeq	r0, r0, r0, asr r4
     5f8:	00560001 	subseq	r0, r6, r1
     5fc:	00000000 	andeq	r0, r0, r0
     600:	01000000 	mrseq	r0, (UNDEF: 0)
     604:	00041800 	andeq	r1, r4, r0, lsl #16
     608:	00045000 	andeq	r5, r4, r0
     60c:	51000100 	mrspl	r0, (UNDEF: 16)
	...
     618:	00020200 	andeq	r0, r2, r0, lsl #4
     61c:	041a0000 	ldreq	r0, [sl], #-0
     620:	041a0000 	ldreq	r0, [sl], #-0
     624:	00010000 	andeq	r0, r1, r0
     628:	00041a53 	andeq	r1, r4, r3, asr sl
     62c:	00043000 	andeq	r3, r4, r0
     630:	75000800 	strvc	r0, [r0, #-2048]	; 0xfffff800
     634:	73243200 			; <UNDEFINED> instruction: 0x73243200
     638:	449f2200 	ldrmi	r2, [pc], #512	; 640 <_Min_Stack_Size+0x240>
     63c:	4c000004 	stcmi	0, cr0, [r0], {4}
     640:	08000004 	stmdaeq	r0, {r2}
     644:	32007500 	andcc	r7, r0, #0, 10
     648:	22007324 	andcs	r7, r0, #36, 6	; 0x90000000
     64c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     650:	00000000 	andeq	r0, r0, r0
     654:	00000200 	andeq	r0, r0, r0, lsl #4
     658:	00041a00 	andeq	r1, r4, r0, lsl #20
     65c:	00044c00 	andeq	r4, r4, r0, lsl #24
     660:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
     664:	0000044c 	andeq	r0, r0, ip, asr #8
     668:	0000044e 	andeq	r0, r0, lr, asr #8
     66c:	01750003 	cmneq	r5, r3
     670:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     674:	00000000 	andeq	r0, r0, r0
     678:	0002d400 	andeq	sp, r2, r0, lsl #8
     67c:	0002d600 	andeq	sp, r2, r0, lsl #12
     680:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     684:	0002d600 	andeq	sp, r2, r0, lsl #12
     688:	0003fc00 	andeq	pc, r3, r0, lsl #24
     68c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     690:	00000010 	andeq	r0, r0, r0, lsl r0
     694:	00000000 	andeq	r0, r0, r0
     698:	00000200 	andeq	r0, r0, r0, lsl #4
     69c:	0002fc00 	andeq	pc, r2, r0, lsl #24
     6a0:	00030000 	andeq	r0, r3, r0
     6a4:	30000200 	andcc	r0, r0, r0, lsl #4
     6a8:	0003009f 	muleq	r3, pc, r0	; <UNPREDICTABLE>
     6ac:	00030200 	andeq	r0, r3, r0, lsl #4
     6b0:	38000500 	stmdacc	r0, {r8, sl}
     6b4:	9f1c0074 	svcls	0x001c0074
	...
     6c0:	034c0000 	movteq	r0, #49152	; 0xc000
     6c4:	03980000 	orrseq	r0, r8, #0
     6c8:	00010000 	andeq	r0, r1, r0
     6cc:	00000055 	andeq	r0, r0, r5, asr r0
     6d0:	00000000 	andeq	r0, r0, r0
     6d4:	00018800 	andeq	r8, r1, r0, lsl #16
     6d8:	00018a00 	andeq	r8, r1, r0, lsl #20
     6dc:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     6e0:	00018a00 	andeq	r8, r1, r0, lsl #20
     6e4:	0002d400 	andeq	sp, r2, r0, lsl #8
     6e8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     6ec:	00000014 	andeq	r0, r0, r4, lsl r0
	...
     6f8:	00018800 	andeq	r8, r1, r0, lsl #16
     6fc:	00019200 	andeq	r9, r1, r0, lsl #4
     700:	50000100 	andpl	r0, r0, r0, lsl #2
     704:	00000192 	muleq	r0, r2, r1
     708:	000002d4 	ldrdeq	r0, [r0], -r4
     70c:	00560001 	subseq	r0, r6, r1
	...
     724:	88000000 	stmdahi	r0, {}	; <UNPREDICTABLE>
     728:	de000001 	cdple	0, 0, cr0, cr0, cr1, {0}
     72c:	01000001 	tsteq	r0, r1
     730:	01de5100 	bicseq	r5, lr, r0, lsl #2
     734:	01e40000 	mvneq	r0, r0
     738:	00040000 	andeq	r0, r4, r0
     73c:	9f5101f3 	svcls	0x005101f3
     740:	000001e4 	andeq	r0, r0, r4, ror #3
     744:	000001e8 	andeq	r0, r0, r8, ror #3
     748:	e8510001 	ldmda	r1, {r0}^
     74c:	48000001 	stmdami	r0, {r0}
     750:	04000002 	streq	r0, [r0], #-2
     754:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
     758:	0002489f 	muleq	r2, pc, r8	; <UNPREDICTABLE>
     75c:	00024c00 	andeq	r4, r2, r0, lsl #24
     760:	51000100 	mrspl	r0, (UNDEF: 16)
     764:	0000024c 	andeq	r0, r0, ip, asr #4
     768:	0000024e 	andeq	r0, r0, lr, asr #4
     76c:	01f30004 	mvnseq	r0, r4
     770:	024e9f51 	subeq	r9, lr, #324	; 0x144
     774:	02520000 	subseq	r0, r2, #0
     778:	00010000 	andeq	r0, r1, r0
     77c:	00025251 	andeq	r5, r2, r1, asr r2
     780:	0002d400 	andeq	sp, r2, r0, lsl #8
     784:	f3000400 	vshl.u8	d0, d0, d0
     788:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
     798:	00018800 	andeq	r8, r1, r0, lsl #16
     79c:	00023a00 	andeq	r3, r2, r0, lsl #20
     7a0:	52000100 	andpl	r0, r0, #0, 2
     7a4:	0000023a 	andeq	r0, r0, sl, lsr r2
     7a8:	00000248 	andeq	r0, r0, r8, asr #4
     7ac:	01f30004 	mvnseq	r0, r4
     7b0:	02489f52 	subeq	r9, r8, #328	; 0x148
     7b4:	02d40000 	sbcseq	r0, r4, #0
     7b8:	00010000 	andeq	r0, r1, r0
     7bc:	00000052 	andeq	r0, r0, r2, asr r0
     7c0:	00000000 	andeq	r0, r0, r0
     7c4:	00000200 	andeq	r0, r0, r0, lsl #4
     7c8:	00000000 	andeq	r0, r0, r0
     7cc:	00018800 	andeq	r8, r1, r0, lsl #16
     7d0:	00020600 	andeq	r0, r2, r0, lsl #12
     7d4:	70000600 	andvc	r0, r0, r0, lsl #12
     7d8:	1a800900 	bne	fe002be0 <BootRAM+0xcf73381>
     7dc:	0002069f 	muleq	r2, pc, r6	; <UNPREDICTABLE>
     7e0:	00024800 	andeq	r4, r2, r0, lsl #16
     7e4:	f3000700 	vabd.u8	d0, d0, d0
     7e8:	80095001 	andhi	r5, r9, r1
     7ec:	02489f1a 	subeq	r9, r8, #26, 30	; 0x68
     7f0:	02540000 	subseq	r0, r4, #0
     7f4:	00060000 	andeq	r0, r6, r0
     7f8:	80090070 	andhi	r0, r9, r0, ror r0
     7fc:	02549f1a 	subseq	r9, r4, #26, 30	; 0x68
     800:	02d40000 	sbcseq	r0, r4, #0
     804:	00070000 	andeq	r0, r7, r0
     808:	095001f3 	ldmdbeq	r0, {r0, r1, r4, r5, r6, r7, r8}^
     80c:	009f1a80 	addseq	r1, pc, r0, lsl #21
	...
     818:	02020101 	andeq	r0, r2, #1073741824	; 0x40000000
	...
     828:	c8000000 	stmdagt	r0, {}	; <UNPREDICTABLE>
     82c:	c8000001 	stmdagt	r0, {r0}
     830:	01000001 	tsteq	r0, r1
     834:	01c85400 	biceq	r5, r8, r0, lsl #8
     838:	01c80000 	biceq	r0, r8, r0
     83c:	000b0000 	andeq	r0, fp, r0
     840:	0f0a0074 	svceq	0x000a0074
     844:	800b1a0f 	andhi	r1, fp, pc, lsl #20
     848:	c89f2180 	ldmgt	pc, {r7, r8, sp}	; <UNPREDICTABLE>
     84c:	cc000001 	stcgt	0, cr0, [r0], {1}
     850:	11000001 	tstne	r0, r1
     854:	0a007400 	beq	1d85c <_Min_Stack_Size+0x1d45c>
     858:	761a0f00 	ldrvc	r0, [sl], -r0, lsl #30
     85c:	1aff0800 	bne	fffc2864 <BootRAM+0xef33005>
     860:	80800b21 	addhi	r0, r0, r1, lsr #22
     864:	01d09f21 	bicseq	r9, r0, r1, lsr #30
     868:	01e20000 	mvneq	r0, r0
     86c:	00070000 	andeq	r0, r7, r0
     870:	800b0074 	andhi	r0, fp, r4, ror r0
     874:	e29f2180 	adds	r2, pc, #128, 2
     878:	e4000001 	str	r0, [r0], #-1
     87c:	01000001 	tsteq	r0, r1
     880:	01e45100 	mvneq	r5, r0, lsl #2
     884:	01e80000 	mvneq	r0, r0
     888:	00070000 	andeq	r0, r7, r0
     88c:	800b0074 	andhi	r0, fp, r4, ror r0
     890:	e89f2180 	ldm	pc, {r7, r8, sp}	; <UNPREDICTABLE>
     894:	f4000001 	vst4.8	{d0-d3}, [r0], r1
     898:	01000001 	tsteq	r0, r1
     89c:	01f45100 	mvnseq	r5, r0, lsl #2
     8a0:	020a0000 	andeq	r0, sl, #0
     8a4:	00020000 	andeq	r0, r2, r0
     8a8:	02480075 	subeq	r0, r8, #117	; 0x75
     8ac:	02540000 	subseq	r0, r4, #0
     8b0:	00070000 	andeq	r0, r7, r0
     8b4:	800b0074 	andhi	r0, fp, r4, ror r0
     8b8:	549f2180 	ldrpl	r2, [pc], #384	; 8c0 <_Min_Stack_Size+0x4c0>
     8bc:	56000002 	strpl	r0, [r0], -r2
     8c0:	02000002 	andeq	r0, r0, #2
     8c4:	00007500 	andeq	r7, r0, r0, lsl #10
     8c8:	00000000 	andeq	r0, r0, r0
     8cc:	7c000000 	stcvc	0, cr0, [r0], {-0}
     8d0:	7e000000 	cdpvc	0, 0, cr0, cr0, cr0, {0}
     8d4:	02000000 	andeq	r0, r0, #0
     8d8:	7e007d00 	cdpvc	13, 0, cr7, cr0, cr0, {0}
     8dc:	88000000 	stmdahi	r0, {}	; <UNPREDICTABLE>
     8e0:	02000001 	andeq	r0, r0, #1
     8e4:	00147d00 	andseq	r7, r4, r0, lsl #26
	...
     8f0:	7c000000 	stcvc	0, cr0, [r0], {-0}
     8f4:	82000000 	andhi	r0, r0, #0
     8f8:	01000000 	mrseq	r0, (UNDEF: 0)
     8fc:	00825000 	addeq	r5, r2, r0
     900:	01880000 	orreq	r0, r8, r0
     904:	00010000 	andeq	r0, r1, r0
     908:	00000057 	andeq	r0, r0, r7, asr r0
	...
     918:	00007c00 	andeq	r7, r0, r0, lsl #24
     91c:	00010200 	andeq	r0, r1, r0, lsl #4
     920:	51000100 	mrspl	r0, (UNDEF: 16)
     924:	00000102 	andeq	r0, r0, r2, lsl #2
     928:	00000128 	andeq	r0, r0, r8, lsr #2
     92c:	01f30004 	mvnseq	r0, r4
     930:	01289f51 			; <UNDEFINED> instruction: 0x01289f51
     934:	01380000 	teqeq	r8, r0
     938:	00010000 	andeq	r0, r1, r0
     93c:	00013851 	andeq	r3, r1, r1, asr r8
     940:	00018800 	andeq	r8, r1, r0, lsl #16
     944:	f3000400 	vshl.u8	d0, d0, d0
     948:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
     958:	00007c00 	andeq	r7, r0, r0, lsl #24
     95c:	00012200 	andeq	r2, r1, r0, lsl #4
     960:	52000100 	andpl	r0, r0, #0, 2
     964:	00000122 	andeq	r0, r0, r2, lsr #2
     968:	00000124 	andeq	r0, r0, r4, lsr #2
     96c:	01f30004 	mvnseq	r0, r4
     970:	01289f52 			; <UNDEFINED> instruction: 0x01289f52
     974:	01880000 	orreq	r0, r8, r0
     978:	00010000 	andeq	r0, r1, r0
     97c:	00000052 	andeq	r0, r0, r2, asr r0
	...
     98c:	7c000000 	stcvc	0, cr0, [r0], {-0}
     990:	0a000000 	beq	998 <_Min_Stack_Size+0x598>
     994:	01000001 	tsteq	r0, r1
     998:	010a5300 	mrseq	r5, (UNDEF: 58)
     99c:	01200000 			; <UNDEFINED> instruction: 0x01200000
     9a0:	00070000 	andeq	r0, r7, r0
     9a4:	24320077 	ldrtcs	r0, [r2], #-119	; 0xffffff89
     9a8:	20220074 	eorcs	r0, r2, r4, ror r0
     9ac:	28000001 	stmdacs	r0, {r0}
     9b0:	04000001 	streq	r0, [r0], #-1
     9b4:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
     9b8:	0001289f 	muleq	r1, pc, r8	; <UNPREDICTABLE>
     9bc:	00016800 	andeq	r6, r1, r0, lsl #16
     9c0:	53000100 	movwpl	r0, #256	; 0x100
     9c4:	00000168 	andeq	r0, r0, r8, ror #2
     9c8:	00000188 	andeq	r0, r0, r8, lsl #3
     9cc:	00770007 	rsbseq	r0, r7, r7
     9d0:	00712432 	rsbseq	r2, r1, r2, lsr r4
     9d4:	00000022 	andeq	r0, r0, r2, lsr #32
     9d8:	00000000 	andeq	r0, r0, r0
     9dc:	00000200 	andeq	r0, r0, r0, lsl #4
     9e0:	00000000 	andeq	r0, r0, r0
     9e4:	7c000000 	stcvc	0, cr0, [r0], {-0}
     9e8:	98000000 	stmdals	r0, {}	; <UNPREDICTABLE>
     9ec:	06000000 	streq	r0, [r0], -r0
     9f0:	09007000 	stmdbeq	r0, {ip, sp, lr}
     9f4:	989f1a80 	ldmls	pc, {r7, r9, fp, ip}	; <UNPREDICTABLE>
     9f8:	c6000000 	strgt	r0, [r0], -r0
     9fc:	06000000 	streq	r0, [r0], -r0
     a00:	09007c00 	stmdbeq	r0, {sl, fp, ip, sp, lr}
     a04:	c69f1a80 	ldrgt	r1, [pc], r0, lsl #21
     a08:	dc000000 	stcle	0, cr0, [r0], {-0}
     a0c:	06000000 	streq	r0, [r0], -r0
     a10:	09007000 	stmdbeq	r0, {ip, sp, lr}
     a14:	dc9f1a80 	vldmiale	pc, {s2-s129}
     a18:	20000000 	andcs	r0, r0, r0
     a1c:	06000001 	streq	r0, [r0], -r1
     a20:	09007c00 	stmdbeq	r0, {sl, fp, ip, sp, lr}
     a24:	209f1a80 	addscs	r1, pc, r0, lsl #21
     a28:	88000001 	stmdahi	r0, {r0}
     a2c:	07000001 	streq	r0, [r0, -r1]
     a30:	5001f300 	andpl	pc, r1, r0, lsl #6
     a34:	9f1a8009 	svcls	0x001a8009
	...
     a40:	02010100 	andeq	r0, r1, #0, 2
     a44:	00000002 	andeq	r0, r0, r2
     a48:	00000000 	andeq	r0, r0, r0
     a4c:	00ac0000 	adceq	r0, ip, r0
     a50:	00ac0000 	adceq	r0, ip, r0
     a54:	00010000 	andeq	r0, r1, r0
     a58:	0000ac54 	andeq	sl, r0, r4, asr ip
     a5c:	0000ac00 	andeq	sl, r0, r0, lsl #24
     a60:	74000b00 	strvc	r0, [r0], #-2816	; 0xfffff500
     a64:	0f0f0a00 	svceq	0x000f0a00
     a68:	80800b1a 	addhi	r0, r0, sl, lsl fp
     a6c:	00ac9f21 	adceq	r9, ip, r1, lsr #30
     a70:	00b20000 	adcseq	r0, r2, r0
     a74:	00110000 	andseq	r0, r1, r0
     a78:	000a0074 	andeq	r0, sl, r4, ror r0
     a7c:	00771a0f 	rsbseq	r1, r7, pc, lsl #20
     a80:	211aff08 	tstcs	sl, r8, lsl #30	; <UNPREDICTABLE>
     a84:	2180800b 	orrcs	r8, r0, fp
     a88:	0000b69f 	muleq	r0, pc, r6	; <UNPREDICTABLE>
     a8c:	0000c400 	andeq	ip, r0, r0, lsl #8
     a90:	74000700 	strvc	r0, [r0], #-1792	; 0xfffff900
     a94:	80800b00 	addhi	r0, r0, r0, lsl #22
     a98:	00dc9f21 	sbcseq	r9, ip, r1, lsr #30
     a9c:	00e00000 	rsceq	r0, r0, r0
     aa0:	00070000 	andeq	r0, r7, r0
     aa4:	800b0074 	andhi	r0, fp, r4, ror r0
     aa8:	289f2180 	ldmcs	pc, {r7, r8, sp}	; <UNPREDICTABLE>
     aac:	2c000001 	stccs	0, cr0, [r0], {1}
     ab0:	07000001 	streq	r0, [r0, -r1]
     ab4:	0b007400 	bleq	1dabc <_Min_Stack_Size+0x1d6bc>
     ab8:	9f218080 	svcls	0x00218080
     abc:	0000012e 	andeq	r0, r0, lr, lsr #2
     ac0:	00000132 	andeq	r0, r0, r2, lsr r1
     ac4:	00740007 	rsbseq	r0, r4, r7
     ac8:	2180800b 	orrcs	r8, r0, fp
     acc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     ad0:	00000000 	andeq	r0, r0, r0
     ad4:	00050600 	andeq	r0, r5, r0, lsl #12
     ad8:	00050800 	andeq	r0, r5, r0, lsl #16
     adc:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     ae0:	00050800 	andeq	r0, r5, r0, lsl #16
     ae4:	00059400 	andeq	r9, r5, r0, lsl #8
     ae8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     aec:	00059418 	andeq	r9, r5, r8, lsl r4
     af0:	00059600 	andeq	r9, r5, r0, lsl #12
     af4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     af8:	00059610 	andeq	r9, r5, r0, lsl r6
     afc:	00062000 	andeq	r2, r6, r0
     b00:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     b04:	00000018 	andeq	r0, r0, r8, lsl r0
	...
     b14:	00050600 	andeq	r0, r5, r0, lsl #12
     b18:	00052c00 	andeq	r2, r5, r0, lsl #24
     b1c:	50000100 	andpl	r0, r0, r0, lsl #2
     b20:	0000052c 	andeq	r0, r0, ip, lsr #10
     b24:	00000556 	andeq	r0, r0, r6, asr r5
     b28:	01f30004 	mvnseq	r0, r4
     b2c:	05569f50 	ldrbeq	r9, [r6, #-3920]	; 0xfffff0b0
     b30:	05600000 	strbeq	r0, [r0, #-0]!
     b34:	00010000 	andeq	r0, r1, r0
     b38:	00056050 	andeq	r6, r5, r0, asr r0
     b3c:	00062000 	andeq	r2, r6, r0
     b40:	f3000400 	vshl.u8	d0, d0, d0
     b44:	009f5001 	addseq	r5, pc, r1
     b48:	00000000 	andeq	r0, r0, r0
     b4c:	01000000 	mrseq	r0, (UNDEF: 0)
     b50:	00000000 	andeq	r0, r0, r0
     b54:	32000003 	andcc	r0, r0, #3
     b58:	50000005 	andpl	r0, r0, r5
     b5c:	01000005 	tsteq	r0, r5
     b60:	05605500 	strbeq	r5, [r0, #-1280]!	; 0xfffffb00
     b64:	05920000 	ldreq	r0, [r2]
     b68:	00010000 	andeq	r0, r1, r0
     b6c:	00059655 	andeq	r9, r5, r5, asr r6
     b70:	0005c200 	andeq	ip, r5, r0, lsl #4
     b74:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
     b78:	000005ca 	andeq	r0, r0, sl, asr #11
     b7c:	000005fa 	strdeq	r0, [r0], -sl
     b80:	00550001 	subseq	r0, r5, r1
     b84:	00000000 	andeq	r0, r0, r0
     b88:	01000000 	mrseq	r0, (UNDEF: 0)
     b8c:	00051800 	andeq	r1, r5, r0, lsl #16
     b90:	00052200 	andeq	r2, r5, r0, lsl #4
     b94:	73000b00 	movwvc	r0, #2816	; 0xb00
     b98:	08000a00 	stmdaeq	r0, {r9, fp}
     b9c:	3024401a 	eorcc	r4, r4, sl, lsl r0
     ba0:	00009f2e 	andeq	r9, r0, lr, lsr #30
	...
     bb0:	03000000 	movweq	r0, #0
     bb4:	05380000 	ldreq	r0, [r8, #-0]!
     bb8:	05500000 	ldrbeq	r0, [r0, #-0]
     bbc:	00010000 	andeq	r0, r1, r0
     bc0:	00056053 	andeq	r6, r5, r3, asr r0
     bc4:	00057300 	andeq	r7, r5, r0, lsl #6
     bc8:	53000100 	movwpl	r0, #256	; 0x100
     bcc:	00000596 	muleq	r0, r6, r5
     bd0:	000005a0 	andeq	r0, r0, r0, lsr #11
     bd4:	a0530001 	subsge	r0, r3, r1
     bd8:	b3000005 	movwlt	r0, #5
     bdc:	0b000005 	bleq	bf8 <_Min_Stack_Size+0x7f8>
     be0:	001c0300 	andseq	r0, ip, r0, lsl #6
     be4:	01942000 	orrseq	r2, r4, r0
     be8:	9f1a7f08 	svcls	0x001a7f08
     bec:	000005b6 			; <UNDEFINED> instruction: 0x000005b6
     bf0:	000005c2 	andeq	r0, r0, r2, asr #11
     bf4:	ca530001 	bgt	14c0c00 <_Min_Stack_Size+0x14c0800>
     bf8:	dd000005 	stcle	0, cr0, [r0, #-20]	; 0xffffffec
     bfc:	01000005 	tsteq	r0, r5
     c00:	00005300 	andeq	r5, r0, r0, lsl #6
     c04:	00000000 	andeq	r0, r0, r0
     c08:	00010000 	andeq	r0, r1, r0
     c0c:	0000054c 	andeq	r0, r0, ip, asr #10
     c10:	00000550 	andeq	r0, r0, r0, asr r5
     c14:	9f320002 	svcls	0x00320002
	...
     c20:	054c0001 	strbeq	r0, [ip, #-1]
     c24:	05500000 	ldrbeq	r0, [r0, #-0]
     c28:	00060000 	andeq	r0, r6, r0
     c2c:	000c5c03 	andeq	r5, ip, r3, lsl #24
     c30:	00009f08 	andeq	r9, r0, r8, lsl #30
     c34:	00000000 	andeq	r0, r0, r0
     c38:	00010000 	andeq	r0, r1, r0
     c3c:	0000054c 	andeq	r0, r0, ip, asr #10
     c40:	00000550 	andeq	r0, r0, r0, asr r5
     c44:	9f300002 	svcls	0x00300002
	...
     c50:	05840001 	streq	r0, [r4, #1]
     c54:	05910000 	ldreq	r0, [r1]
     c58:	00020000 	andeq	r0, r2, r0
     c5c:	00006a91 	muleq	r0, r1, sl
     c60:	00000000 	andeq	r0, r0, r0
     c64:	00010000 	andeq	r0, r1, r0
     c68:	00000584 	andeq	r0, r0, r4, lsl #11
     c6c:	00000591 	muleq	r0, r1, r5
     c70:	6c910002 	ldcvs	0, cr0, [r1], {2}
	...
     c7c:	05960001 	ldreq	r0, [r6, #1]
     c80:	059e0000 	ldreq	r0, [lr]
     c84:	00020000 	andeq	r0, r2, r0
     c88:	00009f31 	andeq	r9, r0, r1, lsr pc
     c8c:	00000000 	andeq	r0, r0, r0
     c90:	00010000 	andeq	r0, r1, r0
     c94:	00000596 	muleq	r0, r6, r5
     c98:	0000059e 	muleq	r0, lr, r5
     c9c:	26030006 	strcs	r0, [r3], -r6
     ca0:	9f200000 	svcls	0x00200000
	...
     cac:	05960001 	ldreq	r0, [r6, #1]
     cb0:	059e0000 	ldreq	r0, [lr]
     cb4:	00020000 	andeq	r0, r2, r0
     cb8:	00009f30 	andeq	r9, r0, r0, lsr pc
     cbc:	00000000 	andeq	r0, r0, r0
     cc0:	00020000 	andeq	r0, r2, r0
     cc4:	00000526 	andeq	r0, r0, r6, lsr #10
     cc8:	00000530 	andeq	r0, r0, r0, lsr r5
     ccc:	9f300002 	svcls	0x00300002
	...
     cd8:	05260002 	streq	r0, [r6, #-2]!
     cdc:	05300000 	ldreq	r0, [r0, #-0]!
     ce0:	00060000 	andeq	r0, r6, r0
     ce4:	00001c03 	andeq	r1, r0, r3, lsl #24
     ce8:	00009f20 	andeq	r9, r0, r0, lsr #30
     cec:	00000000 	andeq	r0, r0, r0
     cf0:	00050000 	andeq	r0, r5, r0
     cf4:	000005c2 	andeq	r0, r0, r2, asr #11
     cf8:	000005ca 	andeq	r0, r0, sl, asr #11
     cfc:	9f300002 	svcls	0x00300002
	...
     d08:	05c20301 	strbeq	r0, [r2, #769]	; 0x301
     d0c:	05c20000 	strbeq	r0, [r2]
     d10:	00020000 	andeq	r0, r2, r0
     d14:	00009f30 	andeq	r9, r0, r0, lsr pc
     d18:	00000000 	andeq	r0, r0, r0
     d1c:	00010000 	andeq	r0, r1, r0
     d20:	000005d2 	ldrdeq	r0, [r0], -r2
     d24:	000005d4 	ldrdeq	r0, [r0], -r4
     d28:	9f300002 	svcls	0x00300002
	...
     d34:	00000450 	andeq	r0, r0, r0, asr r4
     d38:	00000452 	andeq	r0, r0, r2, asr r4
     d3c:	007d0002 	rsbseq	r0, sp, r2
     d40:	00000452 	andeq	r0, r0, r2, asr r4
     d44:	000004ac 	andeq	r0, r0, ip, lsr #9
     d48:	187d0002 	ldmdane	sp!, {r1}^
	...
     d58:	00000450 	andeq	r0, r0, r0, asr r4
     d5c:	00000488 	andeq	r0, r0, r8, lsl #9
     d60:	88500001 	ldmdahi	r0, {r0}^
     d64:	ac000004 	stcge	0, cr0, [r0], {4}
     d68:	04000004 	streq	r0, [r0], #-4
     d6c:	5001f300 	andpl	pc, r1, r0, lsl #6
     d70:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     d7c:	00047c00 	andeq	r7, r4, r0, lsl #24
     d80:	00048600 	andeq	r8, r4, r0, lsl #12
     d84:	57000100 	strpl	r0, [r0, -r0, lsl #2]
     d88:	00000486 	andeq	r0, r0, r6, lsl #9
     d8c:	000004a0 	andeq	r0, r0, r0, lsr #9
     d90:	00560001 	subseq	r0, r6, r1
     d94:	00000000 	andeq	r0, r0, r0
     d98:	02000000 	andeq	r0, r0, #0
     d9c:	00048600 	andeq	r8, r4, r0, lsl #12
     da0:	00048e00 	andeq	r8, r4, r0, lsl #28
     da4:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
     db0:	04860002 	streq	r0, [r6], #2
     db4:	048e0000 	streq	r0, [lr], #0
     db8:	00010000 	andeq	r0, r1, r0
     dbc:	00000051 	andeq	r0, r0, r1, asr r0
     dc0:	00000000 	andeq	r0, r0, r0
     dc4:	86000200 	strhi	r0, [r0], -r0, lsl #4
     dc8:	8e000004 	cdphi	0, 0, cr0, cr0, cr4, {0}
     dcc:	02000004 	andeq	r0, r0, #4
     dd0:	009f3000 	addseq	r3, pc, r0
     dd4:	00000000 	andeq	r0, r0, r0
     dd8:	02000000 	andeq	r0, r0, #0
     ddc:	00000000 	andeq	r0, r0, r0
     de0:	32000000 	andcc	r0, r0, #0
     de4:	34000000 	strcc	r0, [r0], #-0
     de8:	02000000 	andeq	r0, r0, #0
     dec:	349f3000 	ldrcc	r3, [pc], #0	; df4 <_Min_Stack_Size+0x9f4>
     df0:	36000000 	strcc	r0, [r0], -r0
     df4:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
     df8:	86a00c00 	strthi	r0, [r0], r0, lsl #24
     dfc:	00720001 	rsbseq	r0, r2, r1
     e00:	00369f1c 	eorseq	r9, r6, ip, lsl pc
     e04:	00380000 	eorseq	r0, r8, r0
     e08:	00090000 	andeq	r0, r9, r0
     e0c:	0186a10c 	orreq	sl, r6, ip, lsl #2
     e10:	1c007200 	sfmne	f7, 4, [r0], {-0}
     e14:	0000389f 	muleq	r0, pc, r8	; <UNPREDICTABLE>
     e18:	00004e00 	andeq	r4, r0, r0, lsl #28
     e1c:	0c000900 			; <UNDEFINED> instruction: 0x0c000900
     e20:	000186a0 	andeq	r8, r1, r0, lsr #13
     e24:	9f1c0072 	svcls	0x001c0072
	...
     e30:	00520001 	subseq	r0, r2, r1
     e34:	005a0000 	subseq	r0, sl, r0
     e38:	00020000 	andeq	r0, r2, r0
     e3c:	00009f44 	andeq	r9, r0, r4, asr #30
	...
     e48:	000a0000 	andeq	r0, sl, r0
     e4c:	000c0000 	andeq	r0, ip, r0
     e50:	00010000 	andeq	r0, r1, r0
     e54:	00000c50 	andeq	r0, r0, r0, asr ip
     e58:	00000e00 	andeq	r0, r0, r0, lsl #28
     e5c:	f3000400 	vshl.u8	d0, d0, d0
     e60:	009f5001 	addseq	r5, pc, r1
	...
     e6c:	06000000 	streq	r0, [r0], -r0
     e70:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     e74:	01000000 	mrseq	r0, (UNDEF: 0)
     e78:	00085000 	andeq	r5, r8, r0
     e7c:	000a0000 	andeq	r0, sl, r0
     e80:	00040000 	andeq	r0, r4, r0
     e84:	9f5001f3 	svcls	0x005001f3
	...
     e90:	00000112 	andeq	r0, r0, r2, lsl r1
     e94:	00000116 	andeq	r0, r0, r6, lsl r1
     e98:	007d0002 	rsbseq	r0, sp, r2
     e9c:	00000116 	andeq	r0, r0, r6, lsl r1
     ea0:	000001a8 	andeq	r0, r0, r8, lsr #3
     ea4:	087d0002 	ldmdaeq	sp!, {r1}^
     ea8:	000001a8 	andeq	r0, r0, r8, lsr #3
     eac:	000001ae 	andeq	r0, r0, lr, lsr #3
     eb0:	007d0002 	rsbseq	r0, sp, r2
     eb4:	000001ae 	andeq	r0, r0, lr, lsr #3
     eb8:	000001c0 	andeq	r0, r0, r0, asr #3
     ebc:	087d0002 	ldmdaeq	sp!, {r1}^
	...
     ec8:	01440001 	cmpeq	r4, r1
     ecc:	01480000 	mrseq	r0, (UNDEF: 72)
     ed0:	00020000 	andeq	r0, r2, r0
     ed4:	00009f36 	andeq	r9, r0, r6, lsr pc
     ed8:	00000000 	andeq	r0, r0, r0
     edc:	00010000 	andeq	r0, r1, r0
     ee0:	00000144 	andeq	r0, r0, r4, asr #2
     ee4:	00000148 	andeq	r0, r0, r8, asr #2
     ee8:	02030006 	andeq	r0, r3, #6
     eec:	9f200000 	svcls	0x00200000
	...
     ef8:	01440001 	cmpeq	r4, r1
     efc:	01480000 	mrseq	r0, (UNDEF: 72)
     f00:	00030000 	andeq	r0, r3, r0
     f04:	009f8109 	addseq	r8, pc, r9, lsl #2
     f08:	00000000 	andeq	r0, r0, r0
     f0c:	01000000 	mrseq	r0, (UNDEF: 0)
     f10:	00015800 	andeq	r5, r1, r0, lsl #16
     f14:	00015c00 	andeq	r5, r1, r0, lsl #24
     f18:	36000200 	strcc	r0, [r0], -r0, lsl #4
     f1c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     f20:	00000000 	andeq	r0, r0, r0
     f24:	58000100 	stmdapl	r0, {r8}
     f28:	5c000001 	stcpl	0, cr0, [r0], {1}
     f2c:	06000001 	streq	r0, [r0], -r1
     f30:	00020300 	andeq	r0, r2, r0, lsl #6
     f34:	009f2000 	addseq	r2, pc, r0
     f38:	00000000 	andeq	r0, r0, r0
     f3c:	01000000 	mrseq	r0, (UNDEF: 0)
     f40:	00015800 	andeq	r5, r1, r0, lsl #16
     f44:	00015c00 	andeq	r5, r1, r0, lsl #24
     f48:	09000300 	stmdbeq	r0, {r8, r9}
     f4c:	00009f81 	andeq	r9, r0, r1, lsl #31
     f50:	00000000 	andeq	r0, r0, r0
     f54:	00010000 	andeq	r0, r1, r0
     f58:	0000018a 	andeq	r0, r0, sl, lsl #3
     f5c:	0000018e 	andeq	r0, r0, lr, lsl #3
     f60:	9f390002 	svcls	0x00390002
	...
     f6c:	018a0001 	orreq	r0, sl, r1
     f70:	018e0000 	orreq	r0, lr, r0
     f74:	00060000 	andeq	r0, r6, r0
     f78:	00000803 	andeq	r0, r0, r3, lsl #16
     f7c:	00009f20 	andeq	r9, r0, r0, lsr #30
     f80:	00000000 	andeq	r0, r0, r0
     f84:	00010000 	andeq	r0, r1, r0
     f88:	0000018a 	andeq	r0, r0, sl, lsl #3
     f8c:	0000018e 	andeq	r0, r0, lr, lsl #3
     f90:	81090003 	tsthi	r9, r3
     f94:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     f98:	00000000 	andeq	r0, r0, r0
     f9c:	a2000100 	andge	r0, r0, #0, 2
     fa0:	ae000001 	cdpge	0, 0, cr0, cr0, cr1, {0}
     fa4:	02000001 	andeq	r0, r0, #1
     fa8:	009f3900 	addseq	r3, pc, r0, lsl #18
     fac:	00000000 	andeq	r0, r0, r0
     fb0:	01000000 	mrseq	r0, (UNDEF: 0)
     fb4:	0001a200 	andeq	sl, r1, r0, lsl #4
     fb8:	0001ae00 	andeq	sl, r1, r0, lsl #28
     fbc:	03000600 	movweq	r0, #1536	; 0x600
     fc0:	20000008 	andcs	r0, r0, r8
     fc4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     fc8:	00000000 	andeq	r0, r0, r0
     fcc:	a2000100 	andge	r0, r0, #0, 2
     fd0:	ae000001 	cdpge	0, 0, cr0, cr0, cr1, {0}
     fd4:	03000001 	movweq	r0, #1
     fd8:	9f810900 	svcls	0x00810900
	...
     fe8:	00000108 	andeq	r0, r0, r8, lsl #2
     fec:	00000110 	andeq	r0, r0, r0, lsl r1
     ff0:	10500001 	subsne	r0, r0, r1
     ff4:	12000001 	andne	r0, r0, #1
     ff8:	01000001 	tsteq	r0, r1
     ffc:	00005000 	andeq	r5, r0, r0
    1000:	00000000 	andeq	r0, r0, r0
    1004:	00e00000 	rsceq	r0, r0, r0
    1008:	00e20000 	rsceq	r0, r2, r0
    100c:	00020000 	andeq	r0, r2, r0
    1010:	00e2007d 	rsceq	r0, r2, sp, ror r0
    1014:	00f20000 	rscseq	r0, r2, r0
    1018:	00020000 	andeq	r0, r2, r0
    101c:	00f2087d 	rscseq	r0, r2, sp, ror r8
    1020:	01080000 	mrseq	r0, (UNDEF: 8)
    1024:	00020000 	andeq	r0, r2, r0
    1028:	0000007d 	andeq	r0, r0, sp, ror r0
    102c:	00000000 	andeq	r0, r0, r0
    1030:	00020000 	andeq	r0, r2, r0
    1034:	00040000 	andeq	r0, r4, r0
    1038:	00020000 	andeq	r0, r2, r0
    103c:	0004007d 	andeq	r0, r4, sp, ror r0
    1040:	00320000 	eorseq	r0, r2, r0
    1044:	00020000 	andeq	r0, r2, r0
    1048:	0032187d 	eorseq	r1, r2, sp, ror r8
    104c:	003c0000 	eorseq	r0, ip, r0
    1050:	00020000 	andeq	r0, r2, r0
    1054:	0000047d 	andeq	r0, r0, sp, ror r4
	...
    1060:	00020000 	andeq	r0, r2, r0
    1064:	00060000 	andeq	r0, r6, r0
    1068:	00010000 	andeq	r0, r1, r0
    106c:	00000650 	andeq	r0, r0, r0, asr r6
    1070:	00003c00 	andeq	r3, r0, r0, lsl #24
    1074:	f3000400 	vshl.u8	d0, d0, d0
    1078:	009f5001 	addseq	r5, pc, r1
    107c:	00000000 	andeq	r0, r0, r0
    1080:	01000000 	mrseq	r0, (UNDEF: 0)
    1084:	00000400 	andeq	r0, r0, r0, lsl #8
    1088:	00000c00 	andeq	r0, r0, r0, lsl #24
    108c:	31000200 	mrscc	r0, R8_usr
    1090:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    109c:	04000000 	streq	r0, [r0], #-0
    10a0:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    10a4:	03000000 	movweq	r0, #0
    10a8:	9f6c9100 	svcls	0x006c9100
    10ac:	00000008 	andeq	r0, r0, r8
    10b0:	0000000b 	andeq	r0, r0, fp
    10b4:	0b510001 	bleq	14410c0 <_Min_Stack_Size+0x1440cc0>
    10b8:	0c000000 	stceq	0, cr0, [r0], {-0}
    10bc:	03000000 	movweq	r0, #0
    10c0:	9f6c9100 	svcls	0x006c9100
	...
    10d4:	000000b8 	strheq	r0, [r0], -r8
    10d8:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    10dc:	d0500001 	subsle	r0, r0, r1
    10e0:	d8000000 	stmdale	r0, {}	; <UNPREDICTABLE>
    10e4:	04000000 	streq	r0, [r0], #-0
    10e8:	5001f300 	andpl	pc, r1, r0, lsl #6
    10ec:	0000d89f 	muleq	r0, pc, r8	; <UNPREDICTABLE>
    10f0:	0000da00 	andeq	sp, r0, r0, lsl #20
    10f4:	50000100 	andpl	r0, r0, r0, lsl #2
    10f8:	000000da 	ldrdeq	r0, [r0], -sl
    10fc:	000000e0 	andeq	r0, r0, r0, ror #1
    1100:	01f30004 	mvnseq	r0, r4
    1104:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    1114:	003c0000 	eorseq	r0, ip, r0
    1118:	00640000 	rsbeq	r0, r4, r0
    111c:	00010000 	andeq	r0, r1, r0
    1120:	00006450 	andeq	r6, r0, r0, asr r4
    1124:	00006800 	andeq	r6, r0, r0, lsl #16
    1128:	f3000400 	vshl.u8	d0, d0, d0
    112c:	689f5001 	ldmvs	pc, {r0, ip, lr}	; <UNPREDICTABLE>
    1130:	7a000000 	bvc	1138 <_Min_Stack_Size+0xd38>
    1134:	01000000 	mrseq	r0, (UNDEF: 0)
    1138:	007a5000 	rsbseq	r5, sl, r0
    113c:	00b80000 	adcseq	r0, r8, r0
    1140:	00040000 	andeq	r0, r4, r0
    1144:	9f5001f3 	svcls	0x005001f3
	...
    1158:	00000008 	andeq	r0, r0, r8
    115c:	0000000a 	andeq	r0, r0, sl
    1160:	00760005 	rsbseq	r0, r6, r5
    1164:	0a9f2632 	beq	fe7caa34 <BootRAM+0xd73b1d5>
    1168:	1c000000 	stcne	0, cr0, [r0], {-0}
    116c:	01000000 	mrseq	r0, (UNDEF: 0)
    1170:	00245600 	eoreq	r5, r4, r0, lsl #12
    1174:	00260000 	eoreq	r0, r6, r0
    1178:	00050000 	andeq	r0, r5, r0
    117c:	26320076 			; <UNDEFINED> instruction: 0x26320076
    1180:	0000269f 	muleq	r0, pc, r6	; <UNPREDICTABLE>
    1184:	00003800 	andeq	r3, r0, r0, lsl #16
    1188:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    1194:	00000001 	andeq	r0, r0, r1
    1198:	00000000 	andeq	r0, r0, r0
    119c:	00000001 	andeq	r0, r0, r1
    11a0:	00000000 	andeq	r0, r0, r0
    11a4:	00000008 	andeq	r0, r0, r8
    11a8:	0000000e 	andeq	r0, r0, lr
    11ac:	9f300002 	svcls	0x00300002
    11b0:	0000000e 	andeq	r0, r0, lr
    11b4:	00000010 	andeq	r0, r0, r0, lsl r0
    11b8:	10540001 	subsne	r0, r4, r1
    11bc:	16000000 	strne	r0, [r0], -r0
    11c0:	03000000 	movweq	r0, #0
    11c4:	9f7f7400 	svcls	0x007f7400
    11c8:	00000016 	andeq	r0, r0, r6, lsl r0
    11cc:	0000001a 	andeq	r0, r0, sl, lsl r0
    11d0:	24540001 	ldrbcs	r0, [r4], #-1
    11d4:	2a000000 	bcs	11dc <_Min_Stack_Size+0xddc>
    11d8:	02000000 	andeq	r0, r0, #0
    11dc:	2a9f3000 	bcs	fe7cd1e4 <BootRAM+0xd73d985>
    11e0:	2c000000 	stccs	0, cr0, [r0], {-0}
    11e4:	01000000 	mrseq	r0, (UNDEF: 0)
    11e8:	002c5400 	eoreq	r5, ip, r0, lsl #8
    11ec:	00320000 	eorseq	r0, r2, r0
    11f0:	00030000 	andeq	r0, r3, r0
    11f4:	329f7f74 	addscc	r7, pc, #116, 30	; 0x1d0
    11f8:	36000000 	strcc	r0, [r0], -r0
    11fc:	01000000 	mrseq	r0, (UNDEF: 0)
    1200:	00005400 	andeq	r5, r0, r0, lsl #8
    1204:	00000000 	andeq	r0, r0, r0
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	08000150 	stmdaeq	r0, {r4, r6, r8}
  14:	00000214 	andeq	r0, r0, r4, lsl r2
  18:	08000bd8 	stmdaeq	r0, {r3, r4, r6, r7, r8, r9, fp}
  1c:	00000084 	andeq	r0, r0, r4, lsl #1
	...
  28:	0000001c 	andeq	r0, r0, ip, lsl r0
  2c:	092c0002 	stmdbeq	ip!, {r1}
  30:	00040000 	andeq	r0, r4, r0
  34:	00000000 	andeq	r0, r0, r0
  38:	08000364 	stmdaeq	r0, {r2, r5, r6, r8, r9}
  3c:	00000620 	andeq	r0, r0, r0, lsr #12
	...
  48:	0000001c 	andeq	r0, r0, ip, lsl r0
  4c:	1b9a0002 	blne	fe68005c <BootRAM+0xd5f07fd>
  50:	00040000 	andeq	r0, r4, r0
  54:	00000000 	andeq	r0, r0, r0
  58:	08000984 	stmdaeq	r0, {r2, r7, r8, fp}
  5c:	000001c0 	andeq	r0, r0, r0, asr #3
	...
  68:	0000001c 	andeq	r0, r0, ip, lsl r0
  6c:	2f220002 	svccs	0x00220002
  70:	00040000 	andeq	r0, r4, r0
  74:	00000000 	andeq	r0, r0, r0
  78:	08000b44 	stmdaeq	r0, {r2, r6, r8, r9, fp}
  7c:	00000048 	andeq	r0, r0, r8, asr #32
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	08000150 	stmdaeq	r0, {r4, r6, r8}
   4:	08000364 	stmdaeq	r0, {r2, r5, r6, r8, r9}
   8:	08000bd8 	stmdaeq	r0, {r3, r4, r6, r7, r8, r9, fp}
   c:	08000c5c 	stmdaeq	r0, {r2, r3, r4, r6, sl, fp}
	...
  18:	00000032 	andeq	r0, r0, r2, lsr r0
  1c:	00000032 	andeq	r0, r0, r2, lsr r0
  20:	00000034 	andeq	r0, r0, r4, lsr r0
  24:	0000003a 	andeq	r0, r0, sl, lsr r0
	...
  30:	000002f6 	strdeq	r0, [r0], -r6
  34:	000002f8 	strdeq	r0, [r0], -r8
  38:	000002fc 	strdeq	r0, [r0], -ip
  3c:	000002fc 	strdeq	r0, [r0], -ip
  40:	00000300 	andeq	r0, r0, r0, lsl #6
  44:	00000310 	andeq	r0, r0, r0, lsl r3
	...
  50:	000003fe 	strdeq	r0, [r0], -lr
  54:	00000400 	andeq	r0, r0, r0, lsl #8
  58:	0000041a 	andeq	r0, r0, sl, lsl r4
  5c:	00000420 	andeq	r0, r0, r0, lsr #8
  60:	00000444 	andeq	r0, r0, r4, asr #8
  64:	00000450 	andeq	r0, r0, r0, asr r4
	...
  70:	0000047c 	andeq	r0, r0, ip, ror r4
  74:	00000486 	andeq	r0, r0, r6, lsl #9
  78:	00000486 	andeq	r0, r0, r6, lsl #9
  7c:	0000048e 	andeq	r0, r0, lr, lsl #9
	...
  88:	000004d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
  8c:	000004d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
  90:	000004d8 	ldrdeq	r0, [r0], -r8
  94:	000004e4 	andeq	r0, r0, r4, ror #9
	...
  a0:	00000526 	andeq	r0, r0, r6, lsr #10
  a4:	00000526 	andeq	r0, r0, r6, lsr #10
  a8:	00000528 	andeq	r0, r0, r8, lsr #10
  ac:	00000530 	andeq	r0, r0, r0, lsr r5
	...
  b8:	0000053c 	andeq	r0, r0, ip, lsr r5
  bc:	00000550 	andeq	r0, r0, r0, asr r5
  c0:	00000560 	andeq	r0, r0, r0, ror #10
  c4:	00000592 	muleq	r0, r2, r5
  c8:	00000596 	muleq	r0, r6, r5
  cc:	000005b6 			; <UNDEFINED> instruction: 0x000005b6
	...
  d8:	0000057a 	andeq	r0, r0, sl, ror r5
  dc:	0000057c 	andeq	r0, r0, ip, ror r5
  e0:	00000584 	andeq	r0, r0, r4, lsl #11
  e4:	00000592 	muleq	r0, r2, r5
	...
  f0:	00000550 	andeq	r0, r0, r0, asr r5
  f4:	00000556 	andeq	r0, r0, r6, asr r5
  f8:	000005c2 	andeq	r0, r0, r2, asr #11
  fc:	000005ca 	andeq	r0, r0, sl, asr #11
	...
 108:	0000012a 	andeq	r0, r0, sl, lsr #2
 10c:	0000012c 	andeq	r0, r0, ip, lsr #2
 110:	0000013c 	andeq	r0, r0, ip, lsr r1
 114:	00000140 	andeq	r0, r0, r0, asr #2
 118:	00000144 	andeq	r0, r0, r4, asr #2
 11c:	00000148 	andeq	r0, r0, r8, asr #2
	...
 128:	00000150 	andeq	r0, r0, r0, asr r1
 12c:	00000156 	andeq	r0, r0, r6, asr r1
 130:	00000158 	andeq	r0, r0, r8, asr r1
 134:	0000015c 	andeq	r0, r0, ip, asr r1
	...
 140:	0000016c 	andeq	r0, r0, ip, ror #2
 144:	0000016e 	andeq	r0, r0, lr, ror #2
 148:	00000170 	andeq	r0, r0, r0, ror r1
 14c:	00000172 	andeq	r0, r0, r2, ror r1
 150:	00000186 	andeq	r0, r0, r6, lsl #3
 154:	00000188 	andeq	r0, r0, r8, lsl #3
 158:	0000018a 	andeq	r0, r0, sl, lsl #3
 15c:	0000018e 	andeq	r0, r0, lr, lsl #3
	...
 168:	00000196 	muleq	r0, r6, r1
 16c:	00000198 	muleq	r0, r8, r1
 170:	000001a2 	andeq	r0, r0, r2, lsr #3
 174:	000001a4 	andeq	r0, r0, r4, lsr #3
 178:	000001a8 	andeq	r0, r0, r8, lsr #3
 17c:	000001ae 	andeq	r0, r0, lr, lsr #3
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
       0:	0000042f 	andeq	r0, r0, pc, lsr #8
       4:	00af0003 	adceq	r0, pc, r3
       8:	01020000 	mrseq	r0, (UNDEF: 2)
       c:	000d0efb 	strdeq	r0, [sp], -fp
      10:	01010101 	tsteq	r1, r1, lsl #2
      14:	01000000 	mrseq	r0, (UNDEF: 0)
      18:	73010000 	movwvc	r0, #4096	; 0x1000
      1c:	6c006372 	stcvs	3, cr6, [r0], {114}	; 0x72
      20:	692f6269 	stmdbvs	pc!, {r0, r3, r5, r6, r9, sp, lr}	; <UNPREDICTABLE>
      24:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
      28:	2f006564 	svccs	0x00006564
      2c:	2f727375 	svccs	0x00727375
      30:	2f62696c 	svccs	0x0062696c
      34:	2f636367 	svccs	0x00636367
      38:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
      3c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
      40:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
      44:	2e382f69 	cdpcs	15, 3, cr2, cr8, cr9, {3}
      48:	2f312e33 	svccs	0x00312e33
      4c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
      50:	00656475 	rsbeq	r6, r5, r5, ror r4
      54:	6f6c6300 	svcvs	0x006c6300
      58:	682e6b63 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
      5c:	00000100 	andeq	r0, r0, r0, lsl #2
      60:	6e69616d 	powvsez	f6, f1, #5.0
      64:	0100632e 	tsteq	r0, lr, lsr #6
      68:	6f630000 	svcvs	0x00630000
      6c:	635f6572 	cmpvs	pc, #478150656	; 0x1c800000
      70:	682e336d 	stmdavs	lr!, {r0, r2, r3, r5, r6, r8, r9, ip, sp}
      74:	00000200 	andeq	r0, r0, r0, lsl #4
      78:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
      7c:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
      80:	00000300 	andeq	r0, r0, r0, lsl #6
      84:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
      88:	735f6d65 	cmpvc	pc, #6464	; 0x1940
      8c:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
      90:	7878316c 	ldmdavc	r8!, {r2, r3, r5, r6, r8, ip, sp}^
      94:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
      98:	74730000 	ldrbtvc	r0, [r3], #-0
      9c:	6c32336d 	ldcvs	3, cr3, [r2], #-436	; 0xfffffe4c
      a0:	78313531 	ldmdavc	r1!, {r0, r4, r5, r8, sl, ip, sp}
      a4:	00682e63 	rsbeq	r2, r8, r3, ror #28
      a8:	75000002 	strvc	r0, [r0, #-2]
      ac:	6c5f6273 	lfmvs	f6, 2, [pc], {115}	; 0x73
      b0:	682e6269 	stmdavs	lr!, {r0, r3, r5, r6, r9, sp, lr}
      b4:	00000100 	andeq	r0, r0, r0, lsl #2
      b8:	001c0500 	andseq	r0, ip, r0, lsl #10
      bc:	01500205 	cmpeq	r0, r5, lsl #4
      c0:	1b030800 	blne	c20c8 <_Min_Stack_Size+0xc1cc8>
      c4:	13030501 	movwne	r0, #13569	; 0x3501
      c8:	01061005 	tsteq	r6, r5
      cc:	05210b05 	streq	r0, [r1, #-2821]!	; 0xfffff4fb
      d0:	03051f10 	movweq	r1, #24336	; 0x5f10
      d4:	0b054b06 	bleq	152cf4 <_Min_Stack_Size+0x1528f4>
      d8:	03050106 	movweq	r0, #20742	; 0x5106
      dc:	14144c06 	ldrne	r4, [r4], #-3078	; 0xfffff3fa
      e0:	01060c05 	tsteq	r6, r5, lsl #24
      e4:	4b060305 	blmi	180d00 <_Min_Stack_Size+0x180900>
      e8:	01060c05 	tsteq	r6, r5, lsl #24
      ec:	4d060305 	stcmi	3, cr0, [r6, #-20]	; 0xffffffec
      f0:	01060c05 	tsteq	r6, r5, lsl #24
      f4:	4a061e05 	bmi	187910 <_Min_Stack_Size+0x187510>
      f8:	02004205 	andeq	r4, r0, #1342177280	; 0x50000000
      fc:	05010204 	streq	r0, [r1, #-516]	; 0xfffffdfc
     100:	04020029 	streq	r0, [r2], #-41	; 0xffffffd7
     104:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
     108:	04020023 	streq	r0, [r2], #-35	; 0xffffffdd
     10c:	03052002 	movweq	r2, #20482	; 0x5002
     110:	0c053306 	stceq	3, cr3, [r5], {6}
     114:	03050106 	movweq	r0, #20742	; 0x5106
     118:	0c054c06 	stceq	12, cr4, [r5], {6}
     11c:	03050106 	movweq	r0, #20742	; 0x5106
     120:	0c054e06 	stceq	14, cr4, [r5], {6}
     124:	03050106 	movweq	r0, #20742	; 0x5106
     128:	0c054c06 	stceq	12, cr4, [r5], {6}
     12c:	03050106 	movweq	r0, #20742	; 0x5106
     130:	0c053d06 	stceq	13, cr3, [r5], {6}
     134:	03050106 	movweq	r0, #20742	; 0x5106
     138:	0c052f06 	stceq	15, cr2, [r5], {6}
     13c:	03050106 	movweq	r0, #20742	; 0x5106
     140:	26054b06 	strcs	r4, [r5], -r6, lsl #22
     144:	01040200 	mrseq	r0, R12_usr
     148:	000e0501 	andeq	r0, lr, r1, lsl #10
     14c:	06010402 	streq	r0, [r1], -r2, lsl #8
     150:	00080501 	andeq	r0, r8, r1, lsl #10
     154:	20010402 	andcs	r0, r1, r2, lsl #8
     158:	30060305 	andcc	r0, r6, r5, lsl #6
     15c:	01060d05 	tsteq	r6, r5, lsl #26
     160:	4c060305 	stcmi	3, cr0, [r6], {5}
     164:	01060d05 	tsteq	r6, r5, lsl #26
     168:	4b060305 	blmi	180d84 <_Min_Stack_Size+0x180984>
     16c:	01060d05 	tsteq	r6, r5, lsl #26
     170:	03060305 	movweq	r0, #25349	; 0x6305
     174:	0c054a0b 			; <UNDEFINED> instruction: 0x0c054a0b
     178:	03050106 	movweq	r0, #20742	; 0x5106
     17c:	0c054b06 			; <UNDEFINED> instruction: 0x0c054b06
     180:	01050106 	tsteq	r5, r6, lsl #2
     184:	061f052f 	ldreq	r0, [pc], -pc, lsr #10
     188:	13030592 	movwne	r0, #13714	; 0x3592
     18c:	07051513 	smladeq	r5, r3, r5, r1
     190:	03050106 	movweq	r0, #20742	; 0x5106
     194:	07052f06 	streq	r2, [r5, -r6, lsl #30]
     198:	03050106 	movweq	r0, #20742	; 0x5106
     19c:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
     1a0:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     1a4:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
     1a8:	0511060d 	ldreq	r0, [r1, #-1549]	; 0xfffff9f3
     1ac:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
     1b0:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
     1b4:	203c2007 	eorscs	r2, ip, r7
     1b8:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
     1bc:	051f0204 	ldreq	r0, [pc, #-516]	; ffffffc0 <BootRAM+0xef70761>
     1c0:	202e3119 	eorcs	r3, lr, r9, lsl r1
     1c4:	03060305 	movweq	r0, #25349	; 0x6305
     1c8:	0e05201d 	mcreq	0, 0, r2, cr5, cr13, {0}
     1cc:	03050106 	movweq	r0, #20742	; 0x5106
     1d0:	0e055906 	vmlaeq.f16	s10, s10, s12	; <UNPREDICTABLE>
     1d4:	03050106 	movweq	r0, #20742	; 0x5106
     1d8:	0e054b06 	vmlaeq.f64	d4, d5, d6
     1dc:	03050106 	movweq	r0, #20742	; 0x5106
     1e0:	07054d06 	streq	r4, [r5, -r6, lsl #26]
     1e4:	03050106 	movweq	r0, #20742	; 0x5106
     1e8:	07052f06 	streq	r2, [r5, -r6, lsl #30]
     1ec:	03050106 	movweq	r0, #20742	; 0x5106
     1f0:	05053006 	streq	r3, [r5, #-6]
     1f4:	21060106 	tstcs	r6, r6, lsl #2
     1f8:	09051313 	stmdbeq	r5, {r0, r1, r4, r8, r9, ip}
     1fc:	03050106 	movweq	r0, #20742	; 0x5106
     200:	14133406 	ldrne	r3, [r3], #-1030	; 0xfffffbfa
     204:	07051413 	smladeq	r5, r3, r4, r1
     208:	03050106 	movweq	r0, #20742	; 0x5106
     20c:	05142f06 	ldreq	r2, [r4, #-3846]	; 0xfffff0fa
     210:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     214:	05220603 	streq	r0, [r2, #-1539]!	; 0xfffff9fd
     218:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
     21c:	054b0603 	strbeq	r0, [fp, #-1539]	; 0xfffff9fd
     220:	3011060b 	andscc	r0, r1, fp, lsl #12
     224:	20060505 	andcs	r0, r6, r5, lsl #10
     228:	01060b05 	tsteq	r6, r5, lsl #22
     22c:	2e200705 	cdpcs	7, 2, cr0, cr0, cr5, {0}
     230:	00030520 	andeq	r0, r3, r0, lsr #10
     234:	1f020402 	svcne	0x00020402
     238:	05311905 	ldreq	r1, [r1, #-2309]!	; 0xfffff6fb
     23c:	6d030605 	stcvs	6, cr0, [r3, #-20]	; 0xffffffec
     240:	0905133c 	stmdbeq	r5, {r2, r3, r4, r5, r8, r9, ip}
     244:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
     248:	1b030603 	blne	c1a5c <_Min_Stack_Size+0xc165c>
     24c:	19051420 	stmdbne	r5, {r5, sl, ip}
     250:	01051006 	tsteq	r5, r6
     254:	06030540 	streq	r0, [r3], -r0, asr #10
     258:	14207303 	strtne	r7, [r0], #-771	; 0xfffffcfd
     25c:	01060705 	tsteq	r6, r5, lsl #14
     260:	21060305 	tstcs	r6, r5, lsl #6
     264:	060c0513 			; <UNDEFINED> instruction: 0x060c0513
     268:	1d070515 	cfstr32ne	mvfx0, [r7, #-84]	; 0xffffffac
     26c:	2f060305 	svccs	0x00060305
     270:	01060d05 	tsteq	r6, r5, lsl #26
     274:	21060305 	tstcs	r6, r5, lsl #6
     278:	11060d05 	tstne	r6, r5, lsl #26
     27c:	30060505 	andcc	r0, r6, r5, lsl #10
     280:	01060c05 	tsteq	r6, r5, lsl #24
     284:	05201305 	streq	r1, [r0, #-773]!	; 0xfffffcfb
     288:	202e2e07 	eorcs	r2, lr, r7, lsl #28
     28c:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
     290:	061f0204 	ldreq	r0, [pc], -r4, lsl #4
     294:	3c7fbd03 	ldclcc	13, cr11, [pc], #-12	; 290 <_Min_Heap_Size+0x290>
     298:	060b0515 			; <UNDEFINED> instruction: 0x060b0515
     29c:	06030501 	streq	r0, [r3], -r1, lsl #10
     2a0:	060b054b 	streq	r0, [fp], -fp, asr #10
     2a4:	06030501 	streq	r0, [r3], -r1, lsl #10
     2a8:	060b054b 	streq	r0, [fp], -fp, asr #10
     2ac:	06030501 	streq	r0, [r3], -r1, lsl #10
     2b0:	060b054b 	streq	r0, [fp], -fp, asr #10
     2b4:	06030501 	streq	r0, [r3], -r1, lsl #10
     2b8:	060b054b 	streq	r0, [fp], -fp, asr #10
     2bc:	06030501 	streq	r0, [r3], -r1, lsl #10
     2c0:	060b054b 	streq	r0, [fp], -fp, asr #10
     2c4:	06030501 	streq	r0, [r3], -r1, lsl #10
     2c8:	0605054d 	streq	r0, [r5], -sp, asr #10
     2cc:	05210601 	streq	r0, [r1, #-1537]!	; 0xfffff9ff
     2d0:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     2d4:	054b0605 	strbeq	r0, [fp, #-1541]	; 0xfffff9fb
     2d8:	3011060d 	andscc	r0, r1, sp, lsl #12
     2dc:	20060705 	andcs	r0, r6, r5, lsl #14
     2e0:	01060d05 	tsteq	r6, r5, lsl #26
     2e4:	2e200905 	vmulcs.f16	s0, s0, s10	; <UNPREDICTABLE>
     2e8:	00050520 	andeq	r0, r5, r0, lsr #10
     2ec:	1f020402 	svcne	0x00020402
     2f0:	0d053606 	stceq	6, cr3, [r5, #-24]	; 0xffffffe8
     2f4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     2f8:	0d055906 	vstreq.16	s10, [r5, #-12]	; <UNPREDICTABLE>
     2fc:	07051106 	streq	r1, [r5, -r6, lsl #2]
     300:	0d053006 	stceq	0, cr3, [r5, #-24]	; 0xffffffe8
     304:	09050106 	stmdbeq	r5, {r1, r2, r8}
     308:	05202e20 	streq	r2, [r0, #-3616]!	; 0xfffff1e0
     30c:	04020005 	streq	r0, [r2], #-5
     310:	1b051f02 	blne	147f20 <_Min_Stack_Size+0x147b20>
     314:	06100531 			; <UNDEFINED> instruction: 0x06100531
     318:	059e3303 	ldreq	r3, [lr, #771]	; 0x303
     31c:	15131303 	ldrne	r1, [r3, #-771]	; 0xfffffcfd
     320:	01060705 	tsteq	r6, r5, lsl #14
     324:	2f060305 	svccs	0x00060305
     328:	01060705 	tsteq	r6, r5, lsl #14
     32c:	2f060305 	svccs	0x00060305
     330:	060d0513 			; <UNDEFINED> instruction: 0x060d0513
     334:	06030501 	streq	r0, [r3], -r1, lsl #10
     338:	060d0521 	streq	r0, [sp], -r1, lsr #10
     33c:	06050511 			; <UNDEFINED> instruction: 0x06050511
     340:	060c0530 			; <UNDEFINED> instruction: 0x060c0530
     344:	20070501 	andcs	r0, r7, r1, lsl #10
     348:	0305203c 	movweq	r2, #20540	; 0x503c
     34c:	02040200 	andeq	r0, r4, #0, 4
     350:	053f061f 	ldreq	r0, [pc, #-1567]!	; fffffd39 <BootRAM+0xef704da>
     354:	03050119 	movweq	r0, #20761	; 0x5119
     358:	060b0515 			; <UNDEFINED> instruction: 0x060b0515
     35c:	06030501 	streq	r0, [r3], -r1, lsl #10
     360:	060b054b 	streq	r0, [fp], -fp, asr #10
     364:	06030501 	streq	r0, [r3], -r1, lsl #10
     368:	060b054b 	streq	r0, [fp], -fp, asr #10
     36c:	06030501 	streq	r0, [r3], -r1, lsl #10
     370:	060b054b 	streq	r0, [fp], -fp, asr #10
     374:	4b010501 	blmi	41780 <_Min_Stack_Size+0x41380>
     378:	2c050204 	sfmcs	f0, 4, [r5], {4}
     37c:	7ed10306 	cdpvc	3, 13, cr0, cr1, cr6, {0}
     380:	012d0558 			; <UNDEFINED> instruction: 0x012d0558
     384:	01060105 	tsteq	r6, r5, lsl #2
     388:	22061a05 	andcs	r1, r6, #20480	; 0x5000
     38c:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
     390:	04020008 	streq	r0, [r2], #-8
     394:	00010601 	andeq	r0, r1, r1, lsl #12
     398:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
     39c:	05210105 	streq	r0, [r1, #-261]!	; 0xfffffefb
     3a0:	04020010 	streq	r0, [r2], #-16
     3a4:	021f0602 	andseq	r0, pc, #2097152	; 0x200000
     3a8:	01010002 	tsteq	r1, r2
     3ac:	0f050204 	svceq	0x00050204
     3b0:	d8020500 	stmdale	r2, {r8, sl}
     3b4:	0308000b 	movweq	r0, #32779	; 0x800b
     3b8:	0305010d 	movweq	r0, #20749	; 0x510d
     3bc:	060f0513 			; <UNDEFINED> instruction: 0x060f0513
     3c0:	21030511 	tstcs	r3, r1, lsl r5
     3c4:	0f053d06 	svceq	0x00053d06
     3c8:	03050106 	movweq	r0, #20742	; 0x5106
     3cc:	2e015906 	vmlacs.f16	s10, s2, s12	; <UNPREDICTABLE>
     3d0:	20202e2e 	eorcs	r2, r0, lr, lsr #28
     3d4:	01202e01 			; <UNDEFINED> instruction: 0x01202e01
     3d8:	01011605 	tsteq	r1, r5, lsl #12
     3dc:	202e2e20 	eorcs	r2, lr, r0, lsr #28
     3e0:	202e0120 	eorcs	r0, lr, r0, lsr #2
     3e4:	13030501 	movwne	r0, #13569	; 0x3501
     3e8:	06200601 	strteq	r0, [r0], -r1, lsl #12
     3ec:	20012e20 	andcs	r2, r1, r0, lsr #28
     3f0:	202e0120 	eorcs	r0, lr, r0, lsr #2
     3f4:	01160501 	tsteq	r6, r1, lsl #10
     3f8:	012e2001 			; <UNDEFINED> instruction: 0x012e2001
     3fc:	2e012020 	cdpcs	0, 0, cr2, cr1, cr0, {1}
     400:	03050120 	movweq	r0, #20768	; 0x5120
     404:	03042f14 	movweq	r2, #20244	; 0x4f14
     408:	9f031605 	svcls	0x00031605
     40c:	35050109 	strcc	r0, [r5, #-265]	; 0xfffffef7
     410:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
     414:	e4030605 	str	r0, [r3], #-1541	; 0xfffff9fb
     418:	03052076 	movweq	r2, #20598	; 0x5076
     41c:	01040200 	mrseq	r0, R12_usr
     420:	05051e06 	streq	r1, [r5, #-3590]	; 0xfffff1fa
     424:	01040200 	mrseq	r0, R12_usr
     428:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
     42c:	0d022f01 	stceq	15, cr2, [r2, #-4]
     430:	71010100 	mrsvc	r0, (UNDEF: 17)
     434:	03000007 	movweq	r0, #7
     438:	0000a700 	andeq	sl, r0, r0, lsl #14
     43c:	fb010200 	blx	40c46 <_Min_Stack_Size+0x40846>
     440:	01000d0e 	tsteq	r0, lr, lsl #26
     444:	00010101 	andeq	r0, r1, r1, lsl #2
     448:	00010000 	andeq	r0, r1, r0
     44c:	72730100 	rsbsvc	r0, r3, #0, 2
     450:	696c0063 	stmdbvs	ip!, {r0, r1, r5, r6}^
     454:	6e692f62 	cdpvs	15, 6, cr2, cr9, cr2, {3}
     458:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     45c:	752f0065 	strvc	r0, [pc, #-101]!	; 3ff <_Min_Heap_Size+0x3ff>
     460:	6c2f7273 	sfmvs	f7, 4, [pc], #-460	; 29c <_Min_Heap_Size+0x29c>
     464:	672f6269 	strvs	r6, [pc, -r9, ror #4]!
     468:	612f6363 			; <UNDEFINED> instruction: 0x612f6363
     46c:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     470:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     474:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     478:	332e382f 			; <UNDEFINED> instruction: 0x332e382f
     47c:	692f312e 	stmdbvs	pc!, {r1, r2, r3, r5, r8, ip, sp}	; <UNPREDICTABLE>
     480:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     484:	00006564 	andeq	r6, r0, r4, ror #10
     488:	5f627375 	svcpl	0x00627375
     48c:	2e62696c 	vnmulcs.f16	s13, s4, s25	; <UNPREDICTABLE>
     490:	00010063 	andeq	r0, r1, r3, rrx
     494:	726f6300 	rsbvc	r6, pc, #0, 6
     498:	6d635f65 	stclvs	15, cr5, [r3, #-404]!	; 0xfffffe6c
     49c:	00682e33 	rsbeq	r2, r8, r3, lsr lr
     4a0:	75000002 	strvc	r0, [r0, #-2]
     4a4:	6c5f6273 	lfmvs	f6, 2, [pc], {115}	; 0x73
     4a8:	682e6269 	stmdavs	lr!, {r0, r3, r5, r6, r9, sp, lr}
     4ac:	00000100 	andeq	r0, r0, r0, lsl #2
     4b0:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
     4b4:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
     4b8:	00000300 	andeq	r0, r0, r0, lsl #6
     4bc:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     4c0:	35316c32 	ldrcc	r6, [r1, #-3122]!	; 0xfffff3ce
     4c4:	2e637831 	mcrcs	8, 3, r7, cr3, cr1, {1}
     4c8:	00020068 	andeq	r0, r2, r8, rrx
     4cc:	73797300 	cmnvc	r9, #0, 6
     4d0:	5f6d6574 	svcpl	0x006d6574
     4d4:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     4d8:	78316c32 	ldmdavc	r1!, {r1, r4, r5, sl, fp, sp, lr}
     4dc:	00682e78 	rsbeq	r2, r8, r8, ror lr
     4e0:	00000002 	andeq	r0, r0, r2
     4e4:	05002b05 	streq	r2, [r0, #-2821]	; 0xfffff4fb
     4e8:	00036402 	andeq	r6, r3, r2, lsl #8
     4ec:	01160308 	tsteq	r6, r8, lsl #6
     4f0:	05012c05 	streq	r2, [r1, #-3077]	; 0xfffff3fb
     4f4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     4f8:	053f065c 	ldreq	r0, [pc, #-1628]!	; fffffea4 <BootRAM+0xef70645>
     4fc:	0105015d 	tsteq	r5, sp, asr r1
     500:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
     504:	05210663 	streq	r0, [r1, #-1635]!	; 0xfffff99d
     508:	01050164 	tsteq	r5, r4, ror #2
     50c:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
     510:	1c030611 	stcne	6, cr0, [r3], {17}
     514:	13030520 	movwne	r0, #13600	; 0x3520
     518:	01061005 	tsteq	r6, r5
     51c:	59060305 	stmdbpl	r6, {r0, r2, r8, r9}
     520:	01061005 	tsteq	r6, r5
     524:	4c060305 	stcmi	3, cr0, [r6], {5}
     528:	01060f05 	tsteq	r6, r5, lsl #30
     52c:	59060305 	stmdbpl	r6, {r0, r2, r8, r9}
     530:	01060f05 	tsteq	r6, r5, lsl #30
     534:	4b060305 	blmi	181150 <_Min_Stack_Size+0x180d50>
     538:	06010705 	streq	r0, [r1], -r5, lsl #14
     53c:	110f0501 	tstne	pc, r1, lsl #10
     540:	02002e05 	andeq	r2, r0, #5, 28	; 0x50
     544:	21060304 	tstcs	r6, r4, lsl #6
     548:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
     54c:	20060304 	andcs	r0, r6, r4, lsl #6
     550:	03040200 	movweq	r0, #16896	; 0x4200
     554:	05210620 	streq	r0, [r1, #-1568]!	; 0xfffff9e0
     558:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
     55c:	052f0603 	streq	r0, [pc, #-1539]!	; ffffff61 <BootRAM+0xef70702>
     560:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
     564:	052f0603 	streq	r0, [pc, #-1539]!	; ffffff69 <BootRAM+0xef7070a>
     568:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
     56c:	052f0603 	streq	r0, [pc, #-1539]!	; ffffff71 <BootRAM+0xef70712>
     570:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
     574:	052f0603 	streq	r0, [pc, #-1539]!	; ffffff79 <BootRAM+0xef7071a>
     578:	2e01060f 	cfmadd32cs	mvax0, mvfx0, mvfx1, mvfx15
     57c:	2f060305 	svccs	0x00060305
     580:	16050204 	strne	r0, [r5], -r4, lsl #4
     584:	010b9b03 	tsteq	fp, r3, lsl #22
     588:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
     58c:	4a010627 	bmi	41e30 <_Min_Stack_Size+0x41a30>
     590:	03050104 	movweq	r0, #20740	; 0x5104
     594:	74e40306 	strbtvc	r0, [r4], #774	; 0x306
     598:	060f0501 	streq	r0, [pc], -r1, lsl #10
     59c:	59010501 	stmdbpl	r1, {r0, r8, sl}
     5a0:	03064f05 	movweq	r4, #28421	; 0x6f05
     5a4:	05ba00e6 	ldreq	r0, [sl, #230]!	; 0xe6
     5a8:	05131303 	ldreq	r1, [r3, #-771]	; 0xfffffcfd
     5ac:	0510064f 	ldreq	r0, [r0, #-1615]	; 0xfffff9b1
     5b0:	03052209 	movweq	r2, #21001	; 0x5209
     5b4:	05053006 	streq	r3, [r5, #-6]
     5b8:	59065806 	stmdbpl	r6, {r1, r2, fp, ip, lr}
     5bc:	05200601 	streq	r0, [r0, #-1537]!	; 0xfffff9ff
     5c0:	05950603 	ldreq	r0, [r5, #1539]	; 0x603
     5c4:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
     5c8:	13210603 			; <UNDEFINED> instruction: 0x13210603
     5cc:	3c130614 	ldccc	6, cr0, [r3], {20}
     5d0:	19052e06 	stmdbne	r5, {r1, r2, r9, sl, fp, sp}
     5d4:	061d0559 			; <UNDEFINED> instruction: 0x061d0559
     5d8:	05052e01 	streq	r2, [r5, #-3585]	; 0xfffff1ff
     5dc:	20770306 	rsbscs	r0, r7, r6, lsl #6
     5e0:	06070501 	streq	r0, [r7], -r1, lsl #10
     5e4:	331205b3 	tstcc	r2, #750780416	; 0x2cc00000
     5e8:	30060305 	andcc	r0, r6, r5, lsl #6
     5ec:	01061205 	tsteq	r6, r5, lsl #4
     5f0:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
     5f4:	4a060505 	bmi	181a10 <_Min_Stack_Size+0x181610>
     5f8:	23056706 	movwcs	r6, #22278	; 0x5706
     5fc:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     600:	16052106 	strne	r2, [r5], -r6, lsl #2
     604:	07050106 	streq	r0, [r5, -r6, lsl #2]
     608:	2d160521 	cfldr32cs	mvfx0, [r6, #-132]	; 0xffffff7c
     60c:	2f060505 	svccs	0x00060505
     610:	2e060705 	cdpcs	7, 0, cr0, cr6, cr5, {0}
     614:	01580621 	cmpeq	r8, r1, lsr #12
     618:	0c05013e 	stfeqs	f0, [r5], {62}	; 0x3e
     61c:	2e0f0306 	cdpcs	3, 0, cr0, cr15, cr6, {0}
     620:	051e0505 	ldreq	r0, [lr, #-1285]	; 0xfffffafb
     624:	05220603 	streq	r0, [r2, #-1539]!	; 0xfffff9fd
     628:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
     62c:	19052101 	stmdbne	r5, {r0, r8, sp}
     630:	20650306 	rsbcs	r0, r5, r6, lsl #6
     634:	01061d05 	tsteq	r6, r5, lsl #26
     638:	060e052e 	streq	r0, [lr], -lr, lsr #10
     63c:	06120521 	ldreq	r0, [r2], -r1, lsr #10
     640:	05052e01 	streq	r2, [r5, #-3585]	; 0xfffff1ff
     644:	200d0306 	andcs	r0, sp, r6, lsl #6
     648:	01062305 	tsteq	r6, r5, lsl #6
     64c:	21060505 	tstcs	r6, r5, lsl #10
     650:	13062605 	movwne	r2, #26117	; 0x6605
     654:	061f0705 	ldreq	r0, [pc], -r5, lsl #14
     658:	06260521 	strteq	r0, [r6], -r1, lsr #10
     65c:	1d313915 			; <UNDEFINED> instruction: 0x1d313915
     660:	21060705 	tstcs	r6, r5, lsl #14
     664:	16062705 	strne	r2, [r6], -r5, lsl #14
     668:	052e3305 	streq	r3, [lr, #-773]!	; 0xfffffcfb
     66c:	07052a2e 	streq	r2, [r5, -lr, lsr #20]
     670:	13133006 	tstne	r3, #6
     674:	01063305 	tsteq	r6, r5, lsl #6
     678:	052e2705 	streq	r2, [lr, #-1797]!	; 0xfffff8fb
     67c:	27053017 	smladcs	r5, r7, r0, r3
     680:	0605051e 			; <UNDEFINED> instruction: 0x0605051e
     684:	06170530 			; <UNDEFINED> instruction: 0x06170530
     688:	06050501 	streq	r0, [r5], -r1, lsl #10
     68c:	2006012f 	andcs	r0, r6, pc, lsr #2
     690:	f7065605 			; <UNDEFINED> instruction: 0xf7065605
     694:	13130305 	tstne	r3, #335544320	; 0x14000000
     698:	10065605 	andne	r5, r6, r5, lsl #12
     69c:	05240305 	streq	r0, [r4, #-773]!	; 0xfffffcfb
     6a0:	03052c09 	movweq	r2, #23561	; 0x5c09
     6a4:	06013006 	streq	r3, [r1], -r6
     6a8:	2078036e 	rsbscs	r0, r8, lr, ror #6
     6ac:	a0019106 	andge	r9, r1, r6, lsl #2
     6b0:	01060c05 	tsteq	r6, r5, lsl #24
     6b4:	21060305 	tstcs	r6, r5, lsl #6
     6b8:	2e061413 	cfmvdlrcs	mvd6, r1
     6bc:	19052f06 	stmdbne	r5, {r1, r2, r8, r9, sl, fp, sp}
     6c0:	061d0559 			; <UNDEFINED> instruction: 0x061d0559
     6c4:	31120501 	tstcc	r2, r1, lsl #10
     6c8:	1b07052e 	blne	1c1b88 <_Min_Stack_Size+0x1c1788>
     6cc:	35060305 	strcc	r0, [r6, #-773]	; 0xfffffcfb
     6d0:	2e061205 	cdpcs	2, 0, cr1, cr6, cr5, {0}
     6d4:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
     6d8:	05053c06 	streq	r3, [r5, #-3078]	; 0xfffff3fa
     6dc:	2106742e 	tstcs	r6, lr, lsr #8
     6e0:	01062305 	tsteq	r6, r5, lsl #6
     6e4:	21060505 	tstcs	r6, r5, lsl #10
     6e8:	01062305 	tsteq	r6, r5, lsl #6
     6ec:	21060505 	tstcs	r6, r5, lsl #10
     6f0:	06019f01 	streq	r9, [r1], -r1, lsl #30
     6f4:	05900d03 	ldreq	r0, [r0, #3331]	; 0xd03
     6f8:	05220603 	streq	r0, [r2, #-1539]!	; 0xfffff9fd
     6fc:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
     700:	1405230c 	strne	r2, [r5], #-780	; 0xfffffcf4
     704:	0603052b 	streq	r0, [r3], -fp, lsr #10
     708:	0614052f 	ldreq	r0, [r4], -pc, lsr #10
     70c:	220c0501 	andcs	r0, ip, #4194304	; 0x400000
     710:	051e1405 	ldreq	r1, [lr, #-1029]	; 0xfffffbfb
     714:	05300603 	ldreq	r0, [r0, #-1539]!	; 0xfffff9fd
     718:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
     71c:	64030619 	strvs	r0, [r3], #-1561	; 0xfffff9e7
     720:	061d0520 	ldreq	r0, [sp], -r0, lsr #10
     724:	0e052e01 	cdpeq	14, 0, cr2, cr5, cr1, {0}
     728:	12052106 	andne	r2, r5, #-2147483647	; 0x80000001
     72c:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
     730:	0a030605 	beq	c1f4c <_Min_Stack_Size+0xc1b4c>
     734:	06230520 	strteq	r0, [r3], -r0, lsr #10
     738:	06050501 	streq	r0, [r5], -r1, lsl #10
     73c:	06070521 	streq	r0, [r7], -r1, lsr #10
     740:	1f230513 	svcne	0x00230513
     744:	21060505 	tstcs	r6, r5, lsl #10
     748:	13064705 	movwne	r4, #26373	; 0x6705
     74c:	061f0705 	ldreq	r0, [pc], -r5, lsl #14
     750:	06470521 	strbeq	r0, [r7], -r1, lsr #10
     754:	3c260501 	cfstr32cc	mvfx0, [r6], #-4
     758:	4b060705 	blmi	182374 <_Min_Stack_Size+0x181f74>
     75c:	01065005 	tsteq	r6, r5
     760:	05324905 	ldreq	r4, [r2, #-2309]!	; 0xfffff6fb
     764:	05056627 	streq	r6, [r5, #-1575]	; 0xfffff9d9
     768:	9f016806 	svcls	0x00016806
     76c:	99070501 	stmdbls	r7, {r0, r8, sl}
     770:	01064705 	tsteq	r6, r5, lsl #14
     774:	053c2605 	ldreq	r2, [ip, #-1541]!	; 0xfffff9fb
     778:	134b0607 	movtne	r0, #46599	; 0xb607
     77c:	01065505 	tsteq	r6, r5, lsl #10
     780:	03061905 	movweq	r1, #26885	; 0x6905
     784:	0305ac0c 	movweq	sl, #23564	; 0x5c0c
     788:	06190513 			; <UNDEFINED> instruction: 0x06190513
     78c:	21090511 	tstcs	r9, r1, lsl r5
     790:	063c0505 	ldrteq	r0, [ip], -r5, lsl #10
     794:	0f052f2f 	svceq	0x00052f2f
     798:	0e050106 	adfeqs	f0, f5, f6
     79c:	1f0f052f 	svcne	0x000f052f
     7a0:	2f060505 	svccs	0x00060505
     7a4:	01060e05 	tsteq	r6, r5, lsl #28
     7a8:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
     7ac:	01061005 	tsteq	r6, r5
     7b0:	05222405 	streq	r2, [r2, #-1029]!	; 0xfffffbfb
     7b4:	05051e10 	streq	r1, [r5, #-3600]	; 0xfffff1f0
     7b8:	09052f06 	stmdbeq	r5, {r1, r2, r8, r9, sl, fp, sp}
     7bc:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     7c0:	07051110 	smladeq	r5, r0, r1, r1
     7c4:	03040200 	movweq	r0, #16896	; 0x4200
     7c8:	05053006 	streq	r3, [r5, #-6]
     7cc:	03040200 	movweq	r0, #16896	; 0x4200
     7d0:	24051f06 	strcs	r1, [r5], #-3846	; 0xfffff0fa
     7d4:	03040200 	movweq	r0, #16896	; 0x4200
     7d8:	0014052f 	andseq	r0, r4, pc, lsr #10
     7dc:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
     7e0:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
     7e4:	062d0304 	strteq	r0, [sp], -r4, lsl #6
     7e8:	060f0524 	streq	r0, [pc], -r4, lsr #10
     7ec:	3d050501 	cfstr32cc	mvfx0, [r5, #-4]
     7f0:	051f0f05 	ldreq	r0, [pc, #-3845]	; fffff8f3 <BootRAM+0xef70094>
     7f4:	592f0605 	stmdbpl	pc!, {r0, r2, r9, sl}	; <UNPREDICTABLE>
     7f8:	060d0567 	streq	r0, [sp], -r7, ror #10
     7fc:	06050501 	streq	r0, [r5], -r1, lsl #10
     800:	3103052f 	tstcc	r3, pc, lsr #10
     804:	01060905 	tsteq	r6, r5, lsl #18
     808:	063c0505 	ldrteq	r0, [ip], -r5, lsl #10
     80c:	0618052f 	ldreq	r0, [r8], -pc, lsr #10
     810:	2e0d0501 	cfsh32cs	mvfx0, mvfx13, #1
     814:	2f060505 	svccs	0x00060505
     818:	01060805 	tsteq	r6, r5, lsl #16
     81c:	06660705 	strbteq	r0, [r6], -r5, lsl #14
     820:	0611052f 	ldreq	r0, [r1], -pc, lsr #10
     824:	20070501 	andcs	r0, r7, r1, lsl #10
     828:	05014b06 	streq	r4, [r1, #-2822]	; 0xfffff4fa
     82c:	08058405 	stmdaeq	r5, {r0, r2, sl, pc}
     830:	07050106 	streq	r0, [r5, -r6, lsl #2]
     834:	052f0620 	streq	r0, [pc, #-1568]!	; 21c <_Min_Heap_Size+0x21c>
     838:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
     83c:	59062007 	stmdbpl	r6, {r0, r1, r2, sp}
     840:	05820601 	streq	r0, [r2, #1537]	; 0x601
     844:	05160603 	ldreq	r0, [r6, #-1539]	; 0xfffff9fd
     848:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
     84c:	2f063c05 	svccs	0x00063c05
     850:	060f052f 	streq	r0, [pc], -pc, lsr #10
     854:	06050501 	streq	r0, [r5], -r1, lsl #10
     858:	060f0567 	streq	r0, [pc], -r7, ror #10
     85c:	06030501 	streq	r0, [r3], -r1, lsl #10
     860:	0609054d 	streq	r0, [r9], -sp, asr #10
     864:	3c050501 	cfstr32cc	mvfx0, [r5], {1}
     868:	0f052f06 	svceq	0x00052f06
     86c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     870:	0f058306 	svceq	0x00058306
     874:	01050106 	tsteq	r5, r6, lsl #2
     878:	0643054c 	strbeq	r0, [r3], -ip, asr #10
     87c:	05f20f03 	ldrbeq	r0, [r2, #3843]!	; 0xf03
     880:	43051303 	movwmi	r1, #21251	; 0x5303
     884:	03051106 	movweq	r1, #20742	; 0x5106
     888:	1b330526 	blne	cc1d28 <_Min_Stack_Size+0xcc1928>
     88c:	05201005 	streq	r1, [r0, #-5]!
     890:	054b0603 	strbeq	r0, [fp, #-1539]	; 0xfffff9fd
     894:	0515063f 	ldreq	r0, [r5, #-1599]	; 0xfffff9c1
     898:	38051d17 	stmdacc	r5, {r0, r1, r2, r4, r8, sl, fp, ip}
     89c:	470c0523 	strmi	r0, [ip, -r3, lsr #10]
     8a0:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
     8a4:	06380513 			; <UNDEFINED> instruction: 0x06380513
     8a8:	06030501 	streq	r0, [r3], -r1, lsl #10
     8ac:	01070521 	tsteq	r7, r1, lsr #10
     8b0:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
     8b4:	01060104 	tsteq	r6, r4, lsl #2
     8b8:	14063f06 	strne	r3, [r6], #-3846	; 0xfffff0fa
     8bc:	3a100520 	bcc	401d44 <_Min_Stack_Size+0x401944>
     8c0:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
     8c4:	053c0601 	ldreq	r0, [ip, #-1537]!	; 0xfffff9ff
     8c8:	05059101 	streq	r9, [r5, #-257]	; 0xfffffeff
     8cc:	03040200 	movweq	r0, #16896	; 0x4200
     8d0:	11051b06 	tstne	r5, r6, lsl #22
     8d4:	03040200 	movweq	r0, #16896	; 0x4200
     8d8:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
     8dc:	004a0304 	subeq	r0, sl, r4, lsl #6
     8e0:	20030402 	andcs	r0, r3, r2, lsl #8
     8e4:	00062205 	andeq	r2, r6, r5, lsl #4
     8e8:	07b40205 	ldreq	r0, [r4, r5, lsl #4]!
     8ec:	86030800 	strhi	r0, [r3], -r0, lsl #16
     8f0:	0305017e 	movweq	r0, #20862	; 0x517e
     8f4:	06220513 			; <UNDEFINED> instruction: 0x06220513
     8f8:	210b0511 	tstcs	fp, r1, lsl r5
     8fc:	05202405 	streq	r2, [r0, #-1029]!	; 0xfffffbfb
     900:	2405200b 	strcs	r2, [r5], #-11
     904:	2005052e 	andcs	r0, r5, lr, lsr #10
     908:	10053d06 	andne	r3, r5, r6, lsl #26
     90c:	03050106 	movweq	r0, #20742	; 0x5106
     910:	08055b06 	stmdaeq	r5, {r1, r2, r8, r9, fp, ip, lr}
     914:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     918:	06030520 	streq	r0, [r3], -r0, lsr #10
     91c:	060e054b 	streq	r0, [lr], -fp, asr #10
     920:	20050501 	andcs	r0, r5, r1, lsl #10
     924:	21060305 	tstcs	r6, r5, lsl #6
     928:	01060c05 	tsteq	r6, r5, lsl #24
     92c:	21060305 	tstcs	r6, r5, lsl #6
     930:	03060304 	movweq	r0, #25348	; 0x6304
     934:	580100d9 	stmdapl	r1, {r0, r3, r4, r6, r7}
     938:	03060104 	movweq	r0, #24836	; 0x6104
     93c:	04017fa8 	streq	r7, [r1], #-4008	; 0xfffff058
     940:	03140503 	tsteq	r4, #12582912	; 0xc00000
     944:	050100d7 	streq	r0, [r1, #-215]	; 0xffffff29
     948:	20061303 	andcs	r1, r6, r3, lsl #6
     94c:	0601043c 			; <UNDEFINED> instruction: 0x0601043c
     950:	017faa03 	cmneq	pc, r3, lsl #20
     954:	15060505 	strne	r0, [r6, #-1285]	; 0xfffffafb
     958:	051d0d05 	ldreq	r0, [sp, #-3333]	; 0xfffff2fb
     95c:	143d0603 	ldrtne	r0, [sp], #-1539	; 0xfffff9fd
     960:	13060d05 	movwne	r0, #27909	; 0x6d05
     964:	052b0b05 	streq	r0, [fp, #-2821]!	; 0xfffff4fb
     968:	05310605 	ldreq	r0, [r1, #-1541]!	; 0xfffff9fb
     96c:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     970:	2d052201 	sfmcs	f2, 4, [r5, #-4]
     974:	01f00306 	mvnseq	r0, r6, lsl #6
     978:	13030566 	movwne	r0, #13670	; 0x3566
     97c:	11062d05 	tstne	r6, r5, lsl #26
     980:	05213305 	streq	r3, [r1, #-773]!	; 0xfffffcfb
     984:	03052010 	movweq	r2, #20496	; 0x5010
     988:	2d054b06 	vstrcs	d4, [r5, #-24]	; 0xffffffe8
     98c:	11051006 	tstne	r5, r6
     990:	03052022 	movweq	r2, #20514	; 0x5022
     994:	05052f06 	streq	r2, [r5, #-3846]	; 0xfffff0fa
     998:	03050106 	movweq	r0, #20742	; 0x5106
     99c:	05132106 	ldreq	r2, [r3, #-262]	; 0xfffffefa
     9a0:	0501063e 	streq	r0, [r1, #-1598]	; 0xfffff9c2
     9a4:	37051f0f 	strcc	r1, [r5, -pc, lsl #30]
     9a8:	06030521 	streq	r0, [r3], -r1, lsr #10
     9ac:	01070559 	tsteq	r7, r9, asr r5
     9b0:	20100106 	andscs	r0, r0, r6, lsl #2
     9b4:	00050520 	andeq	r0, r5, r0, lsr #10
     9b8:	06030402 	streq	r0, [r3], -r2, lsl #8
     9bc:	000e0531 	andeq	r0, lr, r1, lsr r5
     9c0:	06030402 	streq	r0, [r3], -r2, lsl #8
     9c4:	00030501 	andeq	r0, r3, r1, lsl #10
     9c8:	2d030402 	cfstrscs	mvf0, [r3, #-8]
     9cc:	02000c05 	andeq	r0, r0, #1280	; 0x500
     9d0:	05210304 	streq	r0, [r1, #-772]!	; 0xfffffcfc
     9d4:	04020003 	streq	r0, [r2], #-3
     9d8:	23062d03 	movwcs	r2, #27907	; 0x6d03
     9dc:	66200601 	strtvs	r0, [r0], -r1, lsl #12
     9e0:	01059106 	tsteq	r5, r6, lsl #2
     9e4:	23051306 	movwcs	r1, #21254	; 0x5306
     9e8:	7e8f0306 	cdpvc	3, 8, cr0, cr15, cr6, {0}
     9ec:	13030520 	movwne	r0, #13600	; 0x3520
     9f0:	06230513 			; <UNDEFINED> instruction: 0x06230513
     9f4:	16052210 			; <UNDEFINED> instruction: 0x16052210
     9f8:	3b23053d 	blcc	8c1ef4 <_Min_Stack_Size+0x8c1af4>
     9fc:	2f060305 	svccs	0x00060305
     a00:	06050514 			; <UNDEFINED> instruction: 0x06050514
     a04:	053d0601 	ldreq	r0, [sp, #-1537]!	; 0xfffff9ff
     a08:	2e010607 	cfmadd32cs	mvax0, mvfx0, mvfx1, mvfx7
     a0c:	03042f06 	movweq	r2, #20230	; 0x4f06
     a10:	c7031305 	strgt	r1, [r3, -r5, lsl #6]
     a14:	03050100 	movweq	r0, #20736	; 0x5100
     a18:	05010413 	streq	r0, [r1, #-1043]	; 0xfffffbed
     a1c:	b9030611 	stmdblt	r3, {r0, r4, r9, sl}
     a20:	0304017f 	movweq	r0, #16767	; 0x417f
     a24:	c7030a05 	strgt	r0, [r3, -r5, lsl #20]
     a28:	2e2e2000 	cdpcs	0, 2, cr2, cr14, cr0, {0}
     a2c:	07050104 	streq	r0, [r5, -r4, lsl #2]
     a30:	7fb90306 	svcvc	0x00b90306
     a34:	06110501 	ldreq	r0, [r1], -r1, lsl #10
     a38:	06070501 	streq	r0, [r7], -r1, lsl #10
     a3c:	03030521 	movweq	r0, #13601	; 0x3521
     a40:	1d05010a 	stfnes	f0, [r5, #-40]	; 0xffffffd8
     a44:	0b050106 	bleq	140e64 <_Min_Stack_Size+0x140a64>
     a48:	06030520 	streq	r0, [r3], -r0, lsr #10
     a4c:	06050530 			; <UNDEFINED> instruction: 0x06050530
     a50:	05300601 	ldreq	r0, [r0, #-1537]!	; 0xfffff9ff
     a54:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
     a58:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
     a5c:	06010607 	streq	r0, [r1], -r7, lsl #12
     a60:	061a0521 	ldreq	r0, [sl], -r1, lsr #10
     a64:	20070501 	andcs	r0, r7, r1, lsl #10
     a68:	03060b05 	movweq	r0, #27397	; 0x6b05
     a6c:	0304580a 	movweq	r5, #18442	; 0x480a
     a70:	22031405 	andcs	r1, r3, #83886080	; 0x5000000
     a74:	13030501 	movwne	r0, #13569	; 0x3501
     a78:	043c2e06 	ldrteq	r2, [ip], #-3590	; 0xfffff1fa
     a7c:	06070501 	streq	r0, [r7], -r1, lsl #10
     a80:	05014503 	streq	r4, [r1, #-1283]	; 0xfffffafd
     a84:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
     a88:	1003060b 	andne	r0, r3, fp, lsl #12
     a8c:	06170558 			; <UNDEFINED> instruction: 0x06170558
     a90:	220b0501 	andcs	r0, fp, #4194304	; 0x400000
     a94:	051e1705 	ldreq	r1, [lr, #-1797]	; 0xfffff8fb
     a98:	0621060b 	strteq	r0, [r1], -fp, lsl #12
     a9c:	3b140513 	blcc	501ef0 <_Min_Stack_Size+0x501af0>
     aa0:	2f060b05 	svccs	0x00060b05
     aa4:	0305052f 	movweq	r0, #21807	; 0x552f
     aa8:	1405010f 	strne	r0, [r5], #-271	; 0xfffffef1
     aac:	07050106 	streq	r0, [r5, -r6, lsl #2]
     ab0:	03030520 	movweq	r0, #13600	; 0x3520
     ab4:	07052e4e 	streq	r2, [r5, -lr, asr #28]
     ab8:	05203203 	streq	r3, [r0, #-515]!	; 0xfffffdfd
     abc:	05200625 	streq	r0, [r0, #-1573]!	; 0xfffff9db
     ac0:	0501062a 	streq	r0, [r1, #-1578]	; 0xfffff9d6
     ac4:	053d0605 	ldreq	r0, [sp, #-1541]!	; 0xfffff9fb
     ac8:	014a0314 	cmpeq	sl, r4, lsl r3
     acc:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
     ad0:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     ad4:	053d0603 	ldreq	r0, [sp, #-1539]!	; 0xfffff9fd
     ad8:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
     adc:	062f0603 	strteq	r0, [pc], -r3, lsl #12
     ae0:	0301052e 	movweq	r0, #5422	; 0x152e
     ae4:	050100c7 	streq	r0, [r1, #-199]	; 0xffffff39
     ae8:	6403060b 	strvs	r0, [r3], #-1547	; 0xfffff9f5
     aec:	0503042e 	streq	r0, [r3, #-1070]	; 0xfffffbd2
     af0:	011f0314 	tsteq	pc, r4, lsl r3	; <UNPREDICTABLE>
     af4:	06130305 	ldreq	r0, [r3], -r5, lsl #6
     af8:	0501044a 	streq	r0, [r1, #-1098]	; 0xfffffbb6
     afc:	64030605 	strvs	r0, [r3], #-1541	; 0xfffff9fb
     b00:	060b0501 	streq	r0, [fp], -r1, lsl #10
     b04:	05052001 	streq	r2, [r5, #-1]
     b08:	0e052106 	adfeqs	f2, f5, f6
     b0c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     b10:	490e0521 	stmdbmi	lr, {r0, r5, r8, sl}
     b14:	2f060505 	svccs	0x00060505
     b18:	06202e06 	strteq	r2, [r0], -r6, lsl #28
     b1c:	06070517 			; <UNDEFINED> instruction: 0x06070517
     b20:	05210601 	streq	r0, [r1, #-1537]!	; 0xfffff9ff
     b24:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
     b28:	2f062009 	svccs	0x00062009
     b2c:	01061205 	tsteq	r6, r5, lsl #4
     b30:	2f060905 	svccs	0x00060905
     b34:	14050304 	strne	r0, [r5], #-772	; 0xfffffcfc
     b38:	05011103 	streq	r1, [r1, #-259]	; 0xfffffefd
     b3c:	01061303 	tsteq	r6, r3, lsl #6
     b40:	2c050104 	stfcss	f0, [r5], {4}
     b44:	017a0306 	cmneq	sl, r6, lsl #6
     b48:	14050304 	strne	r0, [r5], #-772	; 0xfffffcfc
     b4c:	13030517 	movwne	r0, #13591	; 0x3517
     b50:	01044a06 	tsteq	r4, r6, lsl #20
     b54:	03060d05 	movweq	r0, #27909	; 0x6d05
     b58:	0f050170 	svceq	0x00050170
     b5c:	09050106 	stmdbeq	r5, {r1, r2, r8}
     b60:	17052f06 	strne	r2, [r5, -r6, lsl #30]
     b64:	09050106 	stmdbeq	r5, {r1, r2, r8}
     b68:	03042f06 	movweq	r2, #20230	; 0x4f06
     b6c:	0d031405 	cfstrseq	mvf1, [r3, #-20]	; 0xffffffec
     b70:	13030501 	movwne	r0, #13569	; 0x3501
     b74:	01042006 	tsteq	r4, r6
     b78:	03060505 	movweq	r0, #25861	; 0x6505
     b7c:	09050176 	stmdbeq	r5, {r1, r2, r4, r5, r6, r8}
     b80:	07050106 	streq	r0, [r5, -r6, lsl #2]
     b84:	01210658 			; <UNDEFINED> instruction: 0x01210658
     b88:	05ae0505 	streq	r0, [lr, #1285]!	; 0x505
     b8c:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
     b90:	0f052f07 	svceq	0x00052f07
     b94:	2107051f 	tstcs	r7, pc, lsl r5
     b98:	051f0f05 	ldreq	r0, [pc, #-3845]	; fffffc9b <BootRAM+0xef7043c>
     b9c:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
     ba0:	02010607 	andeq	r0, r1, #7340032	; 0x700000
     ba4:	0101000f 	tsteq	r1, pc
     ba8:	000003fb 	strdeq	r0, [r0], -fp
     bac:	00f20003 	rscseq	r0, r2, r3
     bb0:	01020000 	mrseq	r0, (UNDEF: 2)
     bb4:	000d0efb 	strdeq	r0, [sp], -fp
     bb8:	01010101 	tsteq	r1, r1, lsl #2
     bbc:	01000000 	mrseq	r0, (UNDEF: 0)
     bc0:	73010000 	movwvc	r0, #4096	; 0x1000
     bc4:	2f006372 	svccs	0x00006372
     bc8:	2f727375 	svccs	0x00727375
     bcc:	2f62696c 	svccs	0x0062696c
     bd0:	2f636367 	svccs	0x00636367
     bd4:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     bd8:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     bdc:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     be0:	2e382f69 	cdpcs	15, 3, cr2, cr8, cr9, {3}
     be4:	2f312e33 	svccs	0x00312e33
     be8:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     bec:	00656475 	rsbeq	r6, r5, r5, ror r4
     bf0:	2f62696c 	svccs	0x0062696c
     bf4:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     bf8:	00656475 	rsbeq	r6, r5, r5, ror r4
     bfc:	7273752f 	rsbsvc	r7, r3, #197132288	; 0xbc00000
     c00:	636e692f 	cmnvs	lr, #770048	; 0xbc000
     c04:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     c08:	77656e2f 	strbvc	r6, [r5, -pc, lsr #28]!
     c0c:	2f62696c 	svccs	0x0062696c
     c10:	00737973 	rsbseq	r7, r3, r3, ror r9
     c14:	62737500 	rsbsvs	r7, r3, #0, 10
     c18:	616c635f 	cmnvs	ip, pc, asr r3
     c1c:	685f7373 	ldmdavs	pc, {r0, r1, r4, r5, r6, r8, r9, ip, sp, lr}^	; <UNPREDICTABLE>
     c20:	632e6469 			; <UNDEFINED> instruction: 0x632e6469
     c24:	00000100 	andeq	r0, r0, r0, lsl #2
     c28:	5f627375 	svcpl	0x00627375
     c2c:	2e62696c 	vnmulcs.f16	s13, s4, s25	; <UNPREDICTABLE>
     c30:	00010068 	andeq	r0, r1, r8, rrx
     c34:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
     c38:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
     c3c:	00020068 	andeq	r0, r2, r8, rrx
     c40:	726f6300 	rsbvc	r6, pc, #0, 6
     c44:	6d635f65 	stclvs	15, cr5, [r3, #-404]!	; 0xfffffe6c
     c48:	00682e33 	rsbeq	r2, r8, r3, lsr lr
     c4c:	73000003 	movwvc	r0, #3
     c50:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
     c54:	74735f6d 	ldrbtvc	r5, [r3], #-3949	; 0xfffff093
     c58:	6c32336d 	ldcvs	3, cr3, [r2], #-436	; 0xfffffe4c
     c5c:	2e787831 	mrccs	8, 3, r7, cr8, cr1, {1}
     c60:	00030068 	andeq	r0, r3, r8, rrx
     c64:	6d747300 	ldclvs	3, cr7, [r4, #-0]
     c68:	316c3233 	cmncc	ip, r3, lsr r2
     c6c:	63783135 	cmnvs	r8, #1073741837	; 0x4000000d
     c70:	0300682e 	movweq	r6, #2094	; 0x82e
     c74:	74730000 	ldrbtvc	r0, [r3], #-0
     c78:	66656464 	strbtvs	r6, [r5], -r4, ror #8
     c7c:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
     c80:	745f0000 	ldrbvc	r0, [pc], #-0	; c88 <_Min_Stack_Size+0x888>
     c84:	73657079 	cmnvc	r5, #121	; 0x79
     c88:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
     c8c:	65720000 	ldrbvs	r0, [r2, #-0]!
     c90:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
     c94:	00040068 	andeq	r0, r4, r8, rrx
     c98:	636f6c00 	cmnvs	pc, #0, 24
     c9c:	00682e6b 	rsbeq	r2, r8, fp, ror #28
     ca0:	00000004 	andeq	r0, r0, r4
     ca4:	05002405 	streq	r2, [r0, #-1029]	; 0xfffffbfb
     ca8:	00098402 	andeq	r8, r9, r2, lsl #8
     cac:	01da0308 	bicseq	r0, sl, r8, lsl #6
     cb0:	13010501 	movwne	r0, #5377	; 0x1501
     cb4:	05222405 	streq	r2, [r2, #-1029]!	; 0xfffffbfb
     cb8:	05131303 	ldreq	r1, [r3, #-771]	; 0xfffffcfd
     cbc:	04100624 	ldreq	r0, [r0], #-1572	; 0xfffff9dc
     cc0:	06130502 	ldreq	r0, [r3], -r2, lsl #10
     cc4:	05205603 	streq	r5, [r0, #-1539]!	; 0xfffff9fd
     cc8:	0a051303 	beq	1458dc <_Min_Stack_Size+0x1454dc>
     ccc:	20200106 	eorcs	r0, r0, r6, lsl #2
     cd0:	0501042e 	streq	r0, [r1, #-1070]	; 0xfffffbd2
     cd4:	2c030603 	stccs	6, cr0, [r3], {3}
     cd8:	06090501 	streq	r0, [r9], -r1, lsl #10
     cdc:	06280501 	strteq	r0, [r8], -r1, lsl #10
     ce0:	0505013c 	streq	r0, [r5, #-316]	; 0xfffffec4
     ce4:	28050106 	stmdacs	r5, {r1, r2, r8}
     ce8:	063b052e 	ldrteq	r0, [fp], -lr, lsr #10
     cec:	0505013c 	streq	r0, [r5, #-316]	; 0xfffffec4
     cf0:	27052f06 	strcs	r2, [r5, -r6, lsl #30]
     cf4:	3c3a0520 	cfldr32cc	mvfx0, [sl], #-128	; 0xffffff80
     cf8:	052d3b05 	streq	r3, [sp, #-2821]!	; 0xfffff4fb
     cfc:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
     d00:	05010127 	streq	r0, [r1, #-295]	; 0xfffffed9
     d04:	0501013a 	streq	r0, [r1, #-314]	; 0xfffffec6
     d08:	05210601 	streq	r0, [r1, #-1537]!	; 0xfffff9ff
     d0c:	05000650 	streq	r0, [r0, #-1616]	; 0xfffff9b0
     d10:	0009c002 	andeq	ip, r9, r2
     d14:	01450308 	cmpeq	r5, r8, lsl #6
     d18:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
     d1c:	05140807 	ldreq	r0, [r4, #-2055]	; 0xfffff7f9
     d20:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     d24:	052f0607 	streq	r0, [pc, #-1543]!	; 725 <_Min_Stack_Size+0x325>
     d28:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     d2c:	201b0320 	andscs	r0, fp, r0, lsr #6
     d30:	21060705 	tstcs	r6, r5, lsl #14
     d34:	16060105 	strne	r0, [r6], -r5, lsl #2
     d38:	03060705 	movweq	r0, #26373	; 0x6705
     d3c:	0d052063 	stceq	0, cr2, [r5, #-396]	; 0xfffffe74
     d40:	07050106 	streq	r0, [r5, -r6, lsl #2]
     d44:	0d052f06 	stceq	15, cr2, [r5, #-24]	; 0xffffffe8
     d48:	07050106 	streq	r0, [r5, -r6, lsl #2]
     d4c:	0d053106 	stfeqs	f3, [r5, #-24]	; 0xffffffe8
     d50:	07050106 	streq	r0, [r5, -r6, lsl #2]
     d54:	0d052f06 	stceq	15, cr2, [r5, #-24]	; 0xffffffe8
     d58:	07050106 	streq	r0, [r5, -r6, lsl #2]
     d5c:	20063106 	andcs	r3, r6, r6, lsl #2
     d60:	68060b05 	stmdavs	r6, {r0, r2, r8, r9, fp}
     d64:	01061105 	tsteq	r6, r5, lsl #2
     d68:	05200903 	streq	r0, [r0, #-2307]!	; 0xfffff6fd
     d6c:	0521060b 	streq	r0, [r1, #-1547]!	; 0xfffff9f5
     d70:	20051607 	andcs	r1, r5, r7, lsl #12
     d74:	0b050106 	bleq	141194 <_Min_Stack_Size+0x140d94>
     d78:	3c750306 	ldclcc	3, cr0, [r5], #-24	; 0xffffffe8
     d7c:	01061105 	tsteq	r6, r5, lsl #2
     d80:	31060b05 	tstcc	r6, r5, lsl #22
     d84:	01061105 	tsteq	r6, r5, lsl #2
     d88:	31060b05 	tstcc	r6, r5, lsl #22
     d8c:	01061105 	tsteq	r6, r5, lsl #2
     d90:	00064705 	andeq	r4, r6, r5, lsl #14
     d94:	0a3c0205 	beq	f015b0 <_Min_Stack_Size+0xf011b0>
     d98:	0c030800 	stceq	8, cr0, [r3], {-0}
     d9c:	13030501 	movwne	r0, #13569	; 0x3501
     da0:	01060505 	tsteq	r6, r5, lsl #10
     da4:	07053d06 	streq	r3, [r5, -r6, lsl #26]
     da8:	3d060106 	stfccs	f0, [r6, #-24]	; 0xffffffe8
     dac:	01060905 	tsteq	r6, r5, lsl #18
     db0:	0f054b06 	svceq	0x00054b06
     db4:	10050106 	andne	r0, r5, r6, lsl #2
     db8:	1e0f0522 	cfsh32ne	mvfx0, mvfx15, #18
     dbc:	21060905 	tstcs	r6, r5, lsl #18
     dc0:	01060f05 	tsteq	r6, r5, lsl #30
     dc4:	2f060905 	svccs	0x00060905
     dc8:	01061005 	tsteq	r6, r5
     dcc:	05240a05 	streq	r0, [r4, #-2565]!	; 0xfffff5fb
     dd0:	16052101 	strne	r2, [r5], -r1, lsl #2
     dd4:	3c0c0306 	stccc	3, cr0, [ip], {6}
     dd8:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
     ddc:	05110616 	ldreq	r0, [r1, #-1558]	; 0xfffff9ea
     de0:	67062103 	strvs	r2, [r6, -r3, lsl #2]
     de4:	13060105 	movwne	r0, #24837	; 0x6105
     de8:	052d0305 	streq	r0, [sp, #-773]!	; 0xfffffcfb
     dec:	05000617 	streq	r0, [r0, #-1559]	; 0xfffff9e9
     df0:	000a8c02 	andeq	r8, sl, r2, lsl #24
     df4:	012d0308 			; <UNDEFINED> instruction: 0x012d0308
     df8:	00130305 	andseq	r0, r3, r5, lsl #6
     dfc:	06010402 	streq	r0, [r1], -r2, lsl #8
     e00:	21010501 	tstcs	r1, r1, lsl #10
     e04:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
     e08:	1f060204 	svcne	0x00060204
     e0c:	02000b05 	andeq	r0, r0, #5120	; 0x1400
     e10:	20060204 	andcs	r0, r6, r4, lsl #4
     e14:	02040200 	andeq	r0, r4, #0, 4
     e18:	06160520 	ldreq	r0, [r6], -r0, lsr #10
     e1c:	96020500 	strls	r0, [r2], -r0, lsl #10
     e20:	1508000a 	strne	r0, [r8, #-10]
     e24:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
     e28:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     e2c:	06051f16 			; <UNDEFINED> instruction: 0x06051f16
     e30:	20050521 	andcs	r0, r5, r1, lsr #10
     e34:	02001b05 	andeq	r1, r0, #5120	; 0x1400
     e38:	2f060104 	svccs	0x00060104
     e3c:	02000c05 	andeq	r0, r0, #1280	; 0x500
     e40:	01060104 	tsteq	r6, r4, lsl #2
     e44:	02000a05 	andeq	r0, r0, #20480	; 0x5000
     e48:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
     e4c:	132f0605 			; <UNDEFINED> instruction: 0x132f0605
     e50:	19051313 	stmdbne	r5, {r0, r1, r4, r8, r9, ip}
     e54:	15050f06 	strne	r0, [r5, #-3846]	; 0xfffff0fa
     e58:	2c190522 	cfldr32cs	mvfx0, [r9], {34}	; 0x22
     e5c:	03050204 	movweq	r0, #20996	; 0x5204
     e60:	207f9103 	rsbscs	r9, pc, r3, lsl #2
     e64:	19050104 	stmdbne	r5, {r2, r8}
     e68:	2000ef03 	andcs	lr, r0, r3, lsl #30
     e6c:	2f5a1505 	svccs	0x005a1505
     e70:	03050204 	movweq	r0, #20996	; 0x5204
     e74:	207f8e03 	rsbscs	r8, pc, r3, lsl #28
     e78:	15050104 	strne	r0, [r5, #-260]	; 0xfffffefc
     e7c:	2e00f103 	mvfcss	f7, f3
     e80:	06050521 	streq	r0, [r5], -r1, lsr #10
     e84:	05020421 	streq	r0, [r2, #-1057]	; 0xfffffbdf
     e88:	7f8c0314 	svcvc	0x008c0314
     e8c:	13030501 	movwne	r0, #13569	; 0x3501
     e90:	01042e06 	tsteq	r4, r6, lsl #28
     e94:	03060505 	movweq	r0, #25861	; 0x6505
     e98:	3d0100f4 	stccc	0, cr0, [r1, #-976]	; 0xfffffc30
     e9c:	01061b05 	tsteq	r6, r5, lsl #22
     ea0:	03050204 	movweq	r0, #20996	; 0x5204
     ea4:	207f8b03 	rsbscs	r8, pc, r3, lsl #22
     ea8:	1b050104 	blne	1412c0 <_Min_Stack_Size+0x140ec0>
     eac:	3c00f503 	cfstr32cc	mvfx15, [r0], {3}
     eb0:	21060505 	tstcs	r6, r5, lsl #10
     eb4:	14050204 	strne	r0, [r5], #-516	; 0xfffffdfc
     eb8:	017f8903 	cmneq	pc, r3, lsl #18
     ebc:	06130305 	ldreq	r0, [r3], -r5, lsl #6
     ec0:	0601042e 	streq	r0, [r1], -lr, lsr #8
     ec4:	0100f803 	tsteq	r0, r3, lsl #16	; <UNPREDICTABLE>
     ec8:	01060605 	tsteq	r6, r5, lsl #12
     ecc:	052e0505 	streq	r0, [lr, #-1285]!	; 0xfffffafb
     ed0:	0402001b 	streq	r0, [r2], #-27	; 0xffffffe5
     ed4:	052f0601 	streq	r0, [pc, #-1537]!	; 8db <_Min_Stack_Size+0x4db>
     ed8:	0402000c 	streq	r0, [r2], #-12
     edc:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     ee0:	0402000a 	streq	r0, [r2], #-10
     ee4:	05052001 	streq	r2, [r5, #-1]
     ee8:	17052f06 	strne	r2, [r5, -r6, lsl #30]
     eec:	02040106 	andeq	r0, r4, #-2147483647	; 0x80000001
     ef0:	86030305 	strhi	r0, [r3], -r5, lsl #6
     ef4:	0104207f 	tsteq	r4, pc, ror r0
     ef8:	fa031705 	blx	c6b14 <_Min_Stack_Size+0xc6714>
     efc:	02042000 	andeq	r2, r4, #0
     f00:	86030305 	strhi	r0, [r3], -r5, lsl #6
     f04:	0104207f 	tsteq	r4, pc, ror r0
     f08:	fa031705 	blx	c6b24 <_Min_Stack_Size+0xc6724>
     f0c:	05052000 	streq	r2, [r5, #-0]
     f10:	18053d06 	stmdane	r5, {r1, r2, r8, sl, fp, ip, sp}
     f14:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     f18:	18052f06 	stmdane	r5, {r1, r2, r8, r9, sl, fp, sp}
     f1c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     f20:	18052f06 	stmdane	r5, {r1, r2, r8, r9, sl, fp, sp}
     f24:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     f28:	18052f06 	stmdane	r5, {r1, r2, r8, r9, sl, fp, sp}
     f2c:	02040106 	andeq	r0, r4, #-2147483647	; 0x80000001
     f30:	82030305 	andhi	r0, r3, #335544320	; 0x14000000
     f34:	0104207f 	tsteq	r4, pc, ror r0
     f38:	fe031805 	vcmla.f16	d1, d3, d5[0], #0
     f3c:	05052000 	streq	r2, [r5, #-0]
     f40:	02042106 	andeq	r2, r4, #-2147483647	; 0x80000001
     f44:	80031405 	andhi	r1, r3, r5, lsl #8
     f48:	0305017f 	movweq	r0, #20863	; 0x517f
     f4c:	042e0613 	strteq	r0, [lr], #-1555	; 0xfffff9ed
     f50:	06050501 	streq	r0, [r5], -r1, lsl #10
     f54:	01018003 	tsteq	r1, r3
     f58:	066e053d 			; <UNDEFINED> instruction: 0x066e053d
     f5c:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
     f60:	7eff0303 	cdpvc	3, 15, cr0, cr15, cr3, {0}
     f64:	05010420 	streq	r0, [r1, #-1056]	; 0xfffffbe0
     f68:	0181036e 	orreq	r0, r1, lr, ror #6
     f6c:	20590520 	subscs	r0, r9, r0, lsr #10
     f70:	05204405 	streq	r4, [r0, #-1029]!	; 0xfffffbfb
     f74:	1a05202f 	bne	149038 <_Min_Stack_Size+0x148c38>
     f78:	06050520 	streq	r0, [r5], -r0, lsr #10
     f7c:	05020422 	streq	r0, [r2, #-1058]	; 0xfffffbde
     f80:	7efc0314 	mrcvc	3, 7, r0, cr12, cr4, {0}
     f84:	13030501 	movwne	r0, #13569	; 0x3501
     f88:	01050104 	tsteq	r5, r4, lsl #2
     f8c:	01850306 	orreq	r0, r5, r6, lsl #6
     f90:	05020420 	streq	r0, [r2, #-1056]	; 0xfffffbe0
     f94:	7efb0303 	cdpvc	3, 15, cr0, cr11, cr3, {0}
     f98:	01043c2e 	tsteq	r4, lr, lsr #24
     f9c:	85030105 	strhi	r0, [r3, #-261]	; 0xfffffefb
     fa0:	09020101 	stmdbeq	r2, {r0, r8}
     fa4:	10010100 	andne	r0, r1, r0, lsl #2
     fa8:	03000001 	movweq	r0, #1
     fac:	00007b00 	andeq	r7, r0, r0, lsl #22
     fb0:	fb010200 	blx	417ba <_Min_Stack_Size+0x413ba>
     fb4:	01000d0e 	tsteq	r0, lr, lsl #26
     fb8:	00010101 	andeq	r0, r1, r1, lsl #2
     fbc:	00010000 	andeq	r0, r1, r0
     fc0:	2e2e0100 	sufcse	f0, f6, f0
     fc4:	2f2e2e2f 	svccs	0x002e2e2f
     fc8:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
     fcc:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
     fd0:	2f2e2e2f 	svccs	0x002e2e2f
     fd4:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
     fd8:	656e2f2e 	strbvs	r2, [lr, #-3886]!	; 0xfffff0d2
     fdc:	62696c77 	rsbvs	r6, r9, #30464	; 0x7700
     fe0:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
     fe4:	696d2f63 	stmdbvs	sp!, {r0, r1, r5, r6, r8, r9, sl, fp, sp}^
     fe8:	2f006373 	svccs	0x00006373
     fec:	2f727375 	svccs	0x00727375
     ff0:	2f62696c 	svccs	0x0062696c
     ff4:	2f636367 	svccs	0x00636367
     ff8:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     ffc:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    1000:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    1004:	2e382f69 	cdpcs	15, 3, cr2, cr8, cr9, {3}
    1008:	2f312e33 	svccs	0x00312e33
    100c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    1010:	00656475 	rsbeq	r6, r5, r5, ror r4
    1014:	696e6900 	stmdbvs	lr!, {r8, fp, sp, lr}^
    1018:	00632e74 	rsbeq	r2, r3, r4, ror lr
    101c:	73000001 	movwvc	r0, #1
    1020:	65646474 	strbvs	r6, [r4, #-1140]!	; 0xfffffb8c
    1024:	00682e66 	rsbeq	r2, r8, r6, ror #28
    1028:	00000002 	andeq	r0, r0, r2
    102c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1030:	000b4402 	andeq	r4, fp, r2, lsl #8
    1034:	011e0308 	tsteq	lr, r8, lsl #6
    1038:	13130305 	tstne	r3, #335544320	; 0x14000000
    103c:	06010514 			; <UNDEFINED> instruction: 0x06010514
    1040:	241f050e 	ldrcs	r0, [pc], #-1294	; 1048 <_Min_Stack_Size+0xc48>
    1044:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
    1048:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    104c:	0505200a 	streq	r2, [r5, #-10]
    1050:	03040200 	movweq	r0, #16896	; 0x4200
    1054:	1b052106 	blne	149474 <_Min_Stack_Size+0x149074>
    1058:	03040200 	movweq	r0, #16896	; 0x4200
    105c:	1a051106 	bne	14547c <_Min_Stack_Size+0x14507c>
    1060:	03040200 	movweq	r0, #16896	; 0x4200
    1064:	00050521 	andeq	r0, r5, r1, lsr #10
    1068:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    106c:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    1070:	061f0304 	ldreq	r0, [pc], -r4, lsl #6
    1074:	061c0532 			; <UNDEFINED> instruction: 0x061c0532
    1078:	03052015 	movweq	r2, #20501	; 0x5015
    107c:	0531061d 	ldreq	r0, [r1, #-1565]!	; 0xfffff9e3
    1080:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    1084:	06210603 	strteq	r0, [r1], -r3, lsl #12
    1088:	0a052001 	beq	149094 <_Min_Stack_Size+0x148c94>
    108c:	00050520 	andeq	r0, r5, r0, lsr #10
    1090:	06030402 	streq	r0, [r3], -r2, lsl #8
    1094:	001b0521 	andseq	r0, fp, r1, lsr #10
    1098:	06030402 	streq	r0, [r3], -r2, lsl #8
    109c:	00170511 	andseq	r0, r7, r1, lsl r5
    10a0:	21030402 	tstcs	r3, r2, lsl #8
    10a4:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    10a8:	052e0304 	streq	r0, [lr, #-772]!	; 0xfffffcfc
    10ac:	04020003 	streq	r0, [r2], #-3
    10b0:	01051f03 	tsteq	r5, r3, lsl #30
    10b4:	08022030 	stmdaeq	r2, {r4, r5, sp}
    10b8:	Address 0x00000000000010b8 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
       0:	494c4143 	stmdbmi	ip, {r0, r1, r6, r8, lr}^
       4:	50005242 	andpl	r5, r0, r2, asr #4
       8:	52445055 	subpl	r5, r4, #85	; 0x55
       c:	4b434c00 	blmi	10d3014 <_Min_Stack_Size+0x10d2c14>
      10:	72730052 	rsbsvc	r0, r3, #82	; 0x52
      14:	616d2f63 	cmnvs	sp, r3, ror #30
      18:	632e6e69 			; <UNDEFINED> instruction: 0x632e6e69
      1c:	44535400 	ldrbmi	r5, [r3], #-1024	; 0xfffffc00
      20:	4b420052 	blmi	1080170 <_Min_Stack_Size+0x107fd70>
      24:	52363250 	eorspl	r3, r6, #80, 4
      28:	59544f00 	ldmdbpl	r4, {r8, r9, sl, fp, lr}^
      2c:	00524550 	subseq	r4, r2, r0, asr r5
      30:	5f425355 	svcpl	0x00425355
      34:	75746573 	ldrbvc	r6, [r4, #-1395]!	; 0xfffffa8d
      38:	4b420070 	blmi	1080200 <_Min_Stack_Size+0x107fe00>
      3c:	52303350 	eorspl	r3, r0, #80, 6	; 0x40000001
      40:	504b4200 	subpl	r4, fp, r0, lsl #4
      44:	50005233 	andpl	r5, r0, r3, lsr r2
      48:	00524552 	subseq	r4, r2, r2, asr r5
      4c:	45444f4d 	strbmi	r4, [r4, #-3917]	; 0xfffff0b3
      50:	6f6c0052 	svcvs	0x006c0052
      54:	6c20676e 	stcvs	7, cr6, [r0], #-440	; 0xfffffe48
      58:	20676e6f 	rsbcs	r6, r7, pc, ror #28
      5c:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
      60:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
      64:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
      68:	47525000 	ldrbmi	r5, [r2, -r0]
      6c:	5259454b 	subspl	r4, r9, #314572800	; 0x12c00000
      70:	43545200 	cmpmi	r4, #0, 4
      74:	7079545f 	rsbsvc	r5, r9, pc, asr r4
      78:	66654465 	strbtvs	r4, [r5], -r5, ror #8
      7c:	656d2f00 	strbvs	r2, [sp, #-3840]!	; 0xfffff100
      80:	2f616964 	svccs	0x00616964
      84:	2f747865 	svccs	0x00747865
      88:	2f766564 	svccs	0x00766564
      8c:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
      90:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
      94:	6273752f 	rsbsvs	r7, r3, #197132288	; 0xbc00000
      98:	482e332f 	stmdami	lr!, {r0, r1, r2, r3, r5, r8, r9, ip, sp}
      9c:	4c5f4449 	cfldrdmi	mvd4, [pc], {73}	; 0x49
      a0:	6f6c0031 	svcvs	0x006c0031
      a4:	6c20676e 	stcvs	7, cr6, [r0], #-440	; 0xfffffe48
      a8:	20676e6f 	rsbcs	r6, r7, pc, ror #28
      ac:	00746e69 	rsbseq	r6, r4, r9, ror #28
      b0:	52525342 	subspl	r5, r2, #134217729	; 0x8000001
      b4:	414c4600 	cmpmi	ip, r0, lsl #12
      b8:	545f4853 	ldrbpl	r4, [pc], #-2131	; c0 <_Min_Heap_Size+0xc0>
      bc:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
      c0:	50006665 	andpl	r6, r0, r5, ror #12
      c4:	00524345 	subseq	r4, r2, r5, asr #6
      c8:	636f6c63 	cmnvs	pc, #25344	; 0x6300
      cc:	53485f6b 	movtpl	r5, #36715	; 0x8f6b
      d0:	504b4200 	subpl	r4, fp, r0, lsl #4
      d4:	00523732 	subseq	r3, r2, r2, lsr r7
      d8:	53535354 	cmppl	r3, #84, 6	; 0x50000001
      dc:	4b420052 	blmi	108022c <_Min_Stack_Size+0x107fe2c>
      e0:	52313350 	eorspl	r3, r1, #80, 6	; 0x40000001
      e4:	42504100 	subsmi	r4, r0, #0, 2
      e8:	54535232 	ldrbpl	r5, [r3], #-562	; 0xfffffdce
      ec:	4b420052 	blmi	108023c <_Min_Stack_Size+0x107fe3c>
      f0:	00523450 	subseq	r3, r2, r0, asr r4
      f4:	4d524c41 	ldclmi	12, cr4, [r2, #-260]	; 0xfffffefc
      f8:	52535342 	subspl	r5, r3, #134217729	; 0x8000001
      fc:	42484100 	submi	r4, r8, #0, 2
     100:	4e45504c 	cdpmi	0, 4, cr5, cr5, cr12, {2}
     104:	4b420052 	blmi	1080254 <_Min_Stack_Size+0x107fe54>
     108:	52363150 	eorspl	r3, r6, #80, 2
     10c:	54504f00 	ldrbpl	r4, [r0], #-3840	; 0xfffff100
     110:	5259454b 	subspl	r4, r9, #314572800	; 0x12c00000
     114:	62737500 	rsbsvs	r7, r3, #0, 10
     118:	616c635f 	cmnvs	ip, pc, asr r3
     11c:	705f7373 	subsvc	r7, pc, r3, ror r3	; <UNPREDICTABLE>
     120:	006c6c6f 	rsbeq	r6, ip, pc, ror #24
     124:	746e6975 	strbtvc	r6, [lr], #-2421	; 0xfffff68b
     128:	745f3631 	ldrbvc	r3, [pc], #-1585	; 130 <_Min_Heap_Size+0x130>
     12c:	504b4200 	subpl	r4, fp, r0, lsl #4
     130:	00523032 	subseq	r3, r2, r2, lsr r0
     134:	454b4450 	strbmi	r4, [fp, #-1104]	; 0xfffffbb0
     138:	4f005259 	svcmi	0x00005259
     13c:	45455053 	strbmi	r5, [r5, #-83]	; 0xffffffad
     140:	69005244 	stmdbvs	r0, {r2, r6, r9, ip, lr}
     144:	3374696e 	cmncc	r4, #1802240	; 0x1b8000
     148:	4b420032 	blmi	1080218 <_Min_Stack_Size+0x107fe18>
     14c:	52383250 	eorspl	r3, r8, #80, 4
     150:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
     154:	4c410070 	mcrrmi	0, 7, r0, r1, cr0
     158:	53414d52 	movtpl	r4, #7506	; 0x1d52
     15c:	53005253 	movwpl	r5, #595	; 0x253
     160:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
     164:	726f436d 	rsbvc	r4, pc, #-1275068415	; 0xb4000001
     168:	6f6c4365 	svcvs	0x006c4365
     16c:	42006b63 	andmi	r6, r0, #101376	; 0x18c00
     170:	5235504b 	eorspl	r5, r5, #75	; 0x4b
     174:	504b4200 	subpl	r4, fp, r0, lsl #4
     178:	00523731 	subseq	r3, r2, r1, lsr r7
     17c:	4f495047 	svcmi	0x00495047
     180:	7079545f 	rsbsvc	r5, r9, pc, asr r4
     184:	66654465 	strbtvs	r4, [r5], -r5, ror #8
     188:	43435200 	movtmi	r5, #12800	; 0x3200
     18c:	7079545f 	rsbsvc	r5, r9, pc, asr r4
     190:	66654465 	strbtvs	r4, [r5], -r5, ror #8
     194:	504b4200 	subpl	r4, fp, r0, lsl #4
     198:	00523531 	subseq	r3, r2, r1, lsr r5
     19c:	32504b42 	subscc	r4, r0, #67584	; 0x10800
     1a0:	73005231 	movwvc	r5, #561	; 0x231
     1a4:	74726f68 	ldrbtvc	r6, [r2], #-3944	; 0xfffff098
     1a8:	736e7520 	cmnvc	lr, #32, 10	; 0x8000000
     1ac:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
     1b0:	6e692064 	cdpvs	0, 6, cr2, cr9, cr4, {3}
     1b4:	6c730074 	ldclvs	0, cr0, [r3], #-464	; 0xfffffe30
     1b8:	00706565 	rsbseq	r6, r0, r5, ror #10
     1bc:	31425041 	cmpcc	r2, r1, asr #32
     1c0:	4e45504c 	cdpmi	0, 4, cr5, cr5, cr12, {2}
     1c4:	53540052 	cmppl	r4, #82	; 0x52
     1c8:	54005254 	strpl	r5, [r0], #-596	; 0xfffffdac
     1cc:	52434641 	subpl	r4, r3, #68157440	; 0x4100000
     1d0:	504b4200 	subpl	r4, fp, r0, lsl #4
     1d4:	00523031 	subseq	r3, r2, r1, lsr r0
     1d8:	32504b42 	subscc	r4, r0, #67584	; 0x10800
     1dc:	41005239 	tstmi	r0, r9, lsr r2
     1e0:	4c324250 	lfmmi	f4, 4, [r2], #-320	; 0xfffffec0
     1e4:	524e4550 	subpl	r4, lr, #80, 10	; 0x14000000
     1e8:	52575000 	subspl	r5, r7, #0
     1ec:	7079545f 	rsbsvc	r5, r9, pc, asr r4
     1f0:	66654465 	strbtvs	r4, [r5], -r5, ror #8
     1f4:	504b4200 	subpl	r4, fp, r0, lsl #4
     1f8:	42005236 	andmi	r5, r0, #1610612739	; 0x60000003
     1fc:	3831504b 	ldmdacc	r1!, {r0, r1, r3, r6, ip, lr}
     200:	41430052 	qdaddmi	r0, r2, r3
     204:	7100524c 	tstvc	r0, ip, asr #4
     208:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
     20c:	4b42007a 	blmi	10803fc <_Min_Stack_Size+0x107fffc>
     210:	52323250 	eorspl	r3, r2, #80, 4
     214:	50525700 	subspl	r5, r2, r0, lsl #14
     218:	57003152 	smlsdpl	r0, r2, r1, r3
     21c:	32525052 	subscc	r5, r2, #82	; 0x52
     220:	504b4200 	subpl	r4, fp, r0, lsl #4
     224:	00523131 	subseq	r3, r2, r1, lsr r1
     228:	52424841 	subpl	r4, r2, #4259840	; 0x410000
     22c:	00525453 	subseq	r5, r2, r3, asr r4
     230:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
     234:	42504100 	subsmi	r4, r0, #0, 2
     238:	54535231 	ldrbpl	r5, [r3], #-561	; 0xfffffdcf
     23c:	5f5f0052 	svcpl	0x005f0052
     240:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
     244:	695f656c 	ldmdbvs	pc, {r2, r3, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
     248:	41007172 	tstmi	r0, r2, ror r1
     24c:	414d524c 	cmpmi	sp, ip, asr #4
     250:	4b420052 	blmi	10803a0 <_Min_Stack_Size+0x107ffa0>
     254:	00523750 	subseq	r3, r2, r0, asr r7
     258:	31504b42 	cmpcc	r0, r2, asr #22
     25c:	52005239 	andpl	r5, r0, #-1879048189	; 0x90000003
     260:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     264:	37444556 	smlsldcc	r4, r4, r6, r5	; <UNPREDICTABLE>
     268:	73795300 	cmnvc	r9, #0, 6
     26c:	496d6574 	stmdbmi	sp!, {r2, r4, r5, r6, r8, sl, sp, lr}^
     270:	0074696e 	rsbseq	r6, r4, lr, ror #18
     274:	32504b42 	subscc	r4, r0, #67584	; 0x10800
     278:	75005233 	strvc	r5, [r0, #-563]	; 0xfffffdcd
     27c:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
     280:	2064656e 	rsbcs	r6, r4, lr, ror #10
     284:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
     288:	4d544900 	vldrmi.16	s9, [r4, #-0]	; <UNPREDICTABLE>
     28c:	4278525f 	rsbsmi	r5, r8, #-268435451	; 0xf0000005
     290:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
     294:	68730072 	ldmdavs	r3!, {r1, r4, r5, r6}^
     298:	2074726f 	rsbscs	r7, r4, pc, ror #4
     29c:	00746e69 	rsbseq	r6, r4, r9, ror #28
     2a0:	30504b42 	subscc	r4, r0, r2, asr #22
     2a4:	45520052 	ldrbmi	r0, [r2, #-82]	; 0xffffffae
     2a8:	56524553 			; <UNDEFINED> instruction: 0x56524553
     2ac:	42004445 	andmi	r4, r0, #1157627904	; 0x45000000
     2b0:	3231504b 	eorscc	r5, r1, #75	; 0x4b
     2b4:	50410052 	subpl	r0, r1, r2, asr r0
     2b8:	4e453242 	cdpmi	2, 4, cr3, cr5, cr2, {2}
     2bc:	4c410052 	mcrrmi	0, 5, r0, r1, cr2
     2c0:	52424d52 	subpl	r4, r2, #5248	; 0x1480
     2c4:	47464300 	strbmi	r4, [r6, -r0, lsl #6]
     2c8:	4b420052 	blmi	1080418 <_Min_Stack_Size+0x1080018>
     2cc:	00523850 	subseq	r3, r2, r0, asr r8
     2d0:	746e6975 	strbtvc	r6, [lr], #-2421	; 0xfffff68b
     2d4:	745f3233 	ldrbvc	r3, [pc], #-563	; 2dc <_Min_Heap_Size+0x2dc>
     2d8:	54555700 	ldrbpl	r5, [r5], #-1792	; 0xfffff900
     2dc:	4b420052 	blmi	108042c <_Min_Stack_Size+0x108002c>
     2e0:	52343250 	eorspl	r3, r4, #80, 4
     2e4:	504b4200 	subpl	r4, fp, r0, lsl #4
     2e8:	41005231 	tstmi	r0, r1, lsr r2
     2ec:	45314250 	ldrmi	r4, [r1, #-592]!	; 0xfffffdb0
     2f0:	4200524e 	andmi	r5, r0, #-536870908	; 0xe0000004
     2f4:	3331504b 	teqcc	r1, #75	; 0x4b
     2f8:	6c630052 	stclvs	0, cr0, [r3], #-328	; 0xfffffeb8
     2fc:	5f6b636f 	svcpl	0x006b636f
     300:	5300534d 	movwpl	r5, #845	; 0x34d
     304:	54464948 	strbpl	r4, [r6], #-2376	; 0xfffff6b8
     308:	43490052 	movtmi	r0, #36946	; 0x9052
     30c:	00524353 	subseq	r4, r2, r3, asr r3
     310:	39504b42 	ldmdbcc	r0, {r1, r6, r8, r9, fp, lr}^
     314:	69750052 	ldmdbvs	r5!, {r1, r4, r6}^
     318:	5f38746e 	svcpl	0x0038746e
     31c:	45500074 	ldrbmi	r0, [r0, #-116]	; 0xffffff8c
     320:	5259454b 	subspl	r4, r9, #314572800	; 0x12c00000
     324:	504b4200 	subpl	r4, fp, r0, lsl #4
     328:	00523532 	subseq	r3, r2, r2, lsr r5
     32c:	32504b42 	subscc	r4, r0, #67584	; 0x10800
     330:	65720052 	ldrbvs	r0, [r2, #-82]!	; 0xffffffae
     334:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
     338:	504b4200 	subpl	r4, fp, r0, lsl #4
     33c:	00523431 	subseq	r3, r2, r1, lsr r4
     340:	6e69616d 	powvsez	f6, f1, #5.0
     344:	554e4700 	strbpl	r4, [lr, #-1792]	; 0xfffff900
     348:	37314320 	ldrcc	r4, [r1, -r0, lsr #6]!
     34c:	332e3820 			; <UNDEFINED> instruction: 0x332e3820
     350:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
     354:	30393130 	eorscc	r3, r9, r0, lsr r1
     358:	20333037 	eorscs	r3, r3, r7, lsr r0
     35c:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
     360:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
     364:	675b2029 	ldrbvs	r2, [fp, -r9, lsr #32]
     368:	382d6363 	stmdacc	sp!, {r0, r1, r5, r6, r8, r9, sp, lr}
     36c:	6172622d 	cmnvs	r2, sp, lsr #4
     370:	2068636e 	rsbcs	r6, r8, lr, ror #6
     374:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
     378:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
     37c:	33373220 	teqcc	r7, #32, 4
     380:	5d373230 	lfmpl	f3, 4, [r7, #-192]!	; 0xffffff40
     384:	746d2d20 	strbtvc	r2, [sp], #-3360	; 0xfffff2e0
     388:	626d7568 	rsbvs	r7, sp, #104, 10	; 0x1a000000
     38c:	636d2d20 	cmnvs	sp, #32, 26	; 0x800
     390:	633d7570 	teqvs	sp, #112, 10	; 0x1c000000
     394:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
     398:	336d2d78 	cmncc	sp, #120, 26	; 0x1e00
     39c:	666d2d20 	strbtvs	r2, [sp], -r0, lsr #26
     3a0:	74616f6c 	strbtvc	r6, [r1], #-3948	; 0xfffff094
     3a4:	6962612d 	stmdbvs	r2!, {r0, r2, r3, r5, r8, sp, lr}^
     3a8:	666f733d 			; <UNDEFINED> instruction: 0x666f733d
     3ac:	6d2d2074 	stcvs	0, cr2, [sp, #-464]!	; 0xfffffe30
     3b0:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
     3b4:	6d72613d 	ldfvse	f6, [r2, #-244]!	; 0xffffff0c
     3b8:	6d2d3776 	stcvs	7, cr3, [sp, #-472]!	; 0xfffffe28
     3bc:	64672d20 	strbtvs	r2, [r7], #-3360	; 0xfffff2e0
     3c0:	66726177 			; <UNDEFINED> instruction: 0x66726177
     3c4:	2d20322d 	sfmcs	f3, 4, [r0, #-180]!	; 0xffffff4c
     3c8:	2d20734f 	stccs	3, cr7, [r0, #-316]!	; 0xfffffec4
     3cc:	2d6f6e66 	stclcs	14, cr6, [pc, #-408]!	; 23c <_Min_Heap_Size+0x23c>
     3d0:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
     3d4:	006e6974 	rsbeq	r6, lr, r4, ror r9
     3d8:	45424841 	strbmi	r4, [r2, #-2113]	; 0xfffff7bf
     3dc:	5400524e 	strpl	r5, [r0], #-590	; 0xfffffdb2
     3e0:	31314d49 	teqcc	r1, r9, asr #26
     3e4:	5152495f 	cmppl	r2, pc, asr r9
     3e8:	4977006e 	ldmdbmi	r7!, {r1, r2, r3, r5, r6}^
     3ec:	7865646e 	stmdavc	r5!, {r1, r2, r3, r5, r6, sl, sp, lr}^
     3f0:	53595300 	cmppl	r9, #0, 6
     3f4:	5f474643 	svcpl	0x00474643
     3f8:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     3fc:	00666544 	rsbeq	r6, r6, r4, asr #10
     400:	31667562 	cmncc	r6, r2, ror #10
     404:	49540036 	ldmdbmi	r4, {r1, r2, r4, r5}^
     408:	495f394d 	ldmdbmi	pc, {r0, r2, r3, r6, r8, fp, ip, sp}^	; <UNPREDICTABLE>
     40c:	006e5152 	rsbeq	r5, lr, r2, asr r1
     410:	31414d44 	cmpcc	r1, r4, asr #26
     414:	6168435f 	cmnvs	r8, pc, asr r3
     418:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
     41c:	52495f37 	subpl	r5, r9, #55, 30	; 0xdc
     420:	49006e51 	stmdbmi	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
     424:	5f324332 	svcpl	0x00324332
     428:	495f5245 	ldmdbmi	pc, {r0, r2, r6, r9, ip, lr}^	; <UNPREDICTABLE>
     42c:	006e5152 	rsbeq	r5, lr, r2, asr r1
     430:	5f435653 	svcpl	0x00435653
     434:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     438:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
     43c:	52495f34 	subpl	r5, r9, #52, 30	; 0xd0
     440:	44006e51 	strmi	r6, [r0], #-3665	; 0xfffff1af
     444:	5f31414d 	svcpl	0x0031414d
     448:	6e616843 	cdpvs	8, 6, cr6, cr1, cr3, {2}
     44c:	326c656e 	rsbcc	r6, ip, #461373440	; 0x1b800000
     450:	5152495f 	cmppl	r2, pc, asr r9
     454:	6d70006e 	ldclvs	0, cr0, [r0, #-440]!	; 0xfffffe48
     458:	65645f61 	strbvs	r5, [r4, #-3937]!	; 0xfffff09f
     45c:	5f726373 	svcpl	0x00726373
     460:	6d620074 	stclvs	0, cr0, [r2, #-464]!	; 0xfffffe30
     464:	75716552 	ldrbvc	r6, [r1, #-1362]!	; 0xfffffaae
     468:	54747365 	ldrbtpl	r7, [r4], #-869	; 0xfffffc9b
     46c:	00657079 	rsbeq	r7, r5, r9, ror r0
     470:	75746573 	ldrbvc	r6, [r4, #-1395]!	; 0xfffffa8d
     474:	61705f70 	cmnvs	r0, r0, ror pc
     478:	74656b63 	strbtvc	r6, [r5], #-2915	; 0xfffff49d
     47c:	414c4600 	cmpmi	ip, r0, lsl #12
     480:	495f4853 	ldmdbmi	pc, {r0, r1, r4, r6, fp, lr}^	; <UNPREDICTABLE>
     484:	006e5152 	rsbeq	r5, lr, r2, asr r1
     488:	65747962 	ldrbvs	r7, [r4, #-2402]!	; 0xfffff69e
     48c:	61657273 	smcvs	22307	; 0x5723
     490:	58450064 	stmdapl	r5, {r2, r5, r6}^
     494:	5f304954 	svcpl	0x00304954
     498:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     49c:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
     4a0:	5f353149 	svcpl	0x00353149
     4a4:	495f3031 	ldmdbmi	pc, {r0, r4, r5, ip, sp}^	; <UNPREDICTABLE>
     4a8:	006e5152 	rsbeq	r5, lr, r2, asr r1
     4ac:	7473616c 	ldrbtvc	r6, [r3], #-364	; 0xfffffe94
     4b0:	72646461 	rsbvc	r6, r4, #1627389952	; 0x61000000
     4b4:	6e655000 	cdpvs	0, 6, cr5, cr5, cr0, {0}
     4b8:	5f565364 	svcpl	0x00565364
     4bc:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     4c0:	4d454d00 	stclmi	13, cr4, [r5, #-0]
     4c4:	00504d52 	subseq	r4, r0, r2, asr sp
     4c8:	5f434352 	svcpl	0x00434352
     4cc:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     4d0:	61567700 	cmpvs	r6, r0, lsl #14
     4d4:	0065756c 	rsbeq	r7, r5, ip, ror #10
     4d8:	6f6d654d 	svcvs	0x006d654d
     4dc:	614d7972 	hvcvs	55186	; 0xd792
     4e0:	6567616e 	strbvs	r6, [r7, #-366]!	; 0xfffffe92
     4e4:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
     4e8:	5152495f 	cmppl	r2, pc, asr r9
     4ec:	7065006e 	rsbvc	r0, r5, lr, rrx
     4f0:	6f635f30 	svcvs	0x00635f30
     4f4:	00746e75 	rsbseq	r6, r4, r5, ror lr
     4f8:	52545349 	subspl	r5, r4, #603979777	; 0x24000001
     4fc:	4d415400 	cfstrdmi	mvd5, [r1, #-0]
     500:	5f524550 	svcpl	0x00524550
     504:	4d415453 	cfstrdmi	mvd5, [r1, #-332]	; 0xfffffeb4
     508:	52495f50 	subpl	r5, r9, #80, 30	; 0x140
     50c:	49006e51 	stmdbmi	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
     510:	00524553 	subseq	r4, r2, r3, asr r5
     514:	32414d44 	subcc	r4, r1, #68, 26	; 0x1100
     518:	6168435f 	cmnvs	r8, pc, asr r3
     51c:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
     520:	52495f34 	subpl	r5, r9, #52, 30	; 0xd0
     524:	52006e51 	andpl	r6, r0, #1296	; 0x510
     528:	56524553 			; <UNDEFINED> instruction: 0x56524553
     52c:	00314445 	eorseq	r4, r1, r5, asr #8
     530:	31495053 	qdaddcc	r5, r3, r9
     534:	5152495f 	cmppl	r2, pc, asr r9
     538:	755f006e 	ldrbvc	r0, [pc, #-110]	; 4d2 <_Min_Stack_Size+0xd2>
     53c:	655f6273 	ldrbvs	r6, [pc, #-627]	; 2d1 <_Min_Heap_Size+0x2d1>
     540:	72775f70 	rsbsvc	r5, r7, #112, 30	; 0x1c0
     544:	00657469 	rsbeq	r7, r5, r9, ror #8
     548:	364d4954 			; <UNDEFINED> instruction: 0x364d4954
     54c:	5152495f 	cmppl	r2, pc, asr r9
     550:	4d44006e 	stclmi	0, cr0, [r4, #-440]	; 0xfffffe48
     554:	435f3141 	cmpmi	pc, #1073741840	; 0x40000010
     558:	6e6e6168 	powvsez	f6, f6, #0.0
     55c:	5f346c65 	svcpl	0x00346c65
     560:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     564:	49564e00 	ldmdbmi	r6, {r9, sl, fp, lr}^
     568:	6e455f43 	cdpvs	15, 4, cr5, cr5, cr3, {2}
     56c:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
     570:	00515249 	subseq	r5, r1, r9, asr #4
     574:	504d4f43 	subpl	r4, sp, r3, asr #30
     578:	5152495f 	cmppl	r2, pc, asr r9
     57c:	5355006e 	cmppl	r5, #110	; 0x6e
     580:	79545f42 	ldmdbvc	r4, {r1, r6, r8, r9, sl, fp, ip, lr}^
     584:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
     588:	41440066 	cmpmi	r4, r6, rrx
     58c:	00524444 	subseq	r4, r2, r4, asr #8
     590:	5f425355 	svcpl	0x00425355
     594:	495f504c 	ldmdbmi	pc, {r2, r3, r6, ip, lr}^	; <UNPREDICTABLE>
     598:	61485152 	cmpvs	r8, r2, asr r1
     59c:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     5a0:	73750072 	cmnvc	r5, #114	; 0x72
     5a4:	6c635f62 	stclvs	15, cr5, [r3], #-392	; 0xfffffe78
     5a8:	5f737361 	svcpl	0x00737361
     5ac:	5f746567 	svcpl	0x00746567
     5b0:	5f647473 	svcpl	0x00647473
     5b4:	63736564 	cmnvs	r3, #100, 10	; 0x19000000
     5b8:	52490072 	subpl	r0, r9, #114	; 0x72
     5bc:	545f6e51 	ldrbpl	r6, [pc], #-3665	; 5c4 <_Min_Stack_Size+0x1c4>
     5c0:	00657079 	rsbeq	r7, r5, r9, ror r0
     5c4:	5f307065 	svcpl	0x00307065
     5c8:	646e6573 	strbtvs	r6, [lr], #-1395	; 0xfffffa8d
     5cc:	41535500 	cmpmi	r3, r0, lsl #10
     5d0:	5f325452 	svcpl	0x00325452
     5d4:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     5d8:	6e6f6300 	cdpvs	3, 6, cr6, cr15, cr0, {0}
     5dc:	75676966 	strbvc	r6, [r7, #-2406]!	; 0xfffff69a
     5e0:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
     5e4:	45006e6f 	strmi	r6, [r0, #-3695]	; 0xfffff191
     5e8:	00523050 	subseq	r3, r2, r0, asr r0
     5ec:	5f435452 	svcpl	0x00435452
     5f0:	50554b57 	subspl	r4, r5, r7, asr fp
     5f4:	5152495f 	cmppl	r2, pc, asr r9
     5f8:	5355006e 	cmppl	r5, #110	; 0x6e
     5fc:	64415f42 	strbvs	r5, [r1], #-3906	; 0xfffff0be
     600:	65007264 	strvs	r7, [r0, #-612]	; 0xfffffd9c
     604:	6e756670 	mrcvs	6, 3, r6, cr5, cr0, {3}
     608:	756f5f63 	strbvc	r5, [pc, #-3939]!	; fffff6ad <BootRAM+0xef6fe4e>
     60c:	70650074 	rsbvc	r0, r5, r4, ror r0
     610:	75625f30 	strbvc	r5, [r2, #-3888]!	; 0xfffff0d0
     614:	58450066 	stmdapl	r5, {r1, r2, r5, r6}^
     618:	5f324954 	svcpl	0x00324954
     61c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     620:	43444100 	movtmi	r4, #16640	; 0x4100
     624:	52495f31 	subpl	r5, r9, #49, 30	; 0xc4
     628:	49006e51 	stmdbmi	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
     62c:	5f324332 	svcpl	0x00324332
     630:	495f5645 	ldmdbmi	pc, {r0, r2, r6, r9, sl, ip, lr}^	; <UNPREDICTABLE>
     634:	006e5152 	rsbeq	r5, lr, r2, asr r1
     638:	52315045 	eorspl	r5, r1, #69	; 0x45
     63c:	49505300 	ldmdbmi	r0, {r8, r9, ip, lr}^
     640:	52495f33 	subpl	r5, r9, #51, 30	; 0xcc
     644:	75006e51 	strvc	r6, [r0, #-3665]	; 0xfffff1af
     648:	655f6273 	ldrbvs	r6, [pc, #-627]	; 3dd <_Min_Heap_Size+0x3dd>
     64c:	74616470 	strbtvc	r6, [r1], #-1136	; 0xfffffb90
     650:	00745f61 	rsbseq	r5, r4, r1, ror #30
     654:	504d4f43 	subpl	r4, sp, r3, asr #30
     658:	5143415f 	cmppl	r3, pc, asr r1
     65c:	5152495f 	cmppl	r2, pc, asr r9
     660:	4d44006e 	stclmi	0, cr0, [r4, #-440]	; 0xfffffe48
     664:	435f3141 	cmpmi	pc, #1073741840	; 0x40000010
     668:	6e6e6168 	powvsez	f6, f6, #0.0
     66c:	5f366c65 	svcpl	0x00366c65
     670:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     674:	414d4400 	cmpmi	sp, r0, lsl #8
     678:	68435f32 	stmdavs	r3, {r1, r4, r5, r8, r9, sl, fp, ip, lr}^
     67c:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xfffff19f
     680:	495f316c 	ldmdbmi	pc, {r2, r3, r5, r6, r8, ip, sp}^	; <UNPREDICTABLE>
     684:	006e5152 	rsbeq	r5, lr, r2, asr r1
     688:	6273755f 	rsbsvs	r7, r3, #398458880	; 0x17c00000
     68c:	5f70655f 	svcpl	0x0070655f
     690:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
     694:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
     698:	52495f33 	subpl	r5, r9, #51, 30	; 0xcc
     69c:	44006e51 	strmi	r6, [r0], #-3665	; 0xfffff1af
     6a0:	5f31414d 	svcpl	0x0031414d
     6a4:	6e616843 	cdpvs	8, 6, cr6, cr1, cr3, {2}
     6a8:	316c656e 	cmncc	ip, lr, ror #10
     6ac:	5152495f 	cmppl	r2, pc, asr r9
     6b0:	7375006e 	cmnvc	r5, #110	; 0x6e
     6b4:	6c635f62 	stclvs	15, cr5, [r3], #-392	; 0xfffffe78
     6b8:	5f737361 	svcpl	0x00737361
     6bc:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
     6c0:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
     6c4:	00524349 	subseq	r4, r2, r9, asr #6
     6c8:	52325045 	eorspl	r5, r2, #69	; 0x45
     6cc:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
     6d0:	495f3031 	ldmdbmi	pc, {r0, r4, r5, ip, sp}^	; <UNPREDICTABLE>
     6d4:	006e5152 	rsbeq	r5, lr, r2, asr r1
     6d8:	47445757 	smlsldmi	r5, r4, r7, r7
     6dc:	5152495f 	cmppl	r2, pc, asr r9
     6e0:	7375006e 	cmnvc	r5, #110	; 0x6e
     6e4:	6c635f62 	stclvs	15, cr5, [r3], #-392	; 0xfffffe78
     6e8:	5f737361 	svcpl	0x00737361
     6ec:	63736964 	cmnvs	r3, #100, 18	; 0x190000
     6f0:	656e6e6f 	strbvs	r6, [lr, #-3695]!	; 0xfffff191
     6f4:	45007463 	strmi	r7, [r0, #-1123]	; 0xfffffb9d
     6f8:	00523350 	subseq	r3, r2, r0, asr r3
     6fc:	46737542 	ldrbtmi	r7, [r3], -r2, asr #10
     700:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     704:	5152495f 	cmppl	r2, pc, asr r9
     708:	5845006e 	stmdapl	r5, {r1, r2, r3, r5, r6}^
     70c:	5f344954 	svcpl	0x00344954
     710:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     714:	44565000 	ldrbmi	r5, [r6], #-0
     718:	5152495f 	cmppl	r2, pc, asr r9
     71c:	7065006e 	rsbvc	r0, r5, lr, rrx
     720:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
     724:	7500745f 	strvc	r7, [r0, #-1119]	; 0xfffffba1
     728:	745f6273 	ldrbvc	r6, [pc], #-627	; 730 <_Min_Stack_Size+0x330>
     72c:	6f635f78 	svcvs	0x00635f78
     730:	00746e75 	rsbseq	r6, r4, r5, ror lr
     734:	52504349 	subspl	r4, r0, #603979777	; 0x24000001
     738:	414d4400 	cmpmi	sp, r0, lsl #8
     73c:	68435f32 	stmdavs	r3, {r1, r4, r5, r8, r9, sl, fp, ip, lr}^
     740:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xfffff19f
     744:	495f336c 	ldmdbmi	pc, {r2, r3, r5, r6, r8, r9, ip, sp}^	; <UNPREDICTABLE>
     748:	006e5152 	rsbeq	r5, lr, r2, asr r1
     74c:	354d4954 	strbcc	r4, [sp, #-2388]	; 0xfffff6ac
     750:	5152495f 	cmppl	r2, pc, asr r9
     754:	4d44006e 	stclmi	0, cr0, [r4, #-440]	; 0xfffffe48
     758:	435f3141 	cmpmi	pc, #1073741840	; 0x40000010
     75c:	6e6e6168 	powvsez	f6, f6, #0.0
     760:	5f336c65 	svcpl	0x00336c65
     764:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     768:	63727300 	cmnvs	r2, #0, 6
     76c:	6273752f 	rsbsvs	r7, r3, #197132288	; 0xbc00000
     770:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
     774:	4900632e 	stmdbmi	r0, {r1, r2, r3, r5, r8, r9, sp, lr}
     778:	5f314332 	svcpl	0x00314332
     77c:	495f5645 	ldmdbmi	pc, {r0, r2, r6, r9, sl, ip, lr}^	; <UNPREDICTABLE>
     780:	006e5152 	rsbeq	r5, lr, r2, asr r1
     784:	6e5f7872 	mrcvs	8, 2, r7, cr15, cr2, {3}
     788:	625f6d75 	subsvs	r6, pc, #7488	; 0x1d40
     78c:	6b636f6c 	blvs	18dc544 <_Min_Stack_Size+0x18dc144>
     790:	73750073 	cmnvc	r5, #115	; 0x73
     794:	6c635f62 	stclvs	15, cr5, [r3], #-392	; 0xfffffe78
     798:	5f737361 	svcpl	0x00737361
     79c:	5f307065 	svcpl	0x00307065
     7a0:	74006e69 	strvc	r6, [r0], #-3689	; 0xfffff197
     7a4:	6c625f78 	stclvs	15, cr5, [r2], #-480	; 0xfffffe20
     7a8:	736b636f 	cmnvc	fp, #-1140850687	; 0xbc000001
     7ac:	00657a69 	rsbeq	r7, r5, r9, ror #20
     7b0:	52495453 	subpl	r5, r9, #1392508928	; 0x53000000
     7b4:	43545200 	cmpmi	r4, #0, 4
     7b8:	616c415f 	cmnvs	ip, pc, asr r1
     7bc:	495f6d72 	ldmdbmi	pc, {r1, r4, r5, r6, r8, sl, fp, sp, lr}^	; <UNPREDICTABLE>
     7c0:	006e5152 	rsbeq	r5, lr, r2, asr r1
     7c4:	735f7872 	cmpvc	pc, #7471104	; 0x720000
     7c8:	00657a69 	rsbeq	r7, r5, r9, ror #20
     7cc:	52355045 	eorspl	r5, r5, #69	; 0x45
     7d0:	53455200 	movtpl	r5, #20992	; 0x5200
     7d4:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     7d8:	52003044 	andpl	r3, r0, #68	; 0x44
     7dc:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     7e0:	31444556 	cmpcc	r4, r6, asr r5
     7e4:	53455200 	movtpl	r5, #20992	; 0x5200
     7e8:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     7ec:	52003244 	andpl	r3, r0, #68, 4	; 0x40000004
     7f0:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     7f4:	33444556 	movtcc	r4, #17750	; 0x4556
     7f8:	53455200 	movtpl	r5, #20992	; 0x5200
     7fc:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     800:	52003444 	andpl	r3, r0, #68, 8	; 0x44000000
     804:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     808:	35444556 	strbcc	r4, [r4, #-1366]	; 0xfffffaaa
     80c:	53455200 	movtpl	r5, #20992	; 0x5200
     810:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     814:	55003644 	strpl	r3, [r0, #-1604]	; 0xfffff9bc
     818:	465f4253 			; <UNDEFINED> instruction: 0x465f4253
     81c:	4b575f53 	blmi	15d8570 <_Min_Stack_Size+0x15d8170>
     820:	495f5055 	ldmdbmi	pc, {r0, r2, r4, r6, ip, lr}^	; <UNPREDICTABLE>
     824:	006e5152 	rsbeq	r5, lr, r2, asr r1
     828:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     82c:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     830:	45520039 	ldrbmi	r0, [r2, #-57]	; 0xffffffc7
     834:	56524553 			; <UNDEFINED> instruction: 0x56524553
     838:	00414445 	subeq	r4, r1, r5, asr #8
     83c:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
     840:	495f3154 	ldmdbmi	pc, {r2, r4, r6, r8, ip, sp}^	; <UNPREDICTABLE>
     844:	006e5152 	rsbeq	r5, lr, r2, asr r1
     848:	5f627375 	svcpl	0x00627375
     84c:	695f7065 	ldmdbvs	pc, {r0, r2, r5, r6, ip, sp, lr}^	; <UNPREDICTABLE>
     850:	0074696e 	rsbseq	r6, r4, lr, ror #18
     854:	4d6e6f4e 	stclmi	15, cr6, [lr, #-312]!	; 0xfffffec8
     858:	616b7361 	cmnvs	fp, r1, ror #6
     85c:	49656c62 	stmdbmi	r5!, {r1, r5, r6, sl, fp, sp, lr}^
     860:	495f746e 	ldmdbmi	pc, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
     864:	006e5152 	rsbeq	r5, lr, r2, asr r1
     868:	6e654c77 	mcrvs	12, 3, r4, cr5, cr7, {3}
     86c:	00687467 	rsbeq	r7, r8, r7, ror #8
     870:	52365045 	eorspl	r5, r6, #69	; 0x45
     874:	66656c00 	strbtvs	r6, [r5], -r0, lsl #24
     878:	58450074 	stmdapl	r5, {r2, r4, r5, r6}^
     87c:	5f314954 	svcpl	0x00314954
     880:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     884:	65526200 	ldrbvs	r6, [r2, #-512]	; 0xfffffe00
     888:	73657571 	cmnvc	r5, #473956352	; 0x1c400000
     88c:	564e0074 			; <UNDEFINED> instruction: 0x564e0074
     890:	545f4349 	ldrbpl	r4, [pc], #-841	; 898 <_Min_Stack_Size+0x498>
     894:	00657079 	rsbeq	r7, r5, r9, ror r0
     898:	52544e43 	subspl	r4, r4, #1072	; 0x430
     89c:	414d4400 	cmpmi	sp, r0, lsl #8
     8a0:	68435f32 	stmdavs	r3, {r1, r4, r5, r8, r9, sl, fp, ip, lr}^
     8a4:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xfffff19f
     8a8:	495f356c 	ldmdbmi	pc, {r2, r3, r5, r6, r8, sl, ip, sp}^	; <UNPREDICTABLE>
     8ac:	006e5152 	rsbeq	r5, lr, r2, asr r1
     8b0:	31433249 	cmpcc	r3, r9, asr #4
     8b4:	5f52455f 	svcpl	0x0052455f
     8b8:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     8bc:	73795300 	cmnvc	r9, #0, 6
     8c0:	6b636954 	blvs	18dae18 <_Min_Stack_Size+0x18daa18>
     8c4:	5152495f 	cmppl	r2, pc, asr r9
     8c8:	7065006e 	rsbvc	r0, r5, lr, rrx
     8cc:	006d756e 	rsbeq	r7, sp, lr, ror #10
     8d0:	324d4954 	subcc	r4, sp, #84, 18	; 0x150000
     8d4:	5152495f 	cmppl	r2, pc, asr r9
     8d8:	7375006e 	cmnvc	r5, #110	; 0x6e
     8dc:	6c635f62 	stclvs	15, cr5, [r3], #-392	; 0xfffffe78
     8e0:	5f737361 	svcpl	0x00737361
     8e4:	5f307065 	svcpl	0x00307065
     8e8:	0074756f 	rsbseq	r7, r4, pc, ror #10
     8ec:	52375045 	eorspl	r5, r7, #69	; 0x45
     8f0:	6e6f6300 	cdpvs	3, 6, cr6, cr15, cr0, {0}
     8f4:	5f676966 	svcpl	0x00676966
     8f8:	6b636170 	blvs	18d8ec0 <_Min_Stack_Size+0x18d8ac0>
     8fc:	7500745f 	strvc	r7, [r0, #-1119]	; 0xfffffba1
     900:	725f6273 	subsvc	r6, pc, #805306375	; 0x30000007
     904:	64615f78 	strbtvs	r5, [r1], #-3960	; 0xfffff088
     908:	74007264 	strvc	r7, [r0], #-612	; 0xfffffd9c
     90c:	756e5f78 	strbvc	r5, [lr, #-3960]!	; 0xfffff088
     910:	6c625f6d 	stclvs	15, cr5, [r2], #-436	; 0xfffffe4c
     914:	736b636f 	cmnvc	fp, #-1140850687	; 0xbc000001
     918:	42535500 	subsmi	r5, r3, #0, 10
     91c:	5f50485f 	svcpl	0x0050485f
     920:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     924:	62654400 	rsbvs	r4, r5, #0, 8
     928:	6f4d6775 	svcvs	0x004d6775
     92c:	6f74696e 	svcvs	0x0074696e
     930:	52495f72 	subpl	r5, r9, #456	; 0x1c8
     934:	55006e51 	strpl	r6, [r0, #-3665]	; 0xfffff1af
     938:	65676173 	strbvs	r6, [r7, #-371]!	; 0xfffffe8d
     93c:	6c756146 	ldfvse	f6, [r5], #-280	; 0xfffffee8
     940:	52495f74 	subpl	r5, r9, #116, 30	; 0x1d0
     944:	72006e51 	andvc	r6, r0, #1296	; 0x510
     948:	6c625f78 	stclvs	15, cr5, [r2], #-480	; 0xfffffe20
     94c:	736b636f 	cmnvc	fp, #-1140850687	; 0xbc000001
     950:	00657a69 	rsbeq	r7, r5, r9, ror #20
     954:	75667065 	strbvc	r7, [r6, #-101]!	; 0xffffff9b
     958:	695f636e 	ldmdbvs	pc, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^	; <UNPREDICTABLE>
     95c:	7375006e 	cmnvc	r5, #110	; 0x6e
     960:	70655f62 	rsbvc	r5, r5, r2, ror #30
     964:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
     968:	6f645f74 	svcvs	0x00645f74
     96c:	656c6275 	strbvs	r6, [ip, #-629]!	; 0xfffffd8b
     970:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
     974:	355f3949 	ldrbcc	r3, [pc, #-2377]	; 33 <_Min_Heap_Size+0x33>
     978:	5152495f 	cmppl	r2, pc, asr r9
     97c:	5045006e 	subpl	r0, r5, lr, rrx
     980:	49005234 	stmdbmi	r0, {r2, r4, r5, r9, ip, lr}
     984:	00524543 	subseq	r4, r2, r3, asr #10
     988:	32495053 	subcc	r5, r9, #83	; 0x53
     98c:	5152495f 	cmppl	r2, pc, asr r9
     990:	4149006e 	cmpmi	r9, lr, rrx
     994:	54005242 	strpl	r5, [r0], #-578	; 0xfffffdbe
     998:	5f374d49 	svcpl	0x00374d49
     99c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     9a0:	414d4400 	cmpmi	sp, r0, lsl #8
     9a4:	68435f31 	stmdavs	r3, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
     9a8:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xfffff19f
     9ac:	495f356c 	ldmdbmi	pc, {r2, r3, r5, r6, r8, sl, ip, sp}^	; <UNPREDICTABLE>
     9b0:	006e5152 	rsbeq	r5, lr, r2, asr r1
     9b4:	42415442 	submi	r5, r1, #1107296256	; 0x42000000
     9b8:	4400454c 	strmi	r4, [r0], #-1356	; 0xfffffab4
     9bc:	495f4341 	ldmdbmi	pc, {r0, r6, r8, r9, lr}^	; <UNPREDICTABLE>
     9c0:	006e5152 	rsbeq	r5, lr, r2, asr r1
     9c4:	745f7065 	ldrbvc	r7, [pc], #-101	; 9cc <_Min_Stack_Size+0x5cc>
     9c8:	00657079 	rsbeq	r7, r5, r9, ror r0
     9cc:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
     9d0:	52495f33 	subpl	r5, r9, #51, 30	; 0xcc
     9d4:	64006e51 	strvs	r6, [r0], #-3665	; 0xfffff1af
     9d8:	695f7269 	ldmdbvs	pc, {r0, r3, r5, r6, r9, ip, sp, lr}^	; <UNPREDICTABLE>
     9dc:	7375006e 	cmnvc	r5, #110	; 0x6e
     9e0:	78745f62 	ldmdavc	r4!, {r1, r5, r6, r8, r9, sl, fp, ip, lr}^
     9e4:	6464615f 	strbtvs	r6, [r4], #-351	; 0xfffffea1
     9e8:	53490072 	movtpl	r0, #36978	; 0x9072
     9ec:	75005250 	strvc	r5, [r0, #-592]	; 0xfffffdb0
     9f0:	725f6273 	subsvc	r6, pc, #805306375	; 0x30000007
     9f4:	6f635f78 	svcvs	0x00635f78
     9f8:	00746e75 	rsbseq	r6, r4, r5, ror lr
     9fc:	6f637872 	svcvs	0x00637872
     a00:	00746e75 	rsbseq	r6, r4, r5, ror lr
     a04:	32414d44 	subcc	r4, r1, #68, 26	; 0x1100
     a08:	6168435f 	cmnvs	r8, pc, asr r3
     a0c:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
     a10:	52495f32 	subpl	r5, r9, #50, 30	; 0xc8
     a14:	55006e51 	strpl	r6, [r0, #-3665]	; 0xfffff1af
     a18:	54524153 	ldrbpl	r4, [r2], #-339	; 0xfffffead
     a1c:	52495f33 	subpl	r5, r9, #51, 30	; 0xcc
     a20:	52006e51 	andpl	r6, r0, #1296	; 0x510
     a24:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     a28:	38444556 	stmdacc	r4, {r1, r2, r4, r6, r8, sl, lr}^
     a2c:	42535500 	subsmi	r5, r3, #0, 10
     a30:	5f504c5f 	svcpl	0x00504c5f
     a34:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     a38:	53455200 	movtpl	r5, #20992	; 0x5200
     a3c:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     a40:	52004244 	andpl	r4, r0, #68, 4	; 0x40000004
     a44:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     a48:	43444556 	movtmi	r4, #17750	; 0x4556
     a4c:	42535500 	subsmi	r5, r3, #0, 10
     a50:	4449485f 	strbmi	r4, [r9], #-2143	; 0xfffff7a1
     a54:	63736544 	cmnvs	r3, #68, 10	; 0x11000000
     a58:	74706972 	ldrbtvc	r6, [r0], #-2418	; 0xfffff68e
     a5c:	6c00726f 	sfmvs	f7, 4, [r0], {111}	; 0x6f
     a60:	6c727463 	cfldrdvs	mvd7, [r2], #-396	; 0xfffffe74
     a64:	6e6f5f00 	cdpvs	15, 6, cr5, cr15, cr0, {0}
     a68:	6978655f 	ldmdbvs	r8!, {r0, r1, r2, r3, r4, r6, r8, sl, sp, lr}^
     a6c:	72615f74 	rsbvc	r5, r1, #116, 30	; 0x1d0
     a70:	5f007367 	svcpl	0x00007367
     a74:	6f746377 	svcvs	0x00746377
     a78:	735f626d 	cmpvc	pc, #-805306362	; 0xd0000006
     a7c:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
     a80:	6d6e5f00 	stclvs	15, cr5, [lr, #-0]
     a84:	6f6c6c61 	svcvs	0x006c6c61
     a88:	725f0063 	subsvc	r0, pc, #99	; 0x63
     a8c:	5f003834 	svcpl	0x00003834
     a90:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
     a94:	625f6c61 	subsvs	r6, pc, #24832	; 0x6100
     a98:	5f006675 	svcpl	0x00006675
     a9c:	7366626c 	cmnvc	r6, #108, 4	; 0xc0000006
     aa0:	00657a69 	rsbeq	r7, r5, r9, ror #20
     aa4:	616c665f 	cmnvs	ip, pc, asr r6
     aa8:	72007367 	andvc	r7, r0, #-1677721599	; 0x9c000001
     aac:	726f7065 	rsbvc	r7, pc, #101	; 0x65
     ab0:	626b5f74 	rsbvs	r5, fp, #116, 30	; 0x1d0
     ab4:	4c5f0064 	mrrcmi	0, 6, r0, pc, cr4	; <UNPREDICTABLE>
     ab8:	5f4b434f 	svcpl	0x004b434f
     abc:	55434552 	strbpl	r4, [r3, #-1362]	; 0xfffffaae
     ac0:	56495352 			; <UNDEFINED> instruction: 0x56495352
     ac4:	00545f45 	subseq	r5, r4, r5, asr #30
     ac8:	72626d5f 	rsbvc	r6, r2, #6080	; 0x17c0
     acc:	5f6e656c 	svcpl	0x006e656c
     ad0:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
     ad4:	735f0065 	cmpvc	pc, #101	; 0x65
     ad8:	756f6474 	strbvc	r6, [pc, #-1140]!	; 66c <_Min_Stack_Size+0x26c>
     adc:	665f0074 			; <UNDEFINED> instruction: 0x665f0074
     ae0:	5f736f70 	svcpl	0x00736f70
     ae4:	665f0074 			; <UNDEFINED> instruction: 0x665f0074
     ae8:	5f00736e 	svcpl	0x0000736e
     aec:	6b6f6f63 	blvs	1bdc880 <_Min_Stack_Size+0x1bdc480>
     af0:	5f006569 	svcpl	0x00006569
     af4:	5f6d745f 	svcpl	0x006d745f
     af8:	79616477 	stmdbvc	r1!, {r0, r1, r2, r4, r5, r6, sl, sp, lr}^
     afc:	65725f00 	ldrbvs	r5, [r2, #-3840]!	; 0xfffff100
     b00:	746c7573 	strbtvc	r7, [ip], #-1395	; 0xfffffa8d
     b04:	745f5f00 	ldrbvc	r5, [pc], #-3840	; b0c <_Min_Stack_Size+0x70c>
     b08:	6f685f6d 	svcvs	0x00685f6d
     b0c:	69007275 	stmdbvs	r0, {r0, r2, r4, r5, r6, r9, ip, sp, lr}
     b10:	5f72746e 	svcpl	0x0072746e
     b14:	00716572 	rsbseq	r6, r1, r2, ror r5
     b18:	6f635f5f 	svcvs	0x00635f5f
     b1c:	00746e75 	rsbseq	r6, r4, r5, ror lr
     b20:	6d745f5f 	ldclvs	15, cr5, [r4, #-380]!	; 0xfffffe84
     b24:	6e696d5f 	mcrvs	13, 3, r6, cr9, cr15, {2}
     b28:	656e5f00 	strbvs	r5, [lr, #-3840]!	; 0xfffff100
     b2c:	00667478 	rsbeq	r7, r6, r8, ror r4
     b30:	6e61725f 	mcrvs	2, 3, r7, cr1, cr15, {2}
     b34:	00383464 	eorseq	r3, r8, r4, ror #8
     b38:	6968736c 	stmdbvs	r8!, {r2, r3, r5, r6, r8, r9, ip, sp, lr}^
     b3c:	5f007466 	svcpl	0x00007466
     b40:	75736572 	ldrbvc	r6, [r3, #-1394]!	; 0xfffffa8e
     b44:	6b5f746c 	blvs	17ddcfc <_Min_Stack_Size+0x17dd8fc>
     b48:	42535500 	subsmi	r5, r3, #0, 10
     b4c:	6e6f435f 	mcrvs	3, 3, r4, cr15, cr15, {2}
     b50:	44676966 	strbtmi	r6, [r7], #-2406	; 0xfffff69a
     b54:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
     b58:	6f747069 	svcvs	0x00747069
     b5c:	615f0072 	cmpvs	pc, r2, ror r0	; <UNPREDICTABLE>
     b60:	69746373 	ldmdbvs	r4!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
     b64:	625f656d 	subsvs	r6, pc, #457179136	; 0x1b400000
     b68:	5f006675 	svcpl	0x00006675
     b6c:	4946735f 	stmdbmi	r6, {r0, r1, r2, r3, r4, r6, r8, r9, ip, sp, lr}^
     b70:	5f00454c 	svcpl	0x0000454c
     b74:	00736477 	rsbseq	r6, r3, r7, ror r4
     b78:	49465f5f 	stmdbmi	r6, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
     b7c:	5f00454c 	svcpl	0x0000454c
     b80:	7366666f 	cmnvc	r6, #116391936	; 0x6f00000
     b84:	5f007465 	svcpl	0x00007465
     b88:	72656d65 	rsbvc	r6, r5, #6464	; 0x1940
     b8c:	636e6567 	cmnvs	lr, #432013312	; 0x19c00000
     b90:	73720079 	cmnvc	r2, #121	; 0x79
     b94:	74666968 	strbtvc	r6, [r6], #-2408	; 0xfffff698
     b98:	745f5f00 	ldrbvc	r5, [pc], #-3840	; ba0 <_Min_Stack_Size+0x7a0>
     b9c:	65735f6d 	ldrbvs	r5, [r3, #-3949]!	; 0xfffff093
     ba0:	5f5f0063 	svcpl	0x005f0063
     ba4:	795f6d74 	ldmdbvc	pc, {r2, r4, r5, r6, r8, sl, fp, sp, lr}^	; <UNPREDICTABLE>
     ba8:	00796164 	rsbseq	r6, r9, r4, ror #2
     bac:	646e695f 	strbtvs	r6, [lr], #-2399	; 0xfffff6a1
     bb0:	70657200 	rsbvc	r7, r5, r0, lsl #4
     bb4:	5f74726f 	svcpl	0x0074726f
     bb8:	69006469 	stmdbvs	r0, {r0, r3, r5, r6, sl, sp, lr}
     bbc:	6e61726e 	cdpvs	2, 6, cr7, cr1, cr14, {3}
     bc0:	5f006567 	svcpl	0x00006567
     bc4:	7273626d 	rsbsvc	r6, r3, #-805306362	; 0xd0000006
     bc8:	63776f74 	cmnvs	r7, #116, 30	; 0x1d0
     bcc:	74735f73 	ldrbtvc	r5, [r3], #-3955	; 0xfffff08d
     bd0:	00657461 	rsbeq	r7, r5, r1, ror #8
     bd4:	61765f5f 	cmnvs	r6, pc, asr pc
     bd8:	0065756c 	rsbeq	r7, r5, ip, ror #10
     bdc:	6f706572 	svcvs	0x00706572
     be0:	745f7472 	ldrbvc	r7, [pc], #-1138	; be8 <_Min_Stack_Size+0x7e8>
     be4:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
     be8:	705f0074 	subsvc	r0, pc, r4, ror r0	; <UNPREDICTABLE>
     bec:	5f007335 	svcpl	0x00007335
     bf0:	72736377 	rsbsvc	r6, r3, #-603979775	; 0xdc000001
     bf4:	626d6f74 	rsbvs	r6, sp, #116, 30	; 0x1d0
     bf8:	74735f73 	ldrbtvc	r5, [r3], #-3955	; 0xfffff08d
     bfc:	00657461 	rsbeq	r7, r5, r1, ror #8
     c00:	6c626d5f 	stclvs	13, cr6, [r2], #-380	; 0xfffffe84
     c04:	735f6e65 	cmpvc	pc, #1616	; 0x650
     c08:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
     c0c:	79656b00 	stmdbvc	r5!, {r8, r9, fp, sp, lr}^
     c10:	5f5f0073 	svcpl	0x005f0073
     c14:	6d5f6d74 	ldclvs	13, cr6, [pc, #-464]	; a4c <_Min_Stack_Size+0x64c>
     c18:	00796164 	rsbseq	r6, r9, r4, ror #2
     c1c:	6769735f 			; <UNDEFINED> instruction: 0x6769735f
     c20:	6e75665f 	mrcvs	6, 3, r6, cr5, cr15, {2}
     c24:	6d5f0063 	ldclvs	0, cr0, [pc, #-396]	; aa0 <_Min_Stack_Size+0x6a0>
     c28:	6f747262 	svcvs	0x00747262
     c2c:	735f6377 	cmpvc	pc, #-603979775	; 0xdc000001
     c30:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
     c34:	74615f00 	strbtvc	r5, [r1], #-3840	; 0xfffff100
     c38:	74697865 	strbtvc	r7, [r9], #-2149	; 0xfffff79b
     c3c:	676c0030 			; <UNDEFINED> instruction: 0x676c0030
     c40:	5f006975 	svcpl	0x00006975
     c44:	636f6c66 	cmnvs	pc, #26112	; 0x6600
     c48:	00745f6b 	rsbseq	r5, r4, fp, ror #30
     c4c:	63775f5f 	cmnvs	r7, #380	; 0x17c
     c50:	695f0068 	ldmdbvs	pc, {r3, r5, r6}^	; <UNPREDICTABLE>
     c54:	0073626f 	rsbseq	r6, r3, pc, ror #4
     c58:	63756f74 	cmnvs	r5, #116, 30	; 0x1d0
     c5c:	635f0068 	cmpvs	pc, #104	; 0x68
     c60:	65736f6c 	ldrbvs	r6, [r3, #-3948]!	; 0xfffff094
     c64:	735f5f00 	cmpvc	pc, #0, 30
     c68:	69646964 	stmdbvs	r4!, {r2, r5, r6, r8, fp, sp, lr}^
     c6c:	0074696e 	rsbseq	r6, r4, lr, ror #18
     c70:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
     c74:	5f006e69 	svcpl	0x00006e69
     c78:	6d6d6167 	stfvse	f6, [sp, #-412]!	; 0xfffffe64
     c7c:	69735f61 	ldmdbvs	r3!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
     c80:	61676e67 	cmnvs	r7, r7, ror #28
     c84:	625f006d 	subsvs	r0, pc, #109	; 0x6d
     c88:	00657361 	rsbeq	r7, r5, r1, ror #6
     c8c:	6572665f 	ldrbvs	r6, [r2, #-1631]!	; 0xfffff9a1
     c90:	73696c65 	cmnvc	r9, #25856	; 0x6500
     c94:	6d5f0074 	ldclvs	0, cr0, [pc, #-464]	; acc <_Min_Stack_Size+0x6cc>
     c98:	00746c75 	rsbseq	r6, r4, r5, ror ip
     c9c:	4c555f5f 	mrrcmi	15, 5, r5, r5, cr15	; <UNPREDICTABLE>
     ca0:	00676e6f 	rsbeq	r6, r7, pc, ror #28
     ca4:	7263775f 	rsbvc	r7, r3, #24903680	; 0x17c0000
     ca8:	626d6f74 	rsbvs	r6, sp, #116, 30	; 0x1d0
     cac:	6174735f 	cmnvs	r4, pc, asr r3
     cb0:	5f006574 	svcpl	0x00006574
     cb4:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
     cb8:	635f5f00 	cmpvs	pc, #0, 30
     cbc:	6e61656c 	cdpvs	5, 6, cr6, cr1, cr12, {3}
     cc0:	6c007075 	stcvs	0, cr7, [r0], {117}	; 0x75
     cc4:	00746c61 	rsbseq	r6, r4, r1, ror #24
     cc8:	73626d5f 	cmnvc	r2, #6080	; 0x17c0
     ccc:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
     cd0:	5f00745f 	svcpl	0x0000745f
     cd4:	5f6d745f 	svcpl	0x006d745f
     cd8:	73647369 	cmnvc	r4, #-1543503871	; 0xa4000001
     cdc:	695f0074 	ldmdbvs	pc, {r2, r4, r5, r6}^	; <UNPREDICTABLE>
     ce0:	5f00636e 	svcpl	0x0000636e
     ce4:	72655f68 	rsbvc	r5, r5, #104, 30	; 0x1a0
     ce8:	006f6e72 	rsbeq	r6, pc, r2, ror lr	; <UNPREDICTABLE>
     cec:	69646f6d 	stmdbvs	r4!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
     cf0:	72656966 	rsbvc	r6, r5, #1671168	; 0x198000
     cf4:	5f5f0073 	svcpl	0x005f0073
     cf8:	6d5f6d74 	ldclvs	13, cr6, [pc, #-464]	; b30 <_Min_Stack_Size+0x730>
     cfc:	6c006e6f 	stcvs	14, cr6, [r0], {111}	; 0x6f
     d00:	20676e6f 	rsbcs	r6, r7, pc, ror #28
     d04:	62756f64 	rsbsvs	r6, r5, #100, 30	; 0x190
     d08:	5f00656c 	svcpl	0x0000656c
     d0c:	78657461 	stmdavc	r5!, {r0, r5, r6, sl, ip, sp, lr}^
     d10:	5f007469 	svcpl	0x00007469
     d14:	7473626d 	ldrbtvc	r6, [r3], #-621	; 0xfffffd93
     d18:	00657461 	rsbeq	r7, r5, r1, ror #8
     d1c:	6769425f 			; <UNDEFINED> instruction: 0x6769425f
     d20:	00746e69 	rsbseq	r6, r4, r9, ror #28
     d24:	616c6564 	cmnvs	ip, r4, ror #10
     d28:	53620079 	cmnpl	r2, #121	; 0x79
     d2c:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
     d30:	72730067 	rsbsvc	r0, r3, #103	; 0x67
     d34:	73752f63 	cmnvc	r5, #396	; 0x18c
     d38:	6c635f62 	stclvs	15, cr5, [r3], #-392	; 0xfffffe78
     d3c:	5f737361 	svcpl	0x00737361
     d40:	2e646968 	vnmulcs.f16	s13, s8, s17	; <UNPREDICTABLE>
     d44:	5f5f0063 	svcpl	0x005f0063
     d48:	5f006673 	svcpl	0x00006673
     d4c:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
     d50:	61645f00 	cmnvs	r4, r0, lsl #30
     d54:	5f006174 	svcpl	0x00006174
     d58:	6863775f 	stmdavs	r3!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}^
     d5c:	675f0062 	ldrbvs	r0, [pc, -r2, rrx]
     d60:	61626f6c 	cmnvs	r2, ip, ror #30
     d64:	6d695f6c 	stclvs	15, cr5, [r9, #-432]!	; 0xfffffe50
     d68:	65727570 	ldrbvs	r7, [r2, #-1392]!	; 0xfffffa90
     d6c:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
     d70:	745f5f00 	ldrbvc	r5, [pc], #-3840	; d78 <_Min_Stack_Size+0x978>
     d74:	65795f6d 	ldrbvs	r5, [r9, #-3949]!	; 0xfffff093
     d78:	55007261 	strpl	r7, [r0, #-609]	; 0xfffffd9f
     d7c:	535f4253 	cmppl	pc, #805306373	; 0x30000005
     d80:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
     d84:	72655367 	rsbvc	r5, r5, #-1677721599	; 0x9c000001
     d88:	446c6169 	strbtmi	r6, [ip], #-361	; 0xfffffe97
     d8c:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
     d90:	6f747069 	svcvs	0x00747069
     d94:	6c5f0072 	mrrcvs	0, 7, r0, pc, cr2	; <UNPREDICTABLE>
     d98:	6c61636f 	stclvs	3, cr6, [r1], #-444	; 0xfffffe44
     d9c:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
     da0:	6675625f 			; <UNDEFINED> instruction: 0x6675625f
     da4:	42535500 	subsmi	r5, r3, #0, 10
     da8:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
     dac:	4c676e69 	stclmi	14, cr6, [r7], #-420	; 0xfffffe5c
     db0:	44676e61 	strbtmi	r6, [r7], #-3681	; 0xfffff19f
     db4:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
     db8:	6f747069 	svcvs	0x00747069
     dbc:	755f0072 	ldrbvc	r0, [pc, #-114]	; d52 <_Min_Stack_Size+0x952>
     dc0:	6573756e 	ldrbvs	r7, [r3, #-1390]!	; 0xfffffa92
     dc4:	6e5f0064 	cdpvs	0, 5, cr0, cr15, cr4, {3}
     dc8:	5f007765 	svcpl	0x00007765
     dcc:	6c747663 	ldclvs	6, cr7, [r4], #-396	; 0xfffffe74
     dd0:	5f006e65 	svcpl	0x00006e65
     dd4:	7778616d 	ldrbvc	r6, [r8, -sp, ror #2]!
     dd8:	5f007364 	svcpl	0x00007364
     ddc:	6134366c 	teqvs	r4, ip, ror #12
     de0:	6675625f 			; <UNDEFINED> instruction: 0x6675625f
     de4:	6c625f00 	stclvs	15, cr5, [r2], #-0
     de8:	7a69736b 	bvc	1a5db9c <_Min_Stack_Size+0x1a5d79c>
     dec:	5f5f0065 	svcpl	0x005f0065
     df0:	5f006d74 	svcpl	0x00006d74
     df4:	6b636f6c 	blvs	18dcbac <_Min_Stack_Size+0x18dc7ac>
     df8:	42535500 	subsmi	r5, r3, #0, 10
     dfc:	7665445f 			; <UNDEFINED> instruction: 0x7665445f
     e00:	51656369 	cmnpl	r5, r9, ror #6
     e04:	696c6175 	stmdbvs	ip!, {r0, r2, r4, r5, r6, r8, sp, lr}^
     e08:	72656966 	rsbvc	r6, r5, #1671168	; 0x198000
     e0c:	63736544 	cmnvs	r3, #68, 10	; 0x11000000
     e10:	74706972 	ldrbtvc	r6, [r0], #-2418	; 0xfffff68e
     e14:	6200726f 	andvs	r7, r0, #-268435450	; 0xf0000006
     e18:	6f747475 	svcvs	0x00747475
     e1c:	5f00736e 	svcpl	0x0000736e
     e20:	626f696e 	rsbvs	r6, pc, #1802240	; 0x1b8000
     e24:	69770073 	ldmdbvs	r7!, {r0, r1, r4, r5, r6}^
     e28:	745f746e 	ldrbvc	r7, [pc], #-1134	; e30 <_Min_Stack_Size+0xa30>
     e2c:	73645f00 	cmnvc	r4, #0, 30
     e30:	61685f6f 	cmnvs	r8, pc, ror #30
     e34:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     e38:	74637200 	strbtvc	r7, [r3], #-512	; 0xfffffe00
     e3c:	5f006c72 	svcpl	0x00006c72
     e40:	62747663 	rsbsvs	r7, r4, #103809024	; 0x6300000
     e44:	5f006675 	svcpl	0x00006675
     e48:	64746567 	ldrbtvs	r6, [r4], #-1383	; 0xfffffa99
     e4c:	5f657461 	svcpl	0x00657461
     e50:	00727265 	rsbseq	r7, r2, r5, ror #4
     e54:	5f425355 	svcpl	0x00425355
     e58:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
     e5c:	65446563 	strbvs	r6, [r4, #-1379]	; 0xfffffa9d
     e60:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
     e64:	726f7470 	rsbvc	r7, pc, #112, 8	; 0x70000000
     e68:	64615f00 	strbtvs	r5, [r1], #-3840	; 0xfffff100
     e6c:	67720064 	ldrbvs	r0, [r2, -r4, rrx]!
     e70:	62006975 	andvs	r6, r0, #1916928	; 0x1d4000
     e74:	63736544 	cmnvs	r3, #68, 10	; 0x11000000
     e78:	74706972 	ldrbtvc	r6, [r0], #-2418	; 0xfffff68e
     e7c:	7954726f 	ldmdbvc	r4, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
     e80:	5f006570 	svcpl	0x00006570
     e84:	7562735f 	strbvc	r7, [r2, #-863]!	; 0xfffffca1
     e88:	53550066 	cmppl	r5, #102	; 0x66
     e8c:	74535f42 	ldrbvc	r5, [r3], #-3906	; 0xfffff0be
     e90:	676e6972 			; <UNDEFINED> instruction: 0x676e6972
     e94:	756e614d 	strbvc	r6, [lr, #-333]!	; 0xfffffeb3
     e98:	74636166 	strbtvc	r6, [r3], #-358	; 0xfffffe9a
     e9c:	6e697275 	mcrvs	2, 3, r7, cr9, cr5, {3}
     ea0:	73654467 	cmnvc	r5, #1728053248	; 0x67000000
     ea4:	70697263 	rsbvc	r7, r9, r3, ror #4
     ea8:	00726f74 	rsbseq	r6, r2, r4, ror pc
     eac:	756c675f 	strbvc	r6, [ip, #-1887]!	; 0xfffff8a1
     eb0:	5f5f0065 	svcpl	0x005f0065
     eb4:	756c6773 	strbvc	r6, [ip, #-1907]!	; 0xfffff88d
     eb8:	735f0065 	cmpvc	pc, #101	; 0x65
     ebc:	6f747274 	svcvs	0x00747274
     ec0:	616c5f6b 	cmnvs	ip, fp, ror #30
     ec4:	5f007473 	svcpl	0x00007473
     ec8:	6f74626d 	svcvs	0x0074626d
     ecc:	735f6377 	cmpvc	pc, #-603979775	; 0xdc000001
     ed0:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
     ed4:	6f6c5f00 	svcvs	0x006c5f00
     ed8:	656c6163 	strbvs	r6, [ip, #-355]!	; 0xfffffe9d
     edc:	6c617200 	sfmvs	f7, 2, [r1], #-0
     ee0:	665f0074 			; <UNDEFINED> instruction: 0x665f0074
     ee4:	6772616e 	ldrbvs	r6, [r2, -lr, ror #2]!
     ee8:	725f0073 	subsvc	r0, pc, #115	; 0x73
     eec:	746e6565 	strbtvc	r6, [lr], #-1381	; 0xfffffa9b
     ef0:	42535500 	subsmi	r5, r3, #0, 10
     ef4:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
     ef8:	50676e69 	rsbpl	r6, r7, r9, ror #28
     efc:	44646f72 	strbtmi	r6, [r4], #-3954	; 0xfffff08e
     f00:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
     f04:	6f747069 	svcvs	0x00747069
     f08:	665f0072 			; <UNDEFINED> instruction: 0x665f0072
     f0c:	7079746e 	rsbsvc	r7, r9, lr, ror #8
     f10:	72007365 	andvc	r7, r0, #-1811939327	; 0x94000001
     f14:	72657365 	rsbvc	r7, r5, #-1811939327	; 0x94000001
     f18:	00646576 	rsbeq	r6, r4, r6, ror r5
     f1c:	66666f5f 	uqsaxvs	r6, r6, pc	; <UNPREDICTABLE>
     f20:	5f00745f 	svcpl	0x0000745f
     f24:	6675626e 	ldrbtvs	r6, [r5], -lr, ror #4
     f28:	6e755f00 	cdpvs	15, 7, cr5, cr5, cr0, {0}
     f2c:	64657375 	strbtvs	r7, [r5], #-885	; 0xfffffc8b
     f30:	6e61725f 	mcrvs	2, 3, r7, cr1, cr15, {2}
     f34:	4c620064 	stclmi	0, cr0, [r2], #-400	; 0xfffffe70
     f38:	74676e65 	strbtvc	r6, [r7], #-3685	; 0xfffff19b
     f3c:	755f0068 	ldrbvc	r0, [pc, #-104]	; edc <_Min_Stack_Size+0xadc>
     f40:	6570736e 	ldrbvs	r7, [r0, #-878]!	; 0xfffffc92
     f44:	69666963 	stmdbvs	r6!, {r0, r1, r5, r6, r8, fp, sp, lr}^
     f48:	6c5f6465 	cfldrdvs	mvd6, [pc], {101}	; 0x65
     f4c:	6c61636f 	stclvs	3, cr6, [r1], #-444	; 0xfffffe44
     f50:	6e695f65 	cdpvs	15, 6, cr5, cr9, cr5, {3}
     f54:	5f006f66 	svcpl	0x00006f66
     f58:	67616c66 	strbvs	r6, [r1, -r6, ror #24]!
     f5c:	5f003273 	svcpl	0x00003273
     f60:	635f7369 	cmpvs	pc, #-1543503871	; 0xa4000001
     f64:	5f006178 	svcpl	0x00006178
     f68:	64656573 	strbtvs	r6, [r5], #-1395	; 0xfffffa8d
     f6c:	61725f00 	cmnvs	r2, r0, lsl #30
     f70:	6e5f646e 	cdpvs	4, 5, cr6, cr15, cr14, {3}
     f74:	00747865 	rsbseq	r7, r4, r5, ror #16
     f78:	6f6c5f5f 	svcvs	0x006c5f5f
     f7c:	656c6163 	strbvs	r6, [ip, #-355]!	; 0xfffffe9d
     f80:	5f00745f 	svcpl	0x0000745f
     f84:	6b656573 	blvs	195a558 <_Min_Stack_Size+0x195a158>
     f88:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
     f8c:	72726564 	rsbsvc	r6, r2, #100, 10	; 0x19000000
     f90:	62755f00 	rsbsvs	r5, r5, #0, 30
     f94:	6f006675 	svcvs	0x00006675
     f98:	5f707475 	svcpl	0x00707475
     f9c:	00716572 	rsbseq	r6, r1, r2, ror r5
     fa0:	6e695f5f 	mcrvs	15, 3, r5, cr9, cr15, {2}
     fa4:	615f7469 	cmpvs	pc, r9, ror #8
     fa8:	79617272 	stmdbvc	r1!, {r1, r4, r5, r6, r9, ip, sp, lr}^
     fac:	6174735f 	cmnvs	r4, pc, asr r3
     fb0:	73007472 	movwvc	r7, #1138	; 0x472
     fb4:	5f657a69 	svcpl	0x00657a69
     fb8:	5f5f0074 	svcpl	0x005f0074
     fbc:	6362696c 	cmnvs	r2, #108, 18	; 0x1b0000
     fc0:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
     fc4:	72615f74 	rsbvc	r5, r1, #116, 30	; 0x1d0
     fc8:	00796172 	rsbseq	r6, r9, r2, ror r1
     fcc:	6975622f 	ldmdbvs	r5!, {r0, r1, r2, r3, r5, r9, sp, lr}^
     fd0:	6e2f646c 	cdpvs	4, 2, cr6, cr15, cr12, {3}
     fd4:	696c7765 	stmdbvs	ip!, {r0, r2, r5, r6, r8, r9, sl, ip, sp, lr}^
     fd8:	476b2d62 	strbmi	r2, [fp, -r2, ror #26]!
     fdc:	45777667 	ldrbmi	r7, [r7, #-1639]!	; 0xfffff999
     fe0:	77656e2f 	strbvc	r6, [r5, -pc, lsr #28]!
     fe4:	2d62696c 			; <UNDEFINED> instruction: 0x2d62696c
     fe8:	2e332e33 	mrccs	14, 1, r2, cr3, cr3, {1}
     fec:	75622f30 	strbvc	r2, [r2, #-3888]!	; 0xfffff0d0
     ff0:	5f646c69 	svcpl	0x00646c69
     ff4:	6f6e616e 	svcvs	0x006e616e
     ff8:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
     ffc:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    1000:	61652d65 	cmnvs	r5, r5, ror #26
    1004:	742f6962 	strtvc	r6, [pc], #-2402	; 100c <_Min_Stack_Size+0xc0c>
    1008:	626d7568 	rsbvs	r7, sp, #104, 10	; 0x1a000000
    100c:	2d37762f 	ldccs	6, cr7, [r7, #-188]!	; 0xffffff44
    1010:	6f6e2f6d 	svcvs	0x006e2f6d
    1014:	6e2f7066 	cdpvs	0, 2, cr7, cr15, cr6, {3}
    1018:	696c7765 	stmdbvs	ip!, {r0, r2, r5, r6, r8, r9, sl, ip, sp, lr}^
    101c:	696c2f62 	stmdbvs	ip!, {r1, r5, r6, r8, r9, sl, fp, sp}^
    1020:	6d2f6362 	stcvs	3, cr6, [pc, #-392]!	; ea0 <_Min_Stack_Size+0xaa0>
    1024:	00637369 	rsbeq	r7, r3, r9, ror #6
    1028:	72705f5f 	rsbsvc	r5, r0, #380	; 0x17c
    102c:	696e6965 	stmdbvs	lr!, {r0, r2, r5, r6, r8, fp, sp, lr}^
    1030:	72615f74 	rsbvc	r5, r1, #116, 30	; 0x1d0
    1034:	5f796172 	svcpl	0x00796172
    1038:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
    103c:	4e470074 	mcrmi	0, 2, r0, cr7, cr4, {3}
    1040:	31432055 	qdaddcc	r2, r5, r3
    1044:	2e382037 	mrccs	0, 1, r2, cr8, cr7, {1}
    1048:	20312e33 	eorscs	r2, r1, r3, lsr lr
    104c:	39313032 	ldmdbcc	r1!, {r1, r4, r5, ip, sp}
    1050:	33303730 	teqcc	r0, #48, 14	; 0xc00000
    1054:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
    1058:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
    105c:	5b202965 	blpl	80b5f8 <_Min_Stack_Size+0x80b1f8>
    1060:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    1064:	72622d38 	rsbvc	r2, r2, #56, 26	; 0xe00
    1068:	68636e61 	stmdavs	r3!, {r0, r5, r6, r9, sl, fp, sp, lr}^
    106c:	76657220 	strbtvc	r7, [r5], -r0, lsr #4
    1070:	6f697369 	svcvs	0x00697369
    1074:	3732206e 	ldrcc	r2, [r2, -lr, rrx]!
    1078:	37323033 			; <UNDEFINED> instruction: 0x37323033
    107c:	6d2d205d 	stcvs	0, cr2, [sp, #-372]!	; 0xfffffe8c
    1080:	616f6c66 	cmnvs	pc, r6, ror #24
    1084:	62612d74 	rsbvs	r2, r1, #116, 26	; 0x1d00
    1088:	6f733d69 	svcvs	0x00733d69
    108c:	2d207466 	cfstrscs	mvf7, [r0, #-408]!	; 0xfffffe68
    1090:	7568746d 	strbvc	r7, [r8, #-1133]!	; 0xfffffb93
    1094:	2d20626d 	sfmcs	f6, 4, [r0, #-436]!	; 0xfffffe4c
    1098:	6f6c666d 	svcvs	0x006c666d
    109c:	612d7461 			; <UNDEFINED> instruction: 0x612d7461
    10a0:	733d6962 	teqvc	sp, #1605632	; 0x188000
    10a4:	2074666f 	rsbscs	r6, r4, pc, ror #12
    10a8:	72616d2d 	rsbvc	r6, r1, #2880	; 0xb40
    10ac:	613d6863 	teqvs	sp, r3, ror #16
    10b0:	37766d72 			; <UNDEFINED> instruction: 0x37766d72
    10b4:	2d206d2d 	stccs	13, cr6, [r0, #-180]!	; 0xffffff4c
    10b8:	4f2d2067 	svcmi	0x002d2067
    10bc:	662d2032 			; <UNDEFINED> instruction: 0x662d2032
    10c0:	622d6f6e 	eorvs	r6, sp, #440	; 0x1b8
    10c4:	746c6975 	strbtvc	r6, [ip], #-2421	; 0xfffff68b
    10c8:	5f006e69 	svcpl	0x00006e69
    10cc:	6572705f 	ldrbvs	r7, [r2, #-95]!	; 0xffffffa1
    10d0:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
    10d4:	7272615f 	rsbsvc	r6, r2, #-1073741801	; 0xc0000017
    10d8:	655f7961 	ldrbvs	r7, [pc, #-2401]	; 77f <_Min_Stack_Size+0x37f>
    10dc:	5f00646e 	svcpl	0x0000646e
    10e0:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
    10e4:	72615f74 	rsbvc	r5, r1, #116, 30	; 0x1d0
    10e8:	5f796172 	svcpl	0x00796172
    10ec:	00646e65 	rsbeq	r6, r4, r5, ror #28
    10f0:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    10f4:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    10f8:	2f2e2e2f 	svccs	0x002e2e2f
    10fc:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1100:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1104:	2f2e2e2f 	svccs	0x002e2e2f
    1108:	6c77656e 	cfldr64vs	mvdx6, [r7], #-440	; 0xfffffe48
    110c:	6c2f6269 	sfmvs	f6, 4, [pc], #-420	; f70 <_Min_Stack_Size+0xb70>
    1110:	2f636269 	svccs	0x00636269
    1114:	6373696d 	cmnvs	r3, #1785856	; 0x1b4000
    1118:	696e692f 	stmdbvs	lr!, {r0, r1, r2, r3, r5, r8, fp, sp, lr}^
    111c:	00632e74 	rsbeq	r2, r3, r4, ror lr

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <_Min_Stack_Size+0x10d0924>
   4:	35312820 	ldrcc	r2, [r1, #-2080]!	; 0xfffff7e0
   8:	322d383a 	eorcc	r3, sp, #3801088	; 0x3a0000
   c:	2d393130 	ldfcss	f3, [r9, #-192]!	; 0xffffff40
  10:	312d3371 			; <UNDEFINED> instruction: 0x312d3371
  14:	2e382029 	cdpcs	0, 3, cr2, cr8, cr9, {1}
  18:	20312e33 	eorscs	r2, r1, r3, lsr lr
  1c:	39313032 	ldmdbcc	r1!, {r1, r4, r5, ip, sp}
  20:	33303730 	teqcc	r0, #48, 14	; 0xc00000
  24:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
  28:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
  2c:	5b202965 	blpl	80a5c8 <_Min_Stack_Size+0x80a1c8>
  30:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
  34:	72622d38 	rsbvc	r2, r2, #56, 26	; 0xe00
  38:	68636e61 	stmdavs	r3!, {r0, r5, r6, r9, sl, fp, sp, lr}^
  3c:	76657220 	strbtvc	r7, [r5], -r0, lsr #4
  40:	6f697369 	svcvs	0x00697369
  44:	3732206e 	ldrcc	r2, [r2, -lr, rrx]!
  48:	37323033 			; <UNDEFINED> instruction: 0x37323033
  4c:	Address 0x000000000000004c is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	08000150 	stmdaeq	r0, {r4, r6, r8}
  1c:	00000098 	muleq	r0, r8, r0
  20:	0000000c 	andeq	r0, r0, ip
  24:	00000000 	andeq	r0, r0, r0
  28:	080001e8 	stmdaeq	r0, {r3, r5, r6, r7, r8}
  2c:	00000124 	andeq	r0, r0, r4, lsr #2
  30:	0000000c 	andeq	r0, r0, ip
  34:	00000000 	andeq	r0, r0, r0
  38:	0800030c 	stmdaeq	r0, {r2, r3, r8, r9}
  3c:	00000048 	andeq	r0, r0, r8, asr #32
  40:	0000000c 	andeq	r0, r0, ip
  44:	00000000 	andeq	r0, r0, r0
  48:	08000354 	stmdaeq	r0, {r2, r4, r6, r8, r9}
  4c:	00000002 	andeq	r0, r0, r2
  50:	0000000c 	andeq	r0, r0, ip
  54:	00000000 	andeq	r0, r0, r0
  58:	08000356 	stmdaeq	r0, {r1, r2, r4, r6, r8, r9}
  5c:	00000002 	andeq	r0, r0, r2
  60:	0000000c 	andeq	r0, r0, ip
  64:	00000000 	andeq	r0, r0, r0
  68:	08000358 	stmdaeq	r0, {r3, r4, r6, r8, r9}
  6c:	0000000c 	andeq	r0, r0, ip
  70:	00000014 	andeq	r0, r0, r4, lsl r0
  74:	00000000 	andeq	r0, r0, r0
  78:	08000bd8 	stmdaeq	r0, {r3, r4, r6, r7, r8, r9, fp}
  7c:	00000084 	andeq	r0, r0, r4, lsl #1
  80:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
  84:	00018e02 	andeq	r8, r1, r2, lsl #28
  88:	0000000c 	andeq	r0, r0, ip
  8c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
  90:	7c020001 	stcvc	0, cr0, [r2], {1}
  94:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  98:	0000000c 	andeq	r0, r0, ip
  9c:	00000088 	andeq	r0, r0, r8, lsl #1
  a0:	08000364 	stmdaeq	r0, {r2, r5, r6, r8, r9}
  a4:	00000002 	andeq	r0, r0, r2
  a8:	0000000c 	andeq	r0, r0, ip
  ac:	00000088 	andeq	r0, r0, r8, lsl #1
  b0:	08000366 	stmdaeq	r0, {r1, r2, r5, r6, r8, r9}
  b4:	00000002 	andeq	r0, r0, r2
  b8:	0000000c 	andeq	r0, r0, ip
  bc:	00000088 	andeq	r0, r0, r8, lsl #1
  c0:	08000368 	stmdaeq	r0, {r3, r5, r6, r8, r9}
  c4:	00000002 	andeq	r0, r0, r2
  c8:	0000000c 	andeq	r0, r0, ip
  cc:	00000088 	andeq	r0, r0, r8, lsl #1
  d0:	0800036a 	stmdaeq	r0, {r1, r3, r5, r6, r8, r9}
  d4:	00000004 	andeq	r0, r0, r4
  d8:	0000000c 	andeq	r0, r0, ip
  dc:	00000088 	andeq	r0, r0, r8, lsl #1
  e0:	0800036e 	stmdaeq	r0, {r1, r2, r3, r5, r6, r8, r9}
  e4:	00000004 	andeq	r0, r0, r4
  e8:	0000000c 	andeq	r0, r0, ip
  ec:	00000088 	andeq	r0, r0, r8, lsl #1
  f0:	08000372 	stmdaeq	r0, {r1, r4, r5, r6, r8, r9}
  f4:	0000006e 	andeq	r0, r0, lr, rrx
  f8:	0000001c 	andeq	r0, r0, ip, lsl r0
  fc:	00000088 	andeq	r0, r0, r8, lsl #1
 100:	080003e0 	stmdaeq	r0, {r5, r6, r7, r8, r9}
 104:	0000010c 	andeq	r0, r0, ip, lsl #2
 108:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
 10c:	86048505 	strhi	r8, [r4], -r5, lsl #10
 110:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 114:	00000001 	andeq	r0, r0, r1
 118:	0000001c 	andeq	r0, r0, ip, lsl r0
 11c:	00000088 	andeq	r0, r0, r8, lsl #1
 120:	080004ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, sl}
 124:	0000014c 	andeq	r0, r0, ip, asr #2
 128:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
 12c:	86048505 	strhi	r8, [r4], -r5, lsl #10
 130:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 134:	00000001 	andeq	r0, r0, r1
 138:	00000018 	andeq	r0, r0, r8, lsl r0
 13c:	00000088 	andeq	r0, r0, r8, lsl #1
 140:	08000638 	stmdaeq	r0, {r3, r4, r5, r9, sl}
 144:	00000128 	andeq	r0, r0, r8, lsr #2
 148:	83100e41 	tsthi	r0, #1040	; 0x410
 14c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
 150:	00018e02 	andeq	r8, r1, r2, lsl #28
 154:	0000001c 	andeq	r0, r0, ip, lsl r0
 158:	00000088 	andeq	r0, r0, r8, lsl #1
 15c:	08000760 	stmdaeq	r0, {r5, r6, r8, r9, sl}
 160:	00000054 	andeq	r0, r0, r4, asr r0
 164:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
 168:	86048505 	strhi	r8, [r4], -r5, lsl #10
 16c:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 170:	00000001 	andeq	r0, r0, r1
 174:	0000001c 	andeq	r0, r0, ip, lsl r0
 178:	00000088 	andeq	r0, r0, r8, lsl #1
 17c:	080007b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, r9, sl}
 180:	0000005c 	andeq	r0, r0, ip, asr r0
 184:	83180e41 	tsthi	r8, #1040	; 0x410
 188:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
 18c:	87038604 	strhi	r8, [r3, -r4, lsl #12]
 190:	00018e02 	andeq	r8, r1, r2, lsl #28
 194:	00000018 	andeq	r0, r0, r8, lsl r0
 198:	00000088 	andeq	r0, r0, r8, lsl #1
 19c:	08000810 	stmdaeq	r0, {r4, fp}
 1a0:	0000005a 	andeq	r0, r0, sl, asr r0
 1a4:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 1a8:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
 1ac:	00000001 	andeq	r0, r0, r1
 1b0:	00000020 	andeq	r0, r0, r0, lsr #32
 1b4:	00000088 	andeq	r0, r0, r8, lsl #1
 1b8:	0800086a 	stmdaeq	r0, {r1, r3, r5, r6, fp}
 1bc:	0000011a 	andeq	r0, r0, sl, lsl r1
 1c0:	84180e41 	ldrhi	r0, [r8], #-3649	; 0xfffff1bf
 1c4:	86038504 	strhi	r8, [r3], -r4, lsl #10
 1c8:	02018e02 	andeq	r8, r1, #2, 28
 1cc:	100e0a46 	andne	r0, lr, r6, asr #20
 1d0:	00000b41 	andeq	r0, r0, r1, asr #22
 1d4:	0000000c 	andeq	r0, r0, ip
 1d8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 1dc:	7c020001 	stcvc	0, cr0, [r2], {1}
 1e0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 1e4:	0000000c 	andeq	r0, r0, ip
 1e8:	000001d4 	ldrdeq	r0, [r0], -r4
 1ec:	08000984 	stmdaeq	r0, {r2, r7, r8, fp}
 1f0:	00000002 	andeq	r0, r0, r2
 1f4:	00000014 	andeq	r0, r0, r4, lsl r0
 1f8:	000001d4 	ldrdeq	r0, [r0], -r4
 1fc:	08000986 	stmdaeq	r0, {r1, r2, r7, r8, fp}
 200:	0000003a 	andeq	r0, r0, sl, lsr r0
 204:	8e180e41 	cdphi	14, 1, cr0, cr8, cr1, {2}
 208:	040e5701 	streq	r5, [lr], #-1793	; 0xfffff8ff
 20c:	0000000c 	andeq	r0, r0, ip
 210:	000001d4 	ldrdeq	r0, [r0], -r4
 214:	080009c0 	stmdaeq	r0, {r6, r7, r8, fp}
 218:	0000007c 	andeq	r0, r0, ip, ror r0
 21c:	0000000c 	andeq	r0, r0, ip
 220:	000001d4 	ldrdeq	r0, [r0], -r4
 224:	08000a3c 	stmdaeq	r0, {r2, r3, r4, r5, r9, fp}
 228:	00000028 	andeq	r0, r0, r8, lsr #32
 22c:	00000018 	andeq	r0, r0, r8, lsl r0
 230:	000001d4 	ldrdeq	r0, [r0], -r4
 234:	08000a64 	stmdaeq	r0, {r2, r5, r6, r9, fp}
 238:	00000028 	andeq	r0, r0, r8, lsr #32
 23c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
 240:	48018e02 	stmdami	r1, {r1, r9, sl, fp, pc}
 244:	000ec4ce 	andeq	ip, lr, lr, asr #9
 248:	0000000c 	andeq	r0, r0, ip
 24c:	000001d4 	ldrdeq	r0, [r0], -r4
 250:	08000a8c 	stmdaeq	r0, {r2, r3, r7, r9, fp}
 254:	0000000a 	andeq	r0, r0, sl
 258:	0000001c 	andeq	r0, r0, ip, lsl r0
 25c:	000001d4 	ldrdeq	r0, [r0], -r4
 260:	08000a96 	stmdaeq	r0, {r1, r2, r4, r7, r9, fp}
 264:	000000ae 	andeq	r0, r0, lr, lsr #1
 268:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
 26c:	02018e02 	andeq	r8, r1, #2, 28
 270:	c4ce0a49 	strbgt	r0, [lr], #2633	; 0xa49
 274:	0b43000e 	bleq	10c02b4 <_Min_Stack_Size+0x10bfeb4>
 278:	0000000c 	andeq	r0, r0, ip
 27c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 280:	7c020001 	stcvc	0, cr0, [r2], {1}
 284:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 288:	00000018 	andeq	r0, r0, r8, lsl r0
 28c:	00000278 	andeq	r0, r0, r8, ror r2
 290:	08000b44 	stmdaeq	r0, {r2, r6, r8, r9, fp}
 294:	00000048 	andeq	r0, r0, r8, asr #32
 298:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
 29c:	86038504 	strhi	r8, [r3], -r4, lsl #10
 2a0:	00018e02 	andeq	r8, r1, r2, lsl #28
