
res/firmware.elf:     file format elf32-littlearm


Disassembly of section .isr_vector:

08000000 <g_pfnVectors>:
 8000000:	20007fff 	strdcs	r7, [r0], -pc	; <UNPREDICTABLE>
 8000004:	08000da9 	stmdaeq	r0, {r0, r3, r5, r7, r8, sl, fp}
 8000008:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 800000c:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 8000010:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 8000014:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 8000018:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
	...
 800002c:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 8000030:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 8000034:	00000000 	andeq	r0, r0, r0
 8000038:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 800003c:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 8000040:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 8000044:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 8000048:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 800004c:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 8000050:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 8000054:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 8000058:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 800005c:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 8000060:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 8000064:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 8000068:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 800006c:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 8000070:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 8000074:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 8000078:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 800007c:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 8000080:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 8000084:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 8000088:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 800008c:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 8000090:	080004cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl}
 8000094:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 8000098:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 800009c:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 80000a0:	00000000 	andeq	r0, r0, r0
 80000a4:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 80000a8:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 80000ac:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 80000b0:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 80000b4:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 80000b8:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 80000bc:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 80000c0:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 80000c4:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 80000c8:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 80000cc:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 80000d0:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 80000d4:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 80000d8:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 80000dc:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 80000e0:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 80000e4:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 80000e8:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 80000ec:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 80000f0:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 80000f4:	00000000 	andeq	r0, r0, r0
 80000f8:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 80000fc:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
	...
 8000108:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 800010c:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 8000110:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 8000114:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 8000118:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
 800011c:	00000000 	andeq	r0, r0, r0
 8000120:	08000df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp}
	...
 8000138:	f108f85f 			; <UNDEFINED> instruction: 0xf108f85f

Disassembly of section .text:

0800013c <init32-0x14>:
 800013c:	08002324 	stmdaeq	r0, {r2, r5, r8, r9, sp}
 8000140:	20000000 	andcs	r0, r0, r0
 8000144:	20000024 	andcs	r0, r0, r4, lsr #32
 8000148:	20000024 	andcs	r0, r0, r4, lsr #32
 800014c:	200076b4 			; <UNDEFINED> instruction: 0x200076b4

08000150 <init32>:
#define CLOCK_FAIL_LSI -4

#define RTC_LSE 1

void init32(uint8_t reinit){
  RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 8000150:	4b21      	ldr	r3, [pc, #132]	; (80001d8 <init32+0x88>)
  PWR->CR |= PWR_CR_DBP;
 8000152:	4922      	ldr	r1, [pc, #136]	; (80001dc <init32+0x8c>)
  RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 8000154:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8000156:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800015a:	625a      	str	r2, [r3, #36]	; 0x24
  PWR->CR |= PWR_CR_DBP;
 800015c:	680a      	ldr	r2, [r1, #0]
 800015e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8000162:	600a      	str	r2, [r1, #0]
  
  if(!reinit){
    //if(RCC->CSR & RCC_CSR_RTCEN)return;
  }
  
  RCC->CSR |= RCC_CSR_RTCRST;
 8000164:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000166:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 800016a:	635a      	str	r2, [r3, #52]	; 0x34
  RCC->CSR &=~RCC_CSR_RTCRST;
 800016c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800016e:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8000172:	635a      	str	r2, [r3, #52]	; 0x34
  
#if RTC_LSE
  RCC->CSR |= RCC_CSR_LSEON; while(!(RCC->CSR & RCC_CSR_LSERDY)){}
 8000174:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000176:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800017a:	635a      	str	r2, [r3, #52]	; 0x34
 800017c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800017e:	0591      	lsls	r1, r2, #22
 8000180:	d5fc      	bpl.n	800017c <init32+0x2c>
#else
  RCC->CSR |= RCC_CSR_LSION; while(!(RCC->CSR & RCC_CSR_LSIRDY)){}
#endif
  
  RCC->CSR &=~RCC_CSR_RTCSEL;
 8000182:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000184:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 8000188:	635a      	str	r2, [r3, #52]	; 0x34
#if RTC_LSE
  RCC->CSR |= RCC_CSR_RTCSEL_LSE; // NOCLOCK / LSI / LSE / HSE
 800018a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800018c:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8000190:	635a      	str	r2, [r3, #52]	; 0x34
#else
  RCC->CSR |= RCC_CSR_RTCSEL_LSI; // NOCLOCK / LSI / LSE / HSE
#endif
  RCC->CSR |= RCC_CSR_RTCEN;
 8000192:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000194:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8000198:	635a      	str	r2, [r3, #52]	; 0x34
  
  RTC->WPR = 0xCA;
 800019a:	22ca      	movs	r2, #202	; 0xca
 800019c:	4b10      	ldr	r3, [pc, #64]	; (80001e0 <init32+0x90>)
 800019e:	625a      	str	r2, [r3, #36]	; 0x24
  RTC->WPR = 0x53;
 80001a0:	2253      	movs	r2, #83	; 0x53
 80001a2:	625a      	str	r2, [r3, #36]	; 0x24
  RTC->ISR |= RTC_ISR_INIT;
 80001a4:	68da      	ldr	r2, [r3, #12]
 80001a6:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80001aa:	60da      	str	r2, [r3, #12]
  while(!(RTC->ISR & RTC_ISR_INITF)){}
 80001ac:	68da      	ldr	r2, [r3, #12]
 80001ae:	0652      	lsls	r2, r2, #25
 80001b0:	d5fc      	bpl.n	80001ac <init32+0x5c>
  //LSE
  RTC->PRER &=~(RTC_PRER_PREDIV_A | RTC_PRER_PREDIV_S);
 80001b2:	6919      	ldr	r1, [r3, #16]
 80001b4:	4a0b      	ldr	r2, [pc, #44]	; (80001e4 <init32+0x94>)
 80001b6:	400a      	ands	r2, r1
 80001b8:	611a      	str	r2, [r3, #16]
#if RTC_LSE
  RTC->PRER |= 255;
 80001ba:	691a      	ldr	r2, [r3, #16]
 80001bc:	f042 02ff 	orr.w	r2, r2, #255	; 0xff
 80001c0:	611a      	str	r2, [r3, #16]
  RTC->PRER |= (127 << 16);
 80001c2:	691a      	ldr	r2, [r3, #16]
 80001c4:	f442 02fe 	orr.w	r2, r2, #8323072	; 0x7f0000
 80001c8:	611a      	str	r2, [r3, #16]
  //RTC->TR &=~RTC_TR_SU;
  //RTC->DR = 0;
  //RTC->DR &=~RTC_DR_DU;
  
  
  RTC->ISR &=~RTC_ISR_INIT;
 80001ca:	68da      	ldr	r2, [r3, #12]
 80001cc:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80001d0:	60da      	str	r2, [r3, #12]
  RTC->WPR = 0xFF;
 80001d2:	22ff      	movs	r2, #255	; 0xff
 80001d4:	625a      	str	r2, [r3, #36]	; 0x24
}
 80001d6:	4770      	bx	lr
 80001d8:	40023800 	andmi	r3, r2, r0, lsl #16
 80001dc:	40007000 	andmi	r7, r0, r0
 80001e0:	40002800 	andmi	r2, r0, r0, lsl #16
 80001e4:	ff808000 			; <UNDEFINED> instruction: 0xff808000

080001e8 <clock_HS>:
int8_t clock_HS(int8_t quartz){
  uint16_t i;
  uint32_t tmp;
  
  //clock by MSI
  tmp = RCC->CFGR;
 80001e8:	4b45      	ldr	r3, [pc, #276]	; (8000300 <clock_HS+0x118>)
 80001ea:	689a      	ldr	r2, [r3, #8]
  tmp &=~RCC_CFGR_SW;
 80001ec:	f022 0203 	bic.w	r2, r2, #3
  tmp |= RCC_CFGR_SW_MSI; // MSI / HSI / HSE / PLL
  RCC->CFGR = tmp;
 80001f0:	609a      	str	r2, [r3, #8]
 80001f2:	f640 72ff 	movw	r2, #4095	; 0xfff
  for(i=0;i<0x0FFF;i++){
    if((RCC->CFGR & RCC_CFGR_SWS)==RCC_CFGR_SWS_MSI){i=0x1FFF; break;}
 80001f6:	6899      	ldr	r1, [r3, #8]
 80001f8:	f011 0f0c 	tst.w	r1, #12
 80001fc:	d047      	beq.n	800028e <clock_HS+0xa6>
 80001fe:	3a01      	subs	r2, #1
 8000200:	b292      	uxth	r2, r2
  for(i=0;i<0x0FFF;i++){
 8000202:	2a00      	cmp	r2, #0
 8000204:	d1f7      	bne.n	80001f6 <clock_HS+0xe>
  }
  if(i != 0x1FFF)return CLOCK_FAIL_MSI;
 8000206:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800020a:	4770      	bx	lr
 800020c:	2000      	movs	r0, #0
    }
    if(i != 0x1FFF)return CLOCK_FAIL_HSI;
  }
  
  // configure flash
  FLASH->ACR |= FLASH_ACR_ACC64;
 800020e:	4b3d      	ldr	r3, [pc, #244]	; (8000304 <clock_HS+0x11c>)
 8000210:	681a      	ldr	r2, [r3, #0]
 8000212:	f042 0204 	orr.w	r2, r2, #4
 8000216:	601a      	str	r2, [r3, #0]
  FLASH->ACR |= FLASH_ACR_PRFTEN;
 8000218:	681a      	ldr	r2, [r3, #0]
 800021a:	f042 0202 	orr.w	r2, r2, #2
 800021e:	601a      	str	r2, [r3, #0]
  FLASH->ACR |= FLASH_ACR_LATENCY;
 8000220:	681a      	ldr	r2, [r3, #0]
 8000222:	f042 0201 	orr.w	r2, r2, #1
 8000226:	601a      	str	r2, [r3, #0]

  
  tmp = RCC->CFGR;
 8000228:	4a35      	ldr	r2, [pc, #212]	; (8000300 <clock_HS+0x118>)
 800022a:	6893      	ldr	r3, [r2, #8]
  tmp &=~ (RCC_CFGR_PLLSRC | RCC_CFGR_PLLMUL | RCC_CFGR_PLLDIV);
 800022c:	f423 037d 	bic.w	r3, r3, #16580608	; 0xfd0000
  
  if(quartz){
 8000230:	b1a8      	cbz	r0, 800025e <clock_HS+0x76>
    tmp |= RCC_CFGR_PLLSRC;  //PLL src = HSE
    tmp |= RCC_CFGR_PLLMUL12;//PLLCLK = F_HSE * 12 = 96 MHz
    tmp |= RCC_CFGR_PLLDIV3; //PLLCLK = F_HSE * 12 / 3 = 32 MHz
 8000232:	f443 0311 	orr.w	r3, r3, #9502720	; 0x910000
  tmp |= RCC_CFGR_HPRE_DIV1;
  //AHB = PLLCLK/HPRE = 32 MHz
  tmp &=~RCC_CFGR_PPRE2;
  tmp |= RCC_CFGR_PPRE2_DIV1;
  //APB2 = HCLK/PPRE2 = 32 MHz
  tmp &=~RCC_CFGR_PPRE1;
 8000236:	4934      	ldr	r1, [pc, #208]	; (8000308 <clock_HS+0x120>)
 8000238:	4019      	ands	r1, r3
  tmp |= RCC_CFGR_PPRE1_DIV1;
  //APB1 = HCLK/PPRE1 = 32 MHz
  RCC->CFGR = tmp;
 800023a:	6091      	str	r1, [r2, #8]
  
  RCC->CR |= RCC_CR_PLLON;
 800023c:	6813      	ldr	r3, [r2, #0]
 800023e:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000242:	6013      	str	r3, [r2, #0]
 8000244:	f640 73ff 	movw	r3, #4095	; 0xfff
  for(i=0;i<0x0FFF;i++){
    if(RCC->CR & RCC_CR_PLLRDY){i=0x1FFF; break;}
 8000248:	4a2d      	ldr	r2, [pc, #180]	; (8000300 <clock_HS+0x118>)
 800024a:	6811      	ldr	r1, [r2, #0]
 800024c:	0189      	lsls	r1, r1, #6
 800024e:	d40d      	bmi.n	800026c <clock_HS+0x84>
 8000250:	3b01      	subs	r3, #1
 8000252:	b29b      	uxth	r3, r3
  for(i=0;i<0x0FFF;i++){
 8000254:	2b00      	cmp	r3, #0
 8000256:	d1f8      	bne.n	800024a <clock_HS+0x62>
  }
  if(i != 0x1FFF)return CLOCK_FAIL_PLL; //can not enable PLL
 8000258:	f06f 0002 	mvn.w	r0, #2
 800025c:	4770      	bx	lr
    tmp |= RCC_CFGR_PLLDIV3; //PLLCLK = F_HSI * 6 / 3 = 32 MHz
 800025e:	f443 0308 	orr.w	r3, r3, #8912896	; 0x880000
 8000262:	e7e8      	b.n	8000236 <clock_HS+0x4e>
  tmp |= RCC_CFGR_SW_PLL; // MSI / HSI / HSE / PLL
  RCC->CFGR = tmp;
  for(i=0;i<0x0FFF;i++){
    if((RCC->CFGR & RCC_CFGR_SWS)==RCC_CFGR_SWS_PLL){i=0x1FFF; break;}
  }
  if(i != 0x1FFF)return CLOCK_FAIL_PLL;
 8000264:	3000      	adds	r0, #0
 8000266:	bf18      	it	ne
 8000268:	2001      	movne	r0, #1
  
  if(quartz)return CLOCK_HSE;
    else return CLOCK_HSI;
}
 800026a:	4770      	bx	lr
  tmp = RCC->CFGR;
 800026c:	6893      	ldr	r3, [r2, #8]
    if((RCC->CFGR & RCC_CFGR_SWS)==RCC_CFGR_SWS_PLL){i=0x1FFF; break;}
 800026e:	4924      	ldr	r1, [pc, #144]	; (8000300 <clock_HS+0x118>)
  tmp |= RCC_CFGR_SW_PLL; // MSI / HSI / HSE / PLL
 8000270:	f043 0303 	orr.w	r3, r3, #3
  RCC->CFGR = tmp;
 8000274:	6093      	str	r3, [r2, #8]
 8000276:	f640 73ff 	movw	r3, #4095	; 0xfff
    if((RCC->CFGR & RCC_CFGR_SWS)==RCC_CFGR_SWS_PLL){i=0x1FFF; break;}
 800027a:	688a      	ldr	r2, [r1, #8]
 800027c:	f002 020c 	and.w	r2, r2, #12
 8000280:	2a0c      	cmp	r2, #12
 8000282:	d0ef      	beq.n	8000264 <clock_HS+0x7c>
 8000284:	3b01      	subs	r3, #1
 8000286:	b29b      	uxth	r3, r3
  for(i=0;i<0x0FFF;i++){
 8000288:	2b00      	cmp	r3, #0
 800028a:	d1f6      	bne.n	800027a <clock_HS+0x92>
 800028c:	e7e4      	b.n	8000258 <clock_HS+0x70>
  RCC->CR &=~ RCC_CR_HSEON;
 800028e:	681a      	ldr	r2, [r3, #0]
 8000290:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8000294:	601a      	str	r2, [r3, #0]
  RCC->CR &=~ RCC_CR_HSION;
 8000296:	681a      	ldr	r2, [r3, #0]
 8000298:	f022 0201 	bic.w	r2, r2, #1
 800029c:	601a      	str	r2, [r3, #0]
  RCC->CR &=~ RCC_CR_HSEBYP;
 800029e:	681a      	ldr	r2, [r3, #0]
 80002a0:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 80002a4:	601a      	str	r2, [r3, #0]
  RCC->CR &=~ RCC_CR_PLLON;
 80002a6:	681a      	ldr	r2, [r3, #0]
 80002a8:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 80002ac:	601a      	str	r2, [r3, #0]
  RCC->CR &=~ RCC_CR_RTCPRE;
 80002ae:	681a      	ldr	r2, [r3, #0]
 80002b0:	f022 42c0 	bic.w	r2, r2, #1610612736	; 0x60000000
 80002b4:	601a      	str	r2, [r3, #0]
  RCC->CR |= RCC_CR_RTCPRE_1; //0b00=2 MHz ; 0b01=4MHz ; 0b10=8MHz ; 0b11=16MHz
 80002b6:	681a      	ldr	r2, [r3, #0]
 80002b8:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 80002bc:	601a      	str	r2, [r3, #0]
  if(quartz){
 80002be:	b168      	cbz	r0, 80002dc <clock_HS+0xf4>
    RCC->CR |= RCC_CR_HSEON;
 80002c0:	681a      	ldr	r2, [r3, #0]
 80002c2:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80002c6:	601a      	str	r2, [r3, #0]
 80002c8:	f640 73ff 	movw	r3, #4095	; 0xfff
      if(RCC->CR & RCC_CR_HSERDY){i=0x1FFF; break;}
 80002cc:	4a0c      	ldr	r2, [pc, #48]	; (8000300 <clock_HS+0x118>)
 80002ce:	6811      	ldr	r1, [r2, #0]
 80002d0:	0389      	lsls	r1, r1, #14
 80002d2:	d49c      	bmi.n	800020e <clock_HS+0x26>
 80002d4:	3b01      	subs	r3, #1
 80002d6:	b29b      	uxth	r3, r3
    for(i=0;i<0x0FFF;i++){
 80002d8:	2b00      	cmp	r3, #0
 80002da:	d1f8      	bne.n	80002ce <clock_HS+0xe6>
    RCC->CR |= RCC_CR_HSION;
 80002dc:	4a08      	ldr	r2, [pc, #32]	; (8000300 <clock_HS+0x118>)
 80002de:	6813      	ldr	r3, [r2, #0]
 80002e0:	f043 0301 	orr.w	r3, r3, #1
 80002e4:	6013      	str	r3, [r2, #0]
 80002e6:	f640 73ff 	movw	r3, #4095	; 0xfff
      if(RCC->CR & RCC_CR_HSIRDY){i=0x1FFF; break;}
 80002ea:	6811      	ldr	r1, [r2, #0]
 80002ec:	0788      	lsls	r0, r1, #30
 80002ee:	d48d      	bmi.n	800020c <clock_HS+0x24>
 80002f0:	3b01      	subs	r3, #1
 80002f2:	b29b      	uxth	r3, r3
    for(i=0;i<0x0FFF;i++){
 80002f4:	2b00      	cmp	r3, #0
 80002f6:	d1f8      	bne.n	80002ea <clock_HS+0x102>
    if(i != 0x1FFF)return CLOCK_FAIL_HSI;
 80002f8:	f06f 0001 	mvn.w	r0, #1
 80002fc:	4770      	bx	lr
 80002fe:	bf00      	nop
 8000300:	40023800 	andmi	r3, r2, r0, lsl #16
 8000304:	40023c00 	andmi	r3, r2, r0, lsl #24
 8000308:	ff9bc00f 			; <UNDEFINED> instruction: 0xff9bc00f

0800030c <clock_MS>:
void clock_MS(){
  uint16_t i;
  uint32_t tmp;
  
  //clock by MSI
  tmp = RCC->CFGR;
 800030c:	4b10      	ldr	r3, [pc, #64]	; (8000350 <clock_MS+0x44>)
 800030e:	689a      	ldr	r2, [r3, #8]
  tmp &=~RCC_CFGR_SW;
 8000310:	f022 0203 	bic.w	r2, r2, #3
  tmp |= RCC_CFGR_SW_MSI; // MSI / HSI / HSE / PLL
  RCC->CFGR = tmp;
 8000314:	609a      	str	r2, [r3, #8]
 8000316:	f640 72ff 	movw	r2, #4095	; 0xfff
  for(i=0;i<0x0FFF;i++){
    if((RCC->CFGR & RCC_CFGR_SWS)==RCC_CFGR_SWS_MSI){i=0x1FFF; break;}
 800031a:	6899      	ldr	r1, [r3, #8]
 800031c:	f011 0f0c 	tst.w	r1, #12
 8000320:	d004      	beq.n	800032c <clock_MS+0x20>
 8000322:	3a01      	subs	r2, #1
 8000324:	b292      	uxth	r2, r2
  for(i=0;i<0x0FFF;i++){
 8000326:	2a00      	cmp	r2, #0
 8000328:	d1f7      	bne.n	800031a <clock_MS+0xe>
 800032a:	4770      	bx	lr
  }
  if(i != 0x1FFF)return;;
  
  //disable HSE, PLL
  RCC->CR &=~ RCC_CR_HSEON;
 800032c:	681a      	ldr	r2, [r3, #0]
 800032e:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8000332:	601a      	str	r2, [r3, #0]
  RCC->CR &=~ RCC_CR_HSION;
 8000334:	681a      	ldr	r2, [r3, #0]
 8000336:	f022 0201 	bic.w	r2, r2, #1
 800033a:	601a      	str	r2, [r3, #0]
  RCC->CR &=~ RCC_CR_HSEBYP;
 800033c:	681a      	ldr	r2, [r3, #0]
 800033e:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8000342:	601a      	str	r2, [r3, #0]
  RCC->CR &=~ RCC_CR_PLLON;
 8000344:	681a      	ldr	r2, [r3, #0]
 8000346:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 800034a:	601a      	str	r2, [r3, #0]
}
 800034c:	4770      	bx	lr
 800034e:	bf00      	nop
 8000350:	40023800 	andmi	r3, r2, r0, lsl #16

08000354 <_init>:
 8000354:	4770      	bx	lr

08000356 <SystemInit>:
#include "hardware.h"
#include "usb_lib.h"
#include "clock.h"

void __attribute__((weak)) _init(void){}
void __attribute__((weak)) SystemInit(void){}
 8000356:	4770      	bx	lr

08000358 <sleep>:

void sleep(uint32_t time){
  while(time--)asm volatile("nop");
 8000358:	f110 30ff 	adds.w	r0, r0, #4294967295	; 0xffffffff
 800035c:	d200      	bcs.n	8000360 <sleep+0x8>
}
 800035e:	4770      	bx	lr
  while(time--)asm volatile("nop");
 8000360:	bf00      	nop
 8000362:	e7f9      	b.n	8000358 <sleep>

#define STM32ENDPOINTS          8
#define usb_epdata   ((volatile usb_epdata_t*)(USB_PMAADDR))
#define LASTADDR_DEFAULT                (STM32ENDPOINTS * 8)

__attribute__((weak))void usb_class_init(){}
 8000364:	4770      	bx	lr

08000366 <usb_class_disconnect>:
 8000366:	4770      	bx	lr

08000368 <usb_class_poll>:
 8000368:	4770      	bx	lr
__attribute__((weak))void usb_class_disconnect(){}
__attribute__((weak))void usb_class_poll(){}
__attribute__((weak))char usb_class_ep0_in(config_pack_t *req, void **data, uint16_t *size){return 0;}
 800036a:	2000      	movs	r0, #0
 800036c:	4770      	bx	lr

0800036e <usb_class_ep0_out>:
__attribute__((weak))char usb_class_ep0_out(config_pack_t *req, uint16_t offset, uint16_t rx_size){return 0;}
 800036e:	2000      	movs	r0, #0
 8000370:	4770      	bx	lr

08000372 <USB_setup>:
epfunc_t epfunc_out[STM32ENDPOINTS];

static config_pack_t setup_packet;

void USB_setup(){
  RCC->APB1ENR |= RCC_APB1ENR_USBEN;
 8000372:	4b16      	ldr	r3, [pc, #88]	; (80003cc <USB_setup+0x5a>)
 8000374:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8000376:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 800037a:	625a      	str	r2, [r3, #36]	; 0x24
  RCC->APB2ENR |= RCC_APB2ENR_SYSCFGEN;
 800037c:	6a1a      	ldr	r2, [r3, #32]
 800037e:	f042 0201 	orr.w	r2, r2, #1
 8000382:	621a      	str	r2, [r3, #32]
  
  SYSCFG->PMC &=~ SYSCFG_PMC_USB_PU;
 8000384:	4a12      	ldr	r2, [pc, #72]	; (80003d0 <USB_setup+0x5e>)
 8000386:	6853      	ldr	r3, [r2, #4]
 8000388:	f023 0301 	bic.w	r3, r3, #1
 800038c:	6053      	str	r3, [r2, #4]
  USB->CNTR   = USB_CNTR_FRES; // Force USB Reset
 800038e:	2201      	movs	r2, #1
 8000390:	4b10      	ldr	r3, [pc, #64]	; (80003d4 <USB_setup+0x62>)
 8000392:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
 8000396:	4a10      	ldr	r2, [pc, #64]	; (80003d8 <USB_setup+0x66>)
  for(uint32_t ctr = 0; ctr < 100000; ++ctr) asm volatile("nop"); // wait >1ms
 8000398:	bf00      	nop
 800039a:	3a01      	subs	r2, #1
 800039c:	d1fc      	bne.n	8000398 <USB_setup+0x26>
  USB->CNTR   = 0;
 800039e:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
  USB->BTABLE = 0;
 80003a2:	f8a3 2050 	strh.w	r2, [r3, #80]	; 0x50
  USB->DADDR  = 0;
 80003a6:	f8a3 204c 	strh.w	r2, [r3, #76]	; 0x4c
  USB->ISTR   = 0;
 80003aa:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
  USB->CNTR   = USB_CNTR_RESETM | USB_CNTR_WKUPM;
 80003ae:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
 80003b2:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
 * Enable a device specific interupt in the NVIC interrupt controller.
 * The interrupt number cannot be a negative value.
 */
static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
 80003b6:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
 80003ba:	4b08      	ldr	r3, [pc, #32]	; (80003dc <USB_setup+0x6a>)
 80003bc:	601a      	str	r2, [r3, #0]
  NVIC_EnableIRQ(USB_LP_IRQn);
  SYSCFG->PMC |= SYSCFG_PMC_USB_PU;
 80003be:	4a04      	ldr	r2, [pc, #16]	; (80003d0 <USB_setup+0x5e>)
 80003c0:	6853      	ldr	r3, [r2, #4]
 80003c2:	f043 0301 	orr.w	r3, r3, #1
 80003c6:	6053      	str	r3, [r2, #4]
}
 80003c8:	4770      	bx	lr
 80003ca:	bf00      	nop
 80003cc:	40023800 	andmi	r3, r2, r0, lsl #16
 80003d0:	40010000 	andmi	r0, r1, r0
 80003d4:	40005c00 	andmi	r5, r0, r0, lsl #24
 80003d8:	000186a0 	andeq	r8, r1, r0, lsr #13
 80003dc:	e000e100 	and	lr, r0, r0, lsl #2

080003e0 <usb_ep_init>:
    if( bytesread >= setup_packet.wLength )usb_ep_write(0, NULL, 0);
  }
}

static uint16_t lastaddr = LASTADDR_DEFAULT;
void usb_ep_init(uint8_t epnum, uint8_t ep_type, uint16_t size, epfunc_t func){
 80003e0:	b5f0      	push	{r4, r5, r6, r7, lr}
  uint8_t dir_in = (epnum & 0x80);
  epnum &= 0x0F;
 80003e2:	f000 060f 	and.w	r6, r0, #15
  
  if(dir_in){
 80003e6:	00b5      	lsls	r5, r6, #2
 80003e8:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 80003ec:	f505 45b8 	add.w	r5, r5, #23552	; 0x5c00
    ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 80003f0:	882c      	ldrh	r4, [r5, #0]
 80003f2:	b240      	sxtb	r0, r0
  if(dir_in){
 80003f4:	2800      	cmp	r0, #0
    ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 80003f6:	bfb5      	itete	lt
 80003f8:	f024 04c0 	biclt.w	r4, r4, #192	; 0xc0
  }else{
    ENDP_STAT_RX(epnum, USB_EP_RX_DIS);
 80003fc:	f024 04f0 	bicge.w	r4, r4, #240	; 0xf0
    ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 8000400:	0524      	lsllt	r4, r4, #20
    ENDP_STAT_RX(epnum, USB_EP_RX_DIS);
 8000402:	04a4      	lslge	r4, r4, #18
    ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 8000404:	bfb4      	ite	lt
 8000406:	0d24      	lsrlt	r4, r4, #20
    ENDP_STAT_RX(epnum, USB_EP_RX_DIS);
 8000408:	0ca4      	lsrge	r4, r4, #18
 800040a:	f444 4400 	orr.w	r4, r4, #32768	; 0x8000
 800040e:	f044 0480 	orr.w	r4, r4, #128	; 0x80
 8000412:	802c      	strh	r4, [r5, #0]
  }
  
  uint16_t buf = USB_EPx(epnum);
 8000414:	882c      	ldrh	r4, [r5, #0]
  buf = (buf & ~(USB_EP_DTOG_RX | USB_EP_DTOG_TX | USB_EPTX_STAT | USB_EPRX_STAT)) | USB_EP_CTR_RX | USB_EP_CTR_TX;
  buf = (buf & ~USB_EPADDR_FIELD) | epnum;
  //buf = (buf & ~USB_EP_T_FIELD) | ep_type;
  buf &=~ USB_EP_T_FIELD;
  switch(ep_type){
 8000416:	2902      	cmp	r1, #2
 8000418:	f404 6410 	and.w	r4, r4, #2304	; 0x900
 800041c:	ea44 0406 	orr.w	r4, r4, r6
 8000420:	d005      	beq.n	800042e <usb_ep_init+0x4e>
 8000422:	2903      	cmp	r1, #3
 8000424:	d023      	beq.n	800046e <usb_ep_init+0x8e>
 8000426:	bb29      	cbnz	r1, 8000474 <usb_ep_init+0x94>
    case USB_ENDP_CTRL: buf |= USB_EP_CONTROL; break;
 8000428:	f444 4102 	orr.w	r1, r4, #33280	; 0x8200
 800042c:	e001      	b.n	8000432 <usb_ep_init+0x52>
  buf &=~ USB_EP_T_FIELD;
 800042e:	f444 4100 	orr.w	r1, r4, #32768	; 0x8000
    case USB_ENDP_BULK: buf |= USB_EP_BULK; break;
    case USB_ENDP_INTR: buf |= USB_EP_INTERRUPT; break;
    default: buf |= USB_EP_ISOCHRONOUS; //в дескрипторах изохронные точки могут иметь расширенные настройки
 8000432:	f041 0180 	orr.w	r1, r1, #128	; 0x80
  }
  USB_EPx(epnum) = buf;
 8000436:	4f22      	ldr	r7, [pc, #136]	; (80004c0 <usb_ep_init+0xe0>)
 8000438:	8029      	strh	r1, [r5, #0]
  
  if( dir_in ){
 800043a:	0131      	lsls	r1, r6, #4
 800043c:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8000440:	2800      	cmp	r0, #0
 8000442:	883c      	ldrh	r4, [r7, #0]
 8000444:	f501 41c0 	add.w	r1, r1, #24576	; 0x6000
 8000448:	4638      	mov	r0, r7
 800044a:	da16      	bge.n	800047a <usb_ep_init+0x9a>
    usb_epdata[epnum].usb_tx_addr = lastaddr;
 800044c:	600c      	str	r4, [r1, #0]
    epfunc_in[epnum] = func;
 800044e:	491d      	ldr	r1, [pc, #116]	; (80004c4 <usb_ep_init+0xe4>)
 8000450:	f841 3026 	str.w	r3, [r1, r6, lsl #2]
    ENDP_STAT_TX(epnum, USB_EP_TX_NAK);
 8000454:	882b      	ldrh	r3, [r5, #0]
 8000456:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 800045a:	051b      	lsls	r3, r3, #20
 800045c:	0d1b      	lsrs	r3, r3, #20
 800045e:	f483 4300 	eor.w	r3, r3, #32768	; 0x8000
 8000462:	f083 03a0 	eor.w	r3, r3, #160	; 0xa0
      usb_epdata[epnum].rx_num_blocks = size / 32 - 1;
    }
    epfunc_out[epnum] = func;
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
  }
  lastaddr += size;
 8000466:	4422      	add	r2, r4
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
 8000468:	802b      	strh	r3, [r5, #0]
  lastaddr += size;
 800046a:	8002      	strh	r2, [r0, #0]
}
 800046c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    case USB_ENDP_INTR: buf |= USB_EP_INTERRUPT; break;
 800046e:	f444 4106 	orr.w	r1, r4, #34304	; 0x8600
 8000472:	e7de      	b.n	8000432 <usb_ep_init+0x52>
    default: buf |= USB_EP_ISOCHRONOUS; //в дескрипторах изохронные точки могут иметь расширенные настройки
 8000474:	f444 4104 	orr.w	r1, r4, #33792	; 0x8400
 8000478:	e7db      	b.n	8000432 <usb_ep_init+0x52>
    usb_epdata[epnum].usb_rx_addr = lastaddr;
 800047a:	608c      	str	r4, [r1, #8]
      usb_epdata[epnum].rx_blocksize = 0;
 800047c:	898f      	ldrh	r7, [r1, #12]
    if(size < 64){
 800047e:	2a3f      	cmp	r2, #63	; 0x3f
      usb_epdata[epnum].rx_blocksize = 1;
 8000480:	bf8b      	itete	hi
 8000482:	f447 4700 	orrhi.w	r7, r7, #32768	; 0x8000
      usb_epdata[epnum].rx_blocksize = 0;
 8000486:	f36f 37cf 	bfcls	r7, #15, #1
      usb_epdata[epnum].rx_blocksize = 1;
 800048a:	818f      	strhhi	r7, [r1, #12]
      usb_epdata[epnum].rx_blocksize = 0;
 800048c:	818f      	strhls	r7, [r1, #12]
      usb_epdata[epnum].rx_num_blocks = size / 32 - 1;
 800048e:	f8b1 c00c 	ldrh.w	ip, [r1, #12]
 8000492:	bf8a      	itet	hi
 8000494:	0957      	lsrhi	r7, r2, #5
      usb_epdata[epnum].rx_num_blocks = size / 2;
 8000496:	f3c2 0744 	ubfxls	r7, r2, #1, #5
      usb_epdata[epnum].rx_num_blocks = size / 32 - 1;
 800049a:	f107 37ff 	addhi.w	r7, r7, #4294967295	; 0xffffffff
 800049e:	f367 2c8e 	bfi	ip, r7, #10, #5
 80004a2:	f8a1 c00c 	strh.w	ip, [r1, #12]
    epfunc_out[epnum] = func;
 80004a6:	4908      	ldr	r1, [pc, #32]	; (80004c8 <usb_ep_init+0xe8>)
 80004a8:	f841 3026 	str.w	r3, [r1, r6, lsl #2]
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
 80004ac:	882b      	ldrh	r3, [r5, #0]
 80004ae:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80004b2:	049b      	lsls	r3, r3, #18
 80004b4:	0c9b      	lsrs	r3, r3, #18
 80004b6:	f483 4330 	eor.w	r3, r3, #45056	; 0xb000
 80004ba:	f083 0380 	eor.w	r3, r3, #128	; 0x80
 80004be:	e7d2      	b.n	8000466 <usb_ep_init+0x86>
 80004c0:	20000000 	andcs	r0, r0, r0
 80004c4:	2000024c 	andcs	r0, r0, ip, asr #4
 80004c8:	2000026c 	andcs	r0, r0, ip, ror #4

080004cc <USB_LP_IRQHandler>:

// standard IRQ handler
void USB_LP_IRQHandler(){
 80004cc:	b538      	push	{r3, r4, r5, lr}
  if(USB->ISTR & USB_ISTR_RESET){
 80004ce:	4c42      	ldr	r4, [pc, #264]	; (80005d8 <USB_LP_IRQHandler+0x10c>)
 80004d0:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 80004d4:	055d      	lsls	r5, r3, #21
 80004d6:	d52c      	bpl.n	8000532 <USB_LP_IRQHandler+0x66>
    usb_class_disconnect();
 80004d8:	f7ff ff45 	bl	8000366 <usb_class_disconnect>
    USB->CNTR = USB_CNTR_RESETM | USB_CNTR_CTRM | USB_CNTR_SUSPM | USB_CNTR_WKUPM;
 80004dc:	f44f 431c 	mov.w	r3, #39936	; 0x9c00
    lastaddr = LASTADDR_DEFAULT;
 80004e0:	2240      	movs	r2, #64	; 0x40
    USB->CNTR = USB_CNTR_RESETM | USB_CNTR_CTRM | USB_CNTR_SUSPM | USB_CNTR_WKUPM;
 80004e2:	f8a4 3040 	strh.w	r3, [r4, #64]	; 0x40
    lastaddr = LASTADDR_DEFAULT;
 80004e6:	4b3d      	ldr	r3, [pc, #244]	; (80005dc <USB_LP_IRQHandler+0x110>)
 80004e8:	493d      	ldr	r1, [pc, #244]	; (80005e0 <USB_LP_IRQHandler+0x114>)
 80004ea:	801a      	strh	r2, [r3, #0]
    USB->DADDR = USB_DADDR_EF;
 80004ec:	2380      	movs	r3, #128	; 0x80
    for(uint8_t i=0; i<STM32ENDPOINTS; i++){
      epfunc_in[i] = epfunc_out[i] = NULL;
 80004ee:	2200      	movs	r2, #0
    USB->DADDR = USB_DADDR_EF;
 80004f0:	f8a4 304c 	strh.w	r3, [r4, #76]	; 0x4c
 80004f4:	2408      	movs	r4, #8
 80004f6:	4b3b      	ldr	r3, [pc, #236]	; (80005e4 <USB_LP_IRQHandler+0x118>)
      epfunc_in[i] = epfunc_out[i] = NULL;
 80004f8:	3c01      	subs	r4, #1
    for(uint8_t i=0; i<STM32ENDPOINTS; i++){
 80004fa:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
      epfunc_in[i] = epfunc_out[i] = NULL;
 80004fe:	f841 2b04 	str.w	r2, [r1], #4
 8000502:	f843 2b04 	str.w	r2, [r3], #4
    for(uint8_t i=0; i<STM32ENDPOINTS; i++){
 8000506:	d1f7      	bne.n	80004f8 <USB_LP_IRQHandler+0x2c>
    }
    // state is default - wait for enumeration
    USB->ISTR = (uint16_t)~USB_ISTR_RESET;
 8000508:	f64f 32ff 	movw	r2, #64511	; 0xfbff
 800050c:	4b32      	ldr	r3, [pc, #200]	; (80005d8 <USB_LP_IRQHandler+0x10c>)
    usb_ep_init(0x00, USB_ENDP_CTRL, USB_EP0_BUFSZ, ep0_out);
 800050e:	4621      	mov	r1, r4
    USB->ISTR = (uint16_t)~USB_ISTR_RESET;
 8000510:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
    usb_ep_init(0x00, USB_ENDP_CTRL, USB_EP0_BUFSZ, ep0_out);
 8000514:	4620      	mov	r0, r4
 8000516:	4b34      	ldr	r3, [pc, #208]	; (80005e8 <USB_LP_IRQHandler+0x11c>)
 8000518:	2240      	movs	r2, #64	; 0x40
 800051a:	f7ff ff61 	bl	80003e0 <usb_ep_init>
    usb_ep_init(0x80, USB_ENDP_CTRL, USB_EP0_BUFSZ, ep0_in);
 800051e:	4b33      	ldr	r3, [pc, #204]	; (80005ec <USB_LP_IRQHandler+0x120>)
 8000520:	2240      	movs	r2, #64	; 0x40
 8000522:	4621      	mov	r1, r4
 8000524:	2080      	movs	r0, #128	; 0x80
 8000526:	f7ff ff5b 	bl	80003e0 <usb_ep_init>
    ep0_buf = NULL;
 800052a:	4b31      	ldr	r3, [pc, #196]	; (80005f0 <USB_LP_IRQHandler+0x124>)
 800052c:	601c      	str	r4, [r3, #0]
    usb_class_init();
 800052e:	f000 fa2b 	bl	8000988 <usb_class_init>
  }
  
  if(USB->ISTR & USB_ISTR_CTR){
 8000532:	4b29      	ldr	r3, [pc, #164]	; (80005d8 <USB_LP_IRQHandler+0x10c>)
 8000534:	f8b3 2044 	ldrh.w	r2, [r3, #68]	; 0x44
 8000538:	0414      	lsls	r4, r2, #16
 800053a:	d529      	bpl.n	8000590 <USB_LP_IRQHandler+0xc4>
    uint8_t epnum = USB->ISTR & USB_ISTR_EP_ID;
 800053c:	f8b3 5044 	ldrh.w	r5, [r3, #68]	; 0x44
 8000540:	f005 050f 	and.w	r5, r5, #15
    if(USB_EPx(epnum) & USB_EP_CTR_RX){ //OUT
 8000544:	00ac      	lsls	r4, r5, #2
 8000546:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
 800054a:	f504 44b8 	add.w	r4, r4, #23552	; 0x5c00
 800054e:	8823      	ldrh	r3, [r4, #0]
 8000550:	0418      	lsls	r0, r3, #16
 8000552:	d50c      	bpl.n	800056e <USB_LP_IRQHandler+0xa2>
      epfunc_out[epnum](epnum);
 8000554:	4b22      	ldr	r3, [pc, #136]	; (80005e0 <USB_LP_IRQHandler+0x114>)
 8000556:	4628      	mov	r0, r5
 8000558:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 800055c:	4798      	blx	r3
      ENDP_CTR_RX_CLR(epnum);
 800055e:	8823      	ldrh	r3, [r4, #0]
 8000560:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8000564:	051b      	lsls	r3, r3, #20
 8000566:	0d1b      	lsrs	r3, r3, #20
 8000568:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800056c:	8023      	strh	r3, [r4, #0]
    }
    if(USB_EPx(epnum) & USB_EP_CTR_TX){//IN
 800056e:	8823      	ldrh	r3, [r4, #0]
 8000570:	0619      	lsls	r1, r3, #24
 8000572:	d50d      	bpl.n	8000590 <USB_LP_IRQHandler+0xc4>
      epfunc_in[epnum](epnum | 0x80);
 8000574:	4b1b      	ldr	r3, [pc, #108]	; (80005e4 <USB_LP_IRQHandler+0x118>)
 8000576:	f045 0080 	orr.w	r0, r5, #128	; 0x80
 800057a:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 800057e:	4798      	blx	r3
      ENDP_CTR_TX_CLR(epnum);
 8000580:	8823      	ldrh	r3, [r4, #0]
 8000582:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8000586:	051b      	lsls	r3, r3, #20
 8000588:	0d1b      	lsrs	r3, r3, #20
 800058a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800058e:	8023      	strh	r3, [r4, #0]
    }
  }
  
  if(USB->ISTR & USB_ISTR_SUSP){ // suspend -> still no connection, may sleep
 8000590:	4c11      	ldr	r4, [pc, #68]	; (80005d8 <USB_LP_IRQHandler+0x10c>)
 8000592:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 8000596:	051a      	lsls	r2, r3, #20
 8000598:	d50b      	bpl.n	80005b2 <USB_LP_IRQHandler+0xe6>
    usb_class_disconnect();
 800059a:	f7ff fee4 	bl	8000366 <usb_class_disconnect>
    USB->CNTR |= USB_CNTR_FSUSP | USB_CNTR_LP_MODE;
 800059e:	f8b4 3040 	ldrh.w	r3, [r4, #64]	; 0x40
 80005a2:	f043 030c 	orr.w	r3, r3, #12
 80005a6:	f8a4 3040 	strh.w	r3, [r4, #64]	; 0x40
    USB->ISTR = (uint16_t)~USB_ISTR_SUSP;
 80005aa:	f24f 73ff 	movw	r3, #63487	; 0xf7ff
 80005ae:	f8a4 3044 	strh.w	r3, [r4, #68]	; 0x44
  }
  
  if(USB->ISTR & USB_ISTR_WKUP){ // wakeup
 80005b2:	4a09      	ldr	r2, [pc, #36]	; (80005d8 <USB_LP_IRQHandler+0x10c>)
 80005b4:	f8b2 3044 	ldrh.w	r3, [r2, #68]	; 0x44
 80005b8:	04db      	lsls	r3, r3, #19
 80005ba:	d50b      	bpl.n	80005d4 <USB_LP_IRQHandler+0x108>
    USB->CNTR &= ~(USB_CNTR_FSUSP | USB_CNTR_LP_MODE); // clear suspend flags
 80005bc:	f8b2 3040 	ldrh.w	r3, [r2, #64]	; 0x40
 80005c0:	f023 030c 	bic.w	r3, r3, #12
 80005c4:	041b      	lsls	r3, r3, #16
 80005c6:	0c1b      	lsrs	r3, r3, #16
 80005c8:	f8a2 3040 	strh.w	r3, [r2, #64]	; 0x40
    USB->ISTR = (uint16_t)~USB_ISTR_WKUP;
 80005cc:	f64e 73ff 	movw	r3, #61439	; 0xefff
 80005d0:	f8a2 3044 	strh.w	r3, [r2, #68]	; 0x44
  }
}
 80005d4:	bd38      	pop	{r3, r4, r5, pc}
 80005d6:	bf00      	nop
 80005d8:	40005c00 	andmi	r5, r0, r0, lsl #24
 80005dc:	20000000 	andcs	r0, r0, r0
 80005e0:	2000026c 	andcs	r0, r0, ip, ror #4
 80005e4:	2000024c 	andcs	r0, r0, ip, asr #4
 80005e8:	08000701 	stmdaeq	r0, {r0, r8, r9, sl}
 80005ec:	0800064f 	stmdaeq	r0, {r0, r1, r2, r3, r6, r9, sl}
 80005f0:	20000024 	andcs	r0, r0, r4, lsr #32

080005f4 <usb_ep_write>:

void usb_ep_write(uint8_t epnum, const uint8_t *buf, uint16_t size){
 80005f4:	b5f0      	push	{r4, r5, r6, r7, lr}
  uint8_t i;
  uint16_t N2 = (size + 1) >> 1;
  // the buffer is 16-bit, so we should copy data as it would be uint16_t
  uint16_t *buf16 = (uint16_t *)buf;
  uint32_t *out = (uint32_t*)((uint16_t *)(USB_PMAADDR + usb_epdata[epnum].usb_tx_addr*2));
  for(i = 0; i < N2; ++i, ++out){
 80005f6:	2500      	movs	r5, #0
  uint32_t *out = (uint32_t*)((uint16_t *)(USB_PMAADDR + usb_epdata[epnum].usb_tx_addr*2));
 80005f8:	f000 000f 	and.w	r0, r0, #15
 80005fc:	0104      	lsls	r4, r0, #4
 80005fe:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
 8000602:	f504 44c0 	add.w	r4, r4, #24576	; 0x6000
 8000606:	6823      	ldr	r3, [r4, #0]
  uint16_t N2 = (size + 1) >> 1;
 8000608:	1c56      	adds	r6, r2, #1
  uint32_t *out = (uint32_t*)((uint16_t *)(USB_PMAADDR + usb_epdata[epnum].usb_tx_addr*2));
 800060a:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
 800060e:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
  uint16_t N2 = (size + 1) >> 1;
 8000612:	0876      	lsrs	r6, r6, #1
  uint32_t *out = (uint32_t*)((uint16_t *)(USB_PMAADDR + usb_epdata[epnum].usb_tx_addr*2));
 8000614:	005b      	lsls	r3, r3, #1
  for(i = 0; i < N2; ++i, ++out){
 8000616:	b2ef      	uxtb	r7, r5
 8000618:	42b7      	cmp	r7, r6
 800061a:	f105 0c01 	add.w	ip, r5, #1
 800061e:	d310      	bcc.n	8000642 <usb_ep_write+0x4e>
    *out = buf16[i];
  }
  usb_epdata[epnum].usb_tx_count = size;
  
  ENDP_STAT_TX(epnum, USB_EP_TX_VALID);
 8000620:	0080      	lsls	r0, r0, #2
 8000622:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
  usb_epdata[epnum].usb_tx_count = size;
 8000626:	6062      	str	r2, [r4, #4]
  ENDP_STAT_TX(epnum, USB_EP_TX_VALID);
 8000628:	f500 40b8 	add.w	r0, r0, #23552	; 0x5c00
 800062c:	8803      	ldrh	r3, [r0, #0]
 800062e:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 8000632:	051b      	lsls	r3, r3, #20
 8000634:	0d1b      	lsrs	r3, r3, #20
 8000636:	f483 4300 	eor.w	r3, r3, #32768	; 0x8000
 800063a:	f083 03b0 	eor.w	r3, r3, #176	; 0xb0
 800063e:	8003      	strh	r3, [r0, #0]
}
 8000640:	bdf0      	pop	{r4, r5, r6, r7, pc}
    *out = buf16[i];
 8000642:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8000646:	f843 7025 	str.w	r7, [r3, r5, lsl #2]
 800064a:	4665      	mov	r5, ip
 800064c:	e7e3      	b.n	8000616 <usb_ep_write+0x22>

0800064e <ep0_in>:
static void ep0_in(uint8_t epnum){
 800064e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if( (USB->DADDR & USB_DADDR_ADD) != USB_Addr ){
 8000650:	4b13      	ldr	r3, [pc, #76]	; (80006a0 <ep0_in+0x52>)
 8000652:	4c14      	ldr	r4, [pc, #80]	; (80006a4 <ep0_in+0x56>)
 8000654:	f8b3 104c 	ldrh.w	r1, [r3, #76]	; 0x4c
 8000658:	7922      	ldrb	r2, [r4, #4]
 800065a:	f001 017f 	and.w	r1, r1, #127	; 0x7f
 800065e:	4291      	cmp	r1, r2
    USB->DADDR = USB_DADDR_EF | USB_Addr;
 8000660:	bf1c      	itt	ne
 8000662:	f042 0280 	orrne.w	r2, r2, #128	; 0x80
 8000666:	f8a3 204c 	strhne.w	r2, [r3, #76]	; 0x4c
  if( (USB_EPx(0) & USB_EPTX_STAT) == USB_EP_TX_VALID )return;
 800066a:	881b      	ldrh	r3, [r3, #0]
 800066c:	f003 0330 	and.w	r3, r3, #48	; 0x30
 8000670:	2b30      	cmp	r3, #48	; 0x30
 8000672:	d014      	beq.n	800069e <ep0_in+0x50>
  if(ep0_buf == NULL)return;
 8000674:	6825      	ldr	r5, [r4, #0]
 8000676:	b195      	cbz	r5, 800069e <ep0_in+0x50>
  uint16_t left = ep0_count;
 8000678:	88e7      	ldrh	r7, [r4, #6]
  usb_ep_write(0, ep0_buf, left);
 800067a:	4629      	mov	r1, r5
 800067c:	2f40      	cmp	r7, #64	; 0x40
 800067e:	463e      	mov	r6, r7
 8000680:	bf28      	it	cs
 8000682:	2640      	movcs	r6, #64	; 0x40
 8000684:	2000      	movs	r0, #0
 8000686:	4632      	mov	r2, r6
 8000688:	f7ff ffb4 	bl	80005f4 <usb_ep_write>
  if(left < USB_EP0_BUFSZ){
 800068c:	2f3f      	cmp	r7, #63	; 0x3f
  ep0_count -= left;
 800068e:	eba7 0306 	sub.w	r3, r7, r6
 8000692:	80e3      	strh	r3, [r4, #6]
    ep0_buf = NULL;
 8000694:	bf93      	iteet	ls
 8000696:	2300      	movls	r3, #0
  ep0_buf += left;
 8000698:	19ad      	addhi	r5, r5, r6
 800069a:	6025      	strhi	r5, [r4, #0]
    ep0_buf = NULL;
 800069c:	6023      	strls	r3, [r4, #0]
}
 800069e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80006a0:	40005c00 	andmi	r5, r0, r0, lsl #24
 80006a4:	20000024 	andcs	r0, r0, r4, lsr #32

080006a8 <usb_ep_read>:

int usb_ep_read(uint8_t epnum, uint16_t *buf){
 80006a8:	b530      	push	{r4, r5, lr}
  int sz = usb_epdata[epnum].rx_count;
 80006aa:	0103      	lsls	r3, r0, #4
 80006ac:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80006b0:	f503 43c0 	add.w	r3, r3, #24576	; 0x6000
int usb_ep_read(uint8_t epnum, uint16_t *buf){
 80006b4:	4602      	mov	r2, r0
  int sz = usb_epdata[epnum].rx_count;
 80006b6:	68d8      	ldr	r0, [r3, #12]
 80006b8:	f3c0 0009 	ubfx	r0, r0, #0, #10
  if(!sz) return 0;
 80006bc:	b1f8      	cbz	r0, 80006fe <usb_ep_read+0x56>
  int n = (sz + 1) >> 1;
  uint32_t *in = (uint32_t*)((uint16_t *)(USB_PMAADDR + usb_epdata[epnum].usb_rx_addr*2));
 80006be:	689b      	ldr	r3, [r3, #8]
  int n = (sz + 1) >> 1;
 80006c0:	1c44      	adds	r4, r0, #1
  uint32_t *in = (uint32_t*)((uint16_t *)(USB_PMAADDR + usb_epdata[epnum].usb_rx_addr*2));
 80006c2:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
 80006c6:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 80006ca:	005b      	lsls	r3, r3, #1
  int n = (sz + 1) >> 1;
 80006cc:	1064      	asrs	r4, r4, #1
 80006ce:	3902      	subs	r1, #2
 80006d0:	eb03 0484 	add.w	r4, r3, r4, lsl #2
  for(int i = 0; i < n; ++i, ++in)
    buf[i] = *(uint16_t*)in;
 80006d4:	f833 5b04 	ldrh.w	r5, [r3], #4
  for(int i = 0; i < n; ++i, ++in)
 80006d8:	42a3      	cmp	r3, r4
    buf[i] = *(uint16_t*)in;
 80006da:	f821 5f02 	strh.w	r5, [r1, #2]!
  for(int i = 0; i < n; ++i, ++in)
 80006de:	d1f9      	bne.n	80006d4 <usb_ep_read+0x2c>
  
  ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
 80006e0:	0093      	lsls	r3, r2, #2
 80006e2:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80006e6:	f503 43b8 	add.w	r3, r3, #23552	; 0x5c00
 80006ea:	881a      	ldrh	r2, [r3, #0]
 80006ec:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 80006f0:	0492      	lsls	r2, r2, #18
 80006f2:	0c92      	lsrs	r2, r2, #18
 80006f4:	f482 4230 	eor.w	r2, r2, #45056	; 0xb000
 80006f8:	f082 0280 	eor.w	r2, r2, #128	; 0x80
 80006fc:	801a      	strh	r2, [r3, #0]
  return sz;
}
 80006fe:	bd30      	pop	{r4, r5, pc}

08000700 <ep0_out>:
static void ep0_out(uint8_t epnum){
 8000700:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint16_t rxcount = usb_epdata[0].rx_count;
 8000702:	4b3f      	ldr	r3, [pc, #252]	; (8000800 <ep0_out+0x100>)
 8000704:	4c3f      	ldr	r4, [pc, #252]	; (8000804 <ep0_out+0x104>)
 8000706:	68dd      	ldr	r5, [r3, #12]
  uint8_t setup = !!(USB_EPx(0) & USB_EP_SETUP);
 8000708:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 800070c:	881b      	ldrh	r3, [r3, #0]
  uint16_t rxcount = usb_epdata[0].rx_count;
 800070e:	f3c5 0509 	ubfx	r5, r5, #0, #10
  if( setup ){
 8000712:	f413 6600 	ands.w	r6, r3, #2048	; 0x800
 8000716:	d009      	beq.n	800072c <ep0_out+0x2c>
    if( setup_packet.bmRequestType & 0x80 ){ //предыдущий пакет=IN, этот точно будет запросом
 8000718:	f994 3008 	ldrsb.w	r3, [r4, #8]
 800071c:	2b00      	cmp	r3, #0
 800071e:	da17      	bge.n	8000750 <ep0_out+0x50>
      bytesread = 0;
 8000720:	2500      	movs	r5, #0
      usb_ep_read(0, (uint16_t*)&setup_packet);
 8000722:	4939      	ldr	r1, [pc, #228]	; (8000808 <ep0_out+0x108>)
 8000724:	2000      	movs	r0, #0
 8000726:	f7ff ffbf 	bl	80006a8 <usb_ep_read>
      bytesread = 0;
 800072a:	8225      	strh	r5, [r4, #16]
  uint8_t req = setup_packet.bmRequestType & 0x7F;
 800072c:	7a22      	ldrb	r2, [r4, #8]
 800072e:	f002 037f 	and.w	r3, r2, #127	; 0x7f
  if(setup_packet.bmRequestType & 0x80){
 8000732:	0612      	lsls	r2, r2, #24
 8000734:	d53c      	bpl.n	80007b0 <ep0_out+0xb0>
    if( !setup )return; //какой-то костыль. Иначе вызывается два раза
 8000736:	b34e      	cbz	r6, 800078c <ep0_out+0x8c>
    if(req == (USB_REQ_STANDARD | USB_REQ_DEVICE)){
 8000738:	bb73      	cbnz	r3, 8000798 <ep0_out+0x98>
      switch(setup_packet.bRequest){
 800073a:	7a60      	ldrb	r0, [r4, #9]
 800073c:	2806      	cmp	r0, #6
 800073e:	d00c      	beq.n	800075a <ep0_out+0x5a>
 8000740:	2808      	cmp	r0, #8
 8000742:	d025      	beq.n	8000790 <ep0_out+0x90>
 8000744:	bb40      	cbnz	r0, 8000798 <ep0_out+0x98>
          usb_ep_write(0, (uint8_t*)"\0", 2); // send status: Bus Powered
 8000746:	2202      	movs	r2, #2
 8000748:	4930      	ldr	r1, [pc, #192]	; (800080c <ep0_out+0x10c>)
    if( bytesread >= setup_packet.wLength )usb_ep_write(0, NULL, 0);
 800074a:	f7ff ff53 	bl	80005f4 <usb_ep_write>
 800074e:	e01d      	b.n	800078c <ep0_out+0x8c>
      if( bytesread >= setup_packet.wLength ){
 8000750:	89e2      	ldrh	r2, [r4, #14]
 8000752:	8a23      	ldrh	r3, [r4, #16]
 8000754:	429a      	cmp	r2, r3
 8000756:	d8e9      	bhi.n	800072c <ep0_out+0x2c>
 8000758:	e7e2      	b.n	8000720 <ep0_out+0x20>
          const void *data = ZLPP;
 800075a:	2201      	movs	r2, #1
          usb_class_get_std_descr(setup_packet.wValue, &data, &size);
 800075c:	a901      	add	r1, sp, #4
          const void *data = ZLPP;
 800075e:	9201      	str	r2, [sp, #4]
          usb_class_get_std_descr(setup_packet.wValue, &data, &size);
 8000760:	8960      	ldrh	r0, [r4, #10]
 8000762:	f10d 0202 	add.w	r2, sp, #2
          uint16_t size = 0;
 8000766:	f8ad 3002 	strh.w	r3, [sp, #2]
          usb_class_get_std_descr(setup_packet.wValue, &data, &size);
 800076a:	f000 f8c3 	bl	80008f4 <usb_class_get_std_descr>
    if(setup_packet.wLength < size) size = setup_packet.wLength;
 800076e:	89e3      	ldrh	r3, [r4, #14]
 8000770:	f8bd 2002 	ldrh.w	r2, [sp, #2]
  ep0_in(0x80);
 8000774:	2080      	movs	r0, #128	; 0x80
    if(setup_packet.wLength < size) size = setup_packet.wLength;
 8000776:	429a      	cmp	r2, r3
 8000778:	bf88      	it	hi
 800077a:	f8ad 3002 	strhhi.w	r3, [sp, #2]
  ep0_count = size;
 800077e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000782:	80e3      	strh	r3, [r4, #6]
  ep0_buf = buf;
 8000784:	9b01      	ldr	r3, [sp, #4]
 8000786:	6023      	str	r3, [r4, #0]
  ep0_in(0x80);
 8000788:	f7ff ff61 	bl	800064e <ep0_in>
}
 800078c:	b002      	add	sp, #8
 800078e:	bd70      	pop	{r4, r5, r6, pc}
          usb_ep_write(0, &configuration, 1);
 8000790:	2201      	movs	r2, #1
 8000792:	491f      	ldr	r1, [pc, #124]	; (8000810 <ep0_out+0x110>)
 8000794:	4618      	mov	r0, r3
 8000796:	e7d8      	b.n	800074a <ep0_out+0x4a>
    void *data = ZLPP;
 8000798:	2301      	movs	r3, #1
 800079a:	9301      	str	r3, [sp, #4]
    uint16_t size = 0;
 800079c:	2300      	movs	r3, #0
    usb_class_ep0_in( &setup_packet, &data, &size );
 800079e:	f10d 0202 	add.w	r2, sp, #2
 80007a2:	a901      	add	r1, sp, #4
 80007a4:	4818      	ldr	r0, [pc, #96]	; (8000808 <ep0_out+0x108>)
    uint16_t size = 0;
 80007a6:	f8ad 3002 	strh.w	r3, [sp, #2]
    usb_class_ep0_in( &setup_packet, &data, &size );
 80007aa:	f000 f8e1 	bl	8000970 <usb_class_ep0_in>
 80007ae:	e7de      	b.n	800076e <ep0_out+0x6e>
    if(req == (USB_REQ_STANDARD | USB_REQ_DEVICE)){
 80007b0:	b96b      	cbnz	r3, 80007ce <ep0_out+0xce>
      if(setup_packet.bRequest == SET_ADDRESS){
 80007b2:	7a62      	ldrb	r2, [r4, #9]
 80007b4:	2a05      	cmp	r2, #5
 80007b6:	d105      	bne.n	80007c4 <ep0_out+0xc4>
        USB_Addr = setup_packet.wValue;
 80007b8:	8962      	ldrh	r2, [r4, #10]
 80007ba:	7122      	strb	r2, [r4, #4]
    if( bytesread >= setup_packet.wLength )usb_ep_write(0, NULL, 0);
 80007bc:	2200      	movs	r2, #0
 80007be:	4611      	mov	r1, r2
 80007c0:	4610      	mov	r0, r2
 80007c2:	e7c2      	b.n	800074a <ep0_out+0x4a>
      }else if(setup_packet.bRequest == SET_CONFIGURATION){
 80007c4:	2a09      	cmp	r2, #9
 80007c6:	d102      	bne.n	80007ce <ep0_out+0xce>
        configuration = setup_packet.wValue;
 80007c8:	8962      	ldrh	r2, [r4, #10]
 80007ca:	74a2      	strb	r2, [r4, #18]
        usb_ep_write(0, NULL, 0);
 80007cc:	e7f6      	b.n	80007bc <ep0_out+0xbc>
    if(!usb_class_ep0_out( &setup_packet, bytesread, rxcount )){
 80007ce:	462a      	mov	r2, r5
 80007d0:	8a21      	ldrh	r1, [r4, #16]
 80007d2:	480d      	ldr	r0, [pc, #52]	; (8000808 <ep0_out+0x108>)
 80007d4:	f7ff fdcb 	bl	800036e <usb_class_ep0_out>
 80007d8:	b950      	cbnz	r0, 80007f0 <ep0_out+0xf0>
      ENDP_STAT_RX(0, USB_EP_RX_VALID);
 80007da:	4a0e      	ldr	r2, [pc, #56]	; (8000814 <ep0_out+0x114>)
 80007dc:	8813      	ldrh	r3, [r2, #0]
 80007de:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80007e2:	049b      	lsls	r3, r3, #18
 80007e4:	0c9b      	lsrs	r3, r3, #18
 80007e6:	f483 4330 	eor.w	r3, r3, #45056	; 0xb000
 80007ea:	f083 0380 	eor.w	r3, r3, #128	; 0x80
 80007ee:	8013      	strh	r3, [r2, #0]
    bytesread += rxcount;
 80007f0:	8a23      	ldrh	r3, [r4, #16]
 80007f2:	441d      	add	r5, r3
    if( bytesread >= setup_packet.wLength )usb_ep_write(0, NULL, 0);
 80007f4:	89e3      	ldrh	r3, [r4, #14]
    bytesread += rxcount;
 80007f6:	b2ad      	uxth	r5, r5
    if( bytesread >= setup_packet.wLength )usb_ep_write(0, NULL, 0);
 80007f8:	42ab      	cmp	r3, r5
    bytesread += rxcount;
 80007fa:	8225      	strh	r5, [r4, #16]
    if( bytesread >= setup_packet.wLength )usb_ep_write(0, NULL, 0);
 80007fc:	d8c6      	bhi.n	800078c <ep0_out+0x8c>
 80007fe:	e7dd      	b.n	80007bc <ep0_out+0xbc>
 8000800:	40006000 	andmi	r6, r0, r0
 8000804:	20000024 	andcs	r0, r0, r4, lsr #32
 8000808:	2000002c 	andcs	r0, r0, ip, lsr #32
 800080c:	08000e78 	stmdaeq	r0, {r3, r4, r5, r6, r9, sl, fp}
 8000810:	20000036 	andcs	r0, r0, r6, lsr r0
 8000814:	40005c00 	andmi	r5, r0, r0, lsl #24

08000818 <msc_ep1_in>:
  if(bytescount < bytestoread)return;
  msc_ep1_in(ENDP_NUM | 0x80);
}

static void msc_ep1_in(uint8_t epnum){
  if(! usb_ep_ready(epnum) )return;
 8000818:	f000 030f 	and.w	r3, r0, #15
 800081c:	009b      	lsls	r3, r3, #2
 800081e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8000822:	f503 43b8 	add.w	r3, r3, #23552	; 0x5c00
 8000826:	0602      	lsls	r2, r0, #24
static void msc_ep1_in(uint8_t epnum){
 8000828:	b570      	push	{r4, r5, r6, lr}
  if(! usb_ep_ready(epnum) )return;
 800082a:	881b      	ldrh	r3, [r3, #0]
 800082c:	d51c      	bpl.n	8000868 <msc_ep1_in+0x50>
 800082e:	f003 0330 	and.w	r3, r3, #48	; 0x30
 8000832:	2b30      	cmp	r3, #48	; 0x30
 8000834:	d017      	beq.n	8000866 <msc_ep1_in+0x4e>
  
  if(bytescount < bytestowrite){
 8000836:	4c29      	ldr	r4, [pc, #164]	; (80008dc <msc_ep1_in+0xc4>)
 8000838:	e9d4 1300 	ldrd	r1, r3, [r4]
 800083c:	4299      	cmp	r1, r3
 800083e:	4626      	mov	r6, r4
 8000840:	d22c      	bcs.n	800089c <msc_ep1_in+0x84>
    uint32_t left = bytestowrite - bytescount;
 8000842:	1a5c      	subs	r4, r3, r1
    if(left > ENDP_SIZE)left = ENDP_SIZE;
 8000844:	2c40      	cmp	r4, #64	; 0x40
 8000846:	bf28      	it	cs
 8000848:	2440      	movcs	r4, #64	; 0x40
    if(block_count == 0){
 800084a:	4b25      	ldr	r3, [pc, #148]	; (80008e0 <msc_ep1_in+0xc8>)
 800084c:	b2a5      	uxth	r5, r4
 800084e:	881b      	ldrh	r3, [r3, #0]
 8000850:	b97b      	cbnz	r3, 8000872 <msc_ep1_in+0x5a>
      usb_ep_write(ENDP_NUM, &buffer[bytescount], left);
 8000852:	f106 0308 	add.w	r3, r6, #8
 8000856:	462a      	mov	r2, r5
 8000858:	4419      	add	r1, r3
 800085a:	2001      	movs	r0, #1
 800085c:	f7ff feca 	bl	80005f4 <usb_ep_write>
    }else{
      uint8_t lun = msc_cbw.bLUN;
      usb_ep_write(ENDP_NUM, &storage[lun].buf[start_lba*512 + bytescount], left);
      cur_count += left;
    }
    bytescount += left;
 8000860:	6833      	ldr	r3, [r6, #0]
 8000862:	441c      	add	r4, r3
 8000864:	6034      	str	r4, [r6, #0]
      
      block_count = 0;
      cur_count = 0;
    }
  }
}
 8000866:	bd70      	pop	{r4, r5, r6, pc}
  if(! usb_ep_ready(epnum) )return;
 8000868:	f403 5340 	and.w	r3, r3, #12288	; 0x3000
 800086c:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 8000870:	e7e0      	b.n	8000834 <msc_ep1_in+0x1c>
      uint8_t lun = msc_cbw.bLUN;
 8000872:	4b1c      	ldr	r3, [pc, #112]	; (80008e4 <msc_ep1_in+0xcc>)
      usb_ep_write(ENDP_NUM, &storage[lun].buf[start_lba*512 + bytescount], left);
 8000874:	2001      	movs	r0, #1
 8000876:	7b5a      	ldrb	r2, [r3, #13]
 8000878:	4b1b      	ldr	r3, [pc, #108]	; (80008e8 <msc_ep1_in+0xd0>)
 800087a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800087e:	4a1b      	ldr	r2, [pc, #108]	; (80008ec <msc_ep1_in+0xd4>)
 8000880:	685b      	ldr	r3, [r3, #4]
 8000882:	6812      	ldr	r2, [r2, #0]
 8000884:	eb01 2142 	add.w	r1, r1, r2, lsl #9
 8000888:	4419      	add	r1, r3
 800088a:	462a      	mov	r2, r5
 800088c:	f7ff feb2 	bl	80005f4 <usb_ep_write>
      cur_count += left;
 8000890:	f8b6 3208 	ldrh.w	r3, [r6, #520]	; 0x208
 8000894:	441d      	add	r5, r3
 8000896:	f8a6 5208 	strh.w	r5, [r6, #520]	; 0x208
 800089a:	e7e1      	b.n	8000860 <msc_ep1_in+0x48>
    int32_t left = sizeof(msc_csw) - msc_csw_count;
 800089c:	f894 320a 	ldrb.w	r3, [r4, #522]	; 0x20a
 80008a0:	f1c3 050d 	rsb	r5, r3, #13
    if(left > 0){
 80008a4:	2d00      	cmp	r5, #0
 80008a6:	dd0b      	ble.n	80008c0 <msc_ep1_in+0xa8>
      usb_ep_write(ENDP_NUM, (uint8_t*)&(((uint8_t*)&msc_csw)[msc_csw_count]), left);
 80008a8:	4911      	ldr	r1, [pc, #68]	; (80008f0 <msc_ep1_in+0xd8>)
 80008aa:	b2aa      	uxth	r2, r5
 80008ac:	4419      	add	r1, r3
 80008ae:	2001      	movs	r0, #1
 80008b0:	f7ff fea0 	bl	80005f4 <usb_ep_write>
      msc_csw_count += left;
 80008b4:	f894 320a 	ldrb.w	r3, [r4, #522]	; 0x20a
 80008b8:	441d      	add	r5, r3
 80008ba:	f884 520a 	strb.w	r5, [r4, #522]	; 0x20a
 80008be:	e7d2      	b.n	8000866 <msc_ep1_in+0x4e>
    }else if(left == 0){
 80008c0:	d1d1      	bne.n	8000866 <msc_ep1_in+0x4e>
      block_count = 0;
 80008c2:	4b07      	ldr	r3, [pc, #28]	; (80008e0 <msc_ep1_in+0xc8>)
      msc_cbw_count = 0;
 80008c4:	f884 520b 	strb.w	r5, [r4, #523]	; 0x20b
      msc_csw_count = 0;
 80008c8:	f884 520a 	strb.w	r5, [r4, #522]	; 0x20a
      bytestoread = 0;
 80008cc:	f8c4 520c 	str.w	r5, [r4, #524]	; 0x20c
      bytescount = 0;
 80008d0:	e9c4 5500 	strd	r5, r5, [r4]
      block_count = 0;
 80008d4:	801d      	strh	r5, [r3, #0]
      cur_count = 0;
 80008d6:	f8a4 5208 	strh.w	r5, [r4, #520]	; 0x208
 80008da:	e7c4      	b.n	8000866 <msc_ep1_in+0x4e>
 80008dc:	20000038 	andcs	r0, r0, r8, lsr r0
 80008e0:	2000028c 	andcs	r0, r0, ip, lsl #5
 80008e4:	20007694 	mulcs	r0, r4, r6
 80008e8:	20000004 	andcs	r0, r0, r4
 80008ec:	20007690 	mulcs	r0, r0, r6
 80008f0:	20000014 	andcs	r0, r0, r4, lsl r0

080008f4 <usb_class_get_std_descr>:
  switch(descr & 0xFF00){
 80008f4:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 80008f8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80008fc:	d010      	beq.n	8000920 <usb_class_get_std_descr+0x2c>
 80008fe:	d803      	bhi.n	8000908 <usb_class_get_std_descr+0x14>
 8000900:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8000904:	d007      	beq.n	8000916 <usb_class_get_std_descr+0x22>
 8000906:	4770      	bx	lr
 8000908:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800090c:	d010      	beq.n	8000930 <usb_class_get_std_descr+0x3c>
 800090e:	f5b3 6fc0 	cmp.w	r3, #1536	; 0x600
 8000912:	d009      	beq.n	8000928 <usb_class_get_std_descr+0x34>
 8000914:	4770      	bx	lr
      *data = &USB_DeviceDescriptor;
 8000916:	4b0f      	ldr	r3, [pc, #60]	; (8000954 <usb_class_get_std_descr+0x60>)
 8000918:	600b      	str	r3, [r1, #0]
      *size = sizeof(USB_DeviceDescriptor);
 800091a:	2312      	movs	r3, #18
      *size = ((uint8_t*)*data)[0]; //data->bLength
 800091c:	8013      	strh	r3, [r2, #0]
}
 800091e:	4770      	bx	lr
      *data = &USB_ConfigDescriptor;
 8000920:	4b0d      	ldr	r3, [pc, #52]	; (8000958 <usb_class_get_std_descr+0x64>)
 8000922:	600b      	str	r3, [r1, #0]
      *size = sizeof(USB_ConfigDescriptor);
 8000924:	2320      	movs	r3, #32
 8000926:	e7f9      	b.n	800091c <usb_class_get_std_descr+0x28>
      *data = &USB_DeviceQualifierDescriptor;
 8000928:	4b0c      	ldr	r3, [pc, #48]	; (800095c <usb_class_get_std_descr+0x68>)
 800092a:	600b      	str	r3, [r1, #0]
      *size = USB_DeviceQualifierDescriptor[0];
 800092c:	230a      	movs	r3, #10
 800092e:	e7f5      	b.n	800091c <usb_class_get_std_descr+0x28>
      switch(descr & 0xFF){
 8000930:	b2c0      	uxtb	r0, r0
 8000932:	2803      	cmp	r0, #3
 8000934:	d8f3      	bhi.n	800091e <usb_class_get_std_descr+0x2a>
 8000936:	e8df f000 	tbb	[pc, r0]
 800093a:	0b090702 	bleq	824254a <__exidx_end+0x240226>
          *data = &USB_StringLangDescriptor;
 800093e:	4b08      	ldr	r3, [pc, #32]	; (8000960 <usb_class_get_std_descr+0x6c>)
          *data = &USB_StringSerialDescriptor;
 8000940:	600b      	str	r3, [r1, #0]
      *size = ((uint8_t*)*data)[0]; //data->bLength
 8000942:	680b      	ldr	r3, [r1, #0]
 8000944:	781b      	ldrb	r3, [r3, #0]
 8000946:	e7e9      	b.n	800091c <usb_class_get_std_descr+0x28>
          *data = &USB_StringManufacturingDescriptor;
 8000948:	4b06      	ldr	r3, [pc, #24]	; (8000964 <usb_class_get_std_descr+0x70>)
 800094a:	e7f9      	b.n	8000940 <usb_class_get_std_descr+0x4c>
          *data = &USB_StringProdDescriptor;
 800094c:	4b06      	ldr	r3, [pc, #24]	; (8000968 <usb_class_get_std_descr+0x74>)
 800094e:	e7f7      	b.n	8000940 <usb_class_get_std_descr+0x4c>
          *data = &USB_StringSerialDescriptor;
 8000950:	4b06      	ldr	r3, [pc, #24]	; (800096c <usb_class_get_std_descr+0x78>)
 8000952:	e7f5      	b.n	8000940 <usb_class_get_std_descr+0x4c>
 8000954:	08000e7a 	stmdaeq	r0, {r1, r3, r4, r5, r6, r9, sl, fp}
 8000958:	08000e8c 	stmdaeq	r0, {r2, r3, r7, r9, sl, fp}
 800095c:	08000eac 	stmdaeq	r0, {r2, r3, r5, r7, r9, sl, fp}
 8000960:	08000eb6 	stmdaeq	r0, {r1, r2, r4, r5, r7, r9, sl, fp}
 8000964:	08000eba 	stmdaeq	r0, {r1, r3, r4, r5, r7, r9, sl, fp}
 8000968:	08000ed0 	stmdaeq	r0, {r4, r6, r7, r9, sl, fp}
 800096c:	08000ee0 	stmdaeq	r0, {r5, r6, r7, r9, sl, fp}

08000970 <usb_class_ep0_in>:
  if(req->bRequest == USBCLASS_MSC_GET_MAX_LUN){ //MSC_GET_MAX_LUN
 8000970:	7843      	ldrb	r3, [r0, #1]
}
 8000972:	2000      	movs	r0, #0
  if(req->bRequest == USBCLASS_MSC_GET_MAX_LUN){ //MSC_GET_MAX_LUN
 8000974:	2bfe      	cmp	r3, #254	; 0xfe
    *data = &maxlun;
 8000976:	bf01      	itttt	eq
 8000978:	4b02      	ldreq	r3, [pc, #8]	; (8000984 <usb_class_ep0_in+0x14>)
 800097a:	600b      	streq	r3, [r1, #0]
    *size = 1;
 800097c:	2301      	moveq	r3, #1
 800097e:	8013      	strheq	r3, [r2, #0]
}
 8000980:	4770      	bx	lr
 8000982:	bf00      	nop
 8000984:	20000021 	andcs	r0, r0, r1, lsr #32

08000988 <usb_class_init>:

void usb_class_init(){
 8000988:	b508      	push	{r3, lr}
  usb_ep_init(ENDP_NUM,        USB_EP_BULK, ENDP_SIZE, msc_ep1_out);
 800098a:	2240      	movs	r2, #64	; 0x40
 800098c:	4b0d      	ldr	r3, [pc, #52]	; (80009c4 <usb_class_init+0x3c>)
 800098e:	2100      	movs	r1, #0
 8000990:	2001      	movs	r0, #1
 8000992:	f7ff fd25 	bl	80003e0 <usb_ep_init>
  usb_ep_init(ENDP_NUM | 0x80, USB_EP_BULK, ENDP_SIZE, msc_ep1_in);
 8000996:	4b0c      	ldr	r3, [pc, #48]	; (80009c8 <usb_class_init+0x40>)
 8000998:	2240      	movs	r2, #64	; 0x40
 800099a:	2100      	movs	r1, #0
 800099c:	2081      	movs	r0, #129	; 0x81
 800099e:	f7ff fd1f 	bl	80003e0 <usb_ep_init>
  storage[0].capacity = (my_res_end - my_res_start);
 80009a2:	490a      	ldr	r1, [pc, #40]	; (80009cc <usb_class_init+0x44>)
 80009a4:	4b0a      	ldr	r3, [pc, #40]	; (80009d0 <usb_class_init+0x48>)
 80009a6:	4a0b      	ldr	r2, [pc, #44]	; (80009d4 <usb_class_init+0x4c>)
 80009a8:	1a5b      	subs	r3, r3, r1
 80009aa:	6013      	str	r3, [r2, #0]
  for(uint16_t i=0; i<512; i++){rambuf[i] = storage[0].buf[i];}
 80009ac:	6853      	ldr	r3, [r2, #4]
 80009ae:	490a      	ldr	r1, [pc, #40]	; (80009d8 <usb_class_init+0x50>)
 80009b0:	1e5a      	subs	r2, r3, #1
 80009b2:	f203 13ff 	addw	r3, r3, #511	; 0x1ff
 80009b6:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 80009ba:	429a      	cmp	r2, r3
 80009bc:	f801 0b01 	strb.w	r0, [r1], #1
 80009c0:	d1f9      	bne.n	80009b6 <usb_class_init+0x2e>
}
 80009c2:	bd08      	pop	{r3, pc}
 80009c4:	08000ccd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, fp}
 80009c8:	08000819 	stmdaeq	r0, {r0, r3, r4, fp}
 80009cc:	08000f21 	stmdaeq	r0, {r0, r5, r8, r9, sl, fp}
 80009d0:	08002321 	stmdaeq	r0, {r0, r5, r8, r9, sp}
 80009d4:	20000004 	andcs	r0, r0, r4
 80009d8:	2000028e 	andcs	r0, r0, lr, lsl #5

080009dc <scsi_reset>:
  uint8_t control;
}scsi_cbw_10_t;

inline void scsi_reset(){
  //TODO
}
 80009dc:	4770      	bx	lr

080009de <scsi_inquiry>:
	0x00, 
	0x80, 
	0x83 
};  

void scsi_inquiry(){
 80009de:	b510      	push	{r4, lr}
  if( msc_cbw.CB[1] & 0x01){ //EVPD is set. Для Win10 это важно. Для Linux или WinXP - нет
 80009e0:	4818      	ldr	r0, [pc, #96]	; (8000a44 <scsi_inquiry+0x66>)
 80009e2:	7c02      	ldrb	r2, [r0, #16]
 80009e4:	07d3      	lsls	r3, r2, #31
 80009e6:	d51f      	bpl.n	8000a28 <scsi_inquiry+0x4a>
 80009e8:	2307      	movs	r3, #7
 80009ea:	4917      	ldr	r1, [pc, #92]	; (8000a48 <scsi_inquiry+0x6a>)
 80009ec:	4a17      	ldr	r2, [pc, #92]	; (8000a4c <scsi_inquiry+0x6e>)
    for(uint16_t i=0; i<sizeof(inquiry_page00_data); i++)buffer[i] = ((uint8_t*)inquiry_page00_data)[i];
 80009ee:	f811 4b01 	ldrb.w	r4, [r1], #1
 80009f2:	3b01      	subs	r3, #1
 80009f4:	b29b      	uxth	r3, r3
 80009f6:	f802 4b01 	strb.w	r4, [r2], #1
 80009fa:	2b00      	cmp	r3, #0
 80009fc:	d1f7      	bne.n	80009ee <scsi_inquiry+0x10>
    bytestowrite = sizeof(inquiry_page00_data);
 80009fe:	2207      	movs	r2, #7
 8000a00:	4b13      	ldr	r3, [pc, #76]	; (8000a50 <scsi_inquiry+0x72>)
  }else{
    for(uint16_t i=0; i<sizeof(inquiry_response); i++)buffer[i] = ((uint8_t*)inquiry_response)[i];
    bytestowrite = sizeof(inquiry_response);
 8000a02:	605a      	str	r2, [r3, #4]
  }
  if( bytestowrite < msc_cbw.dDataLength ) bytestowrite = msc_cbw.dDataLength;
 8000a04:	4b12      	ldr	r3, [pc, #72]	; (8000a50 <scsi_inquiry+0x72>)
 8000a06:	6882      	ldr	r2, [r0, #8]
 8000a08:	6859      	ldr	r1, [r3, #4]
 8000a0a:	428a      	cmp	r2, r1
 8000a0c:	bf88      	it	hi
 8000a0e:	605a      	strhi	r2, [r3, #4]
  
  msc_csw.dDataResidue = msc_cbw.dDataLength - bytestowrite;
 8000a10:	6859      	ldr	r1, [r3, #4]
 8000a12:	1a52      	subs	r2, r2, r1
 8000a14:	490f      	ldr	r1, [pc, #60]	; (8000a54 <scsi_inquiry+0x76>)
 8000a16:	618a      	str	r2, [r1, #24]
  msc_sense.key = SBC_SENSE_KEY_NO_SENSE;
 8000a18:	2200      	movs	r2, #0
 8000a1a:	f883 2210 	strb.w	r2, [r3, #528]	; 0x210
  msc_sense.asc = SBC_ASC_NO_ADDITIONAL_SENSE_INFORMATION;
 8000a1e:	f883 2211 	strb.w	r2, [r3, #529]	; 0x211
  msc_sense.ascq =SBC_ASCQ_NA;
 8000a22:	f883 2212 	strb.w	r2, [r3, #530]	; 0x212
}
 8000a26:	bd10      	pop	{r4, pc}
  if( msc_cbw.CB[1] & 0x01){ //EVPD is set. Для Win10 это важно. Для Linux или WinXP - нет
 8000a28:	2324      	movs	r3, #36	; 0x24
 8000a2a:	490b      	ldr	r1, [pc, #44]	; (8000a58 <scsi_inquiry+0x7a>)
 8000a2c:	4a07      	ldr	r2, [pc, #28]	; (8000a4c <scsi_inquiry+0x6e>)
    for(uint16_t i=0; i<sizeof(inquiry_response); i++)buffer[i] = ((uint8_t*)inquiry_response)[i];
 8000a2e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8000a32:	3b01      	subs	r3, #1
 8000a34:	b29b      	uxth	r3, r3
 8000a36:	f802 4b01 	strb.w	r4, [r2], #1
 8000a3a:	2b00      	cmp	r3, #0
 8000a3c:	d1f7      	bne.n	8000a2e <scsi_inquiry+0x50>
    bytestowrite = sizeof(inquiry_response);
 8000a3e:	4b04      	ldr	r3, [pc, #16]	; (8000a50 <scsi_inquiry+0x72>)
 8000a40:	2224      	movs	r2, #36	; 0x24
 8000a42:	e7de      	b.n	8000a02 <scsi_inquiry+0x24>
 8000a44:	20007694 	mulcs	r0, r4, r6
 8000a48:	08000ee4 	stmdaeq	r0, {r2, r5, r6, r7, r9, sl, fp}
 8000a4c:	20000040 	andcs	r0, r0, r0, asr #32
 8000a50:	20000038 	andcs	r0, r0, r8, lsr r0
 8000a54:	20000004 	andcs	r0, r0, r4
 8000a58:	08000eeb 	stmdaeq	r0, {r0, r1, r3, r5, r6, r7, r9, sl, fp}

08000a5c <scsi_request_sense>:
  0x00,	// Byte 14: Field Replaceable Unit Code (FRUC) = 0
  0x00,	// Byte 15: SKSV = 0, SenseKeySpecific[0] = 0
  0x00,	// Byte 16: SenseKeySpecific[0] = 0
  0x00	// Byte 17: SenseKeySpecific[0] = 0
};
void scsi_request_sense(){
 8000a5c:	2312      	movs	r3, #18
 8000a5e:	490b      	ldr	r1, [pc, #44]	; (8000a8c <scsi_request_sense+0x30>)
 8000a60:	4a0b      	ldr	r2, [pc, #44]	; (8000a90 <scsi_request_sense+0x34>)
  //memcpy(buffer, sense_response, 18);
  for(uint8_t i=0; i<sizeof(sense_response); i++)buffer[i] = sense_response[i];
 8000a62:	f811 0b01 	ldrb.w	r0, [r1], #1
 8000a66:	3b01      	subs	r3, #1
 8000a68:	f013 03ff 	ands.w	r3, r3, #255	; 0xff
 8000a6c:	f802 0b01 	strb.w	r0, [r2], #1
 8000a70:	d1f7      	bne.n	8000a62 <scsi_request_sense+0x6>
  buffer[2] = msc_sense.key; //0x05
 8000a72:	4b08      	ldr	r3, [pc, #32]	; (8000a94 <scsi_request_sense+0x38>)
 8000a74:	f893 2210 	ldrb.w	r2, [r3, #528]	; 0x210
 8000a78:	729a      	strb	r2, [r3, #10]
  buffer[12]= msc_sense.asc; //0x20
 8000a7a:	f893 2211 	ldrb.w	r2, [r3, #529]	; 0x211
 8000a7e:	751a      	strb	r2, [r3, #20]
  buffer[13]= msc_sense.ascq; //0x00
 8000a80:	f893 2212 	ldrb.w	r2, [r3, #530]	; 0x212
 8000a84:	755a      	strb	r2, [r3, #21]
  bytestowrite = 18;
 8000a86:	2212      	movs	r2, #18
 8000a88:	605a      	str	r2, [r3, #4]
}
 8000a8a:	4770      	bx	lr
 8000a8c:	08000f0f 	stmdaeq	r0, {r0, r1, r2, r3, r8, r9, sl, fp}
 8000a90:	20000040 	andcs	r0, r0, r0, asr #32
 8000a94:	20000038 	andcs	r0, r0, r8, lsr r0

08000a98 <scsi_test_unit_ready>:

void scsi_test_unit_ready(){
  //return OK
  msc_csw.dDataResidue = 0;
 8000a98:	2300      	movs	r3, #0
 8000a9a:	4a06      	ldr	r2, [pc, #24]	; (8000ab4 <scsi_test_unit_ready+0x1c>)
 8000a9c:	7613      	strb	r3, [r2, #24]
 8000a9e:	7653      	strb	r3, [r2, #25]
 8000aa0:	7693      	strb	r3, [r2, #26]
 8000aa2:	76d3      	strb	r3, [r2, #27]
  msc_sense.key = SBC_SENSE_KEY_NO_SENSE;
 8000aa4:	4a04      	ldr	r2, [pc, #16]	; (8000ab8 <scsi_test_unit_ready+0x20>)
 8000aa6:	f882 3210 	strb.w	r3, [r2, #528]	; 0x210
  msc_sense.asc = SBC_ASC_NO_ADDITIONAL_SENSE_INFORMATION;
 8000aaa:	f882 3211 	strb.w	r3, [r2, #529]	; 0x211
  msc_sense.ascq =SBC_ASCQ_NA;
 8000aae:	f882 3212 	strb.w	r3, [r2, #530]	; 0x212
}
 8000ab2:	4770      	bx	lr
 8000ab4:	20000004 	andcs	r0, r0, r4
 8000ab8:	20000038 	andcs	r0, r0, r8, lsr r0

08000abc <scsi_read_capacity>:

void scsi_read_capacity(){
  uint8_t lun = msc_cbw.bLUN;
 8000abc:	4b10      	ldr	r3, [pc, #64]	; (8000b00 <scsi_read_capacity+0x44>)
  uint32_t last_lba = storage[lun].capacity / 512 - 1;
 8000abe:	4911      	ldr	r1, [pc, #68]	; (8000b04 <scsi_read_capacity+0x48>)
 8000ac0:	7b5b      	ldrb	r3, [r3, #13]
 8000ac2:	f851 2033 	ldr.w	r2, [r1, r3, lsl #3]
  
  buffer[0] = (last_lba >> 24) & 0xFF;
 8000ac6:	4b10      	ldr	r3, [pc, #64]	; (8000b08 <scsi_read_capacity+0x4c>)
  uint32_t last_lba = storage[lun].capacity / 512 - 1;
 8000ac8:	0a52      	lsrs	r2, r2, #9
 8000aca:	3a01      	subs	r2, #1
  buffer[0] = (last_lba >> 24) & 0xFF;
 8000acc:	0e10      	lsrs	r0, r2, #24
 8000ace:	7218      	strb	r0, [r3, #8]
  buffer[1] = (last_lba >> 16) & 0xFF;
 8000ad0:	0c10      	lsrs	r0, r2, #16
 8000ad2:	7258      	strb	r0, [r3, #9]
  buffer[2] = (last_lba >>  8) & 0xFF;
 8000ad4:	0a10      	lsrs	r0, r2, #8
 8000ad6:	7298      	strb	r0, [r3, #10]
  buffer[3] = (last_lba >>  0) & 0xFF;
  
  buffer[4] = 0;
  buffer[5] = 0;
  buffer[6] = 2;
 8000ad8:	2002      	movs	r0, #2
  buffer[3] = (last_lba >>  0) & 0xFF;
 8000ada:	72da      	strb	r2, [r3, #11]
  buffer[6] = 2;
 8000adc:	7398      	strb	r0, [r3, #14]
  buffer[4] = 0;
 8000ade:	2200      	movs	r2, #0
  buffer[7] = 0;
  
  bytestowrite = 8;
 8000ae0:	2008      	movs	r0, #8
  buffer[4] = 0;
 8000ae2:	731a      	strb	r2, [r3, #12]
  buffer[5] = 0;
 8000ae4:	735a      	strb	r2, [r3, #13]
  buffer[7] = 0;
 8000ae6:	73da      	strb	r2, [r3, #15]
  bytestowrite = 8;
 8000ae8:	6058      	str	r0, [r3, #4]

  msc_csw.dDataResidue = 0;
 8000aea:	760a      	strb	r2, [r1, #24]
 8000aec:	764a      	strb	r2, [r1, #25]
 8000aee:	768a      	strb	r2, [r1, #26]
 8000af0:	76ca      	strb	r2, [r1, #27]
  msc_sense.key = SBC_SENSE_KEY_NO_SENSE;
 8000af2:	f883 2210 	strb.w	r2, [r3, #528]	; 0x210
  msc_sense.asc = SBC_ASC_NO_ADDITIONAL_SENSE_INFORMATION;
 8000af6:	f883 2211 	strb.w	r2, [r3, #529]	; 0x211
  msc_sense.ascq =SBC_ASCQ_NA;
 8000afa:	f883 2212 	strb.w	r2, [r3, #530]	; 0x212
}
 8000afe:	4770      	bx	lr
 8000b00:	20007694 	mulcs	r0, r4, r6
 8000b04:	20000004 	andcs	r0, r0, r4
 8000b08:	20000038 	andcs	r0, r0, r8, lsr r0

08000b0c <scsi_mode_sense_6>:

void scsi_mode_sense_6(){
  buffer[0] = 3;
 8000b0c:	2203      	movs	r2, #3
 8000b0e:	4b0c      	ldr	r3, [pc, #48]	; (8000b40 <scsi_mode_sense_6+0x34>)
  buffer[1] = 0;
  if(msc_cbw.bLUN == 0){
 8000b10:	490c      	ldr	r1, [pc, #48]	; (8000b44 <scsi_mode_sense_6+0x38>)
  buffer[0] = 3;
 8000b12:	721a      	strb	r2, [r3, #8]
  buffer[1] = 0;
 8000b14:	2200      	movs	r2, #0
  if(msc_cbw.bLUN == 0){
 8000b16:	7b48      	ldrb	r0, [r1, #13]
  buffer[1] = 0;
 8000b18:	725a      	strb	r2, [r3, #9]
  if(msc_cbw.bLUN == 0){
 8000b1a:	4290      	cmp	r0, r2
    buffer[2] = (1<<7);
  }else{
    buffer[2] = 0;
 8000b1c:	bf18      	it	ne
 8000b1e:	4610      	movne	r0, r2
  }
  buffer[3] = 0;
 8000b20:	72da      	strb	r2, [r3, #11]
  buffer[4] = 0;
 8000b22:	731a      	strb	r2, [r3, #12]
  buffer[5] = 0;
 8000b24:	735a      	strb	r2, [r3, #13]
  buffer[6] = 0;
 8000b26:	739a      	strb	r2, [r3, #14]
  buffer[7] = 0;
 8000b28:	73da      	strb	r2, [r3, #15]
  buffer[8] = 0;
 8000b2a:	741a      	strb	r2, [r3, #16]
    buffer[2] = 0;
 8000b2c:	bf08      	it	eq
 8000b2e:	2080      	moveq	r0, #128	; 0x80
  bytestowrite = 4;
 8000b30:	2204      	movs	r2, #4
 8000b32:	7298      	strb	r0, [r3, #10]
 8000b34:	605a      	str	r2, [r3, #4]
  msc_csw.dDataResidue = msc_cbw.dDataLength-4;
 8000b36:	688b      	ldr	r3, [r1, #8]
 8000b38:	4a03      	ldr	r2, [pc, #12]	; (8000b48 <scsi_mode_sense_6+0x3c>)
 8000b3a:	3b04      	subs	r3, #4
 8000b3c:	6193      	str	r3, [r2, #24]
}
 8000b3e:	4770      	bx	lr
 8000b40:	20000038 	andcs	r0, r0, r8, lsr r0
 8000b44:	20007694 	mulcs	r0, r4, r6
 8000b48:	20000004 	andcs	r0, r0, r4

08000b4c <scsi_read_10>:

void scsi_read_10(){
  //uint32_t 
  start_lba = (msc_cbw.CB[2] << 24) | (msc_cbw.CB[3] << 16) | (msc_cbw.CB[4] << 8) | (msc_cbw.CB[5] << 0);
 8000b4c:	4a0c      	ldr	r2, [pc, #48]	; (8000b80 <scsi_read_10+0x34>)
 8000b4e:	490d      	ldr	r1, [pc, #52]	; (8000b84 <scsi_read_10+0x38>)
 8000b50:	f8d2 3011 	ldr.w	r3, [r2, #17]
 8000b54:	ba1b      	rev	r3, r3
 8000b56:	600b      	str	r3, [r1, #0]
  //uint16_t 
  block_count = (msc_cbw.CB[7] << 8) | (msc_cbw.CB[8] << 0);
 8000b58:	7d91      	ldrb	r1, [r2, #22]
 8000b5a:	7dd3      	ldrb	r3, [r2, #23]
 8000b5c:	4a0a      	ldr	r2, [pc, #40]	; (8000b88 <scsi_read_10+0x3c>)
 8000b5e:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
  cur_count = 0;
 8000b62:	2100      	movs	r1, #0
  block_count = (msc_cbw.CB[7] << 8) | (msc_cbw.CB[8] << 0);
 8000b64:	8013      	strh	r3, [r2, #0]
  cur_count = 0;
 8000b66:	4a09      	ldr	r2, [pc, #36]	; (8000b8c <scsi_read_10+0x40>)
  
  bytestowrite = ((uint32_t)block_count) << 9;
 8000b68:	025b      	lsls	r3, r3, #9
  cur_count = 0;
 8000b6a:	f8a2 1208 	strh.w	r1, [r2, #520]	; 0x208
  bytestowrite = ((uint32_t)block_count) << 9;
 8000b6e:	6053      	str	r3, [r2, #4]
  
  msc_sense.key = SBC_SENSE_KEY_NO_SENSE;
 8000b70:	f882 1210 	strb.w	r1, [r2, #528]	; 0x210
  msc_sense.asc = SBC_ASC_NO_ADDITIONAL_SENSE_INFORMATION;
 8000b74:	f882 1211 	strb.w	r1, [r2, #529]	; 0x211
  msc_sense.ascq =SBC_ASCQ_NA;
 8000b78:	f882 1212 	strb.w	r1, [r2, #530]	; 0x212
}
 8000b7c:	4770      	bx	lr
 8000b7e:	bf00      	nop
 8000b80:	20007694 	mulcs	r0, r4, r6
 8000b84:	20007690 	mulcs	r0, r0, r6
 8000b88:	2000028c 	andcs	r0, r0, ip, lsl #5
 8000b8c:	20000038 	andcs	r0, r0, r8, lsr r0

08000b90 <scsi_write_10>:

void scsi_write_10(){
  start_lba = (msc_cbw.CB[2] << 24) | (msc_cbw.CB[3] << 16) | (msc_cbw.CB[4] << 8) | (msc_cbw.CB[5] << 0);
 8000b90:	4b12      	ldr	r3, [pc, #72]	; (8000bdc <scsi_write_10+0x4c>)
 8000b92:	4913      	ldr	r1, [pc, #76]	; (8000be0 <scsi_write_10+0x50>)
 8000b94:	f8d3 2011 	ldr.w	r2, [r3, #17]
  block_count = (msc_cbw.CB[7] << 8) | (msc_cbw.CB[8] << 0);
  
  uint8_t lun = msc_cbw.bLUN;
 8000b98:	7b58      	ldrb	r0, [r3, #13]
 8000b9a:	ba12      	rev	r2, r2
  start_lba = (msc_cbw.CB[2] << 24) | (msc_cbw.CB[3] << 16) | (msc_cbw.CB[4] << 8) | (msc_cbw.CB[5] << 0);
 8000b9c:	600a      	str	r2, [r1, #0]
  block_count = (msc_cbw.CB[7] << 8) | (msc_cbw.CB[8] << 0);
 8000b9e:	7d99      	ldrb	r1, [r3, #22]
 8000ba0:	7dda      	ldrb	r2, [r3, #23]
  cur_count = 0;
 8000ba2:	4b10      	ldr	r3, [pc, #64]	; (8000be4 <scsi_write_10+0x54>)
  block_count = (msc_cbw.CB[7] << 8) | (msc_cbw.CB[8] << 0);
 8000ba4:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000ba8:	490f      	ldr	r1, [pc, #60]	; (8000be8 <scsi_write_10+0x58>)
 8000baa:	800a      	strh	r2, [r1, #0]
  cur_count = 0;
 8000bac:	2100      	movs	r1, #0
 8000bae:	f8a3 1208 	strh.w	r1, [r3, #520]	; 0x208
  
  if(lun==0){
 8000bb2:	b948      	cbnz	r0, 8000bc8 <scsi_write_10+0x38>
    msc_sense.key = CSW_STATUS_FAILED;
 8000bb4:	2201      	movs	r2, #1
 8000bb6:	f883 2210 	strb.w	r2, [r3, #528]	; 0x210
    msc_sense.asc = SBC_SENSE_KEY_NOT_READY;
 8000bba:	2202      	movs	r2, #2
 8000bbc:	f883 2211 	strb.w	r2, [r3, #529]	; 0x211
    msc_sense.ascq =SBC_ASC_WRITE_PROTECTED;
 8000bc0:	2227      	movs	r2, #39	; 0x27
 8000bc2:	f883 2212 	strb.w	r2, [r3, #530]	; 0x212
    return;
 8000bc6:	4770      	bx	lr
  }
  
  bytestoread = ((uint32_t)block_count) << 9;
 8000bc8:	0252      	lsls	r2, r2, #9
 8000bca:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
  
  msc_sense.key = SBC_SENSE_KEY_NO_SENSE;
 8000bce:	f883 1210 	strb.w	r1, [r3, #528]	; 0x210
  msc_sense.asc = SBC_ASC_NO_ADDITIONAL_SENSE_INFORMATION;
 8000bd2:	f883 1211 	strb.w	r1, [r3, #529]	; 0x211
  msc_sense.ascq =SBC_ASCQ_NA;
 8000bd6:	f883 1212 	strb.w	r1, [r3, #530]	; 0x212
}
 8000bda:	4770      	bx	lr
 8000bdc:	20007694 	mulcs	r0, r4, r6
 8000be0:	20007690 	mulcs	r0, r0, r6
 8000be4:	20000038 	andcs	r0, r0, r8, lsr r0
 8000be8:	2000028c 	andcs	r0, r0, ip, lsl #5

08000bec <scsi_mmc_read_fmt_cap>:

void scsi_mmc_read_fmt_cap(){
  uint8_t lun = msc_cbw.bLUN;
 8000bec:	4b10      	ldr	r3, [pc, #64]	; (8000c30 <scsi_mmc_read_fmt_cap+0x44>)
  uint32_t last_lba = storage[lun].capacity / 512 - 1;
 8000bee:	7b5a      	ldrb	r2, [r3, #13]
 8000bf0:	4b10      	ldr	r3, [pc, #64]	; (8000c34 <scsi_mmc_read_fmt_cap+0x48>)
 8000bf2:	f853 1032 	ldr.w	r1, [r3, r2, lsl #3]
  
  buffer[0] = buffer[1] = buffer[2] = 0; //reserved
 8000bf6:	4b10      	ldr	r3, [pc, #64]	; (8000c38 <scsi_mmc_read_fmt_cap+0x4c>)
  uint32_t last_lba = storage[lun].capacity / 512 - 1;
 8000bf8:	0a49      	lsrs	r1, r1, #9
 8000bfa:	3901      	subs	r1, #1
  buffer[3] = //size
  
  buffer[4] = (last_lba >> 24) & 0xFF;
 8000bfc:	0e08      	lsrs	r0, r1, #24
 8000bfe:	7318      	strb	r0, [r3, #12]
  buffer[3] = //size
 8000c00:	72d8      	strb	r0, [r3, #11]
  buffer[5] = (last_lba >> 16) & 0xFF;
 8000c02:	0c08      	lsrs	r0, r1, #16
 8000c04:	7358      	strb	r0, [r3, #13]
  buffer[6] = (last_lba >>  8) & 0xFF;
  buffer[7] = (last_lba >>  0) & 0xFF;
 8000c06:	73d9      	strb	r1, [r3, #15]
  buffer[6] = (last_lba >>  8) & 0xFF;
 8000c08:	0a08      	lsrs	r0, r1, #8
  
  buffer[8] = 0;
  buffer[9] = 0;
  buffer[10] = 2;
 8000c0a:	2102      	movs	r1, #2
  buffer[0] = buffer[1] = buffer[2] = 0; //reserved
 8000c0c:	2200      	movs	r2, #0
  buffer[10] = 2;
 8000c0e:	7499      	strb	r1, [r3, #18]
  buffer[11] = 0;
  
  bytestowrite = 12;
 8000c10:	210c      	movs	r1, #12
  buffer[0] = buffer[1] = buffer[2] = 0; //reserved
 8000c12:	729a      	strb	r2, [r3, #10]
 8000c14:	725a      	strb	r2, [r3, #9]
 8000c16:	721a      	strb	r2, [r3, #8]
  buffer[6] = (last_lba >>  8) & 0xFF;
 8000c18:	7398      	strb	r0, [r3, #14]
  buffer[8] = 0;
 8000c1a:	741a      	strb	r2, [r3, #16]
  buffer[9] = 0;
 8000c1c:	745a      	strb	r2, [r3, #17]
  buffer[11] = 0;
 8000c1e:	74da      	strb	r2, [r3, #19]
  bytestowrite = 12;
 8000c20:	6059      	str	r1, [r3, #4]
  
  msc_sense.key = SBC_SENSE_KEY_NO_SENSE;
 8000c22:	f883 2210 	strb.w	r2, [r3, #528]	; 0x210
  msc_sense.asc = SBC_ASC_NO_ADDITIONAL_SENSE_INFORMATION;
 8000c26:	f883 2211 	strb.w	r2, [r3, #529]	; 0x211
  msc_sense.ascq =SBC_ASCQ_NA;
 8000c2a:	f883 2212 	strb.w	r2, [r3, #530]	; 0x212
}
 8000c2e:	4770      	bx	lr
 8000c30:	20007694 	mulcs	r0, r4, r6
 8000c34:	20000004 	andcs	r0, r0, r4
 8000c38:	20000038 	andcs	r0, r0, r8, lsr r0

08000c3c <scsi_command>:

void scsi_command(){
  msc_csw.dTag = msc_cbw.dTag;
 8000c3c:	4820      	ldr	r0, [pc, #128]	; (8000cc0 <scsi_command+0x84>)
 8000c3e:	4a21      	ldr	r2, [pc, #132]	; (8000cc4 <scsi_command+0x88>)
 8000c40:	6843      	ldr	r3, [r0, #4]
  msc_csw.bStatus = CSW_STATUS_SUCCESS;
  msc_csw.dDataResidue = 0;
  
  bytestoread = 0;
 8000c42:	4921      	ldr	r1, [pc, #132]	; (8000cc8 <scsi_command+0x8c>)
  msc_csw.dTag = msc_cbw.dTag;
 8000c44:	6153      	str	r3, [r2, #20]
  msc_csw.bStatus = CSW_STATUS_SUCCESS;
 8000c46:	2300      	movs	r3, #0
 8000c48:	7713      	strb	r3, [r2, #28]
  msc_csw.dDataResidue = 0;
 8000c4a:	7613      	strb	r3, [r2, #24]
 8000c4c:	7653      	strb	r3, [r2, #25]
 8000c4e:	7693      	strb	r3, [r2, #26]
 8000c50:	76d3      	strb	r3, [r2, #27]
  bytestoread = 0;
 8000c52:	f8c1 320c 	str.w	r3, [r1, #524]	; 0x20c
  bytestowrite = 0;
  bytescount = 0;
 8000c56:	e9c1 3300 	strd	r3, r3, [r1]
  
  switch( msc_cbw.CB[0] ){
 8000c5a:	7bc3      	ldrb	r3, [r0, #15]
 8000c5c:	2b1b      	cmp	r3, #27
 8000c5e:	d00f      	beq.n	8000c80 <scsi_command+0x44>
 8000c60:	d815      	bhi.n	8000c8e <scsi_command+0x52>
 8000c62:	2b03      	cmp	r3, #3
 8000c64:	d028      	beq.n	8000cb8 <scsi_command+0x7c>
 8000c66:	d80c      	bhi.n	8000c82 <scsi_command+0x46>
 8000c68:	b313      	cbz	r3, 8000cb0 <scsi_command+0x74>
      break;
    case SCSI_MMC_START_STOP_UNIT:
    case SCSI_MMC_PREVENT_ALLOW_REMOVAL:
      break;
    default:
      msc_csw.bStatus = CSW_STATUS_FAILED;
 8000c6a:	2301      	movs	r3, #1
 8000c6c:	7713      	strb	r3, [r2, #28]
      msc_sense.key = SBC_SENSE_KEY_ILLEGAL_REQUEST;
 8000c6e:	2305      	movs	r3, #5
 8000c70:	f881 3210 	strb.w	r3, [r1, #528]	; 0x210
      msc_sense.asc = SBC_ASC_INVALID_COMMAND_OPERATION_CODE;
 8000c74:	2320      	movs	r3, #32
 8000c76:	f881 3211 	strb.w	r3, [r1, #529]	; 0x211
      msc_sense.ascq = SBC_ASCQ_NA;
 8000c7a:	2300      	movs	r3, #0
 8000c7c:	f881 3212 	strb.w	r3, [r1, #530]	; 0x212
      //
      break;
  }
}
 8000c80:	4770      	bx	lr
  switch( msc_cbw.CB[0] ){
 8000c82:	2b12      	cmp	r3, #18
 8000c84:	d012      	beq.n	8000cac <scsi_command+0x70>
 8000c86:	2b1a      	cmp	r3, #26
 8000c88:	d1ef      	bne.n	8000c6a <scsi_command+0x2e>
      scsi_mode_sense_6();
 8000c8a:	f7ff bf3f 	b.w	8000b0c <scsi_mode_sense_6>
  switch( msc_cbw.CB[0] ){
 8000c8e:	2b25      	cmp	r3, #37	; 0x25
 8000c90:	d010      	beq.n	8000cb4 <scsi_command+0x78>
 8000c92:	d805      	bhi.n	8000ca0 <scsi_command+0x64>
 8000c94:	2b1e      	cmp	r3, #30
 8000c96:	d0f3      	beq.n	8000c80 <scsi_command+0x44>
 8000c98:	2b23      	cmp	r3, #35	; 0x23
 8000c9a:	d1e6      	bne.n	8000c6a <scsi_command+0x2e>
      scsi_mmc_read_fmt_cap();
 8000c9c:	f7ff bfa6 	b.w	8000bec <scsi_mmc_read_fmt_cap>
  switch( msc_cbw.CB[0] ){
 8000ca0:	2b28      	cmp	r3, #40	; 0x28
 8000ca2:	d00b      	beq.n	8000cbc <scsi_command+0x80>
 8000ca4:	2b2a      	cmp	r3, #42	; 0x2a
 8000ca6:	d1e0      	bne.n	8000c6a <scsi_command+0x2e>
      scsi_write_10();
 8000ca8:	f7ff bf72 	b.w	8000b90 <scsi_write_10>
      scsi_inquiry();
 8000cac:	f7ff be97 	b.w	80009de <scsi_inquiry>
      scsi_test_unit_ready();
 8000cb0:	f7ff bef2 	b.w	8000a98 <scsi_test_unit_ready>
      scsi_read_capacity();
 8000cb4:	f7ff bf02 	b.w	8000abc <scsi_read_capacity>
      scsi_request_sense();
 8000cb8:	f7ff bed0 	b.w	8000a5c <scsi_request_sense>
      scsi_read_10();
 8000cbc:	f7ff bf46 	b.w	8000b4c <scsi_read_10>
 8000cc0:	20007694 	mulcs	r0, r4, r6
 8000cc4:	20000004 	andcs	r0, r0, r4
 8000cc8:	20000038 	andcs	r0, r0, r8, lsr r0

08000ccc <msc_ep1_out>:
static void msc_ep1_out(uint8_t epnum){
 8000ccc:	b510      	push	{r4, lr}
  int left = sizeof(usb_msc_cbw_t) - msc_cbw_count;
 8000cce:	4c20      	ldr	r4, [pc, #128]	; (8000d50 <msc_ep1_out+0x84>)
 8000cd0:	f894 320b 	ldrb.w	r3, [r4, #523]	; 0x20b
 8000cd4:	f1c3 021f 	rsb	r2, r3, #31
  if(left > 0){ //чтение команды
 8000cd8:	2a00      	cmp	r2, #0
 8000cda:	dd14      	ble.n	8000d06 <msc_ep1_out+0x3a>
    int sz = usb_ep_read(ENDP_NUM, (uint16_t*)&(((uint8_t*)&msc_cbw)[msc_cbw_count]) );
 8000cdc:	491d      	ldr	r1, [pc, #116]	; (8000d54 <msc_ep1_out+0x88>)
 8000cde:	2001      	movs	r0, #1
 8000ce0:	4419      	add	r1, r3
 8000ce2:	f7ff fce1 	bl	80006a8 <usb_ep_read>
    msc_cbw_count += sz;
 8000ce6:	f894 320b 	ldrb.w	r3, [r4, #523]	; 0x20b
 8000cea:	4418      	add	r0, r3
 8000cec:	b2c0      	uxtb	r0, r0
    if(msc_cbw_count == sizeof(usb_msc_cbw_t)){ //команда прочитана полностью
 8000cee:	281f      	cmp	r0, #31
    msc_cbw_count += sz;
 8000cf0:	f884 020b 	strb.w	r0, [r4, #523]	; 0x20b
    if(msc_cbw_count == sizeof(usb_msc_cbw_t)){ //команда прочитана полностью
 8000cf4:	d106      	bne.n	8000d04 <msc_ep1_out+0x38>
      scsi_command();
 8000cf6:	f7ff ffa1 	bl	8000c3c <scsi_command>
  if(bytescount < bytestoread)return;
 8000cfa:	6822      	ldr	r2, [r4, #0]
 8000cfc:	f8d4 320c 	ldr.w	r3, [r4, #524]	; 0x20c
 8000d00:	429a      	cmp	r2, r3
 8000d02:	d205      	bcs.n	8000d10 <msc_ep1_out+0x44>
}
 8000d04:	bd10      	pop	{r4, pc}
  }else if(bytescount < bytestoread){ //если разнести условие, произойдет повторное чтение буфера EP1_OUT, который был прочитан раньше, но size не сброшен (все равно этим железо занимается)
 8000d06:	6821      	ldr	r1, [r4, #0]
 8000d08:	f8d4 320c 	ldr.w	r3, [r4, #524]	; 0x20c
 8000d0c:	4299      	cmp	r1, r3
 8000d0e:	d303      	bcc.n	8000d18 <msc_ep1_out+0x4c>
}
 8000d10:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  msc_ep1_in(ENDP_NUM | 0x80);
 8000d14:	2081      	movs	r0, #129	; 0x81
 8000d16:	e57f      	b.n	8000818 <msc_ep1_in>
    uint8_t lun = msc_cbw.bLUN;
 8000d18:	4b0e      	ldr	r3, [pc, #56]	; (8000d54 <msc_ep1_out+0x88>)
    if(lun == 0){
 8000d1a:	7b5b      	ldrb	r3, [r3, #13]
 8000d1c:	b943      	cbnz	r3, 8000d30 <msc_ep1_out+0x64>
      sz = usb_ep_read(ENDP_NUM, (uint16_t*)&buffer[0]);
 8000d1e:	f104 0108 	add.w	r1, r4, #8
 8000d22:	2001      	movs	r0, #1
 8000d24:	f7ff fcc0 	bl	80006a8 <usb_ep_read>
    bytescount += sz;
 8000d28:	6823      	ldr	r3, [r4, #0]
 8000d2a:	4403      	add	r3, r0
 8000d2c:	6023      	str	r3, [r4, #0]
 8000d2e:	e7e4      	b.n	8000cfa <msc_ep1_out+0x2e>
      sz = usb_ep_read(ENDP_NUM, (uint16_t*)&rambuf[ start_lba*512 + bytescount ]);
 8000d30:	4b09      	ldr	r3, [pc, #36]	; (8000d58 <msc_ep1_out+0x8c>)
 8000d32:	2001      	movs	r0, #1
 8000d34:	681b      	ldr	r3, [r3, #0]
 8000d36:	eb01 2143 	add.w	r1, r1, r3, lsl #9
 8000d3a:	4b08      	ldr	r3, [pc, #32]	; (8000d5c <msc_ep1_out+0x90>)
 8000d3c:	4419      	add	r1, r3
 8000d3e:	f7ff fcb3 	bl	80006a8 <usb_ep_read>
      cur_count += sz;
 8000d42:	f8b4 3208 	ldrh.w	r3, [r4, #520]	; 0x208
 8000d46:	4403      	add	r3, r0
 8000d48:	f8a4 3208 	strh.w	r3, [r4, #520]	; 0x208
 8000d4c:	e7ec      	b.n	8000d28 <msc_ep1_out+0x5c>
 8000d4e:	bf00      	nop
 8000d50:	20000038 	andcs	r0, r0, r8, lsr r0
 8000d54:	20007694 	mulcs	r0, r4, r6
 8000d58:	20007690 	mulcs	r0, r0, r6
 8000d5c:	2000028e 	andcs	r0, r0, lr, lsl #5

08000d60 <__libc_init_array>:
 8000d60:	b570      	push	{r4, r5, r6, lr}
 8000d62:	4e0d      	ldr	r6, [pc, #52]	; (8000d98 <__libc_init_array+0x38>)
 8000d64:	4d0d      	ldr	r5, [pc, #52]	; (8000d9c <__libc_init_array+0x3c>)
 8000d66:	1b76      	subs	r6, r6, r5
 8000d68:	10b6      	asrs	r6, r6, #2
 8000d6a:	d006      	beq.n	8000d7a <__libc_init_array+0x1a>
 8000d6c:	2400      	movs	r4, #0
 8000d6e:	3401      	adds	r4, #1
 8000d70:	f855 3b04 	ldr.w	r3, [r5], #4
 8000d74:	4798      	blx	r3
 8000d76:	42a6      	cmp	r6, r4
 8000d78:	d1f9      	bne.n	8000d6e <__libc_init_array+0xe>
 8000d7a:	4e09      	ldr	r6, [pc, #36]	; (8000da0 <__libc_init_array+0x40>)
 8000d7c:	4d09      	ldr	r5, [pc, #36]	; (8000da4 <__libc_init_array+0x44>)
 8000d7e:	f7ff fae9 	bl	8000354 <_init>
 8000d82:	1b76      	subs	r6, r6, r5
 8000d84:	10b6      	asrs	r6, r6, #2
 8000d86:	d006      	beq.n	8000d96 <__libc_init_array+0x36>
 8000d88:	2400      	movs	r4, #0
 8000d8a:	3401      	adds	r4, #1
 8000d8c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000d90:	4798      	blx	r3
 8000d92:	42a6      	cmp	r6, r4
 8000d94:	d1f9      	bne.n	8000d8a <__libc_init_array+0x2a>
 8000d96:	bd70      	pop	{r4, r5, r6, pc}
 8000d98:	08002324 	stmdaeq	r0, {r2, r5, r8, r9, sp}
 8000d9c:	08002324 	stmdaeq	r0, {r2, r5, r8, r9, sp}
 8000da0:	08002324 	stmdaeq	r0, {r2, r5, r8, r9, sp}
 8000da4:	08002324 	stmdaeq	r0, {r2, r5, r8, r9, sp}

08000da8 <Reset_Handler>:
 8000da8:	2100      	movs	r1, #0
 8000daa:	e003      	b.n	8000db4 <LoopCopyDataInit>

08000dac <CopyDataInit>:
 8000dac:	4b0b      	ldr	r3, [pc, #44]	; (8000ddc <LoopFillZerobss+0x14>)
 8000dae:	585b      	ldr	r3, [r3, r1]
 8000db0:	5043      	str	r3, [r0, r1]
 8000db2:	3104      	adds	r1, #4

08000db4 <LoopCopyDataInit>:
 8000db4:	480a      	ldr	r0, [pc, #40]	; (8000de0 <LoopFillZerobss+0x18>)
 8000db6:	4b0b      	ldr	r3, [pc, #44]	; (8000de4 <LoopFillZerobss+0x1c>)
 8000db8:	1842      	adds	r2, r0, r1
 8000dba:	429a      	cmp	r2, r3
 8000dbc:	d3f6      	bcc.n	8000dac <CopyDataInit>
 8000dbe:	4a0a      	ldr	r2, [pc, #40]	; (8000de8 <LoopFillZerobss+0x20>)
 8000dc0:	e002      	b.n	8000dc8 <LoopFillZerobss>

08000dc2 <FillZerobss>:
 8000dc2:	2300      	movs	r3, #0
 8000dc4:	f842 3b04 	str.w	r3, [r2], #4

08000dc8 <LoopFillZerobss>:
 8000dc8:	4b08      	ldr	r3, [pc, #32]	; (8000dec <LoopFillZerobss+0x24>)
 8000dca:	429a      	cmp	r2, r3
 8000dcc:	d3f9      	bcc.n	8000dc2 <FillZerobss>
 8000dce:	f7ff fac2 	bl	8000356 <SystemInit>
 8000dd2:	f7ff ffc5 	bl	8000d60 <__libc_init_array>
 8000dd6:	f000 f80d 	bl	8000df4 <main>
 8000dda:	4770      	bx	lr
 8000ddc:	08002324 	stmdaeq	r0, {r2, r5, r8, r9, sp}
 8000de0:	20000000 	andcs	r0, r0, r0
 8000de4:	20000024 	andcs	r0, r0, r4, lsr #32
 8000de8:	20000024 	andcs	r0, r0, r4, lsr #32
 8000dec:	200076b4 			; <UNDEFINED> instruction: 0x200076b4

08000df0 <ADC1_IRQHandler>:
 8000df0:	e7fe      	b.n	8000df0 <ADC1_IRQHandler>
	...

08000df4 <main>:

int main(void){
 8000df4:	b510      	push	{r4, lr}
  clock_HS(1);
 8000df6:	2001      	movs	r0, #1
 8000df8:	f7ff f9f6 	bl	80001e8 <clock_HS>
  RCC->AHBENR |= RCC_AHBENR_GPIOAEN | RCC_AHBENR_GPIOBEN | RCC_AHBENR_GPIOCEN | RCC_AHBENR_GPIODEN;
 8000dfc:	4a1a      	ldr	r2, [pc, #104]	; (8000e68 <main+0x74>)
 8000dfe:	69d3      	ldr	r3, [r2, #28]
 8000e00:	f043 030f 	orr.w	r3, r3, #15
 8000e04:	61d3      	str	r3, [r2, #28]
  GPIO_config(GLED); GPIO_config(RLED);
 8000e06:	4b19      	ldr	r3, [pc, #100]	; (8000e6c <main+0x78>)
 8000e08:	681a      	ldr	r2, [r3, #0]
 8000e0a:	f422 2240 	bic.w	r2, r2, #786432	; 0xc0000
 8000e0e:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 8000e12:	601a      	str	r2, [r3, #0]
 8000e14:	689a      	ldr	r2, [r3, #8]
 8000e16:	f442 2240 	orr.w	r2, r2, #786432	; 0xc0000
 8000e1a:	609a      	str	r2, [r3, #8]
 8000e1c:	681a      	ldr	r2, [r3, #0]
 8000e1e:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 8000e22:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8000e26:	601a      	str	r2, [r3, #0]
 8000e28:	689a      	ldr	r2, [r3, #8]
 8000e2a:	f442 3240 	orr.w	r2, r2, #196608	; 0x30000
 8000e2e:	609a      	str	r2, [r3, #8]
  GPIO_config(LBTN); GPIO_config(JBTN);
 8000e30:	4a0f      	ldr	r2, [pc, #60]	; (8000e70 <main+0x7c>)
 8000e32:	6811      	ldr	r1, [r2, #0]
 8000e34:	f021 6140 	bic.w	r1, r1, #201326592	; 0xc000000
 8000e38:	6011      	str	r1, [r2, #0]
 8000e3a:	6891      	ldr	r1, [r2, #8]
 8000e3c:	f041 6140 	orr.w	r1, r1, #201326592	; 0xc000000
 8000e40:	6091      	str	r1, [r2, #8]
 8000e42:	681a      	ldr	r2, [r3, #0]
 8000e44:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
 8000e48:	601a      	str	r2, [r3, #0]
 8000e4a:	689a      	ldr	r2, [r3, #8]
 8000e4c:	f442 6240 	orr.w	r2, r2, #3072	; 0xc00
 8000e50:	609a      	str	r2, [r3, #8]
  
  USB_setup();
 8000e52:	f7ff fa8e 	bl	8000372 <USB_setup>
static __INLINE void __enable_irq()               { __ASM volatile ("cpsie i"); }
 8000e56:	b662      	cpsie	i
  __enable_irq();
  while (1){
    usb_class_poll();
    sleep(100000);
 8000e58:	4c06      	ldr	r4, [pc, #24]	; (8000e74 <main+0x80>)
    usb_class_poll();
 8000e5a:	f7ff fa85 	bl	8000368 <usb_class_poll>
    sleep(100000);
 8000e5e:	4620      	mov	r0, r4
 8000e60:	f7ff fa7a 	bl	8000358 <sleep>
 8000e64:	e7f9      	b.n	8000e5a <main+0x66>
 8000e66:	bf00      	nop
 8000e68:	40023800 	andmi	r3, r2, r0, lsl #16
 8000e6c:	40020400 	andmi	r0, r2, r0, lsl #8
 8000e70:	40020800 	andmi	r0, r2, r0, lsl #16
 8000e74:	000186a0 	andeq	r8, r1, r0, lsr #13

Disassembly of section .rodata:

08000e78 <USB_DeviceDescriptor-0x2>:
	...

08000e7a <USB_DeviceDescriptor>:
static const uint8_t USB_DeviceDescriptor[] = {
 8000e7a:	02000112 	andeq	r0, r0, #-2147483644	; 0x80000004
 8000e7e:	40000000 	andmi	r0, r0, r0
 8000e82:	05df16c0 	ldrbeq	r1, [pc, #1728]	; 800154a <_binary_src_fatexample_img_start+0x629>
 8000e86:	02010001 	andeq	r0, r1, #1
 8000e8a:	 	andeq	r0, r9, #-1073741824	; 0xc0000000

08000e8c <USB_ConfigDescriptor>:
static const uint8_t USB_ConfigDescriptor[] = {
 8000e8c:	00200209 	eoreq	r0, r0, r9, lsl #4
 8000e90:	80000101 	andhi	r0, r0, r1, lsl #2
 8000e94:	00040932 	andeq	r0, r4, r2, lsr r9
 8000e98:	06080200 	streq	r0, [r8], -r0, lsl #4
 8000e9c:	05070050 	streq	r0, [r7, #-80]	; 0xffffffb0
 8000ea0:	00400281 	subeq	r0, r0, r1, lsl #5
 8000ea4:	01050700 	tsteq	r5, r0, lsl #14
 8000ea8:	00004002 	andeq	r4, r0, r2

08000eac <USB_DeviceQualifierDescriptor>:
static const uint8_t USB_DeviceQualifierDescriptor[] = {
 8000eac:	0200060a 	andeq	r0, r0, #10485760	; 0xa00000
 8000eb0:	40000000 	andmi	r0, r0, r0
 8000eb4:	 	movweq	r0, #16385	; 0x4001

08000eb6 <USB_StringLangDescriptor>:
USB_STRING(USB_StringLangDescriptor, u"\x0409"); //lang US
 8000eb6:	04090304 	streq	r0, [r9], #-772	; 0xfffffcfc

08000eba <USB_StringManufacturingDescriptor>:
USB_STRING(USB_StringManufacturingDescriptor, u"COKPOWEHEU"); //Vendor
 8000eba:	00430316 	subeq	r0, r3, r6, lsl r3
 8000ebe:	004b004f 	subeq	r0, fp, pc, asr #32
 8000ec2:	004f0050 	subeq	r0, pc, r0, asr r0	; <UNPREDICTABLE>
 8000ec6:	00450057 	subeq	r0, r5, r7, asr r0
 8000eca:	00450048 	subeq	r0, r5, r8, asr #32
 8000ece:	 	tsteq	r0, #85	; 0x55

08000ed0 <USB_StringProdDescriptor>:
USB_STRING(USB_StringProdDescriptor, u"USB MSD"); //Product
 8000ed0:	00550310 	subseq	r0, r5, r0, lsl r3
 8000ed4:	00420053 	subeq	r0, r2, r3, asr r0
 8000ed8:	004d0020 	subeq	r0, sp, r0, lsr #32
 8000edc:	00440053 	subeq	r0, r4, r3, asr r0

08000ee0 <USB_StringSerialDescriptor>:
USB_STRING(USB_StringSerialDescriptor, u"1"); //Serial (BCD)
 8000ee0:	00310304 	eorseq	r0, r1, r4, lsl #6

08000ee4 <inquiry_page00_data>:
const uint8_t  inquiry_page00_data[] = {//7						
 8000ee4:	03000000 	movweq	r0, #0
 8000ee8:	 	addeq	r8, r3, r0

08000eeb <inquiry_response>:
static const uint8_t inquiry_response[36] = {
 8000eeb:	02048000 	andeq	r8, r4, #0
 8000eef:	0000001f 	andeq	r0, r0, pc, lsl r0
 8000ef3:	504b4f43 	subpl	r4, fp, r3, asr #30
 8000ef7:	20202020 	eorcs	r2, r0, r0, lsr #32
 8000efb:	2044534d 	subcs	r5, r4, sp, asr #6
 8000eff:	20202020 	eorcs	r2, r0, r0, lsr #32
 8000f03:	20202020 	eorcs	r2, r0, r0, lsr #32
 8000f07:	20202020 	eorcs	r2, r0, r0, lsr #32
 8000f0b:	31302e30 	teqcc	r0, r0, lsr lr

08000f0f <sense_response>:
static const uint8_t sense_response[18] = {
 8000f0f:	00000070 	andeq	r0, r0, r0, ror r0
 8000f13:	0a000000 	beq	8000f1b <sense_response+0xc>
	...

08000f21 <_binary_src_fatexample_img_start>:
 8000f21:	6d903ceb 	ldcvs	12, cr3, [r0, #940]	; 0x3ac
 8000f25:	2e73666b 	cdpcs	6, 7, cr6, cr3, cr11, {3}
 8000f29:	00746166 	rsbseq	r6, r4, r6, ror #2
 8000f2d:	00010402 	andeq	r0, r1, r2, lsl #8
 8000f31:	64020002 	strvs	r0, [r2], #-2
 8000f35:	0001f800 	andeq	pc, r1, r0, lsl #16
 8000f39:	00400020 	subeq	r0, r0, r0, lsr #32
	...
 8000f45:	eb290080 	bl	8a4114d <__exidx_end+0xa3ee29>
 8000f49:	4e3742ea 	cdpmi	2, 3, cr4, cr7, cr10, {7}
 8000f4d:	414e204f 	cmpmi	lr, pc, asr #32
 8000f51:	2020454d 	eorcs	r4, r0, sp, asr #10
 8000f55:	41462020 	cmpmi	r6, r0, lsr #32
 8000f59:	20323154 	eorscs	r3, r2, r4, asr r1
 8000f5d:	1f0e2020 	svcne	0x000e2020
 8000f61:	ac7c5bbe 			; <UNDEFINED> instruction: 0xac7c5bbe
 8000f65:	0b74c022 	bleq	9d30ff5 <__exidx_end+0x1d2ecd1>
 8000f69:	bb0eb456 	bllt	83ae0c9 <__exidx_end+0x3abda5>
 8000f6d:	10cd0007 	sbcne	r0, sp, r7
 8000f71:	32f0eb5e 	rscscc	lr, r0, #96256	; 0x17800
 8000f75:	cd16cde4 	ldcgt	13, cr12, [r6, #-912]	; 0xfffffc70
 8000f79:	54feeb19 	ldrbtpl	lr, [lr], #2841	; 0xb19
 8000f7d:	20736968 	rsbscs	r6, r3, r8, ror #18
 8000f81:	6e207369 	cdpvs	3, 2, cr7, cr0, cr9, {3}
 8000f85:	6120746f 			; <UNDEFINED> instruction: 0x6120746f
 8000f89:	6f6f6220 	svcvs	0x006f6220
 8000f8d:	6c626174 	stfvse	f6, [r2], #-464	; 0xfffffe30
 8000f91:	69642065 	stmdbvs	r4!, {r0, r2, r5, r6, sp}^
 8000f95:	202e6b73 	eorcs	r6, lr, r3, ror fp
 8000f99:	656c5020 	strbvs	r5, [ip, #-32]!	; 0xffffffe0
 8000f9d:	20657361 	rsbcs	r7, r5, r1, ror #6
 8000fa1:	65736e69 	ldrbvs	r6, [r3, #-3689]!	; 0xfffff197
 8000fa5:	61207472 			; <UNDEFINED> instruction: 0x61207472
 8000fa9:	6f6f6220 	svcvs	0x006f6220
 8000fad:	6c626174 	stfvse	f6, [r2], #-464	; 0xfffffe30
 8000fb1:	6c662065 	stclvs	0, cr2, [r6], #-404	; 0xfffffe6c
 8000fb5:	7970706f 	ldmdbvc	r0!, {r0, r1, r2, r3, r5, r6, ip, sp, lr}^
 8000fb9:	646e6120 	strbtvs	r6, [lr], #-288	; 0xfffffee0
 8000fbd:	72700a0d 	rsbsvc	r0, r0, #53248	; 0xd000
 8000fc1:	20737365 	rsbscs	r7, r3, r5, ror #6
 8000fc5:	20796e61 	rsbscs	r6, r9, r1, ror #28
 8000fc9:	2079656b 	rsbscs	r6, r9, fp, ror #10
 8000fcd:	74206f74 	strtvc	r6, [r0], #-3956	; 0xfffff08c
 8000fd1:	61207972 			; <UNDEFINED> instruction: 0x61207972
 8000fd5:	6e696167 	powvsez	f6, f1, f7
 8000fd9:	2e2e2e20 	cdpcs	14, 2, cr2, cr14, cr0, {1}
 8000fdd:	000a0d20 	andeq	r0, sl, r0, lsr #26
	...
 800111d:	aa550000 	bge	9541125 <__exidx_end+0x153ee01>
 8001121:	00fffff8 	ldrshteq	pc, [pc], #248	; <UNPREDICTABLE>
	...
 8001321:	00fffff8 	ldrshteq	pc, [pc], #248	; <UNPREDICTABLE>
	...

08002321 <_binary_src_fatexample_img_end>:
 8002321:	Address 0x0000000008002321 is out of bounds.


Disassembly of section .data:

20000000 <lastaddr>:
20000000:	00000040 	andeq	r0, r0, r0, asr #32

20000004 <storage>:
}storage[] = {
20000004:	00000000 	andeq	r0, r0, r0
20000008:	08000f21 	stmdaeq	r0, {r0, r5, r8, r9, sl, fp}
2000000c:	00007400 	andeq	r7, r0, r0, lsl #8
20000010:	2000028e 	andcs	r0, r0, lr, lsl #5

20000014 <msc_csw>:
usb_msc_csw_t msc_csw = {
20000014:	53425355 	movtpl	r5, #9045	; 0x2355
	...

20000021 <maxlun>:
uint8_t maxlun = 1;
20000021:	Address 0x0000000020000021 is out of bounds.


Disassembly of section .bss:

20000024 <ep0_buf>:
20000024:	00000000 	andeq	r0, r0, r0

20000028 <USB_Addr>:
	...

2000002a <ep0_count>:
	...

2000002c <setup_packet>:
	...

20000034 <bytesread.4393>:
	...

20000036 <configuration>:
	...

20000038 <bytescount>:
static uint32_t bytescount = 0;
20000038:	00000000 	andeq	r0, r0, r0

2000003c <bytestowrite>:
static uint32_t bytestowrite = 0;
2000003c:	00000000 	andeq	r0, r0, r0

20000040 <buffer>:
	...

20000240 <cur_count>:
	...

20000242 <msc_csw_count>:
	...

20000243 <msc_cbw_count>:
	...

20000244 <bytestoread>:
static uint32_t bytestoread = 0;
20000244:	00000000 	andeq	r0, r0, r0

20000248 <msc_sense>:
usb_msc_sense_t msc_sense = {0,0,0};
20000248:	00000000 	andeq	r0, r0, r0

2000024c <epfunc_in>:
	...

2000026c <epfunc_out>:
	...

2000028c <block_count>:
	...

2000028e <rambuf>:
	...

20007690 <start_lba>:
uint32_t start_lba;
20007690:	00000000 	andeq	r0, r0, r0

20007694 <msc_cbw>:
	...

Disassembly of section ._user_heap_stack:

200076b4 <._user_heap_stack>:
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002e41 	andeq	r2, r0, r1, asr #28
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000024 	andeq	r0, r0, r4, lsr #32
  10:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
  14:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
  18:	0600334d 	streq	r3, [r0], -sp, asr #6
  1c:	094d070a 	stmdbeq	sp, {r1, r3, r8, r9, sl}^
  20:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  24:	17011501 	strne	r1, [r1, -r1, lsl #10]
  28:	1a011803 	bne	4603c <_binary_src_fatexample_img_size+0x44c3c>
  2c:	Address 0x000000000000002c is out of bounds.


Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	00000928 	andeq	r0, r0, r8, lsr #18
       4:	00000002 	andeq	r0, r0, r2
       8:	01040000 	mrseq	r0, (UNDEF: 4)
       c:	00000345 	andeq	r0, r0, r5, asr #6
      10:	0000120c 	andeq	r1, r0, ip, lsl #4
      14:	0002c000 	andeq	ip, r2, r0
	...
      28:	06010200 	streq	r0, [r1], -r0, lsl #4
      2c:	00000258 	andeq	r0, r0, r8, asr r2
      30:	00031703 	andeq	r1, r3, r3, lsl #14
      34:	17220400 	strne	r0, [r2, -r0, lsl #8]!
      38:	00000029 	andeq	r0, r0, r9, lsr #32
      3c:	71050202 	tstvc	r5, r2, lsl #4
      40:	02000002 	andeq	r0, r0, #2
      44:	00820504 	addeq	r0, r2, r4, lsl #10
      48:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
      4c:	00007d05 	andeq	r7, r0, r5, lsl #26
      50:	03160300 	tsteq	r6, #0, 6
      54:	2e040000 	cdpcs	0, 0, cr0, cr4, cr0, {0}
      58:	00005d18 	andeq	r5, r0, r8, lsl sp
      5c:	08010200 	stmdaeq	r1, {r9}
      60:	00000256 	andeq	r0, r0, r6, asr r2
      64:	0000ff03 	andeq	pc, r0, r3, lsl #30
      68:	19310400 	ldmdbne	r1!, {sl}
      6c:	00000070 	andeq	r0, r0, r0, ror r0
      70:	7e070202 	cdpvc	2, 0, cr0, cr7, cr2, {0}
      74:	03000001 	movweq	r0, #1
      78:	000002ab 	andeq	r0, r0, fp, lsr #5
      7c:	88193404 	ldmdahi	r9, {r2, sl, ip, sp}
      80:	04000000 	streq	r0, [r0], #-0
      84:	00000077 	andeq	r0, r0, r7, ror r0
      88:	4d070402 	cfstrsmi	mvf0, [r7, #-8]
      8c:	02000000 	andeq	r0, r0, #0
      90:	00480708 	subeq	r0, r8, r8, lsl #14
      94:	04050000 	streq	r0, [r5], #-0
      98:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
      9c:	00960400 	addseq	r0, r6, r0, lsl #8
      a0:	04020000 	streq	r0, [r2], #-0
      a4:	00005207 	andeq	r5, r0, r7, lsl #4
      a8:	02640600 	rsbeq	r0, r4, #0, 12
      ac:	ce030000 	cdpgt	0, 0, cr0, cr3, cr0, {0}
      b0:	009d1506 	addseq	r1, sp, r6, lsl #10
      b4:	01010000 	mrseq	r0, (UNDEF: 1)
      b8:	00013a07 	andeq	r3, r1, r7, lsl #20
      bc:	114c0500 	cmpne	ip, r0, lsl #10
      c0:	00000077 	andeq	r0, r0, r7, ror r0
      c4:	84080101 	strhi	r0, [r8], #-257	; 0xfffffeff
      c8:	09012506 	stmdbeq	r1, {r1, r2, r8, sl, sp}
      cc:	00000181 	andeq	r0, r0, r1, lsl #3
      d0:	52434109 	subpl	r4, r3, #1073741826	; 0x40000002
      d4:	01270600 			; <UNDEFINED> instruction: 0x01270600
      d8:	00008311 	andeq	r8, r0, r1, lsl r3
      dc:	00230200 	eoreq	r0, r3, r0, lsl #4
      e0:	00009e0a 	andeq	r9, r0, sl, lsl #28
      e4:	01280600 			; <UNDEFINED> instruction: 0x01280600
      e8:	00008311 	andeq	r8, r0, r1, lsl r3
      ec:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
      f0:	00010f0a 	andeq	r0, r1, sl, lsl #30
      f4:	01290600 			; <UNDEFINED> instruction: 0x01290600
      f8:	00008311 	andeq	r8, r0, r1, lsl r3
      fc:	08230200 	stmdaeq	r3!, {r9}
     100:	00031e0a 	andeq	r1, r3, sl, lsl #28
     104:	012a0600 			; <UNDEFINED> instruction: 0x012a0600
     108:	00008311 	andeq	r8, r0, r1, lsl r3
     10c:	0c230200 	sfmeq	f0, 4, [r3], #-0
     110:	00005f0a 	andeq	r5, r0, sl, lsl #30
     114:	012b0600 			; <UNDEFINED> instruction: 0x012b0600
     118:	00008311 	andeq	r8, r0, r1, lsl r3
     11c:	10230200 	eorne	r0, r3, r0, lsl #4
     120:	0000e80a 	andeq	lr, r0, sl, lsl #16
     124:	012c0600 			; <UNDEFINED> instruction: 0x012c0600
     128:	00008311 	andeq	r8, r0, r1, lsl r3
     12c:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     130:	00525309 	subseq	r5, r2, r9, lsl #6
     134:	11012d06 	tstne	r1, r6, lsl #26
     138:	00000083 	andeq	r0, r0, r3, lsl #1
     13c:	09182302 	ldmdbeq	r8, {r1, r8, r9, sp}
     140:	0052424f 	subseq	r4, r2, pc, asr #4
     144:	11012e06 	tstne	r1, r6, lsl #28
     148:	00000083 	andeq	r0, r0, r3, lsl #1
     14c:	0a1c2302 	beq	708d5c <_binary_src_fatexample_img_size+0x70795c>
     150:	000001f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     154:	11012f06 	tstne	r1, r6, lsl #30
     158:	00000083 	andeq	r0, r0, r3, lsl #1
     15c:	0a202302 	beq	808d6c <_binary_src_fatexample_img_size+0x80796c>
     160:	00000281 	andeq	r0, r0, r1, lsl #5
     164:	0e013006 	cdpeq	0, 0, cr3, cr1, cr6, {0}
     168:	00000181 	andeq	r0, r0, r1, lsl #3
     16c:	0a242302 	beq	908d7c <_binary_src_fatexample_img_size+0x90797c>
     170:	000001f6 	strdeq	r0, [r0], -r6
     174:	11013106 	tstne	r1, r6, lsl #2
     178:	00000083 	andeq	r0, r0, r3, lsl #1
     17c:	01802303 	orreq	r2, r0, r3, lsl #6
     180:	00770b00 	rsbseq	r0, r7, r0, lsl #22
     184:	01910000 	orrseq	r0, r1, r0
     188:	a20c0000 	andge	r0, ip, #0
     18c:	16000000 	strne	r0, [r0], -r0
     190:	00900d00 	addseq	r0, r0, r0, lsl #26
     194:	32060000 	andcc	r0, r6, #0
     198:	00c60301 	sbceq	r0, r6, r1, lsl #6
     19c:	2c080000 	stccs	0, cr0, [r8], {-0}
     1a0:	09014f06 	stmdbeq	r1, {r1, r2, r8, r9, sl, fp, lr}
     1a4:	00000249 	andeq	r0, r0, r9, asr #4
     1a8:	0000420a 	andeq	r4, r0, sl, lsl #4
     1ac:	01510600 	cmpeq	r1, r0, lsl #12
     1b0:	00008311 	andeq	r8, r0, r1, lsl r3
     1b4:	00230200 	eoreq	r0, r3, r0, lsl #4
     1b8:	0000290a 	andeq	r2, r0, sl, lsl #18
     1bc:	01520600 	cmpeq	r2, r0, lsl #12
     1c0:	00008311 	andeq	r8, r0, r1, lsl r3
     1c4:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     1c8:	0001160a 	andeq	r1, r1, sl, lsl #12
     1cc:	01530600 	cmpeq	r3, r0, lsl #12
     1d0:	00008311 	andeq	r8, r0, r1, lsl r3
     1d4:	08230200 	stmdaeq	r3!, {r9}
     1d8:	0000070a 	andeq	r0, r0, sl, lsl #14
     1dc:	01540600 	cmpeq	r4, r0, lsl #12
     1e0:	00008311 	andeq	r8, r0, r1, lsl r3
     1e4:	0c230200 	sfmeq	f0, 4, [r3], #-0
     1e8:	52444909 	subpl	r4, r4, #147456	; 0x24000
     1ec:	01550600 	cmpeq	r5, r0, lsl #12
     1f0:	00008311 	andeq	r8, r0, r1, lsl r3
     1f4:	10230200 	eorne	r0, r3, r0, lsl #4
     1f8:	52444f09 	subpl	r4, r4, #9, 30	; 0x24
     1fc:	01560600 	cmpeq	r6, r0, lsl #12
     200:	00008311 	andeq	r8, r0, r1, lsl r3
     204:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     208:	00008b0a 	andeq	r8, r0, sl, lsl #22
     20c:	01570600 	cmpeq	r7, r0, lsl #12
     210:	00008311 	andeq	r8, r0, r1, lsl r3
     214:	18230200 	stmdane	r3!, {r9}
     218:	00000d0a 	andeq	r0, r0, sl, lsl #26
     21c:	01580600 	cmpeq	r8, r0, lsl #12
     220:	00008311 	andeq	r8, r0, r1, lsl r3
     224:	1c230200 	sfmne	f0, 4, [r3], #-0
     228:	52464109 	subpl	r4, r6, #1073741826	; 0x40000002
     22c:	01590600 	cmpeq	r9, r0, lsl #12
     230:	00025911 	andeq	r5, r2, r1, lsl r9
     234:	20230200 	eorcs	r0, r3, r0, lsl #4
     238:	52524209 	subspl	r4, r2, #-1879048192	; 0x90000000
     23c:	015a0600 	cmpeq	sl, r0, lsl #12
     240:	00008311 	andeq	r8, r0, r1, lsl r3
     244:	28230200 	stmdacs	r3!, {r9}
     248:	00830b00 	addeq	r0, r3, r0, lsl #22
     24c:	02590000 	subseq	r0, r9, #0
     250:	a20c0000 	andge	r0, ip, #0
     254:	01000000 	mrseq	r0, (UNDEF: 0)
     258:	02490400 	subeq	r0, r9, #0, 8
     25c:	570d0000 	strpl	r0, [sp, -r0]
     260:	06000001 	streq	r0, [r0], -r1
     264:	9e03015b 	mcrls	1, 0, r0, cr3, cr11, {2}
     268:	08000001 	stmdaeq	r0, {r0}
     26c:	01890608 	orreq	r0, r9, r8, lsl #12
     270:	00029509 	andeq	r9, r2, r9, lsl #10
     274:	52430900 	subpl	r0, r3, #0, 18
     278:	018b0600 	orreq	r0, fp, r0, lsl #12
     27c:	00008311 	andeq	r8, r0, r1, lsl r3
     280:	00230200 	eoreq	r0, r3, r0, lsl #4
     284:	52534309 	subspl	r4, r3, #603979776	; 0x24000000
     288:	018c0600 	orreq	r0, ip, r0, lsl #12
     28c:	00008311 	andeq	r8, r0, r1, lsl r3
     290:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     294:	01c40d00 	biceq	r0, r4, r0, lsl #26
     298:	8d060000 	stchi	0, cr0, [r6, #-0]
     29c:	026b0301 	rsbeq	r0, fp, #67108864	; 0x4000000
     2a0:	38080000 	stmdacc	r8, {}	; <UNPREDICTABLE>
     2a4:	09019306 	stmdbeq	r1, {r1, r2, r8, r9, ip, pc}
     2a8:	0000038c 	andeq	r0, r0, ip, lsl #7
     2ac:	00524309 	subseq	r4, r2, r9, lsl #6
     2b0:	11019506 	tstne	r1, r6, lsl #10
     2b4:	00000083 	andeq	r0, r0, r3, lsl #1
     2b8:	0a002302 	beq	8ec8 <_binary_src_fatexample_img_size+0x7ac8>
     2bc:	0000030a 	andeq	r0, r0, sl, lsl #6
     2c0:	11019606 	tstne	r1, r6, lsl #12
     2c4:	00000083 	andeq	r0, r0, r3, lsl #1
     2c8:	0a042302 	beq	108ed8 <_binary_src_fatexample_img_size+0x107ad8>
     2cc:	000002a0 	andeq	r0, r0, r0, lsr #5
     2d0:	11019706 	tstne	r1, r6, lsl #14
     2d4:	00000083 	andeq	r0, r0, r3, lsl #1
     2d8:	09082302 	stmdbeq	r8, {r1, r8, r9, sp}
     2dc:	00524943 	subseq	r4, r2, r3, asr #18
     2e0:	11019806 	tstne	r1, r6, lsl #16
     2e4:	00000083 	andeq	r0, r0, r3, lsl #1
     2e8:	0a0c2302 	beq	308ef8 <_binary_src_fatexample_img_size+0x307af8>
     2ec:	00000203 	andeq	r0, r0, r3, lsl #4
     2f0:	11019906 	tstne	r1, r6, lsl #18
     2f4:	00000083 	andeq	r0, r0, r3, lsl #1
     2f8:	0a102302 	beq	408f08 <_binary_src_fatexample_img_size+0x407b08>
     2fc:	000000c0 	andeq	r0, r0, r0, asr #1
     300:	11019a06 	tstne	r1, r6, lsl #20
     304:	00000083 	andeq	r0, r0, r3, lsl #1
     308:	0a142302 	beq	508f18 <_binary_src_fatexample_img_size+0x507b18>
     30c:	00000210 	andeq	r0, r0, r0, lsl r2
     310:	11019b06 	tstne	r1, r6, lsl #22
     314:	00000083 	andeq	r0, r0, r3, lsl #1
     318:	0a182302 	beq	608f28 <_binary_src_fatexample_img_size+0x607b28>
     31c:	000003d8 	ldrdeq	r0, [r0], -r8
     320:	11019c06 	tstne	r1, r6, lsl #24
     324:	00000083 	andeq	r0, r0, r3, lsl #1
     328:	0a1c2302 	beq	708f38 <_binary_src_fatexample_img_size+0x707b38>
     32c:	00000291 	muleq	r0, r1, r2
     330:	11019d06 	tstne	r1, r6, lsl #26
     334:	00000083 	andeq	r0, r0, r3, lsl #1
     338:	0a202302 	beq	808f48 <_binary_src_fatexample_img_size+0x807b48>
     33c:	000002eb 	andeq	r0, r0, fp, ror #5
     340:	11019e06 	tstne	r1, r6, lsl #28
     344:	00000083 	andeq	r0, r0, r3, lsl #1
     348:	0a242302 	beq	908f58 <_binary_src_fatexample_img_size+0x907b58>
     34c:	000000d8 	ldrdeq	r0, [r0], -r8
     350:	11019f06 	tstne	r1, r6, lsl #30
     354:	00000083 	andeq	r0, r0, r3, lsl #1
     358:	0a282302 	beq	a08f68 <_binary_src_fatexample_img_size+0xa07b68>
     35c:	000001ba 			; <UNDEFINED> instruction: 0x000001ba
     360:	1101a006 	tstne	r1, r6
     364:	00000083 	andeq	r0, r0, r3, lsl #1
     368:	0a2c2302 	beq	b08f78 <_binary_src_fatexample_img_size+0xb07b78>
     36c:	00000197 	muleq	r0, r7, r1
     370:	1101a106 	tstne	r1, r6, lsl #2
     374:	00000083 	andeq	r0, r0, r3, lsl #1
     378:	09302302 	ldmdbeq	r0!, {r1, r8, r9, sp}
     37c:	00525343 	subseq	r5, r2, r3, asr #6
     380:	1101a206 	tstne	r1, r6, lsl #4
     384:	00000083 	andeq	r0, r0, r3, lsl #1
     388:	00342302 	eorseq	r2, r4, r2, lsl #6
     38c:	0001640d 	andeq	r6, r1, sp, lsl #8
     390:	01a30600 			; <UNDEFINED> instruction: 0x01a30600
     394:	0002a203 	andeq	sl, r2, r3, lsl #4
     398:	06d00800 	ldrbeq	r0, [r0], r0, lsl #16
     39c:	f50901c0 			; <UNDEFINED> instruction: 0xf50901c0
     3a0:	09000006 	stmdbeq	r0, {r1, r2}
     3a4:	06005254 			; <UNDEFINED> instruction: 0x06005254
     3a8:	831101c2 	tsthi	r1, #-2147483600	; 0x80000030
     3ac:	02000000 	andeq	r0, r0, #0
     3b0:	44090023 	strmi	r0, [r9], #-35	; 0xffffffdd
     3b4:	c3060052 	movwgt	r0, #24658	; 0x6052
     3b8:	00831101 	addeq	r1, r3, r1, lsl #2
     3bc:	23020000 	movwcs	r0, #8192	; 0x2000
     3c0:	52430904 	subpl	r0, r3, #4, 18	; 0x10000
     3c4:	01c40600 	biceq	r0, r4, r0, lsl #12
     3c8:	00008311 	andeq	r8, r0, r1, lsl r3
     3cc:	08230200 	stmdaeq	r3!, {r9}
     3d0:	52534909 	subspl	r4, r3, #147456	; 0x24000
     3d4:	01c50600 	biceq	r0, r5, r0, lsl #12
     3d8:	00008311 	andeq	r8, r0, r1, lsl r3
     3dc:	0c230200 	sfmeq	f0, 4, [r3], #-0
     3e0:	00003d0a 	andeq	r3, r0, sl, lsl #26
     3e4:	01c60600 	biceq	r0, r6, r0, lsl #12
     3e8:	00008311 	andeq	r8, r0, r1, lsl r3
     3ec:	10230200 	eorne	r0, r3, r0, lsl #4
     3f0:	0002b40a 	andeq	fp, r2, sl, lsl #8
     3f4:	01c70600 	biceq	r0, r7, r0, lsl #12
     3f8:	00008311 	andeq	r8, r0, r1, lsl r3
     3fc:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     400:	0000000a 	andeq	r0, r0, sl
     404:	01c80600 	biceq	r0, r8, r0, lsl #12
     408:	00008311 	andeq	r8, r0, r1, lsl r3
     40c:	18230200 	stmdane	r3!, {r9}
     410:	0002260a 	andeq	r2, r2, sl, lsl #12
     414:	01c90600 	biceq	r0, r9, r0, lsl #12
     418:	00008311 	andeq	r8, r0, r1, lsl r3
     41c:	1c230200 	sfmne	f0, 4, [r3], #-0
     420:	0002990a 	andeq	r9, r2, sl, lsl #18
     424:	01ca0600 	biceq	r0, sl, r0, lsl #12
     428:	00008311 	andeq	r8, r0, r1, lsl r3
     42c:	20230200 	eorcs	r0, r3, r0, lsl #4
     430:	52505709 	subspl	r5, r0, #2359296	; 0x240000
     434:	01cb0600 	biceq	r0, fp, r0, lsl #12
     438:	00008311 	andeq	r8, r0, r1, lsl r3
     43c:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
     440:	52535309 	subspl	r5, r3, #603979776	; 0x24000000
     444:	01cc0600 	biceq	r0, ip, r0, lsl #12
     448:	00008311 	andeq	r8, r0, r1, lsl r3
     44c:	28230200 	stmdacs	r3!, {r9}
     450:	0003030a 	andeq	r0, r3, sl, lsl #6
     454:	01cd0600 	biceq	r0, sp, r0, lsl #12
     458:	00008311 	andeq	r8, r0, r1, lsl r3
     45c:	2c230200 	sfmcs	f0, 4, [r3], #-0
     460:	0001a10a 	andeq	sl, r1, sl, lsl #2
     464:	01ce0600 	biceq	r0, lr, r0, lsl #12
     468:	00008311 	andeq	r8, r0, r1, lsl r3
     46c:	30230200 	eorcc	r0, r3, r0, lsl #4
     470:	00001d0a 	andeq	r1, r0, sl, lsl #26
     474:	01cf0600 	biceq	r0, pc, r0, lsl #12
     478:	00008311 	andeq	r8, r0, r1, lsl r3
     47c:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
     480:	0000b30a 	andeq	fp, r0, sl, lsl #6
     484:	01d00600 	bicseq	r0, r0, r0, lsl #12
     488:	00008311 	andeq	r8, r0, r1, lsl r3
     48c:	38230200 	stmdacc	r3!, {r9}
     490:	0001dd0a 	andeq	sp, r1, sl, lsl #26
     494:	01d10600 	bicseq	r0, r1, r0, lsl #12
     498:	00008311 	andeq	r8, r0, r1, lsl r3
     49c:	3c230200 	sfmcc	f0, 4, [r3], #-0
     4a0:	0001a60a 	andeq	sl, r1, sl, lsl #12
     4a4:	01d20600 	bicseq	r0, r2, r0, lsl #12
     4a8:	00008311 	andeq	r8, r0, r1, lsl r3
     4ac:	40230200 	eormi	r0, r3, r0, lsl #4
     4b0:	0001310a 	andeq	r3, r1, sl, lsl #2
     4b4:	01d30600 	bicseq	r0, r3, r0, lsl #12
     4b8:	00008311 	andeq	r8, r0, r1, lsl r3
     4bc:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
     4c0:	0000cf0a 	andeq	ip, r0, sl, lsl #30
     4c4:	01d40600 	bicseq	r0, r4, r0, lsl #12
     4c8:	00008311 	andeq	r8, r0, r1, lsl r3
     4cc:	48230200 	stmdami	r3!, {r9}
     4d0:	00023a0a 	andeq	r3, r2, sl, lsl #20
     4d4:	01d50600 	bicseq	r0, r5, r0, lsl #12
     4d8:	0000770c 	andeq	r7, r0, ip, lsl #14
     4dc:	4c230200 	sfmmi	f0, 4, [r3], #-0
     4e0:	00027b0a 	andeq	r7, r2, sl, lsl #22
     4e4:	01d60600 	bicseq	r0, r6, r0, lsl #12
     4e8:	00008311 	andeq	r8, r0, r1, lsl r3
     4ec:	50230200 	eorpl	r0, r3, r0, lsl #4
     4f0:	0002e50a 	andeq	lr, r2, sl, lsl #10
     4f4:	01d70600 	bicseq	r0, r7, r0, lsl #12
     4f8:	00008311 	andeq	r8, r0, r1, lsl r3
     4fc:	54230200 	strtpl	r0, [r3], #-512	; 0xfffffe00
     500:	00032c0a 	andeq	r2, r3, sl, lsl #24
     504:	01d80600 	bicseq	r0, r8, r0, lsl #12
     508:	00008311 	andeq	r8, r0, r1, lsl r3
     50c:	58230200 	stmdapl	r3!, {r9}
     510:	0000370a 	andeq	r3, r0, sl, lsl #14
     514:	01d90600 	bicseq	r0, r9, r0, lsl #12
     518:	00008311 	andeq	r8, r0, r1, lsl r3
     51c:	5c230200 	sfmpl	f0, 4, [r3], #-0
     520:	0000c90a 	andeq	ip, r0, sl, lsl #18
     524:	01da0600 	bicseq	r0, sl, r0, lsl #12
     528:	00008311 	andeq	r8, r0, r1, lsl r3
     52c:	60230200 	eorvs	r0, r3, r0, lsl #4
     530:	00014a0a 	andeq	r4, r1, sl, lsl #20
     534:	01db0600 	bicseq	r0, fp, r0, lsl #12
     538:	00008311 	andeq	r8, r0, r1, lsl r3
     53c:	64230200 	strtvs	r0, [r3], #-512	; 0xfffffe00
     540:	0001d00a 	andeq	sp, r1, sl
     544:	01dc0600 	bicseq	r0, ip, r0, lsl #12
     548:	00008311 	andeq	r8, r0, r1, lsl r3
     54c:	68230200 	stmdavs	r3!, {r9}
     550:	00022d0a 	andeq	r2, r2, sl, lsl #26
     554:	01dd0600 	bicseq	r0, sp, r0, lsl #12
     558:	00008311 	andeq	r8, r0, r1, lsl r3
     55c:	6c230200 	sfmvs	f0, 4, [r3], #-0
     560:	0002a50a 	andeq	sl, r2, sl, lsl #10
     564:	01de0600 	bicseq	r0, lr, r0, lsl #12
     568:	00008311 	andeq	r8, r0, r1, lsl r3
     56c:	70230200 	eorvc	r0, r3, r0, lsl #4
     570:	0003100a 	andeq	r1, r3, sl
     574:	01df0600 	bicseq	r0, pc, r0, lsl #12
     578:	00008311 	andeq	r8, r0, r1, lsl r3
     57c:	74230200 	strtvc	r0, [r3], #-512	; 0xfffffe00
     580:	0001ac0a 	andeq	sl, r1, sl, lsl #24
     584:	01e00600 	mvneq	r0, r0, lsl #12
     588:	00008311 	andeq	r8, r0, r1, lsl r3
     58c:	78230200 	stmdavc	r3!, {r9}
     590:	0001fc0a 	andeq	pc, r1, sl, lsl #24
     594:	01e10600 	mvneq	r0, r0, lsl #12
     598:	00008311 	andeq	r8, r0, r1, lsl r3
     59c:	7c230200 	sfmvc	f0, 4, [r3], #-0
     5a0:	00028a0a 	andeq	r8, r2, sl, lsl #20
     5a4:	01e20600 	mvneq	r0, r0, lsl #12
     5a8:	00008311 	andeq	r8, r0, r1, lsl r3
     5ac:	80230300 	eorhi	r0, r3, r0, lsl #6
     5b0:	02f30a01 	rscseq	r0, r3, #4096	; 0x1000
     5b4:	e3060000 	movw	r0, #24576	; 0x6000
     5b8:	00831101 	addeq	r1, r3, r1, lsl #2
     5bc:	23030000 	movwcs	r0, #12288	; 0x3000
     5c0:	390a0184 	stmdbcc	sl, {r2, r7, r8}
     5c4:	06000003 	streq	r0, [r0], -r3
     5c8:	831101e4 	tsthi	r1, #228, 2	; 0x39
     5cc:	03000000 	movweq	r0, #0
     5d0:	0a018823 	beq	62664 <_binary_src_fatexample_img_size+0x61264>
     5d4:	00000170 	andeq	r0, r0, r0, ror r1
     5d8:	1101e506 	tstne	r1, r6, lsl #10
     5dc:	00000083 	andeq	r0, r0, r3, lsl #1
     5e0:	018c2303 	orreq	r2, ip, r3, lsl #6
     5e4:	0000e10a 	andeq	lr, r0, sl, lsl #2
     5e8:	01e60600 	mvneq	r0, r0, lsl #12
     5ec:	00008311 	andeq	r8, r0, r1, lsl r3
     5f0:	90230300 	eorls	r0, r3, r0, lsl #6
     5f4:	01500a01 	cmpeq	r0, r1, lsl #20
     5f8:	e7060000 	str	r0, [r6, -r0]
     5fc:	00831101 	addeq	r1, r3, r1, lsl #2
     600:	23030000 	movwcs	r0, #12288	; 0x3000
     604:	d60a0194 			; <UNDEFINED> instruction: 0xd60a0194
     608:	06000001 	streq	r0, [r0], -r1
     60c:	831101e8 	tsthi	r1, #232, 2	; 0x3a
     610:	03000000 	movweq	r0, #0
     614:	0a019823 	beq	666a8 <_binary_src_fatexample_img_size+0x652a8>
     618:	00000233 	andeq	r0, r0, r3, lsr r2
     61c:	1101e906 	tstne	r1, r6, lsl #18
     620:	00000083 	andeq	r0, r0, r3, lsl #1
     624:	019c2303 	orrseq	r2, ip, r3, lsl #6
     628:	0001080a 	andeq	r0, r1, sl, lsl #16
     62c:	01ea0600 	mvneq	r0, r0, lsl #12
     630:	00008311 	andeq	r8, r0, r1, lsl r3
     634:	a0230300 	eorge	r0, r3, r0, lsl #6
     638:	01770a01 	cmneq	r7, r1, lsl #20
     63c:	eb060000 	bl	180644 <_binary_src_fatexample_img_size+0x17f244>
     640:	00831101 	addeq	r1, r3, r1, lsl #2
     644:	23030000 	movwcs	r0, #12288	; 0x3000
     648:	e90a01a4 	stmdb	sl, {r2, r5, r7, r8}
     64c:	06000001 	streq	r0, [r0], -r1
     650:	831101ec 	tsthi	r1, #236, 2	; 0x3b
     654:	03000000 	movweq	r0, #0
     658:	0a01a823 	beq	6a6ec <_binary_src_fatexample_img_size+0x692ec>
     65c:	0000024f 	andeq	r0, r0, pc, asr #4
     660:	1101ed06 	tstne	r1, r6, lsl #26
     664:	00000083 	andeq	r0, r0, r3, lsl #1
     668:	01ac2303 			; <UNDEFINED> instruction: 0x01ac2303
     66c:	0002b90a 	andeq	fp, r2, sl, lsl #18
     670:	01ee0600 	mvneq	r0, r0, lsl #12
     674:	00008311 	andeq	r8, r0, r1, lsl r3
     678:	b0230300 	eorlt	r0, r3, r0, lsl #6
     67c:	03250a01 			; <UNDEFINED> instruction: 0x03250a01
     680:	ef060000 	svc	0x00060000
     684:	00831101 	addeq	r1, r3, r1, lsl #2
     688:	23030000 	movwcs	r0, #12288	; 0x3000
     68c:	220a01b4 	andcs	r0, sl, #180, 2	; 0x2d
     690:	06000000 	streq	r0, [r0], -r0
     694:	831101f0 	tsthi	r1, #240, 2	; 0x3c
     698:	03000000 	movweq	r0, #0
     69c:	0a01b823 	beq	6e730 <_binary_src_fatexample_img_size+0x6d330>
     6a0:	000000ac 	andeq	r0, r0, ip, lsr #1
     6a4:	1101f106 	tstne	r1, r6, lsl #2	; <UNPREDICTABLE>
     6a8:	00000083 	andeq	r0, r0, r3, lsl #1
     6ac:	01bc2303 			; <UNDEFINED> instruction: 0x01bc2303
     6b0:	0001250a 	andeq	r2, r1, sl, lsl #10
     6b4:	01f20600 	mvnseq	r0, r0, lsl #12
     6b8:	00008311 	andeq	r8, r0, r1, lsl r3
     6bc:	c0230300 	eorgt	r0, r3, r0, lsl #6
     6c0:	01b30a01 			; <UNDEFINED> instruction: 0x01b30a01
     6c4:	f3060000 	vhadd.u8	d0, d6, d0
     6c8:	00831101 	addeq	r1, r3, r1, lsl #2
     6cc:	23030000 	movwcs	r0, #12288	; 0x3000
     6d0:	300a01c4 	andcc	r0, sl, r4, asr #3
     6d4:	06000000 	streq	r0, [r0], -r0
     6d8:	831101f4 	tsthi	r1, #244, 2	; 0x3d
     6dc:	03000000 	movweq	r0, #0
     6e0:	0a01c823 	beq	72774 <_binary_src_fatexample_img_size+0x71374>
     6e4:	000000b9 	strheq	r0, [r0], -r9
     6e8:	1101f506 	tstne	r1, r6, lsl #10	; <UNPREDICTABLE>
     6ec:	00000083 	andeq	r0, r0, r3, lsl #1
     6f0:	01cc2303 	biceq	r2, ip, r3, lsl #6
     6f4:	00670d00 	rsbeq	r0, r7, r0, lsl #26
     6f8:	f6060000 			; <UNDEFINED> instruction: 0xf6060000
     6fc:	03990301 	orrseq	r0, r9, #67108864	; 0x4000000
     700:	010e0000 	mrseq	r0, (UNDEF: 14)
     704:	00000340 	andeq	r0, r0, r0, asr #6
     708:	01050e02 	tsteq	r5, r2, lsl #28
     70c:	00000096 	muleq	r0, r6, r0
     710:	08000df4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, sl, fp}
     714:	08000e78 	stmdaeq	r0, {r3, r4, r5, r6, r9, sl, fp}
     718:	00000000 	andeq	r0, r0, r0
     71c:	0007f401 	andeq	pc, r7, r1, lsl #8
     720:	0e060f00 	cdpeq	15, 0, cr0, cr6, cr0, {0}
     724:	0e1c0800 	cdpeq	8, 1, cr0, cr12, cr0, {0}
     728:	07430800 	strbeq	r0, [r3, -r0, lsl #16]
     72c:	2c100000 	ldccs	0, cr0, [r0], {-0}
     730:	02000001 	andeq	r0, r0, #1
     734:	00770311 	rsbseq	r0, r7, r1, lsl r3
     738:	00280000 	eoreq	r0, r8, r0
     73c:	00200000 	eoreq	r0, r0, r0
     740:	0f000000 	svceq	0x00000000
     744:	08000e1c 	stmdaeq	r0, {r2, r3, r4, r9, sl, fp}
     748:	08000e30 	stmdaeq	r0, {r4, r5, r9, sl, fp}
     74c:	00000765 	andeq	r0, r0, r5, ror #14
     750:	00012c10 	andeq	r2, r1, r0, lsl ip
     754:	16110200 	ldrne	r0, [r1], -r0, lsl #4
     758:	00000077 	andeq	r0, r0, r7, ror r0
     75c:	0000006c 	andeq	r0, r0, ip, rrx
     760:	00000064 	andeq	r0, r0, r4, rrx
     764:	0e300f00 	cdpeq	15, 3, cr0, cr0, cr0, {0}
     768:	0e420800 	cdpeq	8, 4, cr0, cr2, cr0, {0}
     76c:	07870800 	streq	r0, [r7, r0, lsl #16]
     770:	2c100000 	ldccs	0, cr0, [r0], {-0}
     774:	02000001 	andeq	r0, r0, #1
     778:	00770312 	rsbseq	r0, r7, r2, lsl r3
     77c:	00ae0000 	adceq	r0, lr, r0
     780:	00a80000 	adceq	r0, r8, r0
     784:	0f000000 	svceq	0x00000000
     788:	08000e42 	stmdaeq	r0, {r1, r6, r9, sl, fp}
     78c:	08000e52 	stmdaeq	r0, {r1, r4, r6, r9, sl, fp}
     790:	000007a9 	andeq	r0, r0, r9, lsr #15
     794:	00012c10 	andeq	r2, r1, r0, lsl ip
     798:	16120200 	ldrne	r0, [r2], -r0, lsl #4
     79c:	00000077 	andeq	r0, r0, r7, ror r0
     7a0:	000000e6 	andeq	r0, r0, r6, ror #1
     7a4:	000000e0 	andeq	r0, r0, r0, ror #1
     7a8:	09051100 	stmdbeq	r5, {r8, ip}
     7ac:	0e560000 	cdpeq	0, 5, cr0, cr6, cr0, {0}
     7b0:	56010800 	strpl	r0, [r1], -r0, lsl #16
     7b4:	5808000e 	stmdapl	r8, {r1, r2, r3}
     7b8:	0208000e 	andeq	r0, r8, #14
     7bc:	fc120315 	ldc2	3, cr0, [r2], {21}
     7c0:	8308000d 	movwhi	r0, #32781	; 0x800d
     7c4:	d1000008 	tstle	r0, r8
     7c8:	13000007 	movwne	r0, #7
     7cc:	31015001 	tstcc	r1, r1
     7d0:	0e561400 	cdpeq	4, 5, cr1, cr6, cr0, {0}
     7d4:	090f0800 	stmdbeq	pc, {fp}	; <UNPREDICTABLE>
     7d8:	5e140000 	cdppl	0, 1, cr0, cr4, cr0, {0}
     7dc:	1d08000e 	stcne	0, cr0, [r8, #-56]	; 0xffffffc8
     7e0:	15000009 	strne	r0, [r0, #-9]
     7e4:	08000e64 	stmdaeq	r0, {r2, r5, r6, r9, sl, fp}
     7e8:	000007f4 	strdeq	r0, [r0], -r4
     7ec:	02500113 	subseq	r0, r0, #-1073741820	; 0xc0000004
     7f0:	00000074 	andeq	r0, r0, r4, ror r0
     7f4:	01910116 	orrseq	r0, r1, r6, lsl r1
     7f8:	0a020000 	beq	80800 <_binary_src_fatexample_img_size+0x7f400>
     7fc:	03580106 	cmpeq	r8, #-2147483647	; 0x80000001
     800:	03640800 	cmneq	r4, #0, 16
     804:	7d020800 	stcvc	8, cr0, [r2, #-0]
     808:	08230100 	stmdaeq	r3!, {r8}
     80c:	0b170000 	bleq	5c0814 <_binary_src_fatexample_img_size+0x5bf414>
     810:	02000002 	andeq	r0, r0, #2
     814:	0077150a 	rsbseq	r1, r7, sl, lsl #10
     818:	011b0000 	tsteq	fp, r0
     81c:	01150000 	tsteq	r5, r0
     820:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
     824:	00024401 	andeq	r4, r2, r1, lsl #8
     828:	1c080200 	sfmne	f0, 4, [r8], {-0}
     82c:	00035601 	andeq	r5, r3, r1, lsl #12
     830:	00035808 	andeq	r5, r3, r8, lsl #16
     834:	007d0208 	rsbseq	r0, sp, r8, lsl #4
     838:	27011901 	strcs	r1, [r1, -r1, lsl #18]
     83c:	02000008 	andeq	r0, r0, #8
     840:	1a011c07 	bne	47864 <_binary_src_fatexample_img_size+0x46464>
     844:	0002fa01 	andeq	pc, r2, r1, lsl #20
     848:	06a00100 	strteq	r0, [r0], r0, lsl #2
     84c:	0800030c 	stmdaeq	r0, {r2, r3, r8, r9}
     850:	08000354 	stmdaeq	r0, {r2, r4, r6, r8, r9}
     854:	01007d02 	tsteq	r0, r2, lsl #26
     858:	00000883 	andeq	r0, r0, r3, lsl #17
     85c:	0100691b 	tsteq	r0, fp, lsl r9
     860:	00640ca1 	rsbeq	r0, r4, r1, lsr #25
     864:	014e0000 	mrseq	r0, (UNDEF: 78)
     868:	01460000 	mrseq	r0, (UNDEF: 70)
     86c:	741b0000 	ldrvc	r0, [fp], #-0
     870:	0100706d 	tsteq	r0, sp, rrx
     874:	00770ca2 	rsbseq	r0, r7, r2, lsr #25
     878:	01960000 	orrseq	r0, r6, r0
     87c:	01920000 	orrseq	r0, r2, r0
     880:	1c000000 	stcne	0, cr0, [r0], {-0}
     884:	0000a301 	andeq	sl, r0, r1, lsl #6
     888:	08480100 	stmdaeq	r8, {r8}^
     88c:	00003001 	andeq	r3, r0, r1
     890:	0001e800 	andeq	lr, r1, r0, lsl #16
     894:	00030c08 	andeq	r0, r3, r8, lsl #24
     898:	007d0208 	rsbseq	r0, sp, r8, lsl #4
     89c:	0008dc01 	andeq	sp, r8, r1, lsl #24
     8a0:	01e21700 	mvneq	r1, r0, lsl #14
     8a4:	48010000 	stmdami	r1, {}	; <UNPREDICTABLE>
     8a8:	00003018 	andeq	r3, r0, r8, lsl r0
     8ac:	0001bd00 	andeq	fp, r1, r0, lsl #26
     8b0:	0001b500 	andeq	fp, r1, r0, lsl #10
     8b4:	00691b00 	rsbeq	r1, r9, r0, lsl #22
     8b8:	640c4901 	strvs	r4, [ip], #-2305	; 0xfffff6ff
     8bc:	1b000000 	blne	8c4 <_Min_Stack_Size+0x4c4>
     8c0:	f7000002 			; <UNDEFINED> instruction: 0xf7000002
     8c4:	1b000001 	blne	8d0 <_Min_Stack_Size+0x4d0>
     8c8:	00706d74 	rsbseq	r6, r0, r4, ror sp
     8cc:	770c4a01 	strvc	r4, [ip, -r1, lsl #20]
     8d0:	5a000000 	bpl	8d8 <_Min_Stack_Size+0x4d8>
     8d4:	36000003 	strcc	r0, [r0], -r3
     8d8:	00000003 	andeq	r0, r0, r3
     8dc:	011e0116 	tsteq	lr, r6, lsl r1
     8e0:	18010000 	stmdane	r1, {}	; <UNPREDICTABLE>
     8e4:	01500106 	cmpeq	r0, r6, lsl #2
     8e8:	01e80800 	mvneq	r0, r0, lsl #16
     8ec:	7d020800 	stcvc	8, cr0, [r2, #-0]
     8f0:	09050100 	stmdbeq	r5, {r8}
     8f4:	321d0000 	andscc	r0, sp, #0
     8f8:	01000003 	tsteq	r0, r3
     8fc:	00511518 	subseq	r1, r1, r8, lsl r5
     900:	50010000 	andpl	r0, r1, r0
     904:	02191e00 	andseq	r1, r9, #0, 28
     908:	b4030000 	strlt	r0, [r3], #-0
     90c:	1f031604 	svcne	0x00031604
     910:	00730101 	rsbseq	r0, r3, r1, lsl #2
     914:	00730000 	rsbseq	r0, r3, r0
     918:	24070000 	strcs	r0, [r7], #-0
     91c:	01011f06 	tsteq	r1, r6, lsl #30
     920:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     924:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     928:	00063f07 	andeq	r3, r6, r7, lsl #30
     92c:	00000eab 	andeq	r0, r0, fp, lsr #29
     930:	02170002 	andseq	r0, r7, #2
     934:	01040000 	mrseq	r0, (UNDEF: 4)
     938:	00000345 	andeq	r0, r0, r5, asr #6
     93c:	00074f0c 	andeq	r4, r7, ip, lsl #30
     940:	0002c000 	andeq	ip, r2, r0
     944:	00036400 	andeq	r6, r3, r0, lsl #8
     948:	00081808 	andeq	r1, r8, r8, lsl #16
     94c:	00043308 	andeq	r3, r4, r8, lsl #6
     950:	06010200 	streq	r0, [r1], -r0, lsl #4
     954:	00000258 	andeq	r0, r0, r8, asr r2
     958:	71050202 	tstvc	r5, r2, lsl #4
     95c:	02000002 	andeq	r0, r0, #2
     960:	00820504 	addeq	r0, r2, r4, lsl #10
     964:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
     968:	00007d05 	andeq	r7, r0, r5, lsl #26
     96c:	03160300 	tsteq	r6, #0, 6
     970:	2e030000 	cdpcs	0, 0, cr0, cr3, cr0, {0}
     974:	00005718 	andeq	r5, r0, r8, lsl r7
     978:	00410400 	subeq	r0, r1, r0, lsl #8
     97c:	41050000 	mrsmi	r0, (UNDEF: 5)
     980:	02000000 	andeq	r0, r0, #0
     984:	02560801 	subseq	r0, r6, #65536	; 0x10000
     988:	ff030000 			; <UNDEFINED> instruction: 0xff030000
     98c:	03000000 	movweq	r0, #0
     990:	006f1931 	rsbeq	r1, pc, r1, lsr r9	; <UNPREDICTABLE>
     994:	5e040000 	cdppl	0, 0, cr0, cr4, cr0, {0}
     998:	02000000 	andeq	r0, r0, #0
     99c:	017e0702 	cmneq	lr, r2, lsl #14
     9a0:	ab030000 	blge	c09a8 <_binary_src_fatexample_img_size+0xbf5a8>
     9a4:	03000002 	movweq	r0, #2
     9a8:	00871934 	addeq	r1, r7, r4, lsr r9
     9ac:	76040000 	strvc	r0, [r4], -r0
     9b0:	02000000 	andeq	r0, r0, #0
     9b4:	004d0704 	subeq	r0, sp, r4, lsl #14
     9b8:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
     9bc:	00004807 	andeq	r4, r0, r7, lsl #16
     9c0:	05040600 	streq	r0, [r4, #-1536]	; 0xfffffa00
     9c4:	00746e69 	rsbseq	r6, r4, r9, ror #28
     9c8:	00009504 	andeq	r9, r0, r4, lsl #10
     9cc:	07040200 	streq	r0, [r4, -r0, lsl #4]
     9d0:	00000052 	andeq	r0, r0, r2, asr r0
     9d4:	00070403 	andeq	r0, r7, r3, lsl #8
     9d8:	0f1a0400 	svceq	0x001a0400
     9dc:	000000b4 	strheq	r0, [r0], -r4
     9e0:	00ba0407 	adcseq	r0, sl, r7, lsl #8
     9e4:	01080000 	mrseq	r0, (UNDEF: 8)
     9e8:	000000c6 	andeq	r0, r0, r6, asr #1
     9ec:	00004109 	andeq	r4, r0, r9, lsl #2
     9f0:	080a0000 	stmdaeq	sl, {}	; <UNPREDICTABLE>
     9f4:	1b091b04 	blne	24760c <_binary_src_fatexample_img_size+0x24620c>
     9f8:	0b000001 	bleq	a04 <_Min_Stack_Size+0x604>
     9fc:	00000456 	andeq	r0, r0, r6, asr r4
     a00:	410b1c04 	tstmi	fp, r4, lsl #24
     a04:	02000000 	andeq	r0, r0, #0
     a08:	5e0b0023 	cdppl	0, 0, cr0, cr11, cr3, {1}
     a0c:	04000008 	streq	r0, [r0], #-8
     a10:	00410b1d 	subeq	r0, r1, sp, lsl fp
     a14:	23020000 	movwcs	r0, #8192	; 0x2000
     a18:	04d20b01 	ldrbeq	r0, [r2], #2817	; 0xb01
     a1c:	1e040000 	cdpne	0, 0, cr0, cr4, cr0, {0}
     a20:	00005e0c 	andeq	r5, r0, ip, lsl #28
     a24:	02230200 	eoreq	r0, r3, #0, 4
     a28:	0003ea0b 	andeq	lr, r3, fp, lsl #20
     a2c:	0c1f0400 	cfldrseq	mvf0, [pc], {-0}
     a30:	0000005e 	andeq	r0, r0, lr, asr r0
     a34:	0b042302 	bleq	109644 <_binary_src_fatexample_img_size+0x108244>
     a38:	00000841 	andeq	r0, r0, r1, asr #16
     a3c:	5e0c2004 	cdppl	0, 0, cr2, cr12, cr4, {0}
     a40:	02000000 	andeq	r0, r0, #0
     a44:	03000623 	movweq	r0, #1571	; 0x623
     a48:	000008d6 	ldrdeq	r0, [r0], -r6
     a4c:	c6022104 	strgt	r2, [r2], -r4, lsl #2
     a50:	0c000000 	stceq	0, cr0, [r0], {-0}
     a54:	00250105 	eoreq	r0, r5, r5, lsl #2
     a58:	58050000 	stmdapl	r5, {}	; <UNPREDICTABLE>
     a5c:	00029e01 	andeq	r9, r2, r1, lsl #28
     a60:	082d0d00 	stmdaeq	sp!, {r8, sl, fp}
     a64:	0d720000 	ldcleq	0, cr0, [r2, #-0]
     a68:	000004d9 	ldrdeq	r0, [r0], -r9
     a6c:	06e20d74 			; <UNDEFINED> instruction: 0x06e20d74
     a70:	0d750000 	ldcleq	0, cr0, [r5, #-0]
     a74:	0000090e 	andeq	r0, r0, lr, lsl #18
     a78:	04300d76 	ldrteq	r0, [r0], #-3446	; 0xfffff28a
     a7c:	0d7b0000 	ldcleq	0, cr0, [fp, #-0]
     a80:	000008fc 	strdeq	r0, [r0], -ip
     a84:	04b60d7c 	ldrteq	r0, [r6], #3452	; 0xd7c
     a88:	0d7e0000 	ldcleq	0, cr0, [lr, #-0]
     a8c:	000008a2 	andeq	r0, r0, r2, lsr #17
     a90:	06be0e7f 			; <UNDEFINED> instruction: 0x06be0e7f
     a94:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
     a98:	000006fb 	strdeq	r0, [r0], -fp
     a9c:	04fe0e01 	ldrbteq	r0, [lr], #3585	; 0xe01
     aa0:	0e020000 	cdpeq	0, 0, cr0, cr2, cr0, {0}
     aa4:	000005df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
     aa8:	04710e03 	ldrbteq	r0, [r1], #-3587	; 0xfffff1fd
     aac:	0e040000 	cdpeq	0, 0, cr0, cr4, cr0, {0}
     ab0:	000004c9 	andeq	r0, r0, r9, asr #9
     ab4:	04860e05 	streq	r0, [r6], #3589	; 0xe05
     ab8:	0e060000 	cdpeq	0, 0, cr0, cr6, cr0, {0}
     abc:	00000853 	andeq	r0, r0, r3, asr r8
     ac0:	06090e07 	streq	r0, [r9], -r7, lsl #28
     ac4:	0e080000 	cdpeq	0, 0, cr0, cr8, cr0, {0}
     ac8:	00000990 	muleq	r0, r0, r9
     acc:	06f00e09 	ldrbteq	r0, [r0], r9, lsl #28
     ad0:	0e0a0000 	cdpeq	0, 0, cr0, cr10, cr0, {0}
     ad4:	00000685 	andeq	r0, r0, r5, lsl #13
     ad8:	04430e0b 	strbeq	r0, [r3], #-3595	; 0xfffff1f5
     adc:	0e0c0000 	cdpeq	0, 0, cr0, cr12, cr0, {0}
     ae0:	0000073c 	andeq	r0, r0, ip, lsr r7
     ae4:	05450e0d 	strbeq	r0, [r5, #-3597]	; 0xfffff1f3
     ae8:	0e0e0000 	cdpeq	0, 0, cr0, cr14, cr0, {0}
     aec:	00000965 	andeq	r0, r0, r5, ror #18
     af0:	06550e0f 	ldrbeq	r0, [r5], -pc, lsl #28
     af4:	0e100000 	cdpeq	0, 1, cr0, cr0, cr0, {0}
     af8:	00000410 	andeq	r0, r0, r0, lsl r4
     afc:	06140e11 			; <UNDEFINED> instruction: 0x06140e11
     b00:	0e120000 	cdpeq	0, 1, cr0, cr2, cr0, {0}
     b04:	000008f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     b08:	09f10e13 	ldmibeq	r1!, {r0, r1, r4, r9, sl, fp}^
     b0c:	0e140000 	cdpeq	0, 1, cr0, cr4, cr0, {0}
     b10:	0000097f 	andeq	r0, r0, pc, ror r9
     b14:	05670e15 	strbeq	r0, [r7, #-3605]!	; 0xfffff1eb
     b18:	0e160000 	cdpeq	0, 1, cr0, cr6, cr0, {0}
     b1c:	00000935 	andeq	r0, r0, r5, lsr r9
     b20:	04060e17 	streq	r0, [r6], #-3607	; 0xfffff1e9
     b24:	0e190000 	cdpeq	0, 1, cr0, cr9, cr0, {0}
     b28:	000006b3 			; <UNDEFINED> instruction: 0x000006b3
     b2c:	03df0e1a 	bicseq	r0, pc, #416	; 0x1a0
     b30:	0e1b0000 	cdpeq	0, 1, cr0, cr11, cr0, {0}
     b34:	000008b5 			; <UNDEFINED> instruction: 0x000008b5
     b38:	067b0e1c 			; <UNDEFINED> instruction: 0x067b0e1c
     b3c:	0e1d0000 	cdpeq	0, 1, cr0, cr13, cr0, {0}
     b40:	00000439 	andeq	r0, r0, r9, lsr r4
     b44:	075d0e1e 	smmlaeq	sp, lr, lr, r0
     b48:	0e1f0000 	cdpeq	0, 1, cr0, cr15, cr0, {0}
     b4c:	00000889 	andeq	r0, r0, r9, lsl #17
     b50:	061e0e20 	ldreq	r0, [lr], -r0, lsr #28
     b54:	0e210000 	cdpeq	0, 2, cr0, cr1, cr0, {0}
     b58:	00000423 	andeq	r0, r0, r3, lsr #8
     b5c:	05310e22 	ldreq	r0, [r1, #-3618]!	; 0xfffff1de
     b60:	0e230000 	cdpeq	0, 2, cr0, cr3, cr0, {0}
     b64:	0000094c 	andeq	r0, r0, ip, asr #18
     b68:	08150e24 	ldmdaeq	r5, {r2, r5, r9, sl, fp}
     b6c:	0e250000 	cdpeq	0, 2, cr0, cr5, cr0, {0}
     b70:	000005c0 	andeq	r0, r0, r0, asr #11
     b74:	09db0e26 	ldmibeq	fp, {r1, r2, r5, r9, sl, fp}^
     b78:	0e270000 	cdpeq	0, 2, cr0, cr7, cr0, {0}
     b7c:	00000491 	muleq	r0, r1, r4
     b80:	078e0e28 	streq	r0, [lr, r8, lsr #28]
     b84:	0e290000 	cdpeq	0, 2, cr0, cr9, cr0, {0}
     b88:	000007f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     b8c:	053b0e2a 	ldreq	r0, [fp, #-3626]!	; 0xfffff1d6
     b90:	0e2b0000 	cdpeq	0, 2, cr0, cr11, cr0, {0}
     b94:	0000095b 	andeq	r0, r0, fp, asr r9
     b98:	07320e2c 	ldreq	r0, [r2, -ip, lsr #28]!
     b9c:	0e2e0000 	cdpeq	0, 2, cr0, cr14, cr0, {0}
     ba0:	00000630 	andeq	r0, r0, r0, lsr r6
     ba4:	06680e2f 	strbteq	r0, [r8], -pc, lsr #28
     ba8:	0e320000 	cdpeq	0, 3, cr0, cr2, cr0, {0}
     bac:	000009c8 	andeq	r0, r0, r8, asr #19
     bb0:	071f0e33 			; <UNDEFINED> instruction: 0x071f0e33
     bb4:	0e340000 	cdpeq	0, 3, cr0, cr4, cr0, {0}
     bb8:	00000515 	andeq	r0, r0, r5, lsl r5
     bbc:	08760e35 	ldmdaeq	r6!, {r0, r2, r4, r5, r9, sl, fp}^
     bc0:	0e360000 	cdpeq	0, 3, cr0, cr6, cr0, {0}
     bc4:	00000647 	andeq	r0, r0, r7, asr #12
     bc8:	ad030038 	stcge	0, cr0, [r3, #-224]	; 0xffffff20
     bcc:	05000005 	streq	r0, [r0, #-5]
     bd0:	01270398 			; <UNDEFINED> instruction: 0x01270398
     bd4:	040f0000 	streq	r0, [pc], #-0	; bdc <_Min_Stack_Size+0x7dc>
     bd8:	0984020e 	stmibeq	r4, {r1, r2, r3, r9}
     bdc:	00000382 	andeq	r0, r0, r2, lsl #7
     be0:	0005100b 	andeq	r1, r5, fp
     be4:	11860200 	orrne	r0, r6, r0, lsl #4
     be8:	00000392 	muleq	r0, r2, r3
     bec:	0b002302 	bleq	97fc <_binary_src_fatexample_img_size+0x83fc>
     bf0:	000007aa 	andeq	r0, r0, sl, lsr #15
     bf4:	97118702 	ldrls	r8, [r1, -r2, lsl #14]
     bf8:	02000003 	andeq	r0, r0, #3
     bfc:	470b2023 	strmi	r2, [fp, -r3, lsr #32]
     c00:	02000009 	andeq	r0, r0, #9
     c04:	03921188 	orrseq	r1, r2, #136, 2	; 0x22
     c08:	23030000 	movwcs	r0, #12288	; 0x3000
     c0c:	280b0180 	stmdacs	fp, {r7, r8}
     c10:	02000005 	andeq	r0, r0, #5
     c14:	03971189 	orrseq	r1, r7, #1073741858	; 0x40000022
     c18:	23030000 	movwcs	r0, #12288	; 0x3000
     c1c:	ae0b01a0 	adfge<illegal precision>p	f0, f3, f0
     c20:	02000009 	andeq	r0, r0, #9
     c24:	0392118a 	orrseq	r1, r2, #-2147483614	; 0x80000022
     c28:	23030000 	movwcs	r0, #12288	; 0x3000
     c2c:	be0b0280 	cdplt	2, 0, cr0, cr11, cr0, {4}
     c30:	02000007 	andeq	r0, r0, #7
     c34:	0397118b 	orrseq	r1, r7, #-1073741790	; 0xc0000022
     c38:	23030000 	movwcs	r0, #12288	; 0x3000
     c3c:	1a0b02a0 	bne	2c16c4 <_binary_src_fatexample_img_size+0x2c02c4>
     c40:	02000007 	andeq	r0, r0, #7
     c44:	0392118c 	orrseq	r1, r2, #140, 2	; 0x23
     c48:	23030000 	movwcs	r0, #12288	; 0x3000
     c4c:	c80b0380 	stmdagt	fp, {r7, r8, r9}
     c50:	02000007 	andeq	r0, r0, #7
     c54:	0397118d 	orrseq	r1, r7, #1073741859	; 0x40000023
     c58:	23030000 	movwcs	r0, #12288	; 0x3000
     c5c:	560b03a0 	strpl	r0, [fp], -r0, lsr #7
     c60:	02000009 	andeq	r0, r0, #9
     c64:	0392118e 	orrseq	r1, r2, #-2147483613	; 0x80000023
     c68:	23030000 	movwcs	r0, #12288	; 0x3000
     c6c:	d20b0480 	andle	r0, fp, #128, 8	; 0x80000000
     c70:	02000007 	andeq	r0, r0, #7
     c74:	03a7118f 			; <UNDEFINED> instruction: 0x03a7118f
     c78:	23030000 	movwcs	r0, #12288	; 0x3000
     c7c:	491004a0 	ldmdbmi	r0, {r5, r7, sl}
     c80:	90020050 	andls	r0, r2, r0, asr r0
     c84:	0003c711 	andeq	ip, r3, r1, lsl r7
     c88:	80230300 	eorhi	r0, r3, r0, lsl #6
     c8c:	07dc0b06 	ldrbeq	r0, [ip, r6, lsl #22]
     c90:	91020000 	mrsls	r0, (UNDEF: 2)
     c94:	0003cc11 	andeq	ip, r3, r1, lsl ip
     c98:	f0230300 			; <UNDEFINED> instruction: 0xf0230300
     c9c:	07890b07 	streq	r0, [r9, r7, lsl #22]
     ca0:	92020000 	andls	r0, r2, #0
     ca4:	00008211 	andeq	r8, r0, r1, lsl r2
     ca8:	80230300 	eorhi	r0, r3, r0, lsl #6
     cac:	8211001c 	andshi	r0, r1, #28
     cb0:	92000000 	andls	r0, r0, #0
     cb4:	12000003 	andne	r0, r0, #3
     cb8:	000000a1 	andeq	r0, r0, r1, lsr #1
     cbc:	82040007 	andhi	r0, r4, #7
     cc0:	11000003 	tstne	r0, r3
     cc4:	00000076 	andeq	r0, r0, r6, ror r0
     cc8:	000003a7 	andeq	r0, r0, r7, lsr #7
     ccc:	0000a112 	andeq	sl, r0, r2, lsl r1
     cd0:	11001700 	tstne	r0, r0, lsl #14
     cd4:	00000076 	andeq	r0, r0, r6, ror r0
     cd8:	000003b7 			; <UNDEFINED> instruction: 0x000003b7
     cdc:	0000a112 	andeq	sl, r0, r2, lsl r1
     ce0:	11003700 	tstne	r0, r0, lsl #14
     ce4:	0000004d 	andeq	r0, r0, sp, asr #32
     ce8:	000003c7 	andeq	r0, r0, r7, asr #7
     cec:	0000a112 	andeq	sl, r0, r2, lsl r1
     cf0:	0400ef00 	streq	lr, [r0], #-3840	; 0xfffff100
     cf4:	000003b7 			; <UNDEFINED> instruction: 0x000003b7
     cf8:	00007611 	andeq	r7, r0, r1, lsl r6
     cfc:	0003dd00 	andeq	sp, r3, r0, lsl #26
     d00:	00a11300 	adceq	r1, r1, r0, lsl #6
     d04:	02830000 	addeq	r0, r3, #0
     d08:	08670300 	stmdaeq	r7!, {r8, r9}^
     d0c:	93020000 	movwls	r0, #8192	; 0x2000
     d10:	0002aa04 	andeq	sl, r2, r4, lsl #20
     d14:	02641400 	rsbeq	r1, r4, #0, 8
     d18:	ce020000 	cdpgt	0, 0, cr0, cr2, cr0, {0}
     d1c:	009c1506 	addseq	r1, ip, r6, lsl #10
     d20:	01010000 	mrseq	r0, (UNDEF: 1)
     d24:	00013a15 	andeq	r3, r1, r5, lsl sl
     d28:	114c0600 	cmpne	ip, r0, lsl #12
     d2c:	00000076 	andeq	r0, r0, r6, ror r0
     d30:	18160101 	ldmdane	r6, {r0, r8}
     d34:	09016105 	stmdbeq	r1, {r0, r2, r8, sp, lr}
     d38:	00000441 	andeq	r0, r0, r1, asr #8
     d3c:	0004c217 	andeq	ip, r4, r7, lsl r2
     d40:	01630500 	cmneq	r3, r0, lsl #10
     d44:	00008211 	andeq	r8, r0, r1, lsl r2
     d48:	00230200 	eoreq	r0, r3, r0, lsl #4
     d4c:	434d5018 	movtmi	r5, #53272	; 0xd018
     d50:	01640500 	cmneq	r4, r0, lsl #10
     d54:	00008211 	andeq	r8, r0, r1, lsl r2
     d58:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     d5c:	0006a717 	andeq	sl, r6, r7, lsl r7
     d60:	01650500 	cmneq	r5, r0, lsl #10
     d64:	00045111 	andeq	r5, r4, r1, lsl r1
     d68:	08230200 	stmdaeq	r3!, {r9}
     d6c:	00821100 	addeq	r1, r2, r0, lsl #2
     d70:	04510000 	ldrbeq	r0, [r1], #-0
     d74:	a1120000 	tstge	r2, r0
     d78:	03000000 	movweq	r0, #0
     d7c:	04410400 	strbeq	r0, [r1], #-1024	; 0xfffffc00
     d80:	f1190000 			; <UNDEFINED> instruction: 0xf1190000
     d84:	05000003 	streq	r0, [r0, #-3]
     d88:	06030166 	streq	r0, [r3], -r6, ror #2
     d8c:	16000004 	strne	r0, [r0], -r4
     d90:	01930538 	orrseq	r0, r3, r8, lsr r5
     d94:	00054d09 	andeq	r4, r5, r9, lsl #26
     d98:	52431800 	subpl	r1, r3, #0, 16
     d9c:	01950500 	orrseq	r0, r5, r0, lsl #10
     da0:	00008211 	andeq	r8, r0, r1, lsl r2
     da4:	00230200 	eoreq	r0, r3, r0, lsl #4
     da8:	00030a17 	andeq	r0, r3, r7, lsl sl
     dac:	01960500 	orrseq	r0, r6, r0, lsl #10
     db0:	00008211 	andeq	r8, r0, r1, lsl r2
     db4:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     db8:	0002a017 	andeq	sl, r2, r7, lsl r0
     dbc:	01970500 	orrseq	r0, r7, r0, lsl #10
     dc0:	00008211 	andeq	r8, r0, r1, lsl r2
     dc4:	08230200 	stmdaeq	r3!, {r9}
     dc8:	52494318 	subpl	r4, r9, #24, 6	; 0x60000000
     dcc:	01980500 	orrseq	r0, r8, r0, lsl #10
     dd0:	00008211 	andeq	r8, r0, r1, lsl r2
     dd4:	0c230200 	sfmeq	f0, 4, [r3], #-0
     dd8:	00020317 	andeq	r0, r2, r7, lsl r3
     ddc:	01990500 	orrseq	r0, r9, r0, lsl #10
     de0:	00008211 	andeq	r8, r0, r1, lsl r2
     de4:	10230200 	eorne	r0, r3, r0, lsl #4
     de8:	0000c017 	andeq	ip, r0, r7, lsl r0
     dec:	019a0500 	orrseq	r0, sl, r0, lsl #10
     df0:	00008211 	andeq	r8, r0, r1, lsl r2
     df4:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     df8:	00021017 	andeq	r1, r2, r7, lsl r0
     dfc:	019b0500 	orrseq	r0, fp, r0, lsl #10
     e00:	00008211 	andeq	r8, r0, r1, lsl r2
     e04:	18230200 	stmdane	r3!, {r9}
     e08:	0003d817 	andeq	sp, r3, r7, lsl r8
     e0c:	019c0500 	orrseq	r0, ip, r0, lsl #10
     e10:	00008211 	andeq	r8, r0, r1, lsl r2
     e14:	1c230200 	sfmne	f0, 4, [r3], #-0
     e18:	00029117 	andeq	r9, r2, r7, lsl r1
     e1c:	019d0500 	orrseq	r0, sp, r0, lsl #10
     e20:	00008211 	andeq	r8, r0, r1, lsl r2
     e24:	20230200 	eorcs	r0, r3, r0, lsl #4
     e28:	0002eb17 	andeq	lr, r2, r7, lsl fp
     e2c:	019e0500 	orrseq	r0, lr, r0, lsl #10
     e30:	00008211 	andeq	r8, r0, r1, lsl r2
     e34:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
     e38:	0000d817 	andeq	sp, r0, r7, lsl r8
     e3c:	019f0500 	orrseq	r0, pc, r0, lsl #10
     e40:	00008211 	andeq	r8, r0, r1, lsl r2
     e44:	28230200 	stmdacs	r3!, {r9}
     e48:	0001ba17 	andeq	fp, r1, r7, lsl sl
     e4c:	01a00500 	lsleq	r0, r0, #10
     e50:	00008211 	andeq	r8, r0, r1, lsl r2
     e54:	2c230200 	sfmcs	f0, 4, [r3], #-0
     e58:	00019717 	andeq	r9, r1, r7, lsl r7
     e5c:	01a10500 			; <UNDEFINED> instruction: 0x01a10500
     e60:	00008211 	andeq	r8, r0, r1, lsl r2
     e64:	30230200 	eorcc	r0, r3, r0, lsl #4
     e68:	52534318 	subspl	r4, r3, #24, 6	; 0x60000000
     e6c:	01a20500 			; <UNDEFINED> instruction: 0x01a20500
     e70:	00008211 	andeq	r8, r0, r1, lsl r2
     e74:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
     e78:	01641900 	cmneq	r4, r0, lsl #18
     e7c:	a3050000 	movwge	r0, #20480	; 0x5000
     e80:	04630301 	strbteq	r0, [r3], #-769	; 0xfffffcff
     e84:	54160000 	ldrpl	r0, [r6], #-0
     e88:	09023705 	stmdbeq	r2, {r0, r2, r8, r9, sl, ip, sp}
     e8c:	00000705 	andeq	r0, r0, r5, lsl #14
     e90:	0005da17 	andeq	sp, r5, r7, lsl sl
     e94:	02390500 	eorseq	r0, r9, #0, 10
     e98:	00006a11 	andeq	r6, r0, r1, lsl sl
     e9c:	00230200 	eoreq	r0, r3, r0, lsl #4
     ea0:	0007aa17 	andeq	sl, r7, r7, lsl sl
     ea4:	023a0500 	eorseq	r0, sl, #0, 10
     ea8:	00006a11 	andeq	r6, r0, r1, lsl sl
     eac:	02230200 	eoreq	r0, r3, #0, 4
     eb0:	00062b17 	andeq	r2, r6, r7, lsl fp
     eb4:	023b0500 	eorseq	r0, fp, #0, 10
     eb8:	00006a11 	andeq	r6, r0, r1, lsl sl
     ebc:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     ec0:	0007b417 	andeq	fp, r7, r7, lsl r4
     ec4:	023c0500 	eorseq	r0, ip, #0, 10
     ec8:	00006a11 	andeq	r6, r0, r1, lsl sl
     ecc:	06230200 	strteq	r0, [r3], -r0, lsl #4
     ed0:	0006ae17 	andeq	sl, r6, r7, lsl lr
     ed4:	023d0500 	eorseq	r0, sp, #0, 10
     ed8:	00006a11 	andeq	r6, r0, r1, lsl sl
     edc:	08230200 	stmdaeq	r3!, {r9}
     ee0:	0007be17 	andeq	fp, r7, r7, lsl lr
     ee4:	023e0500 	eorseq	r0, lr, #0, 10
     ee8:	00006a11 	andeq	r6, r0, r1, lsl sl
     eec:	0a230200 	beq	8c16f4 <_binary_src_fatexample_img_size+0x8c02f4>
     ef0:	0006dd17 	andeq	sp, r6, r7, lsl sp
     ef4:	023f0500 	eorseq	r0, pc, #0, 10
     ef8:	00006a11 	andeq	r6, r0, r1, lsl sl
     efc:	0c230200 	sfmeq	f0, 4, [r3], #-0
     f00:	0007c817 	andeq	ip, r7, r7, lsl r8
     f04:	02400500 	subeq	r0, r0, #0, 10
     f08:	00006a11 	andeq	r6, r0, r1, lsl sl
     f0c:	0e230200 	cdpeq	2, 2, cr0, cr3, cr0, {0}
     f10:	00094217 	andeq	r4, r9, r7, lsl r2
     f14:	02410500 	subeq	r0, r1, #0, 10
     f18:	00006a11 	andeq	r6, r0, r1, lsl sl
     f1c:	10230200 	eorne	r0, r3, r0, lsl #4
     f20:	0007d217 	andeq	sp, r7, r7, lsl r2
     f24:	02420500 	subeq	r0, r2, #0, 10
     f28:	00006a11 	andeq	r6, r0, r1, lsl sl
     f2c:	12230200 	eorne	r0, r3, #0, 4
     f30:	0007a517 	andeq	sl, r7, r7, lsl r5
     f34:	02430500 	subeq	r0, r3, #0, 10
     f38:	00006a11 	andeq	r6, r0, r1, lsl sl
     f3c:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     f40:	0007dc17 	andeq	sp, r7, r7, lsl ip
     f44:	02440500 	subeq	r0, r4, #0, 10
     f48:	00006a11 	andeq	r6, r0, r1, lsl sl
     f4c:	16230200 	strtne	r0, [r3], -r0, lsl #4
     f50:	00084917 	andeq	r4, r8, r7, lsl r9
     f54:	02450500 	subeq	r0, r5, #0, 10
     f58:	00006a11 	andeq	r6, r0, r1, lsl sl
     f5c:	18230200 	stmdane	r3!, {r9}
     f60:	0007e617 	andeq	lr, r7, r7, lsl r6
     f64:	02460500 	subeq	r0, r6, #0, 10
     f68:	00006a11 	andeq	r6, r0, r1, lsl sl
     f6c:	1a230200 	bne	8c1774 <_binary_src_fatexample_img_size+0x8c0374>
     f70:	0008d117 	andeq	sp, r8, r7, lsl r1
     f74:	02470500 	subeq	r0, r7, #0, 10
     f78:	00006a11 	andeq	r6, r0, r1, lsl sl
     f7c:	1c230200 	sfmne	f0, 4, [r3], #-0
     f80:	00023a17 	andeq	r3, r2, r7, lsl sl
     f84:	02480500 	subeq	r0, r8, #0, 10
     f88:	00071511 	andeq	r1, r7, r1, lsl r5
     f8c:	1e230200 	cdpne	2, 2, cr0, cr3, cr0, {0}
     f90:	00087117 	andeq	r7, r8, r7, lsl r1
     f94:	02490500 	subeq	r0, r9, #0, 10
     f98:	00006a11 	andeq	r6, r0, r1, lsl sl
     f9c:	40230200 	eormi	r0, r3, r0, lsl #4
     fa0:	0009e717 	andeq	lr, r9, r7, lsl r7
     fa4:	024a0500 	subeq	r0, sl, #0, 10
     fa8:	00006a11 	andeq	r6, r0, r1, lsl sl
     fac:	42230200 	eormi	r0, r3, #0, 4
     fb0:	0004f917 	andeq	pc, r4, r7, lsl r9	; <UNPREDICTABLE>
     fb4:	024b0500 	subeq	r0, fp, #0, 10
     fb8:	00006a11 	andeq	r6, r0, r1, lsl sl
     fbc:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
     fc0:	00080117 	andeq	r0, r8, r7, lsl r1
     fc4:	024c0500 	subeq	r0, ip, #0, 10
     fc8:	00006a11 	andeq	r6, r0, r1, lsl sl
     fcc:	46230200 	strtmi	r0, [r3], -r0, lsl #4
     fd0:	524e4618 	subpl	r4, lr, #24, 12	; 0x1800000
     fd4:	024d0500 	subeq	r0, sp, #0, 10
     fd8:	00006a11 	andeq	r6, r0, r1, lsl sl
     fdc:	48230200 	stmdami	r3!, {r9}
     fe0:	00080b17 	andeq	r0, r8, r7, lsl fp
     fe4:	024e0500 	subeq	r0, lr, #0, 10
     fe8:	00006a11 	andeq	r6, r0, r1, lsl sl
     fec:	4a230200 	bmi	8c17f4 <_binary_src_fatexample_img_size+0x8c03f4>
     ff0:	00057d17 	andeq	r7, r5, r7, lsl sp
     ff4:	024f0500 	subeq	r0, pc, #0, 10
     ff8:	00006a11 	andeq	r6, r0, r1, lsl sl
     ffc:	4c230200 	sfmmi	f0, 4, [r3], #-0
    1000:	0009fd17 	andeq	pc, r9, r7, lsl sp	; <UNPREDICTABLE>
    1004:	02500500 	subseq	r0, r0, #0, 10
    1008:	00006a11 	andeq	r6, r0, r1, lsl sl
    100c:	4e230200 	cdpmi	2, 2, cr0, cr3, cr0, {0}
    1010:	00097817 	andeq	r7, r9, r7, lsl r8
    1014:	02510500 	subseq	r0, r1, #0, 10
    1018:	00006a11 	andeq	r6, r0, r1, lsl sl
    101c:	50230200 	eorpl	r0, r3, r0, lsl #4
    1020:	000a0717 	andeq	r0, sl, r7, lsl r7
    1024:	02520500 	subseq	r0, r2, #0, 10
    1028:	00006a11 	andeq	r6, r0, r1, lsl sl
    102c:	52230200 	eorpl	r0, r3, #0, 4
    1030:	006a1100 	rsbeq	r1, sl, r0, lsl #2
    1034:	07150000 	ldreq	r0, [r5, -r0]
    1038:	a1120000 	tstge	r2, r0
    103c:	10000000 	andne	r0, r0, r0
    1040:	07050400 	streq	r0, [r5, -r0, lsl #8]
    1044:	71190000 	tstvc	r9, r0
    1048:	05000005 	streq	r0, [r0, #-5]
    104c:	5a030253 	bpl	c19a0 <_binary_src_fatexample_img_size+0xc05a0>
    1050:	0a000005 	beq	106c <_Min_Stack_Size+0xc6c>
    1054:	07230104 	streq	r0, [r3, -r4, lsl #2]!
    1058:	00000767 	andeq	r0, r0, r7, ror #14
    105c:	0009b71a 	andeq	fp, r9, sl, lsl r7
    1060:	12240100 	eorne	r0, r4, #0, 2
    1064:	00000076 	andeq	r0, r0, r6, ror r0
    1068:	02160a04 	andseq	r0, r6, #4, 20	; 0x4000
    106c:	6a1a0023 	bvs	681100 <_binary_src_fatexample_img_size+0x67fd00>
    1070:	01000007 	tsteq	r0, r7
    1074:	00761225 	rsbseq	r1, r6, r5, lsr #4
    1078:	05040000 	streq	r0, [r4, #-0]
    107c:	00230211 	eoreq	r0, r3, r1, lsl r2
    1080:	00091e1a 	andeq	r1, r9, sl, lsl lr
    1084:	12260100 	eorne	r0, r6, #0, 2
    1088:	00000076 	andeq	r0, r0, r6, ror r0
    108c:	02100104 	andseq	r0, r0, #4, 2
    1090:	1b000023 	blne	1124 <_Min_Stack_Size+0xd24>
    1094:	0e210104 	sufeqs	f0, f1, f4
    1098:	00000782 	andeq	r0, r0, r2, lsl #15
    109c:	0009b31c 	andeq	fp, r9, ip, lsl r3
    10a0:	10220100 	eorne	r0, r2, r0, lsl #2
    10a4:	00000076 	andeq	r0, r0, r6, ror r0
    10a8:	0007271d 	andeq	r2, r7, sp, lsl r7
    10ac:	67040000 	strvs	r0, [r4, -r0]
    10b0:	0a000007 	beq	10d4 <_Min_Stack_Size+0xcd4>
    10b4:	091d0110 	ldmdbeq	sp, {r4, r8}
    10b8:	000007c6 	andeq	r0, r0, r6, asr #15
    10bc:	0009a20b 	andeq	sl, r9, fp, lsl #4
    10c0:	171e0100 	ldrne	r0, [lr, -r0, lsl #2]
    10c4:	00000082 	andeq	r0, r0, r2, lsl #1
    10c8:	0b002302 	bleq	9cd8 <_binary_src_fatexample_img_size+0x88d8>
    10cc:	0000070d 	andeq	r0, r0, sp, lsl #14
    10d0:	82171f01 	andshi	r1, r7, #1, 30
    10d4:	02000000 	andeq	r0, r0, #0
    10d8:	e40b0423 	str	r0, [fp], #-1059	; 0xfffffbdd
    10dc:	01000008 	tsteq	r0, r8
    10e0:	00821720 	addeq	r1, r2, r0, lsr #14
    10e4:	23020000 	movwcs	r0, #8192	; 0x2000
    10e8:	07821e08 	streq	r1, [r2, r8, lsl #28]
    10ec:	23020000 	movwcs	r0, #8192	; 0x2000
    10f0:	3a03000c 	bcc	c1128 <_binary_src_fatexample_img_size+0xbfd28>
    10f4:	01000006 	tsteq	r0, r6
    10f8:	07870229 	streq	r0, [r7, r9, lsr #4]
    10fc:	a8110000 	ldmdage	r1, {}	; <UNPREDICTABLE>
    1100:	e2000000 	and	r0, r0, #0
    1104:	12000007 	andne	r0, r0, #7
    1108:	000000a1 	andeq	r0, r0, r1, lsr #1
    110c:	2b1f0007 	blcs	7c1130 <_binary_src_fatexample_img_size+0x7bfd30>
    1110:	01000009 	tsteq	r0, r9
    1114:	07d20a2b 	ldrbeq	r0, [r2, fp, lsr #20]
    1118:	05010000 	streq	r0, [r1, #-0]
    111c:	00024c03 	andeq	r4, r2, r3, lsl #24
    1120:	05f61f20 	ldrbeq	r1, [r6, #3872]!	; 0xf20
    1124:	2c010000 	stccs	0, cr0, [r1], {-0}
    1128:	0007d20a 	andeq	sp, r7, sl, lsl #4
    112c:	03050100 	movweq	r0, #20736	; 0x5100
    1130:	2000026c 	andcs	r0, r0, ip, ror #4
    1134:	00046420 	andeq	r6, r4, r0, lsr #8
    1138:	162e0100 	strtne	r0, [lr], -r0, lsl #2
    113c:	0000011b 	andeq	r0, r0, fp, lsl r1
    1140:	002c0305 	eoreq	r0, ip, r5, lsl #6
    1144:	ed202000 	stc	0, cr2, [r0, #-0]
    1148:	01000005 	tsteq	r0, r5
    114c:	00411040 	subeq	r1, r1, r0, asr #32
    1150:	03050000 	movweq	r0, #20480	; 0x5000
    1154:	20000028 	andcs	r0, r0, r8, lsr #32
    1158:	00060120 	andeq	r0, r6, r0, lsr #2
    115c:	17410100 	strbne	r0, [r1, -r0, lsl #2]
    1160:	0000083e 	andeq	r0, r0, lr, lsr r8
    1164:	00240305 	eoreq	r0, r4, r5, lsl #6
    1168:	04072000 	streq	r2, [r7], #-0
    116c:	00000052 	andeq	r0, r0, r2, asr r0
    1170:	0004ef20 	andeq	lr, r4, r0, lsr #30
    1174:	11420100 	mrsne	r0, (UNDEF: 82)
    1178:	0000005e 	andeq	r0, r0, lr, asr r0
    117c:	002a0305 	eoreq	r0, sl, r5, lsl #6
    1180:	cc202000 	stcgt	0, cr2, [r0], #-0
    1184:	01000005 	tsteq	r0, r5
    1188:	0041105d 	subeq	r1, r1, sp, asr r0
    118c:	03050000 	movweq	r0, #20480	; 0x5000
    1190:	20000036 	andcs	r0, r0, r6, lsr r0
    1194:	0004ad20 	andeq	sl, r4, r0, lsr #26
    1198:	11a30100 			; <UNDEFINED> instruction: 0x11a30100
    119c:	0000005e 	andeq	r0, r0, lr, asr r0
    11a0:	00000305 	andeq	r0, r0, r5, lsl #6
    11a4:	01212000 			; <UNDEFINED> instruction: 0x01212000
    11a8:	00000896 	muleq	r0, r6, r8
    11ac:	05010801 	streq	r0, [r1, #-2049]	; 0xfffff7ff
    11b0:	00009501 	andeq	r9, r0, r1, lsl #10
    11b4:	0006a800 	andeq	sl, r6, r0, lsl #16
    11b8:	00070008 	andeq	r0, r7, r8
    11bc:	00044f08 	andeq	r4, r4, r8, lsl #30
    11c0:	09190100 	ldmdbeq	r9, {r8}
    11c4:	af220000 	svcge	0x00220000
    11c8:	01000008 	tsteq	r0, r8
    11cc:	41190108 	tstmi	r9, r8, lsl #2
    11d0:	73000000 	movwvc	r0, #0
    11d4:	6f000004 	svcvs	0x00000004
    11d8:	23000004 	movwcs	r0, #4
    11dc:	00667562 	rsbeq	r7, r6, r2, ror #10
    11e0:	2a010801 	bcs	431ec <_binary_src_fatexample_img_size+0x41dec>
    11e4:	00000919 	andeq	r0, r0, r9, lsl r9
    11e8:	0000049a 	muleq	r0, sl, r4
    11ec:	00000494 	muleq	r0, r4, r4
    11f0:	007a7324 	rsbseq	r7, sl, r4, lsr #6
    11f4:	07010901 	streq	r0, [r1, -r1, lsl #18]
    11f8:	00000095 	muleq	r0, r5, r0
    11fc:	000004ca 	andeq	r0, r0, sl, asr #9
    1200:	000004c8 	andeq	r0, r0, r8, asr #9
    1204:	01006e24 	tsteq	r0, r4, lsr #28
    1208:	9507010b 	strls	r0, [r7, #-267]	; 0xfffffef5
    120c:	e3000000 	movw	r0, #0
    1210:	dd000004 	stcle	0, cr0, [r0, #-16]
    1214:	24000004 	strcs	r0, [r0], #-4
    1218:	01006e69 	tsteq	r0, r9, ror #28
    121c:	1f0d010c 	svcne	0x000d010c
    1220:	1a000009 	bne	124c <_Min_Stack_Size+0xe4c>
    1224:	14000005 	strne	r0, [r0], #-5
    1228:	25000005 	strcs	r0, [r0, #-5]
    122c:	00000050 	andeq	r0, r0, r0, asr r0
    1230:	01006924 	tsteq	r0, r4, lsr #18
    1234:	950b010d 	strls	r0, [fp, #-269]	; 0xfffffef3
    1238:	47000000 	strmi	r0, [r0, -r0]
    123c:	45000005 	strmi	r0, [r0, #-5]
    1240:	00000005 	andeq	r0, r0, r5
    1244:	5e040700 	cdppl	7, 0, cr0, cr4, cr0, {0}
    1248:	07000000 	streq	r0, [r0, -r0]
    124c:	00007604 	andeq	r7, r0, r4, lsl #12
    1250:	a0012600 	andge	r2, r1, r0, lsl #12
    1254:	01000004 	tsteq	r0, r4
    1258:	f40106f9 	vst1.64	{d0-d2}, [r1 :256], r9
    125c:	4e080005 	cdpmi	0, 0, cr0, cr8, cr5, {0}
    1260:	5b080006 	blpl	201280 <_binary_src_fatexample_img_size+0x1ffe80>
    1264:	01000005 	tsteq	r0, r5
    1268:	000009be 			; <UNDEFINED> instruction: 0x000009be
    126c:	0008af27 	andeq	sl, r8, r7, lsr #30
    1270:	1bf90100 	blne	ffe41678 <BootRAM+0xedb1e19>
    1274:	00000041 	andeq	r0, r0, r1, asr #32
    1278:	00000581 	andeq	r0, r0, r1, lsl #11
    127c:	0000057b 	andeq	r0, r0, fp, ror r5
    1280:	66756228 	ldrbtvs	r6, [r5], -r8, lsr #4
    1284:	31f90100 	mvnscc	r0, r0, lsl #2
    1288:	0000083e 	andeq	r0, r0, lr, lsr r8
    128c:	a0295101 	eorge	r5, r9, r1, lsl #2
    1290:	01000007 	tsteq	r0, r7
    1294:	005e3ff9 	ldrsheq	r3, [lr], #-249	; 0xffffff07
    1298:	52010000 	andpl	r0, r1, #0
    129c:	0100692a 	tsteq	r0, sl, lsr #18
    12a0:	00410bfb 	strdeq	r0, [r1], #-187	; 0xffffff45
    12a4:	05b70000 	ldreq	r0, [r7, #0]!
    12a8:	05b30000 	ldreq	r0, [r3, #0]!
    12ac:	4e2a0000 	cdpmi	0, 2, cr0, cr10, cr0, {0}
    12b0:	fc010032 	stc2	0, cr0, [r1], {50}	; 0x32
    12b4:	00005e0c 	andeq	r5, r0, ip, lsl #28
    12b8:	0005d700 	andeq	sp, r5, r0, lsl #14
    12bc:	0005d500 	andeq	sp, r5, r0, lsl #10
    12c0:	04002b00 	streq	r2, [r0], #-2816	; 0xfffff500
    12c4:	fe010000 	cdp2	0, 0, cr0, cr1, cr0, {0}
    12c8:	0009190d 	andeq	r1, r9, sp, lsl #18
    12cc:	0005ec00 	andeq	lr, r5, r0, lsl #24
    12d0:	0005ea00 	andeq	lr, r5, r0, lsl #20
    12d4:	756f2a00 	strbvc	r2, [pc, #-2560]!	; 8dc <_Min_Stack_Size+0x4dc>
    12d8:	ff010074 			; <UNDEFINED> instruction: 0xff010074
    12dc:	00091f0d 	andeq	r1, r9, sp, lsl #30
    12e0:	00060500 	andeq	r0, r6, r0, lsl #10
    12e4:	0005ff00 	andeq	pc, r5, r0, lsl #30
    12e8:	012c0000 			; <UNDEFINED> instruction: 0x012c0000
    12ec:	00000583 	andeq	r0, r0, r3, lsl #11
    12f0:	cc06d001 	stcgt	0, cr13, [r6], {1}
    12f4:	f4080004 	vst4.8	{d0-d3}, [r8], r4
    12f8:	3c080005 	stccc	0, cr0, [r8], {5}
    12fc:	01000006 	tsteq	r0, r6
    1300:	00000aa3 	andeq	r0, r0, r3, lsr #21
    1304:	0000302d 	andeq	r3, r0, sp, lsr #32
    1308:	0009f400 	andeq	pc, r9, r0, lsl #8
    130c:	00692a00 	rsbeq	r2, r9, r0, lsl #20
    1310:	4111d601 	tstmi	r1, r1, lsl #12
    1314:	60000000 	andvs	r0, r0, r0
    1318:	5c000006 	stcpl	0, cr0, [r0], {6}
    131c:	00000006 	andeq	r0, r0, r6
    1320:	00053c2e 	andeq	r3, r5, lr, lsr #24
    1324:	00059008 	andeq	r9, r5, r8
    1328:	000a3508 	andeq	r3, sl, r8, lsl #10
    132c:	08af2b00 	stmiaeq	pc!, {r8, r9, fp, sp}	; <UNPREDICTABLE>
    1330:	e2010000 	and	r0, r1, #0
    1334:	0000410d 	andeq	r4, r0, sp, lsl #2
    1338:	00068500 	andeq	r8, r6, r0, lsl #10
    133c:	00068300 	andeq	r8, r6, r0, lsl #6
    1340:	055e2f00 	ldrbeq	r2, [lr, #-3840]	; 0xfffff100
    1344:	0a250800 	beq	94334c <_binary_src_fatexample_img_size+0x941f4c>
    1348:	01300000 	teqeq	r0, r0
    134c:	00750250 	rsbseq	r0, r5, r0, asr r2
    1350:	05803100 	streq	r3, [r0, #256]	; 0x100
    1354:	01300800 	teqeq	r0, r0, lsl #16
    1358:	00750550 	rsbseq	r0, r5, r0, asr r5
    135c:	00218008 	eoreq	r8, r1, r8
    1360:	04dc3200 	ldrbeq	r3, [ip], #512	; 0x200
    1364:	0e5f0800 	cdpeq	8, 5, cr0, cr15, cr0, {0}
    1368:	1e330000 	cdpne	0, 3, cr0, cr3, cr0, {0}
    136c:	a3080005 	movwge	r0, #32773	; 0x8005
    1370:	6700000a 	strvs	r0, [r0, -sl]
    1374:	3000000a 	andcc	r0, r0, sl
    1378:	74025001 	strvc	r5, [r2], #-1
    137c:	51013000 	mrspl	r3, (UNDEF: 1)
    1380:	30007402 	andcc	r7, r0, r2, lsl #8
    1384:	08025201 	stmdaeq	r2, {r0, r9, ip, lr}
    1388:	53013040 	movwpl	r3, #4160	; 0x1040
    138c:	07010305 	streq	r0, [r1, -r5, lsl #6]
    1390:	33000800 	movwcc	r0, #2048	; 0x800
    1394:	0800052a 	stmdaeq	r0, {r1, r3, r5, r8, sl}
    1398:	00000aa3 	andeq	r0, r0, r3, lsr #21
    139c:	00000a90 	muleq	r0, r0, sl
    13a0:	02500130 	subseq	r0, r0, #48, 2
    13a4:	01308009 	teqeq	r0, r9
    13a8:	00740251 	rsbseq	r0, r4, r1, asr r2
    13ac:	02520130 	subseq	r0, r2, #48, 2
    13b0:	01304008 	teqeq	r0, r8
    13b4:	4f030553 	svcmi	0x00030553
    13b8:	00080006 	andeq	r0, r8, r6
    13bc:	00053232 	andeq	r3, r5, r2, lsr r2
    13c0:	000e6808 	andeq	r6, lr, r8, lsl #16
    13c4:	059e3200 	ldreq	r3, [lr, #512]	; 0x200
    13c8:	0e5f0800 	cdpeq	8, 5, cr0, cr15, cr0, {0}
    13cc:	26000000 	strcs	r0, [r0], -r0
    13d0:	00082101 	andeq	r2, r8, r1, lsl #2
    13d4:	06a40100 	strteq	r0, [r4], r0, lsl #2
    13d8:	0003e001 	andeq	lr, r3, r1
    13dc:	0004cc08 	andeq	ip, r4, r8, lsl #24
    13e0:	00069808 	andeq	r9, r6, r8, lsl #16
    13e4:	0b370100 	bleq	dc17ec <_binary_src_fatexample_img_size+0xdc03ec>
    13e8:	af270000 	svcge	0x00270000
    13ec:	01000008 	tsteq	r0, r8
    13f0:	00411aa4 	subeq	r1, r1, r4, lsr #21
    13f4:	06bc0000 	ldrteq	r0, [ip], r0
    13f8:	06b80000 	ldrteq	r0, [r8], r0
    13fc:	88270000 	stmdahi	r7!, {}	; <UNPREDICTABLE>
    1400:	01000009 	tsteq	r0, r9
    1404:	004129a4 	subeq	r2, r1, r4, lsr #19
    1408:	06ea0000 	strbteq	r0, [sl], r0
    140c:	06da0000 	ldrbeq	r0, [sl], r0
    1410:	a0270000 	eorge	r0, r7, r0
    1414:	01000007 	tsteq	r0, r7
    1418:	005e3ba4 	subseq	r3, lr, r4, lsr #23
    141c:	075c0000 	ldrbeq	r0, [ip, -r0]
    1420:	07560000 	ldrbeq	r0, [r6, -r0]
    1424:	54270000 	strtpl	r0, [r7], #-0
    1428:	0100000e 	tsteq	r0, lr
    142c:	00a84aa4 	adceq	r4, r8, r4, lsr #21
    1430:	07920000 	ldreq	r0, [r2, r0]
    1434:	07880000 	streq	r0, [r8, r0]
    1438:	9b2b0000 	blls	ac1440 <_binary_src_fatexample_img_size+0xac0040>
    143c:	01000009 	tsteq	r0, r9
    1440:	00410ba5 	subeq	r0, r1, r5, lsr #23
    1444:	07e40000 	strbeq	r0, [r4, r0]!
    1448:	07e00000 	strbeq	r0, [r0, r0]!
    144c:	622a0000 	eorvs	r0, sl, #0
    1450:	01006675 	tsteq	r0, r5, ror r6
    1454:	005e0cae 	subseq	r0, lr, lr, lsr #25
    1458:	08170000 	ldmdaeq	r7, {}	; <UNPREDICTABLE>
    145c:	080d0000 	stmdaeq	sp, {}	; <UNPREDICTABLE>
    1460:	34000000 	strcc	r0, [r0], #-0
    1464:	000008c9 	andeq	r0, r0, r9, asr #17
    1468:	010d5f01 	tsteq	sp, r1, lsl #30
    146c:	08000700 	stmdaeq	r0, {r8, r9, sl}
    1470:	08000818 	stmdaeq	r0, {r3, r4, fp}
    1474:	0000087c 	andeq	r0, r0, ip, ror r8
    1478:	000cbc01 	andeq	fp, ip, r1, lsl #24
    147c:	08af2700 	stmiaeq	pc!, {r8, r9, sl, sp}	; <UNPREDICTABLE>
    1480:	5f010000 	svcpl	0x00010000
    1484:	0000411d 	andeq	r4, r0, sp, lsl r1
    1488:	0008bc00 	andeq	fp, r8, r0, lsl #24
    148c:	0008b400 	andeq	fp, r8, r0, lsl #8
    1490:	047c2000 	ldrbteq	r2, [ip], #-0
    1494:	60010000 	andvs	r0, r1, r0
    1498:	00005e13 	andeq	r5, r0, r3, lsl lr
    149c:	34030500 	strcc	r0, [r3], #-1280	; 0xfffffb00
    14a0:	2b200000 	blcs	8014a8 <_binary_src_fatexample_img_size+0x8000a8>
    14a4:	000009c0 	andeq	r0, r0, r0, asr #19
    14a8:	5e0c6101 	adfple	f6, f4, f1
    14ac:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
    14b0:	f6000008 			; <UNDEFINED> instruction: 0xf6000008
    14b4:	2b000008 	blcs	14dc <_binary_src_fatexample_img_size+0xdc>
    14b8:	00000077 	andeq	r0, r0, r7, ror r0
    14bc:	410b6201 	tstmi	fp, r1, lsl #4
    14c0:	34000000 	strcc	r0, [r0], #-0
    14c4:	32000009 	andcc	r0, r0, #9
    14c8:	2a000009 	bcs	14f4 <_binary_src_fatexample_img_size+0xf4>
    14cc:	00716572 	rsbseq	r6, r1, r2, ror r5
    14d0:	410b7201 	tstmi	fp, r1, lsl #4
    14d4:	5d000000 	stcpl	0, cr0, [r0, #-0]
    14d8:	51000009 	tstpl	r0, r9
    14dc:	2d000009 	stccs	0, cr0, [r0, #-36]	; 0xffffffdc
    14e0:	00000068 	andeq	r0, r0, r8, rrx
    14e4:	00000c7c 	andeq	r0, r0, ip, ror ip
    14e8:	000c5020 	andeq	r5, ip, r0, lsr #32
    14ec:	0b890100 	bleq	fe2418f4 <BootRAM+0xd1b2095>
    14f0:	00000cbc 			; <UNDEFINED> instruction: 0x00000cbc
    14f4:	206c9102 	rsbcs	r9, ip, r2, lsl #2
    14f8:	000007a0 	andeq	r0, r0, r0, lsr #15
    14fc:	5e0e8a01 	vmlapl.f32	s16, s28, s2
    1500:	02000000 	andeq	r0, r0, #0
    1504:	5a2e6a91 	bpl	b9bf50 <_binary_src_fatexample_img_size+0xb9ab50>
    1508:	6e080007 	cdpvs	0, 0, cr0, cr8, cr7, {0}
    150c:	1c080007 	stcne	0, cr0, [r8], {7}
    1510:	2000000c 	andcs	r0, r0, ip
    1514:	00000c50 	andeq	r0, r0, r0, asr ip
    1518:	be177a01 	vnmlslt.f32	s14, s14, s2
    151c:	0200000c 	andeq	r0, r0, #12
    1520:	a0206c91 	mlage	r0, r1, ip, r6
    1524:	01000007 	tsteq	r0, r7
    1528:	005e147b 	subseq	r1, lr, fp, ror r4
    152c:	91020000 	mrsls	r0, (UNDEF: 2)
    1530:	076e356a 	strbeq	r3, [lr, -sl, ror #10]!
    1534:	0ea00800 	cdpeq	8, 10, cr0, cr0, cr0, {0}
    1538:	01300000 	teqeq	r0, r0
    153c:	6c910251 	lfmvs	f0, 4, [r1], {81}	; 0x51
    1540:	02520130 	subseq	r0, r2, #48, 2
    1544:	00006a91 	muleq	r0, r1, sl
    1548:	000cc536 	andeq	ip, ip, r6, lsr r5
    154c:	00077e00 	andeq	r7, r7, r0, lsl #28
    1550:	00880108 	addeq	r0, r8, r8, lsl #2
    1554:	8d010000 	stchi	0, cr0, [r1, #-0]
    1558:	000c5c05 	andeq	r5, ip, r5, lsl #24
    155c:	0cdf3700 	ldcleq	7, cr3, [pc], {0}
    1560:	09b30000 	ldmibeq	r3!, {}	; <UNPREDICTABLE>
    1564:	09b10000 	ldmibeq	r1!, {}	; <UNPREDICTABLE>
    1568:	d3370000 	teqle	r7, #0
    156c:	c900000c 	stmdbgt	r0, {r2, r3}
    1570:	c7000009 	strgt	r0, [r0, -r9]
    1574:	35000009 	strcc	r0, [r0, #-9]
    1578:	0800078c 	stmdaeq	r0, {r2, r3, r7, r8, r9, sl}
    157c:	00000cec 	andeq	r0, r0, ip, ror #25
    1580:	02500130 	subseq	r0, r0, #48, 2
    1584:	00008009 	andeq	r8, r0, r9
    1588:	0007ae35 	andeq	sl, r7, r5, lsr lr
    158c:	000e0108 	andeq	r0, lr, r8, lsl #2
    1590:	50013000 	andpl	r3, r1, r0
    1594:	002c0305 	eoreq	r0, ip, r5, lsl #6
    1598:	01302000 	teqeq	r0, r0
    159c:	6c910251 	lfmvs	f0, 4, [r1], {81}	; 0x51
    15a0:	02520130 	subseq	r0, r2, #48, 2
    15a4:	00006a91 	muleq	r0, r1, sl
    15a8:	00072a33 	andeq	r2, r7, r3, lsr sl
    15ac:	00087a08 	andeq	r7, r8, r8, lsl #20
    15b0:	000c9900 	andeq	r9, ip, r0, lsl #18
    15b4:	50013000 	andpl	r3, r1, r0
    15b8:	30007502 	andcc	r7, r0, r2, lsl #10
    15bc:	03055101 	movweq	r5, #20737	; 0x5101
    15c0:	2000002c 	andcs	r0, r0, ip, lsr #32
    15c4:	074e3200 	strbeq	r3, [lr, -r0, lsl #4]
    15c8:	09250800 	stmdbeq	r5!, {fp}
    15cc:	d8350000 	ldmdale	r5!, {}	; <UNPREDICTABLE>
    15d0:	a5080007 	strge	r0, [r8, #-7]
    15d4:	3000000d 	andcc	r0, r0, sp
    15d8:	03055001 	movweq	r5, #20481	; 0x5001
    15dc:	2000002c 	andcs	r0, r0, ip, lsr #32
    15e0:	02520130 	subseq	r0, r2, #48, 2
    15e4:	00000075 	andeq	r0, r0, r5, ror r0
    15e8:	04070438 	streq	r0, [r7], #-1080	; 0xfffffbc8
    15ec:	00000cc4 	andeq	r0, r0, r4, asr #25
    15f0:	05b73a39 	ldreq	r3, [r7, #2617]!	; 0xa39
    15f4:	57010000 	strpl	r0, [r1, -r0]
    15f8:	ec030114 	stfs	f0, [r3], {20}
    15fc:	3b00000c 	blcc	1634 <_binary_src_fatexample_img_size+0x234>
    1600:	00667562 	rsbeq	r7, r6, r2, ror #10
    1604:	3e2c5701 	cdpcc	7, 2, cr5, cr12, cr1, {0}
    1608:	3c000008 	stccc	0, cr0, [r0], {8}
    160c:	000007a0 	andeq	r0, r0, r0, lsr #15
    1610:	5e3a5701 	cdppl	7, 3, cr5, cr10, cr1, {0}
    1614:	00000000 	andeq	r0, r0, r0
    1618:	00078234 	andeq	r8, r7, r4, lsr r2
    161c:	0d440100 	stfeqe	f0, [r4, #-0]
    1620:	00064e01 	andeq	r4, r6, r1, lsl #28
    1624:	0006a808 	andeq	sl, r6, r8, lsl #16
    1628:	0009dd08 	andeq	sp, r9, r8, lsl #26
    162c:	0d4a0100 	stfeqe	f0, [sl, #-0]
    1630:	af270000 	svcge	0x00270000
    1634:	01000008 	tsteq	r0, r8
    1638:	00411c44 	subeq	r1, r1, r4, asr #24
    163c:	0a010000 	beq	41644 <_binary_src_fatexample_img_size+0x40244>
    1640:	09fd0000 	ldmibeq	sp!, {}^	; <UNPREDICTABLE>
    1644:	4e2b0000 	cdpmi	0, 2, cr0, cr11, cr0, {0}
    1648:	01000008 	tsteq	r0, r8
    164c:	005e0c4b 	subseq	r0, lr, fp, asr #24
    1650:	0a260000 	beq	981658 <_binary_src_fatexample_img_size+0x980258>
    1654:	0a220000 	beq	88165c <_binary_src_fatexample_img_size+0x88025c>
    1658:	8c350000 	ldchi	0, cr0, [r5], #-0
    165c:	25080006 	strcs	r0, [r8, #-6]
    1660:	30000009 	andcc	r0, r0, r9
    1664:	30015001 	andcc	r5, r1, r1
    1668:	02510130 	subseq	r0, r1, #48, 2
    166c:	01300071 	teqeq	r0, r1, ror r0
    1670:	00720252 	rsbseq	r0, r2, r2, asr r2
    1674:	013d0000 	teqeq	sp, r0
    1678:	00000073 	andeq	r0, r0, r3, ror r0
    167c:	72063001 	andvc	r3, r6, #1
    1680:	e0080003 	and	r0, r8, r3
    1684:	02080003 	andeq	r0, r8, #3
    1688:	a501007d 	strge	r0, [r1, #-125]	; 0xffffff83
    168c:	2d00000d 	stccs	0, cr0, [r0, #-52]	; 0xffffffcc
    1690:	00000018 	andeq	r0, r0, r8, lsl r0
    1694:	00000d81 	andeq	r0, r0, r1, lsl #27
    1698:	7274632a 	rsbsvc	r6, r4, #-1476395008	; 0xa8000000
    169c:	10360100 	eorsne	r0, r6, r0, lsl #2
    16a0:	00000076 	andeq	r0, r0, r6, ror r0
    16a4:	00000a4c 	andeq	r0, r0, ip, asr #20
    16a8:	00000a44 	andeq	r0, r0, r4, asr #20
    16ac:	0e723e00 	cdpeq	14, 7, cr3, cr2, cr0, {0}
    16b0:	03b60000 			; <UNDEFINED> instruction: 0x03b60000
    16b4:	b6010800 	strlt	r0, [r1], -r0, lsl #16
    16b8:	be080003 	cdplt	0, 0, cr0, cr8, cr3, {0}
    16bc:	01080003 	tsteq	r8, r3
    16c0:	8137033c 	teqhi	r7, ip, lsr r3
    16c4:	9b00000e 	blls	1704 <_binary_src_fatexample_img_size+0x304>
    16c8:	9900000a 	stmdbls	r0, {r1, r3}
    16cc:	0000000a 	andeq	r0, r0, sl
    16d0:	bf013f00 	svclt	0x00013f00
    16d4:	01000008 	tsteq	r0, r8
    16d8:	f4011b1b 			; <UNDEFINED> instruction: 0xf4011b1b
    16dc:	6e00000d 	cdpvs	0, 0, cr0, cr0, cr13, {0}
    16e0:	72080003 	andvc	r0, r8, #3
    16e4:	02080003 	andeq	r0, r8, #3
    16e8:	f401007d 	vst4.16	{d0-d3}, [r1 :256]!
    16ec:	4000000d 	andmi	r0, r0, sp
    16f0:	00716572 	rsbseq	r6, r1, r2, ror r5
    16f4:	fb3c1b01 	blx	f08302 <_binary_src_fatexample_img_size+0xf06f02>
    16f8:	b300000d 	movwlt	r0, #13
    16fc:	af00000a 	svcge	0x0000000a
    1700:	2900000a 	stmdbcs	r0, {r1, r3}
    1704:	00001112 	andeq	r1, r0, r2, lsl r1
    1708:	5e4a1b01 	vmlapl.f64	d17, d10, d1
    170c:	01000000 	mrseq	r0, (UNDEF: 0)
    1710:	079d2951 			; <UNDEFINED> instruction: 0x079d2951
    1714:	1b010000 	blne	4171c <_binary_src_fatexample_img_size+0x4031c>
    1718:	00005e5b 	andeq	r5, r0, fp, asr lr
    171c:	00520100 	subseq	r0, r2, r0, lsl #2
    1720:	5f080102 	svcpl	0x00080102
    1724:	07000002 	streq	r0, [r0, -r2]
    1728:	00011b04 	andeq	r1, r1, r4, lsl #22
    172c:	78013f00 	stmdavc	r1, {r8, r9, sl, fp, ip, sp}
    1730:	01000007 	tsteq	r0, r7
    1734:	f4011b1a 			; <UNDEFINED> instruction: 0xf4011b1a
    1738:	6a00000d 	bvs	1774 <_binary_src_fatexample_img_size+0x374>
    173c:	6e080003 	cdpvs	0, 0, cr0, cr8, cr3, {0}
    1740:	02080003 	andeq	r0, r8, #3
    1744:	5001007d 	andpl	r0, r1, sp, ror r0
    1748:	4000000e 	andmi	r0, r0, lr
    174c:	00716572 	rsbseq	r6, r1, r2, ror r5
    1750:	fb3b1a01 	blx	ec7f5e <_binary_src_fatexample_img_size+0xec6b5e>
    1754:	d800000d 	stmdale	r0, {r0, r2, r3}
    1758:	d400000a 	strle	r0, [r0], #-10
    175c:	2900000a 	stmdbcs	r0, {r1, r3}
    1760:	00000c50 	andeq	r0, r0, r0, asr ip
    1764:	50471a01 	subpl	r1, r7, r1, lsl #20
    1768:	0100000e 	tsteq	r0, lr
    176c:	07a02951 	sbfxeq	r2, r1, #18, #1
    1770:	1a010000 	bne	41778 <_binary_src_fatexample_img_size+0x40378>
    1774:	00091957 	andeq	r1, r9, r7, asr r9
    1778:	00520100 	subseq	r0, r2, r0, lsl #2
    177c:	0cbc0407 	cfldrseq	mvf0, [ip], #28
    1780:	01410000 	mrseq	r0, (UNDEF: 65)
    1784:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1788:	411b1901 	tstmi	fp, r1, lsl #18
    178c:	0006c801 	andeq	ip, r6, r1, lsl #16
    1790:	1b180100 	blne	601b98 <_binary_src_fatexample_img_size+0x600798>
    1794:	06980142 	ldreq	r0, [r8], r2, asr #2
    1798:	17010000 	strne	r0, [r1, -r0]
    179c:	5843011b 	stmdapl	r3, {r0, r1, r3, r4, r8}^
    17a0:	02000005 	andeq	r0, r0, #5
    17a4:	011605de 			; <UNDEFINED> instruction: 0x011605de
    17a8:	000e8f03 	andeq	r8, lr, r3, lsl #30
    17ac:	06b94400 	ldrteq	r4, [r9], r0, lsl #8
    17b0:	de020000 	cdple	0, 0, cr0, cr2, cr0, {0}
    17b4:	029e2f05 	addseq	r2, lr, #5, 30
    17b8:	45000000 	strmi	r0, [r0, #-0]
    17bc:	00000e68 	andeq	r0, r0, r8, ror #28
    17c0:	08000364 	stmdaeq	r0, {r2, r5, r6, r8, r9}
    17c4:	08000366 	stmdaeq	r0, {r1, r2, r5, r6, r8, r9}
    17c8:	01007d02 	tsteq	r0, r2, lsl #26
    17cc:	95010146 	strls	r0, [r1, #-326]	; 0xfffffeba
    17d0:	95000005 	strls	r0, [r0, #-5]
    17d4:	04000005 	streq	r0, [r0], #-5
    17d8:	57000636 	smladxpl	r0, r6, r6, r0
    17dc:	02000018 	andeq	r0, r0, #24
    17e0:	00065300 	andeq	r5, r6, r0, lsl #6
    17e4:	45010400 	strmi	r0, [r1, #-1024]	; 0xfffffc00
    17e8:	0c000003 	stceq	0, cr0, [r0], {3}
    17ec:	000010ee 	andeq	r1, r0, lr, ror #1
    17f0:	000002c0 	andeq	r0, r0, r0, asr #5
    17f4:	08000818 	stmdaeq	r0, {r3, r4, fp}
    17f8:	08000d60 	stmdaeq	r0, {r5, r6, r8, sl, fp}
    17fc:	00000a13 	andeq	r0, r0, r3, lsl sl
    1800:	58060102 	stmdapl	r6, {r1, r8}
    1804:	02000002 	andeq	r0, r0, #2
    1808:	02710502 	rsbseq	r0, r1, #8388608	; 0x800000
    180c:	ac030000 	stcge	0, cr0, [r3], {-0}
    1810:	02000002 	andeq	r0, r0, #2
    1814:	003f1828 	eorseq	r1, pc, r8, lsr #16
    1818:	04020000 	streq	r0, [r2], #-0
    181c:	00008205 	andeq	r8, r0, r5, lsl #4
    1820:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    1824:	0000007d 	andeq	r0, r0, sp, ror r0
    1828:	00031603 	andeq	r1, r3, r3, lsl #12
    182c:	182e0200 	stmdane	lr!, {r9}
    1830:	0000005e 	andeq	r0, r0, lr, asr r0
    1834:	00004d04 	andeq	r4, r0, r4, lsl #26
    1838:	08010200 	stmdaeq	r1, {r9}
    183c:	00000256 	andeq	r0, r0, r6, asr r2
    1840:	0000ff03 	andeq	pc, r0, r3, lsl #30
    1844:	19310200 	ldmdbne	r1!, {r9}
    1848:	00000076 	andeq	r0, r0, r6, ror r0
    184c:	00006505 	andeq	r6, r0, r5, lsl #10
    1850:	07020200 	streq	r0, [r2, -r0, lsl #4]
    1854:	0000017e 	andeq	r0, r0, lr, ror r1
    1858:	0002ab03 	andeq	sl, r2, r3, lsl #22
    185c:	19340200 	ldmdbne	r4!, {r9}
    1860:	00000089 	andeq	r0, r0, r9, lsl #1
    1864:	4d070402 	cfstrsmi	mvf0, [r7, #-8]
    1868:	02000000 	andeq	r0, r0, #0
    186c:	00480708 	subeq	r0, r8, r8, lsl #14
    1870:	04060000 	streq	r0, [r6], #-0
    1874:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    1878:	00970500 	addseq	r0, r7, r0, lsl #10
    187c:	04020000 	streq	r0, [r2], #-0
    1880:	00005207 	andeq	r5, r0, r7, lsl #4
    1884:	03080700 	movweq	r0, #34560	; 0x8700
    1888:	00ff091b 	rscseq	r0, pc, fp, lsl r9	; <UNPREDICTABLE>
    188c:	56080000 	strpl	r0, [r8], -r0
    1890:	03000004 	movweq	r0, #4
    1894:	004d0b1c 	subeq	r0, sp, ip, lsl fp
    1898:	23020000 	movwcs	r0, #8192	; 0x2000
    189c:	085e0800 	ldmdaeq	lr, {fp}^
    18a0:	1d030000 	stcne	0, cr0, [r3, #-0]
    18a4:	00004d0b 	andeq	r4, r0, fp, lsl #26
    18a8:	01230200 			; <UNDEFINED> instruction: 0x01230200
    18ac:	0004d208 	andeq	sp, r4, r8, lsl #4
    18b0:	0c1e0300 	ldceq	3, cr0, [lr], {-0}
    18b4:	00000065 	andeq	r0, r0, r5, rrx
    18b8:	08022302 	stmdaeq	r2, {r1, r8, r9, sp}
    18bc:	000003ea 	andeq	r0, r0, sl, ror #7
    18c0:	650c1f03 	strvs	r1, [ip, #-3843]	; 0xfffff0fd
    18c4:	02000000 	andeq	r0, r0, #0
    18c8:	41080423 	tstmi	r8, r3, lsr #8
    18cc:	03000008 	movweq	r0, #8
    18d0:	00650c20 	rsbeq	r0, r5, r0, lsr #24
    18d4:	23020000 	movwcs	r0, #8192	; 0x2000
    18d8:	d6030006 	strle	r0, [r3], -r6
    18dc:	03000008 	movweq	r0, #8
    18e0:	00aa0221 	adceq	r0, sl, r1, lsr #4
    18e4:	64090000 	strvs	r0, [r9], #-0
    18e8:	04000002 	streq	r0, [r0], #-2
    18ec:	9e1506ce 	cfmsub32ls	mvax6, mvfx0, mvfx5, mvfx14
    18f0:	01000000 	mrseq	r0, (UNDEF: 0)
    18f4:	013a0a01 	teqeq	sl, r1, lsl #20
    18f8:	4c050000 	stcmi	0, cr0, [r5], {-0}
    18fc:	00007d11 	andeq	r7, r0, r1, lsl sp
    1900:	0b010100 	bleq	41d08 <_binary_src_fatexample_img_size+0x40908>
    1904:	02370654 	eorseq	r0, r7, #84, 12	; 0x5400000
    1908:	0002d309 	andeq	sp, r2, r9, lsl #6
    190c:	05da0c00 	ldrbeq	r0, [sl, #3072]	; 0xc00
    1910:	39060000 	stmdbcc	r6, {}	; <UNPREDICTABLE>
    1914:	00711102 	rsbseq	r1, r1, r2, lsl #2
    1918:	23020000 	movwcs	r0, #8192	; 0x2000
    191c:	07aa0c00 	streq	r0, [sl, r0, lsl #24]!
    1920:	3a060000 	bcc	181928 <_binary_src_fatexample_img_size+0x180528>
    1924:	00711102 	rsbseq	r1, r1, r2, lsl #2
    1928:	23020000 	movwcs	r0, #8192	; 0x2000
    192c:	062b0c02 	strteq	r0, [fp], -r2, lsl #24
    1930:	3b060000 	blcc	181938 <_binary_src_fatexample_img_size+0x180538>
    1934:	00711102 	rsbseq	r1, r1, r2, lsl #2
    1938:	23020000 	movwcs	r0, #8192	; 0x2000
    193c:	07b40c04 	ldreq	r0, [r4, r4, lsl #24]!
    1940:	3c060000 	stccc	0, cr0, [r6], {-0}
    1944:	00711102 	rsbseq	r1, r1, r2, lsl #2
    1948:	23020000 	movwcs	r0, #8192	; 0x2000
    194c:	06ae0c06 	strteq	r0, [lr], r6, lsl #24
    1950:	3d060000 	stccc	0, cr0, [r6, #-0]
    1954:	00711102 	rsbseq	r1, r1, r2, lsl #2
    1958:	23020000 	movwcs	r0, #8192	; 0x2000
    195c:	07be0c08 	ldreq	r0, [lr, r8, lsl #24]!
    1960:	3e060000 	cdpcc	0, 0, cr0, cr6, cr0, {0}
    1964:	00711102 	rsbseq	r1, r1, r2, lsl #2
    1968:	23020000 	movwcs	r0, #8192	; 0x2000
    196c:	06dd0c0a 	ldrbeq	r0, [sp], sl, lsl #24
    1970:	3f060000 	svccc	0x00060000
    1974:	00711102 	rsbseq	r1, r1, r2, lsl #2
    1978:	23020000 	movwcs	r0, #8192	; 0x2000
    197c:	07c80c0c 	strbeq	r0, [r8, ip, lsl #24]
    1980:	40060000 	andmi	r0, r6, r0
    1984:	00711102 	rsbseq	r1, r1, r2, lsl #2
    1988:	23020000 	movwcs	r0, #8192	; 0x2000
    198c:	09420c0e 	stmdbeq	r2, {r1, r2, r3, sl, fp}^
    1990:	41060000 	mrsmi	r0, (UNDEF: 6)
    1994:	00711102 	rsbseq	r1, r1, r2, lsl #2
    1998:	23020000 	movwcs	r0, #8192	; 0x2000
    199c:	07d20c10 	bfieq	r0, r0, (invalid: 24:18)
    19a0:	42060000 	andmi	r0, r6, #0
    19a4:	00711102 	rsbseq	r1, r1, r2, lsl #2
    19a8:	23020000 	movwcs	r0, #8192	; 0x2000
    19ac:	07a50c12 			; <UNDEFINED> instruction: 0x07a50c12
    19b0:	43060000 	movwmi	r0, #24576	; 0x6000
    19b4:	00711102 	rsbseq	r1, r1, r2, lsl #2
    19b8:	23020000 	movwcs	r0, #8192	; 0x2000
    19bc:	07dc0c14 	bfieq	r0, r4, #24, #5
    19c0:	44060000 	strmi	r0, [r6], #-0
    19c4:	00711102 	rsbseq	r1, r1, r2, lsl #2
    19c8:	23020000 	movwcs	r0, #8192	; 0x2000
    19cc:	08490c16 	stmdaeq	r9, {r1, r2, r4, sl, fp}^
    19d0:	45060000 	strmi	r0, [r6, #-0]
    19d4:	00711102 	rsbseq	r1, r1, r2, lsl #2
    19d8:	23020000 	movwcs	r0, #8192	; 0x2000
    19dc:	07e60c18 			; <UNDEFINED> instruction: 0x07e60c18
    19e0:	46060000 	strmi	r0, [r6], -r0
    19e4:	00711102 	rsbseq	r1, r1, r2, lsl #2
    19e8:	23020000 	movwcs	r0, #8192	; 0x2000
    19ec:	08d10c1a 	ldmeq	r1, {r1, r3, r4, sl, fp}^
    19f0:	47060000 	strmi	r0, [r6, -r0]
    19f4:	00711102 	rsbseq	r1, r1, r2, lsl #2
    19f8:	23020000 	movwcs	r0, #8192	; 0x2000
    19fc:	023a0c1c 	eorseq	r0, sl, #28, 24	; 0x1c00
    1a00:	48060000 	stmdami	r6, {}	; <UNPREDICTABLE>
    1a04:	02e31102 	rsceq	r1, r3, #-2147483648	; 0x80000000
    1a08:	23020000 	movwcs	r0, #8192	; 0x2000
    1a0c:	08710c1e 	ldmdaeq	r1!, {r1, r2, r3, r4, sl, fp}^
    1a10:	49060000 	stmdbmi	r6, {}	; <UNPREDICTABLE>
    1a14:	00711102 	rsbseq	r1, r1, r2, lsl #2
    1a18:	23020000 	movwcs	r0, #8192	; 0x2000
    1a1c:	09e70c40 	stmibeq	r7!, {r6, sl, fp}^
    1a20:	4a060000 	bmi	181a28 <_binary_src_fatexample_img_size+0x180628>
    1a24:	00711102 	rsbseq	r1, r1, r2, lsl #2
    1a28:	23020000 	movwcs	r0, #8192	; 0x2000
    1a2c:	04f90c42 	ldrbteq	r0, [r9], #3138	; 0xc42
    1a30:	4b060000 	blmi	181a38 <_binary_src_fatexample_img_size+0x180638>
    1a34:	00711102 	rsbseq	r1, r1, r2, lsl #2
    1a38:	23020000 	movwcs	r0, #8192	; 0x2000
    1a3c:	08010c44 	stmdaeq	r1, {r2, r6, sl, fp}
    1a40:	4c060000 	stcmi	0, cr0, [r6], {-0}
    1a44:	00711102 	rsbseq	r1, r1, r2, lsl #2
    1a48:	23020000 	movwcs	r0, #8192	; 0x2000
    1a4c:	4e460d46 	cdpmi	13, 4, cr0, cr6, cr6, {2}
    1a50:	4d060052 	stcmi	0, cr0, [r6, #-328]	; 0xfffffeb8
    1a54:	00711102 	rsbseq	r1, r1, r2, lsl #2
    1a58:	23020000 	movwcs	r0, #8192	; 0x2000
    1a5c:	080b0c48 	stmdaeq	fp, {r3, r6, sl, fp}
    1a60:	4e060000 	cdpmi	0, 0, cr0, cr6, cr0, {0}
    1a64:	00711102 	rsbseq	r1, r1, r2, lsl #2
    1a68:	23020000 	movwcs	r0, #8192	; 0x2000
    1a6c:	057d0c4a 	ldrbeq	r0, [sp, #-3146]!	; 0xfffff3b6
    1a70:	4f060000 	svcmi	0x00060000
    1a74:	00711102 	rsbseq	r1, r1, r2, lsl #2
    1a78:	23020000 	movwcs	r0, #8192	; 0x2000
    1a7c:	09fd0c4c 	ldmibeq	sp!, {r2, r3, r6, sl, fp}^
    1a80:	50060000 	andpl	r0, r6, r0
    1a84:	00711102 	rsbseq	r1, r1, r2, lsl #2
    1a88:	23020000 	movwcs	r0, #8192	; 0x2000
    1a8c:	09780c4e 	ldmdbeq	r8!, {r1, r2, r3, r6, sl, fp}^
    1a90:	51060000 	mrspl	r0, (UNDEF: 6)
    1a94:	00711102 	rsbseq	r1, r1, r2, lsl #2
    1a98:	23020000 	movwcs	r0, #8192	; 0x2000
    1a9c:	0a070c50 	beq	1c4be4 <_binary_src_fatexample_img_size+0x1c37e4>
    1aa0:	52060000 	andpl	r0, r6, #0
    1aa4:	00711102 	rsbseq	r1, r1, r2, lsl #2
    1aa8:	23020000 	movwcs	r0, #8192	; 0x2000
    1aac:	710e0052 	qaddvc	r0, r2, lr
    1ab0:	e3000000 	movw	r0, #0
    1ab4:	0f000002 	svceq	0x00000002
    1ab8:	000000a3 	andeq	r0, r0, r3, lsr #1
    1abc:	d3050010 	movwle	r0, #20496	; 0x5010
    1ac0:	10000002 	andne	r0, r0, r2
    1ac4:	00000571 	andeq	r0, r0, r1, ror r5
    1ac8:	03025306 	movweq	r5, #8966	; 0x2306
    1acc:	00000128 	andeq	r0, r0, r8, lsr #2
    1ad0:	23040802 	movwcs	r0, #18434	; 0x4802
    1ad4:	10000010 	andne	r0, r0, r0, lsl r0
    1ad8:	0000147a 	andeq	r1, r0, sl, ror r4
    1adc:	17016507 	strne	r6, [r1, -r7, lsl #10]
    1ae0:	000000a3 	andeq	r0, r0, r3, lsr #1
    1ae4:	0013b003 	andseq	fp, r3, r3
    1ae8:	0e2e0800 	cdpeq	8, 2, cr0, cr14, cr0, {0}
    1aec:	0000003f 	andeq	r0, r0, pc, lsr r0
    1af0:	000b8b03 	andeq	r8, fp, r3, lsl #22
    1af4:	0e740800 	cdpeq	8, 7, cr0, cr4, cr0, {0}
    1af8:	0000003f 	andeq	r0, r0, pc, lsr r0
    1afc:	a5080411 	strge	r0, [r8, #-1041]	; 0xfffffbef
    1b00:	00034303 	andeq	r4, r3, r3, lsl #6
    1b04:	0e8e1200 	cdpeq	2, 8, cr1, cr14, cr0, {0}
    1b08:	a7080000 	strge	r0, [r8, -r0]
    1b0c:	0002fc0c 	andeq	pc, r2, ip, lsl #24
    1b10:	10d41200 	sbcsne	r1, r4, r0, lsl #4
    1b14:	a8080000 	stmdage	r8, {}	; <UNPREDICTABLE>
    1b18:	00034313 	andeq	r4, r3, r3, lsl r3
    1b1c:	5e0e0000 	cdppl	0, 0, cr0, cr14, cr0, {0}
    1b20:	53000000 	movwpl	r0, #0
    1b24:	0f000003 	svceq	0x00000003
    1b28:	000000a3 	andeq	r0, r0, r3, lsr #1
    1b2c:	08070003 	stmdaeq	r7, {r0, r1}
    1b30:	7b09a208 	blvc	26a358 <_binary_src_fatexample_img_size+0x268f58>
    1b34:	08000003 	stmdaeq	r0, {r0, r1}
    1b38:	00000bf5 	strdeq	r0, [r0], -r5
    1b3c:	9707a408 	strls	sl, [r7, -r8, lsl #8]
    1b40:	02000000 	andeq	r0, r0, #0
    1b44:	e5080023 	str	r0, [r8, #-35]	; 0xffffffdd
    1b48:	0800000d 	stmdaeq	r0, {r0, r2, r3}
    1b4c:	032105a9 			; <UNDEFINED> instruction: 0x032105a9
    1b50:	23020000 	movwcs	r0, #8192	; 0x2000
    1b54:	c4030004 	strgt	r0, [r3], #-4
    1b58:	0800000f 	stmdaeq	r0, {r0, r1, r2, r3}
    1b5c:	035303aa 	cmpeq	r3, #-1476395006	; 0xa8000002
    1b60:	04130000 	ldreq	r0, [r3], #-0
    1b64:	000f2b03 	andeq	r2, pc, r3, lsl #22
    1b68:	19160900 	ldmdbne	r6, {r8, fp}
    1b6c:	00000089 	andeq	r0, r0, r9, lsl #1
    1b70:	000b4a03 	andeq	r4, fp, r3, lsl #20
    1b74:	0d0c0a00 	vstreq	s0, [ip, #-0]
    1b78:	00000097 	muleq	r0, r7, r0
    1b7c:	000e8503 	andeq	r8, lr, r3, lsl #10
    1b80:	1b230900 	blne	8c3f88 <_binary_src_fatexample_img_size+0x8c2b88>
    1b84:	00000395 	muleq	r0, r5, r3
    1b88:	00108c14 	andseq	r8, r0, r4, lsl ip
    1b8c:	34091800 	strcc	r1, [r9], #-2048	; 0xfffff800
    1b90:	00041308 	andeq	r1, r4, r8, lsl #6
    1b94:	14580800 	ldrbne	r0, [r8], #-2048	; 0xfffff800
    1b98:	36090000 	strcc	r0, [r9], -r0
    1b9c:	00041313 	andeq	r1, r4, r3, lsl r3
    1ba0:	00230200 	eoreq	r0, r3, r0, lsl #4
    1ba4:	006b5f15 	rsbeq	r5, fp, r5, lsl pc
    1ba8:	97073709 	strls	r3, [r7, -r9, lsl #14]
    1bac:	02000000 	andeq	r0, r0, #0
    1bb0:	71080423 	tstvc	r8, r3, lsr #8
    1bb4:	09000011 	stmdbeq	r0, {r0, r4}
    1bb8:	00970b37 	addseq	r0, r7, r7, lsr fp
    1bbc:	23020000 	movwcs	r0, #8192	; 0x2000
    1bc0:	10b60808 	adcsne	r0, r6, r8, lsl #16
    1bc4:	37090000 	strcc	r0, [r9, -r0]
    1bc8:	00009714 	andeq	r9, r0, r4, lsl r7
    1bcc:	0c230200 	sfmeq	f0, 4, [r3], #-0
    1bd0:	000ca808 	andeq	sl, ip, r8, lsl #16
    1bd4:	1b370900 	blne	dc3fdc <_binary_src_fatexample_img_size+0xdc2bdc>
    1bd8:	00000097 	muleq	r0, r7, r0
    1bdc:	15102302 	ldrne	r2, [r0, #-770]	; 0xfffffcfe
    1be0:	0900785f 	stmdbeq	r0, {r0, r1, r2, r3, r4, r6, fp, ip, sp, lr}
    1be4:	04190b38 	ldreq	r0, [r9], #-2872	; 0xfffff4c8
    1be8:	23020000 	movwcs	r0, #8192	; 0x2000
    1bec:	04160014 	ldreq	r0, [r6], #-20	; 0xffffffec
    1bf0:	000003ad 	andeq	r0, r0, sp, lsr #7
    1bf4:	0003890e 	andeq	r8, r3, lr, lsl #18
    1bf8:	00042900 	andeq	r2, r4, r0, lsl #18
    1bfc:	00a30f00 	adceq	r0, r3, r0, lsl #30
    1c00:	00000000 	andeq	r0, r0, r0
    1c04:	0011ac14 	andseq	sl, r1, r4, lsl ip
    1c08:	3c092400 	cfstrscc	mvf2, [r9], {-0}
    1c0c:	0004be08 	andeq	fp, r4, r8, lsl #28
    1c10:	0d7d0800 	ldcleq	8, cr0, [sp, #-0]
    1c14:	3e090000 	cdpcc	0, 0, cr0, cr9, cr0, {0}
    1c18:	00009709 	andeq	r9, r0, r9, lsl #14
    1c1c:	00230200 	eoreq	r0, r3, r0, lsl #4
    1c20:	000c1b08 	andeq	r1, ip, r8, lsl #22
    1c24:	093f0900 	ldmdbeq	pc!, {r8, fp}	; <UNPREDICTABLE>
    1c28:	00000097 	muleq	r0, r7, r0
    1c2c:	08042302 	stmdaeq	r4, {r1, r8, r9, sp}
    1c30:	00000bc3 	andeq	r0, r0, r3, asr #23
    1c34:	97094009 	strls	r4, [r9, -r9]
    1c38:	02000000 	andeq	r0, r0, #0
    1c3c:	45080823 	strmi	r0, [r8, #-2083]	; 0xfffff7dd
    1c40:	0900000e 	stmdbeq	r0, {r1, r2, r3}
    1c44:	00970941 	addseq	r0, r7, r1, asr #18
    1c48:	23020000 	movwcs	r0, #8192	; 0x2000
    1c4c:	101a080c 	andsne	r0, sl, ip, lsl #16
    1c50:	42090000 	andmi	r0, r9, #0
    1c54:	00009709 	andeq	r9, r0, r9, lsl #14
    1c58:	10230200 	eorne	r0, r3, r0, lsl #4
    1c5c:	00102f08 	andseq	r2, r0, r8, lsl #30
    1c60:	09430900 	stmdbeq	r3, {r8, fp}^
    1c64:	00000097 	muleq	r0, r7, r0
    1c68:	08142302 	ldmdaeq	r4, {r1, r8, r9, sp}
    1c6c:	00000ba0 	andeq	r0, r0, r0, lsr #23
    1c70:	97094409 	strls	r4, [r9, -r9, lsl #8]
    1c74:	02000000 	andeq	r0, r0, #0
    1c78:	86081823 	strhi	r1, [r8], -r3, lsr #16
    1c7c:	0900000d 	stmdbeq	r0, {r0, r2, r3}
    1c80:	00970945 	addseq	r0, r7, r5, asr #18
    1c84:	23020000 	movwcs	r0, #8192	; 0x2000
    1c88:	0fd6081c 	svceq	0x00d6081c
    1c8c:	46090000 	strmi	r0, [r9], -r0
    1c90:	00009709 	andeq	r9, r0, r9, lsl #14
    1c94:	20230200 	eorcs	r0, r3, r0, lsl #4
    1c98:	0a591700 	beq	16478a0 <_binary_src_fatexample_img_size+0x16464a0>
    1c9c:	01080000 	mrseq	r0, (UNDEF: 8)
    1ca0:	0c084f09 	stceq	15, cr4, [r8], {9}
    1ca4:	08000005 	stmdaeq	r0, {r0, r2}
    1ca8:	00001343 	andeq	r1, r0, r3, asr #6
    1cac:	0c0a5009 	stceq	0, cr5, [sl], {9}
    1cb0:	02000005 	andeq	r0, r0, #5
    1cb4:	f9080023 			; <UNDEFINED> instruction: 0xf9080023
    1cb8:	09000011 	stmdbeq	r0, {r0, r4}
    1cbc:	050c0951 	streq	r0, [ip, #-2385]	; 0xfffff6af
    1cc0:	23030000 	movwcs	r0, #12288	; 0x3000
    1cc4:	80080180 	andhi	r0, r8, r0, lsl #3
    1cc8:	09000013 	stmdbeq	r0, {r0, r1, r4}
    1ccc:	03890a53 	orreq	r0, r9, #339968	; 0x53000
    1cd0:	23030000 	movwcs	r0, #12288	; 0x3000
    1cd4:	45080280 	strmi	r0, [r8, #-640]	; 0xfffffd80
    1cd8:	09000014 	stmdbeq	r0, {r2, r4}
    1cdc:	03890a56 	orreq	r0, r9, #352256	; 0x56000
    1ce0:	23030000 	movwcs	r0, #12288	; 0x3000
    1ce4:	0e000284 	cdpeq	2, 0, cr0, cr0, cr4, {4}
    1ce8:	00000387 	andeq	r0, r0, r7, lsl #7
    1cec:	0000051c 	andeq	r0, r0, ip, lsl r5
    1cf0:	0000a30f 	andeq	sl, r0, pc, lsl #6
    1cf4:	17001f00 	strne	r1, [r0, -r0, lsl #30]
    1cf8:	00001058 	andeq	r1, r0, r8, asr r0
    1cfc:	62090190 	andvs	r0, r9, #144, 2	; 0x24
    1d00:	00056808 	andeq	r6, r5, r8, lsl #16
    1d04:	14580800 	ldrbne	r0, [r8], #-2048	; 0xfffff800
    1d08:	63090000 	movwvs	r0, #36864	; 0x9000
    1d0c:	00056812 	andeq	r6, r5, r2, lsl r8
    1d10:	00230200 	eoreq	r0, r3, r0, lsl #4
    1d14:	000d9508 	andeq	r9, sp, r8, lsl #10
    1d18:	06640900 	strbteq	r0, [r4], -r0, lsl #18
    1d1c:	00000097 	muleq	r0, r7, r0
    1d20:	08042302 	stmdaeq	r4, {r1, r8, r9, sp}
    1d24:	00000b93 	muleq	r0, r3, fp
    1d28:	6e096609 	cfmadd32vs	mvax0, mvfx6, mvfx9, mvfx9
    1d2c:	02000005 	andeq	r0, r0, #5
    1d30:	59080823 	stmdbpl	r8, {r0, r1, r5, fp}
    1d34:	0900000a 	stmdbeq	r0, {r1, r3}
    1d38:	04be1e67 	ldrteq	r1, [lr], #3687	; 0xe67
    1d3c:	23030000 	movwcs	r0, #12288	; 0x3000
    1d40:	16000188 	strne	r0, [r0], -r8, lsl #3
    1d44:	00051c04 	andeq	r1, r5, r4, lsl #24
    1d48:	057e0e00 	ldrbeq	r0, [lr, #-3584]!	; 0xfffff200
    1d4c:	057e0000 	ldrbeq	r0, [lr, #-0]!
    1d50:	a30f0000 	movwge	r0, #61440	; 0xf000
    1d54:	1f000000 	svcne	0x00000000
    1d58:	84041600 	strhi	r1, [r4], #-1536	; 0xfffffa00
    1d5c:	18000005 	stmdane	r0, {r0, r2}
    1d60:	12b01401 	adcsne	r1, r0, #16777216	; 0x1000000
    1d64:	09080000 	stmdbeq	r8, {}	; <UNPREDICTABLE>
    1d68:	05b2087a 	ldreq	r0, [r2, #2170]!	; 0x87a
    1d6c:	f7080000 			; <UNDEFINED> instruction: 0xf7080000
    1d70:	0900000e 	stmdbeq	r0, {r1, r2, r3}
    1d74:	05b2117b 	ldreq	r1, [r2, #379]!	; 0x17b
    1d78:	23020000 	movwcs	r0, #8192	; 0x2000
    1d7c:	079f0800 	ldreq	r0, [pc, r0, lsl #16]
    1d80:	7c090000 	stcvc	0, cr0, [r9], {-0}
    1d84:	00009706 	andeq	r9, r0, r6, lsl #14
    1d88:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    1d8c:	5e041600 	cfmadd32pl	mvax0, mvfx1, mvfx4, mvfx0
    1d90:	14000000 	strne	r0, [r0], #-0
    1d94:	00000ca0 	andeq	r0, r0, r0, lsr #25
    1d98:	08ba0968 	ldmeq	sl!, {r3, r5, r6, r8, fp}
    1d9c:	0000072b 	andeq	r0, r0, fp, lsr #14
    1da0:	00705f15 	rsbseq	r5, r0, r5, lsl pc
    1da4:	b212bb09 	andslt	fp, r2, #9216	; 0x2400
    1da8:	02000005 	andeq	r0, r0, #5
    1dac:	5f150023 	svcpl	0x00150023
    1db0:	bc090072 	stclt	0, cr0, [r9], {114}	; 0x72
    1db4:	00009707 	andeq	r9, r0, r7, lsl #14
    1db8:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    1dbc:	00775f15 	rsbseq	r5, r7, r5, lsl pc
    1dc0:	9707bd09 	strls	fp, [r7, -r9, lsl #26]
    1dc4:	02000000 	andeq	r0, r0, #0
    1dc8:	e8080823 	stmda	r8, {r0, r1, r5, fp}
    1dcc:	0900000a 	stmdbeq	r0, {r1, r3}
    1dd0:	002c09be 	strhteq	r0, [ip], -lr
    1dd4:	23020000 	movwcs	r0, #8192	; 0x2000
    1dd8:	0f69080c 	svceq	0x0069080c
    1ddc:	bf090000 	svclt	0x00090000
    1de0:	00002c09 	andeq	r2, r0, r9, lsl #24
    1de4:	0e230200 	cdpeq	2, 2, cr0, cr3, cr0, {0}
    1de8:	66625f15 	uqadd16vs	r5, r2, r5
    1dec:	11c00900 	bicne	r0, r0, r0, lsl #18
    1df0:	00000586 	andeq	r0, r0, r6, lsl #11
    1df4:	08102302 	ldmdaeq	r0, {r1, r8, r9, sp}
    1df8:	00000adf 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    1dfc:	9707c109 	strls	ip, [r7, -r9, lsl #2]
    1e00:	02000000 	andeq	r0, r0, #0
    1e04:	98081823 	stmdals	r8, {r0, r1, r5, fp, ip}
    1e08:	0900000b 	stmdbeq	r0, {r0, r1, r3}
    1e0c:	03870ac8 	orreq	r0, r7, #200, 20	; 0xc8000
    1e10:	23020000 	movwcs	r0, #8192	; 0x2000
    1e14:	089c081c 	ldmeq	ip, {r2, r3, r4, fp}
    1e18:	ca090000 	bgt	241e20 <_binary_src_fatexample_img_size+0x240a20>
    1e1c:	0008dc1d 	andeq	sp, r8, sp, lsl ip
    1e20:	20230200 	eorcs	r0, r3, r0, lsl #4
    1e24:	0004a608 	andeq	sl, r4, r8, lsl #12
    1e28:	1dcc0900 	vstrne.16	s1, [ip]	; <UNPREDICTABLE>
    1e2c:	00000907 	andeq	r0, r0, r7, lsl #18
    1e30:	08242302 	stmdaeq	r4!, {r1, r8, r9, sp}
    1e34:	00000d22 	andeq	r0, r0, r2, lsr #26
    1e38:	2c0dcf09 	stccs	15, cr12, [sp], {9}
    1e3c:	02000009 	andeq	r0, r0, #9
    1e40:	9a082823 	bls	20bed4 <_binary_src_fatexample_img_size+0x20aad4>
    1e44:	0900000e 	stmdbeq	r0, {r1, r2, r3}
    1e48:	094709d0 	stmdbeq	r7, {r4, r6, r7, r8, fp}^
    1e4c:	23020000 	movwcs	r0, #8192	; 0x2000
    1e50:	755f152c 	ldrbvc	r1, [pc, #-1324]	; 192c <_binary_src_fatexample_img_size+0x52c>
    1e54:	d3090062 	movwle	r0, #36962	; 0x9062
    1e58:	00058611 	andeq	r8, r5, r1, lsl r6
    1e5c:	30230200 	eorcc	r0, r3, r0, lsl #4
    1e60:	70755f15 	rsbsvc	r5, r5, r5, lsl pc
    1e64:	12d40900 	sbcsne	r0, r4, #0, 18
    1e68:	000005b2 			; <UNDEFINED> instruction: 0x000005b2
    1e6c:	15382302 	ldrne	r2, [r8, #-770]!	; 0xfffffcfe
    1e70:	0072755f 	rsbseq	r7, r2, pc, asr r5
    1e74:	9707d509 	strls	sp, [r7, -r9, lsl #10]
    1e78:	02000000 	andeq	r0, r0, #0
    1e7c:	28083c23 	stmdacs	r8, {r0, r1, r5, sl, fp, ip, sp}
    1e80:	0900000d 	stmdbeq	r0, {r0, r2, r3}
    1e84:	094d11d8 	stmdbeq	sp, {r3, r4, r6, r7, r8, ip}^
    1e88:	23020000 	movwcs	r0, #8192	; 0x2000
    1e8c:	13d40840 	bicsne	r0, r4, #64, 16	; 0x400000
    1e90:	d9090000 	stmdble	r9, {}	; <UNPREDICTABLE>
    1e94:	00095d11 	andeq	r5, r9, r1, lsl sp
    1e98:	43230200 			; <UNDEFINED> instruction: 0x43230200
    1e9c:	626c5f15 	rsbvs	r5, ip, #21, 30	; 0x54
    1ea0:	11dc0900 	bicsne	r0, ip, r0, lsl #18
    1ea4:	00000586 	andeq	r0, r0, r6, lsl #11
    1ea8:	08442302 	stmdaeq	r4, {r1, r8, r9, sp}^
    1eac:	000011a3 	andeq	r1, r0, r3, lsr #3
    1eb0:	9707df09 	strls	sp, [r7, -r9, lsl #30]
    1eb4:	02000000 	andeq	r0, r0, #0
    1eb8:	11084c23 	tstne	r8, r3, lsr #24
    1ebc:	09000011 	stmdbeq	r0, {r0, r4}
    1ec0:	03090ae0 	movweq	r0, #39648	; 0x9ae0
    1ec4:	23020000 	movwcs	r0, #8192	; 0x2000
    1ec8:	0c4f0850 	mcrreq	8, 5, r0, pc, cr0
    1ecc:	e3090000 	movw	r0, #36864	; 0x9000
    1ed0:	00074a12 	andeq	r4, r7, r2, lsl sl
    1ed4:	54230200 	strtpl	r0, [r3], #-512	; 0xfffffe00
    1ed8:	0011b108 	andseq	fp, r1, r8, lsl #2
    1edc:	0ce70900 			; <UNDEFINED> instruction: 0x0ce70900
    1ee0:	000003a1 	andeq	r0, r0, r1, lsr #7
    1ee4:	08582302 	ldmdaeq	r8, {r1, r8, r9, sp}^
    1ee8:	00001060 	andeq	r1, r0, r0, rrx
    1eec:	7b0ee909 	blvc	3bc318 <_binary_src_fatexample_img_size+0x3baf18>
    1ef0:	02000003 	andeq	r0, r0, #3
    1ef4:	3d085c23 	stccc	12, cr5, [r8, #-140]	; 0xffffff74
    1ef8:	09000014 	stmdbeq	r0, {r2, r4}
    1efc:	009709ea 	addseq	r0, r7, sl, ror #19
    1f00:	23020000 	movwcs	r0, #8192	; 0x2000
    1f04:	01190064 	tsteq	r9, r4, rrx
    1f08:	00000097 	muleq	r0, r7, r0
    1f0c:	0000074a 	andeq	r0, r0, sl, asr #14
    1f10:	00074a1a 	andeq	r4, r7, sl, lsl sl
    1f14:	03871a00 	orreq	r1, r7, #0, 20
    1f18:	ca1a0000 	bgt	681f20 <_binary_src_fatexample_img_size+0x680b20>
    1f1c:	1a000008 	bne	1f44 <_binary_src_fatexample_img_size+0xb44>
    1f20:	00000097 	muleq	r0, r7, r0
    1f24:	55041600 	strpl	r1, [r4, #-1536]	; 0xfffffa00
    1f28:	04000007 	streq	r0, [r0], #-7
    1f2c:	0000074a 	andeq	r0, r0, sl, asr #14
    1f30:	0013601b 	andseq	r6, r3, fp, lsl r0
    1f34:	09042800 	stmdbeq	r4, {fp, sp}
    1f38:	ca080265 	bgt	2028d4 <_binary_src_fatexample_img_size+0x2014d4>
    1f3c:	0c000008 	stceq	0, cr0, [r0], {8}
    1f40:	00000ffb 	strdeq	r0, [r0], -fp
    1f44:	07026709 	streq	r6, [r2, -r9, lsl #14]
    1f48:	00000097 	muleq	r0, r7, r0
    1f4c:	0c002302 	stceq	3, cr2, [r0], {2}
    1f50:	00000edc 	ldrdeq	r0, [r0], -ip
    1f54:	0b026c09 	bleq	9cf80 <_binary_src_fatexample_img_size+0x9bb80>
    1f58:	000009bf 			; <UNDEFINED> instruction: 0x000009bf
    1f5c:	0c042302 	stceq	3, cr2, [r4], {2}
    1f60:	00000b83 	andeq	r0, r0, r3, lsl #23
    1f64:	14026c09 	strne	r6, [r2], #-3081	; 0xfffff3f7
    1f68:	000009bf 			; <UNDEFINED> instruction: 0x000009bf
    1f6c:	0c082302 	stceq	3, cr2, [r8], {2}
    1f70:	00001469 	andeq	r1, r0, r9, ror #8
    1f74:	1e026c09 	cdpne	12, 0, cr6, cr2, cr9, {0}
    1f78:	000009bf 			; <UNDEFINED> instruction: 0x000009bf
    1f7c:	0c0c2302 	stceq	3, cr2, [ip], {2}
    1f80:	00000d90 	muleq	r0, r0, sp
    1f84:	08026e09 	stmdaeq	r2, {r0, r3, r9, sl, fp, sp, lr}
    1f88:	00000097 	muleq	r0, r7, r0
    1f8c:	0c102302 	ldceq	3, cr2, [r0], {2}
    1f90:	00000d3b 	andeq	r0, r0, fp, lsr sp
    1f94:	08026f09 	stmdaeq	r2, {r0, r3, r8, r9, sl, fp, sp, lr}
    1f98:	00000bf8 	strdeq	r0, [r0], -r8
    1f9c:	0c142302 	ldceq	3, cr2, [r4], {2}
    1fa0:	00001424 	andeq	r1, r0, r4, lsr #8
    1fa4:	07027209 	streq	r7, [r2, -r9, lsl #4]
    1fa8:	00000097 	muleq	r0, r7, r0
    1fac:	0c302302 	ldceq	3, cr2, [r0], #-8
    1fb0:	0000133b 	andeq	r1, r0, fp, lsr r3
    1fb4:	16027309 	strne	r7, [r2], -r9, lsl #6
    1fb8:	00000c0e 	andeq	r0, r0, lr, lsl #24
    1fbc:	0c342302 	ldceq	3, cr2, [r4], #-8
    1fc0:	00000ea1 	andeq	r0, r0, r1, lsr #29
    1fc4:	07027509 	streq	r7, [r2, -r9, lsl #10]
    1fc8:	00000097 	muleq	r0, r7, r0
    1fcc:	0c382302 	ldceq	3, cr2, [r8], #-8
    1fd0:	00000fa4 	andeq	r0, r0, r4, lsr #31
    1fd4:	0a027709 	beq	9fc00 <_binary_src_fatexample_img_size+0x9e800>
    1fd8:	00000c20 	andeq	r0, r0, r0, lsr #24
    1fdc:	0c3c2302 	ldceq	3, cr2, [ip], #-8
    1fe0:	00000baa 	andeq	r0, r0, sl, lsr #23
    1fe4:	13027a09 	movwne	r7, #10761	; 0x2a09
    1fe8:	00000413 	andeq	r0, r0, r3, lsl r4
    1fec:	0c402302 	mcrreq	3, 0, r2, r0, cr2
    1ff0:	00000c74 	andeq	r0, r0, r4, ror ip
    1ff4:	07027b09 	streq	r7, [r2, -r9, lsl #22]
    1ff8:	00000097 	muleq	r0, r7, r0
    1ffc:	0c442302 	mcrreq	3, 0, r2, r4, cr2
    2000:	00000ded 	andeq	r0, r0, sp, ror #27
    2004:	13027c09 	movwne	r7, #11273	; 0x2c09
    2008:	00000413 	andeq	r0, r0, r3, lsl r4
    200c:	0c482302 	mcrreq	3, 0, r2, r8, cr2
    2010:	00000f1b 	andeq	r0, r0, fp, lsl pc
    2014:	14027d09 	strne	r7, [r2], #-3337	; 0xfffff2f7
    2018:	00000c26 	andeq	r0, r0, r6, lsr #24
    201c:	0c4c2302 	mcrreq	3, 0, r2, ip, cr2
    2020:	00001169 	andeq	r1, r0, r9, ror #2
    2024:	07028009 	streq	r8, [r2, -r9]
    2028:	00000097 	muleq	r0, r7, r0
    202c:	0c502302 	mrrceq	3, 0, r2, r0, cr2
    2030:	00001222 	andeq	r1, r0, r2, lsr #4
    2034:	09028109 	stmdbeq	r2, {r0, r3, r8, pc}
    2038:	000008ca 	andeq	r0, r0, sl, asr #17
    203c:	0c542302 	mrrceq	3, 0, r2, r4, cr2
    2040:	00001164 	andeq	r1, r0, r4, ror #2
    2044:	0702a409 	streq	sl, [r2, -r9, lsl #8]
    2048:	00000bd3 	ldrdeq	r0, [r0], -r3
    204c:	0c582302 	mrrceq	3, 0, r2, r8, cr2
    2050:	00001058 	andeq	r1, r0, r8, asr r0
    2054:	1302a809 	movwne	sl, #10249	; 0x2809
    2058:	00000568 	andeq	r0, r0, r8, ror #10
    205c:	02c82303 	sbceq	r2, r8, #201326592	; 0xc000000
    2060:	000e680c 	andeq	r6, lr, ip, lsl #16
    2064:	02a90900 	adceq	r0, r9, #0, 18
    2068:	00051c12 	andeq	r1, r5, r2, lsl ip
    206c:	cc230300 	stcgt	3, cr0, [r3], #-0
    2070:	0e4f0c02 	cdpeq	12, 4, cr0, cr15, cr2, {0}
    2074:	ad090000 	stcge	0, cr0, [r9, #-0]
    2078:	0c380c02 	ldceq	12, cr0, [r8], #-8
    207c:	23030000 	movwcs	r0, #12288	; 0x3000
    2080:	f20c05dc 	vqrshl.s8	q0, q6, q14
    2084:	09000012 	stmdbeq	r0, {r1, r4}
    2088:	7a1002b2 	bvc	402b58 <_binary_src_fatexample_img_size+0x401758>
    208c:	03000009 	movweq	r0, #9
    2090:	0c05e023 	stceq	0, cr14, [r5], {35}	; 0x23
    2094:	000010b1 	strheq	r1, [r0], -r1	; <UNPREDICTABLE>
    2098:	0a02b409 	beq	af0c4 <_binary_src_fatexample_img_size+0xadcc4>
    209c:	00000c44 	andeq	r0, r0, r4, asr #24
    20a0:	05ec2303 	strbeq	r2, [ip, #771]!	; 0x303
    20a4:	d0041600 	andle	r1, r4, r0, lsl #12
    20a8:	02000008 	andeq	r0, r0, #8
    20ac:	025f0801 	subseq	r0, pc, #65536	; 0x10000
    20b0:	d0040000 	andle	r0, r4, r0
    20b4:	16000008 	strne	r0, [r0], -r8
    20b8:	00072b04 	andeq	r2, r7, r4, lsl #22
    20bc:	97011900 	strls	r1, [r1, -r0, lsl #18]
    20c0:	01000000 	mrseq	r0, (UNDEF: 0)
    20c4:	1a000009 	bne	20f0 <_binary_src_fatexample_img_size+0xcf0>
    20c8:	0000074a 	andeq	r0, r0, sl, asr #14
    20cc:	0003871a 	andeq	r8, r3, sl, lsl r7
    20d0:	09011a00 	stmdbeq	r1, {r9, fp, ip}
    20d4:	971a0000 	ldrls	r0, [sl, -r0]
    20d8:	00000000 	andeq	r0, r0, r0
    20dc:	08d70416 	ldmeq	r7, {r1, r2, r4, sl}^
    20e0:	04160000 	ldreq	r0, [r6], #-0
    20e4:	000008e2 	andeq	r0, r0, r2, ror #17
    20e8:	03150119 	tsteq	r5, #1073741830	; 0x40000006
    20ec:	092c0000 	stmdbeq	ip!, {}	; <UNPREDICTABLE>
    20f0:	4a1a0000 	bmi	6820f8 <_binary_src_fatexample_img_size+0x680cf8>
    20f4:	1a000007 	bne	2118 <_binary_src_fatexample_img_size+0xd18>
    20f8:	00000387 	andeq	r0, r0, r7, lsl #7
    20fc:	0003151a 	andeq	r1, r3, sl, lsl r5
    2100:	00971a00 	addseq	r1, r7, r0, lsl #20
    2104:	16000000 	strne	r0, [r0], -r0
    2108:	00090d04 	andeq	r0, r9, r4, lsl #26
    210c:	97011900 	strls	r1, [r1, -r0, lsl #18]
    2110:	47000000 	strmi	r0, [r0, -r0]
    2114:	1a000009 	bne	2140 <_binary_src_fatexample_img_size+0xd40>
    2118:	0000074a 	andeq	r0, r0, sl, asr #14
    211c:	0003871a 	andeq	r8, r3, sl, lsl r7
    2120:	04160000 	ldreq	r0, [r6], #-0
    2124:	00000932 	andeq	r0, r0, r2, lsr r9
    2128:	00005e0e 	andeq	r5, r0, lr, lsl #28
    212c:	00095d00 	andeq	r5, r9, r0, lsl #26
    2130:	00a30f00 	adceq	r0, r3, r0, lsl #30
    2134:	00020000 	andeq	r0, r2, r0
    2138:	00005e0e 	andeq	r5, r0, lr, lsl #28
    213c:	00096d00 	andeq	r6, r9, r0, lsl #26
    2140:	00a30f00 	adceq	r0, r3, r0, lsl #30
    2144:	00000000 	andeq	r0, r0, r0
    2148:	000bbc10 	andeq	fp, fp, r0, lsl ip
    214c:	01240900 			; <UNDEFINED> instruction: 0x01240900
    2150:	0005b81a 	andeq	fp, r5, sl, lsl r8
    2154:	12ec1c00 	rscne	r1, ip, #0, 24
    2158:	090c0000 	stmdbeq	ip, {}	; <UNPREDICTABLE>
    215c:	b9080128 	stmdblt	r8, {r3, r5, r8}
    2160:	0c000009 	stceq	0, cr0, [r0], {9}
    2164:	00001458 	andeq	r1, r0, r8, asr r4
    2168:	11012a09 	tstne	r1, r9, lsl #20
    216c:	000009b9 			; <UNDEFINED> instruction: 0x000009b9
    2170:	0c002302 	stceq	3, cr2, [r0], {2}
    2174:	000011d5 	ldrdeq	r1, [r0], -r5
    2178:	07012b09 	streq	r2, [r1, -r9, lsl #22]
    217c:	00000097 	muleq	r0, r7, r0
    2180:	0c042302 	stceq	3, cr2, [r4], {2}
    2184:	00000e94 	muleq	r0, r4, lr
    2188:	0b012c09 	bleq	4d1b4 <_binary_src_fatexample_img_size+0x4bdb4>
    218c:	000009bf 			; <UNDEFINED> instruction: 0x000009bf
    2190:	00082302 	andeq	r2, r8, r2, lsl #6
    2194:	097a0416 	ldmdbeq	sl!, {r1, r2, r4, sl}^
    2198:	04160000 	ldreq	r0, [r6], #-0
    219c:	0000096d 	andeq	r0, r0, sp, ror #18
    21a0:	000c391c 	andeq	r3, ip, ip, lsl r9
    21a4:	44090e00 	strmi	r0, [r9], #-3584	; 0xfffff200
    21a8:	0a040801 	beq	1041b4 <_binary_src_fatexample_img_size+0x102db4>
    21ac:	4d0c0000 	stcmi	0, cr0, [ip, #-0]
    21b0:	09000014 	stmdbeq	r0, {r2, r4}
    21b4:	04120145 	ldreq	r0, [r2], #-325	; 0xfffffebb
    21b8:	0200000a 	andeq	r0, r0, #10
    21bc:	250c0023 	strcs	r0, [ip, #-35]	; 0xffffffdd
    21c0:	0900000f 	stmdbeq	r0, {r0, r1, r2, r3}
    21c4:	04120146 	ldreq	r0, [r2], #-326	; 0xfffffeba
    21c8:	0200000a 	andeq	r0, r0, #10
    21cc:	670c0623 	strvs	r0, [ip, -r3, lsr #12]
    21d0:	09000012 	stmdbeq	r0, {r1, r4}
    21d4:	76120147 	ldrvc	r0, [r2], -r7, asr #2
    21d8:	02000000 	andeq	r0, r0, #0
    21dc:	0e000c23 	cdpeq	12, 0, cr0, cr0, cr3, {1}
    21e0:	00000076 	andeq	r0, r0, r6, ror r0
    21e4:	00000a14 	andeq	r0, r0, r4, lsl sl
    21e8:	0000a30f 	andeq	sl, r0, pc, lsl #6
    21ec:	0b000200 	bleq	29f4 <_binary_src_fatexample_img_size+0x15f4>
    21f0:	028509d0 	addeq	r0, r5, #208, 18	; 0x340000
    21f4:	000b5807 	andeq	r5, fp, r7, lsl #16
    21f8:	13da0c00 	bicsne	r0, sl, #0, 24
    21fc:	87090000 	strhi	r0, [r9, -r0]
    2200:	00a31802 	adceq	r1, r3, r2, lsl #16
    2204:	23020000 	movwcs	r0, #8192	; 0x2000
    2208:	12fa0c00 	rscsne	r0, sl, #0, 24
    220c:	88090000 	stmdahi	r9, {}	; <UNPREDICTABLE>
    2210:	08ca1202 	stmiaeq	sl, {r1, r9, ip}^
    2214:	23020000 	movwcs	r0, #8192	; 0x2000
    2218:	0c930c04 	ldceq	12, cr0, [r3], {4}
    221c:	89090000 	stmdbhi	r9, {}	; <UNPREDICTABLE>
    2220:	0b581002 	bleq	1606230 <_binary_src_fatexample_img_size+0x1604e30>
    2224:	23020000 	movwcs	r0, #8192	; 0x2000
    2228:	11340c08 	teqne	r4, r8, lsl #24
    222c:	8a090000 	bhi	242234 <_binary_src_fatexample_img_size+0x240e34>
    2230:	04291702 	strteq	r1, [r9], #-1794	; 0xfffff8fe
    2234:	23020000 	movwcs	r0, #8192	; 0x2000
    2238:	0ee30c24 	cdpeq	12, 14, cr0, cr3, cr4, {1}
    223c:	8b090000 	blhi	242244 <_binary_src_fatexample_img_size+0x240e44>
    2240:	00970f02 	addseq	r0, r7, r2, lsl #30
    2244:	23020000 	movwcs	r0, #8192	; 0x2000
    2248:	14530c48 	ldrbne	r0, [r3], #-3144	; 0xfffff3b8
    224c:	8c090000 	stchi	0, cr0, [r9], {-0}
    2250:	00902c02 	addseq	r2, r0, r2, lsl #24
    2254:	23020000 	movwcs	r0, #8192	; 0x2000
    2258:	0a880c50 	beq	fe2053a0 <BootRAM+0xd175b41>
    225c:	8d090000 	stchi	0, cr0, [r9, #-0]
    2260:	09c51a02 	stmibeq	r5, {r1, r9, fp, ip}^
    2264:	23020000 	movwcs	r0, #8192	; 0x2000
    2268:	0e220c58 	mcreq	12, 1, r0, cr2, cr8, {2}
    226c:	8e090000 	cdphi	0, 0, cr0, cr9, cr0, {0}
    2270:	037b1602 	cmneq	fp, #2097152	; 0x200000
    2274:	23020000 	movwcs	r0, #8192	; 0x2000
    2278:	13070c68 	movwne	r0, #31848	; 0x7c68
    227c:	8f090000 	svchi	0x00090000
    2280:	037b1602 	cmneq	fp, #2097152	; 0x200000
    2284:	23020000 	movwcs	r0, #8192	; 0x2000
    2288:	0a6c0c70 	beq	1b05450 <_binary_src_fatexample_img_size+0x1b04050>
    228c:	90090000 	andls	r0, r9, r0
    2290:	037b1602 	cmneq	fp, #2097152	; 0x200000
    2294:	23020000 	movwcs	r0, #8192	; 0x2000
    2298:	11790c78 	cmnne	r9, r8, ror ip
    229c:	91090000 	mrsls	r0, (UNDEF: 9)
    22a0:	0b681002 	bleq	1a062b0 <_binary_src_fatexample_img_size+0x1a04eb0>
    22a4:	23030000 	movwcs	r0, #12288	; 0x3000
    22a8:	b40c0180 	strlt	r0, [ip], #-384	; 0xfffffe80
    22ac:	0900000a 	stmdbeq	r0, {r1, r3}
    22b0:	78100292 	ldmdavc	r0, {r1, r4, r7, r9}
    22b4:	0300000b 	movweq	r0, #11
    22b8:	0c018823 	stceq	8, cr8, [r1], {35}	; 0x23
    22bc:	00001245 	andeq	r1, r0, r5, asr #4
    22c0:	0f029309 	svceq	0x00029309
    22c4:	00000097 	muleq	r0, r7, r0
    22c8:	01a02303 	lsleq	r2, r3, #6
    22cc:	000b5c0c 	andeq	r5, fp, ip, lsl #24
    22d0:	02940900 	addseq	r0, r4, #0, 18
    22d4:	00037b16 	andeq	r7, r3, r6, lsl fp
    22d8:	a4230300 	strtge	r0, [r3], #-768	; 0xfffffd00
    22dc:	0e590c01 	cdpeq	12, 5, cr0, cr9, cr1, {0}
    22e0:	95090000 	strls	r0, [r9, #-0]
    22e4:	037b1602 	cmneq	fp, #2097152	; 0x200000
    22e8:	23030000 	movwcs	r0, #12288	; 0x3000
    22ec:	d40c01ac 	strle	r0, [ip], #-428	; 0xfffffe54
    22f0:	0900000d 	stmdbeq	r0, {r0, r2, r3}
    22f4:	7b160296 	blvc	582d54 <_binary_src_fatexample_img_size+0x581954>
    22f8:	03000003 	movweq	r0, #3
    22fc:	0c01b423 	cfstrseq	mvf11, [r1], {35}	; 0x23
    2300:	00000f5a 	andeq	r0, r0, sl, asr pc
    2304:	16029709 	strne	r9, [r2], -r9, lsl #14
    2308:	0000037b 	andeq	r0, r0, fp, ror r3
    230c:	01bc2303 			; <UNDEFINED> instruction: 0x01bc2303
    2310:	000fe10c 	andeq	lr, pc, ip, lsl #2
    2314:	02980900 	addseq	r0, r8, #0, 18
    2318:	00037b16 	andeq	r7, r3, r6, lsl fp
    231c:	c4230300 	strtgt	r0, [r3], #-768	; 0xfffffd00
    2320:	0ff90c01 	svceq	0x00f90c01
    2324:	99090000 	stmdbls	r9, {}	; <UNPREDICTABLE>
    2328:	00970802 	addseq	r0, r7, r2, lsl #16
    232c:	23030000 	movwcs	r0, #12288	; 0x3000
    2330:	0e0001cc 	adfeqdm	f0, f0, #4.0
    2334:	000008d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    2338:	00000b68 	andeq	r0, r0, r8, ror #22
    233c:	0000a30f 	andeq	sl, r0, pc, lsl #6
    2340:	0e001900 	vmlaeq.f16	s2, s0, s0	; <UNPREDICTABLE>
    2344:	000008d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    2348:	00000b78 	andeq	r0, r0, r8, ror fp
    234c:	0000a30f 	andeq	sl, r0, pc, lsl #6
    2350:	0e000700 	cdpeq	7, 0, cr0, cr0, cr0, {0}
    2354:	000008d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    2358:	00000b88 	andeq	r0, r0, r8, lsl #23
    235c:	0000a30f 	andeq	sl, r0, pc, lsl #6
    2360:	0b001700 	bleq	7f68 <_binary_src_fatexample_img_size+0x6b68>
    2364:	029e09f0 	addseq	r0, lr, #240, 18	; 0x3c0000
    2368:	000bb307 	andeq	fp, fp, r7, lsl #6
    236c:	0c320c00 	ldceq	12, cr0, [r2], #-0
    2370:	a1090000 	mrsge	r0, (UNDEF: 9)
    2374:	0bb31b02 	bleq	fecc8f84 <BootRAM+0xdc39725>
    2378:	23020000 	movwcs	r0, #8192	; 0x2000
    237c:	14710c00 	ldrbtne	r0, [r1], #-3072	; 0xfffff400
    2380:	a2090000 	andge	r0, r9, #0
    2384:	0bc31802 	bleq	ff0c8394 <BootRAM+0xe038b35>
    2388:	23020000 	movwcs	r0, #8192	; 0x2000
    238c:	b20e0078 	andlt	r0, lr, #120	; 0x78
    2390:	c3000005 	movwgt	r0, #5
    2394:	0f00000b 	svceq	0x0000000b
    2398:	000000a3 	andeq	r0, r0, r3, lsr #1
    239c:	a30e001d 	movwge	r0, #57373	; 0xe01d
    23a0:	d3000000 	movwle	r0, #0
    23a4:	0f00000b 	svceq	0x0000000b
    23a8:	000000a3 	andeq	r0, r0, r3, lsr #1
    23ac:	f01d001d 			; <UNDEFINED> instruction: 0xf01d001d
    23b0:	03028309 	movweq	r8, #8969	; 0x2309
    23b4:	00000bf8 	strdeq	r0, [r0], -r8
    23b8:	0013601e 	andseq	r6, r3, lr, lsl r0
    23bc:	029a0900 	addseq	r0, sl, #0, 18
    23c0:	000a140b 	andeq	r1, sl, fp, lsl #8
    23c4:	115c1e00 	cmpne	ip, r0, lsl #28
    23c8:	a3090000 	movwge	r0, #36864	; 0x9000
    23cc:	0b880b02 	bleq	fe204fdc <BootRAM+0xd17577d>
    23d0:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    23d4:	000008d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    23d8:	00000c08 	andeq	r0, r0, r8, lsl #24
    23dc:	0000a30f 	andeq	sl, r0, pc, lsl #6
    23e0:	1f001800 	svcne	0x00001800
    23e4:	0000145e 	andeq	r1, r0, lr, asr r4
    23e8:	08041601 	stmdaeq	r4, {r0, r9, sl, ip}
    23ec:	2000000c 	andcs	r0, r0, ip
    23f0:	000c2001 	andeq	r2, ip, r1
    23f4:	074a1a00 	strbeq	r1, [sl, -r0, lsl #20]
    23f8:	16000000 	strne	r0, [r0], -r0
    23fc:	000c1404 	andeq	r1, ip, r4, lsl #8
    2400:	13041600 	movwne	r1, #17920	; 0x4600
    2404:	20000004 	andcs	r0, r0, r4
    2408:	000c3801 	andeq	r3, ip, r1, lsl #16
    240c:	00971a00 	addseq	r1, r7, r0, lsl #20
    2410:	16000000 	strne	r0, [r0], -r0
    2414:	000c3e04 	andeq	r3, ip, r4, lsl #28
    2418:	2c041600 	stccs	6, cr1, [r4], {-0}
    241c:	0e00000c 	cdpeq	0, 0, cr0, cr0, cr12, {0}
    2420:	0000096d 	andeq	r0, r0, sp, ror #18
    2424:	00000c54 	andeq	r0, r0, r4, asr ip
    2428:	0000a30f 	andeq	sl, r0, pc, lsl #6
    242c:	09000200 	stmdbeq	r0, {r9}
    2430:	000010e2 	andeq	r1, r0, r2, ror #1
    2434:	17033309 	strne	r3, [r3, -r9, lsl #6]
    2438:	0000074a 	andeq	r0, r0, sl, asr #14
    243c:	db090101 	blle	242848 <_binary_src_fatexample_img_size+0x241448>
    2440:	09000010 	stmdbeq	r0, {r4}
    2444:	501d0334 	andspl	r0, sp, r4, lsr r3
    2448:	01000007 	tsteq	r0, r7
    244c:	00590e01 	subseq	r0, r9, r1, lsl #28
    2450:	0c7d0000 	ldcleq	0, cr0, [sp], #-0
    2454:	00210000 	eoreq	r0, r1, r0
    2458:	000c7204 	andeq	r7, ip, r4, lsl #4
    245c:	140f2200 	strne	r2, [pc], #-512	; 2464 <_binary_src_fatexample_img_size+0x1064>
    2460:	05010000 	streq	r0, [r1, #-0]
    2464:	000a1116 	andeq	r1, sl, r6, lsl r1
    2468:	000c7d00 	andeq	r7, ip, r0, lsl #26
    246c:	22010100 	andcs	r0, r1, #0, 2
    2470:	00000b20 	andeq	r0, r0, r0, lsr #22
    2474:	f5160601 			; <UNDEFINED> instruction: 0xf5160601
    2478:	7d00000c 	stcvc	0, cr0, [r0, #-48]	; 0xffffffd0
    247c:	0100000c 	tsteq	r0, ip
    2480:	00590e01 	subseq	r0, r9, r1, lsl #28
    2484:	0cb60000 	ldceq	0, cr0, [r6]
    2488:	a30f0000 	movwge	r0, #61440	; 0xf000
    248c:	11000000 	mrsne	r0, (UNDEF: 0)
    2490:	0ca60400 	cfstrseq	mvf0, [r6]
    2494:	52230000 	eorpl	r0, r3, #0
    2498:	01000012 	tsteq	r0, r2, lsl r0
    249c:	0cb6161d 	ldceq	6, cr1, [r6], #116	; 0x74
    24a0:	03050000 	movweq	r0, #20480	; 0x5000
    24a4:	08000e7a 	stmdaeq	r0, {r1, r3, r4, r5, r6, r9, sl, fp}
    24a8:	0000590e 	andeq	r5, r0, lr, lsl #18
    24ac:	000cdd00 	andeq	sp, ip, r0, lsl #26
    24b0:	00a30f00 	adceq	r0, r3, r0, lsl #30
    24b4:	00090000 	andeq	r0, r9, r0
    24b8:	000ccd04 	andeq	ip, ip, r4, lsl #26
    24bc:	11b72300 			; <UNDEFINED> instruction: 0x11b72300
    24c0:	30010000 	andcc	r0, r1, r0
    24c4:	000cdd16 	andeq	sp, ip, r6, lsl sp
    24c8:	ac030500 	cfstr32ge	mvfx0, [r3], {-0}
    24cc:	0e08000e 	cdpeq	0, 0, cr0, cr8, cr14, {0}
    24d0:	00000059 	andeq	r0, r0, r9, asr r0
    24d4:	00000d04 	andeq	r0, r0, r4, lsl #26
    24d8:	0000a30f 	andeq	sl, r0, pc, lsl #6
    24dc:	04001f00 	streq	r1, [r0], #-3840	; 0xfffff100
    24e0:	00000cf4 	strdeq	r0, [r0], -r4
    24e4:	000c7e23 	andeq	r7, ip, r3, lsr #28
    24e8:	163e0100 	ldrtne	r0, [lr], -r0, lsl #2
    24ec:	00000d04 	andeq	r0, r0, r4, lsl #26
    24f0:	0e8c0305 	cdpeq	3, 8, cr0, cr12, cr5, {0}
    24f4:	43140800 	tstmi	r4, #0, 16
    24f8:	04000011 	streq	r0, [r0], #-17	; 0xffffffef
    24fc:	56016901 	strpl	r6, [r1], -r1, lsl #18
    2500:	0800000d 	stmdaeq	r0, {r0, r2, r3}
    2504:	0000141c 	andeq	r1, r0, ip, lsl r4
    2508:	4d016901 	vstrmi.16	s12, [r1, #-2]	; <UNPREDICTABLE>
    250c:	02000000 	andeq	r0, r0, #0
    2510:	a0080023 	andge	r0, r8, r3, lsr #32
    2514:	01000012 	tsteq	r0, r2, lsl r0
    2518:	004d0169 	subeq	r0, sp, r9, ror #2
    251c:	23020000 	movwcs	r0, #8192	; 0x2000
    2520:	10a90801 	adcne	r0, r9, r1, lsl #16
    2524:	69010000 	stmdbvs	r1, {}	; <UNPREDICTABLE>
    2528:	000d5b01 	andeq	r5, sp, r1, lsl #22
    252c:	02230200 	eoreq	r0, r3, #0, 4
    2530:	0d1b0400 	cfldrseq	mvf0, [fp, #-0]
    2534:	650e0000 	strvs	r0, [lr, #-0]
    2538:	6b000000 	blvs	2540 <_binary_src_fatexample_img_size+0x1140>
    253c:	0f00000d 	svceq	0x0000000d
    2540:	000000a3 	andeq	r0, r0, r3, lsr #1
    2544:	43230000 			; <UNDEFINED> instruction: 0x43230000
    2548:	01000011 	tsteq	r0, r1, lsl r0
    254c:	0d560169 	ldfeqe	f0, [r6, #-420]	; 0xfffffe5c
    2550:	03050000 	movweq	r0, #20480	; 0x5000
    2554:	08000eb6 	stmdaeq	r0, {r1, r2, r4, r5, r7, r9, sl, fp}
    2558:	000e0014 	andeq	r0, lr, r4, lsl r0
    255c:	6a011600 	bvs	47d64 <_binary_src_fatexample_img_size+0x46964>
    2560:	000db801 	andeq	fp, sp, r1, lsl #16
    2564:	141c0800 	ldrne	r0, [ip], #-2048	; 0xfffff800
    2568:	6a010000 	bvs	42570 <_binary_src_fatexample_img_size+0x41170>
    256c:	00004d01 	andeq	r4, r0, r1, lsl #26
    2570:	00230200 	eoreq	r0, r3, r0, lsl #4
    2574:	0012a008 	andseq	sl, r2, r8
    2578:	016a0100 	cmneq	sl, r0, lsl #2
    257c:	0000004d 	andeq	r0, r0, sp, asr #32
    2580:	08012302 	stmdaeq	r1, {r1, r8, r9, sp}
    2584:	000010a9 	andeq	r1, r0, r9, lsr #1
    2588:	bd016a01 	vstrlt	s12, [r1, #-4]
    258c:	0200000d 	andeq	r0, r0, #13
    2590:	04000223 	streq	r0, [r0], #-547	; 0xfffffddd
    2594:	00000d7d 	andeq	r0, r0, sp, ror sp
    2598:	0000650e 	andeq	r6, r0, lr, lsl #10
    259c:	000dcd00 	andeq	ip, sp, r0, lsl #26
    25a0:	00a30f00 	adceq	r0, r3, r0, lsl #30
    25a4:	00090000 	andeq	r0, r9, r0
    25a8:	000e0023 	andeq	r0, lr, r3, lsr #32
    25ac:	016a0100 	cmneq	sl, r0, lsl #2
    25b0:	00000db8 			; <UNDEFINED> instruction: 0x00000db8
    25b4:	0eba0305 	cdpeq	3, 11, cr0, cr10, cr5, {0}
    25b8:	67140800 	ldrvs	r0, [r4, -r0, lsl #16]
    25bc:	10000013 	andne	r0, r0, r3, lsl r0
    25c0:	1a016b01 	bne	5d1cc <_binary_src_fatexample_img_size+0x5bdcc>
    25c4:	0800000e 	stmdaeq	r0, {r1, r2, r3}
    25c8:	0000141c 	andeq	r1, r0, ip, lsl r4
    25cc:	4d016b01 	vstrmi	d6, [r1, #-4]
    25d0:	02000000 	andeq	r0, r0, #0
    25d4:	a0080023 	andge	r0, r8, r3, lsr #32
    25d8:	01000012 	tsteq	r0, r2, lsl r0
    25dc:	004d016b 	subeq	r0, sp, fp, ror #2
    25e0:	23020000 	movwcs	r0, #8192	; 0x2000
    25e4:	10a90801 	adcne	r0, r9, r1, lsl #16
    25e8:	6b010000 	blvs	425f0 <_binary_src_fatexample_img_size+0x411f0>
    25ec:	000e1f01 	andeq	r1, lr, r1, lsl #30
    25f0:	02230200 	eoreq	r0, r3, #0, 4
    25f4:	0ddf0400 	cfldrdeq	mvd0, [pc]	; 25fc <_binary_src_fatexample_img_size+0x11fc>
    25f8:	650e0000 	strvs	r0, [lr, #-0]
    25fc:	2f000000 	svccs	0x00000000
    2600:	0f00000e 	svceq	0x0000000e
    2604:	000000a3 	andeq	r0, r0, r3, lsr #1
    2608:	67230006 	strvs	r0, [r3, -r6]!
    260c:	01000013 	tsteq	r0, r3, lsl r0
    2610:	0e1a016b 	mufeqez	f0, f2, #3.0
    2614:	03050000 	movweq	r0, #20480	; 0x5000
    2618:	08000ed0 	stmdaeq	r0, {r4, r6, r7, r9, sl, fp}
    261c:	00111914 	andseq	r1, r1, r4, lsl r9
    2620:	6c010400 	cfstrsvs	mvf0, [r1], {-0}
    2624:	000e7c01 	andeq	r7, lr, r1, lsl #24
    2628:	141c0800 	ldrne	r0, [ip], #-2048	; 0xfffff800
    262c:	6c010000 	stcvs	0, cr0, [r1], {-0}
    2630:	00004d01 	andeq	r4, r0, r1, lsl #26
    2634:	00230200 	eoreq	r0, r3, r0, lsl #4
    2638:	0012a008 	andseq	sl, r2, r8
    263c:	016c0100 	cmneq	ip, r0, lsl #2
    2640:	0000004d 	andeq	r0, r0, sp, asr #32
    2644:	08012302 	stmdaeq	r1, {r1, r8, r9, sp}
    2648:	000010a9 	andeq	r1, r0, r9, lsr #1
    264c:	5b016c01 	blpl	5d658 <_binary_src_fatexample_img_size+0x5c258>
    2650:	0200000d 	andeq	r0, r0, #13
    2654:	04000223 	streq	r0, [r0], #-547	; 0xfffffddd
    2658:	00000e41 	andeq	r0, r0, r1, asr #28
    265c:	00111923 	andseq	r1, r1, r3, lsr #18
    2660:	016c0100 	cmneq	ip, r0, lsl #2
    2664:	00000e7c 	andeq	r0, r0, ip, ror lr
    2668:	0ee00305 	cdpeq	3, 14, cr0, cr0, cr5, {0}
    266c:	d5240800 	strle	r0, [r4, #-2048]!	; 0xfffff800
    2670:	0100000e 	tsteq	r0, lr
    2674:	004d0998 	umaaleq	r0, sp, r8, r9
    2678:	05010000 	streq	r0, [r1, #-0]
    267c:	00002103 	andeq	r2, r0, r3, lsl #2
    2680:	004d0e20 	subeq	r0, sp, r0, lsr #28
    2684:	0eb70000 	cdpeq	0, 11, cr0, cr7, cr0, {0}
    2688:	a3250000 			; <UNDEFINED> instruction: 0xa3250000
    268c:	ff000000 			; <UNDEFINED> instruction: 0xff000000
    2690:	f2240073 	vqadd.s32	q0, q2, <illegal reg q9.5>
    2694:	0100000f 	tsteq	r0, pc
    2698:	0ea6099a 			; <UNDEFINED> instruction: 0x0ea6099a
    269c:	05010000 	streq	r0, [r1, #-0]
    26a0:	00028e03 	andeq	r8, r2, r3, lsl #28
    26a4:	01080720 	tsteq	r8, r0, lsr #14
    26a8:	0ef2019c 	mrceq	1, 7, r0, cr2, cr12, {4}
    26ac:	8d080000 	stchi	0, cr0, [r8, #-0]
    26b0:	01000011 	tsteq	r0, r1, lsl r0
    26b4:	007d0c9d 			; <UNDEFINED> instruction: 0x007d0c9d
    26b8:	23020000 	movwcs	r0, #8192	; 0x2000
    26bc:	75621500 	strbvc	r1, [r2, #-1280]!	; 0xfffffb00
    26c0:	9e010066 	cdpls	0, 0, cr0, cr1, cr6, {3}
    26c4:	000ef212 	andeq	pc, lr, r2, lsl r2	; <UNPREDICTABLE>
    26c8:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    26cc:	59041600 	stmdbpl	r4, {r9, sl, ip}
    26d0:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    26d4:	00000eca 	andeq	r0, r0, sl, asr #29
    26d8:	00000f08 	andeq	r0, r0, r8, lsl #30
    26dc:	0000a30f 	andeq	sl, r0, pc, lsl #6
    26e0:	24000100 	strcs	r0, [r0], #-256	; 0xffffff00
    26e4:	00000e7d 	andeq	r0, r0, sp, ror lr
    26e8:	f8029f01 			; <UNDEFINED> instruction: 0xf8029f01
    26ec:	0100000e 	tsteq	r0, lr
    26f0:	00040305 	andeq	r0, r4, r5, lsl #6
    26f4:	37262000 	strcc	r2, [r6, -r0]!
    26f8:	0700000e 	streq	r0, [r0, -lr]
    26fc:	00005e01 	andeq	r5, r0, r1, lsl #28
    2700:	06ba0100 	ldrteq	r0, [sl], r0, lsl #2
    2704:	00000f82 	andeq	r0, r0, r2, lsl #31
    2708:	000d9a27 	andeq	r9, sp, r7, lsr #20
    270c:	6f270000 	svcvs	0x00270000
    2710:	0100000f 	tsteq	r0, pc
    2714:	00100227 	andseq	r0, r0, r7, lsr #4
    2718:	b9270200 	stmdblt	r7!, {r9}
    271c:	0300000d 	movweq	r0, #13
    2720:	0013b727 	andseq	fp, r3, r7, lsr #14
    2724:	fd270400 	stc2	4, cr0, [r7, #-0]
    2728:	0500000e 	streq	r0, [r0, #-14]
    272c:	00131527 	andseq	r1, r3, r7, lsr #10
    2730:	85270600 	strhi	r0, [r7, #-1536]!	; 0xfffffa00
    2734:	07000012 	smladeq	r0, r2, r0, r0
    2738:	0012d227 	andseq	sp, r2, r7, lsr #4
    273c:	fd270800 	vcmla.f16	d0, d7, d0, #180
    2740:	0900000b 	stmdbeq	r0, {r0, r1, r3}
    2744:	0012b727 	andseq	fp, r2, r7, lsr #14
    2748:	ac270a00 			; <UNDEFINED> instruction: 0xac270a00
    274c:	0b00000e 	bleq	278c <_binary_src_fatexample_img_size+0x138c>
    2750:	000a8d27 	andeq	r8, sl, r7, lsr #26
    2754:	6c270d00 	stcvs	13, cr0, [r7], #-0
    2758:	0e000012 	mcreq	0, 0, r0, cr0, cr2, {0}
    275c:	0db12600 	ldceq	6, cr2, [r1]
    2760:	01070000 	mrseq	r0, (UNDEF: 7)
    2764:	0000005e 	andeq	r0, r0, lr, asr r0
    2768:	d706cb01 	strle	ip, [r6, -r1, lsl #22]
    276c:	2700000f 	strcs	r0, [r0, -pc]
    2770:	000013e7 	andeq	r1, r0, r7, ror #7
    2774:	0afa2700 	beq	ffe8c37c <BootRAM+0xedfcb1d>
    2778:	27030000 	strcs	r0, [r3, -r0]
    277c:	00000ac0 	andeq	r0, r0, r0, asr #21
    2780:	0b2b2704 	bleq	acc398 <_binary_src_fatexample_img_size+0xacaf98>
    2784:	27110000 	ldrcs	r0, [r1, -r0]
    2788:	00001389 	andeq	r1, r0, r9, lsl #7
    278c:	0b6a2720 	bleq	1a8c414 <_binary_src_fatexample_img_size+0x1a8b014>
    2790:	27210000 	strcs	r0, [r1, -r0]!
    2794:	000011dc 	ldrdeq	r1, [r0], -ip
    2798:	10bc2724 	adcsne	r2, ip, r4, lsr #14
    279c:	27270000 	strcs	r0, [r7, -r0]!
    27a0:	00000cb5 			; <UNDEFINED> instruction: 0x00000cb5
    27a4:	134b2728 	movtne	r2, #46888	; 0xb728
    27a8:	27310000 	ldrcs	r0, [r1, -r0]!
    27ac:	0000122a 	andeq	r1, r0, sl, lsr #4
    27b0:	3226003a 	eorcc	r0, r6, #58	; 0x3a
    27b4:	07000013 	smladeq	r0, r3, r0, r0
    27b8:	00005e01 	andeq	r5, r0, r1, lsl #28
    27bc:	06d90100 	ldrbeq	r0, [r9], r0, lsl #2
    27c0:	00001002 	andeq	r1, r0, r2
    27c4:	00108027 	andseq	r8, r0, r7, lsr #32
    27c8:	55270000 	strpl	r0, [r7, #-0]!
    27cc:	0100000c 	tsteq	r0, ip
    27d0:	000f3327 	andeq	r3, pc, r7, lsr #6
    27d4:	39270200 	stmdbcc	r7!, {r9}
    27d8:	07000010 	smladeq	r0, r0, r0, r0
    27dc:	0a3c1400 	beq	f077e4 <_binary_src_fatexample_img_size+0xf063e4>
    27e0:	011f0000 	tsteq	pc, r0
    27e4:	107808e0 	rsbsne	r0, r8, r0, ror #17
    27e8:	ca080000 	bgt	2027f0 <_binary_src_fatexample_img_size+0x2013f0>
    27ec:	0100000e 	tsteq	r0, lr
    27f0:	007d0ce1 	rsbseq	r0, sp, r1, ror #25
    27f4:	23020000 	movwcs	r0, #8192	; 0x2000
    27f8:	0a670800 	beq	19c4800 <_binary_src_fatexample_img_size+0x19c3400>
    27fc:	e2010000 	and	r0, r1, #0
    2800:	00007d0c 	andeq	r7, r0, ip, lsl #26
    2804:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    2808:	000f9808 	andeq	r9, pc, r8, lsl #16
    280c:	0ce30100 	stfeqe	f0, [r3]
    2810:	0000007d 	andeq	r0, r0, sp, ror r0
    2814:	08082302 	stmdaeq	r8, {r1, r8, r9, sp}
    2818:	00000e2f 	andeq	r0, r0, pc, lsr #28
    281c:	4d0ce401 	cfstrsmi	mvf14, [ip, #-4]
    2820:	02000000 	andeq	r0, r0, #0
    2824:	f2080c23 			; <UNDEFINED> instruction: 0xf2080c23
    2828:	0100000e 	tsteq	r0, lr
    282c:	004d0ce5 	subeq	r0, sp, r5, ror #25
    2830:	23020000 	movwcs	r0, #8192	; 0x2000
    2834:	0bb2080d 	bleq	fec84870 <BootRAM+0xdbf5011>
    2838:	e6010000 	str	r0, [r1], -r0
    283c:	00004d0c 	andeq	r4, r0, ip, lsl #26
    2840:	0e230200 	cdpeq	2, 2, cr0, cr3, cr0, {0}
    2844:	00424315 	subeq	r4, r2, r5, lsl r3
    2848:	780ce701 	stmdavc	ip, {r0, r8, r9, sl, sp, lr, pc}
    284c:	02000010 	andeq	r0, r0, #16
    2850:	0e000f23 	cdpeq	15, 0, cr0, cr0, cr3, {1}
    2854:	0000004d 	andeq	r0, r0, sp, asr #32
    2858:	00001088 	andeq	r1, r0, r8, lsl #1
    285c:	0000a30f 	andeq	sl, r0, pc, lsl #6
    2860:	03000f00 	movweq	r0, #3840	; 0xf00
    2864:	00000df2 	strdeq	r0, [r0], -r2
    2868:	021ce901 	andseq	lr, ip, #16384	; 0x4000
    286c:	14000010 	strne	r0, [r0], #-16
    2870:	00000cd7 	ldrdeq	r0, [r0], -r7
    2874:	08eb010d 	stmiaeq	fp!, {r0, r2, r3, r8}^
    2878:	000010de 	ldrdeq	r1, [r0], -lr
    287c:	000eca08 	andeq	ip, lr, r8, lsl #20
    2880:	0cec0100 	stfeqe	f0, [ip]
    2884:	0000007d 	andeq	r0, r0, sp, ror r0
    2888:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
    288c:	00000a67 	andeq	r0, r0, r7, ror #20
    2890:	7d0ced01 	stcvc	13, cr14, [ip, #-4]
    2894:	02000000 	andeq	r0, r0, #0
    2898:	15080423 	strne	r0, [r8, #-1059]	; 0xfffffbdd
    289c:	01000012 	tsteq	r0, r2, lsl r0
    28a0:	007d0cee 	rsbseq	r0, sp, lr, ror #25
    28a4:	23020000 	movwcs	r0, #8192	; 0x2000
    28a8:	0cad0808 	stceq	8, cr0, [sp], #32
    28ac:	ef010000 	svc	0x00010000
    28b0:	00004d0c 	andeq	r4, r0, ip, lsl #26
    28b4:	0c230200 	sfmeq	f0, 4, [r3], #-0
    28b8:	0bcd0300 	bleq	ff3434c0 <BootRAM+0xe2b3c61>
    28bc:	f1010000 	setend	le
    28c0:	0010941c 	andseq	r9, r0, ip, lsl r4
    28c4:	0d141400 	cfldrseq	mvf1, [r4, #-0]
    28c8:	01030000 	mrseq	r0, (UNDEF: 3)
    28cc:	112508f3 	strdne	r0, [r5, -r3]!
    28d0:	6b150000 	blvs	5428d8 <_binary_src_fatexample_img_size+0x5414d8>
    28d4:	01007965 	tsteq	r0, r5, ror #18
    28d8:	004d0af4 	strdeq	r0, [sp], #-164	; 0xffffff5c
    28dc:	23020000 	movwcs	r0, #8192	; 0x2000
    28e0:	73611500 	cmnvc	r1, #0, 10
    28e4:	f5010063 			; <UNDEFINED> instruction: 0xf5010063
    28e8:	00004d0a 	andeq	r4, r0, sl, lsl #26
    28ec:	01230200 			; <UNDEFINED> instruction: 0x01230200
    28f0:	00133608 	andseq	r3, r3, r8, lsl #12
    28f4:	0af60100 	beq	ffd82cfc <BootRAM+0xecf349d>
    28f8:	0000004d 	andeq	r0, r0, sp, asr #32
    28fc:	00022302 	andeq	r2, r2, r2, lsl #6
    2900:	00120503 	andseq	r0, r2, r3, lsl #10
    2904:	1ef80100 	cdpne	1, 15, cr0, cr8, cr0, {0}
    2908:	000010ea 	andeq	r1, r0, sl, ror #1
    290c:	000a4024 	andeq	r4, sl, r4, lsr #32
    2910:	0ffa0100 	svceq	0x00fa0100
    2914:	00001088 	andeq	r1, r0, r8, lsl #1
    2918:	94030501 	strls	r0, [r3], #-1281	; 0xfffffaff
    291c:	24200076 	strtcs	r0, [r0], #-118	; 0xffffff8a
    2920:	00000a7a 	andeq	r0, r0, sl, ror sl
    2924:	4d09fb01 	vstrmi	d15, [r9, #-4]
    2928:	01000000 	mrseq	r0, (UNDEF: 0)
    292c:	02430305 	subeq	r0, r3, #335544320	; 0x14000000
    2930:	db242000 	blle	90a938 <_binary_src_fatexample_img_size+0x909538>
    2934:	0100000c 	tsteq	r0, ip
    2938:	10de0ffc 	ldrshne	r0, [lr], #252	; 0xfc
    293c:	05010000 	streq	r0, [r1, #-0]
    2940:	00001403 	andeq	r1, r0, r3, lsl #8
    2944:	0c242420 	cfstrseq	mvf2, [r4], #-128	; 0xffffff80
    2948:	ff010000 			; <UNDEFINED> instruction: 0xff010000
    294c:	00004d09 	andeq	r4, r0, r9, lsl #26
    2950:	03050100 	movweq	r0, #20736	; 0x5100
    2954:	20000242 	andcs	r0, r0, r2, asr #4
    2958:	000d1828 	andeq	r1, sp, r8, lsr #16
    295c:	01000100 	mrseq	r0, (UNDEF: 16)
    2960:	00112511 	andseq	r2, r1, r1, lsl r5
    2964:	03050100 	movweq	r0, #20736	; 0x5100
    2968:	20000248 	andcs	r0, r0, r8, asr #4
    296c:	000d4629 	andeq	r4, sp, r9, lsr #12
    2970:	01020100 	mrseq	r0, (UNDEF: 18)
    2974:	00007d11 	andeq	r7, r0, r1, lsl sp
    2978:	3c030500 	cfstr32cc	mvfx0, [r3], {-0}
    297c:	29200000 	stmdbcs	r0!, {}	; <UNPREDICTABLE>
    2980:	00000e71 	andeq	r0, r0, r1, ror lr
    2984:	11010301 	tstne	r1, r1, lsl #6
    2988:	0000007d 	andeq	r0, r0, sp, ror r0
    298c:	02440305 	subeq	r0, r4, #335544320	; 0x14000000
    2990:	8d292000 	stchi	0, cr2, [r9, #-0]
    2994:	0100000f 	tsteq	r0, pc
    2998:	7d110104 	ldfvcs	f0, [r1, #-16]
    299c:	05000000 	streq	r0, [r0, #-0]
    29a0:	00003803 	andeq	r3, r0, r3, lsl #16
    29a4:	004d0e20 	subeq	r0, sp, r0, lsr #28
    29a8:	11db0000 	bicsne	r0, fp, r0
    29ac:	a3250000 			; <UNDEFINED> instruction: 0xa3250000
    29b0:	ff000000 			; <UNDEFINED> instruction: 0xff000000
    29b4:	cf290001 	svcgt	0x00290001
    29b8:	0100000f 	tsteq	r0, pc
    29bc:	ca100105 	bgt	402dd8 <_binary_src_fatexample_img_size+0x4019d8>
    29c0:	05000011 	streq	r0, [r0, #-17]	; 0xffffffef
    29c4:	00004003 	andeq	r4, r0, r3
    29c8:	0a322820 	beq	c8ca50 <_binary_src_fatexample_img_size+0xc8b650>
    29cc:	07010000 	streq	r0, [r1, -r0]
    29d0:	007d0a01 	rsbseq	r0, sp, r1, lsl #20
    29d4:	05010000 	streq	r0, [r1, #-0]
    29d8:	00769003 	rsbseq	r9, r6, r3
    29dc:	10742820 	rsbsne	r2, r4, r0, lsr #16
    29e0:	08010000 	stmdaeq	r1, {}	; <UNPREDICTABLE>
    29e4:	00650a01 	rsbeq	r0, r5, r1, lsl #20
    29e8:	05010000 	streq	r0, [r1, #-0]
    29ec:	00028c03 	andeq	r8, r2, r3, lsl #24
    29f0:	0d532820 	ldcleq	8, cr2, [r3, #-128]	; 0xffffff80
    29f4:	09010000 	stmdbeq	r1, {}	; <UNPREDICTABLE>
    29f8:	00650a01 	rsbeq	r0, r5, r1, lsl #20
    29fc:	05010000 	streq	r0, [r1, #-0]
    2a00:	00024003 	andeq	r4, r2, r3
    2a04:	00590e20 	subseq	r0, r9, r0, lsr #28
    2a08:	123a0000 	eorsne	r0, sl, #0
    2a0c:	a30f0000 	movwge	r0, #61440	; 0xf000
    2a10:	23000000 	movwcs	r0, #0
    2a14:	122a0400 	eorne	r0, sl, #0, 8
    2a18:	48290000 	stmdami	r9!, {}	; <UNPREDICTABLE>
    2a1c:	0100000a 	tsteq	r0, sl
    2a20:	3a16016d 	bcc	582fdc <_binary_src_fatexample_img_size+0x581bdc>
    2a24:	05000012 	streq	r0, [r0, #-18]	; 0xffffffee
    2a28:	000eeb03 	andeq	lr, lr, r3, lsl #22
    2a2c:	00590e08 	subseq	r0, r9, r8, lsl #28
    2a30:	12620000 	rsbne	r0, r2, #0
    2a34:	a30f0000 	movwge	r0, #61440	; 0xf000
    2a38:	06000000 	streq	r0, [r0], -r0
    2a3c:	12520400 	subsne	r0, r2, #0, 8
    2a40:	41280000 			; <UNDEFINED> instruction: 0x41280000
    2a44:	0100000c 	tsteq	r0, ip
    2a48:	6210017d 	andsvs	r0, r0, #1073741855	; 0x4000001f
    2a4c:	01000012 	tsteq	r0, r2, lsl r0
    2a50:	0ee40305 	cdpeq	3, 14, cr0, cr4, cr5, {0}
    2a54:	02290800 	eoreq	r0, r9, #0, 16
    2a58:	01000011 	tsteq	r0, r1, lsl r0
    2a5c:	b6160197 			; <UNDEFINED> instruction: 0xb6160197
    2a60:	0500000c 	streq	r0, [r0, #-12]
    2a64:	000f0f03 	andeq	r0, pc, r3, lsl #30
    2a68:	2e012a08 	vmlacs.f32	s4, s2, s16
    2a6c:	0100000d 	tsteq	r0, sp
    2a70:	3c06021b 	sfmcc	f0, 4, [r6], {27}
    2a74:	cc08000c 	stcgt	0, cr0, [r8], {12}
    2a78:	0208000c 	andeq	r0, r8, #12
    2a7c:	f901007d 			; <UNDEFINED> instruction: 0xf901007d
    2a80:	2b000012 	blcs	2ad0 <_binary_src_fatexample_img_size+0x16d0>
    2a84:	08000c8e 	stmdaeq	r0, {r1, r2, r3, r7, sl, fp}
    2a88:	00137101 	andseq	r7, r3, r1, lsl #2
    2a8c:	0ca02b00 	vstmiaeq	r0!, {d2-d1}
    2a90:	f9010800 			; <UNDEFINED> instruction: 0xf9010800
    2a94:	2b000012 	blcs	2ae4 <_binary_src_fatexample_img_size+0x16e4>
    2a98:	08000cac 	stmdaeq	r0, {r2, r3, r5, r7, sl, fp}
    2a9c:	00133e01 	andseq	r3, r3, r1, lsl #28
    2aa0:	0cb02b00 	vldmiaeq	r0!, {d2-d1}
    2aa4:	16010800 	strne	r0, [r1], -r0, lsl #16
    2aa8:	2b000014 	blcs	2b00 <_binary_src_fatexample_img_size+0x1700>
    2aac:	08000cb4 	stmdaeq	r0, {r2, r4, r5, r7, sl, fp}
    2ab0:	0013cc01 	andseq	ip, r3, r1, lsl #24
    2ab4:	0cb82b00 	vldmiaeq	r8!, {d2-d1}
    2ab8:	87010800 	strhi	r0, [r1, -r0, lsl #16]
    2abc:	2b000013 	blcs	2b10 <_binary_src_fatexample_img_size+0x1710>
    2ac0:	08000cbc 	stmdaeq	r0, {r2, r3, r4, r5, r7, sl, fp}
    2ac4:	0013e201 	andseq	lr, r3, r1, lsl #4
    2ac8:	0cc02b00 	vstmiaeq	r0, {d18-d17}
    2acc:	5b010800 	blpl	44ad4 <_binary_src_fatexample_img_size+0x436d4>
    2ad0:	00000013 	andeq	r0, r0, r3, lsl r0
    2ad4:	0fae012a 	svceq	0x00ae012a
    2ad8:	03010000 	movweq	r0, #4096	; 0x1000
    2adc:	0bec0602 	bleq	ffb042ec <BootRAM+0xea74a8d>
    2ae0:	0c3c0800 	ldceq	8, cr0, [ip], #-0
    2ae4:	7d020800 	stcvc	8, cr0, [r2, #-0]
    2ae8:	133e0100 	teqne	lr, #0, 2
    2aec:	6c2c0000 	stcvs	0, cr0, [ip], #-0
    2af0:	01006e75 	tsteq	r0, r5, ror lr
    2af4:	4d0b0204 	sfmmi	f0, 4, [fp, #-16]
    2af8:	fb000000 	blx	2b02 <_binary_src_fatexample_img_size+0x1702>
    2afc:	f900000a 			; <UNDEFINED> instruction: 0xf900000a
    2b00:	2d00000a 	stccs	0, cr0, [r0, #-40]	; 0xffffffd8
    2b04:	00000aab 	andeq	r0, r0, fp, lsr #21
    2b08:	0c020501 	cfstr32eq	mvfx0, [r2], {1}
    2b0c:	0000007d 	andeq	r0, r0, sp, ror r0
    2b10:	00000b18 	andeq	r0, r0, r8, lsl fp
    2b14:	00000b12 	andeq	r0, r0, r2, lsl fp
    2b18:	db012e00 	blle	4e320 <_binary_src_fatexample_img_size+0x4cf20>
    2b1c:	0100000b 	tsteq	r0, fp
    2b20:	010601ee 	smlatteq	r6, lr, r1, r0
    2b24:	0000135b 	andeq	r1, r0, fp, asr r3
    2b28:	6e756c2f 	cdpvs	12, 7, cr6, cr5, cr15, {1}
    2b2c:	01f20100 	mvnseq	r0, r0, lsl #2
    2b30:	00004d0b 	andeq	r4, r0, fp, lsl #26
    2b34:	01300000 	teqeq	r0, r0
    2b38:	00000d5d 	andeq	r0, r0, sp, asr sp
    2b3c:	0601e001 	streq	lr, [r1], -r1
    2b40:	08000b4c 	stmdaeq	r0, {r2, r3, r6, r8, r9, fp}
    2b44:	08000b90 	stmdaeq	r0, {r4, r7, r8, r9, fp}
    2b48:	01007d02 	tsteq	r0, r2, lsl #26
    2b4c:	0ce30130 	stfeqe	f0, [r3], #192	; 0xc0
    2b50:	ce010000 	cdpgt	0, 0, cr0, cr1, cr0, {0}
    2b54:	0b0c0601 	bleq	304360 <_binary_src_fatexample_img_size+0x302f60>
    2b58:	0b4c0800 	bleq	1304b60 <_binary_src_fatexample_img_size+0x1303760>
    2b5c:	7d020800 	stcvc	8, cr0, [r2, #-0]
    2b60:	012a0100 			; <UNDEFINED> instruction: 0x012a0100
    2b64:	00001183 	andeq	r1, r0, r3, lsl #3
    2b68:	0601b801 	streq	fp, [r1], -r1, lsl #16
    2b6c:	08000abc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9, fp}
    2b70:	08000b0c 	stmdaeq	r0, {r2, r3, r8, r9, fp}
    2b74:	01007d02 	tsteq	r0, r2, lsl #26
    2b78:	000013cc 	andeq	r1, r0, ip, asr #7
    2b7c:	6e756c2c 	cdpvs	12, 7, cr6, cr5, cr12, {1}
    2b80:	01b90100 			; <UNDEFINED> instruction: 0x01b90100
    2b84:	00004d0b 	andeq	r4, r0, fp, lsl #26
    2b88:	000b6900 	andeq	r6, fp, r0, lsl #18
    2b8c:	000b6700 	andeq	r6, fp, r0, lsl #14
    2b90:	0aab2d00 	beq	feacdf98 <BootRAM+0xda3e739>
    2b94:	ba010000 	blt	42b9c <_binary_src_fatexample_img_size+0x4179c>
    2b98:	007d0c01 	rsbseq	r0, sp, r1, lsl #24
    2b9c:	0b840000 	bleq	fe102ba4 <BootRAM+0xd073345>
    2ba0:	0b800000 	bleq	fe002ba8 <BootRAM+0xcf73349>
    2ba4:	30000000 	andcc	r0, r0, r0
    2ba8:	00109401 	andseq	r9, r0, r1, lsl #8
    2bac:	01b00100 	lslseq	r0, r0, #2
    2bb0:	000a9806 	andeq	r9, sl, r6, lsl #16
    2bb4:	000abc08 	andeq	fp, sl, r8, lsl #24
    2bb8:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    2bbc:	6a012a01 	bvs	4d3c8 <_binary_src_fatexample_img_size+0x4bfc8>
    2bc0:	0100000d 	tsteq	r0, sp
    2bc4:	5c0601a7 	stfpls	f0, [r6], {167}	; 0xa7
    2bc8:	9808000a 	stmdals	r8, {r1, r3}
    2bcc:	0208000a 	andeq	r0, r8, #10
    2bd0:	1601007d 			; <UNDEFINED> instruction: 0x1601007d
    2bd4:	31000014 	tstcc	r0, r4, lsl r0
    2bd8:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    2bdc:	0100692c 	tsteq	r0, ip, lsr #18
    2be0:	4d0f01a9 	stfmis	f0, [pc, #-676]	; 2944 <_binary_src_fatexample_img_size+0x1544>
    2be4:	bc000000 	stclt	0, cr0, [r0], {-0}
    2be8:	b600000b 	strlt	r0, [r0], -fp
    2bec:	0000000b 	andeq	r0, r0, fp
    2bf0:	96013200 	strls	r3, [r1], -r0, lsl #4
    2bf4:	01000011 	tsteq	r0, r1, lsl r0
    2bf8:	de060187 	adfled	f0, f6, f7
    2bfc:	5c080009 	stcpl	0, cr0, [r8], {9}
    2c00:	f608000a 			; <UNDEFINED> instruction: 0xf608000a
    2c04:	0100000b 	tsteq	r0, fp
    2c08:	00001470 	andeq	r1, r0, r0, ror r4
    2c0c:	0009ee33 	andeq	lr, r9, r3, lsr lr
    2c10:	0009fe08 	andeq	pc, r9, r8, lsl #28
    2c14:	00145208 	andseq	r5, r4, r8, lsl #4
    2c18:	00692c00 	rsbeq	r2, r9, r0, lsl #24
    2c1c:	12018901 	andne	r8, r1, #16384	; 0x4000
    2c20:	00000065 	andeq	r0, r0, r5, rrx
    2c24:	00000c1a 	andeq	r0, r0, sl, lsl ip
    2c28:	00000c16 	andeq	r0, r0, r6, lsl ip
    2c2c:	0a2e3400 	beq	b8fc34 <_binary_src_fatexample_img_size+0xb8e834>
    2c30:	0a3e0800 	beq	f84c38 <_binary_src_fatexample_img_size+0xf83838>
    2c34:	692c0800 	stmdbvs	ip!, {fp}
    2c38:	018c0100 	orreq	r0, ip, r0, lsl #2
    2c3c:	00006512 	andeq	r6, r0, r2, lsl r5
    2c40:	000c4c00 	andeq	r4, ip, r0, lsl #24
    2c44:	000c4800 	andeq	r4, ip, r0, lsl #16
    2c48:	35000000 	strcc	r0, [r0, #-0]
    2c4c:	00106901 	andseq	r6, r0, r1, lsl #18
    2c50:	01690100 	cmneq	r9, r0, lsl #2
    2c54:	0132030d 	teqeq	r2, sp, lsl #6
    2c58:	00000698 	muleq	r0, r8, r6
    2c5c:	06014501 	streq	r4, [r1], -r1, lsl #10
    2c60:	08000988 	stmdaeq	r0, {r3, r7, r8, fp}
    2c64:	080009dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, fp}
    2c68:	00000c7a 	andeq	r0, r0, sl, ror ip
    2c6c:	00150301 	andseq	r0, r5, r1, lsl #6
    2c70:	09ac3300 	stmibeq	ip!, {r8, r9, ip, sp}
    2c74:	09c20800 	stmibeq	r2, {fp}^
    2c78:	14b70800 	ldrtne	r0, [r7], #2048	; 0x800
    2c7c:	692c0000 	stmdbvs	ip!, {}	; <UNPREDICTABLE>
    2c80:	01490100 	mrseq	r0, (UNDEF: 89)
    2c84:	00006510 	andeq	r6, r0, r0, lsl r5
    2c88:	000ca000 	andeq	sl, ip, r0
    2c8c:	000c9a00 	andeq	r9, ip, r0, lsl #20
    2c90:	96360000 	ldrtls	r0, [r6], -r0
    2c94:	30080009 	andcc	r0, r8, r9
    2c98:	de000018 	mcrle	0, 0, r0, cr0, cr8, {0}
    2c9c:	37000014 	smladcc	r0, r4, r0, r0
    2ca0:	31015001 	tstcc	r1, r1
    2ca4:	01510137 	cmpeq	r1, r7, lsr r1
    2ca8:	52013730 	andpl	r3, r1, #48, 14	; 0xc00000
    2cac:	37400802 	strbcc	r0, [r0, -r2, lsl #16]
    2cb0:	03055301 	movweq	r5, #21249	; 0x5301
    2cb4:	08000ccd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, fp}
    2cb8:	09a23800 	stmibeq	r2!, {fp, ip, sp}
    2cbc:	18300800 	ldmdane	r0!, {fp}
    2cc0:	01370000 	teqeq	r7, r0
    2cc4:	81090250 	tsthi	r9, r0, asr r2
    2cc8:	01510137 	cmpeq	r1, r7, lsr r1
    2ccc:	52013730 	andpl	r3, r1, #48, 14	; 0xc00000
    2cd0:	37400802 	strbcc	r0, [r0, -r2, lsl #16]
    2cd4:	03055301 	movweq	r5, #21249	; 0x5301
    2cd8:	08000819 	stmdaeq	r0, {r0, r3, r4, fp}
    2cdc:	ef390000 	svc	0x00390000
    2ce0:	0100000a 	tsteq	r0, sl
    2ce4:	010d0124 	tsteq	sp, r4, lsr #2
    2ce8:	00155101 	andseq	r5, r5, r1, lsl #2
    2cec:	08af3a00 	stmiaeq	pc!, {r9, fp, ip, sp}	; <UNPREDICTABLE>
    2cf0:	24010000 	strcs	r0, [r1], #-0
    2cf4:	004d2001 	subeq	r2, sp, r1
    2cf8:	413b0000 	teqmi	fp, r0
    2cfc:	3c000015 	stccc	0, cr0, [r0], {21}
    2d00:	0000084e 	andeq	r0, r0, lr, asr #16
    2d04:	0e012801 	cdpeq	8, 0, cr2, cr1, cr1, {0}
    2d08:	0000007d 	andeq	r0, r0, sp, ror r0
    2d0c:	756c2f3d 	strbvc	r2, [ip, #-3901]!	; 0xfffff0c3
    2d10:	2d01006e 	stccs	0, cr0, [r1, #-440]	; 0xfffffe48
    2d14:	004d0f01 	subeq	r0, sp, r1, lsl #30
    2d18:	00000000 	andeq	r0, r0, r0
    2d1c:	084e3c3d 	stmdaeq	lr, {r0, r2, r3, r4, r5, sl, fp, ip, sp}^
    2d20:	33010000 	movwcc	r0, #4096	; 0x1000
    2d24:	00330d01 	eorseq	r0, r3, r1, lsl #26
    2d28:	00000000 	andeq	r0, r0, r0
    2d2c:	000be93e 	andeq	lr, fp, lr, lsr r9
    2d30:	010d0100 	mrseq	r0, (UNDEF: 29)
    2d34:	0ccc010d 	stfeqe	f0, [ip], {13}
    2d38:	0d600800 	stcleq	8, cr0, [r0, #-0]
    2d3c:	0ce00800 	stcleq	8, cr0, [r0]
    2d40:	45010000 	strmi	r0, [r1, #-0]
    2d44:	3f000016 	svccc	0x00000016
    2d48:	000008af 	andeq	r0, r0, pc, lsr #17
    2d4c:	21010d01 	tstcs	r1, r1, lsl #26
    2d50:	0000004d 	andeq	r0, r0, sp, asr #32
    2d54:	00000d28 	andeq	r0, r0, r8, lsr #26
    2d58:	00000d18 	andeq	r0, r0, r8, lsl sp
    2d5c:	00084e2d 	andeq	r4, r8, sp, lsr #28
    2d60:	010e0100 	mrseq	r0, (UNDEF: 30)
    2d64:	00009707 	andeq	r9, r0, r7, lsl #14
    2d68:	000d9e00 	andeq	r9, sp, r0, lsl #28
    2d6c:	000d9400 	andeq	r9, sp, r0, lsl #8
    2d70:	0cdc3300 	ldcleq	3, cr3, [ip], {0}
    2d74:	0cfa0800 	ldcleq	8, cr0, [sl]
    2d78:	15d40800 	ldrbne	r0, [r4, #2048]	; 0x800
    2d7c:	732c0000 			; <UNDEFINED> instruction: 0x732c0000
    2d80:	1001007a 	andne	r0, r1, sl, ror r0
    2d84:	00970901 	addseq	r0, r7, r1, lsl #18
    2d88:	0de30000 	stcleq	0, cr0, [r3]
    2d8c:	0de10000 	stcleq	0, cr0, [r1]
    2d90:	e6360000 	ldrt	r0, [r6], -r0
    2d94:	3e08000c 	cdpcc	0, 0, cr0, cr8, cr12, {0}
    2d98:	ca000018 	bgt	2e00 <_binary_src_fatexample_img_size+0x1a00>
    2d9c:	37000015 	smladcc	r0, r5, r0, r0
    2da0:	31015001 	tstcc	r1, r1
    2da4:	0cfa4000 	ldcleq	0, cr4, [sl]
    2da8:	128e0800 	addne	r0, lr, #0, 16
    2dac:	33000000 	movwcc	r0, #0
    2db0:	08000d18 	stmdaeq	r0, {r3, r4, r8, sl, fp}
    2db4:	08000d60 	stmdaeq	r0, {r5, r6, r8, sl, fp}
    2db8:	00001633 	andeq	r1, r0, r3, lsr r6
    2dbc:	6e756c2c 	cdpvs	12, 7, cr6, cr5, cr12, {1}
    2dc0:	01160100 	tsteq	r6, r0, lsl #2
    2dc4:	00004d0d 	andeq	r4, r0, sp, lsl #26
    2dc8:	000dfa00 	andeq	pc, sp, r0, lsl #20
    2dcc:	000df600 	andeq	pc, sp, r0, lsl #12
    2dd0:	7a732c00 	bvc	1ccddd8 <_binary_src_fatexample_img_size+0x1ccc9d8>
    2dd4:	01170100 	tsteq	r7, r0, lsl #2
    2dd8:	00009709 	andeq	r9, r0, r9, lsl #14
    2ddc:	000e2400 	andeq	r2, lr, r0, lsl #8
    2de0:	000e2000 	andeq	r2, lr, r0
    2de4:	0d283600 	stceq	6, cr3, [r8, #-0]
    2de8:	183e0800 	ldmdane	lr!, {fp}
    2dec:	16230000 	strtne	r0, [r3], -r0
    2df0:	01370000 	teqeq	r7, r0
    2df4:	37310150 			; <UNDEFINED> instruction: 0x37310150
    2df8:	74025101 	strvc	r5, [r2], #-257	; 0xfffffeff
    2dfc:	42380008 	eorsmi	r0, r8, #8
    2e00:	3e08000d 	cdpcc	0, 0, cr0, cr8, cr13, {0}
    2e04:	37000018 	smladcc	r0, r8, r0, r0
    2e08:	31015001 	tstcc	r1, r1
    2e0c:	18410000 	stmdane	r1, {}^	; <UNPREDICTABLE>
    2e10:	0108000d 	tsteq	r8, sp
    2e14:	00001503 	andeq	r1, r0, r3, lsl #10
    2e18:	02500137 	subseq	r0, r0, #-1073741811	; 0xc000000d
    2e1c:	00008109 	andeq	r8, r0, r9, lsl #2
    2e20:	07780142 	ldrbeq	r0, [r8, -r2, asr #2]!
    2e24:	aa010000 	bge	42e2c <_binary_src_fatexample_img_size+0x41a2c>
    2e28:	08d00106 	ldmeq	r0, {r1, r2, r8}^
    2e2c:	09700000 	ldmdbeq	r0!, {}^	; <UNPREDICTABLE>
    2e30:	09880800 	stmibeq	r8, {fp}
    2e34:	7d020800 	stcvc	8, cr0, [r2, #-0]
    2e38:	16940100 	ldrne	r0, [r4], r0, lsl #2
    2e3c:	72430000 	subvc	r0, r3, #0
    2e40:	01007165 	tsteq	r0, r5, ror #2
    2e44:	169426aa 	ldrne	r2, [r4], sl, lsr #13
    2e48:	0e460000 	cdpeq	0, 4, cr0, cr6, cr0, {0}
    2e4c:	0e420000 	cdpeq	0, 4, cr0, cr2, cr0, {0}
    2e50:	50440000 	subpl	r0, r4, r0
    2e54:	0100000c 	tsteq	r0, ip
    2e58:	169a32aa 	ldrne	r3, [sl], sl, lsr #5
    2e5c:	51010000 	mrspl	r0, (UNDEF: 1)
    2e60:	0007a044 	andeq	sl, r7, r4, asr #32
    2e64:	42aa0100 	adcmi	r0, sl, #0, 2
    2e68:	000016a0 	andeq	r1, r0, r0, lsr #13
    2e6c:	16005201 	strne	r5, [r0], -r1, lsl #4
    2e70:	0000ff04 	andeq	pc, r0, r4, lsl #30
    2e74:	87041600 	strhi	r1, [r4, -r0, lsl #12]
    2e78:	16000003 	strne	r0, [r0], -r3
    2e7c:	00006504 	andeq	r6, r0, r4, lsl #10
    2e80:	95014500 	strls	r4, [r1, #-1280]	; 0xfffffb00
    2e84:	01000005 	tsteq	r0, r5
    2e88:	f401066e 	vst1.16	{d0-d2}, [r1 :128], lr
    2e8c:	70080008 	andvc	r0, r8, r8
    2e90:	02080009 	andeq	r0, r8, #9
    2e94:	f101007d 	setend	le
    2e98:	46000016 			; <UNDEFINED> instruction: 0x46000016
    2e9c:	000005a7 	andeq	r0, r0, r7, lsr #11
    2ea0:	65276e01 	strvs	r6, [r7, #-3585]!	; 0xfffff1ff
    2ea4:	6f000000 	svcvs	0x00000000
    2ea8:	6700000e 	strvs	r0, [r0, -lr]
    2eac:	4400000e 	strmi	r0, [r0], #-14
    2eb0:	00000c50 	andeq	r0, r0, r0, asr ip
    2eb4:	f13b6e01 			; <UNDEFINED> instruction: 0xf13b6e01
    2eb8:	01000016 	tsteq	r0, r6, lsl r0
    2ebc:	07a04451 	sbfxeq	r4, r1, #8, #1
    2ec0:	6e010000 	cdpvs	0, 0, cr0, cr1, cr0, {0}
    2ec4:	0016a04b 	andseq	sl, r6, fp, asr #32
    2ec8:	00520100 	subseq	r0, r2, r0, lsl #2
    2ecc:	16f70416 	usatne	r0, #23, r6, lsl #8
    2ed0:	04160000 	ldreq	r0, [r6], #-0
    2ed4:	000016fd 	strdeq	r1, [r0], -sp
    2ed8:	15034847 	strne	r4, [r3, #-2119]	; 0xfffff7b9
    2edc:	08180000 	ldmdaeq	r8, {}	; <UNPREDICTABLE>
    2ee0:	08f40800 	ldmeq	r4!, {fp}^
    2ee4:	0ea90800 	cdpeq	8, 10, cr0, cr9, cr0, {0}
    2ee8:	d6010000 	strle	r0, [r1], -r0
    2eec:	49000017 	stmdbmi	r0, {r0, r1, r2, r4}
    2ef0:	00001512 	andeq	r1, r0, r2, lsl r5
    2ef4:	00000ed7 	ldrdeq	r0, [r0], -r7
    2ef8:	00000ec9 	andeq	r0, r0, r9, asr #29
    2efc:	0015034a 	andseq	r0, r5, sl, asr #6
    2f00:	00083600 	andeq	r3, r8, r0, lsl #12
    2f04:	00a00008 	adceq	r0, r0, r8
    2f08:	24010000 	strcs	r0, [r1], #-0
    2f0c:	12490d01 	subne	r0, r9, #1, 26	; 0x40
    2f10:	3d000015 	stccc	0, cr0, [r0, #-84]	; 0xffffffac
    2f14:	3500000f 	strcc	r0, [r0, #-15]
    2f18:	4b00000f 	blmi	2f5c <_binary_src_fatexample_img_size+0x1b5c>
    2f1c:	0000151f 	andeq	r1, r0, pc, lsl r5
    2f20:	000000b8 	strheq	r0, [r0], -r8
    2f24:	000017a4 	andeq	r1, r0, r4, lsr #15
    2f28:	0015244c 	andseq	r2, r5, ip, asr #8
    2f2c:	000f7500 	andeq	r7, pc, r0, lsl #10
    2f30:	000f7100 	andeq	r7, pc, r0, lsl #2
    2f34:	15314d00 	ldrne	r4, [r1, #-3328]!	; 0xfffff300
    2f38:	08720000 	ldmdaeq	r2!, {}^	; <UNPREDICTABLE>
    2f3c:	089c0800 	ldmeq	ip, {fp}
    2f40:	178e0800 	strne	r0, [lr, r0, lsl #16]
    2f44:	324c0000 	subcc	r0, ip, #0
    2f48:	95000015 	strls	r0, [r0, #-21]	; 0xffffffeb
    2f4c:	9300000f 	movwls	r0, #15
    2f50:	3800000f 	stmdacc	r0, {r0, r1, r2, r3}
    2f54:	08000890 	stmdaeq	r0, {r4, r7, fp}
    2f58:	0000184c 	andeq	r1, r0, ip, asr #16
    2f5c:	01500137 	cmpeq	r0, r7, lsr r1
    2f60:	52013731 	andpl	r3, r1, #12845056	; 0xc40000
    2f64:	00007502 	andeq	r7, r0, r2, lsl #10
    2f68:	08603800 	stmdaeq	r0!, {fp, ip, sp}^
    2f6c:	184c0800 	stmdane	ip, {fp}^
    2f70:	01370000 	teqeq	r7, r0
    2f74:	37310150 			; <UNDEFINED> instruction: 0x37310150
    2f78:	75025201 	strvc	r5, [r2, #-513]	; 0xfffffdff
    2f7c:	4e000000 	cdpmi	0, 0, cr0, cr0, cr0, {0}
    2f80:	00001541 	andeq	r1, r0, r1, asr #10
    2f84:	0800089c 	stmdaeq	r0, {r2, r3, r4, r7, fp}
    2f88:	080008f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, fp}
    2f8c:	0015424c 	andseq	r4, r5, ip, asr #4
    2f90:	000fb000 	andeq	fp, pc, r0
    2f94:	000fac00 	andeq	sl, pc, r0, lsl #24
    2f98:	08b43800 	ldmeq	r4!, {fp, ip, sp}
    2f9c:	184c0800 	stmdane	ip, {fp}^
    2fa0:	01370000 	teqeq	r7, r0
    2fa4:	37310150 			; <UNDEFINED> instruction: 0x37310150
    2fa8:	75025201 	strvc	r5, [r2, #-513]	; 0xfffffdff
    2fac:	00000000 	andeq	r0, r0, r0
    2fb0:	14704f00 	ldrbtne	r4, [r0], #-3840	; 0xfffff100
    2fb4:	09dc0000 	ldmibeq	ip, {}^	; <UNPREDICTABLE>
    2fb8:	09de0800 	ldmibeq	lr, {fp}^
    2fbc:	7d020800 	stcvc	8, cr0, [r2, #-0]
    2fc0:	3e500100 	rdfccs	f0, f0, f0
    2fc4:	90000013 	andls	r0, r0, r3, lsl r0
    2fc8:	ec08000b 	stc	0, cr0, [r8], {11}
    2fcc:	0208000b 	andeq	r0, r8, #11
    2fd0:	3001007d 	andcc	r0, r1, sp, ror r0
    2fd4:	4c000018 	stcmi	0, cr0, [r0], {24}
    2fd8:	0000134d 	andeq	r1, r0, sp, asr #6
    2fdc:	00000fd0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    2fe0:	00000fce 	andeq	r0, r0, lr, asr #31
    2fe4:	00133e51 	andseq	r3, r3, r1, asr lr
    2fe8:	000bb400 	andeq	fp, fp, r0, lsl #8
    2fec:	0bb40008 	bleq	fed03014 <BootRAM+0xdc737b5>
    2ff0:	0bc80800 	bleq	ff204ff8 <BootRAM+0xe175799>
    2ff4:	ee010800 	cdp	8, 0, cr0, cr1, cr0, {0}
    2ff8:	b4340601 	ldrtlt	r0, [r4], #-1537	; 0xfffff9ff
    2ffc:	c808000b 	stmdagt	r8, {r0, r1, r3}
    3000:	5208000b 	andpl	r0, r8, #11
    3004:	0000134d 	andeq	r1, r0, sp, asr #6
    3008:	53000000 	movwpl	r0, #0
    300c:	08210101 	stmdaeq	r1!, {r0, r8}
    3010:	08210000 	stmdaeq	r1!, {}	; <UNPREDICTABLE>
    3014:	25030000 	strcs	r0, [r3, #-0]
    3018:	01015306 	tsteq	r1, r6, lsl #6
    301c:	00000896 	muleq	r0, r6, r8
    3020:	00000896 	muleq	r0, r6, r8
    3024:	53052703 	movwpl	r2, #22275	; 0x5703
    3028:	04a00101 	strteq	r0, [r0], #257	; 0x101
    302c:	04a00000 	strteq	r0, [r0], #0
    3030:	26030000 	strcs	r0, [r3], -r0
    3034:	01160006 	tsteq	r6, r6
    3038:	00040000 	andeq	r0, r4, r0
    303c:	00000b2c 	andeq	r0, r0, ip, lsr #22
    3040:	151f0104 	ldrne	r0, [pc, #-260]	; 2f44 <_binary_src_fatexample_img_size+0x1b44>
    3044:	d10c0000 	mrsle	r0, (UNDEF: 12)
    3048:	ad000015 	stcge	0, cr0, [r0, #-84]	; 0xffffffac
    304c:	60000014 	andvs	r0, r0, r4, lsl r0
    3050:	4808000d 	stmdami	r8, {r0, r2, r3}
    3054:	c4000000 	strgt	r0, [r0], #-0
    3058:	02000011 	andeq	r0, r0, #17
    305c:	02580601 	subseq	r0, r8, #1048576	; 0x100000
    3060:	01020000 	mrseq	r0, (UNDEF: 2)
    3064:	00025608 	andeq	r5, r2, r8, lsl #12
    3068:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    306c:	00000271 	andeq	r0, r0, r1, ror r2
    3070:	7e070202 	cdpvc	2, 0, cr0, cr7, cr2, {0}
    3074:	02000001 	andeq	r0, r0, #1
    3078:	00820504 	addeq	r0, r2, r4, lsl #10
    307c:	04020000 	streq	r0, [r2], #-0
    3080:	00004d07 	andeq	r4, r0, r7, lsl #26
    3084:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    3088:	0000007d 	andeq	r0, r0, sp, ror r0
    308c:	48070802 	stmdami	r7, {r1, fp}
    3090:	03000000 	movweq	r0, #0
    3094:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    3098:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    309c:	00005207 	andeq	r5, r0, r7, lsl #4
    30a0:	14940400 	ldrne	r0, [r4], #1024	; 0x400
    30a4:	d8020000 	stmdale	r2, {}	; <UNPREDICTABLE>
    30a8:	00006417 	andeq	r6, r0, r7, lsl r4
    30ac:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
    30b0:	00001023 	andeq	r1, r0, r3, lsr #32
    30b4:	5f080102 	svcpl	0x00080102
    30b8:	05000002 	streq	r0, [r0, #-2]
    30bc:	00000090 	muleq	r0, r0, r0
    30c0:	00000090 	muleq	r0, r0, r0
    30c4:	04070006 	streq	r0, [r7], #-6
    30c8:	00000096 	muleq	r0, r6, r0
    30cc:	15090908 	strne	r0, [r9, #-2312]	; 0xfffff6f8
    30d0:	13010000 	movwne	r0, #4096	; 0x1000
    30d4:	0000850f 	andeq	r8, r0, pc, lsl #10
    30d8:	15ac0900 	strne	r0, [ip, #2304]!	; 0x900
    30dc:	14010000 	strne	r0, [r1], #-0
    30e0:	0000850f 	andeq	r8, r0, pc, lsl #10
    30e4:	14810900 	strne	r0, [r1], #2304	; 0x900
    30e8:	15010000 	strne	r0, [r1, #-0]
    30ec:	0000850f 	andeq	r8, r0, pc, lsl #10
    30f0:	15c00900 	strbne	r0, [r0, #2304]	; 0x900
    30f4:	16010000 	strne	r0, [r1], -r0
    30f8:	0000850f 	andeq	r8, r0, pc, lsl #10
    30fc:	149b0a00 	ldrne	r0, [fp], #2560	; 0xa00
    3100:	1e010000 	cdpne	0, 0, cr0, cr1, cr0, {0}
    3104:	000d6001 	andeq	r6, sp, r1
    3108:	00004808 	andeq	r4, r0, r8, lsl #16
    310c:	0d9c0100 	ldfeqs	f0, [ip]
    3110:	0b000001 	bleq	311c <_binary_src_fatexample_img_size+0x1d1c>
    3114:	000004f3 	strdeq	r0, [r0], -r3
    3118:	6b0a2001 	blvs	28b124 <_binary_src_fatexample_img_size+0x289d24>
    311c:	eb000000 	bl	3124 <_binary_src_fatexample_img_size+0x1d24>
    3120:	e300000f 	movw	r0, #15
    3124:	0c00000f 	stceq	0, cr0, [r0], {15}
    3128:	21010069 	tstcs	r1, r9, rrx
    312c:	00006b0a 	andeq	r6, r0, sl, lsl #22
    3130:	00103700 	andseq	r3, r0, r0, lsl #14
    3134:	00102700 	andseq	r2, r0, r0, lsl #14
    3138:	0d820d00 	stceq	13, cr0, [r2]
    313c:	010d0800 	tsteq	sp, r0, lsl #16
    3140:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    3144:	00000827 	andeq	r0, r0, r7, lsr #16
    3148:	00000827 	andeq	r0, r0, r7, lsr #16
    314c:	000d1901 	andeq	r1, sp, r1, lsl #18

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
   c:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
  10:	00061001 	andeq	r1, r6, r1
  14:	00240200 	eoreq	r0, r4, r0, lsl #4
  18:	0b3e0b0b 	bleq	f82c4c <_binary_src_fatexample_img_size+0xf8184c>
  1c:	00000e03 	andeq	r0, r0, r3, lsl #28
  20:	03001603 	movweq	r1, #1539	; 0x603
  24:	3b0b3a0e 	blcc	2ce864 <_binary_src_fatexample_img_size+0x2cd464>
  28:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
  2c:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
  30:	13490035 	movtne	r0, #36917	; 0x9035
  34:	24050000 	strcs	r0, [r5], #-0
  38:	3e0b0b00 	vmlacc.f64	d0, d11, d0
  3c:	0008030b 	andeq	r0, r8, fp, lsl #6
  40:	00340600 	eorseq	r0, r4, r0, lsl #12
  44:	0b3a0e03 	bleq	e83858 <_binary_src_fatexample_img_size+0xe82458>
  48:	0b39053b 	bleq	e4153c <_binary_src_fatexample_img_size+0xe4013c>
  4c:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; ffffff30 <BootRAM+0xef706d1>
  50:	00000c3c 	andeq	r0, r0, ip, lsr ip
  54:	03003407 	movweq	r3, #1031	; 0x407
  58:	3b0b3a0e 	blcc	2ce898 <_binary_src_fatexample_img_size+0x2cd498>
  5c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
  60:	3c0c3f13 	stccc	15, cr3, [ip], {19}
  64:	0800000c 	stmdaeq	r0, {r2, r3}
  68:	0b0b0113 	bleq	2c04bc <_binary_src_fatexample_img_size+0x2bf0bc>
  6c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
  70:	13010b39 	movwne	r0, #6969	; 0x1b39
  74:	0d090000 	stceq	0, cr0, [r9, #-0]
  78:	3a080300 	bcc	200c80 <_binary_src_fatexample_img_size+0x1ff880>
  7c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
  80:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
  84:	0a00000a 	beq	b4 <_Min_Heap_Size+0xb4>
  88:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
  8c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
  90:	13490b39 	movtne	r0, #39737	; 0x9b39
  94:	00000a38 	andeq	r0, r0, r8, lsr sl
  98:	4901010b 	stmdbmi	r1, {r0, r1, r3, r8}
  9c:	00130113 	andseq	r0, r3, r3, lsl r1
  a0:	00210c00 	eoreq	r0, r1, r0, lsl #24
  a4:	0b2f1349 	bleq	bc4dd0 <_binary_src_fatexample_img_size+0xbc39d0>
  a8:	160d0000 	strne	r0, [sp], -r0
  ac:	3a0e0300 	bcc	380cb4 <_binary_src_fatexample_img_size+0x37f8b4>
  b0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
  b4:	0013490b 	andseq	r4, r3, fp, lsl #18
  b8:	012e0e00 			; <UNDEFINED> instruction: 0x012e0e00
  bc:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
  c0:	0b3b0b3a 	bleq	ec2db0 <_binary_src_fatexample_img_size+0xec19b0>
  c4:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
  c8:	01111349 	tsteq	r1, r9, asr #6
  cc:	06400112 			; <UNDEFINED> instruction: 0x06400112
  d0:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
  d4:	0f000013 	svceq	0x00000013
  d8:	0111010b 	tsteq	r1, fp, lsl #2
  dc:	13010112 	movwne	r0, #4370	; 0x1112
  e0:	34100000 	ldrcc	r0, [r0], #-0
  e4:	3a0e0300 	bcc	380cec <_binary_src_fatexample_img_size+0x37f8ec>
  e8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  ec:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
  f0:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
  f4:	1d110000 	ldcne	0, cr0, [r1, #-0]
  f8:	52133100 	andspl	r3, r3, #0, 2
  fc:	0b42b801 	bleq	10ae108 <_binary_src_fatexample_img_size+0x10acd08>
 100:	01120111 	tsteq	r2, r1, lsl r1
 104:	0b590b58 	bleq	1642e6c <_binary_src_fatexample_img_size+0x1641a6c>
 108:	00000b57 	andeq	r0, r0, r7, asr fp
 10c:	01828912 	orreq	r8, r2, r2, lsl r9
 110:	31011101 	tstcc	r1, r1, lsl #2
 114:	00130113 	andseq	r0, r3, r3, lsl r1
 118:	828a1300 	addhi	r1, sl, #0, 6
 11c:	0a020001 	beq	80128 <_binary_src_fatexample_img_size+0x7ed28>
 120:	000a4291 	muleq	sl, r1, r2
 124:	82891400 	addhi	r1, r9, #0, 8
 128:	01110001 	tsteq	r1, r1
 12c:	00001331 	andeq	r1, r0, r1, lsr r3
 130:	01828915 	orreq	r8, r2, r5, lsl r9
 134:	31011101 	tstcc	r1, r1, lsl #2
 138:	16000013 			; <UNDEFINED> instruction: 0x16000013
 13c:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 8c <_Min_Heap_Size+0x8c>
 140:	0b3a0e03 	bleq	e83954 <_binary_src_fatexample_img_size+0xe82554>
 144:	0b390b3b 	bleq	e42e38 <_binary_src_fatexample_img_size+0xe41a38>
 148:	01110c27 	tsteq	r1, r7, lsr #24
 14c:	0a400112 	beq	100059c <_binary_src_fatexample_img_size+0xfff19c>
 150:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
 154:	17000013 	smladne	r0, r3, r0, r0
 158:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
 15c:	0b3b0b3a 	bleq	ec2e4c <_binary_src_fatexample_img_size+0xec1a4c>
 160:	13490b39 	movtne	r0, #39737	; 0x9b39
 164:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
 168:	18000006 	stmdane	r0, {r1, r2}
 16c:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; bc <_Min_Heap_Size+0xbc>
 170:	0b3a0e03 	bleq	e83984 <_binary_src_fatexample_img_size+0xe82584>
 174:	0b390b3b 	bleq	e42e68 <_binary_src_fatexample_img_size+0xe41a68>
 178:	01110c27 	tsteq	r1, r7, lsr #24
 17c:	0a400112 	beq	10005cc <_binary_src_fatexample_img_size+0xfff1cc>
 180:	000c4297 	muleq	ip, r7, r2
 184:	002e1900 	eoreq	r1, lr, r0, lsl #18
 188:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
 18c:	0b3b0b3a 	bleq	ec2e7c <_binary_src_fatexample_img_size+0xec1a7c>
 190:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
 194:	2e1a0000 	cdpcs	0, 1, cr0, cr10, cr0, {0}
 198:	030c3f01 	movweq	r3, #52993	; 0xcf01
 19c:	3b0b3a0e 	blcc	2ce9dc <_binary_src_fatexample_img_size+0x2cd5dc>
 1a0:	110b390b 	tstne	fp, fp, lsl #18
 1a4:	40011201 	andmi	r1, r1, r1, lsl #4
 1a8:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
 1ac:	00001301 	andeq	r1, r0, r1, lsl #6
 1b0:	0300341b 	movweq	r3, #1051	; 0x41b
 1b4:	3b0b3a08 	blcc	2ce9dc <_binary_src_fatexample_img_size+0x2cd5dc>
 1b8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 1bc:	b7060213 	smladlt	r6, r3, r2, r0
 1c0:	00000642 	andeq	r0, r0, r2, asr #12
 1c4:	3f012e1c 	svccc	0x00012e1c
 1c8:	3a0e030c 	bcc	380e00 <_binary_src_fatexample_img_size+0x37fa00>
 1cc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 1d0:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
 1d4:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
 1d8:	970a4001 	strls	r4, [sl, -r1]
 1dc:	13010c42 	movwne	r0, #7234	; 0x1c42
 1e0:	051d0000 	ldreq	r0, [sp, #-0]
 1e4:	3a0e0300 	bcc	380dec <_binary_src_fatexample_img_size+0x37f9ec>
 1e8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 1ec:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 1f0:	1e00000a 	cdpne	0, 0, cr0, cr0, cr10, {0}
 1f4:	0e03002e 	cdpeq	0, 0, cr0, cr3, cr14, {1}
 1f8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 1fc:	0b200b39 	bleq	802ee8 <_binary_src_fatexample_img_size+0x801ae8>
 200:	2e1f0000 	cdpcs	0, 1, cr0, cr15, cr0, {0}
 204:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
 208:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
 20c:	0b3a0e03 	bleq	e83a20 <_binary_src_fatexample_img_size+0xe82620>
 210:	0b390b3b 	bleq	e42f04 <_binary_src_fatexample_img_size+0xe41b04>
 214:	01000000 	mrseq	r0, (UNDEF: 0)
 218:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
 21c:	0e030b13 	vmoveq.32	d3[0], r0
 220:	01110e1b 	tsteq	r1, fp, lsl lr
 224:	06100112 			; <UNDEFINED> instruction: 0x06100112
 228:	24020000 	strcs	r0, [r2], #-0
 22c:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 230:	000e030b 	andeq	r0, lr, fp, lsl #6
 234:	00160300 	andseq	r0, r6, r0, lsl #6
 238:	0b3a0e03 	bleq	e83a4c <_binary_src_fatexample_img_size+0xe8264c>
 23c:	0b390b3b 	bleq	e42f30 <_binary_src_fatexample_img_size+0xe41b30>
 240:	00001349 	andeq	r1, r0, r9, asr #6
 244:	49003504 	stmdbmi	r0, {r2, r8, sl, ip, sp}
 248:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
 24c:	13490026 	movtne	r0, #36902	; 0x9026
 250:	24060000 	strcs	r0, [r6], #-0
 254:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 258:	0008030b 	andeq	r0, r8, fp, lsl #6
 25c:	000f0700 	andeq	r0, pc, r0, lsl #14
 260:	13490b0b 	movtne	r0, #39691	; 0x9b0b
 264:	15080000 	strne	r0, [r8, #-0]
 268:	010c2701 	tsteq	ip, r1, lsl #14
 26c:	09000013 	stmdbeq	r0, {r0, r1, r4}
 270:	13490005 	movtne	r0, #36869	; 0x9005
 274:	130a0000 	movwne	r0, #40960	; 0xa000
 278:	3a0b0b01 	bcc	2c2e84 <_binary_src_fatexample_img_size+0x2c1a84>
 27c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 280:	0013010b 	andseq	r0, r3, fp, lsl #2
 284:	000d0b00 	andeq	r0, sp, r0, lsl #22
 288:	0b3a0e03 	bleq	e83a9c <_binary_src_fatexample_img_size+0xe8269c>
 28c:	0b390b3b 	bleq	e42f80 <_binary_src_fatexample_img_size+0xe41b80>
 290:	0a381349 	beq	e04fbc <_binary_src_fatexample_img_size+0xe03bbc>
 294:	040c0000 	streq	r0, [ip], #-0
 298:	0b0b3e01 	bleq	2cfaa4 <_binary_src_fatexample_img_size+0x2ce6a4>
 29c:	3a13490b 	bcc	4d26d0 <_binary_src_fatexample_img_size+0x4d12d0>
 2a0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 2a4:	0013010b 	andseq	r0, r3, fp, lsl #2
 2a8:	00280d00 	eoreq	r0, r8, r0, lsl #26
 2ac:	0d1c0e03 	ldceq	14, cr0, [ip, #-12]
 2b0:	280e0000 	stmdacs	lr, {}	; <UNPREDICTABLE>
 2b4:	1c0e0300 	stcne	3, cr0, [lr], {-0}
 2b8:	0f00000b 	svceq	0x0000000b
 2bc:	050b0113 	streq	r0, [fp, #-275]	; 0xfffffeed
 2c0:	0b3b0b3a 	bleq	ec2fb0 <_binary_src_fatexample_img_size+0xec1bb0>
 2c4:	13010b39 	movwne	r0, #6969	; 0x1b39
 2c8:	0d100000 	ldceq	0, cr0, [r0, #-0]
 2cc:	3a080300 	bcc	200ed4 <_binary_src_fatexample_img_size+0x1ffad4>
 2d0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 2d4:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 2d8:	1100000a 	tstne	r0, sl
 2dc:	13490101 	movtne	r0, #37121	; 0x9101
 2e0:	00001301 	andeq	r1, r0, r1, lsl #6
 2e4:	49002112 	stmdbmi	r0, {r1, r4, r8, sp}
 2e8:	000b2f13 	andeq	r2, fp, r3, lsl pc
 2ec:	00211300 	eoreq	r1, r1, r0, lsl #6
 2f0:	052f1349 	streq	r1, [pc, #-841]!	; ffffffaf <BootRAM+0xef70750>
 2f4:	34140000 	ldrcc	r0, [r4], #-0
 2f8:	3a0e0300 	bcc	380f00 <_binary_src_fatexample_img_size+0x37fb00>
 2fc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 300:	3f13490b 	svccc	0x0013490b
 304:	000c3c0c 	andeq	r3, ip, ip, lsl #24
 308:	00341500 	eorseq	r1, r4, r0, lsl #10
 30c:	0b3a0e03 	bleq	e83b20 <_binary_src_fatexample_img_size+0xe82720>
 310:	0b390b3b 	bleq	e43004 <_binary_src_fatexample_img_size+0xe41c04>
 314:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 1f8 <_Min_Heap_Size+0x1f8>
 318:	00000c3c 	andeq	r0, r0, ip, lsr ip
 31c:	0b011316 	bleq	44f7c <_binary_src_fatexample_img_size+0x43b7c>
 320:	3b0b3a0b 	blcc	2ceb54 <_binary_src_fatexample_img_size+0x2cd754>
 324:	010b3905 	tsteq	fp, r5, lsl #18
 328:	17000013 	smladne	r0, r3, r0, r0
 32c:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 330:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 334:	13490b39 	movtne	r0, #39737	; 0x9b39
 338:	00000a38 	andeq	r0, r0, r8, lsr sl
 33c:	03000d18 	movweq	r0, #3352	; 0xd18
 340:	3b0b3a08 	blcc	2ceb68 <_binary_src_fatexample_img_size+0x2cd768>
 344:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 348:	000a3813 	andeq	r3, sl, r3, lsl r8
 34c:	00161900 	andseq	r1, r6, r0, lsl #18
 350:	0b3a0e03 	bleq	e83b64 <_binary_src_fatexample_img_size+0xe82764>
 354:	0b39053b 	bleq	e41848 <_binary_src_fatexample_img_size+0xe40448>
 358:	00001349 	andeq	r1, r0, r9, asr #6
 35c:	03000d1a 	movweq	r0, #3354	; 0xd1a
 360:	3b0b3a0e 	blcc	2ceba0 <_binary_src_fatexample_img_size+0x2cd7a0>
 364:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 368:	0d0b0b13 	vstreq	d0, [fp, #-76]	; 0xffffffb4
 36c:	380b0c0b 	stmdacc	fp, {r0, r1, r3, sl, fp}
 370:	1b00000a 	blne	3a0 <_Min_Heap_Size+0x3a0>
 374:	0b0b0117 	bleq	2c07d8 <_binary_src_fatexample_img_size+0x2bf3d8>
 378:	0b3b0b3a 	bleq	ec3068 <_binary_src_fatexample_img_size+0xec1c68>
 37c:	13010b39 	movwne	r0, #6969	; 0x1b39
 380:	0d1c0000 	ldceq	0, cr0, [ip, #-0]
 384:	3a0e0300 	bcc	380f8c <_binary_src_fatexample_img_size+0x37fb8c>
 388:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 38c:	0013490b 	andseq	r4, r3, fp, lsl #18
 390:	000d1d00 	andeq	r1, sp, r0, lsl #26
 394:	00001349 	andeq	r1, r0, r9, asr #6
 398:	49000d1e 	stmdbmi	r0, {r1, r2, r3, r4, r8, sl, fp}
 39c:	000a3813 	andeq	r3, sl, r3, lsl r8
 3a0:	00341f00 	eorseq	r1, r4, r0, lsl #30
 3a4:	0b3a0e03 	bleq	e83bb8 <_binary_src_fatexample_img_size+0xe827b8>
 3a8:	0b390b3b 	bleq	e4309c <_binary_src_fatexample_img_size+0xe41c9c>
 3ac:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 290 <_Min_Heap_Size+0x290>
 3b0:	00000a02 	andeq	r0, r0, r2, lsl #20
 3b4:	03003420 	movweq	r3, #1056	; 0x420
 3b8:	3b0b3a0e 	blcc	2cebf8 <_binary_src_fatexample_img_size+0x2cd7f8>
 3bc:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 3c0:	000a0213 	andeq	r0, sl, r3, lsl r2
 3c4:	012e2100 			; <UNDEFINED> instruction: 0x012e2100
 3c8:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
 3cc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 3d0:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
 3d4:	01111349 	tsteq	r1, r9, asr #6
 3d8:	06400112 			; <UNDEFINED> instruction: 0x06400112
 3dc:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
 3e0:	22000013 	andcs	r0, r0, #19
 3e4:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
 3e8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 3ec:	13490b39 	movtne	r0, #39737	; 0x9b39
 3f0:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
 3f4:	23000006 	movwcs	r0, #6
 3f8:	08030005 	stmdaeq	r3, {r0, r2}
 3fc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 400:	13490b39 	movtne	r0, #39737	; 0x9b39
 404:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
 408:	24000006 	strcs	r0, [r0], #-6
 40c:	08030034 	stmdaeq	r3, {r2, r4, r5}
 410:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 414:	13490b39 	movtne	r0, #39737	; 0x9b39
 418:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
 41c:	25000006 	strcs	r0, [r0, #-6]
 420:	0655010b 	ldrbeq	r0, [r5], -fp, lsl #2
 424:	2e260000 	cdpcs	0, 2, cr0, cr6, cr0, {0}
 428:	030c3f01 	movweq	r3, #52993	; 0xcf01
 42c:	3b0b3a0e 	blcc	2cec6c <_binary_src_fatexample_img_size+0x2cd86c>
 430:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 434:	1201110c 	andne	r1, r1, #12, 2
 438:	97064001 	strls	r4, [r6, -r1]
 43c:	13010c42 	movwne	r0, #7234	; 0x1c42
 440:	05270000 	streq	r0, [r7, #-0]!
 444:	3a0e0300 	bcc	38104c <_binary_src_fatexample_img_size+0x37fc4c>
 448:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 44c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 450:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
 454:	05280000 	streq	r0, [r8, #-0]!
 458:	3a080300 	bcc	201060 <_binary_src_fatexample_img_size+0x1ffc60>
 45c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 460:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 464:	2900000a 	stmdbcs	r0, {r1, r3}
 468:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
 46c:	0b3b0b3a 	bleq	ec315c <_binary_src_fatexample_img_size+0xec1d5c>
 470:	13490b39 	movtne	r0, #39737	; 0x9b39
 474:	00000a02 	andeq	r0, r0, r2, lsl #20
 478:	0300342a 	movweq	r3, #1066	; 0x42a
 47c:	3b0b3a08 	blcc	2ceca4 <_binary_src_fatexample_img_size+0x2cd8a4>
 480:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 484:	b7060213 	smladlt	r6, r3, r2, r0
 488:	00000642 	andeq	r0, r0, r2, asr #12
 48c:	0300342b 	movweq	r3, #1067	; 0x42b
 490:	3b0b3a0e 	blcc	2cecd0 <_binary_src_fatexample_img_size+0x2cd8d0>
 494:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 498:	b7060213 	smladlt	r6, r3, r2, r0
 49c:	00000642 	andeq	r0, r0, r2, asr #12
 4a0:	3f012e2c 	svccc	0x00012e2c
 4a4:	3a0e030c 	bcc	3810dc <_binary_src_fatexample_img_size+0x37fcdc>
 4a8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 4ac:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
 4b0:	97064001 	strls	r4, [r6, -r1]
 4b4:	13010c42 	movwne	r0, #7234	; 0x1c42
 4b8:	0b2d0000 	bleq	b404c0 <_binary_src_fatexample_img_size+0xb3f0c0>
 4bc:	01065501 	tsteq	r6, r1, lsl #10
 4c0:	2e000013 	mcrcs	0, 0, r0, cr0, cr3, {0}
 4c4:	0111010b 	tsteq	r1, fp, lsl #2
 4c8:	13010112 	movwne	r0, #4370	; 0x1112
 4cc:	892f0000 	stmdbhi	pc!, {}	; <UNPREDICTABLE>
 4d0:	11010182 	smlabbne	r1, r2, r1, r0
 4d4:	00130101 	andseq	r0, r3, r1, lsl #2
 4d8:	828a3000 	addhi	r3, sl, #0
 4dc:	0a020001 	beq	804e8 <_binary_src_fatexample_img_size+0x7f0e8>
 4e0:	000a4291 	muleq	sl, r1, r2
 4e4:	82893100 	addhi	r3, r9, #0, 2
 4e8:	01110101 	tsteq	r1, r1, lsl #2
 4ec:	89320000 	ldmdbhi	r2!, {}	; <UNPREDICTABLE>
 4f0:	11000182 	smlabbne	r0, r2, r1, r0
 4f4:	00133101 	andseq	r3, r3, r1, lsl #2
 4f8:	82893300 	addhi	r3, r9, #0, 6
 4fc:	01110101 	tsteq	r1, r1, lsl #2
 500:	13011331 	movwne	r1, #4913	; 0x1331
 504:	2e340000 	cdpcs	0, 3, cr0, cr4, cr0, {0}
 508:	3a0e0301 	bcc	381114 <_binary_src_fatexample_img_size+0x37fd14>
 50c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 510:	110c270b 	tstne	ip, fp, lsl #14
 514:	40011201 	andmi	r1, r1, r1, lsl #4
 518:	0c429706 	mcrreq	7, 0, r9, r2, cr6
 51c:	00001301 	andeq	r1, r0, r1, lsl #6
 520:	01828935 	orreq	r8, r2, r5, lsr r9
 524:	31011101 	tstcc	r1, r1, lsl #2
 528:	36000013 			; <UNDEFINED> instruction: 0x36000013
 52c:	1331011d 	teqne	r1, #1073741831	; 0x40000007
 530:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
 534:	5806550b 	stmdapl	r6, {r0, r1, r3, r8, sl, ip, lr}
 538:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
 53c:	0013010b 	andseq	r0, r3, fp, lsl #2
 540:	00053700 	andeq	r3, r5, r0, lsl #14
 544:	06021331 			; <UNDEFINED> instruction: 0x06021331
 548:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
 54c:	000f3800 	andeq	r3, pc, r0, lsl #16
 550:	00000b0b 	andeq	r0, r0, fp, lsl #22
 554:	00002639 	andeq	r2, r0, r9, lsr r6
 558:	012e3a00 			; <UNDEFINED> instruction: 0x012e3a00
 55c:	0b3a0e03 	bleq	e83d70 <_binary_src_fatexample_img_size+0xe82970>
 560:	0b390b3b 	bleq	e43254 <_binary_src_fatexample_img_size+0xe41e54>
 564:	0b200c27 	bleq	803608 <_binary_src_fatexample_img_size+0x802208>
 568:	00001301 	andeq	r1, r0, r1, lsl #6
 56c:	0300053b 	movweq	r0, #1339	; 0x53b
 570:	3b0b3a08 	blcc	2ced98 <_binary_src_fatexample_img_size+0x2cd998>
 574:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 578:	3c000013 	stccc	0, cr0, [r0], {19}
 57c:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
 580:	0b3b0b3a 	bleq	ec3270 <_binary_src_fatexample_img_size+0xec1e70>
 584:	13490b39 	movtne	r0, #39737	; 0x9b39
 588:	2e3d0000 	cdpcs	0, 3, cr0, cr13, cr0, {0}
 58c:	030c3f01 	movweq	r3, #52993	; 0xcf01
 590:	3b0b3a0e 	blcc	2cedd0 <_binary_src_fatexample_img_size+0x2cd9d0>
 594:	110b390b 	tstne	fp, fp, lsl #18
 598:	40011201 	andmi	r1, r1, r1, lsl #4
 59c:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
 5a0:	00001301 	andeq	r1, r0, r1, lsl #6
 5a4:	31011d3e 	tstcc	r1, lr, lsr sp
 5a8:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
 5ac:	01110b42 	tsteq	r1, r2, asr #22
 5b0:	0b580112 	bleq	1600a00 <_binary_src_fatexample_img_size+0x15ff600>
 5b4:	0b570b59 	bleq	15c3320 <_binary_src_fatexample_img_size+0x15c1f20>
 5b8:	2e3f0000 	cdpcs	0, 3, cr0, cr15, cr0, {0}
 5bc:	030c3f01 	movweq	r3, #52993	; 0xcf01
 5c0:	3b0b3a0e 	blcc	2cee00 <_binary_src_fatexample_img_size+0x2cda00>
 5c4:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 5c8:	1113490c 	tstne	r3, ip, lsl #18
 5cc:	40011201 	andmi	r1, r1, r1, lsl #4
 5d0:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
 5d4:	00001301 	andeq	r1, r0, r1, lsl #6
 5d8:	03000540 	movweq	r0, #1344	; 0x540
 5dc:	3b0b3a08 	blcc	2cee04 <_binary_src_fatexample_img_size+0x2cda04>
 5e0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 5e4:	b7060213 	smladlt	r6, r3, r2, r0
 5e8:	00000642 	andeq	r0, r0, r2, asr #12
 5ec:	3f002e41 	svccc	0x00002e41
 5f0:	3a0e030c 	bcc	381228 <_binary_src_fatexample_img_size+0x37fe28>
 5f4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 5f8:	4200000b 	andmi	r0, r0, #11
 5fc:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 54c <_Min_Stack_Size+0x14c>
 600:	0b3a0e03 	bleq	e83e14 <_binary_src_fatexample_img_size+0xe82a14>
 604:	0b390b3b 	bleq	e432f8 <_binary_src_fatexample_img_size+0xe41ef8>
 608:	00000b20 	andeq	r0, r0, r0, lsr #22
 60c:	03012e43 	movweq	r2, #7747	; 0x1e43
 610:	3b0b3a0e 	blcc	2cee50 <_binary_src_fatexample_img_size+0x2cda50>
 614:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
 618:	010b200c 	tsteq	fp, ip
 61c:	44000013 	strmi	r0, [r0], #-19	; 0xffffffed
 620:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
 624:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 628:	13490b39 	movtne	r0, #39737	; 0x9b39
 62c:	2e450000 	cdpcs	0, 4, cr0, cr5, cr0, {0}
 630:	11133100 	tstne	r3, r0, lsl #2
 634:	40011201 	andmi	r1, r1, r1, lsl #4
 638:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
 63c:	2e460000 	cdpcs	0, 4, cr0, cr6, cr0, {0}
 640:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
 644:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
 648:	0b3a0e03 	bleq	e83e5c <_binary_src_fatexample_img_size+0xe82a5c>
 64c:	0b390b3b 	bleq	e43340 <_binary_src_fatexample_img_size+0xe41f40>
 650:	01000000 	mrseq	r0, (UNDEF: 0)
 654:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
 658:	0e030b13 	vmoveq.32	d3[0], r0
 65c:	01110e1b 	tsteq	r1, fp, lsl lr
 660:	06100112 			; <UNDEFINED> instruction: 0x06100112
 664:	24020000 	strcs	r0, [r2], #-0
 668:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 66c:	000e030b 	andeq	r0, lr, fp, lsl #6
 670:	00160300 	andseq	r0, r6, r0, lsl #6
 674:	0b3a0e03 	bleq	e83e88 <_binary_src_fatexample_img_size+0xe82a88>
 678:	0b390b3b 	bleq	e4336c <_binary_src_fatexample_img_size+0xe41f6c>
 67c:	00001349 	andeq	r1, r0, r9, asr #6
 680:	49002604 	stmdbmi	r0, {r2, r9, sl, sp}
 684:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
 688:	13490035 	movtne	r0, #36917	; 0x9035
 68c:	24060000 	strcs	r0, [r6], #-0
 690:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 694:	0008030b 	andeq	r0, r8, fp, lsl #6
 698:	01130700 	tsteq	r3, r0, lsl #14
 69c:	0b3a0b0b 	bleq	e832d0 <_binary_src_fatexample_img_size+0xe81ed0>
 6a0:	0b390b3b 	bleq	e43394 <_binary_src_fatexample_img_size+0xe41f94>
 6a4:	00001301 	andeq	r1, r0, r1, lsl #6
 6a8:	03000d08 	movweq	r0, #3336	; 0xd08
 6ac:	3b0b3a0e 	blcc	2ceeec <_binary_src_fatexample_img_size+0x2cdaec>
 6b0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 6b4:	000a3813 	andeq	r3, sl, r3, lsl r8
 6b8:	00340900 	eorseq	r0, r4, r0, lsl #18
 6bc:	0b3a0e03 	bleq	e83ed0 <_binary_src_fatexample_img_size+0xe82ad0>
 6c0:	0b39053b 	bleq	e41bb4 <_binary_src_fatexample_img_size+0xe407b4>
 6c4:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 5a8 <_Min_Stack_Size+0x1a8>
 6c8:	00000c3c 	andeq	r0, r0, ip, lsr ip
 6cc:	0300340a 	movweq	r3, #1034	; 0x40a
 6d0:	3b0b3a0e 	blcc	2cef10 <_binary_src_fatexample_img_size+0x2cdb10>
 6d4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 6d8:	3c0c3f13 	stccc	15, cr3, [ip], {19}
 6dc:	0b00000c 	bleq	714 <_Min_Stack_Size+0x314>
 6e0:	0b0b0113 	bleq	2c0b34 <_binary_src_fatexample_img_size+0x2bf734>
 6e4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 6e8:	13010b39 	movwne	r0, #6969	; 0x1b39
 6ec:	0d0c0000 	stceq	0, cr0, [ip, #-0]
 6f0:	3a0e0300 	bcc	3812f8 <_binary_src_fatexample_img_size+0x37fef8>
 6f4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 6f8:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 6fc:	0d00000a 	stceq	0, cr0, [r0, #-40]	; 0xffffffd8
 700:	0803000d 	stmdaeq	r3, {r0, r2, r3}
 704:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 708:	13490b39 	movtne	r0, #39737	; 0x9b39
 70c:	00000a38 	andeq	r0, r0, r8, lsr sl
 710:	4901010e 	stmdbmi	r1, {r1, r2, r3, r8}
 714:	00130113 	andseq	r0, r3, r3, lsl r1
 718:	00210f00 	eoreq	r0, r1, r0, lsl #30
 71c:	0b2f1349 	bleq	bc5448 <_binary_src_fatexample_img_size+0xbc4048>
 720:	16100000 	ldrne	r0, [r0], -r0
 724:	3a0e0300 	bcc	38132c <_binary_src_fatexample_img_size+0x37ff2c>
 728:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 72c:	0013490b 	andseq	r4, r3, fp, lsl #18
 730:	01171100 	tsteq	r7, r0, lsl #2
 734:	0b3a0b0b 	bleq	e83368 <_binary_src_fatexample_img_size+0xe81f68>
 738:	0b390b3b 	bleq	e4342c <_binary_src_fatexample_img_size+0xe4202c>
 73c:	00001301 	andeq	r1, r0, r1, lsl #6
 740:	03000d12 	movweq	r0, #3346	; 0xd12
 744:	3b0b3a0e 	blcc	2cef84 <_binary_src_fatexample_img_size+0x2cdb84>
 748:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 74c:	13000013 	movwne	r0, #19
 750:	0b0b000f 	bleq	2c0794 <_binary_src_fatexample_img_size+0x2bf394>
 754:	13140000 	tstne	r4, #0
 758:	0b0e0301 	bleq	381364 <_binary_src_fatexample_img_size+0x37ff64>
 75c:	3b0b3a0b 	blcc	2cef90 <_binary_src_fatexample_img_size+0x2cdb90>
 760:	010b390b 	tsteq	fp, fp, lsl #18
 764:	15000013 	strne	r0, [r0, #-19]	; 0xffffffed
 768:	0803000d 	stmdaeq	r3, {r0, r2, r3}
 76c:	0b3b0b3a 	bleq	ec345c <_binary_src_fatexample_img_size+0xec205c>
 770:	13490b39 	movtne	r0, #39737	; 0x9b39
 774:	00000a38 	andeq	r0, r0, r8, lsr sl
 778:	0b000f16 	bleq	43d8 <_binary_src_fatexample_img_size+0x2fd8>
 77c:	0013490b 	andseq	r4, r3, fp, lsl #18
 780:	01131700 	tsteq	r3, r0, lsl #14
 784:	050b0e03 	streq	r0, [fp, #-3587]	; 0xfffff1fd
 788:	0b3b0b3a 	bleq	ec3478 <_binary_src_fatexample_img_size+0xec2078>
 78c:	13010b39 	movwne	r0, #6969	; 0x1b39
 790:	15180000 	ldrne	r0, [r8, #-0]
 794:	000c2700 	andeq	r2, ip, r0, lsl #14
 798:	01151900 	tsteq	r5, r0, lsl #18
 79c:	13490c27 	movtne	r0, #39975	; 0x9c27
 7a0:	00001301 	andeq	r1, r0, r1, lsl #6
 7a4:	4900051a 	stmdbmi	r0, {r1, r3, r4, r8, sl}
 7a8:	1b000013 	blne	7fc <_Min_Stack_Size+0x3fc>
 7ac:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
 7b0:	0b3a050b 	bleq	e81be4 <_binary_src_fatexample_img_size+0xe807e4>
 7b4:	0b39053b 	bleq	e41ca8 <_binary_src_fatexample_img_size+0xe408a8>
 7b8:	00001301 	andeq	r1, r0, r1, lsl #6
 7bc:	0301131c 	movweq	r1, #4892	; 0x131c
 7c0:	3a0b0b0e 	bcc	2c3400 <_binary_src_fatexample_img_size+0x2c2000>
 7c4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 7c8:	0013010b 	andseq	r0, r3, fp, lsl #2
 7cc:	01171d00 	tsteq	r7, r0, lsl #26
 7d0:	0b3a0b0b 	bleq	e83404 <_binary_src_fatexample_img_size+0xe82004>
 7d4:	0b39053b 	bleq	e41cc8 <_binary_src_fatexample_img_size+0xe408c8>
 7d8:	00001301 	andeq	r1, r0, r1, lsl #6
 7dc:	03000d1e 	movweq	r0, #3358	; 0xd1e
 7e0:	3b0b3a0e 	blcc	2cf020 <_binary_src_fatexample_img_size+0x2cdc20>
 7e4:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 7e8:	1f000013 	svcne	0x00000013
 7ec:	0e030013 	mcreq	0, 0, r0, cr3, cr3, {0}
 7f0:	00000c3c 	andeq	r0, r0, ip, lsr ip
 7f4:	27011520 	strcs	r1, [r1, -r0, lsr #10]
 7f8:	0013010c 	andseq	r0, r3, ip, lsl #2
 7fc:	00212100 	eoreq	r2, r1, r0, lsl #2
 800:	34220000 	strtcc	r0, [r2], #-0
 804:	3a0e0300 	bcc	38140c <_binary_src_fatexample_img_size+0x38000c>
 808:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 80c:	0e40870b 	cdpeq	7, 4, cr8, cr0, cr11, {0}
 810:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 6f4 <_Min_Stack_Size+0x2f4>
 814:	00000c3c 	andeq	r0, r0, ip, lsr ip
 818:	03003423 	movweq	r3, #1059	; 0x423
 81c:	3b0b3a0e 	blcc	2cf05c <_binary_src_fatexample_img_size+0x2cdc5c>
 820:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 824:	000a0213 	andeq	r0, sl, r3, lsl r2
 828:	00342400 	eorseq	r2, r4, r0, lsl #8
 82c:	0b3a0e03 	bleq	e84040 <_binary_src_fatexample_img_size+0xe82c40>
 830:	0b390b3b 	bleq	e43524 <_binary_src_fatexample_img_size+0xe42124>
 834:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 718 <_Min_Stack_Size+0x318>
 838:	00000a02 	andeq	r0, r0, r2, lsl #20
 83c:	49002125 	stmdbmi	r0, {r0, r2, r5, r8, sp}
 840:	00052f13 	andeq	r2, r5, r3, lsl pc
 844:	01042600 	tsteq	r4, r0, lsl #12
 848:	0b3e0e03 	bleq	f8405c <_binary_src_fatexample_img_size+0xf82c5c>
 84c:	13490b0b 	movtne	r0, #39691	; 0x9b0b
 850:	0b3b0b3a 	bleq	ec3540 <_binary_src_fatexample_img_size+0xec2140>
 854:	13010b39 	movwne	r0, #6969	; 0x1b39
 858:	28270000 	stmdacs	r7!, {}	; <UNPREDICTABLE>
 85c:	1c0e0300 	stcne	3, cr0, [lr], {-0}
 860:	2800000b 	stmdacs	r0, {r0, r1, r3}
 864:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 868:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 86c:	13490b39 	movtne	r0, #39737	; 0x9b39
 870:	0a020c3f 	beq	83974 <_binary_src_fatexample_img_size+0x82574>
 874:	34290000 	strtcc	r0, [r9], #-0
 878:	3a0e0300 	bcc	381480 <_binary_src_fatexample_img_size+0x380080>
 87c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 880:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 884:	2a00000a 	bcs	8b4 <_Min_Stack_Size+0x4b4>
 888:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 7d8 <_Min_Stack_Size+0x3d8>
 88c:	0b3a0e03 	bleq	e840a0 <_binary_src_fatexample_img_size+0xe82ca0>
 890:	0b39053b 	bleq	e41d84 <_binary_src_fatexample_img_size+0xe40984>
 894:	01120111 	tsteq	r2, r1, lsl r1
 898:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
 89c:	0013010c 	andseq	r0, r3, ip, lsl #2
 8a0:	82892b00 	addhi	r2, r9, #0, 22
 8a4:	01110001 	tsteq	r1, r1
 8a8:	310c4295 			; <UNDEFINED> instruction: 0x310c4295
 8ac:	2c000013 	stccs	0, cr0, [r0], {19}
 8b0:	08030034 	stmdaeq	r3, {r2, r4, r5}
 8b4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 8b8:	13490b39 	movtne	r0, #39737	; 0x9b39
 8bc:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
 8c0:	2d000006 	stccs	0, cr0, [r0, #-24]	; 0xffffffe8
 8c4:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 8c8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 8cc:	13490b39 	movtne	r0, #39737	; 0x9b39
 8d0:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
 8d4:	2e000006 	cdpcs	0, 0, cr0, cr0, cr6, {0}
 8d8:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 828 <_Min_Stack_Size+0x428>
 8dc:	0b3a0e03 	bleq	e840f0 <_binary_src_fatexample_img_size+0xe82cf0>
 8e0:	0b39053b 	bleq	e41dd4 <_binary_src_fatexample_img_size+0xe409d4>
 8e4:	13010b20 	movwne	r0, #6944	; 0x1b20
 8e8:	342f0000 	strtcc	r0, [pc], #-0	; 8f0 <_Min_Stack_Size+0x4f0>
 8ec:	3a080300 	bcc	2014f4 <_binary_src_fatexample_img_size+0x2000f4>
 8f0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 8f4:	0013490b 	andseq	r4, r3, fp, lsl #18
 8f8:	002e3000 	eoreq	r3, lr, r0
 8fc:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
 900:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 904:	01110b39 	tsteq	r1, r9, lsr fp
 908:	0a400112 	beq	1000d58 <_binary_src_fatexample_img_size+0xfff958>
 90c:	000c4297 	muleq	ip, r7, r2
 910:	010b3100 	mrseq	r3, (UNDEF: 27)
 914:	00000655 	andeq	r0, r0, r5, asr r6
 918:	3f012e32 	svccc	0x00012e32
 91c:	3a0e030c 	bcc	381554 <_binary_src_fatexample_img_size+0x380154>
 920:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 924:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
 928:	97064001 	strls	r4, [r6, -r1]
 92c:	13010c42 	movwne	r0, #7234	; 0x1c42
 930:	0b330000 	bleq	cc0938 <_binary_src_fatexample_img_size+0xcbf538>
 934:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
 938:	00130101 	andseq	r0, r3, r1, lsl #2
 93c:	010b3400 	tsteq	fp, r0, lsl #8
 940:	01120111 	tsteq	r2, r1, lsl r1
 944:	2e350000 	cdpcs	0, 3, cr0, cr5, cr0, {0}
 948:	030c3f00 	movweq	r3, #52992	; 0xcf00
 94c:	3b0b3a0e 	blcc	2cf18c <_binary_src_fatexample_img_size+0x2cdd8c>
 950:	200b3905 	andcs	r3, fp, r5, lsl #18
 954:	3600000b 	strcc	r0, [r0], -fp
 958:	01018289 	smlabbeq	r1, r9, r2, r8
 95c:	13310111 	teqne	r1, #1073741828	; 0x40000004
 960:	00001301 	andeq	r1, r0, r1, lsl #6
 964:	01828a37 	orreq	r8, r2, r7, lsr sl
 968:	910a0200 	mrsls	r0, R10_fiq
 96c:	00000a42 	andeq	r0, r0, r2, asr #20
 970:	01828938 	orreq	r8, r2, r8, lsr r9
 974:	31011101 	tstcc	r1, r1, lsl #2
 978:	39000013 	stmdbcc	r0, {r0, r1, r4}
 97c:	0e03012e 	adfeqsp	f0, f3, #0.5
 980:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 984:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
 988:	13010b20 	movwne	r0, #6944	; 0x1b20
 98c:	053a0000 	ldreq	r0, [sl, #-0]!
 990:	3a0e0300 	bcc	381598 <_binary_src_fatexample_img_size+0x380198>
 994:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 998:	0013490b 	andseq	r4, r3, fp, lsl #18
 99c:	010b3b00 	tsteq	fp, r0, lsl #22
 9a0:	00001301 	andeq	r1, r0, r1, lsl #6
 9a4:	0300343c 	movweq	r3, #1084	; 0x43c
 9a8:	3b0b3a0e 	blcc	2cf1e8 <_binary_src_fatexample_img_size+0x2cdde8>
 9ac:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 9b0:	3d000013 	stccc	0, cr0, [r0, #-76]	; 0xffffffb4
 9b4:	0000010b 	andeq	r0, r0, fp, lsl #2
 9b8:	03012e3e 	movweq	r2, #7742	; 0x1e3e
 9bc:	3b0b3a0e 	blcc	2cf1fc <_binary_src_fatexample_img_size+0x2cddfc>
 9c0:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
 9c4:	1201110c 	andne	r1, r1, #12, 2
 9c8:	97064001 	strls	r4, [r6, -r1]
 9cc:	13010c42 	movwne	r0, #7234	; 0x1c42
 9d0:	053f0000 	ldreq	r0, [pc, #-0]!	; 9d8 <_Min_Stack_Size+0x5d8>
 9d4:	3a0e0300 	bcc	3815dc <_binary_src_fatexample_img_size+0x3801dc>
 9d8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 9dc:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 9e0:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
 9e4:	89400000 	stmdbhi	r0, {}^	; <UNPREDICTABLE>
 9e8:	11000182 	smlabbne	r0, r2, r1, r0
 9ec:	00133101 	andseq	r3, r3, r1, lsl #2
 9f0:	82894100 	addhi	r4, r9, #0, 2
 9f4:	01110101 	tsteq	r1, r1, lsl #2
 9f8:	310c4295 			; <UNDEFINED> instruction: 0x310c4295
 9fc:	42000013 	andmi	r0, r0, #19
 a00:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 950 <_Min_Stack_Size+0x550>
 a04:	0b3a0e03 	bleq	e84218 <_binary_src_fatexample_img_size+0xe82e18>
 a08:	0b390b3b 	bleq	e436fc <_binary_src_fatexample_img_size+0xe422fc>
 a0c:	13490c27 	movtne	r0, #39975	; 0x9c27
 a10:	01120111 	tsteq	r2, r1, lsl r1
 a14:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
 a18:	0013010c 	andseq	r0, r3, ip, lsl #2
 a1c:	00054300 	andeq	r4, r5, r0, lsl #6
 a20:	0b3a0803 	bleq	e82a34 <_binary_src_fatexample_img_size+0xe81634>
 a24:	0b390b3b 	bleq	e43718 <_binary_src_fatexample_img_size+0xe42318>
 a28:	06021349 	streq	r1, [r2], -r9, asr #6
 a2c:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
 a30:	00054400 	andeq	r4, r5, r0, lsl #8
 a34:	0b3a0e03 	bleq	e84248 <_binary_src_fatexample_img_size+0xe82e48>
 a38:	0b390b3b 	bleq	e4372c <_binary_src_fatexample_img_size+0xe4232c>
 a3c:	0a021349 	beq	85768 <_binary_src_fatexample_img_size+0x84368>
 a40:	2e450000 	cdpcs	0, 4, cr0, cr5, cr0, {0}
 a44:	030c3f01 	movweq	r3, #52993	; 0xcf01
 a48:	3b0b3a0e 	blcc	2cf288 <_binary_src_fatexample_img_size+0x2cde88>
 a4c:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 a50:	1201110c 	andne	r1, r1, #12, 2
 a54:	970a4001 	strls	r4, [sl, -r1]
 a58:	13010c42 	movwne	r0, #7234	; 0x1c42
 a5c:	05460000 	strbeq	r0, [r6, #-0]
 a60:	3a0e0300 	bcc	381668 <_binary_src_fatexample_img_size+0x380268>
 a64:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 a68:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 a6c:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
 a70:	26470000 	strbcs	r0, [r7], -r0
 a74:	48000000 	stmdami	r0, {}	; <UNPREDICTABLE>
 a78:	1331012e 	teqne	r1, #-2147483637	; 0x8000000b
 a7c:	01120111 	tsteq	r2, r1, lsl r1
 a80:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
 a84:	0013010c 	andseq	r0, r3, ip, lsl #2
 a88:	00054900 	andeq	r4, r5, r0, lsl #18
 a8c:	06021331 			; <UNDEFINED> instruction: 0x06021331
 a90:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
 a94:	011d4a00 	tsteq	sp, r0, lsl #20
 a98:	01521331 	cmpeq	r2, r1, lsr r3
 a9c:	550b42b8 	strpl	r4, [fp, #-696]	; 0xfffffd48
 aa0:	590b5806 	stmdbpl	fp, {r1, r2, fp, ip, lr}
 aa4:	000b5705 	andeq	r5, fp, r5, lsl #14
 aa8:	010b4b00 	tsteq	fp, r0, lsl #22
 aac:	06551331 			; <UNDEFINED> instruction: 0x06551331
 ab0:	00001301 	andeq	r1, r0, r1, lsl #6
 ab4:	3100344c 	tstcc	r0, ip, asr #8
 ab8:	b7060213 	smladlt	r6, r3, r2, r0
 abc:	00000642 	andeq	r0, r0, r2, asr #12
 ac0:	31010b4d 	tstcc	r1, sp, asr #22
 ac4:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
 ac8:	00130101 	andseq	r0, r3, r1, lsl #2
 acc:	010b4e00 	tsteq	fp, r0, lsl #28
 ad0:	01111331 	tsteq	r1, r1, lsr r3
 ad4:	00000112 	andeq	r0, r0, r2, lsl r1
 ad8:	31002e4f 	tstcc	r0, pc, asr #28
 adc:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
 ae0:	970a4001 	strls	r4, [sl, -r1]
 ae4:	00000c42 	andeq	r0, r0, r2, asr #24
 ae8:	31012e50 	tstcc	r1, r0, asr lr
 aec:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
 af0:	970a4001 	strls	r4, [sl, -r1]
 af4:	13010c42 	movwne	r0, #7234	; 0x1c42
 af8:	1d510000 	ldclne	0, cr0, [r1, #-0]
 afc:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
 b00:	0b42b801 	bleq	10aeb0c <_binary_src_fatexample_img_size+0x10ad70c>
 b04:	01120111 	tsteq	r2, r1, lsl r1
 b08:	05590b58 	ldrbeq	r0, [r9, #-2904]	; 0xfffff4a8
 b0c:	00000b57 	andeq	r0, r0, r7, asr fp
 b10:	31003452 	tstcc	r0, r2, asr r4
 b14:	53000013 	movwpl	r0, #19
 b18:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; a68 <_Min_Stack_Size+0x668>
 b1c:	40870c3c 	addmi	r0, r7, ip, lsr ip
 b20:	3a0e030e 	bcc	381760 <_binary_src_fatexample_img_size+0x380360>
 b24:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 b28:	0000000b 	andeq	r0, r0, fp
 b2c:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
 b30:	030b130e 	movweq	r1, #45838	; 0xb30e
 b34:	110e1b0e 	tstne	lr, lr, lsl #22
 b38:	10061201 	andne	r1, r6, r1, lsl #4
 b3c:	02000017 	andeq	r0, r0, #23
 b40:	0b0b0024 	bleq	2c0bd8 <_binary_src_fatexample_img_size+0x2bf7d8>
 b44:	0e030b3e 	vmoveq.16	d3[0], r0
 b48:	24030000 	strcs	r0, [r3], #-0
 b4c:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 b50:	0008030b 	andeq	r0, r8, fp, lsl #6
 b54:	00160400 	andseq	r0, r6, r0, lsl #8
 b58:	0b3a0e03 	bleq	e8436c <_binary_src_fatexample_img_size+0xe82f6c>
 b5c:	0b390b3b 	bleq	e43850 <_binary_src_fatexample_img_size+0xe42450>
 b60:	00001349 	andeq	r1, r0, r9, asr #6
 b64:	49010105 	stmdbmi	r1, {r0, r2, r8}
 b68:	00130113 	andseq	r0, r3, r3, lsl r1
 b6c:	00210600 	eoreq	r0, r1, r0, lsl #12
 b70:	0f070000 	svceq	0x00070000
 b74:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
 b78:	08000013 	stmdaeq	r0, {r0, r1, r4}
 b7c:	19270015 	stmdbne	r7!, {r0, r2, r4}
 b80:	34090000 	strcc	r0, [r9], #-0
 b84:	3a0e0300 	bcc	38178c <_binary_src_fatexample_img_size+0x38038c>
 b88:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 b8c:	3f13490b 	svccc	0x0013490b
 b90:	00193c19 	andseq	r3, r9, r9, lsl ip
 b94:	012e0a00 			; <UNDEFINED> instruction: 0x012e0a00
 b98:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 b9c:	0b3b0b3a 	bleq	ec388c <_binary_src_fatexample_img_size+0xec248c>
 ba0:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
 ba4:	06120111 			; <UNDEFINED> instruction: 0x06120111
 ba8:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
 bac:	00130119 	andseq	r0, r3, r9, lsl r1
 bb0:	00340b00 	eorseq	r0, r4, r0, lsl #22
 bb4:	0b3a0e03 	bleq	e843c8 <_binary_src_fatexample_img_size+0xe82fc8>
 bb8:	0b390b3b 	bleq	e438ac <_binary_src_fatexample_img_size+0xe424ac>
 bbc:	17021349 	strne	r1, [r2, -r9, asr #6]
 bc0:	001742b7 			; <UNDEFINED> instruction: 0x001742b7
 bc4:	00340c00 	eorseq	r0, r4, r0, lsl #24
 bc8:	0b3a0803 	bleq	e82bdc <_binary_src_fatexample_img_size+0xe817dc>
 bcc:	0b390b3b 	bleq	e438c0 <_binary_src_fatexample_img_size+0xe424c0>
 bd0:	17021349 	strne	r1, [r2, -r9, asr #6]
 bd4:	001742b7 			; <UNDEFINED> instruction: 0x001742b7
 bd8:	82890d00 	addhi	r0, r9, #0, 26
 bdc:	01110001 	tsteq	r1, r1
 be0:	00001331 	andeq	r1, r0, r1, lsr r3
 be4:	3f002e0e 	svccc	0x00002e0e
 be8:	6e193c19 	mrcvs	12, 0, r3, cr9, cr9, {0}
 bec:	3a0e030e 	bcc	38182c <_binary_src_fatexample_img_size+0x38042c>
 bf0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 bf4:	0000000b 	andeq	r0, r0, fp

Disassembly of section .debug_loc:

00000000 <.debug_loc>:
       0:	08000df4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, sl, fp}
       4:	08000df6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, r8, sl, fp}
       8:	007d0002 	rsbseq	r0, sp, r2
       c:	08000df6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, r8, sl, fp}
      10:	08000e78 	stmdaeq	r0, {r3, r4, r5, r6, r9, sl, fp}
      14:	087d0002 	ldmdaeq	sp!, {r1}^
	...
      20:	00010100 	andeq	r0, r1, r0, lsl #2
      24:	00000000 	andeq	r0, r0, r0
      28:	08000e0a 	stmdaeq	r0, {r1, r3, r9, sl, fp}
      2c:	08000e16 	stmdaeq	r0, {r1, r2, r4, r9, sl, fp}
      30:	16520001 	ldrbne	r0, [r2], -r1
      34:	1a08000e 	bne	200074 <_binary_src_fatexample_img_size+0x1fec74>
      38:	0808000e 	stmdaeq	r8, {r1, r2, r3}
      3c:	11007200 	mrsne	r7, R8_usr
      40:	1a4fffff 	bne	1400044 <_binary_src_fatexample_img_size+0x13fec44>
      44:	000e1a9f 	muleq	lr, pc, sl	; <UNPREDICTABLE>
      48:	000e1e08 	andeq	r1, lr, r8, lsl #28
      4c:	52000108 	andpl	r0, r0, #8, 2
      50:	08000e1e 	stmdaeq	r0, {r1, r2, r3, r4, r9, sl, fp}
      54:	08000e28 	stmdaeq	r0, {r3, r5, r9, sl, fp}
      58:	08730002 	ldmdaeq	r3!, {r1}^
	...
      64:	00010100 	andeq	r0, r1, r0, lsl #2
      68:	00000000 	andeq	r0, r0, r0
      6c:	08000e1e 	stmdaeq	r0, {r1, r2, r3, r4, r9, sl, fp}
      70:	08000e2a 	stmdaeq	r0, {r1, r3, r5, r9, sl, fp}
      74:	2a520001 	bcs	1480080 <_binary_src_fatexample_img_size+0x147ec80>
      78:	2e08000e 	cdpcs	0, 0, cr0, cr8, cr14, {0}
      7c:	0808000e 	stmdaeq	r8, {r1, r2, r3}
      80:	11007200 	mrsne	r7, R8_usr
      84:	1a73ffff 	bne	1d00088 <_binary_src_fatexample_img_size+0x1cfec88>
      88:	000e2e9f 	muleq	lr, pc, lr	; <UNPREDICTABLE>
      8c:	000e3208 	andeq	r3, lr, r8, lsl #4
      90:	52000108 	andpl	r0, r0, #8, 2
      94:	08000e32 	stmdaeq	r0, {r1, r4, r5, r9, sl, fp}
      98:	08000e3a 	stmdaeq	r0, {r1, r3, r4, r5, r9, sl, fp}
      9c:	08730002 	ldmdaeq	r3!, {r1}^
	...
      a8:	00010100 	andeq	r0, r1, r0, lsl #2
      ac:	0e340000 	cdpeq	0, 3, cr0, cr4, cr0, {0}
      b0:	0e3c0800 	cdpeq	8, 3, cr0, cr12, cr0, {0}
      b4:	00010800 	andeq	r0, r1, r0, lsl #16
      b8:	000e3c51 	andeq	r3, lr, r1, asr ip
      bc:	000e4008 	andeq	r4, lr, r8
      c0:	71000a08 	tstvc	r0, r8, lsl #20
      c4:	ffff1100 			; <UNDEFINED> instruction: 0xffff1100
      c8:	1a7f9fff 	bne	1fe80cc <_binary_src_fatexample_img_size+0x1fe6ccc>
      cc:	000e409f 	muleq	lr, pc, r0	; <UNPREDICTABLE>
      d0:	000e5508 	andeq	r5, lr, r8, lsl #10
      d4:	51000108 	tstpl	r0, r8, lsl #2
	...
      e0:	00010100 	andeq	r0, r1, r0, lsl #2
      e4:	0e440000 	cdpeq	0, 4, cr0, cr4, cr0, {0}
      e8:	0e4c0800 	cdpeq	8, 4, cr0, cr12, cr0, {0}
      ec:	00010800 	andeq	r0, r1, r0, lsl #16
      f0:	000e4c52 	andeq	r4, lr, r2, asr ip
      f4:	000e5008 	andeq	r5, lr, r8
      f8:	72000708 	andvc	r0, r0, #8, 14	; 0x200000
      fc:	f3ff0b00 	vtbl.8	d16, {d15-d18}, d0
     100:	0e509f1a 	mrceq	15, 2, r9, cr0, cr10, {0}
     104:	0e550800 	cdpeq	8, 5, cr0, cr5, cr0, {0}
     108:	00010800 	andeq	r0, r1, r0, lsl #16
     10c:	00000052 	andeq	r0, r0, r2, asr r0
     110:	00000000 	andeq	r0, r0, r0
     114:	02020000 	andeq	r0, r2, #0
     118:	58000000 	stmdapl	r0, {}	; <UNPREDICTABLE>
     11c:	58080003 	stmdapl	r8, {r0, r1}
     120:	01080003 	tsteq	r8, r3
     124:	03585000 	cmpeq	r8, #0
     128:	035c0800 	cmpeq	ip, #0, 16
     12c:	00010800 	andeq	r0, r1, r0, lsl #16
     130:	00035c50 	andeq	r5, r3, r0, asr ip
     134:	00036408 	andeq	r6, r3, r8, lsl #8
     138:	70000308 	andvc	r0, r0, r8, lsl #6
     13c:	00009f01 	andeq	r9, r0, r1, lsl #30
     140:	00000000 	andeq	r0, r0, r0
     144:	00010000 	andeq	r0, r1, r0
     148:	00000000 	andeq	r0, r0, r0
     14c:	03160000 	tsteq	r6, #0
     150:	031a0800 	tsteq	sl, #0, 16
     154:	00020800 	andeq	r0, r2, r0, lsl #16
     158:	031a9f30 	tsteq	sl, #48, 30	; 0xc0
     15c:	03220800 			; <UNDEFINED> instruction: 0x03220800
     160:	00070800 	andeq	r0, r7, r0, lsl #16
     164:	720fff0a 	andvc	pc, pc, #10, 30	; 0x28
     168:	229f1c00 	addscs	r1, pc, #0, 24
     16c:	24080003 	strcs	r0, [r8], #-3
     170:	07080003 	streq	r0, [r8, -r3]
     174:	10000a00 	andne	r0, r0, r0, lsl #20
     178:	9f1c0072 	svcls	0x001c0072
     17c:	0800032c 	stmdaeq	r0, {r2, r3, r5, r8, r9}
     180:	08000354 	stmdaeq	r0, {r2, r4, r6, r8, r9}
     184:	ff0a0004 			; <UNDEFINED> instruction: 0xff0a0004
     188:	00009f1f 	andeq	r9, r0, pc, lsl pc
	...
     194:	03100000 	tsteq	r0, #0
     198:	031a0800 	tsteq	sl, #0, 16
     19c:	00010800 	andeq	r0, r1, r0, lsl #16
     1a0:	00031a52 	andeq	r1, r3, r2, asr sl
     1a4:	00033408 	andeq	r3, r3, r8, lsl #8
     1a8:	73000208 	movwvc	r0, #520	; 0x208
     1ac:	00000008 	andeq	r0, r0, r8
	...
     1bc:	0001e800 	andeq	lr, r1, r0, lsl #16
     1c0:	00020a08 	andeq	r0, r2, r8, lsl #20
     1c4:	50000108 	andpl	r0, r0, r8, lsl #2
     1c8:	0800020a 	stmdaeq	r0, {r1, r3, r9}
     1cc:	0800028e 	stmdaeq	r0, {r1, r2, r3, r7, r9}
     1d0:	01f30004 	mvnseq	r0, r4
     1d4:	028e9f50 	addeq	r9, lr, #80, 30	; 0x140
     1d8:	02ea0800 	rsceq	r0, sl, #0, 16
     1dc:	00010800 	andeq	r0, r1, r0, lsl #16
     1e0:	0002ea50 	andeq	lr, r2, r0, asr sl
     1e4:	00030c08 	andeq	r0, r3, r8, lsl #24
     1e8:	f3000408 	vshl.u8	d0, d8, d0
     1ec:	009f5001 	addseq	r5, pc, r1
     1f0:	00000000 	andeq	r0, r0, r0
     1f4:	01000000 	mrseq	r0, (UNDEF: 0)
     1f8:	00000000 	andeq	r0, r0, r0
     1fc:	01000000 	mrseq	r0, (UNDEF: 0)
     200:	00000000 	andeq	r0, r0, r0
     204:	01010000 	mrseq	r0, (UNDEF: 1)
     208:	00000000 	andeq	r0, r0, r0
     20c:	01010000 	mrseq	r0, (UNDEF: 1)
     210:	00000000 	andeq	r0, r0, r0
     214:	00000100 	andeq	r0, r0, r0, lsl #2
     218:	f2000000 	vhadd.s8	d0, d0, d0
     21c:	f6080001 			; <UNDEFINED> instruction: 0xf6080001
     220:	02080001 	andeq	r0, r8, #1
     224:	f69f3000 			; <UNDEFINED> instruction: 0xf69f3000
     228:	fe080001 	cdp2	0, 0, cr0, cr8, cr1, {0}
     22c:	07080001 	streq	r0, [r8, -r1]
     230:	0fff0a00 	svceq	0x00ff0a00
     234:	9f1c0072 	svcls	0x001c0072
     238:	080001fe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, r8}
     23c:	08000200 	stmdaeq	r0, {r9}
     240:	000a0007 	andeq	r0, sl, r7
     244:	1c007210 	sfmne	f7, 4, [r0], {16}
     248:	00020c9f 	muleq	r2, pc, ip	; <UNPREDICTABLE>
     24c:	00020e08 	andeq	r0, r2, r8, lsl #28
     250:	0a000708 	beq	1e78 <_binary_src_fatexample_img_size+0xa78>
     254:	00730fff 	ldrshteq	r0, [r3], #-255	; 0xffffff01
     258:	02449f1c 	subeq	r9, r4, #28, 30	; 0x70
     25c:	024a0800 	subeq	r0, sl, #0, 16
     260:	00020800 	andeq	r0, r2, r0, lsl #16
     264:	024a9f30 	subeq	r9, sl, #48, 30	; 0xc0
     268:	02500800 	subseq	r0, r0, #0, 16
     26c:	00070800 	andeq	r0, r7, r0, lsl #16
     270:	730fff0a 	movwvc	pc, #65290	; 0xff0a	; <UNPREDICTABLE>
     274:	509f1c00 	addspl	r1, pc, r0, lsl #24
     278:	52080002 	andpl	r0, r8, #2
     27c:	07080002 	streq	r0, [r8, -r2]
     280:	10000a00 	andne	r0, r0, r0, lsl #20
     284:	9f1c0073 	svcls	0x001c0073
     288:	08000264 	stmdaeq	r0, {r2, r5, r6, r9}
     28c:	08000276 	stmdaeq	r0, {r1, r2, r4, r5, r6, r9}
     290:	ff0a0004 			; <UNDEFINED> instruction: 0xff0a0004
     294:	02769f1f 	rsbseq	r9, r6, #31, 30	; 0x7c
     298:	027a0800 	rsbseq	r0, sl, #0, 16
     29c:	00020800 	andeq	r0, r2, r0, lsl #16
     2a0:	027a9f30 	rsbseq	r9, sl, #48, 30	; 0xc0
     2a4:	02840800 	addeq	r0, r4, #0, 16
     2a8:	00070800 	andeq	r0, r7, r0, lsl #16
     2ac:	730fff0a 	movwvc	pc, #65290	; 0xff0a	; <UNPREDICTABLE>
     2b0:	849f1c00 	ldrhi	r1, [pc], #3072	; 2b8 <_Min_Heap_Size+0x2b8>
     2b4:	86080002 	strhi	r0, [r8], -r2
     2b8:	07080002 	streq	r0, [r8, -r2]
     2bc:	10000a00 	andne	r0, r0, r0, lsl #20
     2c0:	9f1c0073 	svcls	0x001c0073
     2c4:	0800028e 	stmdaeq	r0, {r1, r2, r3, r7, r9}
     2c8:	080002c8 	stmdaeq	r0, {r3, r6, r7, r9}
     2cc:	ff0a0004 			; <UNDEFINED> instruction: 0xff0a0004
     2d0:	02c89f1f 	sbceq	r9, r8, #31, 30	; 0x7c
     2d4:	02ce0800 	sbceq	r0, lr, #0, 16
     2d8:	00020800 	andeq	r0, r2, r0, lsl #16
     2dc:	02ce9f30 	sbceq	r9, lr, #48, 30	; 0xc0
     2e0:	02d40800 	sbcseq	r0, r4, #0, 16
     2e4:	00070800 	andeq	r0, r7, r0, lsl #16
     2e8:	730fff0a 	movwvc	pc, #65290	; 0xff0a	; <UNPREDICTABLE>
     2ec:	d49f1c00 	ldrle	r1, [pc], #3072	; 2f4 <_Min_Heap_Size+0x2f4>
     2f0:	d6080002 	strle	r0, [r8], -r2
     2f4:	07080002 	streq	r0, [r8, -r2]
     2f8:	10000a00 	andne	r0, r0, r0, lsl #20
     2fc:	9f1c0073 	svcls	0x001c0073
     300:	080002e6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r9}
     304:	080002ea 	stmdaeq	r0, {r1, r3, r5, r6, r7, r9}
     308:	9f300002 	svcls	0x00300002
     30c:	080002ea 	stmdaeq	r0, {r1, r3, r5, r6, r7, r9}
     310:	080002f0 	stmdaeq	r0, {r4, r5, r6, r7, r9}
     314:	ff0a0007 			; <UNDEFINED> instruction: 0xff0a0007
     318:	1c00730f 	stcne	3, cr7, [r0], {15}
     31c:	0002f09f 	muleq	r2, pc, r0	; <UNPREDICTABLE>
     320:	0002f208 	andeq	pc, r2, r8, lsl #4
     324:	0a000708 	beq	1f4c <_binary_src_fatexample_img_size+0xb4c>
     328:	00731000 	rsbseq	r1, r3, r0
     32c:	00009f1c 	andeq	r9, r0, ip, lsl pc
	...
     338:	01000000 	mrseq	r0, (UNDEF: 0)
     33c:	00020201 	andeq	r0, r2, r1, lsl #4
     340:	03010100 	movweq	r0, #4352	; 0x1100
     344:	00000003 	andeq	r0, r0, r3
     348:	00010100 	andeq	r0, r1, r0, lsl #2
     34c:	00000000 	andeq	r0, r0, r0
     350:	00010100 	andeq	r0, r1, r0, lsl #2
     354:	00000000 	andeq	r0, r0, r0
     358:	01ec0000 	mvneq	r0, r0
     35c:	01f60800 	mvnseq	r0, r0, lsl #16
     360:	00010800 	andeq	r0, r1, r0, lsl #16
     364:	0001f652 	andeq	pc, r1, r2, asr r6	; <UNPREDICTABLE>
     368:	00020c08 	andeq	r0, r2, r8, lsl #24
     36c:	73000208 	movwvc	r0, #520	; 0x208
     370:	00022c08 	andeq	r2, r2, r8, lsl #24
     374:	00023208 	andeq	r3, r2, r8, lsl #4
     378:	53000108 	movwpl	r0, #264	; 0x108
     37c:	08000232 	stmdaeq	r0, {r1, r4, r5, r9}
     380:	08000232 	stmdaeq	r0, {r1, r4, r5, r9}
     384:	00730007 	rsbseq	r0, r3, r7
     388:	21243c40 			; <UNDEFINED> instruction: 0x21243c40
     38c:	0002329f 	muleq	r2, pc, r2	; <UNPREDICTABLE>
     390:	00023608 	andeq	r3, r2, r8, lsl #12
     394:	73000708 	movwvc	r0, #1800	; 0x708
     398:	24404100 	strbcs	r4, [r0], #-256	; 0xffffff00
     39c:	02369f21 	eorseq	r9, r6, #33, 30	; 0x84
     3a0:	02360800 	eorseq	r0, r6, #0, 16
     3a4:	00010800 	andeq	r0, r1, r0, lsl #16
     3a8:	00023653 	andeq	r3, r2, r3, asr r6
     3ac:	00023608 	andeq	r3, r2, r8, lsl #12
     3b0:	73000708 	movwvc	r0, #1800	; 0x708
     3b4:	ff0f0b00 			; <UNDEFINED> instruction: 0xff0f0b00
     3b8:	02369f1a 	eorseq	r9, r6, #26, 30	; 0x68
     3bc:	023a0800 	eorseq	r0, sl, #0, 16
     3c0:	00070800 	andeq	r0, r7, r0, lsl #16
     3c4:	0f0b0073 	svceq	0x000b0073
     3c8:	3a9f1ac7 	bcc	fe7c6eec <BootRAM+0xd73768d>
     3cc:	4a080002 	bmi	2003dc <_binary_src_fatexample_img_size+0x1fefdc>
     3d0:	01080002 	tsteq	r8, r2
     3d4:	025e5100 	subseq	r5, lr, #0, 2
     3d8:	025e0800 	subseq	r0, lr, #0, 16
     3dc:	00010800 	andeq	r0, r1, r0, lsl #16
     3e0:	00025e53 	andeq	r5, r2, r3, asr lr
     3e4:	00026208 	andeq	r6, r2, r8, lsl #4
     3e8:	73000708 	movwvc	r0, #1800	; 0x708
     3ec:	243f4000 	ldrtcs	r4, [pc], #-0	; 3f4 <_Min_Heap_Size+0x3f4>
     3f0:	02629f21 	rsbeq	r9, r2, #33, 30	; 0x84
     3f4:	02640800 	rsbeq	r0, r4, #0, 16
     3f8:	00010800 	andeq	r0, r1, r0, lsl #16
     3fc:	00026453 	andeq	r6, r2, r3, asr r4
     400:	00026c08 	andeq	r6, r2, r8, lsl #24
     404:	71000208 	tstvc	r0, r8, lsl #4
     408:	00026e08 	andeq	r6, r2, r8, lsl #28
     40c:	00026e08 	andeq	r6, r2, r8, lsl #28
     410:	53000108 	movwpl	r0, #264	; 0x108
     414:	0800026e 	stmdaeq	r0, {r1, r2, r3, r5, r6, r9}
     418:	08000274 	stmdaeq	r0, {r2, r4, r5, r6, r9}
     41c:	00730006 	rsbseq	r0, r3, r6
     420:	9f1afc09 	svcls	0x001afc09
     424:	08000274 	stmdaeq	r0, {r2, r4, r5, r6, r9}
     428:	0800027a 	stmdaeq	r0, {r1, r3, r4, r5, r6, r9}
     42c:	7a530001 	bvc	14c0438 <_binary_src_fatexample_img_size+0x14bf038>
     430:	8e080002 	cdphi	0, 0, cr0, cr8, cr2, {0}
     434:	02080002 	andeq	r0, r8, #2
     438:	8e087100 	adfhie	f7, f0, f0
     43c:	96080002 	strls	r0, [r8], -r2
     440:	02080002 	andeq	r0, r8, #2
     444:	00087300 	andeq	r7, r8, r0, lsl #6
     448:	00000000 	andeq	r0, r0, r0
     44c:	44000000 	strmi	r0, [r0], #-0
     450:	46000003 	strmi	r0, [r0], -r3
     454:	02000003 	andeq	r0, r0, #3
     458:	46007d00 	strmi	r7, [r0], -r0, lsl #26
     45c:	9c000003 	stcls	0, cr0, [r0], {3}
     460:	02000003 	andeq	r0, r0, #3
     464:	000c7d00 	andeq	r7, ip, r0, lsl #26
	...
     470:	44000000 	strmi	r0, [r0], #-0
     474:	54000003 	strpl	r0, [r0], #-3
     478:	01000003 	tsteq	r0, r3
     47c:	03545000 	cmpeq	r4, #0
     480:	039c0000 	orrseq	r0, ip, #0
     484:	00040000 	andeq	r0, r4, r0
     488:	9f5001f3 	svcls	0x005001f3
	...
     498:	03440000 	movteq	r0, #16384	; 0x4000
     49c:	036c0000 	cmneq	ip, #0
     4a0:	00010000 	andeq	r0, r1, r0
     4a4:	00036c51 	andeq	r6, r3, r1, asr ip
     4a8:	00037000 	andeq	r7, r3, r0
     4ac:	71000300 	mrsvc	r0, LR_irq
     4b0:	03709f02 	cmneq	r0, #2, 30
     4b4:	039c0000 	orrseq	r0, ip, #0
     4b8:	00040000 	andeq	r0, r4, r0
     4bc:	9f5101f3 	svcls	0x005101f3
	...
     4c8:	03580000 	cmpeq	r8, #0
     4cc:	039c0000 	orrseq	r0, ip, #0
     4d0:	00010000 	andeq	r0, r1, r0
     4d4:	00000050 	andeq	r0, r0, r0, asr r0
     4d8:	00000000 	andeq	r0, r0, r0
     4dc:	00000100 	andeq	r0, r0, r0, lsl #2
     4e0:	5a010000 	bpl	404e8 <_binary_src_fatexample_img_size+0x3f0e8>
     4e4:	6a000003 	bvs	4f8 <_Min_Stack_Size+0xf8>
     4e8:	05000003 	streq	r0, [r0, #-3]
     4ec:	31017000 	mrscc	r7, (UNDEF: 1)
     4f0:	036a9f26 	cmneq	sl, #38, 30	; 0x98
     4f4:	03700000 	cmneq	r0, #0
     4f8:	00010000 	andeq	r0, r1, r0
     4fc:	00037054 	andeq	r7, r3, r4, asr r0
     500:	00039a00 	andeq	r9, r3, r0, lsl #20
     504:	70000500 	andvc	r0, r0, r0, lsl #10
     508:	9f263101 	svcls	0x00263101
	...
     518:	03680000 	cmneq	r8, #0
     51c:	03740000 	cmneq	r4, #0
     520:	00010000 	andeq	r0, r1, r0
     524:	00037453 	andeq	r7, r3, r3, asr r4
     528:	00037a00 	andeq	r7, r3, r0, lsl #20
     52c:	73000300 	movwvc	r0, #768	; 0x300
     530:	037a9f7c 	cmneq	sl, #124, 30	; 0x1f0
     534:	037e0000 	cmneq	lr, #0
     538:	00010000 	andeq	r0, r1, r0
     53c:	00000053 	andeq	r0, r0, r3, asr r0
     540:	00000000 	andeq	r0, r0, r0
     544:	68000200 	stmdavs	r0, {r9}
     548:	70000003 	andvc	r0, r0, r3
     54c:	02000003 	andeq	r0, r0, #3
     550:	009f3000 	addseq	r3, pc, r0
     554:	00000000 	andeq	r0, r0, r0
     558:	90000000 	andls	r0, r0, r0
     55c:	92000002 	andls	r0, r0, #2
     560:	02000002 	andeq	r0, r0, #2
     564:	92007d00 	andls	r7, r0, #0, 26
     568:	ea000002 	b	578 <_Min_Stack_Size+0x178>
     56c:	02000002 	andeq	r0, r0, #2
     570:	00147d00 	andseq	r7, r4, r0, lsl #26
	...
     57c:	00000202 	andeq	r0, r0, r2, lsl #4
     580:	00029000 	andeq	r9, r2, r0
     584:	00029000 	andeq	r9, r2, r0
     588:	50000100 	andpl	r0, r0, r0, lsl #2
     58c:	00000290 	muleq	r0, r0, r2
     590:	00000298 	muleq	r0, r8, r2
     594:	00700005 	rsbseq	r0, r0, r5
     598:	989f1a3f 	ldmls	pc, {r0, r1, r2, r3, r4, r5, r9, fp, ip}	; <UNPREDICTABLE>
     59c:	ea000002 	b	5ac <_Min_Stack_Size+0x1ac>
     5a0:	06000002 	streq	r0, [r0], -r2
     5a4:	5001f300 	andpl	pc, r1, r0, lsl #6
     5a8:	009f1a3f 	addseq	r1, pc, pc, lsr sl	; <UNPREDICTABLE>
     5ac:	00000000 	andeq	r0, r0, r0
     5b0:	01000000 	mrseq	r0, (UNDEF: 0)
     5b4:	b2000000 	andlt	r0, r0, #0
     5b8:	e6000002 	str	r0, [r0], -r2
     5bc:	01000002 	tsteq	r0, r2
     5c0:	02e65500 	rsceq	r5, r6, #0, 10
     5c4:	02ea0000 	rsceq	r0, sl, #0
     5c8:	00010000 	andeq	r0, r1, r0
     5cc:	0000005c 	andeq	r0, r0, ip, asr r0
     5d0:	00000000 	andeq	r0, r0, r0
     5d4:	b0000000 	andlt	r0, r0, r0
     5d8:	ea000002 	b	5e8 <_Min_Stack_Size+0x1e8>
     5dc:	01000002 	tsteq	r0, r2
     5e0:	00005600 	andeq	r5, r0, r0, lsl #12
     5e4:	00000000 	andeq	r0, r0, r0
     5e8:	00010000 	andeq	r0, r1, r0
     5ec:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
     5f0:	000002ea 	andeq	r0, r0, sl, ror #5
     5f4:	00510001 	subseq	r0, r1, r1
	...
     600:	00000101 	andeq	r0, r0, r1, lsl #2
     604:	0002b200 	andeq	fp, r2, r0, lsl #4
     608:	0002b200 	andeq	fp, r2, r0, lsl #4
     60c:	53000100 	movwpl	r0, #256	; 0x100
     610:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
     614:	000002ca 	andeq	r0, r0, sl, asr #5
     618:	00750008 	rsbseq	r0, r5, r8
     61c:	00732432 	rsbseq	r2, r3, r2, lsr r4
     620:	02de9f22 	sbcseq	r9, lr, #34, 30	; 0x88
     624:	02e60000 	rsceq	r0, r6, #0
     628:	00080000 	andeq	r0, r8, r0
     62c:	24320075 	ldrtcs	r0, [r2], #-117	; 0xffffff8b
     630:	9f220073 	svcls	0x00220073
	...
     63c:	00000168 	andeq	r0, r0, r8, ror #2
     640:	0000016a 	andeq	r0, r0, sl, ror #2
     644:	007d0002 	rsbseq	r0, sp, r2
     648:	0000016a 	andeq	r0, r0, sl, ror #2
     64c:	00000290 	muleq	r0, r0, r2
     650:	107d0002 	rsbsne	r0, sp, r2
	...
     65c:	00000002 	andeq	r0, r0, r2
     660:	00000190 	muleq	r0, r0, r1
     664:	00000194 	muleq	r0, r4, r1
     668:	9f300002 	svcls	0x00300002
     66c:	00000194 	muleq	r0, r4, r1
     670:	00000196 	muleq	r0, r6, r1
     674:	74380005 	ldrtvc	r0, [r8], #-5
     678:	009f1c00 	addseq	r1, pc, r0, lsl #24
	...
     684:	0001e000 	andeq	lr, r1, r0
     688:	00022c00 	andeq	r2, r2, r0, lsl #24
     68c:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
     698:	0000007c 	andeq	r0, r0, ip, ror r0
     69c:	0000007e 	andeq	r0, r0, lr, ror r0
     6a0:	007d0002 	rsbseq	r0, sp, r2
     6a4:	0000007e 	andeq	r0, r0, lr, ror r0
     6a8:	00000168 	andeq	r0, r0, r8, ror #2
     6ac:	147d0002 	ldrbtne	r0, [sp], #-2
	...
     6bc:	0000007c 	andeq	r0, r0, ip, ror r0
     6c0:	00000082 	andeq	r0, r0, r2, lsl #1
     6c4:	82500001 	subshi	r0, r0, #1
     6c8:	68000000 	stmdavs	r0, {}	; <UNPREDICTABLE>
     6cc:	01000001 	tsteq	r0, r1
     6d0:	00005600 	andeq	r5, r0, r0, lsl #12
	...
     6e8:	007c0000 	rsbseq	r0, ip, r0
     6ec:	00c80000 	sbceq	r0, r8, r0
     6f0:	00010000 	andeq	r0, r1, r0
     6f4:	0000c851 	andeq	ip, r0, r1, asr r8
     6f8:	0000ca00 	andeq	ip, r0, r0, lsl #20
     6fc:	f3000400 	vshl.u8	d0, d0, d0
     700:	ca9f5101 	bgt	fe7d4b0c <BootRAM+0xd7452ad>
     704:	ce000000 	cdpgt	0, 0, cr0, cr0, cr0, {0}
     708:	01000000 	mrseq	r0, (UNDEF: 0)
     70c:	00ce5100 	sbceq	r5, lr, r0, lsl #2
     710:	010a0000 	mrseq	r0, (UNDEF: 10)
     714:	00040000 	andeq	r0, r4, r0
     718:	9f5101f3 	svcls	0x005101f3
     71c:	0000010a 	andeq	r0, r0, sl, lsl #2
     720:	0000010e 	andeq	r0, r0, lr, lsl #2
     724:	0e510001 	cdpeq	0, 5, cr0, cr1, cr1, {0}
     728:	10000001 	andne	r0, r0, r1
     72c:	04000001 	streq	r0, [r0], #-1
     730:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
     734:	0001109f 	muleq	r1, pc, r0	; <UNPREDICTABLE>
     738:	00011400 	andeq	r1, r1, r0, lsl #8
     73c:	51000100 	mrspl	r0, (UNDEF: 16)
     740:	00000114 	andeq	r0, r0, r4, lsl r1
     744:	00000168 	andeq	r0, r0, r8, ror #2
     748:	01f30004 	mvnseq	r0, r4
     74c:	00009f51 	andeq	r9, r0, r1, asr pc
	...
     75c:	0000007c 	andeq	r0, r0, ip, ror r0
     760:	00000104 	andeq	r0, r0, r4, lsl #2
     764:	04520001 	ldrbeq	r0, [r2], #-1
     768:	06000001 	streq	r0, [r0], -r1
     76c:	04000001 	streq	r0, [r0], #-1
     770:	5201f300 	andpl	pc, r1, #0, 6
     774:	00010a9f 	muleq	r1, pc, sl	; <UNPREDICTABLE>
     778:	00016800 	andeq	r6, r1, r0, lsl #16
     77c:	52000100 	andpl	r0, r0, #0, 2
	...
     790:	007c0000 	rsbseq	r0, ip, r0
     794:	00f20000 	rscseq	r0, r2, r0
     798:	00010000 	andeq	r0, r1, r0
     79c:	0000f253 	andeq	pc, r0, r3, asr r2	; <UNPREDICTABLE>
     7a0:	00010200 	andeq	r0, r1, r0, lsl #4
     7a4:	76000700 	strvc	r0, [r0], -r0, lsl #14
     7a8:	71243200 			; <UNDEFINED> instruction: 0x71243200
     7ac:	01022200 	mrseq	r2, R10_usr
     7b0:	010a0000 	mrseq	r0, (UNDEF: 10)
     7b4:	00040000 	andeq	r0, r4, r0
     7b8:	9f5301f3 	svcls	0x005301f3
     7bc:	0000010a 	andeq	r0, r0, sl, lsl #2
     7c0:	0000014a 	andeq	r0, r0, sl, asr #2
     7c4:	4a530001 	bmi	14c07d0 <_binary_src_fatexample_img_size+0x14bf3d0>
     7c8:	68000001 	stmdavs	r0, {r0}
     7cc:	07000001 	streq	r0, [r0, -r1]
     7d0:	32007600 	andcc	r7, r0, #0, 12
     7d4:	22007124 	andcs	r7, r0, #36, 2
	...
     7e0:	00000002 	andeq	r0, r0, r2
     7e4:	0000007c 	andeq	r0, r0, ip, ror r0
     7e8:	000000e6 	andeq	r0, r0, r6, ror #1
     7ec:	00700006 	rsbseq	r0, r0, r6
     7f0:	9f1a8009 	svcls	0x001a8009
     7f4:	000000e6 	andeq	r0, r0, r6, ror #1
     7f8:	00000168 	andeq	r0, r0, r8, ror #2
     7fc:	01f30007 	mvnseq	r0, r7
     800:	1a800950 	bne	fe002d48 <BootRAM+0xcf734e9>
     804:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     808:	00000000 	andeq	r0, r0, r0
     80c:	01010000 	mrseq	r0, (UNDEF: 1)
     810:	00000202 	andeq	r0, r0, r2, lsl #4
     814:	b2000000 	andlt	r0, r0, #0
     818:	b2000000 	andlt	r0, r0, #0
     81c:	01000000 	mrseq	r0, (UNDEF: 0)
     820:	00b25400 	adcseq	r5, r2, r0, lsl #8
     824:	00b20000 	adcseq	r0, r2, r0
     828:	000b0000 	andeq	r0, fp, r0
     82c:	0f0a0074 	svceq	0x000a0074
     830:	800b1a0f 	andhi	r1, fp, pc, lsl #20
     834:	b29f2180 	addslt	r2, pc, #128, 2
     838:	b8000000 	stmdalt	r0, {}	; <UNPREDICTABLE>
     83c:	11000000 	mrsne	r0, (UNDEF: 0)
     840:	0a007400 	beq	1d848 <_binary_src_fatexample_img_size+0x1c448>
     844:	761a0f00 	ldrvc	r0, [sl], -r0, lsl #30
     848:	1aff0800 	bne	fffc2850 <BootRAM+0xef32ff1>
     84c:	80800b21 	addhi	r0, r0, r1, lsr #22
     850:	00bc9f21 	adcseq	r9, ip, r1, lsr #30
     854:	00d20000 	sbcseq	r0, r2, r0
     858:	00070000 	andeq	r0, r7, r0
     85c:	800b0074 	andhi	r0, fp, r4, ror r0
     860:	0a9f2180 	beq	fe7c8e68 <BootRAM+0xd739609>
     864:	16000001 	strne	r0, [r0], -r1
     868:	07000001 	streq	r0, [r0, -r1]
     86c:	0b007400 	bleq	1d874 <_binary_src_fatexample_img_size+0x1c474>
     870:	9f218080 	svcls	0x00218080
	...
     87c:	0000039c 	muleq	r0, ip, r3
     880:	0000039e 	muleq	r0, lr, r3
     884:	007d0002 	rsbseq	r0, sp, r2
     888:	0000039e 	muleq	r0, lr, r3
     88c:	0000042a 	andeq	r0, r0, sl, lsr #8
     890:	187d0002 	ldmdane	sp!, {r1}^
     894:	0000042a 	andeq	r0, r0, sl, lsr #8
     898:	0000042c 	andeq	r0, r0, ip, lsr #8
     89c:	107d0002 	rsbsne	r0, sp, r2
     8a0:	0000042c 	andeq	r0, r0, ip, lsr #8
     8a4:	000004b4 			; <UNDEFINED> instruction: 0x000004b4
     8a8:	187d0002 	ldmdane	sp!, {r1}^
	...
     8bc:	0000039c 	muleq	r0, ip, r3
     8c0:	000003c2 	andeq	r0, r0, r2, asr #7
     8c4:	c2500001 	subsgt	r0, r0, #1
     8c8:	ec000003 	stc	0, cr0, [r0], {3}
     8cc:	04000003 	streq	r0, [r0], #-3
     8d0:	5001f300 	andpl	pc, r1, r0, lsl #6
     8d4:	0003ec9f 	muleq	r3, pc, ip	; <UNPREDICTABLE>
     8d8:	0003f600 	andeq	pc, r3, r0, lsl #12
     8dc:	50000100 	andpl	r0, r0, r0, lsl #2
     8e0:	000003f6 	strdeq	r0, [r0], -r6
     8e4:	000004b4 			; <UNDEFINED> instruction: 0x000004b4
     8e8:	01f30004 	mvnseq	r0, r4
     8ec:	00009f50 	andeq	r9, r0, r0, asr pc
     8f0:	00000000 	andeq	r0, r0, r0
     8f4:	00010000 	andeq	r0, r1, r0
     8f8:	01000000 	mrseq	r0, (UNDEF: 0)
     8fc:	03c80000 	biceq	r0, r8, #0
     900:	03e60000 	mvneq	r0, #0
     904:	00010000 	andeq	r0, r1, r0
     908:	0003f655 	andeq	pc, r3, r5, asr r6	; <UNPREDICTABLE>
     90c:	00042800 	andeq	r2, r4, r0, lsl #16
     910:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
     914:	0000042c 	andeq	r0, r0, ip, lsr #8
     918:	00000458 	andeq	r0, r0, r8, asr r4
     91c:	60550001 	subsvs	r0, r5, r1
     920:	90000004 	andls	r0, r0, r4
     924:	01000004 	tsteq	r0, r4
     928:	00005500 	andeq	r5, r0, r0, lsl #10
     92c:	00000000 	andeq	r0, r0, r0
     930:	00010000 	andeq	r0, r1, r0
     934:	000003ae 	andeq	r0, r0, lr, lsr #7
     938:	000003b8 			; <UNDEFINED> instruction: 0x000003b8
     93c:	0073000b 	rsbseq	r0, r3, fp
     940:	1a08000a 	bne	200970 <_binary_src_fatexample_img_size+0x1ff570>
     944:	2e302440 	cfnegscs	mvf2, mvf0
     948:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     958:	00010000 	andeq	r0, r1, r0
     95c:	0003ce00 	andeq	ip, r3, r0, lsl #28
     960:	0003e600 	andeq	lr, r3, r0, lsl #12
     964:	53000100 	movwpl	r0, #256	; 0x100
     968:	000003f6 	strdeq	r0, [r0], -r6
     96c:	00000409 	andeq	r0, r0, r9, lsl #8
     970:	2c530001 	mrrccs	0, 0, r0, r3, cr1
     974:	36000004 	strcc	r0, [r0], -r4
     978:	01000004 	tsteq	r0, r4
     97c:	04365300 	ldrteq	r5, [r6], #-768	; 0xfffffd00
     980:	04490000 	strbeq	r0, [r9], #-0
     984:	000b0000 	andeq	r0, fp, r0
     988:	00002c03 	andeq	r2, r0, r3, lsl #24
     98c:	08019420 	stmdaeq	r1, {r5, sl, ip, pc}
     990:	4c9f1a7f 	vldmiami	pc, {s2-s128}
     994:	58000004 	stmdapl	r0, {r2}
     998:	01000004 	tsteq	r0, r4
     99c:	04605300 	strbteq	r5, [r0], #-768	; 0xfffffd00
     9a0:	04730000 	ldrbteq	r0, [r3], #-0
     9a4:	00010000 	andeq	r0, r1, r0
     9a8:	00000053 	andeq	r0, r0, r3, asr r0
     9ac:	00000000 	andeq	r0, r0, r0
     9b0:	1a000100 	bne	db8 <_Min_Stack_Size+0x9b8>
     9b4:	27000004 	strcs	r0, [r0, -r4]
     9b8:	02000004 	andeq	r0, r0, #4
     9bc:	006a9100 	rsbeq	r9, sl, r0, lsl #2
     9c0:	00000000 	andeq	r0, r0, r0
     9c4:	01000000 	mrseq	r0, (UNDEF: 0)
     9c8:	00041a00 	andeq	r1, r4, r0, lsl #20
     9cc:	00042700 	andeq	r2, r4, r0, lsl #14
     9d0:	91000200 	mrsls	r0, R8_usr
     9d4:	0000006c 	andeq	r0, r0, ip, rrx
     9d8:	00000000 	andeq	r0, r0, r0
     9dc:	0002ea00 	andeq	lr, r2, r0, lsl #20
     9e0:	0002ec00 	andeq	lr, r2, r0, lsl #24
     9e4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     9e8:	0002ec00 	andeq	lr, r2, r0, lsl #24
     9ec:	00034400 	andeq	r4, r3, r0, lsl #8
     9f0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     9f4:	00000018 	andeq	r0, r0, r8, lsl r0
	...
     a00:	0002ea00 	andeq	lr, r2, r0, lsl #20
     a04:	00032200 	andeq	r2, r3, r0, lsl #4
     a08:	50000100 	andpl	r0, r0, r0, lsl #2
     a0c:	00000322 	andeq	r0, r0, r2, lsr #6
     a10:	00000344 	andeq	r0, r0, r4, asr #6
     a14:	01f30004 	mvnseq	r0, r4
     a18:	00009f50 	andeq	r9, r0, r0, asr pc
	...
     a24:	03160000 	tsteq	r6, #0
     a28:	03200000 	nopeq	{0}	; <UNPREDICTABLE>
     a2c:	00010000 	andeq	r0, r1, r0
     a30:	00032057 	andeq	r2, r3, r7, asr r0
     a34:	00033a00 	andeq	r3, r3, r0, lsl #20
     a38:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
     a44:	00000002 	andeq	r0, r0, r2
     a48:	00000000 	andeq	r0, r0, r0
     a4c:	00000032 	andeq	r0, r0, r2, lsr r0
     a50:	00000034 	andeq	r0, r0, r4, lsr r0
     a54:	9f300002 	svcls	0x00300002
     a58:	00000034 	andeq	r0, r0, r4, lsr r0
     a5c:	00000036 	andeq	r0, r0, r6, lsr r0
     a60:	a00c0009 	andge	r0, ip, r9
     a64:	72000186 	andvc	r0, r0, #-2147483615	; 0x80000021
     a68:	369f1c00 	ldrcc	r1, [pc], r0, lsl #24
     a6c:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
     a70:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
     a74:	86a10c00 	strthi	r0, [r1], r0, lsl #24
     a78:	00720001 	rsbseq	r0, r2, r1
     a7c:	00389f1c 	eorseq	r9, r8, ip, lsl pc
     a80:	004e0000 	subeq	r0, lr, r0
     a84:	00090000 	andeq	r0, r9, r0
     a88:	0186a00c 	orreq	sl, r6, ip
     a8c:	1c007200 	sfmne	f7, 4, [r0], {-0}
     a90:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     a94:	00000000 	andeq	r0, r0, r0
     a98:	52000100 	andpl	r0, r0, #0, 2
     a9c:	5a000000 	bpl	aa4 <_Min_Stack_Size+0x6a4>
     aa0:	02000000 	andeq	r0, r0, #0
     aa4:	009f4400 	addseq	r4, pc, r0, lsl #8
	...
     ab0:	0a000000 	beq	ab8 <_Min_Stack_Size+0x6b8>
     ab4:	0c000000 	stceq	0, cr0, [r0], {-0}
     ab8:	01000000 	mrseq	r0, (UNDEF: 0)
     abc:	000c5000 	andeq	r5, ip, r0
     ac0:	000e0000 	andeq	r0, lr, r0
     ac4:	00040000 	andeq	r0, r4, r0
     ac8:	9f5001f3 	svcls	0x005001f3
	...
     ad8:	00000006 	andeq	r0, r0, r6
     adc:	00000008 	andeq	r0, r0, r8
     ae0:	08500001 	ldmdaeq	r0, {r0}^
     ae4:	0a000000 	beq	aec <_Min_Stack_Size+0x6ec>
     ae8:	04000000 	streq	r0, [r0], #-0
     aec:	5001f300 	andpl	pc, r1, r0, lsl #6
     af0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     af4:	00000000 	andeq	r0, r0, r0
     af8:	d4000200 	strle	r0, [r0], #-512	; 0xfffffe00
     afc:	24000003 	strcs	r0, [r0], #-3
     b00:	05000004 	streq	r0, [r0, #-4]
     b04:	76a10300 	strtvc	r0, [r1], r0, lsl #6
     b08:	00002000 	andeq	r2, r0, r0
	...
     b18:	000003e4 	andeq	r0, r0, r4, ror #7
     b1c:	000003f4 	strdeq	r0, [r0], -r4
     b20:	f4510001 			; <UNDEFINED> instruction: 0xf4510001
     b24:	f6000003 			; <UNDEFINED> instruction: 0xf6000003
     b28:	10000003 	andne	r0, r0, r3
     b2c:	33007200 	movwcc	r7, #512	; 0x200
     b30:	00040324 	andeq	r0, r4, r4, lsr #6
     b34:	06222000 	strteq	r2, [r2], -r0
     b38:	1c312539 	cfldr32ne	mvfx2, [r1], #-228	; 0xffffff1c
     b3c:	0003f69f 	muleq	r3, pc, r6	; <UNPREDICTABLE>
     b40:	00042400 	andeq	r2, r4, r0, lsl #8
     b44:	03001800 	movweq	r1, #2048	; 0x800
     b48:	200076a1 	andcs	r7, r0, r1, lsr #13
     b4c:	ff080194 			; <UNDEFINED> instruction: 0xff080194
     b50:	0324331a 			; <UNDEFINED> instruction: 0x0324331a
     b54:	20000004 	andcs	r0, r0, r4
     b58:	25390622 	ldrcs	r0, [r9, #-1570]!	; 0xfffff9de
     b5c:	009f1c31 	addseq	r1, pc, r1, lsr ip	; <UNPREDICTABLE>
     b60:	00000000 	andeq	r0, r0, r0
     b64:	02000000 	andeq	r0, r0, #0
     b68:	0002a400 	andeq	sl, r2, r0, lsl #8
     b6c:	0002f400 	andeq	pc, r2, r0, lsl #8
     b70:	03000500 	movweq	r0, #1280	; 0x500
     b74:	200076a1 	andcs	r7, r0, r1, lsr #13
	...
     b84:	000002b4 			; <UNDEFINED> instruction: 0x000002b4
     b88:	000002c8 	andeq	r0, r0, r8, asr #5
     b8c:	c8520001 	ldmdagt	r2, {r0}^
     b90:	f4000002 	vst4.8	{d0-d3}, [r0], r2
     b94:	15000002 	strne	r0, [r0, #-2]
     b98:	76a10300 	strtvc	r0, [r1], r0, lsl #6
     b9c:	01942000 	orrseq	r2, r4, r0
     ba0:	331aff08 	tstcc	sl, #8, 30	; <UNPREDICTABLE>
     ba4:	22007124 	andcs	r7, r0, #36, 2
     ba8:	31253906 			; <UNDEFINED> instruction: 0x31253906
     bac:	00009f1c 	andeq	r9, r0, ip, lsl pc
     bb0:	00000000 	andeq	r0, r0, r0
     bb4:	00030000 	andeq	r0, r3, r0
     bb8:	00000000 	andeq	r0, r0, r0
     bbc:	00000244 	andeq	r0, r0, r4, asr #4
     bc0:	0000024a 	andeq	r0, r0, sl, asr #4
     bc4:	9f300002 	svcls	0x00300002
     bc8:	0000024a 	andeq	r0, r0, sl, asr #4
     bcc:	0000024e 	andeq	r0, r0, lr, asr #4
     bd0:	00710009 	rsbseq	r0, r1, r9
     bd4:	000f0f03 	andeq	r0, pc, r3, lsl #30
     bd8:	589f1c08 	ldmpl	pc, {r3, sl, fp, ip}	; <UNPREDICTABLE>
     bdc:	80000002 	andhi	r0, r0, r2
     be0:	09000002 	stmdbeq	r0, {r1}
     be4:	03007100 	movweq	r7, #256	; 0x100
     be8:	08000f0f 	stmdaeq	r0, {r0, r1, r2, r3, r8, r9, sl, fp}
     bec:	00009f1c 	andeq	r9, r0, ip, lsl pc
     bf0:	00000000 	andeq	r0, r0, r0
     bf4:	01c60000 	biceq	r0, r6, r0
     bf8:	01c80000 	biceq	r0, r8, r0
     bfc:	00020000 	andeq	r0, r2, r0
     c00:	01c8007d 	biceq	r0, r8, sp, ror r0
     c04:	02440000 	subeq	r0, r4, #0
     c08:	00020000 	andeq	r0, r2, r0
     c0c:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     c18:	01d60000 	bicseq	r0, r6, r0
     c1c:	01da0000 	bicseq	r0, sl, r0
     c20:	00090000 	andeq	r0, r9, r0
     c24:	e4030071 	str	r0, [r3], #-113	; 0xffffff8f
     c28:	1c08000e 	stcne	0, cr0, [r8], {14}
     c2c:	0001e29f 	muleq	r1, pc, r2	; <UNPREDICTABLE>
     c30:	0001ea00 	andeq	lr, r1, r0, lsl #20
     c34:	71000900 	tstvc	r0, r0, lsl #18
     c38:	0ee40300 	cdpeq	3, 14, cr0, cr4, cr0, {0}
     c3c:	9f1c0800 	svcls	0x001c0800
	...
     c4c:	00000216 	andeq	r0, r0, r6, lsl r2
     c50:	0000021a 	andeq	r0, r0, sl, lsl r2
     c54:	00710009 	rsbseq	r0, r1, r9
     c58:	000eeb03 	andeq	lr, lr, r3, lsl #22
     c5c:	229f1c08 	addscs	r1, pc, #8, 24	; 0x800
     c60:	44000002 	strmi	r0, [r0], #-2
     c64:	09000002 	stmdbeq	r0, {r1}
     c68:	03007100 	movweq	r7, #256	; 0x100
     c6c:	08000eeb 	stmdaeq	r0, {r0, r1, r3, r5, r6, r7, r9, sl, fp}
     c70:	00009f1c 	andeq	r9, r0, ip, lsl pc
     c74:	00000000 	andeq	r0, r0, r0
     c78:	01700000 	cmneq	r0, r0
     c7c:	01720000 	cmneq	r2, r0
     c80:	00020000 	andeq	r0, r2, r0
     c84:	0172007d 	cmneq	r2, sp, ror r0
     c88:	01c40000 	biceq	r0, r4, r0
     c8c:	00020000 	andeq	r0, r2, r0
     c90:	0000087d 	andeq	r0, r0, sp, ror r8
     c94:	00000000 	andeq	r0, r0, r0
     c98:	00020000 	andeq	r0, r2, r0
     c9c:	00000000 	andeq	r0, r0, r0
     ca0:	00000194 	muleq	r0, r4, r1
     ca4:	0000019e 	muleq	r0, lr, r1
     ca8:	9f300002 	svcls	0x00300002
     cac:	0000019e 	muleq	r0, lr, r1
     cb0:	000001a2 	andeq	r0, r0, r2, lsr #3
     cb4:	0072000c 	rsbseq	r0, r2, ip
     cb8:	00000803 	andeq	r0, r0, r3, lsl #16
     cbc:	1c310620 	ldcne	6, cr0, [r1], #-128	; 0xffffff80
     cc0:	01a89f1c 			; <UNDEFINED> instruction: 0x01a89f1c
     cc4:	01c40000 	biceq	r0, r4, r0
     cc8:	000c0000 	andeq	r0, ip, r0
     ccc:	08030072 	stmdaeq	r3, {r1, r4, r5, r6}
     cd0:	06200000 	strteq	r0, [r0], -r0
     cd4:	9f1c1c31 	svcls	0x001c1c31
	...
     ce0:	000004b4 			; <UNDEFINED> instruction: 0x000004b4
     ce4:	000004b6 			; <UNDEFINED> instruction: 0x000004b6
     ce8:	007d0002 	rsbseq	r0, sp, r2
     cec:	000004b6 			; <UNDEFINED> instruction: 0x000004b6
     cf0:	000004fc 	strdeq	r0, [r0], -ip
     cf4:	087d0002 	ldmdaeq	sp!, {r1}^
     cf8:	000004fc 	strdeq	r0, [r0], -ip
     cfc:	00000500 	andeq	r0, r0, r0, lsl #10
     d00:	007d0002 	rsbseq	r0, sp, r2
     d04:	00000500 	andeq	r0, r0, r0, lsl #10
     d08:	00000548 	andeq	r0, r0, r8, asr #10
     d0c:	087d0002 	ldmdaeq	sp!, {r1}^
	...
     d28:	000004b4 			; <UNDEFINED> instruction: 0x000004b4
     d2c:	000004c8 	andeq	r0, r0, r8, asr #9
     d30:	c8500001 	ldmdagt	r0, {r0}^
     d34:	ee000004 	cdp	0, 0, cr0, cr0, cr4, {0}
     d38:	04000004 	streq	r0, [r0], #-4
     d3c:	5001f300 	andpl	pc, r1, r0, lsl #6
     d40:	0004ee9f 	muleq	r4, pc, lr	; <UNPREDICTABLE>
     d44:	0004f800 	andeq	pc, r4, r0, lsl #16
     d48:	50000100 	andpl	r0, r0, r0, lsl #2
     d4c:	000004f8 	strdeq	r0, [r0], -r8
     d50:	00000500 	andeq	r0, r0, r0, lsl #10
     d54:	01f30004 	mvnseq	r0, r4
     d58:	05009f50 	streq	r9, [r0, #-3920]	; 0xfffff0b0
     d5c:	050c0000 	streq	r0, [ip, #-0]
     d60:	00010000 	andeq	r0, r1, r0
     d64:	00050c50 	andeq	r0, r5, r0, asr ip
     d68:	00051800 	andeq	r1, r5, r0, lsl #16
     d6c:	f3000400 	vshl.u8	d0, d0, d0
     d70:	189f5001 	ldmne	pc, {r0, ip, lr}	; <UNPREDICTABLE>
     d74:	1c000005 	stcne	0, cr0, [r0], {5}
     d78:	01000005 	tsteq	r0, r5
     d7c:	051c5000 	ldreq	r5, [ip, #-0]
     d80:	05480000 	strbeq	r0, [r8, #-0]
     d84:	00040000 	andeq	r0, r4, r0
     d88:	9f5001f3 	svcls	0x005001f3
	...
     d9c:	04bc0000 	ldrteq	r0, [ip], #0
     da0:	04c00000 	strbeq	r0, [r0], #0
     da4:	00050000 	andeq	r0, r5, r0
     da8:	1c00734f 	stcne	3, cr7, [r0], {79}	; 0x4f
     dac:	0004c09f 	muleq	r4, pc, r0	; <UNPREDICTABLE>
     db0:	0004cd00 	andeq	ip, r4, r0, lsl #26
     db4:	52000100 	andpl	r0, r0, #0, 2
     db8:	000004ee 	andeq	r0, r0, lr, ror #9
     dbc:	000004f8 	strdeq	r0, [r0], -r8
     dc0:	00520001 	subseq	r0, r2, r1
     dc4:	0f000005 	svceq	0x00000005
     dc8:	01000005 	tsteq	r0, r5
     dcc:	05185200 	ldreq	r5, [r8, #-512]	; 0xfffffe00
     dd0:	05290000 	streq	r0, [r9, #-0]!
     dd4:	00010000 	andeq	r0, r1, r0
     dd8:	00000052 	andeq	r0, r0, r2, asr r0
     ddc:	00000000 	andeq	r0, r0, r0
     de0:	ce000000 	cdpgt	0, 0, cr0, cr0, cr0, {0}
     de4:	d4000004 	strle	r0, [r0], #-4
     de8:	01000004 	tsteq	r0, r4
     dec:	00005000 	andeq	r5, r0, r0
     df0:	00000000 	andeq	r0, r0, r0
     df4:	00010000 	andeq	r0, r1, r0
     df8:	05000000 	streq	r0, [r0, #-0]
     dfc:	050f0000 	streq	r0, [pc, #-0]	; e04 <_Min_Stack_Size+0xa04>
     e00:	00050000 	andeq	r0, r5, r0
     e04:	0076a103 	rsbseq	sl, r6, r3, lsl #2
     e08:	00051820 	andeq	r1, r5, r0, lsr #16
     e0c:	00052900 	andeq	r2, r5, r0, lsl #18
     e10:	03000500 	movweq	r0, #1280	; 0x500
     e14:	200076a1 	andcs	r7, r0, r1, lsr #13
	...
     e24:	00000510 	andeq	r0, r0, r0, lsl r5
     e28:	00000518 	andeq	r0, r0, r8, lsl r5
     e2c:	2a500001 	bcs	1400e38 <_binary_src_fatexample_img_size+0x13ffa38>
     e30:	48000005 	stmdami	r0, {r0, r2}
     e34:	01000005 	tsteq	r0, r5
     e38:	00005000 	andeq	r5, r0, r0
	...
     e44:	01580000 	cmpeq	r8, r0
     e48:	015c0000 	cmpeq	ip, r0
     e4c:	00010000 	andeq	r0, r1, r0
     e50:	00015c50 	andeq	r5, r1, r0, asr ip
     e54:	00017000 	andeq	r7, r1, r0
     e58:	f3000400 	vshl.u8	d0, d0, d0
     e5c:	009f5001 	addseq	r5, pc, r1
	...
     e6c:	dc000000 	stcle	0, cr0, [r0], {-0}
     e70:	04000000 	streq	r0, [r0], #-0
     e74:	01000001 	tsteq	r0, r1
     e78:	01045000 	mrseq	r5, (UNDEF: 4)
     e7c:	01080000 	mrseq	r0, (UNDEF: 8)
     e80:	00040000 	andeq	r0, r4, r0
     e84:	9f5001f3 	svcls	0x005001f3
     e88:	00000108 	andeq	r0, r0, r8, lsl #2
     e8c:	0000011a 	andeq	r0, r0, sl, lsl r1
     e90:	1a500001 	bne	1400e9c <_binary_src_fatexample_img_size+0x13ffa9c>
     e94:	58000001 	stmdapl	r0, {r0}
     e98:	04000001 	streq	r0, [r0], #-1
     e9c:	5001f300 	andpl	pc, r1, r0, lsl #6
     ea0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     eac:	00001200 	andeq	r1, r0, r0, lsl #4
     eb0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     eb4:	00001200 	andeq	r1, r0, r0, lsl #4
     eb8:	0000dc00 	andeq	sp, r0, r0, lsl #24
     ebc:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     ec0:	00000010 	andeq	r0, r0, r0, lsl r0
	...
     ed8:	44000000 	strmi	r0, [r0], #-0
     edc:	01000000 	mrseq	r0, (UNDEF: 0)
     ee0:	00445000 	subeq	r5, r4, r0
     ee4:	00500000 	subseq	r0, r0, r0
     ee8:	00040000 	andeq	r0, r4, r0
     eec:	9f5001f3 	svcls	0x005001f3
     ef0:	00000050 	andeq	r0, r0, r0, asr r0
     ef4:	0000005e 	andeq	r0, r0, lr, asr r0
     ef8:	5e500001 	cdppl	0, 5, cr0, cr0, cr1, {0}
     efc:	84000000 	strhi	r0, [r0], #-0
     f00:	04000000 	streq	r0, [r0], #-0
     f04:	5001f300 	andpl	pc, r1, r0, lsl #6
     f08:	0000849f 	muleq	r0, pc, r4	; <UNPREDICTABLE>
     f0c:	00009800 	andeq	r9, r0, r0, lsl #16
     f10:	50000100 	andpl	r0, r0, r0, lsl #2
     f14:	00000098 	muleq	r0, r8, r0
     f18:	000000a8 	andeq	r0, r0, r8, lsr #1
     f1c:	01f30004 	mvnseq	r0, r4
     f20:	00a89f50 	adceq	r9, r8, r0, asr pc
     f24:	00dc0000 	sbcseq	r0, ip, r0
     f28:	00010000 	andeq	r0, r1, r0
     f2c:	00000050 	andeq	r0, r0, r0, asr r0
     f30:	00000000 	andeq	r0, r0, r0
     f34:	00000100 	andeq	r0, r0, r0, lsl #2
     f38:	00000000 	andeq	r0, r0, r0
     f3c:	00001e00 	andeq	r1, r0, r0, lsl #28
     f40:	00004400 	andeq	r4, r0, r0, lsl #8
     f44:	50000100 	andpl	r0, r0, r0, lsl #2
     f48:	0000005a 	andeq	r0, r0, sl, asr r0
     f4c:	0000005e 	andeq	r0, r0, lr, asr r0
     f50:	84500001 	ldrbhi	r0, [r0], #-1
     f54:	98000000 	stmdals	r0, {}	; <UNPREDICTABLE>
     f58:	01000000 	mrseq	r0, (UNDEF: 0)
     f5c:	00a85000 	adceq	r5, r8, r0
     f60:	00dc0000 	sbcseq	r0, ip, r0
     f64:	00010000 	andeq	r0, r1, r0
     f68:	00000050 	andeq	r0, r0, r0, asr r0
	...
     f74:	00002c00 	andeq	r2, r0, r0, lsl #24
     f78:	00004c00 	andeq	r4, r0, r0, lsl #24
     f7c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
     f80:	0000005a 	andeq	r0, r0, sl, asr r0
     f84:	00000084 	andeq	r0, r0, r4, lsl #1
     f88:	00540001 	subseq	r0, r4, r1
     f8c:	00000000 	andeq	r0, r0, r0
     f90:	01000000 	mrseq	r0, (UNDEF: 0)
     f94:	00005a00 	andeq	r5, r0, r0, lsl #20
     f98:	00007700 	andeq	r7, r0, r0, lsl #14
     f9c:	03000500 	movweq	r0, #1280	; 0x500
     fa0:	200076a1 	andcs	r7, r0, r1, lsr #13
	...
     fb0:	0000008c 	andeq	r0, r0, ip, lsl #1
     fb4:	000000a2 	andeq	r0, r0, r2, lsr #1
     fb8:	a8550001 	ldmdage	r5, {r0}^
     fbc:	dc000000 	stcle	0, cr0, [r0], {-0}
     fc0:	01000000 	mrseq	r0, (UNDEF: 0)
     fc4:	00005500 	andeq	r5, r0, r0, lsl #10
     fc8:	00000000 	andeq	r0, r0, r0
     fcc:	00010000 	andeq	r0, r1, r0
     fd0:	00000394 	muleq	r0, r4, r3
     fd4:	000003d4 	ldrdeq	r0, [r0], -r4
     fd8:	00500001 	subseq	r0, r0, r1
	...
     fe8:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     fec:	0a000000 	beq	ff4 <_Min_Stack_Size+0xbf4>
     ff0:	05000000 	streq	r0, [r0, #-0]
     ff4:	32007600 	andcc	r7, r0, #0, 12
     ff8:	000a9f26 	andeq	r9, sl, r6, lsr #30
     ffc:	001c0000 	andseq	r0, ip, r0
    1000:	00010000 	andeq	r0, r1, r0
    1004:	00002456 	andeq	r2, r0, r6, asr r4
    1008:	00002600 	andeq	r2, r0, r0, lsl #12
    100c:	76000500 	strvc	r0, [r0], -r0, lsl #10
    1010:	9f263200 	svcls	0x00263200
    1014:	00000026 	andeq	r0, r0, r6, lsr #32
    1018:	00000038 	andeq	r0, r0, r8, lsr r0
    101c:	00560001 	subseq	r0, r6, r1
    1020:	00000000 	andeq	r0, r0, r0
    1024:	01000000 	mrseq	r0, (UNDEF: 0)
    1028:	00000000 	andeq	r0, r0, r0
    102c:	01000000 	mrseq	r0, (UNDEF: 0)
    1030:	00000000 	andeq	r0, r0, r0
    1034:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    1038:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    103c:	02000000 	andeq	r0, r0, #0
    1040:	0e9f3000 	cdpeq	0, 9, cr3, cr15, cr0, {0}
    1044:	10000000 	andne	r0, r0, r0
    1048:	01000000 	mrseq	r0, (UNDEF: 0)
    104c:	00105400 	andseq	r5, r0, r0, lsl #8
    1050:	00160000 	andseq	r0, r6, r0
    1054:	00030000 	andeq	r0, r3, r0
    1058:	169f7f74 			; <UNDEFINED> instruction: 0x169f7f74
    105c:	1a000000 	bne	1064 <_Min_Stack_Size+0xc64>
    1060:	01000000 	mrseq	r0, (UNDEF: 0)
    1064:	00245400 	eoreq	r5, r4, r0, lsl #8
    1068:	002a0000 	eoreq	r0, sl, r0
    106c:	00020000 	andeq	r0, r2, r0
    1070:	002a9f30 	eoreq	r9, sl, r0, lsr pc
    1074:	002c0000 	eoreq	r0, ip, r0
    1078:	00010000 	andeq	r0, r1, r0
    107c:	00002c54 	andeq	r2, r0, r4, asr ip
    1080:	00003200 	andeq	r3, r0, r0, lsl #4
    1084:	74000300 	strvc	r0, [r0], #-768	; 0xfffffd00
    1088:	00329f7f 	eorseq	r9, r2, pc, ror pc
    108c:	00360000 	eorseq	r0, r6, r0
    1090:	00010000 	andeq	r0, r1, r0
    1094:	00000054 	andeq	r0, r0, r4, asr r0
    1098:	00000000 	andeq	r0, r0, r0
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	08000150 	stmdaeq	r0, {r4, r6, r8}
  14:	00000214 	andeq	r0, r0, r4, lsl r2
  18:	08000df4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, sl, fp}
  1c:	00000084 	andeq	r0, r0, r4, lsl #1
	...
  28:	0000001c 	andeq	r0, r0, ip, lsl r0
  2c:	092c0002 	stmdbeq	ip!, {r1}
  30:	00040000 	andeq	r0, r4, r0
  34:	00000000 	andeq	r0, r0, r0
  38:	08000364 	stmdaeq	r0, {r2, r5, r6, r8, r9}
  3c:	000004b4 			; <UNDEFINED> instruction: 0x000004b4
	...
  48:	0000001c 	andeq	r0, r0, ip, lsl r0
  4c:	17db0002 	ldrbne	r0, [fp, r2]
  50:	00040000 	andeq	r0, r4, r0
  54:	00000000 	andeq	r0, r0, r0
  58:	08000818 	stmdaeq	r0, {r3, r4, fp}
  5c:	00000548 	andeq	r0, r0, r8, asr #10
	...
  68:	0000001c 	andeq	r0, r0, ip, lsl r0
  6c:	30360002 	eorscc	r0, r6, r2
  70:	00040000 	andeq	r0, r4, r0
  74:	00000000 	andeq	r0, r0, r0
  78:	08000d60 	stmdaeq	r0, {r5, r6, r8, sl, fp}
  7c:	00000048 	andeq	r0, r0, r8, asr #32
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	08000150 	stmdaeq	r0, {r4, r6, r8}
   4:	08000364 	stmdaeq	r0, {r2, r5, r6, r8, r9}
   8:	08000df4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, sl, fp}
   c:	08000e78 	stmdaeq	r0, {r3, r4, r5, r6, r9, sl, fp}
	...
  18:	00000032 	andeq	r0, r0, r2, lsr r0
  1c:	00000032 	andeq	r0, r0, r2, lsr r0
  20:	00000034 	andeq	r0, r0, r4, lsr r0
  24:	0000003a 	andeq	r0, r0, sl, lsr r0
	...
  30:	0000018a 	andeq	r0, r0, sl, lsl #3
  34:	0000018c 	andeq	r0, r0, ip, lsl #3
  38:	00000190 	muleq	r0, r0, r1
  3c:	00000190 	muleq	r0, r0, r1
  40:	00000194 	muleq	r0, r4, r1
  44:	000001a4 	andeq	r0, r0, r4, lsr #3
	...
  50:	00000368 	andeq	r0, r0, r8, ror #6
  54:	00000368 	andeq	r0, r0, r8, ror #6
  58:	00000370 	andeq	r0, r0, r0, ror r3
  5c:	0000037c 	andeq	r0, r0, ip, ror r3
	...
  68:	000003d2 	ldrdeq	r0, [r0], -r2
  6c:	000003e6 	andeq	r0, r0, r6, ror #7
  70:	000003f6 	strdeq	r0, [r0], -r6
  74:	00000428 	andeq	r0, r0, r8, lsr #8
  78:	0000042c 	andeq	r0, r0, ip, lsr #8
  7c:	0000044c 	andeq	r0, r0, ip, asr #8
	...
  88:	00000410 	andeq	r0, r0, r0, lsl r4
  8c:	00000412 	andeq	r0, r0, r2, lsl r4
  90:	0000041a 	andeq	r0, r0, sl, lsl r4
  94:	00000428 	andeq	r0, r0, r8, lsr #8
	...
  a0:	0000001e 	andeq	r0, r0, lr, lsl r0
  a4:	0000004e 	andeq	r0, r0, lr, asr #32
  a8:	0000005a 	andeq	r0, r0, sl, asr r0
  ac:	000000dc 	ldrdeq	r0, [r0], -ip
	...
  b8:	0000002a 	andeq	r0, r0, sl, lsr #32
  bc:	0000004e 	andeq	r0, r0, lr, asr #32
  c0:	0000005a 	andeq	r0, r0, sl, asr r0
  c4:	00000084 	andeq	r0, r0, r4, lsl #1
	...
  d0:	00000244 	andeq	r0, r0, r4, asr #4
  d4:	00000244 	andeq	r0, r0, r4, asr #4
  d8:	0000024a 	andeq	r0, r0, sl, asr #4
  dc:	0000025a 	andeq	r0, r0, sl, asr r2
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
       0:	0000042f 	andeq	r0, r0, pc, lsr #8
       4:	00af0003 	adceq	r0, pc, r3
       8:	01020000 	mrseq	r0, (UNDEF: 2)
       c:	000d0efb 	strdeq	r0, [sp], -fp
      10:	01010101 	tsteq	r1, r1, lsl #2
      14:	01000000 	mrseq	r0, (UNDEF: 0)
      18:	73010000 	movwvc	r0, #4096	; 0x1000
      1c:	6c006372 	stcvs	3, cr6, [r0], {114}	; 0x72
      20:	692f6269 	stmdbvs	pc!, {r0, r3, r5, r6, r9, sp, lr}	; <UNPREDICTABLE>
      24:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
      28:	2f006564 	svccs	0x00006564
      2c:	2f727375 	svccs	0x00727375
      30:	2f62696c 	svccs	0x0062696c
      34:	2f636367 	svccs	0x00636367
      38:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
      3c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
      40:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
      44:	2e382f69 	cdpcs	15, 3, cr2, cr8, cr9, {3}
      48:	2f312e33 	svccs	0x00312e33
      4c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
      50:	00656475 	rsbeq	r6, r5, r5, ror r4
      54:	6f6c6300 	svcvs	0x006c6300
      58:	682e6b63 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
      5c:	00000100 	andeq	r0, r0, r0, lsl #2
      60:	6e69616d 	powvsez	f6, f1, #5.0
      64:	0100632e 	tsteq	r0, lr, lsr #6
      68:	6f630000 	svcvs	0x00630000
      6c:	635f6572 	cmpvs	pc, #478150656	; 0x1c800000
      70:	682e336d 	stmdavs	lr!, {r0, r2, r3, r5, r6, r8, r9, ip, sp}
      74:	00000200 	andeq	r0, r0, r0, lsl #4
      78:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
      7c:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
      80:	00000300 	andeq	r0, r0, r0, lsl #6
      84:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
      88:	735f6d65 	cmpvc	pc, #6464	; 0x1940
      8c:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
      90:	7878316c 	ldmdavc	r8!, {r2, r3, r5, r6, r8, ip, sp}^
      94:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
      98:	74730000 	ldrbtvc	r0, [r3], #-0
      9c:	6c32336d 	ldcvs	3, cr3, [r2], #-436	; 0xfffffe4c
      a0:	78313531 	ldmdavc	r1!, {r0, r4, r5, r8, sl, ip, sp}
      a4:	00682e63 	rsbeq	r2, r8, r3, ror #28
      a8:	75000002 	strvc	r0, [r0, #-2]
      ac:	6c5f6273 	lfmvs	f6, 2, [pc], {115}	; 0x73
      b0:	682e6269 	stmdavs	lr!, {r0, r3, r5, r6, r9, sp, lr}
      b4:	00000100 	andeq	r0, r0, r0, lsl #2
      b8:	001c0500 	andseq	r0, ip, r0, lsl #10
      bc:	01500205 	cmpeq	r0, r5, lsl #4
      c0:	17030800 	strne	r0, [r3, -r0, lsl #16]
      c4:	13030501 	movwne	r0, #13569	; 0x3501
      c8:	01061005 	tsteq	r6, r5
      cc:	05210b05 	streq	r0, [r1, #-2821]!	; 0xfffff4fb
      d0:	03051f10 	movweq	r1, #24336	; 0x5f10
      d4:	0b054b06 	bleq	152cf4 <_binary_src_fatexample_img_size+0x1518f4>
      d8:	03050106 	movweq	r0, #20742	; 0x5106
      dc:	14144c06 	ldrne	r4, [r4], #-3078	; 0xfffff3fa
      e0:	01060c05 	tsteq	r6, r5, lsl #24
      e4:	4b060305 	blmi	180d00 <_binary_src_fatexample_img_size+0x17f900>
      e8:	01060c05 	tsteq	r6, r5, lsl #24
      ec:	4d060305 	stcmi	3, cr0, [r6, #-20]	; 0xffffffec
      f0:	01060c05 	tsteq	r6, r5, lsl #24
      f4:	4a061e05 	bmi	187910 <_binary_src_fatexample_img_size+0x186510>
      f8:	02004205 	andeq	r4, r0, #1342177280	; 0x50000000
      fc:	05010204 	streq	r0, [r1, #-516]	; 0xfffffdfc
     100:	04020029 	streq	r0, [r2], #-41	; 0xffffffd7
     104:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
     108:	04020023 	streq	r0, [r2], #-35	; 0xffffffdd
     10c:	03052002 	movweq	r2, #20482	; 0x5002
     110:	0c053306 	stceq	3, cr3, [r5], {6}
     114:	03050106 	movweq	r0, #20742	; 0x5106
     118:	0c054c06 	stceq	12, cr4, [r5], {6}
     11c:	03050106 	movweq	r0, #20742	; 0x5106
     120:	0c054e06 	stceq	14, cr4, [r5], {6}
     124:	03050106 	movweq	r0, #20742	; 0x5106
     128:	0c054c06 	stceq	12, cr4, [r5], {6}
     12c:	03050106 	movweq	r0, #20742	; 0x5106
     130:	0c053d06 	stceq	13, cr3, [r5], {6}
     134:	03050106 	movweq	r0, #20742	; 0x5106
     138:	0c052f06 	stceq	15, cr2, [r5], {6}
     13c:	03050106 	movweq	r0, #20742	; 0x5106
     140:	26054b06 	strcs	r4, [r5], -r6, lsl #22
     144:	01040200 	mrseq	r0, R12_usr
     148:	000e0501 	andeq	r0, lr, r1, lsl #10
     14c:	06010402 	streq	r0, [r1], -r2, lsl #8
     150:	00080501 	andeq	r0, r8, r1, lsl #10
     154:	20010402 	andcs	r0, r1, r2, lsl #8
     158:	30060305 	andcc	r0, r6, r5, lsl #6
     15c:	01060d05 	tsteq	r6, r5, lsl #26
     160:	4c060305 	stcmi	3, cr0, [r6], {5}
     164:	01060d05 	tsteq	r6, r5, lsl #26
     168:	4b060305 	blmi	180d84 <_binary_src_fatexample_img_size+0x17f984>
     16c:	01060d05 	tsteq	r6, r5, lsl #26
     170:	03060305 	movweq	r0, #25349	; 0x6305
     174:	0c054a0b 			; <UNDEFINED> instruction: 0x0c054a0b
     178:	03050106 	movweq	r0, #20742	; 0x5106
     17c:	0c054b06 			; <UNDEFINED> instruction: 0x0c054b06
     180:	01050106 	tsteq	r5, r6, lsl #2
     184:	061f052f 	ldreq	r0, [pc], -pc, lsr #10
     188:	13030592 	movwne	r0, #13714	; 0x3592
     18c:	07051513 	smladeq	r5, r3, r5, r1
     190:	03050106 	movweq	r0, #20742	; 0x5106
     194:	07052f06 	streq	r2, [r5, -r6, lsl #30]
     198:	03050106 	movweq	r0, #20742	; 0x5106
     19c:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
     1a0:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     1a4:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
     1a8:	0511060d 	ldreq	r0, [r1, #-1549]	; 0xfffff9f3
     1ac:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
     1b0:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
     1b4:	203c2007 	eorscs	r2, ip, r7
     1b8:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
     1bc:	051f0204 	ldreq	r0, [pc, #-516]	; ffffffc0 <BootRAM+0xef70761>
     1c0:	202e3119 	eorcs	r3, lr, r9, lsl r1
     1c4:	03060305 	movweq	r0, #25349	; 0x6305
     1c8:	0e05201d 	mcreq	0, 0, r2, cr5, cr13, {0}
     1cc:	03050106 	movweq	r0, #20742	; 0x5106
     1d0:	0e055906 	vmlaeq.f16	s10, s10, s12	; <UNPREDICTABLE>
     1d4:	03050106 	movweq	r0, #20742	; 0x5106
     1d8:	0e054b06 	vmlaeq.f64	d4, d5, d6
     1dc:	03050106 	movweq	r0, #20742	; 0x5106
     1e0:	07054d06 	streq	r4, [r5, -r6, lsl #26]
     1e4:	03050106 	movweq	r0, #20742	; 0x5106
     1e8:	07052f06 	streq	r2, [r5, -r6, lsl #30]
     1ec:	03050106 	movweq	r0, #20742	; 0x5106
     1f0:	05053006 	streq	r3, [r5, #-6]
     1f4:	21060106 	tstcs	r6, r6, lsl #2
     1f8:	09051313 	stmdbeq	r5, {r0, r1, r4, r8, r9, ip}
     1fc:	03050106 	movweq	r0, #20742	; 0x5106
     200:	14133406 	ldrne	r3, [r3], #-1030	; 0xfffffbfa
     204:	07051413 	smladeq	r5, r3, r4, r1
     208:	03050106 	movweq	r0, #20742	; 0x5106
     20c:	05142f06 	ldreq	r2, [r4, #-3846]	; 0xfffff0fa
     210:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     214:	05220603 	streq	r0, [r2, #-1539]!	; 0xfffff9fd
     218:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
     21c:	054b0603 	strbeq	r0, [fp, #-1539]	; 0xfffff9fd
     220:	3011060b 	andscc	r0, r1, fp, lsl #12
     224:	20060505 	andcs	r0, r6, r5, lsl #10
     228:	01060b05 	tsteq	r6, r5, lsl #22
     22c:	2e200705 	cdpcs	7, 2, cr0, cr0, cr5, {0}
     230:	00030520 	andeq	r0, r3, r0, lsr #10
     234:	1f020402 	svcne	0x00020402
     238:	05311905 	ldreq	r1, [r1, #-2309]!	; 0xfffff6fb
     23c:	6d030605 	stcvs	6, cr0, [r3, #-20]	; 0xffffffec
     240:	0905133c 	stmdbeq	r5, {r2, r3, r4, r5, r8, r9, ip}
     244:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
     248:	1b030603 	blne	c1a5c <_binary_src_fatexample_img_size+0xc065c>
     24c:	19051420 	stmdbne	r5, {r5, sl, ip}
     250:	01051006 	tsteq	r5, r6
     254:	06030540 	streq	r0, [r3], -r0, asr #10
     258:	14207303 	strtne	r7, [r0], #-771	; 0xfffffcfd
     25c:	01060705 	tsteq	r6, r5, lsl #14
     260:	21060305 	tstcs	r6, r5, lsl #6
     264:	060c0513 			; <UNDEFINED> instruction: 0x060c0513
     268:	1d070515 	cfstr32ne	mvfx0, [r7, #-84]	; 0xffffffac
     26c:	2f060305 	svccs	0x00060305
     270:	01060d05 	tsteq	r6, r5, lsl #26
     274:	21060305 	tstcs	r6, r5, lsl #6
     278:	11060d05 	tstne	r6, r5, lsl #26
     27c:	30060505 	andcc	r0, r6, r5, lsl #10
     280:	01060c05 	tsteq	r6, r5, lsl #24
     284:	05201305 	streq	r1, [r0, #-773]!	; 0xfffffcfb
     288:	202e2e07 	eorcs	r2, lr, r7, lsl #28
     28c:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
     290:	061f0204 	ldreq	r0, [pc], -r4, lsl #4
     294:	3c7fbd03 	ldclcc	13, cr11, [pc], #-12	; 290 <_Min_Heap_Size+0x290>
     298:	060b0515 			; <UNDEFINED> instruction: 0x060b0515
     29c:	06030501 	streq	r0, [r3], -r1, lsl #10
     2a0:	060b054b 	streq	r0, [fp], -fp, asr #10
     2a4:	06030501 	streq	r0, [r3], -r1, lsl #10
     2a8:	060b054b 	streq	r0, [fp], -fp, asr #10
     2ac:	06030501 	streq	r0, [r3], -r1, lsl #10
     2b0:	060b054b 	streq	r0, [fp], -fp, asr #10
     2b4:	06030501 	streq	r0, [r3], -r1, lsl #10
     2b8:	060b054b 	streq	r0, [fp], -fp, asr #10
     2bc:	06030501 	streq	r0, [r3], -r1, lsl #10
     2c0:	060b054b 	streq	r0, [fp], -fp, asr #10
     2c4:	06030501 	streq	r0, [r3], -r1, lsl #10
     2c8:	0605054d 	streq	r0, [r5], -sp, asr #10
     2cc:	05210601 	streq	r0, [r1, #-1537]!	; 0xfffff9ff
     2d0:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     2d4:	054b0605 	strbeq	r0, [fp, #-1541]	; 0xfffff9fb
     2d8:	3011060d 	andscc	r0, r1, sp, lsl #12
     2dc:	20060705 	andcs	r0, r6, r5, lsl #14
     2e0:	01060d05 	tsteq	r6, r5, lsl #26
     2e4:	2e200905 	vmulcs.f16	s0, s0, s10	; <UNPREDICTABLE>
     2e8:	00050520 	andeq	r0, r5, r0, lsr #10
     2ec:	1f020402 	svcne	0x00020402
     2f0:	0d053606 	stceq	6, cr3, [r5, #-24]	; 0xffffffe8
     2f4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     2f8:	0d055906 	vstreq.16	s10, [r5, #-12]	; <UNPREDICTABLE>
     2fc:	07051106 	streq	r1, [r5, -r6, lsl #2]
     300:	0d053006 	stceq	0, cr3, [r5, #-24]	; 0xffffffe8
     304:	09050106 	stmdbeq	r5, {r1, r2, r8}
     308:	05202e20 	streq	r2, [r0, #-3616]!	; 0xfffff1e0
     30c:	04020005 	streq	r0, [r2], #-5
     310:	1b051f02 	blne	147f20 <_binary_src_fatexample_img_size+0x146b20>
     314:	06100531 			; <UNDEFINED> instruction: 0x06100531
     318:	059e3303 	ldreq	r3, [lr, #771]	; 0x303
     31c:	15131303 	ldrne	r1, [r3, #-771]	; 0xfffffcfd
     320:	01060705 	tsteq	r6, r5, lsl #14
     324:	2f060305 	svccs	0x00060305
     328:	01060705 	tsteq	r6, r5, lsl #14
     32c:	2f060305 	svccs	0x00060305
     330:	060d0513 			; <UNDEFINED> instruction: 0x060d0513
     334:	06030501 	streq	r0, [r3], -r1, lsl #10
     338:	060d0521 	streq	r0, [sp], -r1, lsr #10
     33c:	06050511 			; <UNDEFINED> instruction: 0x06050511
     340:	060c0530 			; <UNDEFINED> instruction: 0x060c0530
     344:	20070501 	andcs	r0, r7, r1, lsl #10
     348:	0305203c 	movweq	r2, #20540	; 0x503c
     34c:	02040200 	andeq	r0, r4, #0, 4
     350:	053f061f 	ldreq	r0, [pc, #-1567]!	; fffffd39 <BootRAM+0xef704da>
     354:	03050119 	movweq	r0, #20761	; 0x5119
     358:	060b0515 			; <UNDEFINED> instruction: 0x060b0515
     35c:	06030501 	streq	r0, [r3], -r1, lsl #10
     360:	060b054b 	streq	r0, [fp], -fp, asr #10
     364:	06030501 	streq	r0, [r3], -r1, lsl #10
     368:	060b054b 	streq	r0, [fp], -fp, asr #10
     36c:	06030501 	streq	r0, [r3], -r1, lsl #10
     370:	060b054b 	streq	r0, [fp], -fp, asr #10
     374:	4b010501 	blmi	41780 <_binary_src_fatexample_img_size+0x40380>
     378:	2c050204 	sfmcs	f0, 4, [r5], {4}
     37c:	7ed50306 	cdpvc	3, 13, cr0, cr5, cr6, {0}
     380:	012d0558 			; <UNDEFINED> instruction: 0x012d0558
     384:	01060105 	tsteq	r6, r5, lsl #2
     388:	22061a05 	andcs	r1, r6, #20480	; 0x5000
     38c:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
     390:	04020008 	streq	r0, [r2], #-8
     394:	00010601 	andeq	r0, r1, r1, lsl #12
     398:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
     39c:	05210105 	streq	r0, [r1, #-261]!	; 0xfffffefb
     3a0:	04020010 	streq	r0, [r2], #-16
     3a4:	021f0602 	andseq	r0, pc, #2097152	; 0x200000
     3a8:	01010002 	tsteq	r1, r2
     3ac:	0f050204 	svceq	0x00050204
     3b0:	f4020500 	vst3.8	{d0,d2,d4}, [r2], r0
     3b4:	0308000d 	movweq	r0, #32781	; 0x800d
     3b8:	0305010d 	movweq	r0, #20749	; 0x510d
     3bc:	060f0513 			; <UNDEFINED> instruction: 0x060f0513
     3c0:	21030511 	tstcs	r3, r1, lsl r5
     3c4:	0f053d06 	svceq	0x00053d06
     3c8:	03050106 	movweq	r0, #20742	; 0x5106
     3cc:	2e015906 	vmlacs.f16	s10, s2, s12	; <UNPREDICTABLE>
     3d0:	20202e2e 	eorcs	r2, r0, lr, lsr #28
     3d4:	01202e01 			; <UNDEFINED> instruction: 0x01202e01
     3d8:	01011605 	tsteq	r1, r5, lsl #12
     3dc:	202e2e20 	eorcs	r2, lr, r0, lsr #28
     3e0:	202e0120 	eorcs	r0, lr, r0, lsr #2
     3e4:	13030501 	movwne	r0, #13569	; 0x3501
     3e8:	06200601 	strteq	r0, [r0], -r1, lsl #12
     3ec:	20012e20 	andcs	r2, r1, r0, lsr #28
     3f0:	202e0120 	eorcs	r0, lr, r0, lsr #2
     3f4:	01160501 	tsteq	r6, r1, lsl #10
     3f8:	012e2001 			; <UNDEFINED> instruction: 0x012e2001
     3fc:	2e012020 	cdpcs	0, 0, cr2, cr1, cr0, {1}
     400:	03050120 	movweq	r0, #20768	; 0x5120
     404:	03042f14 	movweq	r2, #20244	; 0x4f14
     408:	9f031605 	svcls	0x00031605
     40c:	35050109 	strcc	r0, [r5, #-265]	; 0xfffffef7
     410:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
     414:	e4030605 	str	r0, [r3], #-1541	; 0xfffff9fb
     418:	03052076 	movweq	r2, #20598	; 0x5076
     41c:	01040200 	mrseq	r0, R12_usr
     420:	05051e06 	streq	r1, [r5, #-3590]	; 0xfffff1fa
     424:	01040200 	mrseq	r0, R12_usr
     428:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
     42c:	0d022f01 	stceq	15, cr2, [r2, #-4]
     430:	dc010100 	stfles	f0, [r1], {-0}
     434:	03000005 	movweq	r0, #5
     438:	0000a700 	andeq	sl, r0, r0, lsl #14
     43c:	fb010200 	blx	40c46 <_binary_src_fatexample_img_size+0x3f846>
     440:	01000d0e 	tsteq	r0, lr, lsl #26
     444:	00010101 	andeq	r0, r1, r1, lsl #2
     448:	00010000 	andeq	r0, r1, r0
     44c:	72730100 	rsbsvc	r0, r3, #0, 2
     450:	696c0063 	stmdbvs	ip!, {r0, r1, r5, r6}^
     454:	6e692f62 	cdpvs	15, 6, cr2, cr9, cr2, {3}
     458:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     45c:	752f0065 	strvc	r0, [pc, #-101]!	; 3ff <_Min_Heap_Size+0x3ff>
     460:	6c2f7273 	sfmvs	f7, 4, [pc], #-460	; 29c <_Min_Heap_Size+0x29c>
     464:	672f6269 	strvs	r6, [pc, -r9, ror #4]!
     468:	612f6363 			; <UNDEFINED> instruction: 0x612f6363
     46c:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     470:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     474:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     478:	332e382f 			; <UNDEFINED> instruction: 0x332e382f
     47c:	692f312e 	stmdbvs	pc!, {r1, r2, r3, r5, r8, ip, sp}	; <UNPREDICTABLE>
     480:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     484:	00006564 	andeq	r6, r0, r4, ror #10
     488:	5f627375 	svcpl	0x00627375
     48c:	2e62696c 	vnmulcs.f16	s13, s4, s25	; <UNPREDICTABLE>
     490:	00010063 	andeq	r0, r1, r3, rrx
     494:	726f6300 	rsbvc	r6, pc, #0, 6
     498:	6d635f65 	stclvs	15, cr5, [r3, #-404]!	; 0xfffffe6c
     49c:	00682e33 	rsbeq	r2, r8, r3, lsr lr
     4a0:	73000002 	movwvc	r0, #2
     4a4:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
     4a8:	00682e74 	rsbeq	r2, r8, r4, ror lr
     4ac:	75000003 	strvc	r0, [r0, #-3]
     4b0:	6c5f6273 	lfmvs	f6, 2, [pc], {115}	; 0x73
     4b4:	682e6269 	stmdavs	lr!, {r0, r3, r5, r6, r9, sp, lr}
     4b8:	00000100 	andeq	r0, r0, r0, lsl #2
     4bc:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     4c0:	35316c32 	ldrcc	r6, [r1, #-3122]!	; 0xfffff3ce
     4c4:	2e637831 	mcrcs	8, 3, r7, cr3, cr1, {1}
     4c8:	00020068 	andeq	r0, r2, r8, rrx
     4cc:	73797300 	cmnvc	r9, #0, 6
     4d0:	5f6d6574 	svcpl	0x006d6574
     4d4:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     4d8:	78316c32 	ldmdavc	r1!, {r1, r4, r5, sl, fp, sp, lr}
     4dc:	00682e78 	rsbeq	r2, r8, r8, ror lr
     4e0:	00000002 	andeq	r0, r0, r2
     4e4:	05002b05 	streq	r2, [r0, #-2821]	; 0xfffff4fb
     4e8:	00036402 	andeq	r6, r3, r2, lsl #8
     4ec:	01160308 	tsteq	r6, r8, lsl #6
     4f0:	05012c05 	streq	r2, [r1, #-3077]	; 0xfffff3fb
     4f4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     4f8:	053f065c 	ldreq	r0, [pc, #-1628]!	; fffffea4 <BootRAM+0xef70645>
     4fc:	0105015d 	tsteq	r5, sp, asr r1
     500:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
     504:	05210663 	streq	r0, [r1, #-1635]!	; 0xfffff99d
     508:	01050164 	tsteq	r5, r4, ror #2
     50c:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
     510:	15030611 	strne	r0, [r3, #-1553]	; 0xfffff9ef
     514:	13030520 	movwne	r0, #13600	; 0x3520
     518:	01061005 	tsteq	r6, r5
     51c:	59060305 	stmdbpl	r6, {r0, r2, r8, r9}
     520:	01061005 	tsteq	r6, r5
     524:	4c060305 	stcmi	3, cr0, [r6], {5}
     528:	01060f05 	tsteq	r6, r5, lsl #30
     52c:	59060305 	stmdbpl	r6, {r0, r2, r8, r9}
     530:	01060f05 	tsteq	r6, r5, lsl #30
     534:	4b060305 	blmi	181150 <_binary_src_fatexample_img_size+0x17fd50>
     538:	06010705 	streq	r0, [r1], -r5, lsl #14
     53c:	110f0501 	tstne	pc, r1, lsl #10
     540:	02002e05 	andeq	r2, r0, #5, 28	; 0x50
     544:	21060304 	tstcs	r6, r4, lsl #6
     548:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
     54c:	20060304 	andcs	r0, r6, r4, lsl #6
     550:	03040200 	movweq	r0, #16896	; 0x4200
     554:	05210620 	streq	r0, [r1, #-1568]!	; 0xfffff9e0
     558:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
     55c:	052f0603 	streq	r0, [pc, #-1539]!	; ffffff61 <BootRAM+0xef70702>
     560:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
     564:	052f0603 	streq	r0, [pc, #-1539]!	; ffffff69 <BootRAM+0xef7070a>
     568:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
     56c:	052f0603 	streq	r0, [pc, #-1539]!	; ffffff71 <BootRAM+0xef70712>
     570:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
     574:	052f0603 	streq	r0, [pc, #-1539]!	; ffffff79 <BootRAM+0xef7071a>
     578:	2e01060f 	cfmadd32cs	mvax0, mvfx0, mvfx1, mvfx15
     57c:	2f060305 	svccs	0x00060305
     580:	16050204 	strne	r0, [r5], -r4, lsl #4
     584:	010ba203 	tsteq	fp, r3, lsl #4
     588:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
     58c:	4a010627 	bmi	41e30 <_binary_src_fatexample_img_size+0x40a30>
     590:	03050104 	movweq	r0, #20740	; 0x5104
     594:	74dd0306 	ldrbvc	r0, [sp], #774	; 0x306
     598:	060f0501 	streq	r0, [pc], -r1, lsl #10
     59c:	59010501 	stmdbpl	r1, {r0, r8, sl}
     5a0:	03064f05 	movweq	r4, #28421	; 0x6f05
     5a4:	05ba00e6 	ldreq	r0, [sl, #230]!	; 0xe6
     5a8:	05131303 	ldreq	r1, [r3, #-771]	; 0xfffffcfd
     5ac:	0510064f 	ldreq	r0, [r0, #-1615]	; 0xfffff9b1
     5b0:	03052209 	movweq	r2, #21001	; 0x5209
     5b4:	05053006 	streq	r3, [r5, #-6]
     5b8:	062d5906 	strteq	r5, [sp], -r6, lsl #18
     5bc:	3e060121 	adfccsp	f0, f6, f1
     5c0:	061e222c 	ldreq	r2, [lr], -ip, lsr #4
     5c4:	03050130 	movweq	r0, #20784	; 0x5130
     5c8:	060c0569 	streq	r0, [ip], -r9, ror #10
     5cc:	06030501 	streq	r0, [r3], -r1, lsl #10
     5d0:	06141321 	ldreq	r1, [r4], -r1, lsr #6
     5d4:	2e063c13 	mcrcs	12, 0, r3, cr6, cr3, {0}
     5d8:	054b1905 	strbeq	r1, [fp, #-2309]	; 0xfffff6fb
     5dc:	2e01061d 	mcrcs	6, 0, r0, cr1, cr13, {0}
     5e0:	051e0705 	ldreq	r0, [lr, #-1797]	; 0xfffff8fb
     5e4:	03053312 	movweq	r3, #21266	; 0x5312
     5e8:	12053006 	andne	r3, r5, #6
     5ec:	03052006 	movweq	r2, #20486	; 0x5006
     5f0:	05052206 	streq	r2, [r5, #-518]	; 0xfffffdfa
     5f4:	06583c06 	ldrbeq	r3, [r8], -r6, lsl #24
     5f8:	06230521 	strteq	r0, [r3], -r1, lsr #10
     5fc:	06050501 	streq	r0, [r5], -r1, lsl #10
     600:	06160521 	ldreq	r0, [r6], -r1, lsr #10
     604:	06050501 	streq	r0, [r5], -r1, lsl #10
     608:	2006013d 	andcs	r0, r6, sp, lsr r1
     60c:	0e030c05 	cdpeq	12, 0, cr0, cr3, cr5, {0}
     610:	1e050582 	cfsh32ne	mvfx0, mvfx5, #-62
     614:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
     618:	01060c05 	tsteq	r6, r5, lsl #24
     61c:	05210105 	streq	r0, [r1, #-261]!	; 0xfffffefb
     620:	69030619 	stmdbvs	r3, {r0, r3, r4, r9, sl}
     624:	061d0520 	ldreq	r0, [sp], -r0, lsr #10
     628:	0e052e01 	cdpeq	14, 0, cr2, cr5, cr1, {0}
     62c:	12052106 	andne	r2, r5, #-2147483647	; 0x80000001
     630:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
     634:	09030605 	stmdbeq	r3, {r0, r2, r9, sl}
     638:	06230520 	strteq	r0, [r3], -r0, lsr #10
     63c:	06050501 	streq	r0, [r5], -r1, lsl #10
     640:	06260521 	strteq	r0, [r6], -r1, lsr #10
     644:	1f070513 	svcne	0x00070513
     648:	26052106 	strcs	r2, [r5], -r6, lsl #2
     64c:	31391506 	teqcc	r9, r6, lsl #10
     650:	0607051d 			; <UNDEFINED> instruction: 0x0607051d
     654:	06270521 	strteq	r0, [r7], -r1, lsr #10
     658:	2e330516 	mrccs	5, 1, r0, cr3, cr6, {0}
     65c:	052a2e05 	streq	r2, [sl, #-3589]!	; 0xfffff1fb
     660:	13300607 	teqne	r0, #7340032	; 0x700000
     664:	06330513 			; <UNDEFINED> instruction: 0x06330513
     668:	2e270501 	cfsh64cs	mvdx0, mvdx7, #1
     66c:	4c060505 	cfstr32mi	mvfx0, [r6], {5}
     670:	01061705 	tsteq	r6, r5, lsl #14
     674:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
     678:	05200601 	streq	r0, [r0, #-1537]!	; 0xfffff9ff
     67c:	05ea0619 	strbeq	r0, [sl, #1561]!	; 0x619
     680:	19051303 	stmdbne	r5, {r0, r1, r8, r9, ip}
     684:	09051106 	stmdbeq	r5, {r1, r2, r8, ip}
     688:	3c050521 	cfstr32cc	mvfx0, [r5], {33}	; 0x21
     68c:	052f2f06 	streq	r2, [pc, #-3846]!	; fffff78e <BootRAM+0xef6ff2f>
     690:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
     694:	0f052f0e 	svceq	0x00052f0e
     698:	0605051f 			; <UNDEFINED> instruction: 0x0605051f
     69c:	060e052f 	streq	r0, [lr], -pc, lsr #10
     6a0:	06050501 	streq	r0, [r5], -r1, lsl #10
     6a4:	0610053d 			; <UNDEFINED> instruction: 0x0610053d
     6a8:	22240501 	eorcs	r0, r4, #4194304	; 0x400000
     6ac:	051e1005 	ldreq	r1, [lr, #-5]
     6b0:	052f0605 	streq	r0, [pc, #-1541]!	; b3 <_Min_Heap_Size+0xb3>
     6b4:	01060109 	tsteq	r6, r9, lsl #2
     6b8:	05111005 	ldreq	r1, [r1, #-5]
     6bc:	04020007 	streq	r0, [r2], #-7
     6c0:	05300603 	ldreq	r0, [r0, #-1539]!	; 0xfffff9fd
     6c4:	04020005 	streq	r0, [r2], #-5
     6c8:	051f0603 	ldreq	r0, [pc, #-1539]	; cd <_Min_Heap_Size+0xcd>
     6cc:	04020024 	streq	r0, [r2], #-36	; 0xffffffdc
     6d0:	14052f03 	strne	r2, [r5], #-3843	; 0xfffff0fd
     6d4:	03040200 	movweq	r0, #16896	; 0x4200
     6d8:	0005052e 	andeq	r0, r5, lr, lsr #10
     6dc:	2d030402 	cfstrscs	mvf0, [r3, #-8]
     6e0:	0f052406 	svceq	0x00052406
     6e4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     6e8:	1f0f053d 	svcne	0x000f053d
     6ec:	2f060505 	svccs	0x00060505
     6f0:	0d056759 	stceq	7, cr6, [r5, #-356]	; 0xfffffe9c
     6f4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     6f8:	03052f06 	movweq	r2, #24326	; 0x5f06
     6fc:	06090531 			; <UNDEFINED> instruction: 0x06090531
     700:	3c050501 	cfstr32cc	mvfx0, [r5], {1}
     704:	18052f06 	stmdane	r5, {r1, r2, r8, r9, sl, fp, sp}
     708:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
     70c:	0605052e 	streq	r0, [r5], -lr, lsr #10
     710:	0608052f 	streq	r0, [r8], -pc, lsr #10
     714:	66070501 	strvs	r0, [r7], -r1, lsl #10
     718:	11052f06 	tstne	r5, r6, lsl #30
     71c:	07050106 	streq	r0, [r5, -r6, lsl #2]
     720:	014b0620 	cmpeq	fp, r0, lsr #12
     724:	05840505 	streq	r0, [r4, #1285]	; 0x505
     728:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
     72c:	2f062007 	svccs	0x00062007
     730:	01061005 	tsteq	r6, r5
     734:	06200705 	strteq	r0, [r0], -r5, lsl #14
     738:	82060159 	andhi	r0, r6, #1073741846	; 0x40000016
     73c:	16060305 	strne	r0, [r6], -r5, lsl #6
     740:	01060905 	tsteq	r6, r5, lsl #18
     744:	063c0505 	ldrteq	r0, [ip], -r5, lsl #10
     748:	0f052f2f 	svceq	0x00052f2f
     74c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     750:	0f056706 	svceq	0x00056706
     754:	03050106 	movweq	r0, #20742	; 0x5106
     758:	09054d06 	stmdbeq	r5, {r1, r2, r8, sl, fp, lr}
     75c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     760:	052f063c 	streq	r0, [pc, #-1596]!	; 12c <_Min_Heap_Size+0x12c>
     764:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
     768:	05830605 	streq	r0, [r3, #1541]	; 0x605
     76c:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
     770:	44054c01 	strmi	r4, [r5], #-3073	; 0xfffff3ff
     774:	0305f406 	movweq	pc, #21510	; 0x5406	; <UNPREDICTABLE>
     778:	05131313 	ldreq	r1, [r3, #-787]	; 0xfffffced
     77c:	050f0644 	streq	r0, [pc, #-1604]	; 140 <_Min_Heap_Size+0x140>
     780:	44052703 	strmi	r2, [r5], #-1795	; 0xfffff8fd
     784:	4b052e1f 	blmi	14c008 <_binary_src_fatexample_img_size+0x14ac08>
     788:	1d170558 	cfldr32ne	mvfx0, [r7, #-352]	; 0xfffffea0
     78c:	05233805 	streq	r3, [r3, #-2053]!	; 0xfffff7fb
     790:	0305470c 	movweq	r4, #22284	; 0x570c
     794:	05132206 	ldreq	r2, [r3, #-518]	; 0xfffffdfa
     798:	05010638 	streq	r0, [r1, #-1592]	; 0xfffff9c8
     79c:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
     7a0:	04020010 	streq	r0, [r2], #-16
     7a4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     7a8:	04020003 	streq	r0, [r2], #-3
     7ac:	4d062001 	stcmi	0, cr2, [r6, #-4]
     7b0:	22051406 	andcs	r1, r5, #100663296	; 0x6000000
     7b4:	0603053a 			; <UNDEFINED> instruction: 0x0603053a
     7b8:	3c060122 	stfccs	f0, [r6], {34}	; 0x22
     7bc:	05910105 	ldreq	r0, [r1, #261]	; 0x105
     7c0:	04020005 	streq	r0, [r2], #-5
     7c4:	051b0603 	ldreq	r0, [fp, #-1539]	; 0xfffff9fd
     7c8:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
     7cc:	05010603 	streq	r0, [r1, #-1539]	; 0xfffff9fd
     7d0:	0402000a 	streq	r0, [r2], #-10
     7d4:	22054a03 	andcs	r4, r5, #12288	; 0x3000
     7d8:	7ec30306 	cdpvc	3, 12, cr0, cr3, cr6, {0}
     7dc:	1303052e 	movwne	r0, #13614	; 0x352e
     7e0:	11062205 	tstne	r6, r5, lsl #4
     7e4:	05210b05 	streq	r0, [r1, #-2821]!	; 0xfffff4fb
     7e8:	0b052024 	bleq	148880 <_binary_src_fatexample_img_size+0x147480>
     7ec:	2e240520 	cfsh64cs	mvdx0, mvdx4, #16
     7f0:	06200505 	strteq	r0, [r0], -r5, lsl #10
     7f4:	0610053d 			; <UNDEFINED> instruction: 0x0610053d
     7f8:	06030501 	streq	r0, [r3], -r1, lsl #10
     7fc:	0608055b 			; <UNDEFINED> instruction: 0x0608055b
     800:	20050501 	andcs	r0, r5, r1, lsl #10
     804:	4b060305 	blmi	181420 <_binary_src_fatexample_img_size+0x180020>
     808:	01060e05 	tsteq	r6, r5, lsl #28
     80c:	05200505 	streq	r0, [r0, #-1285]!	; 0xfffffafb
     810:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
     814:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
     818:	06210603 	strteq	r0, [r1], -r3, lsl #12
     81c:	06580613 			; <UNDEFINED> instruction: 0x06580613
     820:	053e0620 	ldreq	r0, [lr, #-1568]!	; 0xfffff9e0
     824:	05150605 	ldreq	r0, [r5, #-1541]	; 0xfffff9fb
     828:	03051d0d 	movweq	r1, #23821	; 0x5d0d
     82c:	05143d06 	ldreq	r3, [r4, #-3334]	; 0xfffff2fa
     830:	0513060d 	ldreq	r0, [r3, #-1549]	; 0xfffff9f3
     834:	05052b0b 	streq	r2, [r5, #-2827]	; 0xfffff4f5
     838:	0d053106 	stfeqs	f3, [r5, #-24]	; 0xffffffe8
     83c:	01050106 	tsteq	r5, r6, lsl #2
     840:	062e0522 	strteq	r0, [lr], -r2, lsr #10
     844:	5801b303 	stmdapl	r1, {r0, r1, r8, r9, ip, sp, pc}
     848:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
     84c:	0511062e 	ldreq	r0, [r1, #-1582]	; 0xfffff9d2
     850:	2e052116 	mcrcs	1, 0, r2, cr5, cr6, {0}
     854:	211d0557 	tstcs	sp, r7, asr r5
     858:	06030520 	streq	r0, [r3], -r0, lsr #10
     85c:	0605052f 	streq	r0, [r5], -pc, lsr #10
     860:	06030501 	streq	r0, [r3], -r1, lsl #10
     864:	4a051321 	bmi	1454f0 <_binary_src_fatexample_img_size+0x1440f0>
     868:	0f050106 	svceq	0x00050106
     86c:	2137051f 	teqcs	r7, pc, lsl r5
     870:	59060305 	stmdbpl	r6, {r0, r2, r8, r9}
     874:	06010705 	streq	r0, [r1], -r5, lsl #14
     878:	20201001 	eorcs	r1, r0, r1
     87c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
     880:	31060304 	tstcc	r6, r4, lsl #6
     884:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
     888:	01060304 	tsteq	r6, r4, lsl #6
     88c:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
     890:	052d0304 	streq	r0, [sp, #-772]!	; 0xfffffcfc
     894:	0402000c 	streq	r0, [r2], #-12
     898:	03052103 	movweq	r2, #20739	; 0x5103
     89c:	03040200 	movweq	r0, #16896	; 0x4200
     8a0:	0123062d 			; <UNDEFINED> instruction: 0x0123062d
     8a4:	d7062006 	strle	r2, [r6, -r6]
     8a8:	13060105 	movwne	r0, #24837	; 0x6105
     8ac:	03062305 	movweq	r2, #25349	; 0x6305
     8b0:	05207ecd 	streq	r7, [r0, #-3789]!	; 0xfffff133
     8b4:	05131303 	ldreq	r1, [r3, #-771]	; 0xfffffcfd
     8b8:	22100623 	andscs	r0, r0, #36700160	; 0x2300000
     8bc:	053d1605 	ldreq	r1, [sp, #-1541]!	; 0xfffff9fb
     8c0:	03053b23 	movweq	r3, #23331	; 0x5b23
     8c4:	05142f06 	ldreq	r2, [r4, #-3846]	; 0xfffff0fa
     8c8:	06010605 	streq	r0, [r1], -r5, lsl #12
     8cc:	0607053d 			; <UNDEFINED> instruction: 0x0607053d
     8d0:	2f062e01 	svccs	0x00062e01
     8d4:	13061105 	movwne	r1, #24837	; 0x6105
     8d8:	2e1f0705 	cdpcs	7, 1, cr0, cr15, cr5, {0}
     8dc:	11052f06 	tstne	r5, r6, lsl #30
     8e0:	07050106 	streq	r0, [r5, -r6, lsl #2]
     8e4:	03052106 	movweq	r2, #20742	; 0x5106
     8e8:	05010a03 	streq	r0, [r1, #-2563]	; 0xfffff5fd
     8ec:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
     8f0:	0305200b 	movweq	r2, #20491	; 0x500b
     8f4:	05053006 	streq	r3, [r5, #-6]
     8f8:	30060106 	andcc	r0, r6, r6, lsl #2
     8fc:	01060705 	tsteq	r6, r5, lsl #14
     900:	21060505 	tstcs	r6, r5, lsl #10
     904:	01060705 	tsteq	r6, r5, lsl #14
     908:	1a052106 	bne	148d28 <_binary_src_fatexample_img_size+0x147928>
     90c:	07050106 	streq	r0, [r5, -r6, lsl #2]
     910:	060b0520 	streq	r0, [fp], -r0, lsr #10
     914:	06580a03 	ldrbeq	r0, [r8], -r3, lsl #20
     918:	002c052e 	eoreq	r0, ip, lr, lsr #10
     91c:	03010402 	movweq	r0, #5122	; 0x1402
     920:	0705011d 	smladeq	r5, sp, r1, r0
     924:	3c4b0306 	mcrrcc	3, 0, r0, fp, cr6
     928:	01060905 	tsteq	r6, r5, lsl #18
     92c:	03060b05 	movweq	r0, #27397	; 0x6b05
     930:	17055810 	smladne	r5, r0, r8, r5
     934:	0b050106 	bleq	140d54 <_binary_src_fatexample_img_size+0x13f954>
     938:	1e170522 	cfmul64ne	mvdx0, mvdx7, mvdx2
     93c:	21060b05 	tstcs	r6, r5, lsl #22
     940:	14051306 	strne	r1, [r5], #-774	; 0xfffffcfa
     944:	060b053b 			; <UNDEFINED> instruction: 0x060b053b
     948:	05052f2f 	streq	r2, [r5, #-3887]	; 0xfffff0d1
     94c:	05010f03 	streq	r0, [r1, #-3843]	; 0xfffff0fd
     950:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
     954:	03052007 	movweq	r2, #20487	; 0x5007
     958:	052e4e03 	streq	r4, [lr, #-3587]!	; 0xfffff1fd
     95c:	20320307 	eorscs	r0, r2, r7, lsl #6
     960:	20062505 	andcs	r2, r6, r5, lsl #10
     964:	01062a05 	tsteq	r6, r5, lsl #20
     968:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
     96c:	4a031405 	bmi	c5988 <_binary_src_fatexample_img_size+0xc4588>
     970:	13030501 	movwne	r0, #13569	; 0x3501
     974:	01060d05 	tsteq	r6, r5, lsl #26
     978:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
     97c:	01060b05 	tsteq	r6, r5, lsl #22
     980:	2f060305 	svccs	0x00060305
     984:	01052e06 	tsteq	r5, r6, lsl #28
     988:	0100c703 	tsteq	r0, r3, lsl #14
     98c:	03060b05 	movweq	r0, #27397	; 0x6b05
     990:	05052e64 	streq	r2, [r5, #-3684]	; 0xfffff19c
     994:	060b054e 	streq	r0, [fp], -lr, asr #10
     998:	05052001 	streq	r2, [r5, #-1]
     99c:	0e052106 	adfeqs	f2, f5, f6
     9a0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     9a4:	490e0521 	stmdbmi	lr, {r0, r5, r8, sl}
     9a8:	2f060505 	svccs	0x00060505
     9ac:	06202e06 	strteq	r2, [r0], -r6, lsl #28
     9b0:	06070517 			; <UNDEFINED> instruction: 0x06070517
     9b4:	05210601 	streq	r0, [r1, #-1537]!	; 0xfffff9ff
     9b8:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
     9bc:	2f062009 	svccs	0x00062009
     9c0:	01061205 	tsteq	r6, r5, lsl #4
     9c4:	2f060905 	svccs	0x00060905
     9c8:	02002c05 	andeq	r2, r0, #1280	; 0x500
     9cc:	0c030104 	stfeqs	f0, [r3], {4}
     9d0:	030d0501 	movweq	r0, #54529	; 0xd501
     9d4:	0f054a76 	svceq	0x00054a76
     9d8:	09050106 	stmdbeq	r5, {r1, r2, r8}
     9dc:	17052f06 	strne	r2, [r5, -r6, lsl #30]
     9e0:	09050106 	stmdbeq	r5, {r1, r2, r8}
     9e4:	05052f06 	streq	r2, [r5, #-3846]	; 0xfffff0fa
     9e8:	06090524 	streq	r0, [r9], -r4, lsr #10
     9ec:	58070501 	stmdapl	r7, {r0, r8, sl}
     9f0:	05012106 	streq	r2, [r1, #-262]	; 0xfffffefa
     9f4:	0f05ae05 	svceq	0x0005ae05
     9f8:	07050106 	streq	r0, [r5, -r6, lsl #2]
     9fc:	1f0f052f 	svcne	0x000f052f
     a00:	05210705 	streq	r0, [r1, #-1797]!	; 0xfffff8fb
     a04:	05051f0f 	streq	r1, [r5, #-3855]	; 0xfffff0f1
     a08:	07052106 	streq	r2, [r5, -r6, lsl #2]
     a0c:	0e020106 	adfeqs	f0, f2, f6
     a10:	ad010100 	stfges	f0, [r1, #-0]
     a14:	03000007 	movweq	r0, #7
     a18:	0000f200 	andeq	pc, r0, r0, lsl #4
     a1c:	fb010200 	blx	41226 <_binary_src_fatexample_img_size+0x3fe26>
     a20:	01000d0e 	tsteq	r0, lr, lsl #26
     a24:	00010101 	andeq	r0, r1, r1, lsl #2
     a28:	00010000 	andeq	r0, r1, r0
     a2c:	72730100 	rsbsvc	r0, r3, #0, 2
     a30:	752f0063 	strvc	r0, [pc, #-99]!	; 9d5 <_Min_Stack_Size+0x5d5>
     a34:	6c2f7273 	sfmvs	f7, 4, [pc], #-460	; 870 <_Min_Stack_Size+0x470>
     a38:	672f6269 	strvs	r6, [pc, -r9, ror #4]!
     a3c:	612f6363 			; <UNDEFINED> instruction: 0x612f6363
     a40:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     a44:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     a48:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     a4c:	332e382f 			; <UNDEFINED> instruction: 0x332e382f
     a50:	692f312e 	stmdbvs	pc!, {r1, r2, r3, r5, r8, ip, sp}	; <UNPREDICTABLE>
     a54:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     a58:	6c006564 	cfstr32vs	mvfx6, [r0], {100}	; 0x64
     a5c:	692f6269 	stmdbvs	pc!, {r0, r3, r5, r6, r9, sp, lr}	; <UNPREDICTABLE>
     a60:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     a64:	2f006564 	svccs	0x00006564
     a68:	2f727375 	svccs	0x00727375
     a6c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     a70:	2f656475 	svccs	0x00656475
     a74:	6c77656e 	cfldr64vs	mvdx6, [r7], #-440	; 0xfffffe48
     a78:	732f6269 			; <UNDEFINED> instruction: 0x732f6269
     a7c:	00007379 	andeq	r7, r0, r9, ror r3
     a80:	5f627375 	svcpl	0x00627375
     a84:	73616c63 	cmnvc	r1, #25344	; 0x6300
     a88:	736d5f73 	cmnvc	sp, #460	; 0x1cc
     a8c:	00632e64 	rsbeq	r2, r3, r4, ror #28
     a90:	73000001 	movwvc	r0, #1
     a94:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
     a98:	00682e74 	rsbeq	r2, r8, r4, ror lr
     a9c:	75000002 	strvc	r0, [r0, #-2]
     aa0:	6c5f6273 	lfmvs	f6, 2, [pc], {115}	; 0x73
     aa4:	682e6269 	stmdavs	lr!, {r0, r3, r5, r6, r9, sp, lr}
     aa8:	00000100 	andeq	r0, r0, r0, lsl #2
     aac:	65726f63 	ldrbvs	r6, [r2, #-3939]!	; 0xfffff09d
     ab0:	336d635f 	cmncc	sp, #2080374785	; 0x7c000001
     ab4:	0300682e 	movweq	r6, #2094	; 0x82e
     ab8:	79730000 	ldmdbvc	r3!, {}^	; <UNPREDICTABLE>
     abc:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
     ac0:	6d74735f 	ldclvs	3, cr7, [r4, #-380]!	; 0xfffffe84
     ac4:	316c3233 	cmncc	ip, r3, lsr r2
     ac8:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
     acc:	00000300 	andeq	r0, r0, r0, lsl #6
     ad0:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     ad4:	35316c32 	ldrcc	r6, [r1, #-3122]!	; 0xfffff3ce
     ad8:	2e637831 	mcrcs	8, 3, r7, cr3, cr1, {1}
     adc:	00030068 	andeq	r0, r3, r8, rrx
     ae0:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
     ae4:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
     ae8:	00020068 	andeq	r0, r2, r8, rrx
     aec:	79745f00 	ldmdbvc	r4!, {r8, r9, sl, fp, ip, lr}^
     af0:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
     af4:	00040068 	andeq	r0, r4, r8, rrx
     af8:	65657200 	strbvs	r7, [r5, #-512]!	; 0xfffffe00
     afc:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
     b00:	00000400 	andeq	r0, r0, r0, lsl #8
     b04:	6b636f6c 	blvs	18dc8bc <_binary_src_fatexample_img_size+0x18db4bc>
     b08:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
     b0c:	05000000 	streq	r0, [r0, #-0]
     b10:	02050026 	andeq	r0, r5, #38	; 0x26
     b14:	08000818 	stmdaeq	r0, {r3, r4, fp}
     b18:	0102a303 	tsteq	r2, r3, lsl #6
     b1c:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
     b20:	05740605 	ldrbeq	r0, [r4, #-1541]!	; 0xfffff9fb
     b24:	08051f26 	stmdaeq	r5, {r1, r2, r5, r8, r9, sl, fp, ip}
     b28:	20050521 	andcs	r0, r5, r1, lsr #10
     b2c:	02000805 	andeq	r0, r0, #327680	; 0x50000
     b30:	00200204 	eoreq	r0, r0, r4, lsl #4
     b34:	3c050402 	cfstrscc	mvf0, [r5], {2}
     b38:	1f060d05 	svcne	0x00060d05
     b3c:	05150305 	ldreq	r0, [r5, #-773]	; 0xfffffcfb
     b40:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
     b44:	3d063c05 	stccc	12, cr3, [r6, #-20]	; 0xffffffec
     b48:	01060e05 	tsteq	r6, r5, lsl #28
     b4c:	21060505 	tstcs	r6, r5, lsl #10
     b50:	0614053d 			; <UNDEFINED> instruction: 0x0614053d
     b54:	2e070501 	cfsh32cs	mvfx0, mvfx7, #1
     b58:	1e052f06 	cdpne	15, 0, cr2, cr5, cr6, {0}
     b5c:	07050106 	streq	r0, [r5, -r6, lsl #2]
     b60:	05053c2e 	streq	r3, [r5, #-3118]	; 0xfffff3d2
     b64:	10053406 	andne	r3, r5, r6, lsl #8
     b68:	202e0106 	eorcs	r0, lr, r6, lsl #2
     b6c:	12030105 	andne	r0, r3, #1073741825	; 0x40000001
     b70:	00080501 	andeq	r0, r8, r1, lsl #10
     b74:	03050402 	movweq	r0, #21506	; 0x5402
     b78:	07052062 	streq	r2, [r5, -r2, rrx]
     b7c:	05136006 	ldreq	r6, [r3, #-6]
     b80:	0511060f 	ldreq	r0, [r1, #-1551]	; 0xfffff9f1
     b84:	2b052107 	blcs	148fa8 <_binary_src_fatexample_img_size+0x147ba8>
     b88:	4a390520 	bmi	e42010 <_binary_src_fatexample_img_size+0xe40c10>
     b8c:	05200705 	streq	r0, [r0, #-1797]!	; 0xfffff8fb
     b90:	3e052039 	mcrcc	0, 0, r2, cr5, cr9, {1}
     b94:	2e070520 	cfsh32cs	mvfx0, mvfx7, #16
     b98:	11054b06 	tstne	r5, r6, lsl #22
     b9c:	05660106 	strbeq	r0, [r6, #-262]!	; 0xfffffefa
     ba0:	05160605 	ldreq	r0, [r6, #-1541]	; 0xfffff9fb
     ba4:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
     ba8:	054b0605 	strbeq	r0, [fp, #-1541]	; 0xfffff9fb
     bac:	06010607 	streq	r0, [r1], -r7, lsl #12
     bb0:	4a06132f 	bmi	185874 <_binary_src_fatexample_img_size+0x184474>
     bb4:	15052f06 	strne	r2, [r5, #-3846]	; 0xfffff0fa
     bb8:	053c0106 	ldreq	r0, [ip, #-262]!	; 0xfffffefa
     bbc:	053d060b 	ldreq	r0, [sp, #-1547]!	; 0xfffff9f5
     bc0:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     bc4:	05210607 	streq	r0, [r1, #-1543]!	; 0xfffff9f9
     bc8:	05180613 	ldreq	r0, [r8, #-1555]	; 0xfffff9ed
     bcc:	207a0315 	rsbscs	r0, sl, r5, lsl r3
     bd0:	2f060705 	svccs	0x00060705
     bd4:	01061505 	tsteq	r6, r5, lsl #10
     bd8:	2f060705 	svccs	0x00060705
     bdc:	01061305 	tsteq	r6, r5, lsl #6
     be0:	2f060705 	svccs	0x00060705
     be4:	13061205 	movwne	r1, #25093	; 0x6205
     be8:	30060705 	andcc	r0, r6, r5, lsl #14
     bec:	01061305 	tsteq	r6, r5, lsl #6
     bf0:	21060705 	tstcs	r6, r5, lsl #14
     bf4:	01061105 	tsteq	r6, r5, lsl #2
     bf8:	00065005 	andeq	r5, r6, r5
     bfc:	08f40205 	ldmeq	r4!, {r0, r2, r9}^
     c00:	ae030800 	cdpge	8, 0, cr0, cr3, cr0, {0}
     c04:	0305017e 	movweq	r0, #20862	; 0x517e
     c08:	08070513 	stmdaeq	r7, {r0, r1, r4, r8, sl}
     c0c:	060d0514 			; <UNDEFINED> instruction: 0x060d0514
     c10:	06070501 	streq	r0, [r7], -r1, lsl #10
     c14:	060d052f 	streq	r0, [sp], -pc, lsr #10
     c18:	03200501 			; <UNDEFINED> instruction: 0x03200501
     c1c:	0705201b 	smladeq	r5, fp, r0, r2
     c20:	01052106 	tsteq	r5, r6, lsl #2
     c24:	07051606 	streq	r1, [r5, -r6, lsl #12]
     c28:	20630306 	rsbcs	r0, r3, r6, lsl #6
     c2c:	01060d05 	tsteq	r6, r5, lsl #26
     c30:	2f060705 	svccs	0x00060705
     c34:	01060d05 	tsteq	r6, r5, lsl #26
     c38:	31060705 	tstcc	r6, r5, lsl #14
     c3c:	01060d05 	tsteq	r6, r5, lsl #26
     c40:	2f060705 	svccs	0x00060705
     c44:	01060d05 	tsteq	r6, r5, lsl #26
     c48:	31060705 	tstcc	r6, r5, lsl #14
     c4c:	0b052006 	bleq	148c6c <_binary_src_fatexample_img_size+0x14786c>
     c50:	11056806 	tstne	r5, r6, lsl #16
     c54:	09030106 	stmdbeq	r3, {r1, r2, r8}
     c58:	060b0520 	streq	r0, [fp], -r0, lsr #10
     c5c:	16070521 	strne	r0, [r7], -r1, lsr #10
     c60:	01062005 	tsteq	r6, r5
     c64:	03060b05 	movweq	r0, #27397	; 0x6b05
     c68:	11053c75 	tstne	r5, r5, ror ip
     c6c:	0b050106 	bleq	14108c <_binary_src_fatexample_img_size+0x13fc8c>
     c70:	11053106 	tstne	r5, r6, lsl #2
     c74:	0b050106 	bleq	141094 <_binary_src_fatexample_img_size+0x13fc94>
     c78:	11053106 	tstne	r5, r6, lsl #2
     c7c:	47050106 	strmi	r0, [r5, -r6, lsl #2]
     c80:	02050006 	andeq	r0, r5, #6
     c84:	08000970 	stmdaeq	r0, {r4, r5, r6, r8, fp}
     c88:	05012203 	streq	r2, [r1, #-515]	; 0xfffffdfd
     c8c:	05151303 	ldreq	r1, [r5, #-771]	; 0xfffffcfd
     c90:	05010605 	streq	r0, [r1, #-1541]	; 0xfffff9fb
     c94:	05052501 	streq	r2, [r5, #-1281]	; 0xfffffaff
     c98:	0521061b 	streq	r0, [r1, #-1563]!	; 0xfffff9e5
     c9c:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
     ca0:	053d0605 	ldreq	r0, [sp, #-1541]!	; 0xfffff9fb
     ca4:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
     ca8:	05300603 	ldreq	r0, [r0, #-1539]!	; 0xfffff9fd
     cac:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
     cb0:	92030616 	andls	r0, r3, #23068672	; 0x1600000
     cb4:	03054a01 	movweq	r4, #23041	; 0x5a01
     cb8:	06160513 			; <UNDEFINED> instruction: 0x06160513
     cbc:	21030511 	tstcs	r3, r1, lsl r5
     cc0:	05676706 	strbeq	r6, [r7, #-1798]!	; 0xfffff8fa
     cc4:	05010625 	streq	r0, [r1, #-1573]	; 0xfffff9db
     cc8:	25052e17 	strcs	r2, [r5, #-3607]	; 0xfffff1e9
     ccc:	20170520 	andscs	r0, r7, r0, lsr #10
     cd0:	21060305 	tstcs	r6, r5, lsl #6
     cd4:	05010705 	streq	r0, [r1, #-1797]	; 0xfffff8fb
     cd8:	05010637 	streq	r0, [r1, #-1591]	; 0xfffff9c9
     cdc:	04020021 	streq	r0, [r2], #-33	; 0xffffffdf
     ce0:	05580603 	ldrbeq	r0, [r8, #-1539]	; 0xfffff9fd
     ce4:	0402003b 	streq	r0, [r2], #-59	; 0xffffffc5
     ce8:	05010603 	streq	r0, [r1, #-1539]	; 0xfffff9fd
     cec:	04020003 	streq	r0, [r2], #-3
     cf0:	2b052e03 	blcs	14c504 <_binary_src_fatexample_img_size+0x14b104>
     cf4:	03040200 	movweq	r0, #16896	; 0x4200
     cf8:	00030520 	andeq	r0, r3, r0, lsr #10
     cfc:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
     d00:	05210105 	streq	r0, [r1, #-261]!	; 0xfffffefb
     d04:	1f030619 	svcne	0x00030619
     d08:	140105c8 	strne	r0, [r1], #-1480	; 0xfffffa38
     d0c:	1c031405 	cfstrsne	mvf1, [r3], {5}
     d10:	13030520 	movwne	r0, #13600	; 0x3520
     d14:	11061405 	tstne	r6, r5, lsl #8
     d18:	05211105 	streq	r1, [r1, #-261]!	; 0xfffffefb
     d1c:	3a052005 	bcc	148d38 <_binary_src_fatexample_img_size+0x147938>
     d20:	03040200 	movweq	r0, #16896	; 0x4200
     d24:	65056706 	strvs	r6, [r5, #-1798]	; 0xfffff8fa
     d28:	03040200 	movweq	r0, #16896	; 0x4200
     d2c:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
     d30:	052e0304 	streq	r0, [lr, #-772]!	; 0xfffffcfc
     d34:	04020044 	streq	r0, [r2], #-68	; 0xffffffbc
     d38:	05052e03 	streq	r2, [r5, #-3587]	; 0xfffff1fd
     d3c:	03040200 	movweq	r0, #16896	; 0x4200
     d40:	052f062e 	streq	r0, [pc, #-1582]!	; 71a <_Min_Stack_Size+0x31a>
     d44:	31010612 	tstcc	r1, r2, lsl r6
     d48:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
     d4c:	01061405 	tsteq	r6, r5, lsl #8
     d50:	05201d05 	streq	r1, [r0, #-3333]!	; 0xfffff2fb
     d54:	2c052005 	stccs	0, cr2, [r5], {5}
     d58:	39052e06 	stmdbcc	r5, {r1, r2, r9, sl, fp, sp}
     d5c:	03050106 	movweq	r0, #20742	; 0x5106
     d60:	2e053006 	cdpcs	0, 0, cr3, cr5, cr6, {0}
     d64:	18050106 	stmdane	r5, {r1, r2, r8}
     d68:	0603052e 	streq	r0, [r3], -lr, lsr #10
     d6c:	0611052f 	ldreq	r0, [r1], -pc, lsr #10
     d70:	06030501 	streq	r0, [r3], -r1, lsl #10
     d74:	0611053d 			; <UNDEFINED> instruction: 0x0611053d
     d78:	06030501 	streq	r0, [r3], -r1, lsl #10
     d7c:	0612052f 	ldreq	r0, [r2], -pc, lsr #10
     d80:	2f010501 	svccs	0x00010501
     d84:	73030505 	movwvc	r0, #13573	; 0x3505
     d88:	00370520 	eorseq	r0, r7, r0, lsr #10
     d8c:	06030402 	streq	r0, [r3], -r2, lsl #8
     d90:	005f0540 	subseq	r0, pc, r0, asr #10
     d94:	06030402 	streq	r0, [r3], -r2, lsl #8
     d98:	04020001 	streq	r0, [r2], #-1
     d9c:	41052e03 	tstmi	r5, r3, lsl #28
     da0:	03040200 	movweq	r0, #16896	; 0x4200
     da4:	0005052e 	andeq	r0, r5, lr, lsr #10
     da8:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
     dac:	12052f06 	andne	r2, r5, #6, 30
     db0:	1a050106 	bne	1411d0 <_binary_src_fatexample_img_size+0x13fdd0>
     db4:	02050006 	andeq	r0, r5, #6
     db8:	08000a5c 	stmdaeq	r0, {r2, r3, r4, r6, r9, fp}
     dbc:	05011a03 	streq	r1, [r1, #-2563]	; 0xfffff5fd
     dc0:	07051403 	streq	r1, [r5, -r3, lsl #8]
     dc4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     dc8:	3205101a 	andcc	r1, r5, #26
     dcc:	03040200 	movweq	r0, #16896	; 0x4200
     dd0:	4c053e06 	stcmi	14, cr3, [r5], {6}
     dd4:	03040200 	movweq	r0, #16896	; 0x4200
     dd8:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
     ddc:	052e0304 	streq	r0, [lr, #-772]!	; 0xfffffcfc
     de0:	04020003 	streq	r0, [r2], #-3
     de4:	3c052003 	stccc	0, cr2, [r5], {3}
     de8:	03040200 	movweq	r0, #16896	; 0x4200
     dec:	0003052e 	andeq	r0, r3, lr, lsr #10
     df0:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
     df4:	0d052106 	stfeqs	f2, [r5, #-24]	; 0xffffffe8
     df8:	03050106 	movweq	r0, #20742	; 0x5106
     dfc:	0d054b06 	vstreq	d4, [r5, #-24]	; 0xffffffe8
     e00:	03050106 	movweq	r0, #20742	; 0x5106
     e04:	0d053d06 	stceq	13, cr3, [r5, #-24]	; 0xffffffe8
     e08:	03050106 	movweq	r0, #20742	; 0x5106
     e0c:	10053d06 	andne	r3, r5, r6, lsl #26
     e10:	01050106 	tsteq	r5, r6, lsl #2
     e14:	061c052f 	ldreq	r0, [ip], -pc, lsr #10
     e18:	14030576 	strne	r0, [r3], #-1398	; 0xfffffa8a
     e1c:	01061805 	tsteq	r6, r5, lsl #16
     e20:	67060305 	strvs	r0, [r6, -r5, lsl #6]
     e24:	01061105 	tsteq	r6, r5, lsl #2
     e28:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
     e2c:	01061105 	tsteq	r6, r5, lsl #2
     e30:	2f060305 	svccs	0x00060305
     e34:	01061205 	tsteq	r6, r5, lsl #4
     e38:	052f0105 	streq	r0, [pc, #-261]!	; d3b <_Min_Stack_Size+0x93b>
     e3c:	055a061a 	ldrbeq	r0, [sl, #-1562]	; 0xfffff9e6
     e40:	05131303 	ldreq	r1, [r3, #-771]	; 0xfffffcfd
     e44:	0511060b 	ldreq	r0, [r1, #-1547]	; 0xfffff9f5
     e48:	2d052123 	stfcss	f2, [r5, #-140]	; 0xffffff74
     e4c:	300d052e 	andcc	r0, sp, lr, lsr #10
     e50:	051e2d05 	ldreq	r2, [lr, #-3333]	; 0xfffff2fb
     e54:	0305200c 	movweq	r2, #20492	; 0x500c
     e58:	19052206 	stmdbne	r5, {r1, r2, r9, sp}
     e5c:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
     e60:	06030520 	streq	r0, [r3], -r0, lsr #10
     e64:	06190521 	ldreq	r0, [r9], -r1, lsr #10
     e68:	200d0501 	andcs	r0, sp, r1, lsl #10
     e6c:	21060305 	tstcs	r6, r5, lsl #6
     e70:	01061905 	tsteq	r6, r5, lsl #18
     e74:	05200d05 	streq	r0, [r0, #-3333]!	; 0xfffff2fb
     e78:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
     e7c:	1c16060d 	ldcne	6, cr0, [r6], {13}
     e80:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
     e84:	14060d05 	strne	r0, [r6], #-3333	; 0xfffff2fb
     e88:	2510051e 	ldrcs	r0, [r0, #-1310]	; 0xfffffae2
     e8c:	051b0d05 	ldreq	r0, [fp, #-3333]	; 0xfffff2fb
     e90:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
     e94:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     e98:	13210603 			; <UNDEFINED> instruction: 0x13210603
     e9c:	01060d05 	tsteq	r6, r5, lsl #26
     ea0:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
     ea4:	01061005 	tsteq	r6, r5
     ea8:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
     eac:	01061805 	tsteq	r6, r5, lsl #16
     eb0:	4b060305 	blmi	181acc <_binary_src_fatexample_img_size+0x1806cc>
     eb4:	01061105 	tsteq	r6, r5, lsl #2
     eb8:	2f060305 	svccs	0x00060305
     ebc:	01061105 	tsteq	r6, r5, lsl #2
     ec0:	2f060305 	svccs	0x00060305
     ec4:	01061205 	tsteq	r6, r5, lsl #4
     ec8:	052f0105 	streq	r0, [pc, #-261]!	; dcb <_Min_Stack_Size+0x9cb>
     ecc:	05760619 	ldrbeq	r0, [r6, #-1561]!	; 0xfffff9e7
     ed0:	0d051303 	stceq	3, cr1, [r5, #-12]
     ed4:	1e300106 	rsfnes	f0, f0, f6
     ed8:	21060305 	tstcs	r6, r5, lsl #6
     edc:	01060d05 	tsteq	r6, r5, lsl #26
     ee0:	05210505 	streq	r0, [r1, #-1285]!	; 0xfffffafb
     ee4:	03051f0d 	movweq	r1, #24333	; 0x5f0d
     ee8:	05052106 	streq	r2, [r5, #-262]	; 0xfffffefa
     eec:	0f050106 	svceq	0x00050106
     ef0:	300d0523 	andcc	r0, sp, r3, lsr #10
     ef4:	21212121 			; <UNDEFINED> instruction: 0x21212121
     ef8:	030f0521 	movweq	r0, #62753	; 0xf521
     efc:	10052079 	andne	r2, r5, r9, ror r0
     f00:	06030536 			; <UNDEFINED> instruction: 0x06030536
     f04:	132e7a03 			; <UNDEFINED> instruction: 0x132e7a03
     f08:	13131313 	tstne	r3, #1275068416	; 0x4c000000
     f0c:	06100513 			; <UNDEFINED> instruction: 0x06100513
     f10:	06030501 	streq	r0, [r3], -r1, lsl #10
     f14:	06210521 	strteq	r0, [r1], -r1, lsr #10
     f18:	20180501 	andscs	r0, r8, r1, lsl #10
     f1c:	05202d05 	streq	r2, [r0, #-3333]!	; 0xfffff2fb
     f20:	01052018 	tsteq	r5, r8, lsl r0
     f24:	06140521 	ldreq	r0, [r4], -r1, lsr #10
     f28:	14030576 	strne	r0, [r3], #-1398	; 0xfffffa8a
     f2c:	20060d05 	andcs	r0, r6, r5, lsl #26
     f30:	5a060305 	bpl	181b4c <_binary_src_fatexample_img_size+0x18074c>
     f34:	01061c05 	tsteq	r6, r5, lsl #24
     f38:	05203305 	streq	r3, [r0, #-773]!	; 0xfffffcfb
     f3c:	2605200f 	strcs	r2, [r5], -pc
     f40:	2f0d0520 	svccs	0x000d0520
     f44:	051f0f05 	ldreq	r0, [pc, #-3845]	; 47 <_Min_Heap_Size+0x47>
     f48:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
     f4c:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     f50:	0d05222a 	sfmeq	f2, 4, [r5, #-168]	; 0xffffff58
     f54:	0603051e 			; <UNDEFINED> instruction: 0x0603051e
     f58:	06100530 			; <UNDEFINED> instruction: 0x06100530
     f5c:	06030501 	streq	r0, [r3], -r1, lsl #10
     f60:	06110522 	ldreq	r0, [r1], -r2, lsr #10
     f64:	06030501 	streq	r0, [r3], -r1, lsl #10
     f68:	0611052f 	ldreq	r0, [r1], -pc, lsr #10
     f6c:	06030501 	streq	r0, [r3], -r1, lsl #10
     f70:	0612052f 	ldreq	r0, [r2], -pc, lsr #10
     f74:	2f010501 	svccs	0x00010501
     f78:	a0061505 	andge	r1, r6, r5, lsl #10
     f7c:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
     f80:	0520060d 	streq	r0, [r0, #-1549]!	; 0xfffff9f3
     f84:	0d053f0b 	stceq	15, cr3, [r5, #-44]	; 0xffffffd4
     f88:	0603052b 	streq	r0, [r3], -fp, lsr #10
     f8c:	061c0521 	ldreq	r0, [ip], -r1, lsr #10
     f90:	20330501 	eorscs	r0, r3, r1, lsl #10
     f94:	05230d05 	streq	r0, [r3, #-3333]!	; 0xfffff2fb
     f98:	0f051d26 	svceq	0x00051d26
     f9c:	0603052e 	streq	r0, [r3], -lr, lsr #10
     fa0:	0d051330 	stceq	3, cr1, [r5, #-192]	; 0xffffff40
     fa4:	03050106 	movweq	r0, #20742	; 0x5106
     fa8:	05053e06 	streq	r3, [r5, #-3590]	; 0xfffff1fa
     fac:	06050106 	streq	r0, [r5], -r6, lsl #2
     fb0:	20790306 	rsbscs	r0, r9, r6, lsl #6
     fb4:	051a0505 	ldreq	r0, [sl, #-1285]	; 0xfffffafb
     fb8:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
     fbc:	053d0605 	ldreq	r0, [sp, #-1541]!	; 0xfffff9fb
     fc0:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
     fc4:	053d0605 	ldreq	r0, [sp, #-1541]!	; 0xfffff9fb
     fc8:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
     fcc:	053d0605 	ldreq	r0, [sp, #-1541]!	; 0xfffff9fb
     fd0:	29052303 	stmdbcs	r5, {r0, r1, r8, r9, sp}
     fd4:	0f050106 	svceq	0x00050106
     fd8:	06030520 	streq	r0, [r3], -r0, lsr #10
     fdc:	06110530 			; <UNDEFINED> instruction: 0x06110530
     fe0:	06030501 	streq	r0, [r3], -r1, lsl #10
     fe4:	0611052f 	ldreq	r0, [r1], -pc, lsr #10
     fe8:	06030501 	streq	r0, [r3], -r1, lsl #10
     fec:	0612052f 	ldreq	r0, [r2], -pc, lsr #10
     ff0:	2f010501 	svccs	0x00010501
     ff4:	92061d05 	andls	r1, r6, #320	; 0x140
     ff8:	13130305 	tstne	r3, #335544320	; 0x14000000
     ffc:	11060b05 	tstne	r6, r5, lsl #22
    1000:	05212305 	streq	r2, [r1, #-773]!	; 0xfffffcfb
    1004:	2505202d 	strcs	r2, [r5, #-45]	; 0xffffffd3
    1008:	1e2d053e 	mcrne	5, 1, r0, cr13, cr14, {1}
    100c:	05200c05 	streq	r0, [r0, #-3077]!	; 0xfffff3fb
    1010:	05220603 	streq	r0, [r2, #-1539]!	; 0xfffff9fd
    1014:	2c15060d 	ldccs	6, cr0, [r5], {13}
    1018:	05231905 	streq	r1, [r3, #-2309]!	; 0xfffff6fb
    101c:	0522200d 	streq	r2, [r2, #-13]!
    1020:	0e051f19 	mcreq	15, 0, r1, cr5, cr9, {0}
    1024:	03250525 			; <UNDEFINED> instruction: 0x03250525
    1028:	0e052076 	mcreq	0, 0, r2, cr5, cr6, {3}
    102c:	05200a03 	streq	r0, [r0, #-2563]!	; 0xfffff5fd
    1030:	25052310 	strcs	r2, [r5, #-784]	; 0xfffffcf0
    1034:	05207303 	streq	r7, [r0, #-771]!	; 0xfffffcfd
    1038:	0d052019 	stceq	0, cr2, [r5, #-100]	; 0xffffff9c
    103c:	06030520 	streq	r0, [r3], -r0, lsr #10
    1040:	05131521 	ldreq	r1, [r3, #-1313]	; 0xfffffadf
    1044:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    1048:	14210603 	strtne	r0, [r1], #-1539	; 0xfffff9fd
    104c:	01060d05 	tsteq	r6, r5, lsl #26
    1050:	21060305 	tstcs	r6, r5, lsl #6
    1054:	01060d05 	tsteq	r6, r5, lsl #26
    1058:	21060305 	tstcs	r6, r5, lsl #6
    105c:	060e0513 			; <UNDEFINED> instruction: 0x060e0513
    1060:	06030501 	streq	r0, [r3], -r1, lsl #10
    1064:	06100522 	ldreq	r0, [r0], -r2, lsr #10
    1068:	06030501 	streq	r0, [r3], -r1, lsl #10
    106c:	06110522 	ldreq	r0, [r1], -r2, lsr #10
    1070:	06030501 	streq	r0, [r3], -r1, lsl #10
    1074:	0611052f 	ldreq	r0, [r1], -pc, lsr #10
    1078:	06030501 	streq	r0, [r3], -r1, lsl #10
    107c:	0612052f 	ldreq	r0, [r2], -pc, lsr #10
    1080:	2f010501 	svccs	0x00010501
    1084:	76061405 	strvc	r1, [r6], -r5, lsl #8
    1088:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    108c:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    1090:	19052010 	stmdbne	r5, {r4, sp}
    1094:	240f0520 	strcs	r0, [pc], #-1312	; 109c <_Min_Stack_Size+0xc9c>
    1098:	051c1005 	ldreq	r1, [ip, #-5]
    109c:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
    10a0:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    10a4:	052f0603 	streq	r0, [pc, #-1539]!	; aa9 <_Min_Stack_Size+0x6a9>
    10a8:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    10ac:	054c0603 	strbeq	r0, [ip, #-1539]	; 0xfffff9fd
    10b0:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    10b4:	052f0603 	streq	r0, [pc, #-1539]!	; ab9 <_Min_Stack_Size+0x6b9>
    10b8:	0513060e 	ldreq	r0, [r3, #-1550]	; 0xfffff9f2
    10bc:	05300603 	ldreq	r0, [r0, #-1539]!	; 0xfffff9fd
    10c0:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    10c4:	07052003 	streq	r2, [r5, -r3]
    10c8:	741d0306 	ldrvc	r0, [sp], #-774	; 0xfffffcfa
    10cc:	01061705 	tsteq	r6, r5, lsl #14
    10d0:	2f060705 	svccs	0x00060705
    10d4:	01061505 	tsteq	r6, r5, lsl #10
    10d8:	3d060705 	stccc	7, cr0, [r6, #-20]	; 0xffffffec
    10dc:	01061505 	tsteq	r6, r5, lsl #10
    10e0:	3d060705 	stccc	7, cr0, [r6, #-20]	; 0xffffffec
    10e4:	01061605 	tsteq	r6, r5, lsl #12
    10e8:	3e060705 	cdpcc	7, 0, cr0, cr6, cr5, {0}
    10ec:	14060105 	strne	r0, [r6], #-261	; 0xfffffefb
    10f0:	5c030305 	stcpl	3, cr0, [r3], {5}
    10f4:	06070520 	streq	r0, [r7], -r0, lsr #10
    10f8:	054a0e03 	strbeq	r0, [sl, #-3587]	; 0xfffff1fd
    10fc:	72030603 	andvc	r0, r3, #3145728	; 0x300000
    1100:	0607052e 	streq	r0, [r7], -lr, lsr #10
    1104:	05741703 	ldrbeq	r1, [r4, #-1795]!	; 0xfffff8fd
    1108:	69030603 	stmdbvs	r3, {r0, r1, r9, sl}
    110c:	0607052e 	streq	r0, [r7], -lr, lsr #10
    1110:	034a1403 	movteq	r1, #41987	; 0xa403
    1114:	31312e6e 	teqcc	r1, lr, ror #28
    1118:	27053431 	smladxcs	r5, r1, r4, r3
    111c:	cc020500 	cfstr32gt	mvfx0, [r2], {-0}
    1120:	0308000c 	movweq	r0, #32780	; 0x800c
    1124:	05017dd8 	streq	r7, [r1, #-3544]	; 0xfffff228
    1128:	27051303 	strcs	r1, [r5, -r3, lsl #6]
    112c:	24051106 	strcs	r1, [r5], #-262	; 0xfffffefa
    1130:	06030521 	streq	r0, [r3], -r1, lsr #10
    1134:	0624053d 			; <UNDEFINED> instruction: 0x0624053d
    1138:	2f050511 	svccs	0x00050511
    113c:	0e052f06 	cdpeq	15, 0, cr2, cr5, cr6, {0}
    1140:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    1144:	053d0605 	ldreq	r0, [sp, #-1541]!	; 0xfffff9fb
    1148:	3c010613 	stccc	6, cr0, [r1], {19}
    114c:	05210705 	streq	r0, [r1, #-1797]!	; 0xfffff8fb
    1150:	05051f13 	streq	r1, [r5, #-3859]	; 0xfffff0ed
    1154:	07052f06 	streq	r2, [r5, -r6, lsl #30]
    1158:	21060106 	tstcs	r6, r6, lsl #2
    115c:	03052e06 	movweq	r2, #24070	; 0x5e06
    1160:	010d0306 	tsteq	sp, r6, lsl #6
    1164:	01060505 	tsteq	r6, r5, lsl #10
    1168:	055a0105 	ldrbeq	r0, [sl, #-261]	; 0xfffffefb
    116c:	73030609 	movwvc	r0, #13833	; 0x3609
    1170:	06170520 	ldreq	r0, [r7], -r0, lsr #10
    1174:	200b0501 	andcs	r0, fp, r1, lsl #10
    1178:	03060305 	movweq	r0, #25349	; 0x6305
    117c:	01054a0c 	tsteq	r5, ip, lsl #20
    1180:	03051306 	movweq	r1, #21254	; 0x5306
    1184:	0605052d 	streq	r0, [r5], -sp, lsr #10
    1188:	132e7503 			; <UNDEFINED> instruction: 0x132e7503
    118c:	060d0513 			; <UNDEFINED> instruction: 0x060d0513
    1190:	22070510 	andcs	r0, r7, #16, 10	; 0x4000000
    1194:	0c052f06 	stceq	15, cr2, [r5], {6}
    1198:	053c0106 	ldreq	r0, [ip, #-262]!	; 0xfffffefa
    119c:	05330605 	ldreq	r0, [r3, #-1541]!	; 0xfffff9fb
    11a0:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    11a4:	05470607 	strbeq	r0, [r7, #-1543]	; 0xfffff9f9
    11a8:	0501063f 	streq	r0, [r1, #-1599]	; 0xfffff9c1
    11ac:	3f05200c 	svccc	0x0005200c
    11b0:	20440520 	subcs	r0, r4, r0, lsr #10
    11b4:	052e0c05 	streq	r0, [lr, #-3077]!	; 0xfffff3fb
    11b8:	054b0607 	strbeq	r0, [fp, #-1543]	; 0xfffff9f9
    11bc:	02010611 	andeq	r0, r1, #17825792	; 0x1100000
    11c0:	0101000f 	tsteq	r1, pc
    11c4:	00000110 	andeq	r0, r0, r0, lsl r1
    11c8:	007b0003 	rsbseq	r0, fp, r3
    11cc:	01020000 	mrseq	r0, (UNDEF: 2)
    11d0:	000d0efb 	strdeq	r0, [sp], -fp
    11d4:	01010101 	tsteq	r1, r1, lsl #2
    11d8:	01000000 	mrseq	r0, (UNDEF: 0)
    11dc:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    11e0:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    11e4:	2f2e2e2f 	svccs	0x002e2e2f
    11e8:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    11ec:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    11f0:	2f2e2e2f 	svccs	0x002e2e2f
    11f4:	6e2f2e2e 	cdpvs	14, 2, cr2, cr15, cr14, {1}
    11f8:	696c7765 	stmdbvs	ip!, {r0, r2, r5, r6, r8, r9, sl, ip, sp, lr}^
    11fc:	696c2f62 	stmdbvs	ip!, {r1, r5, r6, r8, r9, sl, fp, sp}^
    1200:	6d2f6362 	stcvs	3, cr6, [pc, #-392]!	; 1080 <_Min_Stack_Size+0xc80>
    1204:	00637369 	rsbeq	r7, r3, r9, ror #6
    1208:	7273752f 	rsbsvc	r7, r3, #197132288	; 0xbc00000
    120c:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    1210:	6363672f 	cmnvs	r3, #12320768	; 0xbc0000
    1214:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
    1218:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    121c:	61652d65 	cmnvs	r5, r5, ror #26
    1220:	382f6962 	stmdacc	pc!, {r1, r5, r6, r8, fp, sp, lr}	; <UNPREDICTABLE>
    1224:	312e332e 			; <UNDEFINED> instruction: 0x312e332e
    1228:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    122c:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    1230:	6e690000 	cdpvs	0, 6, cr0, cr9, cr0, {0}
    1234:	632e7469 			; <UNDEFINED> instruction: 0x632e7469
    1238:	00000100 	andeq	r0, r0, r0, lsl #2
    123c:	64647473 	strbtvs	r7, [r4], #-1139	; 0xfffffb8d
    1240:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
    1244:	00000200 	andeq	r0, r0, r0, lsl #4
    1248:	00010500 	andeq	r0, r1, r0, lsl #10
    124c:	0d600205 	sfmeq	f0, 2, [r0, #-20]!	; 0xffffffec
    1250:	1e030800 	cdpne	8, 0, cr0, cr3, cr0, {0}
    1254:	13030501 	movwne	r0, #13569	; 0x3501
    1258:	01051413 	tsteq	r5, r3, lsl r4
    125c:	1f050e06 	svcne	0x00050e06
    1260:	06030524 	streq	r0, [r3], -r4, lsr #10
    1264:	2001063d 	andcs	r0, r1, sp, lsr r6
    1268:	05200a05 	streq	r0, [r0, #-2565]!	; 0xfffff5fb
    126c:	04020005 	streq	r0, [r2], #-5
    1270:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
    1274:	0402001b 	streq	r0, [r2], #-27	; 0xffffffe5
    1278:	05110603 	ldreq	r0, [r1, #-1539]	; 0xfffff9fd
    127c:	0402001a 	streq	r0, [r2], #-26	; 0xffffffe6
    1280:	05052103 	streq	r2, [r5, #-259]	; 0xfffffefd
    1284:	03040200 	movweq	r0, #16896	; 0x4200
    1288:	0003052e 	andeq	r0, r3, lr, lsr #10
    128c:	1f030402 	svcne	0x00030402
    1290:	1c053206 	sfmne	f3, 4, [r5], {6}
    1294:	05201506 	streq	r1, [r0, #-1286]!	; 0xfffffafa
    1298:	31061d03 	tstcc	r6, r3, lsl #26
    129c:	01061c05 	tsteq	r6, r5, lsl #24
    12a0:	21060305 	tstcs	r6, r5, lsl #6
    12a4:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    12a8:	0505200a 	streq	r2, [r5, #-10]
    12ac:	03040200 	movweq	r0, #16896	; 0x4200
    12b0:	1b052106 	blne	1496d0 <_binary_src_fatexample_img_size+0x1482d0>
    12b4:	03040200 	movweq	r0, #16896	; 0x4200
    12b8:	17051106 	strne	r1, [r5, -r6, lsl #2]
    12bc:	03040200 	movweq	r0, #16896	; 0x4200
    12c0:	00050521 	andeq	r0, r5, r1, lsr #10
    12c4:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    12c8:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    12cc:	051f0304 	ldreq	r0, [pc, #-772]	; fd0 <_Min_Stack_Size+0xbd0>
    12d0:	02203001 	eoreq	r3, r0, #1
    12d4:	01010008 	tsteq	r1, r8

Disassembly of section .debug_str:

00000000 <.debug_str>:
       0:	494c4143 	stmdbmi	ip, {r0, r1, r6, r8, lr}^
       4:	50005242 	andpl	r5, r0, r2, asr #4
       8:	52445055 	subpl	r5, r4, #85	; 0x55
       c:	4b434c00 	blmi	10d3014 <_binary_src_fatexample_img_size+0x10d1c14>
      10:	72730052 	rsbsvc	r0, r3, #82	; 0x52
      14:	616d2f63 	cmnvs	sp, r3, ror #30
      18:	632e6e69 			; <UNDEFINED> instruction: 0x632e6e69
      1c:	44535400 	ldrbmi	r5, [r3], #-1024	; 0xfffffc00
      20:	4b420052 	blmi	1080170 <_binary_src_fatexample_img_size+0x107ed70>
      24:	52363250 	eorspl	r3, r6, #80, 4
      28:	59544f00 	ldmdbpl	r4, {r8, r9, sl, fp, lr}^
      2c:	00524550 	subseq	r4, r2, r0, asr r5
      30:	33504b42 	cmpcc	r0, #67584	; 0x10800
      34:	42005230 	andmi	r5, r0, #48, 4
      38:	5233504b 	eorspl	r5, r3, #75	; 0x4b
      3c:	45525000 	ldrbmi	r5, [r2, #-0]
      40:	4f4d0052 	svcmi	0x004d0052
      44:	00524544 	subseq	r4, r2, r4, asr #10
      48:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
      4c:	6e6f6c20 	cdpvs	12, 6, cr6, cr15, cr0, {1}
      50:	6e752067 	cdpvs	0, 7, cr2, cr5, cr7, {3}
      54:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
      58:	69206465 	stmdbvs	r0!, {r0, r2, r5, r6, sl, sp, lr}
      5c:	5000746e 	andpl	r7, r0, lr, ror #8
      60:	454b4752 	strbmi	r4, [fp, #-1874]	; 0xfffff8ae
      64:	52005259 	andpl	r5, r0, #-1879048187	; 0x90000005
      68:	545f4354 	ldrbpl	r4, [pc], #-852	; 70 <_Min_Heap_Size+0x70>
      6c:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
      70:	55006665 	strpl	r6, [r0, #-1637]	; 0xfffff99b
      74:	735f4253 	cmpvc	pc, #805306373	; 0x30000005
      78:	70757465 	rsbsvc	r7, r5, r5, ror #8
      7c:	6e6f6c00 	cdpvs	12, 6, cr6, cr15, cr0, {0}
      80:	6f6c2067 	svcvs	0x006c2067
      84:	6920676e 	stmdbvs	r0!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
      88:	4200746e 	andmi	r7, r0, #1845493760	; 0x6e000000
      8c:	00525253 	subseq	r5, r2, r3, asr r2
      90:	53414c46 	movtpl	r4, #7238	; 0x1c46
      94:	79545f48 	ldmdbvc	r4, {r3, r6, r8, r9, sl, fp, ip, lr}^
      98:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
      9c:	45500066 	ldrbmi	r0, [r0, #-102]	; 0xffffff9a
      a0:	63005243 	movwvs	r5, #579	; 0x243
      a4:	6b636f6c 	blvs	18dbe5c <_binary_src_fatexample_img_size+0x18daa5c>
      a8:	0053485f 	subseq	r4, r3, pc, asr r8
      ac:	32504b42 	subscc	r4, r0, #67584	; 0x10800
      b0:	54005237 	strpl	r5, [r0], #-567	; 0xfffffdc9
      b4:	52535353 	subspl	r5, r3, #1275068417	; 0x4c000001
      b8:	504b4200 	subpl	r4, fp, r0, lsl #4
      bc:	00523133 	subseq	r3, r2, r3, lsr r1
      c0:	32425041 	subcc	r5, r2, #65	; 0x41
      c4:	52545352 	subspl	r5, r4, #1207959553	; 0x48000001
      c8:	504b4200 	subpl	r4, fp, r0, lsl #4
      cc:	41005234 	tstmi	r0, r4, lsr r2
      d0:	424d524c 	submi	r5, sp, #76, 4	; 0xc0000004
      d4:	00525353 	subseq	r5, r2, r3, asr r3
      d8:	4c424841 	mcrrmi	8, 4, r4, r2, cr1
      dc:	524e4550 	subpl	r4, lr, #80, 10	; 0x14000000
      e0:	504b4200 	subpl	r4, fp, r0, lsl #4
      e4:	00523631 	subseq	r3, r2, r1, lsr r6
      e8:	4b54504f 	blmi	151422c <_binary_src_fatexample_img_size+0x1512e2c>
      ec:	00525945 	subseq	r5, r2, r5, asr #18
      f0:	5f627375 	svcpl	0x00627375
      f4:	73616c63 	cmnvc	r1, #25344	; 0x6300
      f8:	6f705f73 	svcvs	0x00705f73
      fc:	75006c6c 	strvc	r6, [r0, #-3180]	; 0xfffff394
     100:	31746e69 	cmncc	r4, r9, ror #28
     104:	00745f36 	rsbseq	r5, r4, r6, lsr pc
     108:	32504b42 	subscc	r4, r0, #67584	; 0x10800
     10c:	50005230 	andpl	r5, r0, r0, lsr r2
     110:	59454b44 	stmdbpl	r5, {r2, r6, r8, r9, fp, lr}^
     114:	534f0052 	movtpl	r0, #61522	; 0xf052
     118:	44454550 	strbmi	r4, [r5], #-1360	; 0xfffffab0
     11c:	6e690052 	mcrvs	0, 3, r0, cr9, cr2, {2}
     120:	32337469 	eorscc	r7, r3, #1761607680	; 0x69000000
     124:	504b4200 	subpl	r4, fp, r0, lsl #4
     128:	00523832 	subseq	r3, r2, r2, lsr r8
     12c:	706d6574 	rsbvc	r6, sp, r4, ror r5
     130:	524c4100 	subpl	r4, ip, #0, 2
     134:	5353414d 	cmppl	r3, #1073741843	; 0x40000013
     138:	79530052 	ldmdbvc	r3, {r1, r4, r6}^
     13c:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
     140:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
     144:	636f6c43 	cmnvs	pc, #17152	; 0x4300
     148:	4b42006b 	blmi	10802fc <_binary_src_fatexample_img_size+0x107eefc>
     14c:	00523550 	subseq	r3, r2, r0, asr r5
     150:	31504b42 	cmpcc	r0, r2, asr #22
     154:	47005237 	smladxmi	r0, r7, r2, r5
     158:	5f4f4950 	svcpl	0x004f4950
     15c:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     160:	00666544 	rsbeq	r6, r6, r4, asr #10
     164:	5f434352 	svcpl	0x00434352
     168:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     16c:	00666544 	rsbeq	r6, r6, r4, asr #10
     170:	31504b42 	cmpcc	r0, r2, asr #22
     174:	42005235 	andmi	r5, r0, #1342177283	; 0x50000003
     178:	3132504b 	teqcc	r2, fp, asr #32
     17c:	68730052 	ldmdavs	r3!, {r1, r4, r6}^
     180:	2074726f 	rsbscs	r7, r4, pc, ror #4
     184:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
     188:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
     18c:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
     190:	656c7300 	strbvs	r7, [ip, #-768]!	; 0xfffffd00
     194:	41007065 	tstmi	r0, r5, rrx
     198:	4c314250 	lfmmi	f4, 4, [r1], #-320	; 0xfffffec0
     19c:	524e4550 	subpl	r4, lr, #80, 10	; 0x14000000
     1a0:	54535400 	ldrbpl	r5, [r3], #-1024	; 0xfffffc00
     1a4:	41540052 	cmpmi	r4, r2, asr r0
     1a8:	00524346 	subseq	r4, r2, r6, asr #6
     1ac:	31504b42 	cmpcc	r0, r2, asr #22
     1b0:	42005230 	andmi	r5, r0, #48, 4
     1b4:	3932504b 	ldmdbcc	r2!, {r0, r1, r3, r6, ip, lr}
     1b8:	50410052 	subpl	r0, r1, r2, asr r0
     1bc:	504c3242 	subpl	r3, ip, r2, asr #4
     1c0:	00524e45 	subseq	r4, r2, r5, asr #28
     1c4:	5f525750 	svcpl	0x00525750
     1c8:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     1cc:	00666544 	rsbeq	r6, r6, r4, asr #10
     1d0:	36504b42 	ldrbcc	r4, [r0], -r2, asr #22
     1d4:	4b420052 	blmi	1080324 <_binary_src_fatexample_img_size+0x107ef24>
     1d8:	52383150 	eorspl	r3, r8, #80, 2
     1dc:	4c414300 	mcrrmi	3, 0, r4, r1, cr0
     1e0:	75710052 	ldrbvc	r0, [r1, #-82]!	; 0xffffffae
     1e4:	7a747261 	bvc	1d1cb70 <_binary_src_fatexample_img_size+0x1d1b770>
     1e8:	504b4200 	subpl	r4, fp, r0, lsl #4
     1ec:	00523232 	subseq	r3, r2, r2, lsr r2
     1f0:	52505257 	subspl	r5, r0, #1879048197	; 0x70000005
     1f4:	52570031 	subspl	r0, r7, #49	; 0x31
     1f8:	00325250 	eorseq	r5, r2, r0, asr r2
     1fc:	31504b42 	cmpcc	r0, r2, asr #22
     200:	41005231 	tstmi	r0, r1, lsr r2
     204:	53524248 	cmppl	r2, #72, 4	; 0x80000004
     208:	74005254 	strvc	r5, [r0], #-596	; 0xfffffdac
     20c:	00656d69 	rsbeq	r6, r5, r9, ror #26
     210:	31425041 	cmpcc	r2, r1, asr #32
     214:	52545352 	subspl	r5, r4, #1207959553	; 0x48000001
     218:	655f5f00 	ldrbvs	r5, [pc, #-3840]	; fffff320 <BootRAM+0xef6fac1>
     21c:	6c62616e 	stfvse	f6, [r2], #-440	; 0xfffffe48
     220:	72695f65 	rsbvc	r5, r9, #404	; 0x194
     224:	4c410071 	mcrrmi	0, 7, r0, r1, cr1
     228:	52414d52 	subpl	r4, r1, #5248	; 0x1480
     22c:	504b4200 	subpl	r4, fp, r0, lsl #4
     230:	42005237 	andmi	r5, r0, #1879048195	; 0x70000003
     234:	3931504b 	ldmdbcc	r1!, {r0, r1, r3, r6, ip, lr}
     238:	45520052 	ldrbmi	r0, [r2, #-82]	; 0xffffffae
     23c:	56524553 			; <UNDEFINED> instruction: 0x56524553
     240:	00374445 	eorseq	r4, r7, r5, asr #8
     244:	74737953 	ldrbtvc	r7, [r3], #-2387	; 0xfffff6ad
     248:	6e496d65 	cdpvs	13, 4, cr6, cr9, cr5, {3}
     24c:	42007469 	andmi	r7, r0, #1761607680	; 0x69000000
     250:	3332504b 	teqcc	r2, #75	; 0x4b
     254:	6e750052 	mrcvs	0, 3, r0, cr5, cr2, {2}
     258:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
     25c:	63206465 			; <UNDEFINED> instruction: 0x63206465
     260:	00726168 	rsbseq	r6, r2, r8, ror #2
     264:	5f4d5449 	svcpl	0x004d5449
     268:	75427852 	strbvc	r7, [r2, #-2130]	; 0xfffff7ae
     26c:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
     270:	6f687300 	svcvs	0x00687300
     274:	69207472 	stmdbvs	r0!, {r1, r4, r5, r6, sl, ip, sp, lr}
     278:	4200746e 	andmi	r7, r0, #1845493760	; 0x6e000000
     27c:	5230504b 	eorspl	r5, r0, #75	; 0x4b
     280:	53455200 	movtpl	r5, #20992	; 0x5200
     284:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     288:	4b420044 	blmi	10803a0 <_binary_src_fatexample_img_size+0x107efa0>
     28c:	52323150 	eorspl	r3, r2, #80, 2
     290:	42504100 	subsmi	r4, r0, #0, 2
     294:	524e4532 	subpl	r4, lr, #209715200	; 0xc800000
     298:	524c4100 	subpl	r4, ip, #0, 2
     29c:	0052424d 	subseq	r4, r2, sp, asr #4
     2a0:	52474643 	subpl	r4, r7, #70254592	; 0x4300000
     2a4:	504b4200 	subpl	r4, fp, r0, lsl #4
     2a8:	75005238 	strvc	r5, [r0, #-568]	; 0xfffffdc8
     2ac:	33746e69 	cmncc	r4, #1680	; 0x690
     2b0:	00745f32 	rsbseq	r5, r4, r2, lsr pc
     2b4:	52545557 	subspl	r5, r4, #364904448	; 0x15c00000
     2b8:	504b4200 	subpl	r4, fp, r0, lsl #4
     2bc:	00523432 	subseq	r3, r2, r2, lsr r4
     2c0:	64656d2f 	strbtvs	r6, [r5], #-3375	; 0xfffff2d1
     2c4:	652f6169 	strvs	r6, [pc, #-361]!	; 163 <_Min_Heap_Size+0x163>
     2c8:	642f7478 	strtvs	r7, [pc], #-1144	; 2d0 <_Min_Heap_Size+0x2d0>
     2cc:	702f7665 	eorvc	r7, pc, r5, ror #12
     2d0:	2f676f72 	svccs	0x00676f72
     2d4:	2f6d7261 	svccs	0x006d7261
     2d8:	2f627375 	svccs	0x00627375
     2dc:	534d2e32 	movtpl	r2, #56882	; 0xde32
     2e0:	314c5f44 	cmpcc	ip, r4, asr #30
     2e4:	504b4200 	subpl	r4, fp, r0, lsl #4
     2e8:	41005231 	tstmi	r0, r1, lsr r2
     2ec:	45314250 	ldrmi	r4, [r1, #-592]!	; 0xfffffdb0
     2f0:	4200524e 	andmi	r5, r0, #-536870908	; 0xe0000004
     2f4:	3331504b 	teqcc	r1, #75	; 0x4b
     2f8:	6c630052 	stclvs	0, cr0, [r3], #-328	; 0xfffffeb8
     2fc:	5f6b636f 	svcpl	0x006b636f
     300:	5300534d 	movwpl	r5, #845	; 0x34d
     304:	54464948 	strbpl	r4, [r6], #-2376	; 0xfffff6b8
     308:	43490052 	movtmi	r0, #36946	; 0x9052
     30c:	00524353 	subseq	r4, r2, r3, asr r3
     310:	39504b42 	ldmdbcc	r0, {r1, r6, r8, r9, fp, lr}^
     314:	69750052 	ldmdbvs	r5!, {r1, r4, r6}^
     318:	5f38746e 	svcpl	0x0038746e
     31c:	45500074 	ldrbmi	r0, [r0, #-116]	; 0xffffff8c
     320:	5259454b 	subspl	r4, r9, #314572800	; 0x12c00000
     324:	504b4200 	subpl	r4, fp, r0, lsl #4
     328:	00523532 	subseq	r3, r2, r2, lsr r5
     32c:	32504b42 	subscc	r4, r0, #67584	; 0x10800
     330:	65720052 	ldrbvs	r0, [r2, #-82]!	; 0xffffffae
     334:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
     338:	504b4200 	subpl	r4, fp, r0, lsl #4
     33c:	00523431 	subseq	r3, r2, r1, lsr r4
     340:	6e69616d 	powvsez	f6, f1, #5.0
     344:	554e4700 	strbpl	r4, [lr, #-1792]	; 0xfffff900
     348:	37314320 	ldrcc	r4, [r1, -r0, lsr #6]!
     34c:	332e3820 			; <UNDEFINED> instruction: 0x332e3820
     350:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
     354:	30393130 	eorscc	r3, r9, r0, lsr r1
     358:	20333037 	eorscs	r3, r3, r7, lsr r0
     35c:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
     360:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
     364:	675b2029 	ldrbvs	r2, [fp, -r9, lsr #32]
     368:	382d6363 	stmdacc	sp!, {r0, r1, r5, r6, r8, r9, sp, lr}
     36c:	6172622d 	cmnvs	r2, sp, lsr #4
     370:	2068636e 	rsbcs	r6, r8, lr, ror #6
     374:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
     378:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
     37c:	33373220 	teqcc	r7, #32, 4
     380:	5d373230 	lfmpl	f3, 4, [r7, #-192]!	; 0xffffff40
     384:	746d2d20 	strbtvc	r2, [sp], #-3360	; 0xfffff2e0
     388:	626d7568 	rsbvs	r7, sp, #104, 10	; 0x1a000000
     38c:	636d2d20 	cmnvs	sp, #32, 26	; 0x800
     390:	633d7570 	teqvs	sp, #112, 10	; 0x1c000000
     394:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
     398:	336d2d78 	cmncc	sp, #120, 26	; 0x1e00
     39c:	666d2d20 	strbtvs	r2, [sp], -r0, lsr #26
     3a0:	74616f6c 	strbtvc	r6, [r1], #-3948	; 0xfffff094
     3a4:	6962612d 	stmdbvs	r2!, {r0, r2, r3, r5, r8, sp, lr}^
     3a8:	666f733d 			; <UNDEFINED> instruction: 0x666f733d
     3ac:	6d2d2074 	stcvs	0, cr2, [sp, #-464]!	; 0xfffffe30
     3b0:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
     3b4:	6d72613d 	ldfvse	f6, [r2, #-244]!	; 0xffffff0c
     3b8:	6d2d3776 	stcvs	7, cr3, [sp, #-472]!	; 0xfffffe28
     3bc:	64672d20 	strbtvs	r2, [r7], #-3360	; 0xfffff2e0
     3c0:	66726177 			; <UNDEFINED> instruction: 0x66726177
     3c4:	2d20322d 	sfmcs	f3, 4, [r0, #-180]!	; 0xffffff4c
     3c8:	2d20734f 	stccs	3, cr7, [r0, #-316]!	; 0xfffffec4
     3cc:	2d6f6e66 	stclcs	14, cr6, [pc, #-408]!	; 23c <_Min_Heap_Size+0x23c>
     3d0:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
     3d4:	006e6974 	rsbeq	r6, lr, r4, ror r9
     3d8:	45424841 	strbmi	r4, [r2, #-2113]	; 0xfffff7bf
     3dc:	5400524e 	strpl	r5, [r0], #-590	; 0xfffffdb2
     3e0:	31314d49 	teqcc	r1, r9, asr #26
     3e4:	5152495f 	cmppl	r2, pc, asr r9
     3e8:	4977006e 	ldmdbmi	r7!, {r1, r2, r3, r5, r6}^
     3ec:	7865646e 	stmdavc	r5!, {r1, r2, r3, r5, r6, sl, sp, lr}^
     3f0:	53595300 	cmppl	r9, #0, 6
     3f4:	5f474643 	svcpl	0x00474643
     3f8:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     3fc:	00666544 	rsbeq	r6, r6, r4, asr #10
     400:	31667562 	cmncc	r6, r2, ror #10
     404:	49540036 	ldmdbmi	r4, {r1, r2, r4, r5}^
     408:	495f394d 	ldmdbmi	pc, {r0, r2, r3, r6, r8, fp, ip, sp}^	; <UNPREDICTABLE>
     40c:	006e5152 	rsbeq	r5, lr, r2, asr r1
     410:	31414d44 	cmpcc	r1, r4, asr #26
     414:	6168435f 	cmnvs	r8, pc, asr r3
     418:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
     41c:	52495f37 	subpl	r5, r9, #55, 30	; 0xdc
     420:	49006e51 	stmdbmi	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
     424:	5f324332 	svcpl	0x00324332
     428:	495f5245 	ldmdbmi	pc, {r0, r2, r6, r9, ip, lr}^	; <UNPREDICTABLE>
     42c:	006e5152 	rsbeq	r5, lr, r2, asr r1
     430:	5f435653 	svcpl	0x00435653
     434:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     438:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
     43c:	52495f34 	subpl	r5, r9, #52, 30	; 0xd0
     440:	44006e51 	strmi	r6, [r0], #-3665	; 0xfffff1af
     444:	5f31414d 	svcpl	0x0031414d
     448:	6e616843 	cdpvs	8, 6, cr6, cr1, cr3, {2}
     44c:	326c656e 	rsbcc	r6, ip, #461373440	; 0x1b800000
     450:	5152495f 	cmppl	r2, pc, asr r9
     454:	6d62006e 	stclvs	0, cr0, [r2, #-440]!	; 0xfffffe48
     458:	75716552 	ldrbvc	r6, [r1, #-1362]!	; 0xfffffaae
     45c:	54747365 	ldrbtpl	r7, [r4], #-869	; 0xfffffc9b
     460:	00657079 	rsbeq	r7, r5, r9, ror r0
     464:	75746573 	ldrbvc	r6, [r4, #-1395]!	; 0xfffffa8d
     468:	61705f70 	cmnvs	r0, r0, ror pc
     46c:	74656b63 	strbtvc	r6, [r5], #-2915	; 0xfffff49d
     470:	414c4600 	cmpmi	ip, r0, lsl #12
     474:	495f4853 	ldmdbmi	pc, {r0, r1, r4, r6, fp, lr}^	; <UNPREDICTABLE>
     478:	006e5152 	rsbeq	r5, lr, r2, asr r1
     47c:	65747962 	ldrbvs	r7, [r4, #-2402]!	; 0xfffff69e
     480:	61657273 	smcvs	22307	; 0x5723
     484:	58450064 	stmdapl	r5, {r2, r5, r6}^
     488:	5f304954 	svcpl	0x00304954
     48c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     490:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
     494:	5f353149 	svcpl	0x00353149
     498:	495f3031 	ldmdbmi	pc, {r0, r4, r5, ip, sp}^	; <UNPREDICTABLE>
     49c:	006e5152 	rsbeq	r5, lr, r2, asr r1
     4a0:	5f627375 	svcpl	0x00627375
     4a4:	775f7065 	ldrbvc	r7, [pc, -r5, rrx]
     4a8:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
     4ac:	73616c00 	cmnvc	r1, #0, 24
     4b0:	64646174 	strbtvs	r6, [r4], #-372	; 0xfffffe8c
     4b4:	65500072 	ldrbvs	r0, [r0, #-114]	; 0xffffff8e
     4b8:	5653646e 	ldrbpl	r6, [r3], -lr, ror #8
     4bc:	5152495f 	cmppl	r2, pc, asr r9
     4c0:	454d006e 	strbmi	r0, [sp, #-110]	; 0xffffff92
     4c4:	504d524d 	subpl	r5, sp, sp, asr #4
     4c8:	43435200 	movtmi	r5, #12800	; 0x3200
     4cc:	5152495f 	cmppl	r2, pc, asr r9
     4d0:	5677006e 	ldrbtpl	r0, [r7], -lr, rrx
     4d4:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
     4d8:	6d654d00 	stclvs	13, cr4, [r5, #-0]
     4dc:	4d79726f 	lfmmi	f7, 2, [r9, #-444]!	; 0xfffffe44
     4e0:	67616e61 	strbvs	r6, [r1, -r1, ror #28]!
     4e4:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
     4e8:	52495f74 	subpl	r5, r9, #116, 30	; 0x1d0
     4ec:	65006e51 	strvs	r6, [r0, #-3665]	; 0xfffff1af
     4f0:	635f3070 	cmpvs	pc, #112	; 0x70
     4f4:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
     4f8:	54534900 	ldrbpl	r4, [r3], #-2304	; 0xfffff700
     4fc:	41540052 	cmpmi	r4, r2, asr r0
     500:	5245504d 	subpl	r5, r5, #77	; 0x4d
     504:	4154535f 	cmpmi	r4, pc, asr r3
     508:	495f504d 	ldmdbmi	pc, {r0, r2, r3, r6, ip, lr}^	; <UNPREDICTABLE>
     50c:	006e5152 	rsbeq	r5, lr, r2, asr r1
     510:	52455349 	subpl	r5, r5, #603979777	; 0x24000001
     514:	414d4400 	cmpmi	sp, r0, lsl #8
     518:	68435f32 	stmdavs	r3, {r1, r4, r5, r8, r9, sl, fp, ip, lr}^
     51c:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xfffff19f
     520:	495f346c 	ldmdbmi	pc, {r2, r3, r5, r6, sl, ip, sp}^	; <UNPREDICTABLE>
     524:	006e5152 	rsbeq	r5, lr, r2, asr r1
     528:	52455352 	subpl	r5, r5, #1207959553	; 0x48000001
     52c:	31444556 	cmpcc	r4, r6, asr r5
     530:	49505300 	ldmdbmi	r0, {r8, r9, ip, lr}^
     534:	52495f31 	subpl	r5, r9, #49, 30	; 0xc4
     538:	54006e51 	strpl	r6, [r0], #-3665	; 0xfffff1af
     53c:	5f364d49 	svcpl	0x00364d49
     540:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     544:	414d4400 	cmpmi	sp, r0, lsl #8
     548:	68435f31 	stmdavs	r3, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
     54c:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xfffff19f
     550:	495f346c 	ldmdbmi	pc, {r2, r3, r5, r6, sl, ip, sp}^	; <UNPREDICTABLE>
     554:	006e5152 	rsbeq	r5, lr, r2, asr r1
     558:	4349564e 	movtmi	r5, #38478	; 0x964e
     55c:	616e455f 	cmnvs	lr, pc, asr r5
     560:	49656c62 	stmdbmi	r5!, {r1, r5, r6, sl, fp, sp, lr}^
     564:	43005152 	movwmi	r5, #338	; 0x152
     568:	5f504d4f 	svcpl	0x00504d4f
     56c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     570:	42535500 	subsmi	r5, r3, #0, 10
     574:	7079545f 	rsbsvc	r5, r9, pc, asr r4
     578:	66654465 	strbtvs	r4, [r5], -r5, ror #8
     57c:	44414400 	strbmi	r4, [r1], #-1024	; 0xfffffc00
     580:	55005244 	strpl	r5, [r0, #-580]	; 0xfffffdbc
     584:	4c5f4253 	lfmmi	f4, 2, [pc], {83}	; 0x53
     588:	52495f50 	subpl	r5, r9, #80, 30	; 0x140
     58c:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
     590:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     594:	62737500 	rsbsvs	r7, r3, #0, 10
     598:	616c635f 	cmnvs	ip, pc, asr r3
     59c:	675f7373 			; <UNDEFINED> instruction: 0x675f7373
     5a0:	735f7465 	cmpvc	pc, #1694498816	; 0x65000000
     5a4:	645f6474 	ldrbvs	r6, [pc], #-1140	; 5ac <_Min_Stack_Size+0x1ac>
     5a8:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
     5ac:	51524900 	cmppl	r2, r0, lsl #18
     5b0:	79545f6e 	ldmdbvc	r4, {r1, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
     5b4:	65006570 	strvs	r6, [r0, #-1392]	; 0xfffffa90
     5b8:	735f3070 	cmpvc	pc, #112	; 0x70
     5bc:	00646e65 	rsbeq	r6, r4, r5, ror #28
     5c0:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
     5c4:	495f3254 	ldmdbmi	pc, {r2, r4, r6, r9, ip, sp}^	; <UNPREDICTABLE>
     5c8:	006e5152 	rsbeq	r5, lr, r2, asr r1
     5cc:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
     5d0:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
     5d4:	6f697461 	svcvs	0x00697461
     5d8:	5045006e 	subpl	r0, r5, lr, rrx
     5dc:	52005230 	andpl	r5, r0, #48, 4
     5e0:	575f4354 			; <UNDEFINED> instruction: 0x575f4354
     5e4:	5f50554b 	svcpl	0x0050554b
     5e8:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     5ec:	42535500 	subsmi	r5, r3, #0, 10
     5f0:	6464415f 	strbtvs	r4, [r4], #-351	; 0xfffffea1
     5f4:	70650072 	rsbvc	r0, r5, r2, ror r0
     5f8:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
     5fc:	74756f5f 	ldrbtvc	r6, [r5], #-3935	; 0xfffff0a1
     600:	30706500 	rsbscc	r6, r0, r0, lsl #10
     604:	6675625f 			; <UNDEFINED> instruction: 0x6675625f
     608:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
     60c:	495f3249 	ldmdbmi	pc, {r0, r3, r6, r9, ip, sp}^	; <UNPREDICTABLE>
     610:	006e5152 	rsbeq	r5, lr, r2, asr r1
     614:	31434441 	cmpcc	r3, r1, asr #8
     618:	5152495f 	cmppl	r2, pc, asr r9
     61c:	3249006e 	subcc	r0, r9, #110	; 0x6e
     620:	455f3243 	ldrbmi	r3, [pc, #-579]	; 3e5 <_Min_Heap_Size+0x3e5>
     624:	52495f56 	subpl	r5, r9, #344	; 0x158
     628:	45006e51 	strmi	r6, [r0, #-3665]	; 0xfffff1af
     62c:	00523150 	subseq	r3, r2, r0, asr r1
     630:	33495053 	movtcc	r5, #36947	; 0x9053
     634:	5152495f 	cmppl	r2, pc, asr r9
     638:	7375006e 	cmnvc	r5, #110	; 0x6e
     63c:	70655f62 	rsbvc	r5, r5, r2, ror #30
     640:	61746164 	cmnvs	r4, r4, ror #2
     644:	4300745f 	movwmi	r7, #1119	; 0x45f
     648:	5f504d4f 	svcpl	0x00504d4f
     64c:	5f514341 	svcpl	0x00514341
     650:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     654:	414d4400 	cmpmi	sp, r0, lsl #8
     658:	68435f31 	stmdavs	r3, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
     65c:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xfffff19f
     660:	495f366c 	ldmdbmi	pc, {r2, r3, r5, r6, r9, sl, ip, sp}^	; <UNPREDICTABLE>
     664:	006e5152 	rsbeq	r5, lr, r2, asr r1
     668:	32414d44 	subcc	r4, r1, #68, 26	; 0x1100
     66c:	6168435f 	cmnvs	r8, pc, asr r3
     670:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
     674:	52495f31 	subpl	r5, r9, #49, 30	; 0xc4
     678:	54006e51 	strpl	r6, [r0], #-3665	; 0xfffff1af
     67c:	5f334d49 	svcpl	0x00334d49
     680:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     684:	414d4400 	cmpmi	sp, r0, lsl #8
     688:	68435f31 	stmdavs	r3, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
     68c:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xfffff19f
     690:	495f316c 	ldmdbmi	pc, {r2, r3, r5, r6, r8, ip, sp}^	; <UNPREDICTABLE>
     694:	006e5152 	rsbeq	r5, lr, r2, asr r1
     698:	5f627375 	svcpl	0x00627375
     69c:	73616c63 	cmnvc	r1, #25344	; 0x6300
     6a0:	6e695f73 	mcrvs	15, 3, r5, cr9, cr3, {3}
     6a4:	45007469 	strmi	r7, [r0, #-1129]	; 0xfffffb97
     6a8:	43495458 	movtmi	r5, #37976	; 0x9458
     6ac:	50450052 	subpl	r0, r5, r2, asr r0
     6b0:	54005232 	strpl	r5, [r0], #-562	; 0xfffffdce
     6b4:	30314d49 	eorscc	r4, r1, r9, asr #26
     6b8:	5152495f 	cmppl	r2, pc, asr r9
     6bc:	5757006e 	ldrbpl	r0, [r7, -lr, rrx]
     6c0:	495f4744 	ldmdbmi	pc, {r2, r6, r8, r9, sl, lr}^	; <UNPREDICTABLE>
     6c4:	006e5152 	rsbeq	r5, lr, r2, asr r1
     6c8:	5f627375 	svcpl	0x00627375
     6cc:	73616c63 	cmnvc	r1, #25344	; 0x6300
     6d0:	69645f73 	stmdbvs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     6d4:	6e6f6373 	mcrvs	3, 3, r6, cr15, cr3, {3}
     6d8:	7463656e 	strbtvc	r6, [r3], #-1390	; 0xfffffa92
     6dc:	33504500 	cmpcc	r0, #0, 10
     6e0:	75420052 	strbvc	r0, [r2, #-82]	; 0xffffffae
     6e4:	75614673 	strbvc	r4, [r1, #-1651]!	; 0xfffff98d
     6e8:	495f746c 	ldmdbmi	pc, {r2, r3, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
     6ec:	006e5152 	rsbeq	r5, lr, r2, asr r1
     6f0:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
     6f4:	52495f34 	subpl	r5, r9, #52, 30	; 0xd0
     6f8:	50006e51 	andpl	r6, r0, r1, asr lr
     6fc:	495f4456 	ldmdbmi	pc, {r1, r2, r4, r6, sl, lr}^	; <UNPREDICTABLE>
     700:	006e5152 	rsbeq	r5, lr, r2, asr r1
     704:	75667065 	strbvc	r7, [r6, #-101]!	; 0xffffff9b
     708:	745f636e 	ldrbvc	r6, [pc], #-878	; 710 <_Min_Stack_Size+0x310>
     70c:	62737500 	rsbsvs	r7, r3, #0, 10
     710:	5f78745f 	svcpl	0x0078745f
     714:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
     718:	43490074 	movtmi	r0, #36980	; 0x9074
     71c:	44005250 	strmi	r5, [r0], #-592	; 0xfffffdb0
     720:	5f32414d 	svcpl	0x0032414d
     724:	6e616843 	cdpvs	8, 6, cr6, cr1, cr3, {2}
     728:	336c656e 	cmncc	ip, #461373440	; 0x1b800000
     72c:	5152495f 	cmppl	r2, pc, asr r9
     730:	4954006e 	ldmdbmi	r4, {r1, r2, r3, r5, r6}^
     734:	495f354d 	ldmdbmi	pc, {r0, r2, r3, r6, r8, sl, ip, sp}^	; <UNPREDICTABLE>
     738:	006e5152 	rsbeq	r5, lr, r2, asr r1
     73c:	31414d44 	cmpcc	r1, r4, asr #26
     740:	6168435f 	cmnvs	r8, pc, asr r3
     744:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
     748:	52495f33 	subpl	r5, r9, #51, 30	; 0xcc
     74c:	73006e51 	movwvc	r6, #3665	; 0xe51
     750:	752f6372 	strvc	r6, [pc, #-882]!	; 3e6 <_Min_Heap_Size+0x3e6>
     754:	6c5f6273 	lfmvs	f6, 2, [pc], {115}	; 0x73
     758:	632e6269 			; <UNDEFINED> instruction: 0x632e6269
     75c:	43324900 	teqmi	r2, #0, 18
     760:	56455f31 			; <UNDEFINED> instruction: 0x56455f31
     764:	5152495f 	cmppl	r2, pc, asr r9
     768:	7872006e 	ldmdavc	r2!, {r1, r2, r3, r5, r6}^
     76c:	6d756e5f 	ldclvs	14, cr6, [r5, #-380]!	; 0xfffffe84
     770:	6f6c625f 	svcvs	0x006c625f
     774:	00736b63 	rsbseq	r6, r3, r3, ror #22
     778:	5f627375 	svcpl	0x00627375
     77c:	73616c63 	cmnvc	r1, #25344	; 0x6300
     780:	70655f73 	rsbvc	r5, r5, r3, ror pc
     784:	6e695f30 	mcrvs	15, 3, r5, cr9, cr0, {1}
     788:	49545300 	ldmdbmi	r4, {r8, r9, ip, lr}^
     78c:	54520052 	ldrbpl	r0, [r2], #-82	; 0xffffffae
     790:	6c415f43 	mcrrvs	15, 4, r5, r1, cr3
     794:	5f6d7261 	svcpl	0x006d7261
     798:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     79c:	5f787200 	svcpl	0x00787200
     7a0:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
     7a4:	35504500 	ldrbcc	r4, [r0, #-1280]	; 0xfffffb00
     7a8:	45520052 	ldrbmi	r0, [r2, #-82]	; 0xffffffae
     7ac:	56524553 			; <UNDEFINED> instruction: 0x56524553
     7b0:	00304445 	eorseq	r4, r0, r5, asr #8
     7b4:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     7b8:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     7bc:	45520031 	ldrbmi	r0, [r2, #-49]	; 0xffffffcf
     7c0:	56524553 			; <UNDEFINED> instruction: 0x56524553
     7c4:	00324445 	eorseq	r4, r2, r5, asr #8
     7c8:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     7cc:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     7d0:	45520033 	ldrbmi	r0, [r2, #-51]	; 0xffffffcd
     7d4:	56524553 			; <UNDEFINED> instruction: 0x56524553
     7d8:	00344445 	eorseq	r4, r4, r5, asr #8
     7dc:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     7e0:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     7e4:	45520035 	ldrbmi	r0, [r2, #-53]	; 0xffffffcb
     7e8:	56524553 			; <UNDEFINED> instruction: 0x56524553
     7ec:	00364445 	eorseq	r4, r6, r5, asr #8
     7f0:	5f425355 	svcpl	0x00425355
     7f4:	575f5346 	ldrbpl	r5, [pc, -r6, asr #6]
     7f8:	5f50554b 	svcpl	0x0050554b
     7fc:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     800:	53455200 	movtpl	r5, #20992	; 0x5200
     804:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     808:	52003944 	andpl	r3, r0, #68, 18	; 0x110000
     80c:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     810:	41444556 	cmpmi	r4, r6, asr r5
     814:	41535500 	cmpmi	r3, r0, lsl #10
     818:	5f315452 	svcpl	0x00315452
     81c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     820:	62737500 	rsbsvs	r7, r3, #0, 10
     824:	5f70655f 	svcpl	0x0070655f
     828:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
     82c:	6e6f4e00 	cdpvs	14, 6, cr4, cr15, cr0, {0}
     830:	6b73614d 	blvs	1cd8d6c <_binary_src_fatexample_img_size+0x1cd796c>
     834:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
     838:	5f746e49 	svcpl	0x00746e49
     83c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     840:	654c7700 	strbvs	r7, [ip, #-1792]	; 0xfffff900
     844:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
     848:	36504500 	ldrbcc	r4, [r0], -r0, lsl #10
     84c:	656c0052 	strbvs	r0, [ip, #-82]!	; 0xffffffae
     850:	45007466 	strmi	r7, [r0, #-1126]	; 0xfffffb9a
     854:	31495458 	cmpcc	r9, r8, asr r4
     858:	5152495f 	cmppl	r2, pc, asr r9
     85c:	5262006e 	rsbpl	r0, r2, #110	; 0x6e
     860:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0xfffffe9b
     864:	4e007473 	mcrmi	4, 0, r7, cr0, cr3, {3}
     868:	5f434956 	svcpl	0x00434956
     86c:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     870:	544e4300 	strbpl	r4, [lr], #-768	; 0xfffffd00
     874:	4d440052 	stclmi	0, cr0, [r4, #-328]	; 0xfffffeb8
     878:	435f3241 	cmpmi	pc, #268435460	; 0x10000004
     87c:	6e6e6168 	powvsez	f6, f6, #0.0
     880:	5f356c65 	svcpl	0x00356c65
     884:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     888:	43324900 	teqmi	r2, #0, 18
     88c:	52455f31 	subpl	r5, r5, #49, 30	; 0xc4
     890:	5152495f 	cmppl	r2, pc, asr r9
     894:	7375006e 	cmnvc	r5, #110	; 0x6e
     898:	70655f62 	rsbvc	r5, r5, r2, ror #30
     89c:	6165725f 	cmnvs	r5, pc, asr r2
     8a0:	79530064 	ldmdbvc	r3, {r2, r5, r6}^
     8a4:	63695473 	cmnvs	r9, #1929379840	; 0x73000000
     8a8:	52495f6b 	subpl	r5, r9, #428	; 0x1ac
     8ac:	65006e51 	strvs	r6, [r0, #-3665]	; 0xfffff1af
     8b0:	6d756e70 	ldclvs	14, cr6, [r5, #-448]!	; 0xfffffe40
     8b4:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
     8b8:	52495f32 	subpl	r5, r9, #50, 30	; 0xc8
     8bc:	75006e51 	strvc	r6, [r0, #-3665]	; 0xfffff1af
     8c0:	635f6273 	cmpvs	pc, #805306375	; 0x30000007
     8c4:	7373616c 	cmnvc	r3, #108, 2
     8c8:	3070655f 	rsbscc	r6, r0, pc, asr r5
     8cc:	74756f5f 	ldrbtvc	r6, [r5], #-3935	; 0xfffff0a1
     8d0:	37504500 	ldrbcc	r4, [r0, -r0, lsl #10]
     8d4:	6f630052 	svcvs	0x00630052
     8d8:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
     8dc:	6361705f 	cmnvs	r1, #95	; 0x5f
     8e0:	00745f6b 	rsbseq	r5, r4, fp, ror #30
     8e4:	5f627375 	svcpl	0x00627375
     8e8:	615f7872 	cmpvs	pc, r2, ror r8	; <UNPREDICTABLE>
     8ec:	00726464 	rsbseq	r6, r2, r4, ror #8
     8f0:	5f425355 	svcpl	0x00425355
     8f4:	495f5048 	ldmdbmi	pc, {r3, r6, ip, lr}^	; <UNPREDICTABLE>
     8f8:	006e5152 	rsbeq	r5, lr, r2, asr r1
     8fc:	75626544 	strbvc	r6, [r2, #-1348]!	; 0xfffffabc
     900:	6e6f4d67 	cdpvs	13, 6, cr4, cr15, cr7, {3}
     904:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
     908:	5152495f 	cmppl	r2, pc, asr r9
     90c:	7355006e 	cmpvc	r5, #110	; 0x6e
     910:	46656761 	strbtmi	r6, [r5], -r1, ror #14
     914:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     918:	5152495f 	cmppl	r2, pc, asr r9
     91c:	7872006e 	ldmdavc	r2!, {r1, r2, r3, r5, r6}^
     920:	6f6c625f 	svcvs	0x006c625f
     924:	69736b63 	ldmdbvs	r3!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^
     928:	6500657a 	strvs	r6, [r0, #-1402]	; 0xfffffa86
     92c:	6e756670 	mrcvs	6, 3, r6, cr5, cr0, {3}
     930:	6e695f63 	cdpvs	15, 6, cr5, cr9, cr3, {3}
     934:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
     938:	355f3949 	ldrbcc	r3, [pc, #-2377]	; fffffff7 <BootRAM+0xef70798>
     93c:	5152495f 	cmppl	r2, pc, asr r9
     940:	5045006e 	subpl	r0, r5, lr, rrx
     944:	49005234 	stmdbmi	r0, {r2, r4, r5, r9, ip, lr}
     948:	00524543 	subseq	r4, r2, r3, asr #10
     94c:	32495053 	subcc	r5, r9, #83	; 0x53
     950:	5152495f 	cmppl	r2, pc, asr r9
     954:	4149006e 	cmpmi	r9, lr, rrx
     958:	54005242 	strpl	r5, [r0], #-578	; 0xfffffdbe
     95c:	5f374d49 	svcpl	0x00374d49
     960:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     964:	414d4400 	cmpmi	sp, r0, lsl #8
     968:	68435f31 	stmdavs	r3, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
     96c:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xfffff19f
     970:	495f356c 	ldmdbmi	pc, {r2, r3, r5, r6, r8, sl, ip, sp}^	; <UNPREDICTABLE>
     974:	006e5152 	rsbeq	r5, lr, r2, asr r1
     978:	42415442 	submi	r5, r1, #1107296256	; 0x42000000
     97c:	4400454c 	strmi	r4, [r0], #-1356	; 0xfffffab4
     980:	495f4341 	ldmdbmi	pc, {r0, r6, r8, r9, lr}^	; <UNPREDICTABLE>
     984:	006e5152 	rsbeq	r5, lr, r2, asr r1
     988:	745f7065 	ldrbvc	r7, [pc], #-101	; 990 <_Min_Stack_Size+0x590>
     98c:	00657079 	rsbeq	r7, r5, r9, ror r0
     990:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
     994:	52495f33 	subpl	r5, r9, #51, 30	; 0xcc
     998:	64006e51 	strvs	r6, [r0], #-3665	; 0xfffff1af
     99c:	695f7269 	ldmdbvs	pc, {r0, r3, r5, r6, r9, ip, sp, lr}^	; <UNPREDICTABLE>
     9a0:	7375006e 	cmnvc	r5, #110	; 0x6e
     9a4:	78745f62 	ldmdavc	r4!, {r1, r5, r6, r8, r9, sl, fp, ip, lr}^
     9a8:	6464615f 	strbtvs	r6, [r4], #-351	; 0xfffffea1
     9ac:	53490072 	movtpl	r0, #36978	; 0x9072
     9b0:	75005250 	strvc	r5, [r0, #-592]	; 0xfffffdb0
     9b4:	725f6273 	subsvc	r6, pc, #805306375	; 0x30000007
     9b8:	6f635f78 	svcvs	0x00635f78
     9bc:	00746e75 	rsbseq	r6, r4, r5, ror lr
     9c0:	6f637872 	svcvs	0x00637872
     9c4:	00746e75 	rsbseq	r6, r4, r5, ror lr
     9c8:	32414d44 	subcc	r4, r1, #68, 26	; 0x1100
     9cc:	6168435f 	cmnvs	r8, pc, asr r3
     9d0:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
     9d4:	52495f32 	subpl	r5, r9, #50, 30	; 0xc8
     9d8:	55006e51 	strpl	r6, [r0, #-3665]	; 0xfffff1af
     9dc:	54524153 	ldrbpl	r4, [r2], #-339	; 0xfffffead
     9e0:	52495f33 	subpl	r5, r9, #51, 30	; 0xcc
     9e4:	52006e51 	andpl	r6, r0, #1296	; 0x510
     9e8:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     9ec:	38444556 	stmdacc	r4, {r1, r2, r4, r6, r8, sl, lr}^
     9f0:	42535500 	subsmi	r5, r3, #0, 10
     9f4:	5f504c5f 	svcpl	0x00504c5f
     9f8:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     9fc:	53455200 	movtpl	r5, #20992	; 0x5200
     a00:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     a04:	52004244 	andpl	r4, r0, #68, 4	; 0x40000004
     a08:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     a0c:	43444556 	movtmi	r4, #17750	; 0x4556
     a10:	69625f00 	stmdbvs	r2!, {r8, r9, sl, fp, ip, lr}^
     a14:	7972616e 	ldmdbvc	r2!, {r1, r2, r3, r5, r6, r8, sp, lr}^
     a18:	6372735f 	cmnvs	r2, #2080374785	; 0x7c000001
     a1c:	7461665f 	strbtvc	r6, [r1], #-1631	; 0xfffff9a1
     a20:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
     a24:	5f656c70 	svcpl	0x00656c70
     a28:	5f676d69 	svcpl	0x00676d69
     a2c:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
     a30:	74730074 	ldrbtvc	r0, [r3], #-116	; 0xffffff8c
     a34:	5f747261 	svcpl	0x00747261
     a38:	0061626c 	rsbeq	r6, r1, ip, ror #4
     a3c:	5f627375 	svcpl	0x00627375
     a40:	5f63736d 	svcpl	0x0063736d
     a44:	00776263 	rsbseq	r6, r7, r3, ror #4
     a48:	75716e69 	ldrbvc	r6, [r1, #-3689]!	; 0xfffff197
     a4c:	5f797269 	svcpl	0x00797269
     a50:	70736572 	rsbsvc	r6, r3, r2, ror r5
     a54:	65736e6f 	ldrbvs	r6, [r3, #-3695]!	; 0xfffff191
     a58:	6e6f5f00 	cdpvs	15, 6, cr5, cr15, cr0, {0}
     a5c:	6978655f 	ldmdbvs	r8!, {r0, r1, r2, r3, r4, r6, r8, sl, sp, lr}^
     a60:	72615f74 	rsbvc	r5, r1, #116, 30	; 0x1d0
     a64:	64007367 	strvs	r7, [r0], #-871	; 0xfffffc99
     a68:	00676154 	rsbeq	r6, r7, r4, asr r1
     a6c:	7463775f 	strbtvc	r7, [r3], #-1887	; 0xfffff8a1
     a70:	5f626d6f 	svcpl	0x00626d6f
     a74:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
     a78:	736d0065 	cmnvc	sp, #101	; 0x65
     a7c:	62635f63 	rsbvs	r5, r3, #396	; 0x18c
     a80:	6f635f77 	svcvs	0x00635f77
     a84:	00746e75 	rsbseq	r6, r4, r5, ror lr
     a88:	3834725f 	ldmdacc	r4!, {r0, r1, r2, r3, r4, r6, r9, ip, sp, lr}
     a8c:	43425300 	movtmi	r5, #8960	; 0x2300
     a90:	4e45535f 	mcrmi	3, 2, r5, cr5, cr15, {2}
     a94:	4b5f4553 	blmi	17d1fe8 <_binary_src_fatexample_img_size+0x17d0be8>
     a98:	565f5945 	ldrbpl	r5, [pc], -r5, asr #18
     a9c:	4d554c4f 	ldclmi	12, cr4, [r5, #-316]	; 0xfffffec4
     aa0:	564f5f45 	strbpl	r5, [pc], -r5, asr #30
     aa4:	4c465245 	sfmmi	f5, 2, [r6], {69}	; 0x45
     aa8:	6c00574f 	stcvs	7, cr5, [r0], {79}	; 0x4f
     aac:	5f747361 	svcpl	0x00747361
     ab0:	0061626c 	rsbeq	r6, r1, ip, ror #4
     ab4:	6769735f 			; <UNDEFINED> instruction: 0x6769735f
     ab8:	5f6c616e 	svcpl	0x006c616e
     abc:	00667562 	rsbeq	r7, r6, r2, ror #10
     ac0:	5f434253 	svcpl	0x00434253
     ac4:	5f435341 	svcpl	0x00435341
     ac8:	49474f4c 	stmdbmi	r7, {r2, r3, r6, r8, r9, sl, fp, lr}^
     acc:	5f4c4143 	svcpl	0x004c4143
     ad0:	54494e55 	strbpl	r4, [r9], #-3669	; 0xfffff1ab
     ad4:	544f4e5f 	strbpl	r4, [pc], #-3679	; adc <_Min_Stack_Size+0x6dc>
     ad8:	4145525f 	cmpmi	r5, pc, asr r2
     adc:	5f005944 	svcpl	0x00005944
     ae0:	7366626c 	cmnvc	r6, #108, 4	; 0xc0000006
     ae4:	00657a69 	rsbeq	r7, r5, r9, ror #20
     ae8:	616c665f 	cmnvs	ip, pc, asr r6
     aec:	6d007367 	stcvs	3, cr7, [r0, #-412]	; 0xfffffe64
     af0:	655f6373 	ldrbvs	r6, [pc, #-883]	; 785 <_Min_Stack_Size+0x385>
     af4:	695f3170 	ldmdbvs	pc, {r4, r5, r6, r8, ip, sp}^	; <UNPREDICTABLE>
     af8:	4253006e 	subsmi	r0, r3, #110	; 0x6e
     afc:	53415f43 	movtpl	r5, #8003	; 0x1f43
     b00:	45505f43 	ldrbmi	r5, [r0, #-3907]	; 0xfffff0bd
     b04:	48504952 	ldmdami	r0, {r1, r4, r6, r8, fp, lr}^
     b08:	4c415245 	sfmmi	f5, 2, [r1], {69}	; 0x45
     b0c:	5645445f 			; <UNDEFINED> instruction: 0x5645445f
     b10:	5f454349 	svcpl	0x00454349
     b14:	54495257 	strbpl	r5, [r9], #-599	; 0xfffffda9
     b18:	41465f45 	cmpmi	r6, r5, asr #30
     b1c:	00544c55 	subseq	r4, r4, r5, asr ip
     b20:	725f796d 	subsvc	r7, pc, #1785856	; 0x1b4000
     b24:	655f7365 	ldrbvs	r7, [pc, #-869]	; 7c7 <_Min_Stack_Size+0x3c7>
     b28:	5300646e 	movwpl	r6, #1134	; 0x46e
     b2c:	415f4342 	cmpmi	pc, r2, asr #6
     b30:	555f4353 	ldrbpl	r4, [pc, #-851]	; 7e5 <_Min_Stack_Size+0x3e5>
     b34:	4345524e 	movtmi	r5, #21070	; 0x524e
     b38:	5245564f 	subpl	r5, r5, #82837504	; 0x4f00000
     b3c:	525f4445 	subspl	r4, pc, #1157627904	; 0x45000000
     b40:	5f444145 	svcpl	0x00444145
     b44:	4f525245 	svcmi	0x00525245
     b48:	4c5f0052 	mrrcmi	0, 5, r0, pc, cr2	; <UNPREDICTABLE>
     b4c:	5f4b434f 	svcpl	0x004b434f
     b50:	55434552 	strbpl	r4, [r3, #-1362]	; 0xfffffaae
     b54:	56495352 			; <UNDEFINED> instruction: 0x56495352
     b58:	00545f45 	subseq	r5, r4, r5, asr #30
     b5c:	72626d5f 	rsbvc	r6, r2, #6080	; 0x17c0
     b60:	5f6e656c 	svcpl	0x006e656c
     b64:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
     b68:	42530065 	subsmi	r0, r3, #101	; 0x65
     b6c:	53415f43 	movtpl	r5, #8003	; 0x1f43
     b70:	424c5f43 	submi	r5, ip, #268	; 0x10c
     b74:	554f5f41 	strbpl	r5, [pc, #-3905]	; fffffc3b <BootRAM+0xef703dc>
     b78:	464f5f54 			; <UNDEFINED> instruction: 0x464f5f54
     b7c:	4e41525f 	mcrmi	2, 2, r5, cr1, cr15, {2}
     b80:	5f004547 	svcpl	0x00004547
     b84:	6f647473 	svcvs	0x00647473
     b88:	5f007475 	svcpl	0x00007475
     b8c:	736f7066 	cmnvc	pc, #102	; 0x66
     b90:	5f00745f 	svcpl	0x0000745f
     b94:	00736e66 	rsbseq	r6, r3, r6, ror #28
     b98:	6f6f635f 	svcvs	0x006f635f
     b9c:	0065696b 	rsbeq	r6, r5, fp, ror #18
     ba0:	6d745f5f 	ldclvs	15, cr5, [r4, #-380]!	; 0xfffffe84
     ba4:	6164775f 	cmnvs	r4, pc, asr r7
     ba8:	725f0079 	subsvc	r0, pc, #121	; 0x79
     bac:	6c757365 	ldclvs	3, cr7, [r5], #-404	; 0xfffffe6c
     bb0:	43620074 	cmnmi	r2, #116	; 0x74
     bb4:	6e654c42 	cdpvs	12, 6, cr4, cr5, cr2, {2}
     bb8:	00687467 	rsbeq	r7, r8, r7, ror #8
     bbc:	49465f5f 	stmdbmi	r6, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
     bc0:	5f00454c 	svcpl	0x0000454c
     bc4:	5f6d745f 	svcpl	0x006d745f
     bc8:	72756f68 	rsbsvc	r6, r5, #104, 30	; 0x1a0
     bcc:	62737500 	rsbsvs	r7, r3, #0, 10
     bd0:	63736d5f 	cmnvs	r3, #6080	; 0x17c0
     bd4:	7773635f 			; <UNDEFINED> instruction: 0x7773635f
     bd8:	7300745f 	movwvc	r7, #1119	; 0x45f
     bdc:	5f697363 	svcpl	0x00697363
     be0:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
     be4:	30315f65 	eorscc	r5, r1, r5, ror #30
     be8:	63736d00 	cmnvs	r3, #0, 26
     bec:	3170655f 	cmncc	r0, pc, asr r5
     bf0:	74756f5f 	ldrbtvc	r6, [r5], #-3935	; 0xfffff0a1
     bf4:	635f5f00 	cmpvs	pc, #0, 30
     bf8:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
     bfc:	43425300 	movtmi	r5, #8960	; 0x2300
     c00:	4e45535f 	mcrmi	3, 2, r5, cr5, cr15, {2}
     c04:	4b5f4553 	blmi	17d2158 <_binary_src_fatexample_img_size+0x17d0d58>
     c08:	565f5945 	ldrbpl	r5, [pc], -r5, asr #18
     c0c:	4f444e45 	svcmi	0x00444e45
     c10:	50535f52 	subspl	r5, r3, r2, asr pc
     c14:	46494345 	strbmi	r4, [r9], -r5, asr #6
     c18:	5f004349 	svcpl	0x00004349
     c1c:	5f6d745f 	svcpl	0x006d745f
     c20:	006e696d 	rsbeq	r6, lr, sp, ror #18
     c24:	5f63736d 	svcpl	0x0063736d
     c28:	5f777363 	svcpl	0x00777363
     c2c:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
     c30:	6e5f0074 	mrcvs	0, 2, r0, cr15, cr4, {3}
     c34:	66747865 	ldrbtvs	r7, [r4], -r5, ror #16
     c38:	61725f00 	cmnvs	r2, r0, lsl #30
     c3c:	3834646e 	ldmdacc	r4!, {r1, r2, r3, r5, r6, sl, sp, lr}
     c40:	716e6900 	cmnvc	lr, r0, lsl #18
     c44:	79726975 	ldmdbvc	r2!, {r0, r2, r4, r5, r6, r8, fp, sp, lr}^
     c48:	6761705f 			; <UNDEFINED> instruction: 0x6761705f
     c4c:	5f303065 	svcpl	0x00303065
     c50:	61746164 	cmnvs	r4, r4, ror #2
     c54:	43425300 	movtmi	r5, #8960	; 0x2300
     c58:	4353415f 	cmpmi	r3, #-1073741801	; 0xc0000017
     c5c:	4f465f51 	svcmi	0x00465f51
     c60:	54414d52 	strbpl	r4, [r1], #-3410	; 0xfffff2ae
     c64:	4d4f435f 	stclmi	3, cr4, [pc, #-380]	; af0 <_Min_Stack_Size+0x6f0>
     c68:	444e414d 	strbmi	r4, [lr], #-333	; 0xfffffeb3
     c6c:	4941465f 	stmdbmi	r1, {r0, r1, r2, r3, r4, r6, r9, sl, lr}^
     c70:	0044454c 	subeq	r4, r4, ip, asr #10
     c74:	7365725f 	cmnvc	r5, #-268435451	; 0xf0000005
     c78:	5f746c75 	svcpl	0x00746c75
     c7c:	5355006b 	cmppl	r5, #107	; 0x6b
     c80:	6f435f42 	svcvs	0x00435f42
     c84:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
     c88:	63736544 	cmnvs	r3, #68, 10	; 0x11000000
     c8c:	74706972 	ldrbtvc	r6, [r0], #-2418	; 0xfffff68e
     c90:	5f00726f 	svcpl	0x0000726f
     c94:	74637361 	strbtvc	r7, [r3], #-865	; 0xfffffc9f
     c98:	5f656d69 	svcpl	0x00656d69
     c9c:	00667562 	rsbeq	r7, r6, r2, ror #10
     ca0:	46735f5f 	uhsaxmi	r5, r3, pc	; <UNPREDICTABLE>
     ca4:	00454c49 	subeq	r4, r5, r9, asr #24
     ca8:	7364775f 	cmnvc	r4, #24903680	; 0x17c0000
     cac:	74536200 	ldrbvc	r6, [r3], #-512	; 0xfffffe00
     cb0:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
     cb4:	43425300 	movtmi	r5, #8960	; 0x2300
     cb8:	4353415f 	cmpmi	r3, #-1073741801	; 0xc0000017
     cbc:	544f4e5f 	strbpl	r4, [pc], #-3679	; cc4 <_Min_Stack_Size+0x8c4>
     cc0:	4145525f 	cmpmi	r5, pc, asr r2
     cc4:	545f5944 	ldrbpl	r5, [pc], #-2372	; ccc <_Min_Stack_Size+0x8cc>
     cc8:	45525f4f 	ldrbmi	r5, [r2, #-3919]	; 0xfffff0b1
     ccc:	5f594441 	svcpl	0x00594441
     cd0:	4e414843 	cdpmi	8, 4, cr4, cr1, cr3, {2}
     cd4:	75004547 	strvc	r4, [r0, #-1351]	; 0xfffffab9
     cd8:	6d5f6273 	lfmvs	f6, 2, [pc, #-460]	; b14 <_Min_Stack_Size+0x714>
     cdc:	635f6373 	cmpvs	pc, #-872415231	; 0xcc000001
     ce0:	73007773 	movwvc	r7, #1907	; 0x773
     ce4:	5f697363 	svcpl	0x00697363
     ce8:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
     cec:	6e65735f 	mcrvs	3, 3, r7, cr5, cr15, {2}
     cf0:	365f6573 			; <UNDEFINED> instruction: 0x365f6573
     cf4:	69625f00 	stmdbvs	r2!, {r8, r9, sl, fp, ip, lr}^
     cf8:	7972616e 	ldmdbvc	r2!, {r1, r2, r3, r5, r6, r8, sp, lr}^
     cfc:	6372735f 	cmnvs	r2, #2080374785	; 0x7c000001
     d00:	7461665f 	strbtvc	r6, [r1], #-1631	; 0xfffff9a1
     d04:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
     d08:	5f656c70 	svcpl	0x00656c70
     d0c:	5f676d69 	svcpl	0x00676d69
     d10:	00646e65 	rsbeq	r6, r4, r5, ror #28
     d14:	5f627375 	svcpl	0x00627375
     d18:	5f63736d 	svcpl	0x0063736d
     d1c:	736e6573 	cmnvc	lr, #482344960	; 0x1cc00000
     d20:	735f0065 	cmpvc	pc, #101	; 0x65
     d24:	006b6565 	rsbeq	r6, fp, r5, ror #10
     d28:	7562755f 	strbvc	r7, [r2, #-1375]!	; 0xfffffaa1
     d2c:	63730066 	cmnvs	r3, #102	; 0x66
     d30:	635f6973 	cmpvs	pc, #1884160	; 0x1cc000
     d34:	616d6d6f 	cmnvs	sp, pc, ror #26
     d38:	5f00646e 	svcpl	0x0000646e
     d3c:	72656d65 	rsbvc	r6, r5, #6464	; 0x1940
     d40:	636e6567 	cmnvs	lr, #432013312	; 0x19c00000
     d44:	79620079 	stmdbvc	r2!, {r0, r3, r4, r5, r6}^
     d48:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
     d4c:	6972776f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, r6, r8, r9, sl, ip, sp, lr}^
     d50:	63006574 	movwvs	r6, #1396	; 0x574
     d54:	635f7275 	cmpvs	pc, #1342177287	; 0x50000007
     d58:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
     d5c:	73637300 	cmnvc	r3, #0, 6
     d60:	65725f69 	ldrbvs	r5, [r2, #-3945]!	; 0xfffff097
     d64:	315f6461 	cmpcc	pc, r1, ror #8
     d68:	63730030 	cmnvs	r3, #48	; 0x30
     d6c:	725f6973 	subsvc	r6, pc, #1884160	; 0x1cc000
     d70:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0xfffffe9b
     d74:	735f7473 	cmpvc	pc, #1929379840	; 0x73000000
     d78:	65736e65 	ldrbvs	r6, [r3, #-3685]!	; 0xfffff19b
     d7c:	745f5f00 	ldrbvc	r5, [pc], #-3840	; d84 <_Min_Stack_Size+0x984>
     d80:	65735f6d 	ldrbvs	r5, [r3, #-3949]!	; 0xfffff093
     d84:	5f5f0063 	svcpl	0x005f0063
     d88:	795f6d74 	ldmdbvc	pc, {r2, r4, r5, r6, r8, sl, fp, sp, lr}^	; <UNPREDICTABLE>
     d8c:	00796164 	rsbseq	r6, r9, r4, ror #2
     d90:	636e695f 	cmnvs	lr, #1556480	; 0x17c000
     d94:	6e695f00 	cdpvs	15, 6, cr5, cr9, cr0, {0}
     d98:	42530064 	subsmi	r0, r3, #100	; 0x64
     d9c:	45535f43 	ldrbmi	r5, [r3, #-3907]	; 0xfffff0bd
     da0:	5f45534e 	svcpl	0x0045534e
     da4:	5f59454b 	svcpl	0x0059454b
     da8:	535f4f4e 	cmppl	pc, #312	; 0x138
     dac:	45534e45 	ldrbmi	r4, [r3, #-3653]	; 0xfffff1bb
     db0:	63627300 	cmnvs	r2, #0, 6
     db4:	6373615f 	cmnvs	r3, #-1073741801	; 0xc0000017
     db8:	43425300 	movtmi	r5, #8960	; 0x2300
     dbc:	4e45535f 	mcrmi	3, 2, r5, cr5, cr15, {2}
     dc0:	4b5f4553 	blmi	17d2314 <_binary_src_fatexample_img_size+0x17d0f14>
     dc4:	4d5f5945 	vldrmi.16	s11, [pc, #-138]	; d42 <_Min_Stack_Size+0x942>	; <UNPREDICTABLE>
     dc8:	55494445 	strbpl	r4, [r9, #-1093]	; 0xfffffbbb
     dcc:	52455f4d 	subpl	r5, r5, #308	; 0x134
     dd0:	00524f52 	subseq	r4, r2, r2, asr pc
     dd4:	73626d5f 	cmnvc	r2, #6080	; 0x17c0
     dd8:	776f7472 			; <UNDEFINED> instruction: 0x776f7472
     ddc:	735f7363 	cmpvc	pc, #-1946157055	; 0x8c000001
     de0:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
     de4:	765f5f00 	ldrbvc	r5, [pc], -r0, lsl #30
     de8:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
     dec:	35705f00 	ldrbcc	r5, [r0, #-3840]!	; 0xfffff100
     df0:	73750073 	cmnvc	r5, #115	; 0x73
     df4:	736d5f62 	cmnvc	sp, #392	; 0x188
     df8:	62635f63 	rsbvs	r5, r3, #396	; 0x18c
     dfc:	00745f77 	rsbseq	r5, r4, r7, ror pc
     e00:	5f425355 	svcpl	0x00425355
     e04:	69727453 	ldmdbvs	r2!, {r0, r1, r4, r6, sl, ip, sp, lr}^
     e08:	614d676e 	cmpvs	sp, lr, ror #14
     e0c:	6166756e 	cmnvs	r6, lr, ror #10
     e10:	72757463 	rsbsvc	r7, r5, #1660944384	; 0x63000000
     e14:	44676e69 	strbtmi	r6, [r7], #-3689	; 0xfffff197
     e18:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
     e1c:	6f747069 	svcvs	0x00747069
     e20:	6d5f0072 	ldclvs	0, cr0, [pc, #-456]	; c60 <_Min_Stack_Size+0x860>
     e24:	6e656c62 	cdpvs	12, 6, cr6, cr5, cr2, {3}
     e28:	6174735f 	cmnvs	r4, pc, asr r3
     e2c:	62006574 	andvs	r6, r0, #116, 10	; 0x1d000000
     e30:	616c466d 	cmnvs	ip, sp, ror #12
     e34:	73007367 	movwvc	r7, #871	; 0x367
     e38:	735f6362 	cmpvc	pc, #-2013265919	; 0x88000001
     e3c:	65736e65 	ldrbvs	r6, [r3, #-3685]!	; 0xfffff19b
     e40:	79656b5f 	stmdbvc	r5!, {r0, r1, r2, r3, r4, r6, r8, r9, fp, sp, lr}^
     e44:	745f5f00 	ldrbvc	r5, [pc], #-3840	; e4c <_Min_Stack_Size+0xa4c>
     e48:	646d5f6d 	strbtvs	r5, [sp], #-3949	; 0xfffff093
     e4c:	5f007961 	svcpl	0x00007961
     e50:	5f676973 	svcpl	0x00676973
     e54:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
     e58:	626d5f00 	rsbvs	r5, sp, #0, 30
     e5c:	776f7472 			; <UNDEFINED> instruction: 0x776f7472
     e60:	74735f63 	ldrbtvc	r5, [r3], #-3939	; 0xfffff09d
     e64:	00657461 	rsbeq	r7, r5, r1, ror #8
     e68:	6574615f 	ldrbvs	r6, [r4, #-351]!	; 0xfffffea1
     e6c:	30746978 	rsbscc	r6, r4, r8, ror r9
     e70:	74796200 	ldrbtvc	r6, [r9], #-512	; 0xfffffe00
     e74:	6f747365 	svcvs	0x00747365
     e78:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
     e7c:	6f747300 	svcvs	0x00747300
     e80:	65676172 	strbvs	r6, [r7, #-370]!	; 0xfffffe8e
     e84:	6c665f00 	stclvs	15, cr5, [r6], #-0
     e88:	5f6b636f 	svcpl	0x006b636f
     e8c:	5f5f0074 	svcpl	0x005f0074
     e90:	00686377 	rsbeq	r6, r8, r7, ror r3
     e94:	626f695f 	rsbvs	r6, pc, #1556480	; 0x17c000
     e98:	635f0073 	cmpvs	pc, #115	; 0x73
     e9c:	65736f6c 	ldrbvs	r6, [r3, #-3948]!	; 0xfffff094
     ea0:	735f5f00 	cmpvc	pc, #0, 30
     ea4:	69646964 	stmdbvs	r4!, {r2, r5, r6, r8, fp, sp, lr}^
     ea8:	0074696e 	rsbseq	r6, r4, lr, ror #18
     eac:	5f434253 	svcpl	0x00434253
     eb0:	534e4553 	movtpl	r4, #58707	; 0xe553
     eb4:	454b5f45 	strbmi	r5, [fp, #-3909]	; 0xfffff0bb
     eb8:	42415f59 	submi	r5, r1, #356	; 0x164
     ebc:	4554524f 	ldrbmi	r5, [r4, #-591]	; 0xfffffdb1
     ec0:	4f435f44 	svcmi	0x00435f44
     ec4:	4e414d4d 	cdpmi	13, 4, cr4, cr1, cr13, {2}
     ec8:	53640044 	cmnpl	r4, #68	; 0x44
     ecc:	616e6769 	cmnvs	lr, r9, ror #14
     ed0:	65727574 	ldrbvs	r7, [r2, #-1396]!	; 0xfffffa8c
     ed4:	78616d00 	stmdavc	r1!, {r8, sl, fp, sp, lr}^
     ed8:	006e756c 	rsbeq	r7, lr, ip, ror #10
     edc:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
     ee0:	5f006e69 	svcpl	0x00006e69
     ee4:	6d6d6167 	stfvse	f6, [sp, #-412]!	; 0xfffffe64
     ee8:	69735f61 	ldmdbvs	r3!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
     eec:	61676e67 	cmnvs	r7, r7, ror #28
     ef0:	4c62006d 	stclmi	0, cr0, [r2], #-436	; 0xfffffe4c
     ef4:	5f004e55 	svcpl	0x00004e55
     ef8:	65736162 	ldrbvs	r6, [r3, #-354]!	; 0xfffffe9e
     efc:	43425300 	movtmi	r5, #8960	; 0x2300
     f00:	4e45535f 	mcrmi	3, 2, r5, cr5, cr15, {2}
     f04:	4b5f4553 	blmi	17d2458 <_binary_src_fatexample_img_size+0x17d1058>
     f08:	495f5945 	ldmdbmi	pc, {r0, r2, r6, r8, fp, ip, lr}^	; <UNPREDICTABLE>
     f0c:	47454c4c 	strbmi	r4, [r5, -ip, asr #24]
     f10:	525f4c41 	subspl	r4, pc, #16640	; 0x4100
     f14:	45555145 	ldrbmi	r5, [r5, #-325]	; 0xfffffebb
     f18:	5f005453 	svcpl	0x00005453
     f1c:	65657266 	strbvs	r7, [r5, #-614]!	; 0xfffffd9a
     f20:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
     f24:	756d5f00 	strbvc	r5, [sp, #-3840]!	; 0xfffff100
     f28:	5f00746c 	svcpl	0x0000746c
     f2c:	6f4c555f 	svcvs	0x004c555f
     f30:	5300676e 	movwpl	r6, #1902	; 0x76e
     f34:	415f4342 	cmpmi	pc, r2, asr #6
     f38:	5f514353 	svcpl	0x00514353
     f3c:	54494e49 	strbpl	r4, [r9], #-3657	; 0xfffff1b7
     f40:	494c4149 	stmdbmi	ip, {r0, r3, r6, r8, lr}^
     f44:	474e495a 	smlsldmi	r4, lr, sl, r9
     f48:	4d4f435f 	stclmi	3, cr4, [pc, #-380]	; dd4 <_Min_Stack_Size+0x9d4>
     f4c:	444e414d 	strbmi	r4, [lr], #-333	; 0xfffffeb3
     f50:	5145525f 	cmppl	r5, pc, asr r2
     f54:	45524955 	ldrbmi	r4, [r2, #-2389]	; 0xfffff6ab
     f58:	775f0044 	ldrbvc	r0, [pc, -r4, asr #32]
     f5c:	6f747263 	svcvs	0x00747263
     f60:	735f626d 	cmpvc	pc, #-805306362	; 0xd0000006
     f64:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
     f68:	69665f00 	stmdbvs	r6!, {r8, r9, sl, fp, ip, lr}^
     f6c:	5300656c 	movwpl	r6, #1388	; 0x56c
     f70:	535f4342 	cmppl	pc, #134217729	; 0x8000001
     f74:	45534e45 	ldrbmi	r4, [r3, #-3653]	; 0xfffff1bb
     f78:	59454b5f 	stmdbpl	r5, {r0, r1, r2, r3, r4, r6, r8, r9, fp, lr}^
     f7c:	4345525f 	movtmi	r5, #21087	; 0x525f
     f80:	5245564f 	subpl	r5, r5, #82837504	; 0x4f00000
     f84:	455f4445 	ldrbmi	r4, [pc, #-1093]	; b47 <_Min_Stack_Size+0x747>
     f88:	524f5252 	subpl	r5, pc, #536870917	; 0x20000005
     f8c:	74796200 	ldrbtvc	r6, [r9], #-512	; 0xfffffe00
     f90:	6f637365 	svcvs	0x00637365
     f94:	00746e75 	rsbseq	r6, r4, r5, ror lr
     f98:	74614464 	strbtvc	r4, [r1], #-1124	; 0xfffffb9c
     f9c:	6e654c61 	cdpvs	12, 6, cr4, cr5, cr1, {3}
     fa0:	00687467 	rsbeq	r7, r8, r7, ror #8
     fa4:	6c635f5f 	stclvs	15, cr5, [r3], #-380	; 0xfffffe84
     fa8:	756e6165 	strbvc	r6, [lr, #-357]!	; 0xfffffe9b
     fac:	63730070 	cmnvs	r3, #112	; 0x70
     fb0:	6d5f6973 	vldrvs.16	s13, [pc, #-230]	; ed2 <_Min_Stack_Size+0xad2>	; <UNPREDICTABLE>
     fb4:	725f636d 	subsvc	r6, pc, #-1275068415	; 0xb4000001
     fb8:	5f646165 	svcpl	0x00646165
     fbc:	5f746d66 	svcpl	0x00746d66
     fc0:	00706163 	rsbseq	r6, r0, r3, ror #2
     fc4:	73626d5f 	cmnvc	r2, #6080	; 0x17c0
     fc8:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
     fcc:	6200745f 	andvs	r7, r0, #1593835520	; 0x5f000000
     fd0:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
     fd4:	5f5f0072 	svcpl	0x005f0072
     fd8:	695f6d74 	ldmdbvs	pc, {r2, r4, r5, r6, r8, sl, fp, sp, lr}^	; <UNPREDICTABLE>
     fdc:	74736473 	ldrbtvc	r6, [r3], #-1139	; 0xfffffb8d
     fe0:	63775f00 	cmnvs	r7, #0, 30
     fe4:	6f747273 	svcvs	0x00747273
     fe8:	5f73626d 	svcpl	0x0073626d
     fec:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
     ff0:	61720065 	cmnvs	r2, r5, rrx
     ff4:	6675626d 	ldrbtvs	r6, [r5], -sp, ror #4
     ff8:	5f685f00 	svcpl	0x00685f00
     ffc:	6e727265 	cdpvs	2, 7, cr7, cr2, cr5, {3}
    1000:	4253006f 	subsmi	r0, r3, #111	; 0x6f
    1004:	45535f43 	ldrbmi	r5, [r3, #-3907]	; 0xfffff0bd
    1008:	5f45534e 	svcpl	0x0045534e
    100c:	5f59454b 	svcpl	0x0059454b
    1010:	5f544f4e 	svcpl	0x00544f4e
    1014:	44414552 	strbmi	r4, [r1], #-1362	; 0xfffffaae
    1018:	5f5f0059 	svcpl	0x005f0059
    101c:	6d5f6d74 	ldclvs	13, cr6, [pc, #-464]	; e54 <_Min_Stack_Size+0xa54>
    1020:	6c006e6f 	stcvs	14, cr6, [r0], {111}	; 0x6f
    1024:	20676e6f 	rsbcs	r6, r7, pc, ror #28
    1028:	62756f64 	rsbsvs	r6, r5, #100, 30	; 0x190
    102c:	5f00656c 	svcpl	0x0000656c
    1030:	5f6d745f 	svcpl	0x006d745f
    1034:	72616579 	rsbvc	r6, r1, #507510784	; 0x1e400000
    1038:	43425300 	movtmi	r5, #8960	; 0x2300
    103c:	4353415f 	cmpmi	r3, #-1073741801	; 0xc0000017
    1040:	504f5f51 	subpl	r5, pc, r1, asr pc	; <UNPREDICTABLE>
    1044:	54415245 	strbpl	r5, [r1], #-581	; 0xfffffdbb
    1048:	5f4e4f49 	svcpl	0x004e4f49
    104c:	505f4e49 	subspl	r4, pc, r9, asr #28
    1050:	52474f52 	subpl	r4, r7, #328	; 0x148
    1054:	00535345 	subseq	r5, r3, r5, asr #6
    1058:	6574615f 	ldrbvs	r6, [r4, #-351]!	; 0xfffffea1
    105c:	00746978 	rsbseq	r6, r4, r8, ror r9
    1060:	73626d5f 	cmnvc	r2, #6080	; 0x17c0
    1064:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
    1068:	73637300 	cmnvc	r3, #0, 6
    106c:	65725f69 	ldrbvs	r5, [r2, #-3945]!	; 0xfffff097
    1070:	00746573 	rsbseq	r6, r4, r3, ror r5
    1074:	636f6c62 	cmnvs	pc, #25088	; 0x6200
    1078:	6f635f6b 	svcvs	0x00635f6b
    107c:	00746e75 	rsbseq	r6, r4, r5, ror lr
    1080:	5f434253 	svcpl	0x00434253
    1084:	51435341 	cmppl	r3, r1, asr #6
    1088:	00414e5f 	subeq	r4, r1, pc, asr lr
    108c:	6769425f 			; <UNDEFINED> instruction: 0x6769425f
    1090:	00746e69 	rsbseq	r6, r4, r9, ror #28
    1094:	69736373 	ldmdbvs	r3!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
    1098:	7365745f 	cmnvc	r5, #1593835520	; 0x5f000000
    109c:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
    10a0:	725f7469 	subsvc	r7, pc, #1761607680	; 0x69000000
    10a4:	79646165 	stmdbvc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    10a8:	74536200 	ldrbvc	r6, [r3], #-512	; 0xfffffe00
    10ac:	676e6972 			; <UNDEFINED> instruction: 0x676e6972
    10b0:	735f5f00 	cmpvc	pc, #0, 30
    10b4:	735f0066 	cmpvc	pc, #102	; 0x66
    10b8:	006e6769 	rsbeq	r6, lr, r9, ror #14
    10bc:	5f434253 	svcpl	0x00434253
    10c0:	5f435341 	svcpl	0x00435341
    10c4:	54495257 	strbpl	r5, [r9], #-599	; 0xfffffda9
    10c8:	52505f45 	subspl	r5, r0, #276	; 0x114
    10cc:	4345544f 	movtmi	r5, #21583	; 0x544f
    10d0:	00444554 	subeq	r4, r4, r4, asr r5
    10d4:	63775f5f 	cmnvs	r7, #380	; 0x17c
    10d8:	5f006268 	svcpl	0x00006268
    10dc:	626f6c67 	rsbvs	r6, pc, #26368	; 0x6700
    10e0:	695f6c61 	ldmdbvs	pc, {r0, r5, r6, sl, fp, sp, lr}^	; <UNPREDICTABLE>
    10e4:	7275706d 	rsbsvc	r7, r5, #109	; 0x6d
    10e8:	74705f65 	ldrbtvc	r5, [r0], #-3941	; 0xfffff09b
    10ec:	72730072 	rsbsvc	r0, r3, #114	; 0x72
    10f0:	73752f63 	cmnvc	r5, #396	; 0x18c
    10f4:	6c635f62 	stclvs	15, cr5, [r3], #-392	; 0xfffffe78
    10f8:	5f737361 	svcpl	0x00737361
    10fc:	2e64736d 	cdpcs	3, 6, cr7, cr4, cr13, {3}
    1100:	65730063 	ldrbvs	r0, [r3, #-99]!	; 0xffffff9d
    1104:	5f65736e 	svcpl	0x0065736e
    1108:	70736572 	rsbsvc	r6, r3, r2, ror r5
    110c:	65736e6f 	ldrbvs	r6, [r3, #-3695]!	; 0xfffff191
    1110:	666f5f00 	strbtvs	r5, [pc], -r0, lsl #30
    1114:	74657366 	strbtvc	r7, [r5], #-870	; 0xfffffc9a
    1118:	42535500 	subsmi	r5, r3, #0, 10
    111c:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
    1120:	53676e69 	cmnpl	r7, #1680	; 0x690
    1124:	61697265 	cmnvs	r9, r5, ror #4
    1128:	7365446c 	cmnvc	r5, #108, 8	; 0x6c000000
    112c:	70697263 	rsbvc	r7, r9, r3, ror #4
    1130:	00726f74 	rsbseq	r6, r2, r4, ror pc
    1134:	636f6c5f 	cmnvs	pc, #24320	; 0x5f00
    1138:	69746c61 	ldmdbvs	r4!, {r0, r5, r6, sl, fp, sp, lr}^
    113c:	625f656d 	subsvs	r6, pc, #457179136	; 0x1b400000
    1140:	55006675 	strpl	r6, [r0, #-1653]	; 0xfffff98b
    1144:	535f4253 	cmppl	pc, #805306373	; 0x30000005
    1148:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
    114c:	6e614c67 	cdpvs	12, 6, cr4, cr1, cr7, {3}
    1150:	73654467 	cmnvc	r5, #1728053248	; 0x67000000
    1154:	70697263 	rsbvc	r7, r9, r3, ror #4
    1158:	00726f74 	rsbseq	r6, r2, r4, ror pc
    115c:	756e755f 	strbvc	r7, [lr, #-1375]!	; 0xfffffaa1
    1160:	00646573 	rsbeq	r6, r4, r3, ror r5
    1164:	77656e5f 			; <UNDEFINED> instruction: 0x77656e5f
    1168:	76635f00 	strbtvc	r5, [r3], -r0, lsl #30
    116c:	6e656c74 	mcrvs	12, 3, r6, cr5, cr4, {3}
    1170:	616d5f00 	cmnvs	sp, r0, lsl #30
    1174:	73647778 	cmnvc	r4, #120, 14	; 0x1e00000
    1178:	366c5f00 	strbtcc	r5, [ip], -r0, lsl #30
    117c:	625f6134 	subsvs	r6, pc, #52, 2
    1180:	73006675 	movwvc	r6, #1653	; 0x675
    1184:	5f697363 	svcpl	0x00697363
    1188:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    118c:	7061635f 	rsbvc	r6, r1, pc, asr r3
    1190:	74696361 	strbtvc	r6, [r9], #-865	; 0xfffffc9f
    1194:	63730079 	cmnvs	r3, #121	; 0x79
    1198:	695f6973 	ldmdbvs	pc, {r0, r1, r4, r5, r6, r8, fp, sp, lr}^	; <UNPREDICTABLE>
    119c:	6975716e 	ldmdbvs	r5!, {r1, r2, r3, r5, r6, r8, ip, sp, lr}^
    11a0:	5f007972 	svcpl	0x00007972
    11a4:	736b6c62 	cmnvc	fp, #25088	; 0x6200
    11a8:	00657a69 	rsbeq	r7, r5, r9, ror #20
    11ac:	6d745f5f 	ldclvs	15, cr5, [r4, #-380]!	; 0xfffffe84
    11b0:	6f6c5f00 	svcvs	0x006c5f00
    11b4:	55006b63 	strpl	r6, [r0, #-2915]	; 0xfffff49d
    11b8:	445f4253 	ldrbmi	r4, [pc], #-595	; 11c0 <_Min_Stack_Size+0xdc0>
    11bc:	63697665 	cmnvs	r9, #105906176	; 0x6500000
    11c0:	61755165 	cmnvs	r5, r5, ror #2
    11c4:	6966696c 	stmdbvs	r6!, {r2, r3, r5, r6, r8, fp, sp, lr}^
    11c8:	65447265 	strbvs	r7, [r4, #-613]	; 0xfffffd9b
    11cc:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
    11d0:	726f7470 	rsbvc	r7, pc, #112, 8	; 0x70000000
    11d4:	696e5f00 	stmdbvs	lr!, {r8, r9, sl, fp, ip, lr}^
    11d8:	0073626f 	rsbseq	r6, r3, pc, ror #4
    11dc:	5f434253 	svcpl	0x00434253
    11e0:	5f435341 	svcpl	0x00435341
    11e4:	41564e49 	cmpmi	r6, r9, asr #28
    11e8:	5f44494c 	svcpl	0x0044494c
    11ec:	4c454946 	mcrrmi	9, 4, r4, r5, cr6	; <UNPREDICTABLE>
    11f0:	4e495f44 	cdpmi	15, 4, cr5, cr9, cr4, {2}
    11f4:	4244435f 	submi	r4, r4, #2080374785	; 0x7c000001
    11f8:	73645f00 	cmnvc	r4, #0, 30
    11fc:	61685f6f 	cmnvs	r8, pc, ror #30
    1200:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    1204:	62737500 	rsbsvs	r7, r3, #0, 10
    1208:	63736d5f 	cmnvs	r3, #6080	; 0x17c0
    120c:	6e65735f 	mcrvs	3, 3, r7, cr5, cr15, {2}
    1210:	745f6573 	ldrbvc	r6, [pc], #-1395	; 1218 <_Min_Stack_Size+0xe18>
    1214:	61446400 	cmpvs	r4, r0, lsl #8
    1218:	65526174 	ldrbvs	r6, [r2, #-372]	; 0xfffffe8c
    121c:	75646973 	strbvc	r6, [r4, #-2419]!	; 0xfffff68d
    1220:	635f0065 	cmpvs	pc, #101	; 0x65
    1224:	75627476 	strbvc	r7, [r2, #-1142]!	; 0xfffffb8a
    1228:	42530066 	subsmi	r0, r3, #102	; 0x66
    122c:	53415f43 	movtpl	r5, #8003	; 0x1f43
    1230:	454d5f43 	strbmi	r5, [sp, #-3907]	; 0xfffff0bd
    1234:	4d554944 	vldrmi.16	s9, [r5, #-136]	; 0xffffff78	; <UNPREDICTABLE>
    1238:	544f4e5f 	strbpl	r4, [pc], #-3679	; 1240 <_Min_Stack_Size+0xe40>
    123c:	4552505f 	ldrbmi	r5, [r2, #-95]	; 0xffffffa1
    1240:	544e4553 	strbpl	r4, [lr], #-1363	; 0xfffffaad
    1244:	65675f00 	strbvs	r5, [r7, #-3840]!	; 0xfffff100
    1248:	74616474 	strbtvc	r6, [r1], #-1140	; 0xfffffb8c
    124c:	72655f65 	rsbvc	r5, r5, #404	; 0x194
    1250:	53550072 	cmppl	r5, #114	; 0x72
    1254:	65445f42 	strbvs	r5, [r4, #-3906]	; 0xfffff0be
    1258:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
    125c:	63736544 	cmnvs	r3, #68, 10	; 0x11000000
    1260:	74706972 	ldrbtvc	r6, [r0], #-2418	; 0xfffff68e
    1264:	5f00726f 	svcpl	0x0000726f
    1268:	00646461 	rsbeq	r6, r4, r1, ror #8
    126c:	5f434253 	svcpl	0x00434253
    1270:	534e4553 	movtpl	r4, #58707	; 0xe553
    1274:	454b5f45 	strbmi	r5, [fp, #-3909]	; 0xfffff0bb
    1278:	494d5f59 	stmdbmi	sp, {r0, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
    127c:	4d4f4353 	stclmi	3, cr4, [pc, #-332]	; 1138 <_Min_Stack_Size+0xd38>
    1280:	45524150 	ldrbmi	r4, [r2, #-336]	; 0xfffffeb0
    1284:	43425300 	movtmi	r5, #8960	; 0x2300
    1288:	4e45535f 	mcrmi	3, 2, r5, cr5, cr15, {2}
    128c:	4b5f4553 	blmi	17d27e0 <_binary_src_fatexample_img_size+0x17d13e0>
    1290:	445f5945 	ldrbmi	r5, [pc], #-2373	; 1298 <_Min_Stack_Size+0xe98>
    1294:	5f415441 	svcpl	0x00415441
    1298:	544f5250 	strbpl	r5, [pc], #-592	; 12a0 <_Min_Stack_Size+0xea0>
    129c:	00544345 	subseq	r4, r4, r5, asr #6
    12a0:	73654462 	cmnvc	r5, #1644167168	; 0x62000000
    12a4:	70697263 	rsbvc	r7, r9, r3, ror #4
    12a8:	54726f74 	ldrbtpl	r6, [r2], #-3956	; 0xfffff08c
    12ac:	00657079 	rsbeq	r7, r5, r9, ror r0
    12b0:	62735f5f 	rsbsvs	r5, r3, #380	; 0x17c
    12b4:	53006675 	movwpl	r6, #1653	; 0x675
    12b8:	535f4342 	cmppl	pc, #134217729	; 0x8000001
    12bc:	45534e45 	ldrbmi	r4, [r3, #-3653]	; 0xfffff1bb
    12c0:	59454b5f 	stmdbpl	r5, {r0, r1, r2, r3, r4, r6, r8, r9, fp, lr}^
    12c4:	504f435f 	subpl	r4, pc, pc, asr r3	; <UNPREDICTABLE>
    12c8:	42415f59 	submi	r5, r1, #356	; 0x164
    12cc:	4554524f 	ldrbmi	r5, [r4, #-591]	; 0xfffffdb1
    12d0:	42530044 	subsmi	r0, r3, #68	; 0x44
    12d4:	45535f43 	ldrbmi	r5, [r3, #-3907]	; 0xfffff0bd
    12d8:	5f45534e 	svcpl	0x0045534e
    12dc:	5f59454b 	svcpl	0x0059454b
    12e0:	4e414c42 	cdpmi	12, 4, cr4, cr1, cr2, {2}
    12e4:	48435f4b 	stmdami	r3, {r0, r1, r3, r6, r8, r9, sl, fp, ip, lr}^
    12e8:	004b4345 	subeq	r4, fp, r5, asr #6
    12ec:	756c675f 	strbvc	r6, [ip, #-1887]!	; 0xfffff8a1
    12f0:	5f5f0065 	svcpl	0x005f0065
    12f4:	756c6773 	strbvc	r6, [ip, #-1907]!	; 0xfffff88d
    12f8:	735f0065 	cmpvc	pc, #101	; 0x65
    12fc:	6f747274 	svcvs	0x00747274
    1300:	616c5f6b 	cmnvs	ip, fp, ror #30
    1304:	5f007473 	svcpl	0x00007473
    1308:	6f74626d 	svcvs	0x0074626d
    130c:	735f6377 	cmpvc	pc, #-603979775	; 0xdc000001
    1310:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
    1314:	43425300 	movtmi	r5, #8960	; 0x2300
    1318:	4e45535f 	mcrmi	3, 2, r5, cr5, cr15, {2}
    131c:	4b5f4553 	blmi	17d2870 <_binary_src_fatexample_img_size+0x17d1470>
    1320:	555f5945 	ldrbpl	r5, [pc, #-2373]	; 9e3 <_Min_Stack_Size+0x5e3>
    1324:	5f54494e 	svcpl	0x0054494e
    1328:	45545441 	ldrbmi	r5, [r4, #-1089]	; 0xfffffbbf
    132c:	4f49544e 	svcmi	0x0049544e
    1330:	6273004e 	rsbsvs	r0, r3, #78	; 0x4e
    1334:	73615f63 	cmnvc	r1, #396	; 0x18c
    1338:	5f007163 	svcpl	0x00007163
    133c:	61636f6c 	cmnvs	r3, ip, ror #30
    1340:	5f00656c 	svcpl	0x0000656c
    1344:	72616e66 	rsbvc	r6, r1, #1632	; 0x660
    1348:	53007367 	movwpl	r7, #871	; 0x367
    134c:	415f4342 	cmpmi	pc, r2, asr #6
    1350:	465f4353 			; <UNDEFINED> instruction: 0x465f4353
    1354:	414d524f 	cmpmi	sp, pc, asr #4
    1358:	52455f54 	subpl	r5, r5, #84, 30	; 0x150
    135c:	00524f52 	subseq	r4, r2, r2, asr pc
    1360:	6565725f 	strbvs	r7, [r5, #-607]!	; 0xfffffda1
    1364:	5500746e 	strpl	r7, [r0, #-1134]	; 0xfffffb92
    1368:	535f4253 	cmppl	pc, #805306373	; 0x30000005
    136c:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
    1370:	6f725067 	svcvs	0x00725067
    1374:	73654464 	cmnvc	r5, #100, 8	; 0x64000000
    1378:	70697263 	rsbvc	r7, r9, r3, ror #4
    137c:	00726f74 	rsbseq	r6, r2, r4, ror pc
    1380:	746e665f 	strbtvc	r6, [lr], #-1631	; 0xfffff9a1
    1384:	73657079 	cmnvc	r5, #121	; 0x79
    1388:	43425300 	movtmi	r5, #8960	; 0x2300
    138c:	4353415f 	cmpmi	r3, #-1073741801	; 0xc0000017
    1390:	564e495f 			; <UNDEFINED> instruction: 0x564e495f
    1394:	44494c41 	strbmi	r4, [r9], #-3137	; 0xfffff3bf
    1398:	4d4f435f 	stclmi	3, cr4, [pc, #-380]	; 1224 <_Min_Stack_Size+0xe24>
    139c:	444e414d 	strbmi	r4, [lr], #-333	; 0xfffffeb3
    13a0:	45504f5f 	ldrbmi	r4, [r0, #-3935]	; 0xfffff0a1
    13a4:	49544152 	ldmdbmi	r4, {r1, r4, r6, r8, lr}^
    13a8:	435f4e4f 	cmpmi	pc, #1264	; 0x4f0
    13ac:	0045444f 	subeq	r4, r5, pc, asr #8
    13b0:	66666f5f 	uqsaxvs	r6, r6, pc	; <UNPREDICTABLE>
    13b4:	5300745f 	movwpl	r7, #1119	; 0x45f
    13b8:	535f4342 	cmppl	pc, #134217729	; 0x8000001
    13bc:	45534e45 	ldrbmi	r4, [r3, #-3653]	; 0xfffff1bb
    13c0:	59454b5f 	stmdbpl	r5, {r0, r1, r2, r3, r4, r6, r8, r9, fp, lr}^
    13c4:	5241485f 	subpl	r4, r1, #6225920	; 0x5f0000
    13c8:	52415744 	subpl	r5, r1, #68, 14	; 0x1100000
    13cc:	52455f45 	subpl	r5, r5, #276	; 0x114
    13d0:	00524f52 	subseq	r4, r2, r2, asr pc
    13d4:	75626e5f 	strbvc	r6, [r2, #-3679]!	; 0xfffff1a1
    13d8:	755f0066 	ldrbvc	r0, [pc, #-102]	; 137a <_Min_Stack_Size+0xf7a>
    13dc:	6573756e 	ldrbvs	r7, [r3, #-1390]!	; 0xfffffa92
    13e0:	61725f64 	cmnvs	r2, r4, ror #30
    13e4:	5300646e 	movwpl	r6, #1134	; 0x46e
    13e8:	415f4342 	cmpmi	pc, r2, asr #6
    13ec:	4e5f4353 	mrcmi	3, 2, r4, cr15, cr3, {2}
    13f0:	44415f4f 	strbmi	r5, [r1], #-3919	; 0xfffff0b1
    13f4:	49544944 	ldmdbmi	r4, {r2, r6, r8, fp, lr}^
    13f8:	4c414e4f 	mcrrmi	14, 4, r4, r1, cr15
    13fc:	4e45535f 	mcrmi	3, 2, r5, cr5, cr15, {2}
    1400:	495f4553 	ldmdbmi	pc, {r0, r1, r4, r6, r8, sl, lr}^	; <UNPREDICTABLE>
    1404:	524f464e 	subpl	r4, pc, #81788928	; 0x4e00000
    1408:	4954414d 	ldmdbmi	r4, {r0, r2, r3, r6, r8, lr}^
    140c:	6d004e4f 	stcvs	14, cr4, [r0, #-316]	; 0xfffffec4
    1410:	65725f79 	ldrbvs	r5, [r2, #-3961]!	; 0xfffff087
    1414:	74735f73 	ldrbtvc	r5, [r3], #-3955	; 0xfffff08d
    1418:	00747261 	rsbseq	r7, r4, r1, ror #4
    141c:	6e654c62 	cdpvs	12, 6, cr4, cr5, cr2, {3}
    1420:	00687467 	rsbeq	r7, r8, r7, ror #8
    1424:	736e755f 	cmnvc	lr, #398458880	; 0x17c00000
    1428:	69636570 	stmdbvs	r3!, {r4, r5, r6, r8, sl, sp, lr}^
    142c:	64656966 	strbtvs	r6, [r5], #-2406	; 0xfffff69a
    1430:	636f6c5f 	cmnvs	pc, #24320	; 0x5f00
    1434:	5f656c61 	svcpl	0x00656c61
    1438:	6f666e69 	svcvs	0x00666e69
    143c:	6c665f00 	stclvs	15, cr5, [r6], #-0
    1440:	32736761 	rsbscc	r6, r3, #25427968	; 0x1840000
    1444:	73695f00 	cmnvc	r9, #0, 30
    1448:	6178635f 	cmnvs	r8, pc, asr r3
    144c:	65735f00 	ldrbvs	r5, [r3, #-3840]!	; 0xfffff100
    1450:	5f006465 	svcpl	0x00006465
    1454:	646e6172 	strbtvs	r6, [lr], #-370	; 0xfffffe8e
    1458:	78656e5f 	stmdavc	r5!, {r0, r1, r2, r3, r4, r6, r9, sl, fp, sp, lr}^
    145c:	5f5f0074 	svcpl	0x005f0074
    1460:	61636f6c 	cmnvs	r3, ip, ror #30
    1464:	745f656c 	ldrbvc	r6, [pc], #-1388	; 146c <_binary_src_fatexample_img_size+0x6c>
    1468:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
    146c:	72726564 	rsbsvc	r6, r2, #100, 10	; 0x19000000
    1470:	6d6e5f00 	stclvs	15, cr5, [lr, #-0]
    1474:	6f6c6c61 	svcvs	0x006c6c61
    1478:	69770063 	ldmdbvs	r7!, {r0, r1, r5, r6}^
    147c:	745f746e 	ldrbvc	r7, [pc], #-1134	; 1484 <_binary_src_fatexample_img_size+0x84>
    1480:	695f5f00 	ldmdbvs	pc, {r8, r9, sl, fp, ip, lr}^	; <UNPREDICTABLE>
    1484:	5f74696e 	svcpl	0x0074696e
    1488:	61727261 	cmnvs	r2, r1, ror #4
    148c:	74735f79 	ldrbtvc	r5, [r3], #-3961	; 0xfffff087
    1490:	00747261 	rsbseq	r7, r4, r1, ror #4
    1494:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
    1498:	5f00745f 	svcpl	0x0000745f
    149c:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
    14a0:	6e695f63 	cdpvs	15, 6, cr5, cr9, cr3, {3}
    14a4:	615f7469 	cmpvs	pc, r9, ror #8
    14a8:	79617272 	stmdbvc	r1!, {r1, r4, r5, r6, r9, ip, sp, lr}^
    14ac:	75622f00 	strbvc	r2, [r2, #-3840]!	; 0xfffff100
    14b0:	2f646c69 	svccs	0x00646c69
    14b4:	6c77656e 	cfldr64vs	mvdx6, [r7], #-440	; 0xfffffe48
    14b8:	6b2d6269 	blvs	b59e64 <_binary_src_fatexample_img_size+0xb58a64>
    14bc:	77766747 	ldrbvc	r6, [r6, -r7, asr #14]!
    14c0:	656e2f45 	strbvs	r2, [lr, #-3909]!	; 0xfffff0bb
    14c4:	62696c77 	rsbvs	r6, r9, #30464	; 0x7700
    14c8:	332e332d 			; <UNDEFINED> instruction: 0x332e332d
    14cc:	622f302e 	eorvs	r3, pc, #46	; 0x2e
    14d0:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
    14d4:	6e616e5f 	mcrvs	14, 3, r6, cr1, cr15, {2}
    14d8:	72612f6f 	rsbvc	r2, r1, #444	; 0x1bc
    14dc:	6f6e2d6d 	svcvs	0x006e2d6d
    14e0:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    14e4:	2f696261 	svccs	0x00696261
    14e8:	6d756874 	ldclvs	8, cr6, [r5, #-464]!	; 0xfffffe30
    14ec:	37762f62 	ldrbcc	r2, [r6, -r2, ror #30]!
    14f0:	6e2f6d2d 	cdpvs	13, 2, cr6, cr15, cr13, {1}
    14f4:	2f70666f 	svccs	0x0070666f
    14f8:	6c77656e 	cfldr64vs	mvdx6, [r7], #-440	; 0xfffffe48
    14fc:	6c2f6269 	sfmvs	f6, 4, [pc], #-420	; 1360 <_Min_Stack_Size+0xf60>
    1500:	2f636269 	svccs	0x00636269
    1504:	6373696d 	cmnvs	r3, #1785856	; 0x1b4000
    1508:	705f5f00 	subsvc	r5, pc, r0, lsl #30
    150c:	6e696572 	mcrvs	5, 3, r6, cr9, cr2, {3}
    1510:	615f7469 	cmpvs	pc, r9, ror #8
    1514:	79617272 	stmdbvc	r1!, {r1, r4, r5, r6, r9, ip, sp, lr}^
    1518:	6174735f 	cmnvs	r4, pc, asr r3
    151c:	47007472 	smlsdxmi	r0, r2, r4, r7
    1520:	4320554e 			; <UNDEFINED> instruction: 0x4320554e
    1524:	38203731 	stmdacc	r0!, {r0, r4, r5, r8, r9, sl, ip, sp}
    1528:	312e332e 			; <UNDEFINED> instruction: 0x312e332e
    152c:	31303220 	teqcc	r0, r0, lsr #4
    1530:	30373039 	eorscc	r3, r7, r9, lsr r0
    1534:	72282033 	eorvc	r2, r8, #51	; 0x33
    1538:	61656c65 	cmnvs	r5, r5, ror #24
    153c:	20296573 	eorcs	r6, r9, r3, ror r5
    1540:	6363675b 	cmnvs	r3, #23855104	; 0x16c0000
    1544:	622d382d 	eorvs	r3, sp, #2949120	; 0x2d0000
    1548:	636e6172 	cmnvs	lr, #-2147483620	; 0x8000001c
    154c:	65722068 	ldrbvs	r2, [r2, #-104]!	; 0xffffff98
    1550:	69736976 	ldmdbvs	r3!, {r1, r2, r4, r5, r6, r8, fp, sp, lr}^
    1554:	32206e6f 	eorcc	r6, r0, #1776	; 0x6f0
    1558:	32303337 	eorscc	r3, r0, #-603979776	; 0xdc000000
    155c:	2d205d37 	stccs	13, cr5, [r0, #-220]!	; 0xffffff24
    1560:	6f6c666d 	svcvs	0x006c666d
    1564:	612d7461 			; <UNDEFINED> instruction: 0x612d7461
    1568:	733d6962 	teqvc	sp, #1605632	; 0x188000
    156c:	2074666f 	rsbscs	r6, r4, pc, ror #12
    1570:	68746d2d 	ldmdavs	r4!, {r0, r2, r3, r5, r8, sl, fp, sp, lr}^
    1574:	20626d75 	rsbcs	r6, r2, r5, ror sp
    1578:	6c666d2d 	stclvs	13, cr6, [r6], #-180	; 0xffffff4c
    157c:	2d74616f 	ldfcse	f6, [r4, #-444]!	; 0xfffffe44
    1580:	3d696261 	sfmcc	f6, 2, [r9, #-388]!	; 0xfffffe7c
    1584:	74666f73 	strbtvc	r6, [r6], #-3955	; 0xfffff08d
    1588:	616d2d20 	cmnvs	sp, r0, lsr #26
    158c:	3d686372 	stclcc	3, cr6, [r8, #-456]!	; 0xfffffe38
    1590:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
    1594:	206d2d37 	rsbcs	r2, sp, r7, lsr sp
    1598:	2d20672d 	stccs	7, cr6, [r0, #-180]!	; 0xffffff4c
    159c:	2d20324f 	sfmcs	f3, 4, [r0, #-316]!	; 0xfffffec4
    15a0:	2d6f6e66 	stclcs	14, cr6, [pc, #-408]!	; 1410 <_binary_src_fatexample_img_size+0x10>
    15a4:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
    15a8:	006e6974 	rsbeq	r6, lr, r4, ror r9
    15ac:	72705f5f 	rsbsvc	r5, r0, #380	; 0x17c
    15b0:	696e6965 	stmdbvs	lr!, {r0, r2, r5, r6, r8, fp, sp, lr}^
    15b4:	72615f74 	rsbvc	r5, r1, #116, 30	; 0x1d0
    15b8:	5f796172 	svcpl	0x00796172
    15bc:	00646e65 	rsbeq	r6, r4, r5, ror #28
    15c0:	6e695f5f 	mcrvs	15, 3, r5, cr9, cr15, {2}
    15c4:	615f7469 	cmpvs	pc, r9, ror #8
    15c8:	79617272 	stmdbvc	r1!, {r1, r4, r5, r6, r9, ip, sp, lr}^
    15cc:	646e655f 	strbtvs	r6, [lr], #-1375	; 0xfffffaa1
    15d0:	2f2e2e00 	svccs	0x002e2e00
    15d4:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    15d8:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    15dc:	2f2e2e2f 	svccs	0x002e2e2f
    15e0:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    15e4:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    15e8:	77656e2f 	strbvc	r6, [r5, -pc, lsr #28]!
    15ec:	2f62696c 	svccs	0x0062696c
    15f0:	6362696c 	cmnvs	r2, #108, 18	; 0x1b0000
    15f4:	73696d2f 	cmnvc	r9, #3008	; 0xbc0
    15f8:	6e692f63 	cdpvs	15, 6, cr2, cr9, cr3, {3}
    15fc:	632e7469 			; <UNDEFINED> instruction: 0x632e7469
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <_binary_src_fatexample_img_size+0x10cf924>
   4:	35312820 	ldrcc	r2, [r1, #-2080]!	; 0xfffff7e0
   8:	322d383a 	eorcc	r3, sp, #3801088	; 0x3a0000
   c:	2d393130 	ldfcss	f3, [r9, #-192]!	; 0xffffff40
  10:	312d3371 			; <UNDEFINED> instruction: 0x312d3371
  14:	2e382029 	cdpcs	0, 3, cr2, cr8, cr9, {1}
  18:	20312e33 	eorscs	r2, r1, r3, lsr lr
  1c:	39313032 	ldmdbcc	r1!, {r1, r4, r5, ip, sp}
  20:	33303730 	teqcc	r0, #48, 14	; 0xc00000
  24:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
  28:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
  2c:	5b202965 	blpl	80a5c8 <_binary_src_fatexample_img_size+0x8091c8>
  30:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
  34:	72622d38 	rsbvc	r2, r2, #56, 26	; 0xe00
  38:	68636e61 	stmdavs	r3!, {r0, r5, r6, r9, sl, fp, sp, lr}^
  3c:	76657220 	strbtvc	r7, [r5], -r0, lsr #4
  40:	6f697369 	svcvs	0x00697369
  44:	3732206e 	ldrcc	r2, [r2, -lr, rrx]!
  48:	37323033 			; <UNDEFINED> instruction: 0x37323033
  4c:	Address 0x000000000000004c is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	08000150 	stmdaeq	r0, {r4, r6, r8}
  1c:	00000098 	muleq	r0, r8, r0
  20:	0000000c 	andeq	r0, r0, ip
  24:	00000000 	andeq	r0, r0, r0
  28:	080001e8 	stmdaeq	r0, {r3, r5, r6, r7, r8}
  2c:	00000124 	andeq	r0, r0, r4, lsr #2
  30:	0000000c 	andeq	r0, r0, ip
  34:	00000000 	andeq	r0, r0, r0
  38:	0800030c 	stmdaeq	r0, {r2, r3, r8, r9}
  3c:	00000048 	andeq	r0, r0, r8, asr #32
  40:	0000000c 	andeq	r0, r0, ip
  44:	00000000 	andeq	r0, r0, r0
  48:	08000354 	stmdaeq	r0, {r2, r4, r6, r8, r9}
  4c:	00000002 	andeq	r0, r0, r2
  50:	0000000c 	andeq	r0, r0, ip
  54:	00000000 	andeq	r0, r0, r0
  58:	08000356 	stmdaeq	r0, {r1, r2, r4, r6, r8, r9}
  5c:	00000002 	andeq	r0, r0, r2
  60:	0000000c 	andeq	r0, r0, ip
  64:	00000000 	andeq	r0, r0, r0
  68:	08000358 	stmdaeq	r0, {r3, r4, r6, r8, r9}
  6c:	0000000c 	andeq	r0, r0, ip
  70:	00000014 	andeq	r0, r0, r4, lsl r0
  74:	00000000 	andeq	r0, r0, r0
  78:	08000df4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, sl, fp}
  7c:	00000084 	andeq	r0, r0, r4, lsl #1
  80:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
  84:	00018e02 	andeq	r8, r1, r2, lsl #28
  88:	0000000c 	andeq	r0, r0, ip
  8c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
  90:	7c020001 	stcvc	0, cr0, [r2], {1}
  94:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  98:	0000000c 	andeq	r0, r0, ip
  9c:	00000088 	andeq	r0, r0, r8, lsl #1
  a0:	08000364 	stmdaeq	r0, {r2, r5, r6, r8, r9}
  a4:	00000002 	andeq	r0, r0, r2
  a8:	0000000c 	andeq	r0, r0, ip
  ac:	00000088 	andeq	r0, r0, r8, lsl #1
  b0:	08000366 	stmdaeq	r0, {r1, r2, r5, r6, r8, r9}
  b4:	00000002 	andeq	r0, r0, r2
  b8:	0000000c 	andeq	r0, r0, ip
  bc:	00000088 	andeq	r0, r0, r8, lsl #1
  c0:	08000368 	stmdaeq	r0, {r3, r5, r6, r8, r9}
  c4:	00000002 	andeq	r0, r0, r2
  c8:	0000000c 	andeq	r0, r0, ip
  cc:	00000088 	andeq	r0, r0, r8, lsl #1
  d0:	0800036a 	stmdaeq	r0, {r1, r3, r5, r6, r8, r9}
  d4:	00000004 	andeq	r0, r0, r4
  d8:	0000000c 	andeq	r0, r0, ip
  dc:	00000088 	andeq	r0, r0, r8, lsl #1
  e0:	0800036e 	stmdaeq	r0, {r1, r2, r3, r5, r6, r8, r9}
  e4:	00000004 	andeq	r0, r0, r4
  e8:	0000000c 	andeq	r0, r0, ip
  ec:	00000088 	andeq	r0, r0, r8, lsl #1
  f0:	08000372 	stmdaeq	r0, {r1, r4, r5, r6, r8, r9}
  f4:	0000006e 	andeq	r0, r0, lr, rrx
  f8:	0000001c 	andeq	r0, r0, ip, lsl r0
  fc:	00000088 	andeq	r0, r0, r8, lsl #1
 100:	080003e0 	stmdaeq	r0, {r5, r6, r7, r8, r9}
 104:	000000ec 	andeq	r0, r0, ip, ror #1
 108:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
 10c:	86048505 	strhi	r8, [r4], -r5, lsl #10
 110:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 114:	00000001 	andeq	r0, r0, r1
 118:	00000018 	andeq	r0, r0, r8, lsl r0
 11c:	00000088 	andeq	r0, r0, r8, lsl #1
 120:	080004cc 	stmdaeq	r0, {r2, r3, r6, r7, sl}
 124:	00000128 	andeq	r0, r0, r8, lsr #2
 128:	83100e41 	tsthi	r0, #1040	; 0x410
 12c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
 130:	00018e02 	andeq	r8, r1, r2, lsl #28
 134:	0000001c 	andeq	r0, r0, ip, lsl r0
 138:	00000088 	andeq	r0, r0, r8, lsl #1
 13c:	080005f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, sl}
 140:	0000005a 	andeq	r0, r0, sl, asr r0
 144:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
 148:	86048505 	strhi	r8, [r4], -r5, lsl #10
 14c:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 150:	00000001 	andeq	r0, r0, r1
 154:	0000001c 	andeq	r0, r0, ip, lsl r0
 158:	00000088 	andeq	r0, r0, r8, lsl #1
 15c:	0800064e 	stmdaeq	r0, {r1, r2, r3, r6, r9, sl}
 160:	0000005a 	andeq	r0, r0, sl, asr r0
 164:	83180e41 	tsthi	r8, #1040	; 0x410
 168:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
 16c:	87038604 	strhi	r8, [r3, -r4, lsl #12]
 170:	00018e02 	andeq	r8, r1, r2, lsl #28
 174:	00000018 	andeq	r0, r0, r8, lsl r0
 178:	00000088 	andeq	r0, r0, r8, lsl #1
 17c:	080006a8 	stmdaeq	r0, {r3, r5, r7, r9, sl}
 180:	00000058 	andeq	r0, r0, r8, asr r0
 184:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 188:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
 18c:	00000001 	andeq	r0, r0, r1
 190:	00000020 	andeq	r0, r0, r0, lsr #32
 194:	00000088 	andeq	r0, r0, r8, lsl #1
 198:	08000700 	stmdaeq	r0, {r8, r9, sl}
 19c:	00000118 	andeq	r0, r0, r8, lsl r1
 1a0:	84180e41 	ldrhi	r0, [r8], #-3649	; 0xfffff1bf
 1a4:	86038504 	strhi	r8, [r3], -r4, lsl #10
 1a8:	02018e02 	andeq	r8, r1, #2, 28
 1ac:	100e0a46 	andne	r0, lr, r6, asr #20
 1b0:	00000b41 	andeq	r0, r0, r1, asr #22
 1b4:	0000000c 	andeq	r0, r0, ip
 1b8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 1bc:	7c020001 	stcvc	0, cr0, [r2], {1}
 1c0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 1c4:	00000018 	andeq	r0, r0, r8, lsl r0
 1c8:	000001b4 			; <UNDEFINED> instruction: 0x000001b4
 1cc:	08000818 	stmdaeq	r0, {r3, r4, fp}
 1d0:	000000dc 	ldrdeq	r0, [r0], -ip
 1d4:	84100e49 	ldrhi	r0, [r0], #-3657	; 0xfffff1b7
 1d8:	86038504 	strhi	r8, [r3], -r4, lsl #10
 1dc:	00018e02 	andeq	r8, r1, r2, lsl #28
 1e0:	0000000c 	andeq	r0, r0, ip
 1e4:	000001b4 			; <UNDEFINED> instruction: 0x000001b4
 1e8:	080008f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, fp}
 1ec:	0000007c 	andeq	r0, r0, ip, ror r0
 1f0:	0000000c 	andeq	r0, r0, ip
 1f4:	000001b4 			; <UNDEFINED> instruction: 0x000001b4
 1f8:	08000970 	stmdaeq	r0, {r4, r5, r6, r8, fp}
 1fc:	00000018 	andeq	r0, r0, r8, lsl r0
 200:	00000014 	andeq	r0, r0, r4, lsl r0
 204:	000001b4 			; <UNDEFINED> instruction: 0x000001b4
 208:	08000988 	stmdaeq	r0, {r3, r7, r8, fp}
 20c:	00000054 	andeq	r0, r0, r4, asr r0
 210:	83080e41 	movwhi	r0, #36417	; 0x8e41
 214:	00018e02 	andeq	r8, r1, r2, lsl #28
 218:	0000000c 	andeq	r0, r0, ip
 21c:	000001b4 			; <UNDEFINED> instruction: 0x000001b4
 220:	080009dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, fp}
 224:	00000002 	andeq	r0, r0, r2
 228:	00000014 	andeq	r0, r0, r4, lsl r0
 22c:	000001b4 			; <UNDEFINED> instruction: 0x000001b4
 230:	080009de 	stmdaeq	r0, {r1, r2, r3, r4, r6, r7, r8, fp}
 234:	0000007e 	andeq	r0, r0, lr, ror r0
 238:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
 23c:	00018e02 	andeq	r8, r1, r2, lsl #28
 240:	0000000c 	andeq	r0, r0, ip
 244:	000001b4 			; <UNDEFINED> instruction: 0x000001b4
 248:	08000a5c 	stmdaeq	r0, {r2, r3, r4, r6, r9, fp}
 24c:	0000003c 	andeq	r0, r0, ip, lsr r0
 250:	0000000c 	andeq	r0, r0, ip
 254:	000001b4 			; <UNDEFINED> instruction: 0x000001b4
 258:	08000a98 	stmdaeq	r0, {r3, r4, r7, r9, fp}
 25c:	00000024 	andeq	r0, r0, r4, lsr #32
 260:	0000000c 	andeq	r0, r0, ip
 264:	000001b4 			; <UNDEFINED> instruction: 0x000001b4
 268:	08000abc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9, fp}
 26c:	00000050 	andeq	r0, r0, r0, asr r0
 270:	0000000c 	andeq	r0, r0, ip
 274:	000001b4 			; <UNDEFINED> instruction: 0x000001b4
 278:	08000b0c 	stmdaeq	r0, {r2, r3, r8, r9, fp}
 27c:	00000040 	andeq	r0, r0, r0, asr #32
 280:	0000000c 	andeq	r0, r0, ip
 284:	000001b4 			; <UNDEFINED> instruction: 0x000001b4
 288:	08000b4c 	stmdaeq	r0, {r2, r3, r6, r8, r9, fp}
 28c:	00000044 	andeq	r0, r0, r4, asr #32
 290:	0000000c 	andeq	r0, r0, ip
 294:	000001b4 			; <UNDEFINED> instruction: 0x000001b4
 298:	08000b90 	stmdaeq	r0, {r4, r7, r8, r9, fp}
 29c:	0000005c 	andeq	r0, r0, ip, asr r0
 2a0:	0000000c 	andeq	r0, r0, ip
 2a4:	000001b4 			; <UNDEFINED> instruction: 0x000001b4
 2a8:	08000bec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, fp}
 2ac:	00000050 	andeq	r0, r0, r0, asr r0
 2b0:	0000000c 	andeq	r0, r0, ip
 2b4:	000001b4 			; <UNDEFINED> instruction: 0x000001b4
 2b8:	08000c3c 	stmdaeq	r0, {r2, r3, r4, r5, sl, fp}
 2bc:	00000090 	muleq	r0, r0, r0
 2c0:	0000001c 	andeq	r0, r0, ip, lsl r0
 2c4:	000001b4 			; <UNDEFINED> instruction: 0x000001b4
 2c8:	08000ccc 	stmdaeq	r0, {r2, r3, r6, r7, sl, fp}
 2cc:	00000094 	muleq	r0, r4, r0
 2d0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
 2d4:	63018e02 	movwvs	r8, #7682	; 0x1e02
 2d8:	0ec4ce0a 	cdpeq	14, 12, cr12, cr4, cr10, {0}
 2dc:	000b4200 	andeq	r4, fp, r0, lsl #4
 2e0:	0000000c 	andeq	r0, r0, ip
 2e4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 2e8:	7c020001 	stcvc	0, cr0, [r2], {1}
 2ec:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 2f0:	00000018 	andeq	r0, r0, r8, lsl r0
 2f4:	000002e0 	andeq	r0, r0, r0, ror #5
 2f8:	08000d60 	stmdaeq	r0, {r5, r6, r8, sl, fp}
 2fc:	00000048 	andeq	r0, r0, r8, asr #32
 300:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
 304:	86038504 	strhi	r8, [r3], -r4, lsl #10
 308:	00018e02 	andeq	r8, r1, r2, lsl #28
