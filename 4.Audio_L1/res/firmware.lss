
res/firmware.elf:     file format elf32-littlearm


Disassembly of section .isr_vector:

08000000 <g_pfnVectors>:
 8000000:	20007fff 	strdcs	r7, [r0], -pc	; <UNPREDICTABLE>
 8000004:	08000c5d 	stmdaeq	r0, {r0, r2, r3, r4, r6, sl, fp}
 8000008:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 800000c:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 8000010:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 8000014:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 8000018:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
	...
 800002c:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 8000030:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 8000034:	00000000 	andeq	r0, r0, r0
 8000038:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 800003c:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 8000040:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 8000044:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 8000048:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 800004c:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 8000050:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 8000054:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 8000058:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 800005c:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 8000060:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 8000064:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 8000068:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 800006c:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 8000070:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 8000074:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 8000078:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 800007c:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 8000080:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 8000084:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 8000088:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 800008c:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 8000090:	08000619 	stmdaeq	r0, {r0, r3, r4, r9, sl}
 8000094:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 8000098:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 800009c:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 80000a0:	00000000 	andeq	r0, r0, r0
 80000a4:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 80000a8:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 80000ac:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 80000b0:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 80000b4:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 80000b8:	08000aa1 	stmdaeq	r0, {r0, r5, r7, r9, fp}
 80000bc:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 80000c0:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 80000c4:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 80000c8:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 80000cc:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 80000d0:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 80000d4:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 80000d8:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 80000dc:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 80000e0:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 80000e4:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 80000e8:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 80000ec:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 80000f0:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 80000f4:	00000000 	andeq	r0, r0, r0
 80000f8:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 80000fc:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
	...
 8000108:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 800010c:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 8000110:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 8000114:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 8000118:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
 800011c:	00000000 	andeq	r0, r0, r0
 8000120:	08000ca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp}
	...
 8000138:	f108f85f 			; <UNDEFINED> instruction: 0xf108f85f

Disassembly of section .text:

0800013c <init32-0x14>:
 800013c:	08000fec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, sl, fp}
 8000140:	20000000 	andcs	r0, r0, r0
 8000144:	20000004 	andcs	r0, r0, r4
 8000148:	20000004 	andcs	r0, r0, r4
 800014c:	2000005c 	andcs	r0, r0, ip, asr r0

08000150 <init32>:
#define CLOCK_FAIL_LSI -4

#define RTC_LSE 1

void init32(uint8_t reinit){
  RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 8000150:	4b21      	ldr	r3, [pc, #132]	; (80001d8 <init32+0x88>)
  PWR->CR |= PWR_CR_DBP;
 8000152:	4922      	ldr	r1, [pc, #136]	; (80001dc <init32+0x8c>)
  RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 8000154:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8000156:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800015a:	625a      	str	r2, [r3, #36]	; 0x24
  PWR->CR |= PWR_CR_DBP;
 800015c:	680a      	ldr	r2, [r1, #0]
 800015e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8000162:	600a      	str	r2, [r1, #0]
  
  if(!reinit){
    //if(RCC->CSR & RCC_CSR_RTCEN)return;
  }
  
  RCC->CSR |= RCC_CSR_RTCRST;
 8000164:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000166:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 800016a:	635a      	str	r2, [r3, #52]	; 0x34
  RCC->CSR &=~RCC_CSR_RTCRST;
 800016c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800016e:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8000172:	635a      	str	r2, [r3, #52]	; 0x34
  
#if RTC_LSE
  RCC->CSR |= RCC_CSR_LSEON; while(!(RCC->CSR & RCC_CSR_LSERDY)){}
 8000174:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000176:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800017a:	635a      	str	r2, [r3, #52]	; 0x34
 800017c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800017e:	0591      	lsls	r1, r2, #22
 8000180:	d5fc      	bpl.n	800017c <init32+0x2c>
#else
  RCC->CSR |= RCC_CSR_LSION; while(!(RCC->CSR & RCC_CSR_LSIRDY)){}
#endif
  
  RCC->CSR &=~RCC_CSR_RTCSEL;
 8000182:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000184:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 8000188:	635a      	str	r2, [r3, #52]	; 0x34
#if RTC_LSE
  RCC->CSR |= RCC_CSR_RTCSEL_LSE; // NOCLOCK / LSI / LSE / HSE
 800018a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800018c:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8000190:	635a      	str	r2, [r3, #52]	; 0x34
#else
  RCC->CSR |= RCC_CSR_RTCSEL_LSI; // NOCLOCK / LSI / LSE / HSE
#endif
  RCC->CSR |= RCC_CSR_RTCEN;
 8000192:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000194:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8000198:	635a      	str	r2, [r3, #52]	; 0x34
  
  RTC->WPR = 0xCA;
 800019a:	22ca      	movs	r2, #202	; 0xca
 800019c:	4b10      	ldr	r3, [pc, #64]	; (80001e0 <init32+0x90>)
 800019e:	625a      	str	r2, [r3, #36]	; 0x24
  RTC->WPR = 0x53;
 80001a0:	2253      	movs	r2, #83	; 0x53
 80001a2:	625a      	str	r2, [r3, #36]	; 0x24
  RTC->ISR |= RTC_ISR_INIT;
 80001a4:	68da      	ldr	r2, [r3, #12]
 80001a6:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80001aa:	60da      	str	r2, [r3, #12]
  while(!(RTC->ISR & RTC_ISR_INITF)){}
 80001ac:	68da      	ldr	r2, [r3, #12]
 80001ae:	0652      	lsls	r2, r2, #25
 80001b0:	d5fc      	bpl.n	80001ac <init32+0x5c>
  //LSE
  RTC->PRER &=~(RTC_PRER_PREDIV_A | RTC_PRER_PREDIV_S);
 80001b2:	6919      	ldr	r1, [r3, #16]
 80001b4:	4a0b      	ldr	r2, [pc, #44]	; (80001e4 <init32+0x94>)
 80001b6:	400a      	ands	r2, r1
 80001b8:	611a      	str	r2, [r3, #16]
#if RTC_LSE
  RTC->PRER |= 255;
 80001ba:	691a      	ldr	r2, [r3, #16]
 80001bc:	f042 02ff 	orr.w	r2, r2, #255	; 0xff
 80001c0:	611a      	str	r2, [r3, #16]
  RTC->PRER |= (127 << 16);
 80001c2:	691a      	ldr	r2, [r3, #16]
 80001c4:	f442 02fe 	orr.w	r2, r2, #8323072	; 0x7f0000
 80001c8:	611a      	str	r2, [r3, #16]
  //RTC->TR &=~RTC_TR_SU;
  //RTC->DR = 0;
  //RTC->DR &=~RTC_DR_DU;
  
  
  RTC->ISR &=~RTC_ISR_INIT;
 80001ca:	68da      	ldr	r2, [r3, #12]
 80001cc:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80001d0:	60da      	str	r2, [r3, #12]
  RTC->WPR = 0xFF;
 80001d2:	22ff      	movs	r2, #255	; 0xff
 80001d4:	625a      	str	r2, [r3, #36]	; 0x24
}
 80001d6:	4770      	bx	lr
 80001d8:	40023800 	andmi	r3, r2, r0, lsl #16
 80001dc:	40007000 	andmi	r7, r0, r0
 80001e0:	40002800 	andmi	r2, r0, r0, lsl #16
 80001e4:	ff808000 			; <UNDEFINED> instruction: 0xff808000

080001e8 <clock_HS>:
int8_t clock_HS(int8_t quartz){
  uint16_t i;
  uint32_t tmp;
  
  //clock by MSI
  tmp = RCC->CFGR;
 80001e8:	4b45      	ldr	r3, [pc, #276]	; (8000300 <clock_HS+0x118>)
 80001ea:	689a      	ldr	r2, [r3, #8]
  tmp &=~RCC_CFGR_SW;
 80001ec:	f022 0203 	bic.w	r2, r2, #3
  tmp |= RCC_CFGR_SW_MSI; // MSI / HSI / HSE / PLL
  RCC->CFGR = tmp;
 80001f0:	609a      	str	r2, [r3, #8]
 80001f2:	f640 72ff 	movw	r2, #4095	; 0xfff
  for(i=0;i<0x0FFF;i++){
    if((RCC->CFGR & RCC_CFGR_SWS)==RCC_CFGR_SWS_MSI){i=0x1FFF; break;}
 80001f6:	6899      	ldr	r1, [r3, #8]
 80001f8:	f011 0f0c 	tst.w	r1, #12
 80001fc:	d047      	beq.n	800028e <clock_HS+0xa6>
 80001fe:	3a01      	subs	r2, #1
 8000200:	b292      	uxth	r2, r2
  for(i=0;i<0x0FFF;i++){
 8000202:	2a00      	cmp	r2, #0
 8000204:	d1f7      	bne.n	80001f6 <clock_HS+0xe>
  }
  if(i != 0x1FFF)return CLOCK_FAIL_MSI;
 8000206:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800020a:	4770      	bx	lr
 800020c:	2000      	movs	r0, #0
    }
    if(i != 0x1FFF)return CLOCK_FAIL_HSI;
  }
  
  // configure flash
  FLASH->ACR |= FLASH_ACR_ACC64;
 800020e:	4b3d      	ldr	r3, [pc, #244]	; (8000304 <clock_HS+0x11c>)
 8000210:	681a      	ldr	r2, [r3, #0]
 8000212:	f042 0204 	orr.w	r2, r2, #4
 8000216:	601a      	str	r2, [r3, #0]
  FLASH->ACR |= FLASH_ACR_PRFTEN;
 8000218:	681a      	ldr	r2, [r3, #0]
 800021a:	f042 0202 	orr.w	r2, r2, #2
 800021e:	601a      	str	r2, [r3, #0]
  FLASH->ACR |= FLASH_ACR_LATENCY;
 8000220:	681a      	ldr	r2, [r3, #0]
 8000222:	f042 0201 	orr.w	r2, r2, #1
 8000226:	601a      	str	r2, [r3, #0]

  
  tmp = RCC->CFGR;
 8000228:	4a35      	ldr	r2, [pc, #212]	; (8000300 <clock_HS+0x118>)
 800022a:	6893      	ldr	r3, [r2, #8]
  tmp &=~ (RCC_CFGR_PLLSRC | RCC_CFGR_PLLMUL | RCC_CFGR_PLLDIV);
 800022c:	f423 037d 	bic.w	r3, r3, #16580608	; 0xfd0000
  
  if(quartz){
 8000230:	b1a8      	cbz	r0, 800025e <clock_HS+0x76>
    tmp |= RCC_CFGR_PLLSRC;  //PLL src = HSE
    tmp |= RCC_CFGR_PLLMUL12;//PLLCLK = F_HSE * 12 = 96 MHz
    tmp |= RCC_CFGR_PLLDIV3; //PLLCLK = F_HSE * 12 / 3 = 32 MHz
 8000232:	f443 0311 	orr.w	r3, r3, #9502720	; 0x910000
  tmp |= RCC_CFGR_HPRE_DIV1;
  //AHB = PLLCLK/HPRE = 32 MHz
  tmp &=~RCC_CFGR_PPRE2;
  tmp |= RCC_CFGR_PPRE2_DIV1;
  //APB2 = HCLK/PPRE2 = 32 MHz
  tmp &=~RCC_CFGR_PPRE1;
 8000236:	4934      	ldr	r1, [pc, #208]	; (8000308 <clock_HS+0x120>)
 8000238:	4019      	ands	r1, r3
  tmp |= RCC_CFGR_PPRE1_DIV1;
  //APB1 = HCLK/PPRE1 = 32 MHz
  RCC->CFGR = tmp;
 800023a:	6091      	str	r1, [r2, #8]
  
  RCC->CR |= RCC_CR_PLLON;
 800023c:	6813      	ldr	r3, [r2, #0]
 800023e:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000242:	6013      	str	r3, [r2, #0]
 8000244:	f640 73ff 	movw	r3, #4095	; 0xfff
  for(i=0;i<0x0FFF;i++){
    if(RCC->CR & RCC_CR_PLLRDY){i=0x1FFF; break;}
 8000248:	4a2d      	ldr	r2, [pc, #180]	; (8000300 <clock_HS+0x118>)
 800024a:	6811      	ldr	r1, [r2, #0]
 800024c:	0189      	lsls	r1, r1, #6
 800024e:	d40d      	bmi.n	800026c <clock_HS+0x84>
 8000250:	3b01      	subs	r3, #1
 8000252:	b29b      	uxth	r3, r3
  for(i=0;i<0x0FFF;i++){
 8000254:	2b00      	cmp	r3, #0
 8000256:	d1f8      	bne.n	800024a <clock_HS+0x62>
  }
  if(i != 0x1FFF)return CLOCK_FAIL_PLL; //can not enable PLL
 8000258:	f06f 0002 	mvn.w	r0, #2
 800025c:	4770      	bx	lr
    tmp |= RCC_CFGR_PLLDIV3; //PLLCLK = F_HSI * 6 / 3 = 32 MHz
 800025e:	f443 0308 	orr.w	r3, r3, #8912896	; 0x880000
 8000262:	e7e8      	b.n	8000236 <clock_HS+0x4e>
  tmp |= RCC_CFGR_SW_PLL; // MSI / HSI / HSE / PLL
  RCC->CFGR = tmp;
  for(i=0;i<0x0FFF;i++){
    if((RCC->CFGR & RCC_CFGR_SWS)==RCC_CFGR_SWS_PLL){i=0x1FFF; break;}
  }
  if(i != 0x1FFF)return CLOCK_FAIL_PLL;
 8000264:	3000      	adds	r0, #0
 8000266:	bf18      	it	ne
 8000268:	2001      	movne	r0, #1
  
  if(quartz)return CLOCK_HSE;
    else return CLOCK_HSI;
}
 800026a:	4770      	bx	lr
  tmp = RCC->CFGR;
 800026c:	6893      	ldr	r3, [r2, #8]
    if((RCC->CFGR & RCC_CFGR_SWS)==RCC_CFGR_SWS_PLL){i=0x1FFF; break;}
 800026e:	4924      	ldr	r1, [pc, #144]	; (8000300 <clock_HS+0x118>)
  tmp |= RCC_CFGR_SW_PLL; // MSI / HSI / HSE / PLL
 8000270:	f043 0303 	orr.w	r3, r3, #3
  RCC->CFGR = tmp;
 8000274:	6093      	str	r3, [r2, #8]
 8000276:	f640 73ff 	movw	r3, #4095	; 0xfff
    if((RCC->CFGR & RCC_CFGR_SWS)==RCC_CFGR_SWS_PLL){i=0x1FFF; break;}
 800027a:	688a      	ldr	r2, [r1, #8]
 800027c:	f002 020c 	and.w	r2, r2, #12
 8000280:	2a0c      	cmp	r2, #12
 8000282:	d0ef      	beq.n	8000264 <clock_HS+0x7c>
 8000284:	3b01      	subs	r3, #1
 8000286:	b29b      	uxth	r3, r3
  for(i=0;i<0x0FFF;i++){
 8000288:	2b00      	cmp	r3, #0
 800028a:	d1f6      	bne.n	800027a <clock_HS+0x92>
 800028c:	e7e4      	b.n	8000258 <clock_HS+0x70>
  RCC->CR &=~ RCC_CR_HSEON;
 800028e:	681a      	ldr	r2, [r3, #0]
 8000290:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8000294:	601a      	str	r2, [r3, #0]
  RCC->CR &=~ RCC_CR_HSION;
 8000296:	681a      	ldr	r2, [r3, #0]
 8000298:	f022 0201 	bic.w	r2, r2, #1
 800029c:	601a      	str	r2, [r3, #0]
  RCC->CR &=~ RCC_CR_HSEBYP;
 800029e:	681a      	ldr	r2, [r3, #0]
 80002a0:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 80002a4:	601a      	str	r2, [r3, #0]
  RCC->CR &=~ RCC_CR_PLLON;
 80002a6:	681a      	ldr	r2, [r3, #0]
 80002a8:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 80002ac:	601a      	str	r2, [r3, #0]
  RCC->CR &=~ RCC_CR_RTCPRE;
 80002ae:	681a      	ldr	r2, [r3, #0]
 80002b0:	f022 42c0 	bic.w	r2, r2, #1610612736	; 0x60000000
 80002b4:	601a      	str	r2, [r3, #0]
  RCC->CR |= RCC_CR_RTCPRE_1; //0b00=2 MHz ; 0b01=4MHz ; 0b10=8MHz ; 0b11=16MHz
 80002b6:	681a      	ldr	r2, [r3, #0]
 80002b8:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 80002bc:	601a      	str	r2, [r3, #0]
  if(quartz){
 80002be:	b168      	cbz	r0, 80002dc <clock_HS+0xf4>
    RCC->CR |= RCC_CR_HSEON;
 80002c0:	681a      	ldr	r2, [r3, #0]
 80002c2:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80002c6:	601a      	str	r2, [r3, #0]
 80002c8:	f640 73ff 	movw	r3, #4095	; 0xfff
      if(RCC->CR & RCC_CR_HSERDY){i=0x1FFF; break;}
 80002cc:	4a0c      	ldr	r2, [pc, #48]	; (8000300 <clock_HS+0x118>)
 80002ce:	6811      	ldr	r1, [r2, #0]
 80002d0:	0389      	lsls	r1, r1, #14
 80002d2:	d49c      	bmi.n	800020e <clock_HS+0x26>
 80002d4:	3b01      	subs	r3, #1
 80002d6:	b29b      	uxth	r3, r3
    for(i=0;i<0x0FFF;i++){
 80002d8:	2b00      	cmp	r3, #0
 80002da:	d1f8      	bne.n	80002ce <clock_HS+0xe6>
    RCC->CR |= RCC_CR_HSION;
 80002dc:	4a08      	ldr	r2, [pc, #32]	; (8000300 <clock_HS+0x118>)
 80002de:	6813      	ldr	r3, [r2, #0]
 80002e0:	f043 0301 	orr.w	r3, r3, #1
 80002e4:	6013      	str	r3, [r2, #0]
 80002e6:	f640 73ff 	movw	r3, #4095	; 0xfff
      if(RCC->CR & RCC_CR_HSIRDY){i=0x1FFF; break;}
 80002ea:	6811      	ldr	r1, [r2, #0]
 80002ec:	0788      	lsls	r0, r1, #30
 80002ee:	d48d      	bmi.n	800020c <clock_HS+0x24>
 80002f0:	3b01      	subs	r3, #1
 80002f2:	b29b      	uxth	r3, r3
    for(i=0;i<0x0FFF;i++){
 80002f4:	2b00      	cmp	r3, #0
 80002f6:	d1f8      	bne.n	80002ea <clock_HS+0x102>
    if(i != 0x1FFF)return CLOCK_FAIL_HSI;
 80002f8:	f06f 0001 	mvn.w	r0, #1
 80002fc:	4770      	bx	lr
 80002fe:	bf00      	nop
 8000300:	40023800 	andmi	r3, r2, r0, lsl #16
 8000304:	40023c00 	andmi	r3, r2, r0, lsl #24
 8000308:	ff9bc00f 			; <UNDEFINED> instruction: 0xff9bc00f

0800030c <clock_MS>:
void clock_MS(){
  uint16_t i;
  uint32_t tmp;
  
  //clock by MSI
  tmp = RCC->CFGR;
 800030c:	4b10      	ldr	r3, [pc, #64]	; (8000350 <clock_MS+0x44>)
 800030e:	689a      	ldr	r2, [r3, #8]
  tmp &=~RCC_CFGR_SW;
 8000310:	f022 0203 	bic.w	r2, r2, #3
  tmp |= RCC_CFGR_SW_MSI; // MSI / HSI / HSE / PLL
  RCC->CFGR = tmp;
 8000314:	609a      	str	r2, [r3, #8]
 8000316:	f640 72ff 	movw	r2, #4095	; 0xfff
  for(i=0;i<0x0FFF;i++){
    if((RCC->CFGR & RCC_CFGR_SWS)==RCC_CFGR_SWS_MSI){i=0x1FFF; break;}
 800031a:	6899      	ldr	r1, [r3, #8]
 800031c:	f011 0f0c 	tst.w	r1, #12
 8000320:	d004      	beq.n	800032c <clock_MS+0x20>
 8000322:	3a01      	subs	r2, #1
 8000324:	b292      	uxth	r2, r2
  for(i=0;i<0x0FFF;i++){
 8000326:	2a00      	cmp	r2, #0
 8000328:	d1f7      	bne.n	800031a <clock_MS+0xe>
 800032a:	4770      	bx	lr
  }
  if(i != 0x1FFF)return;;
  
  //disable HSE, PLL
  RCC->CR &=~ RCC_CR_HSEON;
 800032c:	681a      	ldr	r2, [r3, #0]
 800032e:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8000332:	601a      	str	r2, [r3, #0]
  RCC->CR &=~ RCC_CR_HSION;
 8000334:	681a      	ldr	r2, [r3, #0]
 8000336:	f022 0201 	bic.w	r2, r2, #1
 800033a:	601a      	str	r2, [r3, #0]
  RCC->CR &=~ RCC_CR_HSEBYP;
 800033c:	681a      	ldr	r2, [r3, #0]
 800033e:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8000342:	601a      	str	r2, [r3, #0]
  RCC->CR &=~ RCC_CR_PLLON;
 8000344:	681a      	ldr	r2, [r3, #0]
 8000346:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 800034a:	601a      	str	r2, [r3, #0]
}
 800034c:	4770      	bx	lr
 800034e:	bf00      	nop
 8000350:	40023800 	andmi	r3, r2, r0, lsl #16

08000354 <_init>:
 8000354:	4770      	bx	lr

08000356 <SystemInit>:
#include "hardware.h"
#include "usb_lib.h"
#include "clock.h"

void __attribute__((weak)) _init(void){}
void __attribute__((weak)) SystemInit(void){}
 8000356:	4770      	bx	lr

08000358 <sleep>:

void sleep(uint32_t time){
  while(time--)asm volatile("nop");
 8000358:	f110 30ff 	adds.w	r0, r0, #4294967295	; 0xffffffff
 800035c:	d200      	bcs.n	8000360 <sleep+0x8>
}
 800035e:	4770      	bx	lr
  while(time--)asm volatile("nop");
 8000360:	bf00      	nop
 8000362:	e7f9      	b.n	8000358 <sleep>

#define STM32ENDPOINTS          8
#define usb_epdata   ((volatile usb_epdata_t*)(USB_PMAADDR))
#define LASTADDR_DEFAULT                (STM32ENDPOINTS * 8)

__attribute__((weak))void usb_class_init(){}
 8000364:	4770      	bx	lr

08000366 <usb_class_disconnect>:
 8000366:	4770      	bx	lr
 8000368:	4770      	bx	lr
__attribute__((weak))void usb_class_disconnect(){}
__attribute__((weak))void usb_class_poll(){}
__attribute__((weak))char usb_class_ep0_in(config_pack_t *req, void **data, uint16_t *size){return 0;}
 800036a:	2000      	movs	r0, #0
 800036c:	4770      	bx	lr

0800036e <usb_class_ep0_out>:
__attribute__((weak))char usb_class_ep0_out(config_pack_t *req, uint16_t offset, uint16_t rx_size){return 0;}
 800036e:	2000      	movs	r0, #0
 8000370:	4770      	bx	lr

08000372 <USB_setup>:
epfunc_t epfunc_out[STM32ENDPOINTS];

static config_pack_t setup_packet;

void USB_setup(){
  RCC->APB1ENR |= RCC_APB1ENR_USBEN;
 8000372:	4b16      	ldr	r3, [pc, #88]	; (80003cc <USB_setup+0x5a>)
 8000374:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8000376:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 800037a:	625a      	str	r2, [r3, #36]	; 0x24
  RCC->APB2ENR |= RCC_APB2ENR_SYSCFGEN;
 800037c:	6a1a      	ldr	r2, [r3, #32]
 800037e:	f042 0201 	orr.w	r2, r2, #1
 8000382:	621a      	str	r2, [r3, #32]
  
  SYSCFG->PMC &=~ SYSCFG_PMC_USB_PU;
 8000384:	4a12      	ldr	r2, [pc, #72]	; (80003d0 <USB_setup+0x5e>)
 8000386:	6853      	ldr	r3, [r2, #4]
 8000388:	f023 0301 	bic.w	r3, r3, #1
 800038c:	6053      	str	r3, [r2, #4]
  USB->CNTR   = USB_CNTR_FRES; // Force USB Reset
 800038e:	2201      	movs	r2, #1
 8000390:	4b10      	ldr	r3, [pc, #64]	; (80003d4 <USB_setup+0x62>)
 8000392:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
 8000396:	4a10      	ldr	r2, [pc, #64]	; (80003d8 <USB_setup+0x66>)
  for(uint32_t ctr = 0; ctr < 100000; ++ctr) asm volatile("nop"); // wait >1ms
 8000398:	bf00      	nop
 800039a:	3a01      	subs	r2, #1
 800039c:	d1fc      	bne.n	8000398 <USB_setup+0x26>
  USB->CNTR   = 0;
 800039e:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
  USB->BTABLE = 0;
 80003a2:	f8a3 2050 	strh.w	r2, [r3, #80]	; 0x50
  USB->DADDR  = 0;
 80003a6:	f8a3 204c 	strh.w	r2, [r3, #76]	; 0x4c
  USB->ISTR   = 0;
 80003aa:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
  USB->CNTR   = USB_CNTR_RESETM | USB_CNTR_WKUPM;
 80003ae:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
 80003b2:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
 * Enable a device specific interupt in the NVIC interrupt controller.
 * The interrupt number cannot be a negative value.
 */
static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
 80003b6:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
 80003ba:	4b08      	ldr	r3, [pc, #32]	; (80003dc <USB_setup+0x6a>)
 80003bc:	601a      	str	r2, [r3, #0]
  NVIC_EnableIRQ(USB_LP_IRQn);
  SYSCFG->PMC |= SYSCFG_PMC_USB_PU;
 80003be:	4a04      	ldr	r2, [pc, #16]	; (80003d0 <USB_setup+0x5e>)
 80003c0:	6853      	ldr	r3, [r2, #4]
 80003c2:	f043 0301 	orr.w	r3, r3, #1
 80003c6:	6053      	str	r3, [r2, #4]
}
 80003c8:	4770      	bx	lr
 80003ca:	bf00      	nop
 80003cc:	40023800 	andmi	r3, r2, r0, lsl #16
 80003d0:	40010000 	andmi	r0, r1, r0
 80003d4:	40005c00 	andmi	r5, r0, r0, lsl #24
 80003d8:	000186a0 	andeq	r8, r1, r0, lsr #13
 80003dc:	e000e100 	and	lr, r0, r0, lsl #2

080003e0 <usb_ep_init>:
    if( bytesread >= setup_packet.wLength )usb_ep_write(0, NULL, 0);
  }
}

static uint16_t lastaddr = LASTADDR_DEFAULT;
void usb_ep_init(uint8_t epnum, uint8_t ep_type, uint16_t size, epfunc_t func){
 80003e0:	b5f0      	push	{r4, r5, r6, r7, lr}
  uint8_t dir_in = (epnum & 0x80);
  epnum &= 0x0F;
 80003e2:	f000 060f 	and.w	r6, r0, #15
  
  if(dir_in){
 80003e6:	00b5      	lsls	r5, r6, #2
 80003e8:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 80003ec:	f505 45b8 	add.w	r5, r5, #23552	; 0x5c00
    ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 80003f0:	882c      	ldrh	r4, [r5, #0]
 80003f2:	b240      	sxtb	r0, r0
  if(dir_in){
 80003f4:	2800      	cmp	r0, #0
    ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 80003f6:	bfb5      	itete	lt
 80003f8:	f024 04c0 	biclt.w	r4, r4, #192	; 0xc0
  }else{
    ENDP_STAT_RX(epnum, USB_EP_RX_DIS);
 80003fc:	f024 04f0 	bicge.w	r4, r4, #240	; 0xf0
    ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 8000400:	0524      	lsllt	r4, r4, #20
    ENDP_STAT_RX(epnum, USB_EP_RX_DIS);
 8000402:	04a4      	lslge	r4, r4, #18
    ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 8000404:	bfb4      	ite	lt
 8000406:	0d24      	lsrlt	r4, r4, #20
    ENDP_STAT_RX(epnum, USB_EP_RX_DIS);
 8000408:	0ca4      	lsrge	r4, r4, #18
 800040a:	f444 4400 	orr.w	r4, r4, #32768	; 0x8000
 800040e:	f044 0480 	orr.w	r4, r4, #128	; 0x80
 8000412:	802c      	strh	r4, [r5, #0]
  }
  
  uint16_t buf = USB_EPx(epnum);
 8000414:	882c      	ldrh	r4, [r5, #0]
  buf = (buf & ~(USB_EP_DTOG_RX | USB_EP_DTOG_TX | USB_EPTX_STAT | USB_EPRX_STAT)) | USB_EP_CTR_RX | USB_EP_CTR_TX;
  buf = (buf & ~USB_EPADDR_FIELD) | epnum;
  //buf = (buf & ~USB_EP_T_FIELD) | ep_type;
  buf &=~ USB_EP_T_FIELD;
  switch(ep_type){
 8000416:	2902      	cmp	r1, #2
 8000418:	f404 6410 	and.w	r4, r4, #2304	; 0x900
 800041c:	ea44 0406 	orr.w	r4, r4, r6
 8000420:	d005      	beq.n	800042e <usb_ep_init+0x4e>
 8000422:	2903      	cmp	r1, #3
 8000424:	d023      	beq.n	800046e <usb_ep_init+0x8e>
 8000426:	bb29      	cbnz	r1, 8000474 <usb_ep_init+0x94>
    case USB_ENDP_CTRL: buf |= USB_EP_CONTROL; break;
 8000428:	f444 4102 	orr.w	r1, r4, #33280	; 0x8200
 800042c:	e001      	b.n	8000432 <usb_ep_init+0x52>
  buf &=~ USB_EP_T_FIELD;
 800042e:	f444 4100 	orr.w	r1, r4, #32768	; 0x8000
    case USB_ENDP_BULK: buf |= USB_EP_BULK; break;
    case USB_ENDP_INTR: buf |= USB_EP_INTERRUPT; break;
    default: buf |= USB_EP_ISOCHRONOUS; //в дескрипторах изохронные точки могут иметь расширенные настройки
 8000432:	f041 0180 	orr.w	r1, r1, #128	; 0x80
  }
  USB_EPx(epnum) = buf;
 8000436:	4f22      	ldr	r7, [pc, #136]	; (80004c0 <usb_ep_init+0xe0>)
 8000438:	8029      	strh	r1, [r5, #0]
  
  if( dir_in ){
 800043a:	0131      	lsls	r1, r6, #4
 800043c:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8000440:	2800      	cmp	r0, #0
 8000442:	883c      	ldrh	r4, [r7, #0]
 8000444:	f501 41c0 	add.w	r1, r1, #24576	; 0x6000
 8000448:	4638      	mov	r0, r7
 800044a:	da16      	bge.n	800047a <usb_ep_init+0x9a>
    usb_epdata[epnum].usb_tx_addr = lastaddr;
 800044c:	600c      	str	r4, [r1, #0]
    epfunc_in[epnum] = func;
 800044e:	491d      	ldr	r1, [pc, #116]	; (80004c4 <usb_ep_init+0xe4>)
 8000450:	f841 3026 	str.w	r3, [r1, r6, lsl #2]
    ENDP_STAT_TX(epnum, USB_EP_TX_NAK);
 8000454:	882b      	ldrh	r3, [r5, #0]
 8000456:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 800045a:	051b      	lsls	r3, r3, #20
 800045c:	0d1b      	lsrs	r3, r3, #20
 800045e:	f483 4300 	eor.w	r3, r3, #32768	; 0x8000
 8000462:	f083 03a0 	eor.w	r3, r3, #160	; 0xa0
      usb_epdata[epnum].rx_num_blocks = size / 32 - 1;
    }
    epfunc_out[epnum] = func;
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
  }
  lastaddr += size;
 8000466:	4422      	add	r2, r4
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
 8000468:	802b      	strh	r3, [r5, #0]
  lastaddr += size;
 800046a:	8002      	strh	r2, [r0, #0]
}
 800046c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    case USB_ENDP_INTR: buf |= USB_EP_INTERRUPT; break;
 800046e:	f444 4106 	orr.w	r1, r4, #34304	; 0x8600
 8000472:	e7de      	b.n	8000432 <usb_ep_init+0x52>
    default: buf |= USB_EP_ISOCHRONOUS; //в дескрипторах изохронные точки могут иметь расширенные настройки
 8000474:	f444 4104 	orr.w	r1, r4, #33792	; 0x8400
 8000478:	e7db      	b.n	8000432 <usb_ep_init+0x52>
    usb_epdata[epnum].usb_rx_addr = lastaddr;
 800047a:	608c      	str	r4, [r1, #8]
      usb_epdata[epnum].rx_blocksize = 0;
 800047c:	898f      	ldrh	r7, [r1, #12]
    if(size < 64){
 800047e:	2a3f      	cmp	r2, #63	; 0x3f
      usb_epdata[epnum].rx_blocksize = 1;
 8000480:	bf8b      	itete	hi
 8000482:	f447 4700 	orrhi.w	r7, r7, #32768	; 0x8000
      usb_epdata[epnum].rx_blocksize = 0;
 8000486:	f36f 37cf 	bfcls	r7, #15, #1
      usb_epdata[epnum].rx_blocksize = 1;
 800048a:	818f      	strhhi	r7, [r1, #12]
      usb_epdata[epnum].rx_blocksize = 0;
 800048c:	818f      	strhls	r7, [r1, #12]
      usb_epdata[epnum].rx_num_blocks = size / 32 - 1;
 800048e:	f8b1 c00c 	ldrh.w	ip, [r1, #12]
 8000492:	bf8a      	itet	hi
 8000494:	0957      	lsrhi	r7, r2, #5
      usb_epdata[epnum].rx_num_blocks = size / 2;
 8000496:	f3c2 0744 	ubfxls	r7, r2, #1, #5
      usb_epdata[epnum].rx_num_blocks = size / 32 - 1;
 800049a:	f107 37ff 	addhi.w	r7, r7, #4294967295	; 0xffffffff
 800049e:	f367 2c8e 	bfi	ip, r7, #10, #5
 80004a2:	f8a1 c00c 	strh.w	ip, [r1, #12]
    epfunc_out[epnum] = func;
 80004a6:	4908      	ldr	r1, [pc, #32]	; (80004c8 <usb_ep_init+0xe8>)
 80004a8:	f841 3026 	str.w	r3, [r1, r6, lsl #2]
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
 80004ac:	882b      	ldrh	r3, [r5, #0]
 80004ae:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80004b2:	049b      	lsls	r3, r3, #18
 80004b4:	0c9b      	lsrs	r3, r3, #18
 80004b6:	f483 4330 	eor.w	r3, r3, #45056	; 0xb000
 80004ba:	f083 0380 	eor.w	r3, r3, #128	; 0x80
 80004be:	e7d2      	b.n	8000466 <usb_ep_init+0x86>
 80004c0:	20000000 	andcs	r0, r0, r0
 80004c4:	2000001c 	andcs	r0, r0, ip, lsl r0
 80004c8:	2000003c 	andcs	r0, r0, ip, lsr r0

080004cc <usb_ep_init_double>:

void usb_ep_init_double(uint8_t epnum, uint8_t ep_type, uint16_t size, epfunc_t func){
 80004cc:	b5f0      	push	{r4, r5, r6, r7, lr}
  uint8_t dir_in = (epnum & 0x80);
  epnum &= 0x0F;
  
  ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 80004ce:	f248 0780 	movw	r7, #32896	; 0x8080
  epnum &= 0x0F;
 80004d2:	f000 060f 	and.w	r6, r0, #15
  ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 80004d6:	00b5      	lsls	r5, r6, #2
 80004d8:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 80004dc:	f505 45b8 	add.w	r5, r5, #23552	; 0x5c00
 80004e0:	882c      	ldrh	r4, [r5, #0]
  uint16_t buf = USB_EPx(epnum);
  buf = (buf & ~(USB_EP_DTOG_RX | USB_EP_DTOG_TX | USB_EPTX_STAT | USB_EPRX_STAT)) | USB_EP_CTR_RX | USB_EP_CTR_TX;
  buf = (buf & ~USB_EPADDR_FIELD) | epnum;
  
  buf &=~ USB_EP_T_FIELD;
  switch(ep_type){
 80004e2:	2902      	cmp	r1, #2
  ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 80004e4:	f024 04c0 	bic.w	r4, r4, #192	; 0xc0
 80004e8:	ea4f 5404 	mov.w	r4, r4, lsl #20
 80004ec:	ea4f 5414 	mov.w	r4, r4, lsr #20
 80004f0:	ea44 0407 	orr.w	r4, r4, r7
 80004f4:	802c      	strh	r4, [r5, #0]
  ENDP_STAT_RX(epnum, USB_EP_RX_DIS);
 80004f6:	882c      	ldrh	r4, [r5, #0]
 80004f8:	f024 04f0 	bic.w	r4, r4, #240	; 0xf0
 80004fc:	ea4f 4484 	mov.w	r4, r4, lsl #18
 8000500:	ea4f 4494 	mov.w	r4, r4, lsr #18
 8000504:	ea44 0407 	orr.w	r4, r4, r7
 8000508:	802c      	strh	r4, [r5, #0]
  uint16_t buf = USB_EPx(epnum);
 800050a:	882c      	ldrh	r4, [r5, #0]
  buf &=~ USB_EP_T_FIELD;
 800050c:	f404 6410 	and.w	r4, r4, #2304	; 0x900
 8000510:	ea44 0406 	orr.w	r4, r4, r6
  switch(ep_type){
 8000514:	d008      	beq.n	8000528 <usb_ep_init_double+0x5c>
 8000516:	2903      	cmp	r1, #3
 8000518:	d038      	beq.n	800058c <usb_ep_init_double+0xc0>
 800051a:	2900      	cmp	r1, #0
 800051c:	d139      	bne.n	8000592 <usb_ep_init_double+0xc6>
    case USB_ENDP_CTRL: buf |= USB_EP_CONTROL; break;
 800051e:	f444 4102 	orr.w	r1, r4, #33280	; 0x8200
    case USB_ENDP_BULK: buf |= USB_EP_BULK; break;
    case USB_ENDP_INTR: buf |= USB_EP_INTERRUPT; break;
    default: buf |= USB_EP_ISOCHRONOUS; //в дескрипторах изохронные точки могут иметь расширенные настройки
 8000522:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8000526:	e001      	b.n	800052c <usb_ep_init_double+0x60>
  buf &=~ USB_EP_T_FIELD;
 8000528:	ea44 0107 	orr.w	r1, r4, r7
  }
  USB_EPx(epnum) = buf;
 800052c:	f8df c0e4 	ldr.w	ip, [pc, #228]	; 8000614 <usb_ep_init_double+0x148>
 8000530:	8029      	strh	r1, [r5, #0]
  
  if( dir_in ){
 8000532:	f8bc 4000 	ldrh.w	r4, [ip]
 8000536:	0131      	lsls	r1, r6, #4
 8000538:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 800053c:	f010 0f80 	tst.w	r0, #128	; 0x80
 8000540:	f501 41c0 	add.w	r1, r1, #24576	; 0x6000
 8000544:	eb02 0704 	add.w	r7, r2, r4
 8000548:	4660      	mov	r0, ip
 800054a:	d025      	beq.n	8000598 <usb_ep_init_double+0xcc>
    usb_epdata[epnum].usb_tx_addr = lastaddr;
 800054c:	600c      	str	r4, [r1, #0]
    usb_epdata[epnum].usb_rx_addr = lastaddr + size;
 800054e:	608f      	str	r7, [r1, #8]
    ENDP_STAT_TX(epnum, USB_EP_TX_NAK);
 8000550:	8829      	ldrh	r1, [r5, #0]
 8000552:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8000556:	0509      	lsls	r1, r1, #20
 8000558:	0d09      	lsrs	r1, r1, #20
 800055a:	f481 4100 	eor.w	r1, r1, #32768	; 0x8000
 800055e:	f081 01a0 	eor.w	r1, r1, #160	; 0xa0
 8000562:	8029      	strh	r1, [r5, #0]
    ENDP_STAT_RX(epnum, USB_EP_RX_NAK);
 8000564:	8829      	ldrh	r1, [r5, #0]
 8000566:	f021 01f0 	bic.w	r1, r1, #240	; 0xf0
 800056a:	0489      	lsls	r1, r1, #18
 800056c:	0c89      	lsrs	r1, r1, #18
 800056e:	f481 4120 	eor.w	r1, r1, #40960	; 0xa000
 8000572:	f081 0180 	eor.w	r1, r1, #128	; 0x80
      usb_epdata[epnum].rx_blocksize = usb_epdata[epnum].tx_blocksize = 1;
      if(size < 32)size = 32;
      usb_epdata[epnum].rx_num_blocks = usb_epdata[epnum].tx_num_blocks = size / 32 - 1;
    }
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
    ENDP_STAT_TX(epnum, USB_EP_TX_VALID);
 8000576:	8029      	strh	r1, [r5, #0]
  }
  epfunc_in[epnum] = func;
 8000578:	4924      	ldr	r1, [pc, #144]	; (800060c <usb_ep_init_double+0x140>)
  epfunc_out[epnum]= func;
    
  lastaddr += 2*size;
 800057a:	eb04 0242 	add.w	r2, r4, r2, lsl #1
  epfunc_in[epnum] = func;
 800057e:	f841 3026 	str.w	r3, [r1, r6, lsl #2]
  epfunc_out[epnum]= func;
 8000582:	4923      	ldr	r1, [pc, #140]	; (8000610 <usb_ep_init_double+0x144>)
  lastaddr += 2*size;
 8000584:	8002      	strh	r2, [r0, #0]
  epfunc_out[epnum]= func;
 8000586:	f841 3026 	str.w	r3, [r1, r6, lsl #2]
}
 800058a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    case USB_ENDP_INTR: buf |= USB_EP_INTERRUPT; break;
 800058c:	f444 4106 	orr.w	r1, r4, #34304	; 0x8600
 8000590:	e7c7      	b.n	8000522 <usb_ep_init_double+0x56>
    default: buf |= USB_EP_ISOCHRONOUS; //в дескрипторах изохронные точки могут иметь расширенные настройки
 8000592:	f444 4104 	orr.w	r1, r4, #33792	; 0x8400
 8000596:	e7c4      	b.n	8000522 <usb_ep_init_double+0x56>
    usb_epdata[epnum].usb_rx_addr = lastaddr;
 8000598:	608c      	str	r4, [r1, #8]
    if(size < 64){
 800059a:	2a3f      	cmp	r2, #63	; 0x3f
    usb_epdata[epnum].usb_tx_addr = lastaddr + size;
 800059c:	600f      	str	r7, [r1, #0]
      usb_epdata[epnum].rx_blocksize = usb_epdata[epnum].tx_blocksize = 0;
 800059e:	888f      	ldrh	r7, [r1, #4]
    if(size < 64){
 80005a0:	d828      	bhi.n	80005f4 <usb_ep_init_double+0x128>
      usb_epdata[epnum].rx_blocksize = usb_epdata[epnum].tx_blocksize = 0;
 80005a2:	f36f 37cf 	bfc	r7, #15, #1
 80005a6:	808f      	strh	r7, [r1, #4]
 80005a8:	898f      	ldrh	r7, [r1, #12]
 80005aa:	f36f 37cf 	bfc	r7, #15, #1
 80005ae:	818f      	strh	r7, [r1, #12]
      usb_epdata[epnum].rx_num_blocks = usb_epdata[epnum].tx_num_blocks = size / 2;
 80005b0:	f3c2 0744 	ubfx	r7, r2, #1, #5
      usb_epdata[epnum].rx_num_blocks = usb_epdata[epnum].tx_num_blocks = size / 32 - 1;
 80005b4:	f8b1 c004 	ldrh.w	ip, [r1, #4]
 80005b8:	f367 2c8e 	bfi	ip, r7, #10, #5
 80005bc:	f8a1 c004 	strh.w	ip, [r1, #4]
 80005c0:	f8b1 c00c 	ldrh.w	ip, [r1, #12]
 80005c4:	f367 2c8e 	bfi	ip, r7, #10, #5
 80005c8:	f8a1 c00c 	strh.w	ip, [r1, #12]
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
 80005cc:	8829      	ldrh	r1, [r5, #0]
 80005ce:	f021 01f0 	bic.w	r1, r1, #240	; 0xf0
 80005d2:	0489      	lsls	r1, r1, #18
 80005d4:	0c89      	lsrs	r1, r1, #18
 80005d6:	f481 4130 	eor.w	r1, r1, #45056	; 0xb000
 80005da:	f081 0180 	eor.w	r1, r1, #128	; 0x80
 80005de:	8029      	strh	r1, [r5, #0]
    ENDP_STAT_TX(epnum, USB_EP_TX_VALID);
 80005e0:	8829      	ldrh	r1, [r5, #0]
 80005e2:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 80005e6:	0509      	lsls	r1, r1, #20
 80005e8:	0d09      	lsrs	r1, r1, #20
 80005ea:	f481 4100 	eor.w	r1, r1, #32768	; 0x8000
 80005ee:	f081 01b0 	eor.w	r1, r1, #176	; 0xb0
 80005f2:	e7c0      	b.n	8000576 <usb_ep_init_double+0xaa>
      usb_epdata[epnum].rx_blocksize = usb_epdata[epnum].tx_blocksize = 1;
 80005f4:	f447 4700 	orr.w	r7, r7, #32768	; 0x8000
 80005f8:	808f      	strh	r7, [r1, #4]
 80005fa:	898f      	ldrh	r7, [r1, #12]
 80005fc:	f447 4700 	orr.w	r7, r7, #32768	; 0x8000
 8000600:	818f      	strh	r7, [r1, #12]
      usb_epdata[epnum].rx_num_blocks = usb_epdata[epnum].tx_num_blocks = size / 32 - 1;
 8000602:	0957      	lsrs	r7, r2, #5
 8000604:	3f01      	subs	r7, #1
 8000606:	f007 071f 	and.w	r7, r7, #31
 800060a:	e7d3      	b.n	80005b4 <usb_ep_init_double+0xe8>
 800060c:	2000001c 	andcs	r0, r0, ip, lsl r0
 8000610:	2000003c 	andcs	r0, r0, ip, lsr r0
 8000614:	20000000 	andcs	r0, r0, r0

08000618 <USB_LP_IRQHandler>:

// standard IRQ handler
void USB_LP_IRQHandler(){
 8000618:	b538      	push	{r3, r4, r5, lr}
  if(USB->ISTR & USB_ISTR_RESET){
 800061a:	4c42      	ldr	r4, [pc, #264]	; (8000724 <USB_LP_IRQHandler+0x10c>)
 800061c:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 8000620:	055d      	lsls	r5, r3, #21
 8000622:	d52c      	bpl.n	800067e <USB_LP_IRQHandler+0x66>
    usb_class_disconnect();
 8000624:	f7ff fe9f 	bl	8000366 <usb_class_disconnect>
    USB->CNTR = USB_CNTR_RESETM | USB_CNTR_CTRM | USB_CNTR_SUSPM | USB_CNTR_WKUPM;
 8000628:	f44f 431c 	mov.w	r3, #39936	; 0x9c00
    lastaddr = LASTADDR_DEFAULT;
 800062c:	2240      	movs	r2, #64	; 0x40
    USB->CNTR = USB_CNTR_RESETM | USB_CNTR_CTRM | USB_CNTR_SUSPM | USB_CNTR_WKUPM;
 800062e:	f8a4 3040 	strh.w	r3, [r4, #64]	; 0x40
    lastaddr = LASTADDR_DEFAULT;
 8000632:	4b3d      	ldr	r3, [pc, #244]	; (8000728 <USB_LP_IRQHandler+0x110>)
 8000634:	493d      	ldr	r1, [pc, #244]	; (800072c <USB_LP_IRQHandler+0x114>)
 8000636:	801a      	strh	r2, [r3, #0]
    USB->DADDR = USB_DADDR_EF;
 8000638:	2380      	movs	r3, #128	; 0x80
    for(uint8_t i=0; i<STM32ENDPOINTS; i++){
      epfunc_in[i] = epfunc_out[i] = NULL;
 800063a:	2200      	movs	r2, #0
    USB->DADDR = USB_DADDR_EF;
 800063c:	f8a4 304c 	strh.w	r3, [r4, #76]	; 0x4c
 8000640:	2408      	movs	r4, #8
 8000642:	4b3b      	ldr	r3, [pc, #236]	; (8000730 <USB_LP_IRQHandler+0x118>)
      epfunc_in[i] = epfunc_out[i] = NULL;
 8000644:	3c01      	subs	r4, #1
    for(uint8_t i=0; i<STM32ENDPOINTS; i++){
 8000646:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
      epfunc_in[i] = epfunc_out[i] = NULL;
 800064a:	f841 2b04 	str.w	r2, [r1], #4
 800064e:	f843 2b04 	str.w	r2, [r3], #4
    for(uint8_t i=0; i<STM32ENDPOINTS; i++){
 8000652:	d1f7      	bne.n	8000644 <USB_LP_IRQHandler+0x2c>
    }
    // state is default - wait for enumeration
    USB->ISTR = (uint16_t)~USB_ISTR_RESET;
 8000654:	f64f 32ff 	movw	r2, #64511	; 0xfbff
 8000658:	4b32      	ldr	r3, [pc, #200]	; (8000724 <USB_LP_IRQHandler+0x10c>)
    usb_ep_init(0x00, USB_ENDP_CTRL, USB_EP0_BUFSZ, ep0_out);
 800065a:	4621      	mov	r1, r4
    USB->ISTR = (uint16_t)~USB_ISTR_RESET;
 800065c:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
    usb_ep_init(0x00, USB_ENDP_CTRL, USB_EP0_BUFSZ, ep0_out);
 8000660:	4620      	mov	r0, r4
 8000662:	4b34      	ldr	r3, [pc, #208]	; (8000734 <USB_LP_IRQHandler+0x11c>)
 8000664:	2240      	movs	r2, #64	; 0x40
 8000666:	f7ff febb 	bl	80003e0 <usb_ep_init>
    usb_ep_init(0x80, USB_ENDP_CTRL, USB_EP0_BUFSZ, ep0_in);
 800066a:	4b33      	ldr	r3, [pc, #204]	; (8000738 <USB_LP_IRQHandler+0x120>)
 800066c:	2240      	movs	r2, #64	; 0x40
 800066e:	4621      	mov	r1, r4
 8000670:	2080      	movs	r0, #128	; 0x80
 8000672:	f7ff feb5 	bl	80003e0 <usb_ep_init>
    ep0_buf = NULL;
 8000676:	4b31      	ldr	r3, [pc, #196]	; (800073c <USB_LP_IRQHandler+0x124>)
 8000678:	601c      	str	r4, [r3, #0]
    usb_class_init();
 800067a:	f000 fa1f 	bl	8000abc <usb_class_init>
  }
  
  if(USB->ISTR & USB_ISTR_CTR){
 800067e:	4b29      	ldr	r3, [pc, #164]	; (8000724 <USB_LP_IRQHandler+0x10c>)
 8000680:	f8b3 2044 	ldrh.w	r2, [r3, #68]	; 0x44
 8000684:	0414      	lsls	r4, r2, #16
 8000686:	d529      	bpl.n	80006dc <USB_LP_IRQHandler+0xc4>
    uint8_t epnum = USB->ISTR & USB_ISTR_EP_ID;
 8000688:	f8b3 5044 	ldrh.w	r5, [r3, #68]	; 0x44
 800068c:	f005 050f 	and.w	r5, r5, #15
    if(USB_EPx(epnum) & USB_EP_CTR_RX){ //OUT
 8000690:	00ac      	lsls	r4, r5, #2
 8000692:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
 8000696:	f504 44b8 	add.w	r4, r4, #23552	; 0x5c00
 800069a:	8823      	ldrh	r3, [r4, #0]
 800069c:	0418      	lsls	r0, r3, #16
 800069e:	d50c      	bpl.n	80006ba <USB_LP_IRQHandler+0xa2>
      epfunc_out[epnum](epnum);
 80006a0:	4b22      	ldr	r3, [pc, #136]	; (800072c <USB_LP_IRQHandler+0x114>)
 80006a2:	4628      	mov	r0, r5
 80006a4:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 80006a8:	4798      	blx	r3
      ENDP_CTR_RX_CLR(epnum);
 80006aa:	8823      	ldrh	r3, [r4, #0]
 80006ac:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80006b0:	051b      	lsls	r3, r3, #20
 80006b2:	0d1b      	lsrs	r3, r3, #20
 80006b4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80006b8:	8023      	strh	r3, [r4, #0]
    }
    if(USB_EPx(epnum) & USB_EP_CTR_TX){//IN
 80006ba:	8823      	ldrh	r3, [r4, #0]
 80006bc:	0619      	lsls	r1, r3, #24
 80006be:	d50d      	bpl.n	80006dc <USB_LP_IRQHandler+0xc4>
      epfunc_in[epnum](epnum | 0x80);
 80006c0:	4b1b      	ldr	r3, [pc, #108]	; (8000730 <USB_LP_IRQHandler+0x118>)
 80006c2:	f045 0080 	orr.w	r0, r5, #128	; 0x80
 80006c6:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 80006ca:	4798      	blx	r3
      ENDP_CTR_TX_CLR(epnum);
 80006cc:	8823      	ldrh	r3, [r4, #0]
 80006ce:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80006d2:	051b      	lsls	r3, r3, #20
 80006d4:	0d1b      	lsrs	r3, r3, #20
 80006d6:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80006da:	8023      	strh	r3, [r4, #0]
    }
  }
  
  if(USB->ISTR & USB_ISTR_SUSP){ // suspend -> still no connection, may sleep
 80006dc:	4c11      	ldr	r4, [pc, #68]	; (8000724 <USB_LP_IRQHandler+0x10c>)
 80006de:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 80006e2:	051a      	lsls	r2, r3, #20
 80006e4:	d50b      	bpl.n	80006fe <USB_LP_IRQHandler+0xe6>
    usb_class_disconnect();
 80006e6:	f7ff fe3e 	bl	8000366 <usb_class_disconnect>
    USB->CNTR |= USB_CNTR_FSUSP | USB_CNTR_LP_MODE;
 80006ea:	f8b4 3040 	ldrh.w	r3, [r4, #64]	; 0x40
 80006ee:	f043 030c 	orr.w	r3, r3, #12
 80006f2:	f8a4 3040 	strh.w	r3, [r4, #64]	; 0x40
    USB->ISTR = (uint16_t)~USB_ISTR_SUSP;
 80006f6:	f24f 73ff 	movw	r3, #63487	; 0xf7ff
 80006fa:	f8a4 3044 	strh.w	r3, [r4, #68]	; 0x44
  }
  
  if(USB->ISTR & USB_ISTR_WKUP){ // wakeup
 80006fe:	4a09      	ldr	r2, [pc, #36]	; (8000724 <USB_LP_IRQHandler+0x10c>)
 8000700:	f8b2 3044 	ldrh.w	r3, [r2, #68]	; 0x44
 8000704:	04db      	lsls	r3, r3, #19
 8000706:	d50b      	bpl.n	8000720 <USB_LP_IRQHandler+0x108>
    USB->CNTR &= ~(USB_CNTR_FSUSP | USB_CNTR_LP_MODE); // clear suspend flags
 8000708:	f8b2 3040 	ldrh.w	r3, [r2, #64]	; 0x40
 800070c:	f023 030c 	bic.w	r3, r3, #12
 8000710:	041b      	lsls	r3, r3, #16
 8000712:	0c1b      	lsrs	r3, r3, #16
 8000714:	f8a2 3040 	strh.w	r3, [r2, #64]	; 0x40
    USB->ISTR = (uint16_t)~USB_ISTR_WKUP;
 8000718:	f64e 73ff 	movw	r3, #61439	; 0xefff
 800071c:	f8a2 3044 	strh.w	r3, [r2, #68]	; 0x44
  }
}
 8000720:	bd38      	pop	{r3, r4, r5, pc}
 8000722:	bf00      	nop
 8000724:	40005c00 	andmi	r5, r0, r0, lsl #24
 8000728:	20000000 	andcs	r0, r0, r0
 800072c:	2000003c 	andcs	r0, r0, ip, lsr r0
 8000730:	2000001c 	andcs	r0, r0, ip, lsl r0
 8000734:	0800084b 	stmdaeq	r0, {r0, r1, r3, r6, fp}
 8000738:	08000795 	stmdaeq	r0, {r0, r2, r4, r7, r8, r9, sl}
 800073c:	20000004 	andcs	r0, r0, r4

08000740 <_usb_ep_write>:
      uint32_t rx_blocksize:1;
    };
  };
}pma_descr_t;

void _usb_ep_write(uint8_t idx, const uint8_t *buf, uint16_t size){
 8000740:	b5f0      	push	{r4, r5, r6, r7, lr}
  pma_descr_t *descr = &((pma_descr_t*)usb_epdata)[idx];
  uint16_t N2 = (size + 1) >> 1;
  // the buffer is 16-bit, so we should copy data as it would be uint16_t
  uint16_t *buf16 = (uint16_t *)buf;
  uint32_t *out = (uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
  for(uint16_t i = 0; i < N2; ++i, ++out){
 8000742:	2500      	movs	r5, #0
  pma_descr_t *descr = &((pma_descr_t*)usb_epdata)[idx];
 8000744:	00c4      	lsls	r4, r0, #3
 8000746:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
 800074a:	f504 44c0 	add.w	r4, r4, #24576	; 0x6000
  uint32_t *out = (uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
 800074e:	6823      	ldr	r3, [r4, #0]
  uint16_t N2 = (size + 1) >> 1;
 8000750:	1c56      	adds	r6, r2, #1
  uint32_t *out = (uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
 8000752:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
 8000756:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
  uint16_t N2 = (size + 1) >> 1;
 800075a:	0876      	lsrs	r6, r6, #1
  uint32_t *out = (uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
 800075c:	005b      	lsls	r3, r3, #1
  for(uint16_t i = 0; i < N2; ++i, ++out){
 800075e:	b2af      	uxth	r7, r5
 8000760:	42be      	cmp	r6, r7
 8000762:	d811      	bhi.n	8000788 <_usb_ep_write+0x48>
    *out = buf16[i];
  }
  descr->count = size;
  
  ENDP_STAT_TX((idx/2), USB_EP_TX_VALID);
 8000764:	0840      	lsrs	r0, r0, #1
 8000766:	0080      	lsls	r0, r0, #2
 8000768:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
  descr->count = size;
 800076c:	6062      	str	r2, [r4, #4]
  ENDP_STAT_TX((idx/2), USB_EP_TX_VALID);
 800076e:	f500 40b8 	add.w	r0, r0, #23552	; 0x5c00
 8000772:	8803      	ldrh	r3, [r0, #0]
 8000774:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 8000778:	051b      	lsls	r3, r3, #20
 800077a:	0d1b      	lsrs	r3, r3, #20
 800077c:	f483 4300 	eor.w	r3, r3, #32768	; 0x8000
 8000780:	f083 03b0 	eor.w	r3, r3, #176	; 0xb0
 8000784:	8003      	strh	r3, [r0, #0]
}
 8000786:	bdf0      	pop	{r4, r5, r6, r7, pc}
    *out = buf16[i];
 8000788:	f831 7015 	ldrh.w	r7, [r1, r5, lsl #1]
 800078c:	f843 7025 	str.w	r7, [r3, r5, lsl #2]
 8000790:	3501      	adds	r5, #1
 8000792:	e7e4      	b.n	800075e <_usb_ep_write+0x1e>

08000794 <ep0_in>:
static void ep0_in(uint8_t epnum){
 8000794:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if( (USB->DADDR & USB_DADDR_ADD) != USB_Addr ){
 8000796:	4b14      	ldr	r3, [pc, #80]	; (80007e8 <ep0_in+0x54>)
 8000798:	4c14      	ldr	r4, [pc, #80]	; (80007ec <ep0_in+0x58>)
 800079a:	f8b3 104c 	ldrh.w	r1, [r3, #76]	; 0x4c
 800079e:	7922      	ldrb	r2, [r4, #4]
 80007a0:	f001 017f 	and.w	r1, r1, #127	; 0x7f
 80007a4:	4291      	cmp	r1, r2
    USB->DADDR = USB_DADDR_EF | USB_Addr;
 80007a6:	bf1c      	itt	ne
 80007a8:	f042 0280 	orrne.w	r2, r2, #128	; 0x80
 80007ac:	f8a3 204c 	strhne.w	r2, [r3, #76]	; 0x4c
  if( (USB_EPx(0) & USB_EPTX_STAT) == USB_EP_TX_VALID )return;
 80007b0:	881b      	ldrh	r3, [r3, #0]
 80007b2:	f003 0330 	and.w	r3, r3, #48	; 0x30
 80007b6:	2b30      	cmp	r3, #48	; 0x30
 80007b8:	d014      	beq.n	80007e4 <ep0_in+0x50>
  if(ep0_buf == NULL)return;
 80007ba:	6825      	ldr	r5, [r4, #0]
 80007bc:	b195      	cbz	r5, 80007e4 <ep0_in+0x50>
  uint16_t left = ep0_count;
 80007be:	88e7      	ldrh	r7, [r4, #6]
#define bLENGTH 0
#define wTOTALLENGTH 0,0

void _usb_ep_write(uint8_t idx, const uint8_t *buf, uint16_t size);
static inline void usb_ep_write(uint8_t epnum, const uint8_t *buf, uint16_t size){
  _usb_ep_write((epnum & 0x0F)*2, buf, size);
 80007c0:	4629      	mov	r1, r5
 80007c2:	2f40      	cmp	r7, #64	; 0x40
 80007c4:	463e      	mov	r6, r7
 80007c6:	bf28      	it	cs
 80007c8:	2640      	movcs	r6, #64	; 0x40
 80007ca:	2000      	movs	r0, #0
 80007cc:	4632      	mov	r2, r6
 80007ce:	f7ff ffb7 	bl	8000740 <_usb_ep_write>
  if(left < USB_EP0_BUFSZ){
 80007d2:	2f3f      	cmp	r7, #63	; 0x3f
  ep0_count -= left;
 80007d4:	eba7 0306 	sub.w	r3, r7, r6
 80007d8:	80e3      	strh	r3, [r4, #6]
    ep0_buf = NULL;
 80007da:	bf93      	iteet	ls
 80007dc:	2300      	movls	r3, #0
  ep0_buf += left;
 80007de:	19ad      	addhi	r5, r5, r6
 80007e0:	6025      	strhi	r5, [r4, #0]
    ep0_buf = NULL;
 80007e2:	6023      	strls	r3, [r4, #0]
}
 80007e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80007e6:	bf00      	nop
 80007e8:	40005c00 	andmi	r5, r0, r0, lsl #24
 80007ec:	20000004 	andcs	r0, r0, r4

080007f0 <_usb_ep_read>:

int _usb_ep_read(uint8_t idx, uint16_t *buf){
 80007f0:	b530      	push	{r4, r5, lr}
  pma_descr_t *descr = &((pma_descr_t*)usb_epdata)[idx];
 80007f2:	00c2      	lsls	r2, r0, #3
 80007f4:	f102 4280 	add.w	r2, r2, #1073741824	; 0x40000000
 80007f8:	f502 42c0 	add.w	r2, r2, #24576	; 0x6000
int _usb_ep_read(uint8_t idx, uint16_t *buf){
 80007fc:	4603      	mov	r3, r0
  int sz = descr->rx_count;
 80007fe:	6850      	ldr	r0, [r2, #4]
 8000800:	f3c0 0009 	ubfx	r0, r0, #0, #10
  if(!sz) return 0;
 8000804:	b300      	cbz	r0, 8000848 <_usb_ep_read+0x58>
  int n = (sz + 1) >> 1;
  uint32_t *in = (uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
 8000806:	6812      	ldr	r2, [r2, #0]
  int n = (sz + 1) >> 1;
 8000808:	1c44      	adds	r4, r0, #1
  uint32_t *in = (uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
 800080a:	f102 5200 	add.w	r2, r2, #536870912	; 0x20000000
 800080e:	f502 5240 	add.w	r2, r2, #12288	; 0x3000
 8000812:	0052      	lsls	r2, r2, #1
  int n = (sz + 1) >> 1;
 8000814:	1064      	asrs	r4, r4, #1
 8000816:	3902      	subs	r1, #2
 8000818:	eb02 0484 	add.w	r4, r2, r4, lsl #2
  for(int i = 0; i < n; ++i, ++in)
    buf[i] = *(uint16_t*)in;
 800081c:	f832 5b04 	ldrh.w	r5, [r2], #4
  for(int i = 0; i < n; ++i, ++in)
 8000820:	42a2      	cmp	r2, r4
    buf[i] = *(uint16_t*)in;
 8000822:	f821 5f02 	strh.w	r5, [r1, #2]!
  for(int i = 0; i < n; ++i, ++in)
 8000826:	d1f9      	bne.n	800081c <_usb_ep_read+0x2c>
  
  ENDP_STAT_RX((idx/2), USB_EP_RX_VALID);
 8000828:	085b      	lsrs	r3, r3, #1
 800082a:	009b      	lsls	r3, r3, #2
 800082c:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8000830:	f503 43b8 	add.w	r3, r3, #23552	; 0x5c00
 8000834:	881a      	ldrh	r2, [r3, #0]
 8000836:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800083a:	0492      	lsls	r2, r2, #18
 800083c:	0c92      	lsrs	r2, r2, #18
 800083e:	f482 4230 	eor.w	r2, r2, #45056	; 0xb000
 8000842:	f082 0280 	eor.w	r2, r2, #128	; 0x80
 8000846:	801a      	strh	r2, [r3, #0]
  return sz;
}
 8000848:	bd30      	pop	{r4, r5, pc}

0800084a <ep0_out>:
static void ep0_out(uint8_t epnum){
 800084a:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint16_t rxcount = usb_epdata[0].rx_count;
 800084c:	4b3f      	ldr	r3, [pc, #252]	; (800094c <ep0_out+0x102>)
 800084e:	4c40      	ldr	r4, [pc, #256]	; (8000950 <ep0_out+0x106>)
 8000850:	68dd      	ldr	r5, [r3, #12]
  uint8_t setup = !!(USB_EPx(0) & USB_EP_SETUP);
 8000852:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 8000856:	881b      	ldrh	r3, [r3, #0]
  uint16_t rxcount = usb_epdata[0].rx_count;
 8000858:	f3c5 0509 	ubfx	r5, r5, #0, #10
  if( setup ){
 800085c:	f413 6600 	ands.w	r6, r3, #2048	; 0x800
 8000860:	d009      	beq.n	8000876 <ep0_out+0x2c>
    if( setup_packet.bmRequestType & 0x80 ){ //предыдущий пакет=IN, этот точно будет запросом
 8000862:	f994 3008 	ldrsb.w	r3, [r4, #8]
 8000866:	2b00      	cmp	r3, #0
 8000868:	da17      	bge.n	800089a <ep0_out+0x50>
      bytesread = 0;
 800086a:	2500      	movs	r5, #0
  _usb_ep_write((epnum & 0x0F)*2 + idx, buf, size);
}

int _usb_ep_read(uint8_t idx, uint16_t *buf);
static inline int usb_ep_read(uint8_t epnum, uint16_t *buf){
  return _usb_ep_read((epnum & 0x0F)*2 + 1, buf);
 800086c:	4939      	ldr	r1, [pc, #228]	; (8000954 <ep0_out+0x10a>)
 800086e:	2001      	movs	r0, #1
 8000870:	f7ff ffbe 	bl	80007f0 <_usb_ep_read>
 8000874:	8225      	strh	r5, [r4, #16]
  uint8_t req = setup_packet.bmRequestType & 0x7F;
 8000876:	7a22      	ldrb	r2, [r4, #8]
 8000878:	f002 037f 	and.w	r3, r2, #127	; 0x7f
  if(setup_packet.bmRequestType & 0x80){
 800087c:	0612      	lsls	r2, r2, #24
 800087e:	d53c      	bpl.n	80008fa <ep0_out+0xb0>
    if( !setup )return; //какой-то костыль. Иначе вызывается два раза
 8000880:	b34e      	cbz	r6, 80008d6 <ep0_out+0x8c>
    if(req == (USB_REQ_STANDARD | USB_REQ_DEVICE)){
 8000882:	bb73      	cbnz	r3, 80008e2 <ep0_out+0x98>
      switch(setup_packet.bRequest){
 8000884:	7a60      	ldrb	r0, [r4, #9]
 8000886:	2806      	cmp	r0, #6
 8000888:	d00c      	beq.n	80008a4 <ep0_out+0x5a>
 800088a:	2808      	cmp	r0, #8
 800088c:	d025      	beq.n	80008da <ep0_out+0x90>
 800088e:	bb40      	cbnz	r0, 80008e2 <ep0_out+0x98>
  _usb_ep_write((epnum & 0x0F)*2, buf, size);
 8000890:	2202      	movs	r2, #2
 8000892:	4931      	ldr	r1, [pc, #196]	; (8000958 <ep0_out+0x10e>)
 8000894:	f7ff ff54 	bl	8000740 <_usb_ep_write>
 8000898:	e01d      	b.n	80008d6 <ep0_out+0x8c>
      if( bytesread >= setup_packet.wLength ){
 800089a:	89e2      	ldrh	r2, [r4, #14]
 800089c:	8a23      	ldrh	r3, [r4, #16]
 800089e:	429a      	cmp	r2, r3
 80008a0:	d8e9      	bhi.n	8000876 <ep0_out+0x2c>
 80008a2:	e7e2      	b.n	800086a <ep0_out+0x20>
          const void *data = ZLPP;
 80008a4:	2201      	movs	r2, #1
          usb_class_get_std_descr(setup_packet.wValue, &data, &size);
 80008a6:	a901      	add	r1, sp, #4
          const void *data = ZLPP;
 80008a8:	9201      	str	r2, [sp, #4]
          usb_class_get_std_descr(setup_packet.wValue, &data, &size);
 80008aa:	8960      	ldrh	r0, [r4, #10]
 80008ac:	f10d 0202 	add.w	r2, sp, #2
          uint16_t size = 0;
 80008b0:	f8ad 3002 	strh.w	r3, [sp, #2]
          usb_class_get_std_descr(setup_packet.wValue, &data, &size);
 80008b4:	f000 f856 	bl	8000964 <usb_class_get_std_descr>
    if(setup_packet.wLength < size) size = setup_packet.wLength;
 80008b8:	89e3      	ldrh	r3, [r4, #14]
 80008ba:	f8bd 2002 	ldrh.w	r2, [sp, #2]
  ep0_in(0x80);
 80008be:	2080      	movs	r0, #128	; 0x80
    if(setup_packet.wLength < size) size = setup_packet.wLength;
 80008c0:	429a      	cmp	r2, r3
 80008c2:	bf88      	it	hi
 80008c4:	f8ad 3002 	strhhi.w	r3, [sp, #2]
  ep0_count = size;
 80008c8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80008cc:	80e3      	strh	r3, [r4, #6]
  ep0_buf = buf;
 80008ce:	9b01      	ldr	r3, [sp, #4]
 80008d0:	6023      	str	r3, [r4, #0]
  ep0_in(0x80);
 80008d2:	f7ff ff5f 	bl	8000794 <ep0_in>
}
 80008d6:	b002      	add	sp, #8
 80008d8:	bd70      	pop	{r4, r5, r6, pc}
 80008da:	2201      	movs	r2, #1
 80008dc:	491f      	ldr	r1, [pc, #124]	; (800095c <ep0_out+0x112>)
 80008de:	4618      	mov	r0, r3
 80008e0:	e7d8      	b.n	8000894 <ep0_out+0x4a>
    void *data = ZLPP;
 80008e2:	2301      	movs	r3, #1
 80008e4:	9301      	str	r3, [sp, #4]
    uint16_t size = 0;
 80008e6:	2300      	movs	r3, #0
    usb_class_ep0_in( &setup_packet, &data, &size );
 80008e8:	f10d 0202 	add.w	r2, sp, #2
 80008ec:	a901      	add	r1, sp, #4
 80008ee:	4819      	ldr	r0, [pc, #100]	; (8000954 <ep0_out+0x10a>)
    uint16_t size = 0;
 80008f0:	f8ad 3002 	strh.w	r3, [sp, #2]
    usb_class_ep0_in( &setup_packet, &data, &size );
 80008f4:	f000 f874 	bl	80009e0 <usb_class_ep0_in>
 80008f8:	e7de      	b.n	80008b8 <ep0_out+0x6e>
    if(req == (USB_REQ_STANDARD | USB_REQ_DEVICE)){
 80008fa:	b96b      	cbnz	r3, 8000918 <ep0_out+0xce>
      if(setup_packet.bRequest == SET_ADDRESS){
 80008fc:	7a62      	ldrb	r2, [r4, #9]
 80008fe:	2a05      	cmp	r2, #5
 8000900:	d105      	bne.n	800090e <ep0_out+0xc4>
        USB_Addr = setup_packet.wValue;
 8000902:	8962      	ldrh	r2, [r4, #10]
 8000904:	7122      	strb	r2, [r4, #4]
 8000906:	2200      	movs	r2, #0
 8000908:	4611      	mov	r1, r2
 800090a:	4610      	mov	r0, r2
 800090c:	e7c2      	b.n	8000894 <ep0_out+0x4a>
      }else if(setup_packet.bRequest == SET_CONFIGURATION){
 800090e:	2a09      	cmp	r2, #9
 8000910:	d102      	bne.n	8000918 <ep0_out+0xce>
        configuration = setup_packet.wValue;
 8000912:	8962      	ldrh	r2, [r4, #10]
 8000914:	74a2      	strb	r2, [r4, #18]
 8000916:	e7f6      	b.n	8000906 <ep0_out+0xbc>
    if(!usb_class_ep0_out( &setup_packet, bytesread, rxcount )){
 8000918:	462a      	mov	r2, r5
 800091a:	8a21      	ldrh	r1, [r4, #16]
 800091c:	480d      	ldr	r0, [pc, #52]	; (8000954 <ep0_out+0x10a>)
 800091e:	f7ff fd26 	bl	800036e <usb_class_ep0_out>
 8000922:	b950      	cbnz	r0, 800093a <ep0_out+0xf0>
      ENDP_STAT_RX(0, USB_EP_RX_VALID);
 8000924:	4a0e      	ldr	r2, [pc, #56]	; (8000960 <ep0_out+0x116>)
 8000926:	8813      	ldrh	r3, [r2, #0]
 8000928:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800092c:	049b      	lsls	r3, r3, #18
 800092e:	0c9b      	lsrs	r3, r3, #18
 8000930:	f483 4330 	eor.w	r3, r3, #45056	; 0xb000
 8000934:	f083 0380 	eor.w	r3, r3, #128	; 0x80
 8000938:	8013      	strh	r3, [r2, #0]
    bytesread += rxcount;
 800093a:	8a23      	ldrh	r3, [r4, #16]
 800093c:	441d      	add	r5, r3
    if( bytesread >= setup_packet.wLength )usb_ep_write(0, NULL, 0);
 800093e:	89e3      	ldrh	r3, [r4, #14]
    bytesread += rxcount;
 8000940:	b2ad      	uxth	r5, r5
    if( bytesread >= setup_packet.wLength )usb_ep_write(0, NULL, 0);
 8000942:	42ab      	cmp	r3, r5
    bytesread += rxcount;
 8000944:	8225      	strh	r5, [r4, #16]
    if( bytesread >= setup_packet.wLength )usb_ep_write(0, NULL, 0);
 8000946:	d8c6      	bhi.n	80008d6 <ep0_out+0x8c>
 8000948:	e7dd      	b.n	8000906 <ep0_out+0xbc>
 800094a:	bf00      	nop
 800094c:	40006000 	andmi	r6, r0, r0
 8000950:	20000004 	andcs	r0, r0, r4
 8000954:	2000000c 	andcs	r0, r0, ip
 8000958:	08000d2c 	stmdaeq	r0, {r2, r3, r5, r8, sl, fp}
 800095c:	20000016 	andcs	r0, r0, r6, lsl r0
 8000960:	40005c00 	andmi	r5, r0, r0, lsl #24

08000964 <usb_class_get_std_descr>:
USB_STRING(USB_StringManufacturingDescriptor, u"COKPOWEHEU"); //Vendor
USB_STRING(USB_StringProdDescriptor, u"USB Audio"); //Product
USB_STRING(USB_StringSerialDescriptor, u"1"); //Serial (BCD)

void usb_class_get_std_descr(uint16_t descr, const void **data, uint16_t *size){
  switch(descr & 0xFF00){
 8000964:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8000968:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800096c:	d010      	beq.n	8000990 <usb_class_get_std_descr+0x2c>
 800096e:	d803      	bhi.n	8000978 <usb_class_get_std_descr+0x14>
 8000970:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8000974:	d007      	beq.n	8000986 <usb_class_get_std_descr+0x22>
 8000976:	4770      	bx	lr
 8000978:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800097c:	d010      	beq.n	80009a0 <usb_class_get_std_descr+0x3c>
 800097e:	f5b3 6fc0 	cmp.w	r3, #1536	; 0x600
 8000982:	d009      	beq.n	8000998 <usb_class_get_std_descr+0x34>
 8000984:	4770      	bx	lr
    case DEVICE_DESCRIPTOR:
      *data = &USB_DeviceDescriptor;
 8000986:	4b0f      	ldr	r3, [pc, #60]	; (80009c4 <usb_class_get_std_descr+0x60>)
 8000988:	600b      	str	r3, [r1, #0]
      *size = sizeof(USB_DeviceDescriptor);
 800098a:	2312      	movs	r3, #18
          *data = &USB_StringSerialDescriptor;
          break;
        default:
          return;
      }
      *size = ((uint8_t*)*data)[0]; //data->bLength
 800098c:	8013      	strh	r3, [r2, #0]
      break;
    default:
      break;
  }
}
 800098e:	4770      	bx	lr
      *data = &USB_ConfigDescriptor;
 8000990:	4b0d      	ldr	r3, [pc, #52]	; (80009c8 <usb_class_get_std_descr+0x64>)
 8000992:	600b      	str	r3, [r1, #0]
      *size = sizeof(USB_ConfigDescriptor);
 8000994:	236d      	movs	r3, #109	; 0x6d
 8000996:	e7f9      	b.n	800098c <usb_class_get_std_descr+0x28>
      *data = &USB_DeviceQualifierDescriptor;
 8000998:	4b0c      	ldr	r3, [pc, #48]	; (80009cc <usb_class_get_std_descr+0x68>)
 800099a:	600b      	str	r3, [r1, #0]
      *size = USB_DeviceQualifierDescriptor[0];
 800099c:	230a      	movs	r3, #10
 800099e:	e7f5      	b.n	800098c <usb_class_get_std_descr+0x28>
      switch(descr & 0xFF){
 80009a0:	b2c0      	uxtb	r0, r0
 80009a2:	2803      	cmp	r0, #3
 80009a4:	d8f3      	bhi.n	800098e <usb_class_get_std_descr+0x2a>
 80009a6:	e8df f000 	tbb	[pc, r0]
 80009aa:	0b090702 	bleq	82425ba <__exidx_end+0x2415ce>
          *data = &USB_StringLangDescriptor;
 80009ae:	4b08      	ldr	r3, [pc, #32]	; (80009d0 <usb_class_get_std_descr+0x6c>)
          *data = &USB_StringSerialDescriptor;
 80009b0:	600b      	str	r3, [r1, #0]
      *size = ((uint8_t*)*data)[0]; //data->bLength
 80009b2:	680b      	ldr	r3, [r1, #0]
 80009b4:	781b      	ldrb	r3, [r3, #0]
 80009b6:	e7e9      	b.n	800098c <usb_class_get_std_descr+0x28>
          *data = &USB_StringManufacturingDescriptor;
 80009b8:	4b06      	ldr	r3, [pc, #24]	; (80009d4 <usb_class_get_std_descr+0x70>)
 80009ba:	e7f9      	b.n	80009b0 <usb_class_get_std_descr+0x4c>
          *data = &USB_StringProdDescriptor;
 80009bc:	4b06      	ldr	r3, [pc, #24]	; (80009d8 <usb_class_get_std_descr+0x74>)
 80009be:	e7f7      	b.n	80009b0 <usb_class_get_std_descr+0x4c>
          *data = &USB_StringSerialDescriptor;
 80009c0:	4b06      	ldr	r3, [pc, #24]	; (80009dc <usb_class_get_std_descr+0x78>)
 80009c2:	e7f5      	b.n	80009b0 <usb_class_get_std_descr+0x4c>
 80009c4:	08000d2e 	stmdaeq	r0, {r1, r2, r3, r5, r8, sl, fp}
 80009c8:	08000d40 	stmdaeq	r0, {r6, r8, sl, fp}
 80009cc:	08000dad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, sl, fp}
 80009d0:	08000db8 	stmdaeq	r0, {r3, r4, r5, r7, r8, sl, fp}
 80009d4:	08000dbc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, sl, fp}
 80009d8:	08000dd2 	stmdaeq	r0, {r1, r4, r6, r7, r8, sl, fp}
 80009dc:	08000de6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r8, sl, fp}

080009e0 <usb_class_ep0_in>:

char usb_class_ep0_in(config_pack_t *req, void **data, uint16_t *size){

  return 0;
}
 80009e0:	2000      	movs	r0, #0
 80009e2:	4770      	bx	lr

080009e4 <dsin>:

int16_t dsin(uint8_t x){
 80009e4:	b510      	push	{r4, lr}
 80009e6:	4604      	mov	r4, r0
 80009e8:	f5ad 7d00 	sub.w	sp, sp, #512	; 0x200
  const int16_t arr[256] = {
 80009ec:	f44f 7200 	mov.w	r2, #512	; 0x200
 80009f0:	4904      	ldr	r1, [pc, #16]	; (8000a04 <dsin+0x20>)
 80009f2:	4668      	mov	r0, sp
 80009f4:	f000 f8bc 	bl	8000b70 <memcpy>
    0, 785, 1570, 2354, 3136, 3917, 4695, 5470, 6242, 7011, 7775, 8534, 9289, 10037, 10780, 11516, 12245, 12967, 13681, 14387, 15084, 15772, 16451, 17119, 17778, 18425, 19062, 19687, 20300, 20901, 21489, 22065, 22627, 23175, 23710, 24230, 24736, 25227, 25702, 26162, 26607, 27035, 27447, 27842, 28221, 28583, 28927, 29254, 29564, 29855, 30129, 30384, 30622, 30840, 31041, 31222, 31385, 31528, 31653, 31759, 31845, 31913, 31961, 31990, 32000, 31990, 31961, 31913, 31845, 31759, 31653, 31528, 31385, 31222, 31041, 30840, 30622, 30384, 30129, 29855, 29564, 29254, 28927, 28583, 28221, 27842, 27447, 27035, 26607, 26162, 25702, 25227, 24736, 24230, 23710, 23175, 22627, 22065, 21489, 20901, 20300, 19687, 19062, 18425, 17778, 17119, 16451, 15772, 15084, 14387, 13681, 12967, 12245, 11516, 10780, 10037, 9289, 8534, 7775, 7011, 6242, 5470, 4695, 3917, 3136, 2354, 1570, 785, 0, -785, -1570, -2354, -3136, -3917, -4695, -5470, -6242, -7011, -7775, -8534, -9289, -10037, -10780, -11516, -12245, -12967, -13681, -14387, -15084, -15772, -16451, -17119, -17778, -18425, -19062, -19687, -20300, -20901, -21489, -22065, -22627, -23175, -23710, -24230, -24736, -25227, -25702, -26162, -26607, -27035, -27447, -27842, -28221, -28583, -28927, -29254, -29564, -29855, -30129, -30384, -30622, -30840, -31041, -31222, -31385, -31528, -31653, -31759, -31845, -31913, -31961, -31990, -32000, -31990, -31961, -31913, -31845, -31759, -31653, -31528, -31385, -31222, -31041, -30840, -30622, -30384, -30129, -29855, -29564, -29254, -28927, -28583, -28221, -27842, -27447, -27035, -26607, -26162, -25702, -25227, -24736, -24230, -23710, -23175, -22627, -22065, -21489, -20901, -20300, -19687, -19062, -18425, -17778, -17119, -16451, -15772, -15084, -14387, -13681, -12967, -12245, -11516, -10780, -10037, -9289, -8534, -7775, -7011, -6242, -5470, -4695, -3917, -3136, -2354, -1570, -785
  };
  return arr[x];
}
 80009f8:	f93d 0014 	ldrsh.w	r0, [sp, r4, lsl #1]
 80009fc:	f50d 7d00 	add.w	sp, sp, #512	; 0x200
 8000a00:	bd10      	pop	{r4, pc}
 8000a02:	bf00      	nop
 8000a04:	08000dea 	stmdaeq	r0, {r1, r3, r5, r6, r7, r8, sl, fp}

08000a08 <data_callback>:
#define INTR_FREQ_HZ 1000
#define SAMPLE_COUNT ((F_SAMPLE / INTR_FREQ_HZ))
#define RES_FREQ_HZ 1000

volatile uint8_t count = 0;
void data_callback(uint8_t epnum){
 8000a08:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  int16_t buf[ENDP_DATA_SIZE];

  if(count > ENDP_DATA_SIZE/2){
 8000a0c:	4c21      	ldr	r4, [pc, #132]	; (8000a94 <data_callback+0x8c>)
void data_callback(uint8_t epnum){
 8000a0e:	b0a1      	sub	sp, #132	; 0x84
  if(count > ENDP_DATA_SIZE/2){
 8000a10:	7823      	ldrb	r3, [r4, #0]
 8000a12:	2b20      	cmp	r3, #32
 8000a14:	d905      	bls.n	8000a22 <data_callback+0x1a>
    count = ENDP_DATA_SIZE/2;
 8000a16:	2320      	movs	r3, #32
    GPO_ON(RLED);
 8000a18:	f44f 7280 	mov.w	r2, #256	; 0x100
    count = ENDP_DATA_SIZE/2;
 8000a1c:	7023      	strb	r3, [r4, #0]
    GPO_ON(RLED);
 8000a1e:	4b1e      	ldr	r3, [pc, #120]	; (8000a98 <data_callback+0x90>)
 8000a20:	619a      	str	r2, [r3, #24]
void data_callback(uint8_t epnum){
 8000a22:	2700      	movs	r7, #0
  }
  
  static int16_t cnt = 0;
  for(uint8_t i=0; i<count; i++){
#if 1
    buf[i] = dsin( (uint32_t)cnt * RES_FREQ_HZ * 256 / F_SAMPLE );
 8000a24:	f44f 387a 	mov.w	r8, #256000	; 0x3e800
void data_callback(uint8_t epnum){
 8000a28:	463b      	mov	r3, r7
    buf[i] = dsin( (uint32_t)cnt * RES_FREQ_HZ * 256 / F_SAMPLE );
 8000a2a:	f44f 597a 	mov.w	r9, #16000	; 0x3e80
 8000a2e:	f9b4 5002 	ldrsh.w	r5, [r4, #2]
  for(uint8_t i=0; i<count; i++){
 8000a32:	7822      	ldrb	r2, [r4, #0]
 8000a34:	b2fe      	uxtb	r6, r7
 8000a36:	42b2      	cmp	r2, r6
 8000a38:	d812      	bhi.n	8000a60 <data_callback+0x58>
 8000a3a:	b103      	cbz	r3, 8000a3e <data_callback+0x36>
 8000a3c:	8065      	strh	r5, [r4, #2]
  uint8_t idx = !(USB_EPx(epnum) & USB_EP_DTOG_TX);
 8000a3e:	4b17      	ldr	r3, [pc, #92]	; (8000a9c <data_callback+0x94>)
    buf[i] = cnt;
    cnt += dir;
    if(cnt > 32000)dir=-1; else if(cnt<-32000)dir=1;
#endif
  }
  usb_ep_write_double(ENDP_DATA_NUM, (void*)buf, count*2);
 8000a40:	7822      	ldrb	r2, [r4, #0]
 8000a42:	8818      	ldrh	r0, [r3, #0]
  _usb_ep_write((epnum & 0x0F)*2 + idx, buf, size);
 8000a44:	0052      	lsls	r2, r2, #1
  uint8_t idx = !(USB_EPx(epnum) & USB_EP_DTOG_TX);
 8000a46:	f080 0040 	eor.w	r0, r0, #64	; 0x40
 8000a4a:	f3c0 1080 	ubfx	r0, r0, #6, #1
  _usb_ep_write((epnum & 0x0F)*2 + idx, buf, size);
 8000a4e:	4669      	mov	r1, sp
 8000a50:	3002      	adds	r0, #2
 8000a52:	f7ff fe75 	bl	8000740 <_usb_ep_write>
  count = 0;
 8000a56:	2300      	movs	r3, #0
 8000a58:	7023      	strb	r3, [r4, #0]
}
 8000a5a:	b021      	add	sp, #132	; 0x84
 8000a5c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    buf[i] = dsin( (uint32_t)cnt * RES_FREQ_HZ * 256 / F_SAMPLE );
 8000a60:	fb08 f005 	mul.w	r0, r8, r5
 8000a64:	fbb0 f0f9 	udiv	r0, r0, r9
 8000a68:	b2c0      	uxtb	r0, r0
 8000a6a:	f7ff ffbb 	bl	80009e4 <dsin>
 8000a6e:	ab20      	add	r3, sp, #128	; 0x80
 8000a70:	eb03 0646 	add.w	r6, r3, r6, lsl #1
    cnt++;
 8000a74:	b2ab      	uxth	r3, r5
 8000a76:	1c5d      	adds	r5, r3, #1
 8000a78:	b22d      	sxth	r5, r5
    if(cnt >= F_SAMPLE)cnt -= F_SAMPLE;
 8000a7a:	f5b5 5f7a 	cmp.w	r5, #16000	; 0x3e80
 8000a7e:	bfa4      	itt	ge
 8000a80:	f5a3 5579 	subge.w	r5, r3, #15936	; 0x3e40
 8000a84:	3d3f      	subge	r5, #63	; 0x3f
    buf[i] = dsin( (uint32_t)cnt * RES_FREQ_HZ * 256 / F_SAMPLE );
 8000a86:	f826 0c80 	strh.w	r0, [r6, #-128]
    if(cnt >= F_SAMPLE)cnt -= F_SAMPLE;
 8000a8a:	bfa8      	it	ge
 8000a8c:	b22d      	sxthge	r5, r5
 8000a8e:	3701      	adds	r7, #1
 8000a90:	2301      	movs	r3, #1
 8000a92:	e7ce      	b.n	8000a32 <data_callback+0x2a>
 8000a94:	20000018 	andcs	r0, r0, r8, lsl r0
 8000a98:	40020400 	andmi	r0, r2, r0, lsl #8
 8000a9c:	40005c04 	andmi	r5, r0, r4, lsl #24

08000aa0 <TIM4_IRQHandler>:

void TIM4_IRQHandler(){
  TIM4->SR = ~TIM_SR_UIF;
 8000aa0:	f06f 0201 	mvn.w	r2, #1
 8000aa4:	4b03      	ldr	r3, [pc, #12]	; (8000ab4 <TIM4_IRQHandler+0x14>)
 8000aa6:	611a      	str	r2, [r3, #16]
  
  count += SAMPLE_COUNT;
 8000aa8:	4a03      	ldr	r2, [pc, #12]	; (8000ab8 <TIM4_IRQHandler+0x18>)
 8000aaa:	7813      	ldrb	r3, [r2, #0]
 8000aac:	3310      	adds	r3, #16
 8000aae:	b2db      	uxtb	r3, r3
 8000ab0:	7013      	strb	r3, [r2, #0]

}
 8000ab2:	4770      	bx	lr
 8000ab4:	40000800 	andmi	r0, r0, r0, lsl #16
 8000ab8:	20000018 	andcs	r0, r0, r8, lsl r0

08000abc <usb_class_init>:

void usb_class_init(){
 8000abc:	b508      	push	{r3, lr}
  usb_ep_init_double( ENDP_DATA_NUM | 0x80, USB_ENDP_ISO, ENDP_DATA_SIZE, data_callback);
 8000abe:	2240      	movs	r2, #64	; 0x40
 8000ac0:	4b0d      	ldr	r3, [pc, #52]	; (8000af8 <usb_class_init+0x3c>)
 8000ac2:	2101      	movs	r1, #1
 8000ac4:	2081      	movs	r0, #129	; 0x81
 8000ac6:	f7ff fd01 	bl	80004cc <usb_ep_init_double>
  
  
  RCC->APB1ENR |= RCC_APB1ENR_TIM4EN; //F_APB1=32MHz
 8000aca:	4a0c      	ldr	r2, [pc, #48]	; (8000afc <usb_class_init+0x40>)
 8000acc:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8000ad0:	6a53      	ldr	r3, [r2, #36]	; 0x24
 8000ad2:	490b      	ldr	r1, [pc, #44]	; (8000b00 <usb_class_init+0x44>)
 8000ad4:	f043 0304 	orr.w	r3, r3, #4
 8000ad8:	6253      	str	r3, [r2, #36]	; 0x24
  TIM4->PSC = 31; //1 MHz
 8000ada:	221f      	movs	r2, #31
 8000adc:	4b09      	ldr	r3, [pc, #36]	; (8000b04 <usb_class_init+0x48>)
 8000ade:	629a      	str	r2, [r3, #40]	; 0x28
  TIM4->ARR = (1000000 / INTR_FREQ_HZ)-1;
 8000ae0:	f240 32e7 	movw	r2, #999	; 0x3e7
 8000ae4:	62da      	str	r2, [r3, #44]	; 0x2c
  TIM4->CR1 |= (TIM_CR1_ARPE);
 8000ae6:	681a      	ldr	r2, [r3, #0]
 8000ae8:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8000aec:	601a      	str	r2, [r3, #0]
  TIM4->DIER = (TIM_DIER_UIE);
 8000aee:	2201      	movs	r2, #1
 8000af0:	60da      	str	r2, [r3, #12]
 8000af2:	6008      	str	r0, [r1, #0]
  NVIC_EnableIRQ(TIM4_IRQn);
  TIM4->CR1 = (TIM_CR1_CEN);
 8000af4:	601a      	str	r2, [r3, #0]
}
 8000af6:	bd08      	pop	{r3, pc}
 8000af8:	08000a09 	stmdaeq	r0, {r0, r3, r9, fp}
 8000afc:	40023800 	andmi	r3, r2, r0, lsl #16
 8000b00:	e000e100 	and	lr, r0, r0, lsl #2
 8000b04:	40000800 	andmi	r0, r0, r0, lsl #16

08000b08 <usb_class_poll>:

void usb_class_poll(){
  if(GPI_ON(LBTN)){GPO_OFF(RLED); GPO_OFF(GLED);}
 8000b08:	4b05      	ldr	r3, [pc, #20]	; (8000b20 <usb_class_poll+0x18>)
 8000b0a:	691b      	ldr	r3, [r3, #16]
 8000b0c:	049b      	lsls	r3, r3, #18
 8000b0e:	d406      	bmi.n	8000b1e <usb_class_poll+0x16>
 8000b10:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8000b14:	4b03      	ldr	r3, [pc, #12]	; (8000b24 <usb_class_poll+0x1c>)
 8000b16:	619a      	str	r2, [r3, #24]
 8000b18:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8000b1c:	619a      	str	r2, [r3, #24]
}
 8000b1e:	4770      	bx	lr
 8000b20:	40020800 	andmi	r0, r2, r0, lsl #16
 8000b24:	40020400 	andmi	r0, r2, r0, lsl #8

08000b28 <__libc_init_array>:
 8000b28:	b570      	push	{r4, r5, r6, lr}
 8000b2a:	4e0d      	ldr	r6, [pc, #52]	; (8000b60 <__libc_init_array+0x38>)
 8000b2c:	4d0d      	ldr	r5, [pc, #52]	; (8000b64 <__libc_init_array+0x3c>)
 8000b2e:	1b76      	subs	r6, r6, r5
 8000b30:	10b6      	asrs	r6, r6, #2
 8000b32:	d006      	beq.n	8000b42 <__libc_init_array+0x1a>
 8000b34:	2400      	movs	r4, #0
 8000b36:	3401      	adds	r4, #1
 8000b38:	f855 3b04 	ldr.w	r3, [r5], #4
 8000b3c:	4798      	blx	r3
 8000b3e:	42a6      	cmp	r6, r4
 8000b40:	d1f9      	bne.n	8000b36 <__libc_init_array+0xe>
 8000b42:	4e09      	ldr	r6, [pc, #36]	; (8000b68 <__libc_init_array+0x40>)
 8000b44:	4d09      	ldr	r5, [pc, #36]	; (8000b6c <__libc_init_array+0x44>)
 8000b46:	f7ff fc05 	bl	8000354 <_init>
 8000b4a:	1b76      	subs	r6, r6, r5
 8000b4c:	10b6      	asrs	r6, r6, #2
 8000b4e:	d006      	beq.n	8000b5e <__libc_init_array+0x36>
 8000b50:	2400      	movs	r4, #0
 8000b52:	3401      	adds	r4, #1
 8000b54:	f855 3b04 	ldr.w	r3, [r5], #4
 8000b58:	4798      	blx	r3
 8000b5a:	42a6      	cmp	r6, r4
 8000b5c:	d1f9      	bne.n	8000b52 <__libc_init_array+0x2a>
 8000b5e:	bd70      	pop	{r4, r5, r6, pc}
 8000b60:	08000fec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, sl, fp}
 8000b64:	08000fec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, sl, fp}
 8000b68:	08000fec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, sl, fp}
 8000b6c:	08000fec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, sl, fp}

08000b70 <memcpy>:
 8000b70:	4684      	mov	ip, r0
 8000b72:	ea41 0300 	orr.w	r3, r1, r0
 8000b76:	f013 0303 	ands.w	r3, r3, #3
 8000b7a:	d149      	bne.n	8000c10 <memcpy+0xa0>
 8000b7c:	3a40      	subs	r2, #64	; 0x40
 8000b7e:	d323      	bcc.n	8000bc8 <memcpy+0x58>
 8000b80:	680b      	ldr	r3, [r1, #0]
 8000b82:	6003      	str	r3, [r0, #0]
 8000b84:	684b      	ldr	r3, [r1, #4]
 8000b86:	6043      	str	r3, [r0, #4]
 8000b88:	688b      	ldr	r3, [r1, #8]
 8000b8a:	6083      	str	r3, [r0, #8]
 8000b8c:	68cb      	ldr	r3, [r1, #12]
 8000b8e:	60c3      	str	r3, [r0, #12]
 8000b90:	690b      	ldr	r3, [r1, #16]
 8000b92:	6103      	str	r3, [r0, #16]
 8000b94:	694b      	ldr	r3, [r1, #20]
 8000b96:	6143      	str	r3, [r0, #20]
 8000b98:	698b      	ldr	r3, [r1, #24]
 8000b9a:	6183      	str	r3, [r0, #24]
 8000b9c:	69cb      	ldr	r3, [r1, #28]
 8000b9e:	61c3      	str	r3, [r0, #28]
 8000ba0:	6a0b      	ldr	r3, [r1, #32]
 8000ba2:	6203      	str	r3, [r0, #32]
 8000ba4:	6a4b      	ldr	r3, [r1, #36]	; 0x24
 8000ba6:	6243      	str	r3, [r0, #36]	; 0x24
 8000ba8:	6a8b      	ldr	r3, [r1, #40]	; 0x28
 8000baa:	6283      	str	r3, [r0, #40]	; 0x28
 8000bac:	6acb      	ldr	r3, [r1, #44]	; 0x2c
 8000bae:	62c3      	str	r3, [r0, #44]	; 0x2c
 8000bb0:	6b0b      	ldr	r3, [r1, #48]	; 0x30
 8000bb2:	6303      	str	r3, [r0, #48]	; 0x30
 8000bb4:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 8000bb6:	6343      	str	r3, [r0, #52]	; 0x34
 8000bb8:	6b8b      	ldr	r3, [r1, #56]	; 0x38
 8000bba:	6383      	str	r3, [r0, #56]	; 0x38
 8000bbc:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
 8000bbe:	63c3      	str	r3, [r0, #60]	; 0x3c
 8000bc0:	3040      	adds	r0, #64	; 0x40
 8000bc2:	3140      	adds	r1, #64	; 0x40
 8000bc4:	3a40      	subs	r2, #64	; 0x40
 8000bc6:	d2db      	bcs.n	8000b80 <memcpy+0x10>
 8000bc8:	3230      	adds	r2, #48	; 0x30
 8000bca:	d30b      	bcc.n	8000be4 <memcpy+0x74>
 8000bcc:	680b      	ldr	r3, [r1, #0]
 8000bce:	6003      	str	r3, [r0, #0]
 8000bd0:	684b      	ldr	r3, [r1, #4]
 8000bd2:	6043      	str	r3, [r0, #4]
 8000bd4:	688b      	ldr	r3, [r1, #8]
 8000bd6:	6083      	str	r3, [r0, #8]
 8000bd8:	68cb      	ldr	r3, [r1, #12]
 8000bda:	60c3      	str	r3, [r0, #12]
 8000bdc:	3010      	adds	r0, #16
 8000bde:	3110      	adds	r1, #16
 8000be0:	3a10      	subs	r2, #16
 8000be2:	d2f3      	bcs.n	8000bcc <memcpy+0x5c>
 8000be4:	320c      	adds	r2, #12
 8000be6:	d305      	bcc.n	8000bf4 <memcpy+0x84>
 8000be8:	f851 3b04 	ldr.w	r3, [r1], #4
 8000bec:	f840 3b04 	str.w	r3, [r0], #4
 8000bf0:	3a04      	subs	r2, #4
 8000bf2:	d2f9      	bcs.n	8000be8 <memcpy+0x78>
 8000bf4:	3204      	adds	r2, #4
 8000bf6:	d008      	beq.n	8000c0a <memcpy+0x9a>
 8000bf8:	07d2      	lsls	r2, r2, #31
 8000bfa:	bf1c      	itt	ne
 8000bfc:	f811 3b01 	ldrbne.w	r3, [r1], #1
 8000c00:	f800 3b01 	strbne.w	r3, [r0], #1
 8000c04:	d301      	bcc.n	8000c0a <memcpy+0x9a>
 8000c06:	880b      	ldrh	r3, [r1, #0]
 8000c08:	8003      	strh	r3, [r0, #0]
 8000c0a:	4660      	mov	r0, ip
 8000c0c:	4770      	bx	lr
 8000c0e:	bf00      	nop
 8000c10:	2a08      	cmp	r2, #8
 8000c12:	d313      	bcc.n	8000c3c <memcpy+0xcc>
 8000c14:	078b      	lsls	r3, r1, #30
 8000c16:	d0b1      	beq.n	8000b7c <memcpy+0xc>
 8000c18:	f010 0303 	ands.w	r3, r0, #3
 8000c1c:	d0ae      	beq.n	8000b7c <memcpy+0xc>
 8000c1e:	f1c3 0304 	rsb	r3, r3, #4
 8000c22:	1ad2      	subs	r2, r2, r3
 8000c24:	07db      	lsls	r3, r3, #31
 8000c26:	bf1c      	itt	ne
 8000c28:	f811 3b01 	ldrbne.w	r3, [r1], #1
 8000c2c:	f800 3b01 	strbne.w	r3, [r0], #1
 8000c30:	d3a4      	bcc.n	8000b7c <memcpy+0xc>
 8000c32:	f831 3b02 	ldrh.w	r3, [r1], #2
 8000c36:	f820 3b02 	strh.w	r3, [r0], #2
 8000c3a:	e79f      	b.n	8000b7c <memcpy+0xc>
 8000c3c:	3a04      	subs	r2, #4
 8000c3e:	d3d9      	bcc.n	8000bf4 <memcpy+0x84>
 8000c40:	3a01      	subs	r2, #1
 8000c42:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000c46:	f800 3b01 	strb.w	r3, [r0], #1
 8000c4a:	d2f9      	bcs.n	8000c40 <memcpy+0xd0>
 8000c4c:	780b      	ldrb	r3, [r1, #0]
 8000c4e:	7003      	strb	r3, [r0, #0]
 8000c50:	784b      	ldrb	r3, [r1, #1]
 8000c52:	7043      	strb	r3, [r0, #1]
 8000c54:	788b      	ldrb	r3, [r1, #2]
 8000c56:	7083      	strb	r3, [r0, #2]
 8000c58:	4660      	mov	r0, ip
 8000c5a:	4770      	bx	lr

08000c5c <Reset_Handler>:
 8000c5c:	2100      	movs	r1, #0
 8000c5e:	e003      	b.n	8000c68 <LoopCopyDataInit>

08000c60 <CopyDataInit>:
 8000c60:	4b0b      	ldr	r3, [pc, #44]	; (8000c90 <LoopFillZerobss+0x14>)
 8000c62:	585b      	ldr	r3, [r3, r1]
 8000c64:	5043      	str	r3, [r0, r1]
 8000c66:	3104      	adds	r1, #4

08000c68 <LoopCopyDataInit>:
 8000c68:	480a      	ldr	r0, [pc, #40]	; (8000c94 <LoopFillZerobss+0x18>)
 8000c6a:	4b0b      	ldr	r3, [pc, #44]	; (8000c98 <LoopFillZerobss+0x1c>)
 8000c6c:	1842      	adds	r2, r0, r1
 8000c6e:	429a      	cmp	r2, r3
 8000c70:	d3f6      	bcc.n	8000c60 <CopyDataInit>
 8000c72:	4a0a      	ldr	r2, [pc, #40]	; (8000c9c <LoopFillZerobss+0x20>)
 8000c74:	e002      	b.n	8000c7c <LoopFillZerobss>

08000c76 <FillZerobss>:
 8000c76:	2300      	movs	r3, #0
 8000c78:	f842 3b04 	str.w	r3, [r2], #4

08000c7c <LoopFillZerobss>:
 8000c7c:	4b08      	ldr	r3, [pc, #32]	; (8000ca0 <LoopFillZerobss+0x24>)
 8000c7e:	429a      	cmp	r2, r3
 8000c80:	d3f9      	bcc.n	8000c76 <FillZerobss>
 8000c82:	f7ff fb68 	bl	8000356 <SystemInit>
 8000c86:	f7ff ff4f 	bl	8000b28 <__libc_init_array>
 8000c8a:	f000 f80d 	bl	8000ca8 <main>
 8000c8e:	4770      	bx	lr
 8000c90:	08000fec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, sl, fp}
 8000c94:	20000000 	andcs	r0, r0, r0
 8000c98:	20000004 	andcs	r0, r0, r4
 8000c9c:	20000004 	andcs	r0, r0, r4
 8000ca0:	2000005c 	andcs	r0, r0, ip, asr r0

08000ca4 <ADC1_IRQHandler>:
 8000ca4:	e7fe      	b.n	8000ca4 <ADC1_IRQHandler>
	...

08000ca8 <main>:

int main(void){
 8000ca8:	b510      	push	{r4, lr}
  clock_HS(1);
 8000caa:	2001      	movs	r0, #1
 8000cac:	f7ff fa9c 	bl	80001e8 <clock_HS>
  RCC->AHBENR |= RCC_AHBENR_GPIOAEN | RCC_AHBENR_GPIOBEN | RCC_AHBENR_GPIOCEN | RCC_AHBENR_GPIODEN;
 8000cb0:	4a1a      	ldr	r2, [pc, #104]	; (8000d1c <main+0x74>)
 8000cb2:	69d3      	ldr	r3, [r2, #28]
 8000cb4:	f043 030f 	orr.w	r3, r3, #15
 8000cb8:	61d3      	str	r3, [r2, #28]
  GPIO_config(GLED); GPIO_config(RLED);
 8000cba:	4b19      	ldr	r3, [pc, #100]	; (8000d20 <main+0x78>)
 8000cbc:	681a      	ldr	r2, [r3, #0]
 8000cbe:	f422 2240 	bic.w	r2, r2, #786432	; 0xc0000
 8000cc2:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 8000cc6:	601a      	str	r2, [r3, #0]
 8000cc8:	689a      	ldr	r2, [r3, #8]
 8000cca:	f442 2240 	orr.w	r2, r2, #786432	; 0xc0000
 8000cce:	609a      	str	r2, [r3, #8]
 8000cd0:	681a      	ldr	r2, [r3, #0]
 8000cd2:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 8000cd6:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8000cda:	601a      	str	r2, [r3, #0]
 8000cdc:	689a      	ldr	r2, [r3, #8]
 8000cde:	f442 3240 	orr.w	r2, r2, #196608	; 0x30000
 8000ce2:	609a      	str	r2, [r3, #8]
  GPIO_config(LBTN); GPIO_config(JBTN);
 8000ce4:	4a0f      	ldr	r2, [pc, #60]	; (8000d24 <main+0x7c>)
 8000ce6:	6811      	ldr	r1, [r2, #0]
 8000ce8:	f021 6140 	bic.w	r1, r1, #201326592	; 0xc000000
 8000cec:	6011      	str	r1, [r2, #0]
 8000cee:	6891      	ldr	r1, [r2, #8]
 8000cf0:	f041 6140 	orr.w	r1, r1, #201326592	; 0xc000000
 8000cf4:	6091      	str	r1, [r2, #8]
 8000cf6:	681a      	ldr	r2, [r3, #0]
 8000cf8:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
 8000cfc:	601a      	str	r2, [r3, #0]
 8000cfe:	689a      	ldr	r2, [r3, #8]
 8000d00:	f442 6240 	orr.w	r2, r2, #3072	; 0xc00
 8000d04:	609a      	str	r2, [r3, #8]
  
  USB_setup();
 8000d06:	f7ff fb34 	bl	8000372 <USB_setup>
static __INLINE void __enable_irq()               { __ASM volatile ("cpsie i"); }
 8000d0a:	b662      	cpsie	i
  __enable_irq();
  while (1){
    usb_class_poll();
    sleep(100000);
 8000d0c:	4c06      	ldr	r4, [pc, #24]	; (8000d28 <main+0x80>)
    usb_class_poll();
 8000d0e:	f7ff fefb 	bl	8000b08 <usb_class_poll>
    sleep(100000);
 8000d12:	4620      	mov	r0, r4
 8000d14:	f7ff fb20 	bl	8000358 <sleep>
 8000d18:	e7f9      	b.n	8000d0e <main+0x66>
 8000d1a:	bf00      	nop
 8000d1c:	40023800 	andmi	r3, r2, r0, lsl #16
 8000d20:	40020400 	andmi	r0, r2, r0, lsl #8
 8000d24:	40020800 	andmi	r0, r2, r0, lsl #16
 8000d28:	000186a0 	andeq	r8, r1, r0, lsr #13

Disassembly of section .rodata:

08000d2c <USB_DeviceDescriptor-0x2>:
	...

08000d2e <USB_DeviceDescriptor>:
static const uint8_t USB_DeviceDescriptor[] = {
 8000d2e:	01100112 	tsteq	r0, r2, lsl r1
 8000d32:	40000000 	andmi	r0, r0, r0
 8000d36:	05df16c0 	ldrbeq	r1, [pc, #1728]	; 80013fe <__exidx_end+0x412>
 8000d3a:	02010001 	andeq	r0, r1, #1
 8000d3e:	 	andeq	r0, r9, #-1073741824	; 0xc0000000

08000d40 <USB_ConfigDescriptor>:
static const uint8_t USB_ConfigDescriptor[] = {
 8000d40:	006d0209 	rsbeq	r0, sp, r9, lsl #4
 8000d44:	80000102 	andhi	r0, r0, r2, lsl #2
 8000d48:	00040932 	andeq	r0, r4, r2, lsr r9
 8000d4c:	01010000 	mrseq	r0, (UNDEF: 1)
 8000d50:	24090000 	strcs	r0, [r9], #-0
 8000d54:	27000101 	strcs	r0, [r0, -r1, lsl #2]
 8000d58:	0c010100 	stfeqs	f0, [r1], {-0}
 8000d5c:	01010224 	tsteq	r1, r4, lsr #4
 8000d60:	00010002 	andeq	r0, r1, r2
 8000d64:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
 8000d68:	01020624 	tsteq	r2, r4, lsr #12
 8000d6c:	00000101 	andeq	r0, r0, r1, lsl #2
 8000d70:	03032409 	movweq	r2, #13321	; 0x3409
 8000d74:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
 8000d78:	01040900 	tsteq	r4, r0, lsl #18
 8000d7c:	02010000 	andeq	r0, r1, #0
 8000d80:	04090000 	streq	r0, [r9], #-0
 8000d84:	01010101 	tsteq	r1, r1, lsl #2
 8000d88:	07000002 	streq	r0, [r0, -r2]
 8000d8c:	01030124 	tsteq	r3, r4, lsr #2
 8000d90:	240b0001 	strcs	r0, [fp], #-1
 8000d94:	02010102 	andeq	r0, r1, #-2147483648	; 0x80000000
 8000d98:	3e800110 	mcrcc	1, 4, r0, cr0, cr0, {0}
 8000d9c:	81050900 	tsthi	r5, r0, lsl #18
 8000da0:	01004001 	tsteq	r0, r1
 8000da4:	25070000 	strcs	r0, [r7, #-0]
 8000da8:	00000001 	andeq	r0, r0, r1
	...

08000dad <USB_DeviceQualifierDescriptor>:
static const uint8_t USB_DeviceQualifierDescriptor[] = {
 8000dad:	0200060a 	andeq	r0, r0, #10485760	; 0xa00000
 8000db1:	40000000 	andmi	r0, r0, r0
 8000db5:	 	streq	r0, [r0], #-1

08000db8 <USB_StringLangDescriptor>:
USB_STRING(USB_StringLangDescriptor, u"\x0409"); //lang US
 8000db8:	04090304 	streq	r0, [r9], #-772	; 0xfffffcfc

08000dbc <USB_StringManufacturingDescriptor>:
USB_STRING(USB_StringManufacturingDescriptor, u"COKPOWEHEU"); //Vendor
 8000dbc:	00430316 	subeq	r0, r3, r6, lsl r3
 8000dc0:	004b004f 	subeq	r0, fp, pc, asr #32
 8000dc4:	004f0050 	subeq	r0, pc, r0, asr r0	; <UNPREDICTABLE>
 8000dc8:	00450057 	subeq	r0, r5, r7, asr r0
 8000dcc:	00450048 	subeq	r0, r5, r8, asr #32
 8000dd0:	 	tsteq	r4, #85	; 0x55

08000dd2 <USB_StringProdDescriptor>:
USB_STRING(USB_StringProdDescriptor, u"USB Audio"); //Product
 8000dd2:	00550314 	subseq	r0, r5, r4, lsl r3
 8000dd6:	00420053 	subeq	r0, r2, r3, asr r0
 8000dda:	00410020 	subeq	r0, r1, r0, lsr #32
 8000dde:	00640075 	rsbeq	r0, r4, r5, ror r0
 8000de2:	006f0069 	rsbeq	r0, pc, r9, rrx

08000de6 <USB_StringSerialDescriptor>:
USB_STRING(USB_StringSerialDescriptor, u"1"); //Serial (BCD)
 8000de6:	00310304 	eorseq	r0, r1, r4, lsl #6
 8000dea:	03110000 	tsteq	r1, #0
 8000dee:	09320622 	ldmdbeq	r2!, {r1, r5, r9, sl}
 8000df2:	0f4d0c40 	svceq	0x004d0c40
 8000df6:	155e1257 	ldrbne	r1, [lr, #-599]	; 0xfffffda9
 8000dfa:	1b631862 	blne	98c6f8a <__exidx_end+0x18c5f9e>
 8000dfe:	21561e5f 	cmpcs	r6, pc, asr lr
 8000e02:	27352449 	ldrcs	r2, [r5, -r9, asr #8]!
 8000e06:	2cfc2a1c 	vldmiacs	ip!, {s5-s32}
 8000e0a:	32a72fd5 	adccc	r2, r7, #852	; 0x354
 8000e0e:	38333571 	ldmdacc	r3!, {r0, r4, r5, r6, r8, sl, ip, sp}
 8000e12:	3d9c3aec 	vldrcc	s6, [ip, #944]	; 0x3b0
 8000e16:	42df4043 	sbcsmi	r4, pc, #67	; 0x43
 8000e1a:	47f94572 			; <UNDEFINED> instruction: 0x47f94572
 8000e1e:	4ce74a76 	vstmiami	r7!, {s9-s126}
 8000e22:	51a54f4c 			; <UNDEFINED> instruction: 0x51a54f4c
 8000e26:	563153f1 			; <UNDEFINED> instruction: 0x563153f1
 8000e2a:	5a875863 	bpl	61d6fbe <_Min_Stack_Size+0x61d6bbe>
 8000e2e:	5ea65c9e 	mcrpl	12, 5, r5, cr6, cr14, {4}
 8000e32:	628b60a0 	addvs	r6, fp, #160	; 0xa0
 8000e36:	66326466 	ldrtvs	r6, [r2], -r6, ror #8
 8000e3a:	699b67ef 	ldmibvs	fp, {r0, r1, r2, r3, r5, r6, r7, r8, r9, sl, sp, lr}
 8000e3e:	6cc26b37 	fstmiaxvs	r2, {d22-d48}	;@ Deprecated
 8000e42:	6fa76e3d 	svcvs	0x00a76e3d
 8000e46:	724670ff 	subvc	r7, r6, #255	; 0xff
 8000e4a:	749f737c 	ldrvc	r7, [pc], #892	; 8000e52 <USB_StringSerialDescriptor+0x6c>
 8000e4e:	76b075b1 			; <UNDEFINED> instruction: 0x76b075b1
 8000e52:	7878779e 	ldmdavc	r8!, {r1, r2, r3, r4, r7, r8, r9, sl, ip, sp, lr}^
 8000e56:	79f67941 	ldmibvc	r6!, {r0, r6, r8, fp, ip, sp, lr}^
 8000e5a:	7b287a99 	blvc	8a1f8c6 <__exidx_end+0xa1e8da>
 8000e5e:	7c0f7ba5 			; <UNDEFINED> instruction: 0x7c0f7ba5
 8000e62:	7ca97c65 	stcvc	12, cr7, [r9], #404	; 0x194
 8000e66:	7cf67cd9 	ldclvc	12, cr7, [r6], #868	; 0x364
 8000e6a:	7cf67d00 	ldclvc	13, cr7, [r6]
 8000e6e:	7ca97cd9 	stcvc	12, cr7, [r9], #868	; 0x364
 8000e72:	7c0f7c65 	stcvc	12, cr7, [pc], {101}	; 0x65
 8000e76:	7b287ba5 	blvc	8a1fd12 <__exidx_end+0xa1ed26>
 8000e7a:	79f67a99 	ldmibvc	r6!, {r0, r3, r4, r7, r9, fp, ip, sp, lr}^
 8000e7e:	78787941 	ldmdavc	r8!, {r0, r6, r8, fp, ip, sp, lr}^
 8000e82:	76b0779e 	ssatvc	r7, #17, lr, lsl #15
 8000e86:	749f75b1 	ldrvc	r7, [pc], #1457	; 8000e8e <USB_StringSerialDescriptor+0xa8>
 8000e8a:	7246737c 	subvc	r7, r6, #124, 6	; 0xf0000001
 8000e8e:	6fa770ff 	svcvs	0x00a770ff
 8000e92:	6cc26e3d 	stclvs	14, cr6, [r2], {61}	; 0x3d
 8000e96:	699b6b37 	ldmibvs	fp, {r0, r1, r2, r4, r5, r8, r9, fp, sp, lr}
 8000e9a:	663267ef 	ldrtvs	r6, [r2], -pc, ror #15
 8000e9e:	628b6466 	addvs	r6, fp, #1711276032	; 0x66000000
 8000ea2:	5ea660a0 	cdppl	0, 10, cr6, cr6, cr0, {5}
 8000ea6:	5a875c9e 	bpl	61d8126 <_Min_Stack_Size+0x61d7d26>
 8000eaa:	56315863 	ldrtpl	r5, [r1], -r3, ror #16
 8000eae:	51a553f1 	strdpl	r5, [r5, r1]!
 8000eb2:	4ce74f4c 	stclmi	15, cr4, [r7], #304	; 0x130
 8000eb6:	47f94a76 			; <UNDEFINED> instruction: 0x47f94a76
 8000eba:	42df4572 	sbcsmi	r4, pc, #478150656	; 0x1c800000
 8000ebe:	3d9c4043 	ldccc	0, cr4, [ip, #268]	; 0x10c
 8000ec2:	38333aec 	ldmdacc	r3!, {r2, r3, r5, r6, r7, r9, fp, ip, sp}
 8000ec6:	32a73571 	adccc	r3, r7, #473956352	; 0x1c400000
 8000eca:	2cfc2fd5 	ldclcs	15, cr2, [ip], #852	; 0x354
 8000ece:	27352a1c 			; <UNDEFINED> instruction: 0x27352a1c
 8000ed2:	21562449 	cmpcs	r6, r9, asr #8
 8000ed6:	1b631e5f 	blne	98c885a <__exidx_end+0x18c786e>
 8000eda:	155e1862 	ldrbne	r1, [lr, #-2146]	; 0xfffff79e
 8000ede:	0f4d1257 	svceq	0x004d1257
 8000ee2:	09320c40 	ldmdbeq	r2!, {r6, sl, fp}
 8000ee6:	03110622 	tsteq	r1, #35651584	; 0x2200000
 8000eea:	fcef0000 	stc2l	0, cr0, [pc]	; 8000ef0 <USB_StringSerialDescriptor+0x10a>
 8000eee:	f6cef9de 			; <UNDEFINED> instruction: 0xf6cef9de
 8000ef2:	f0b3f3c0 			; <UNDEFINED> instruction: 0xf0b3f3c0
 8000ef6:	eaa2eda9 	b	68bc5a2 <_Min_Stack_Size+0x68bc1a2>
 8000efa:	e49de79e 	ldr	lr, [sp], #1950	; 0x79e
 8000efe:	deaae1a1 	tanle<illegal precision>p	f6, f1
 8000f02:	d8cbdbb7 	stmiale	fp, {r0, r1, r2, r4, r5, r7, r8, r9, fp, ip, lr, pc}^
 8000f06:	d304d5e4 	movwle	sp, #17892	; 0x45e4
 8000f0a:	cd59d02b 	ldclgt	0, cr13, [r9, #-172]	; 0xffffff54
 8000f0e:	c7cdca8f 	strbgt	ip, [sp, pc, lsl #21]
 8000f12:	c264c514 	rsbgt	ip, r4, #20, 10	; 0x5000000
 8000f16:	bd21bfbd 	stclt	15, cr11, [r1, #-756]!	; 0xfffffd0c
 8000f1a:	b807ba8e 	stmdalt	r7, {r1, r2, r3, r7, r9, fp, ip, sp, pc}
 8000f1e:	b319b58a 	tstlt	r9, #578813952	; 0x22800000
 8000f22:	ae5bb0b4 	mrcge	0, 2, fp, cr11, cr4, {5}
 8000f26:	a9cfac0f 	stmibge	pc, {r0, r1, r2, r3, sl, fp, sp, pc}^	; <UNPREDICTABLE>
 8000f2a:	a579a79d 	ldrbge	sl, [r9, #-1949]!	; 0xfffff863
 8000f2e:	a15aa362 	cmpge	sl, r2, ror #6
 8000f32:	9d759f60 	ldclls	15, cr9, [r5, #-384]!	; 0xfffffe80
 8000f36:	99ce9b9a 	stmibls	lr, {r1, r3, r4, r7, r8, r9, fp, ip, pc}^
 8000f3a:	96659811 			; <UNDEFINED> instruction: 0x96659811
 8000f3e:	933e94c9 	teqls	lr, #-922746880	; 0xc9000000
 8000f42:	905991c3 	subsls	r9, r9, r3, asr #3
 8000f46:	8dba8f01 	ldchi	15, cr8, [sl, #4]!
 8000f4a:	8b618c84 	blhi	9864162 <__exidx_end+0x1863176>
 8000f4e:	89508a4f 	ldmdbhi	r0, {r0, r1, r2, r3, r6, r9, fp, pc}^
 8000f52:	87888862 	strhi	r8, [r8, r2, ror #16]
 8000f56:	860a86bf 			; <UNDEFINED> instruction: 0x860a86bf
 8000f5a:	84d88567 	ldrbhi	r8, [r8], #1383	; 0x567
 8000f5e:	83f1845b 	mvnshi	r8, #1526726656	; 0x5b000000
 8000f62:	8357839b 	cmphi	r7, #1811939330	; 0x6c000002
 8000f66:	830a8327 	movwhi	r8, #41767	; 0xa327
 8000f6a:	830a8300 	movwhi	r8, #41728	; 0xa300
 8000f6e:	83578327 	cmphi	r7, #-1677721600	; 0x9c000000
 8000f72:	83f1839b 	mvnshi	r8, #1811939330	; 0x6c000002
 8000f76:	84d8845b 	ldrbhi	r8, [r8], #1115	; 0x45b
 8000f7a:	860a8567 	strhi	r8, [sl], -r7, ror #10
 8000f7e:	878886bf 			; <UNDEFINED> instruction: 0x878886bf
 8000f82:	89508862 	ldmdbhi	r0, {r1, r5, r6, fp, pc}^
 8000f86:	8b618a4f 	blhi	98638ca <__exidx_end+0x18628de>
 8000f8a:	8dba8c84 	ldchi	12, cr8, [sl, #528]!	; 0x210
 8000f8e:	90598f01 	subsls	r8, r9, r1, lsl #30
 8000f92:	933e91c3 	teqls	lr, #-1073741776	; 0xc0000030
 8000f96:	966594c9 	strbtls	r9, [r5], -r9, asr #9
 8000f9a:	99ce9811 	stmibls	lr, {r0, r4, fp, ip, pc}^
 8000f9e:	9d759b9a 	vldmdbls	r5!, {d25-<overflow reg d37>}
 8000fa2:	a15a9f60 	cmpge	sl, r0, ror #30
 8000fa6:	a579a362 	ldrbge	sl, [r9, #-866]!	; 0xfffffc9e
 8000faa:	a9cfa79d 	stmibge	pc, {r0, r2, r3, r4, r7, r8, r9, sl, sp, pc}^	; <UNPREDICTABLE>
 8000fae:	ae5bac0f 	cdpge	12, 5, cr10, cr11, cr15, {0}
 8000fb2:	b319b0b4 	tstlt	r9, #180	; 0xb4
 8000fb6:	b807b58a 	stmdalt	r7, {r1, r3, r7, r8, sl, ip, sp, pc}
 8000fba:	bd21ba8e 	vstmdblt	r1!, {s22-s163}
 8000fbe:	c264bfbd 	rsbgt	fp, r4, #756	; 0x2f4
 8000fc2:	c7cdc514 	bfigt	ip, r4, #10, #4
 8000fc6:	cd59ca8f 	vldrgt	s25, [r9, #-572]	; 0xfffffdc4
 8000fca:	d304d02b 	movwle	sp, #16427	; 0x402b
 8000fce:	d8cbd5e4 	stmiale	fp, {r2, r5, r6, r7, r8, sl, ip, lr, pc}^
 8000fd2:	deaadbb7 			; <UNDEFINED> instruction: 0xdeaadbb7
 8000fd6:	e49de1a1 	ldr	lr, [sp], #417	; 0x1a1
 8000fda:	eaa2e79e 	b	68bae5a <_Min_Stack_Size+0x68baa5a>
 8000fde:	f0b3eda9 			; <UNDEFINED> instruction: 0xf0b3eda9
 8000fe2:	f6cef3c0 			; <UNDEFINED> instruction: 0xf6cef3c0
 8000fe6:	fceff9de 	stc2l	9, cr15, [pc], #444	; 80011a8 <__exidx_end+0x1bc>	; <UNPREDICTABLE>
	...

Disassembly of section .data:

20000000 <lastaddr>:
20000000:	00000040 	andeq	r0, r0, r0, asr #32

Disassembly of section .bss:

20000004 <ep0_buf>:
20000004:	00000000 	andeq	r0, r0, r0

20000008 <USB_Addr>:
	...

2000000a <ep0_count>:
	...

2000000c <setup_packet>:
	...

20000014 <bytesread.4440>:
	...

20000016 <configuration>:
	...

20000018 <count>:
	...

2000001a <cnt.5152>:
	...

2000001c <epfunc_in>:
	...

2000003c <epfunc_out>:
	...

Disassembly of section ._user_heap_stack:

2000005c <._user_heap_stack>:
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002e41 	andeq	r2, r0, r1, asr #28
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000024 	andeq	r0, r0, r4, lsr #32
  10:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
  14:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
  18:	0600334d 	streq	r3, [r0], -sp, asr #6
  1c:	094d070a 	stmdbeq	sp, {r1, r3, r8, r9, sl}^
  20:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  24:	17011501 	strne	r1, [r1, -r1, lsl #10]
  28:	1a011803 	bne	4603c <_Min_Stack_Size+0x45c3c>
  2c:	Address 0x000000000000002c is out of bounds.


Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	00000928 	andeq	r0, r0, r8, lsr #18
       4:	00000002 	andeq	r0, r0, r2
       8:	01040000 	mrseq	r0, (UNDEF: 4)
       c:	00000344 	andeq	r0, r0, r4, asr #6
      10:	0000120c 	andeq	r1, r0, ip, lsl #4
      14:	0001ac00 	andeq	sl, r1, r0, lsl #24
	...
      28:	06010200 	streq	r0, [r1], -r0, lsl #4
      2c:	0000027c 	andeq	r0, r0, ip, ror r2
      30:	00031603 	andeq	r1, r3, r3, lsl #12
      34:	17220400 	strne	r0, [r2, -r0, lsl #8]!
      38:	00000029 	andeq	r0, r0, r9, lsr #32
      3c:	95050202 	strls	r0, [r5, #-514]	; 0xfffffdfe
      40:	02000002 	andeq	r0, r0, #2
      44:	00820504 	addeq	r0, r2, r4, lsl #10
      48:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
      4c:	00007d05 	andeq	r7, r0, r5, lsl #26
      50:	03150300 	tsteq	r5, #0, 6
      54:	2e040000 	cdpcs	0, 0, cr0, cr4, cr0, {0}
      58:	00005d18 	andeq	r5, r0, r8, lsl sp
      5c:	08010200 	stmdaeq	r1, {r9}
      60:	0000027a 	andeq	r0, r0, sl, ror r2
      64:	0000ff03 	andeq	pc, r0, r3, lsl #30
      68:	19310400 	ldmdbne	r1!, {sl}
      6c:	00000070 	andeq	r0, r0, r0, ror r0
      70:	7e070202 	cdpvc	2, 0, cr0, cr7, cr2, {0}
      74:	03000001 	movweq	r0, #1
      78:	000002cf 	andeq	r0, r0, pc, asr #5
      7c:	88193404 	ldmdahi	r9, {r2, sl, ip, sp}
      80:	04000000 	streq	r0, [r0], #-0
      84:	00000077 	andeq	r0, r0, r7, ror r0
      88:	4d070402 	cfstrsmi	mvf0, [r7, #-8]
      8c:	02000000 	andeq	r0, r0, #0
      90:	00480708 	subeq	r0, r8, r8, lsl #14
      94:	04050000 	streq	r0, [r5], #-0
      98:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
      9c:	00960400 	addseq	r0, r6, r0, lsl #8
      a0:	04020000 	streq	r0, [r2], #-0
      a4:	00005207 	andeq	r5, r0, r7, lsl #4
      a8:	02880600 	addeq	r0, r8, #0, 12
      ac:	ce030000 	cdpgt	0, 0, cr0, cr3, cr0, {0}
      b0:	009d1506 	addseq	r1, sp, r6, lsl #10
      b4:	01010000 	mrseq	r0, (UNDEF: 1)
      b8:	00013a07 	andeq	r3, r1, r7, lsl #20
      bc:	114c0500 	cmpne	ip, r0, lsl #10
      c0:	00000077 	andeq	r0, r0, r7, ror r0
      c4:	84080101 	strhi	r0, [r8], #-257	; 0xfffffeff
      c8:	09012506 	stmdbeq	r1, {r1, r2, r8, sl, sp}
      cc:	00000181 	andeq	r0, r0, r1, lsl #3
      d0:	52434109 	subpl	r4, r3, #1073741826	; 0x40000002
      d4:	01270600 			; <UNDEFINED> instruction: 0x01270600
      d8:	00008311 	andeq	r8, r0, r1, lsl r3
      dc:	00230200 	eoreq	r0, r3, r0, lsl #4
      e0:	00009e0a 	andeq	r9, r0, sl, lsl #28
      e4:	01280600 			; <UNDEFINED> instruction: 0x01280600
      e8:	00008311 	andeq	r8, r0, r1, lsl r3
      ec:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
      f0:	00010f0a 	andeq	r0, r1, sl, lsl #30
      f4:	01290600 			; <UNDEFINED> instruction: 0x01290600
      f8:	00008311 	andeq	r8, r0, r1, lsl r3
      fc:	08230200 	stmdaeq	r3!, {r9}
     100:	00031d0a 	andeq	r1, r3, sl, lsl #26
     104:	012a0600 			; <UNDEFINED> instruction: 0x012a0600
     108:	00008311 	andeq	r8, r0, r1, lsl r3
     10c:	0c230200 	sfmeq	f0, 4, [r3], #-0
     110:	00005f0a 	andeq	r5, r0, sl, lsl #30
     114:	012b0600 			; <UNDEFINED> instruction: 0x012b0600
     118:	00008311 	andeq	r8, r0, r1, lsl r3
     11c:	10230200 	eorne	r0, r3, r0, lsl #4
     120:	0000e80a 	andeq	lr, r0, sl, lsl #16
     124:	012c0600 			; <UNDEFINED> instruction: 0x012c0600
     128:	00008311 	andeq	r8, r0, r1, lsl r3
     12c:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     130:	00525309 	subseq	r5, r2, r9, lsl #6
     134:	11012d06 	tstne	r1, r6, lsl #26
     138:	00000083 	andeq	r0, r0, r3, lsl #1
     13c:	09182302 	ldmdbeq	r8, {r1, r8, r9, sp}
     140:	0052424f 	subseq	r4, r2, pc, asr #4
     144:	11012e06 	tstne	r1, r6, lsl #28
     148:	00000083 	andeq	r0, r0, r3, lsl #1
     14c:	0a1c2302 	beq	708d5c <_Min_Stack_Size+0x70895c>
     150:	00000214 	andeq	r0, r0, r4, lsl r2
     154:	11012f06 	tstne	r1, r6, lsl #30
     158:	00000083 	andeq	r0, r0, r3, lsl #1
     15c:	0a202302 	beq	808d6c <_Min_Stack_Size+0x80896c>
     160:	000002a5 	andeq	r0, r0, r5, lsr #5
     164:	0e013006 	cdpeq	0, 0, cr3, cr1, cr6, {0}
     168:	00000181 	andeq	r0, r0, r1, lsl #3
     16c:	0a242302 	beq	908d7c <_Min_Stack_Size+0x90897c>
     170:	0000021a 	andeq	r0, r0, sl, lsl r2
     174:	11013106 	tstne	r1, r6, lsl #2
     178:	00000083 	andeq	r0, r0, r3, lsl #1
     17c:	01802303 	orreq	r2, r0, r3, lsl #6
     180:	00770b00 	rsbseq	r0, r7, r0, lsl #22
     184:	01910000 	orrseq	r0, r1, r0
     188:	a20c0000 	andge	r0, ip, #0
     18c:	16000000 	strne	r0, [r0], -r0
     190:	00900d00 	addseq	r0, r0, r0, lsl #26
     194:	32060000 	andcc	r0, r6, #0
     198:	00c60301 	sbceq	r0, r6, r1, lsl #6
     19c:	2c080000 	stccs	0, cr0, [r8], {-0}
     1a0:	09014f06 	stmdbeq	r1, {r1, r2, r8, r9, sl, fp, lr}
     1a4:	00000249 	andeq	r0, r0, r9, asr #4
     1a8:	0000420a 	andeq	r4, r0, sl, lsl #4
     1ac:	01510600 	cmpeq	r1, r0, lsl #12
     1b0:	00008311 	andeq	r8, r0, r1, lsl r3
     1b4:	00230200 	eoreq	r0, r3, r0, lsl #4
     1b8:	0000290a 	andeq	r2, r0, sl, lsl #18
     1bc:	01520600 	cmpeq	r2, r0, lsl #12
     1c0:	00008311 	andeq	r8, r0, r1, lsl r3
     1c4:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     1c8:	0001160a 	andeq	r1, r1, sl, lsl #12
     1cc:	01530600 	cmpeq	r3, r0, lsl #12
     1d0:	00008311 	andeq	r8, r0, r1, lsl r3
     1d4:	08230200 	stmdaeq	r3!, {r9}
     1d8:	0000070a 	andeq	r0, r0, sl, lsl #14
     1dc:	01540600 	cmpeq	r4, r0, lsl #12
     1e0:	00008311 	andeq	r8, r0, r1, lsl r3
     1e4:	0c230200 	sfmeq	f0, 4, [r3], #-0
     1e8:	52444909 	subpl	r4, r4, #147456	; 0x24000
     1ec:	01550600 	cmpeq	r5, r0, lsl #12
     1f0:	00008311 	andeq	r8, r0, r1, lsl r3
     1f4:	10230200 	eorne	r0, r3, r0, lsl #4
     1f8:	52444f09 	subpl	r4, r4, #9, 30	; 0x24
     1fc:	01560600 	cmpeq	r6, r0, lsl #12
     200:	00008311 	andeq	r8, r0, r1, lsl r3
     204:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     208:	00008b0a 	andeq	r8, r0, sl, lsl #22
     20c:	01570600 	cmpeq	r7, r0, lsl #12
     210:	00008311 	andeq	r8, r0, r1, lsl r3
     214:	18230200 	stmdane	r3!, {r9}
     218:	00000d0a 	andeq	r0, r0, sl, lsl #26
     21c:	01580600 	cmpeq	r8, r0, lsl #12
     220:	00008311 	andeq	r8, r0, r1, lsl r3
     224:	1c230200 	sfmne	f0, 4, [r3], #-0
     228:	52464109 	subpl	r4, r6, #1073741826	; 0x40000002
     22c:	01590600 	cmpeq	r9, r0, lsl #12
     230:	00025911 	andeq	r5, r2, r1, lsl r9
     234:	20230200 	eorcs	r0, r3, r0, lsl #4
     238:	52524209 	subspl	r4, r2, #-1879048192	; 0x90000000
     23c:	015a0600 	cmpeq	sl, r0, lsl #12
     240:	00008311 	andeq	r8, r0, r1, lsl r3
     244:	28230200 	stmdacs	r3!, {r9}
     248:	00830b00 	addeq	r0, r3, r0, lsl #22
     24c:	02590000 	subseq	r0, r9, #0
     250:	a20c0000 	andge	r0, ip, #0
     254:	01000000 	mrseq	r0, (UNDEF: 0)
     258:	02490400 	subeq	r0, r9, #0, 8
     25c:	570d0000 	strpl	r0, [sp, -r0]
     260:	06000001 	streq	r0, [r0], -r1
     264:	9e03015b 	mcrls	1, 0, r0, cr3, cr11, {2}
     268:	08000001 	stmdaeq	r0, {r0}
     26c:	01890608 	orreq	r0, r9, r8, lsl #12
     270:	00029509 	andeq	r9, r2, r9, lsl #10
     274:	52430900 	subpl	r0, r3, #0, 18
     278:	018b0600 	orreq	r0, fp, r0, lsl #12
     27c:	00008311 	andeq	r8, r0, r1, lsl r3
     280:	00230200 	eoreq	r0, r3, r0, lsl #4
     284:	52534309 	subspl	r4, r3, #603979776	; 0x24000000
     288:	018c0600 	orreq	r0, ip, r0, lsl #12
     28c:	00008311 	andeq	r8, r0, r1, lsl r3
     290:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     294:	01e80d00 	mvneq	r0, r0, lsl #26
     298:	8d060000 	stchi	0, cr0, [r6, #-0]
     29c:	026b0301 	rsbeq	r0, fp, #67108864	; 0x4000000
     2a0:	38080000 	stmdacc	r8, {}	; <UNPREDICTABLE>
     2a4:	09019306 	stmdbeq	r1, {r1, r2, r8, r9, ip, pc}
     2a8:	0000038c 	andeq	r0, r0, ip, lsl #7
     2ac:	00524309 	subseq	r4, r2, r9, lsl #6
     2b0:	11019506 	tstne	r1, r6, lsl #10
     2b4:	00000083 	andeq	r0, r0, r3, lsl #1
     2b8:	0a002302 	beq	8ec8 <_Min_Stack_Size+0x8ac8>
     2bc:	00000309 	andeq	r0, r0, r9, lsl #6
     2c0:	11019606 	tstne	r1, r6, lsl #12
     2c4:	00000083 	andeq	r0, r0, r3, lsl #1
     2c8:	0a042302 	beq	108ed8 <_Min_Stack_Size+0x108ad8>
     2cc:	000002c4 	andeq	r0, r0, r4, asr #5
     2d0:	11019706 	tstne	r1, r6, lsl #14
     2d4:	00000083 	andeq	r0, r0, r3, lsl #1
     2d8:	09082302 	stmdbeq	r8, {r1, r8, r9, sp}
     2dc:	00524943 	subseq	r4, r2, r3, asr #18
     2e0:	11019806 	tstne	r1, r6, lsl #16
     2e4:	00000083 	andeq	r0, r0, r3, lsl #1
     2e8:	0a0c2302 	beq	308ef8 <_Min_Stack_Size+0x308af8>
     2ec:	00000227 	andeq	r0, r0, r7, lsr #4
     2f0:	11019906 	tstne	r1, r6, lsl #18
     2f4:	00000083 	andeq	r0, r0, r3, lsl #1
     2f8:	0a102302 	beq	408f08 <_Min_Stack_Size+0x408b08>
     2fc:	000000c0 	andeq	r0, r0, r0, asr #1
     300:	11019a06 	tstne	r1, r6, lsl #20
     304:	00000083 	andeq	r0, r0, r3, lsl #1
     308:	0a142302 	beq	508f18 <_Min_Stack_Size+0x508b18>
     30c:	00000234 	andeq	r0, r0, r4, lsr r2
     310:	11019b06 	tstne	r1, r6, lsl #22
     314:	00000083 	andeq	r0, r0, r3, lsl #1
     318:	0a182302 	beq	608f28 <_Min_Stack_Size+0x608b28>
     31c:	000003d7 	ldrdeq	r0, [r0], -r7
     320:	11019c06 	tstne	r1, r6, lsl #24
     324:	00000083 	andeq	r0, r0, r3, lsl #1
     328:	0a1c2302 	beq	708f38 <_Min_Stack_Size+0x708b38>
     32c:	000002b5 			; <UNDEFINED> instruction: 0x000002b5
     330:	11019d06 	tstne	r1, r6, lsl #26
     334:	00000083 	andeq	r0, r0, r3, lsl #1
     338:	0a202302 	beq	808f48 <_Min_Stack_Size+0x808b48>
     33c:	000002ea 	andeq	r0, r0, sl, ror #5
     340:	11019e06 	tstne	r1, r6, lsl #28
     344:	00000083 	andeq	r0, r0, r3, lsl #1
     348:	0a242302 	beq	908f58 <_Min_Stack_Size+0x908b58>
     34c:	000000d8 	ldrdeq	r0, [r0], -r8
     350:	11019f06 	tstne	r1, r6, lsl #30
     354:	00000083 	andeq	r0, r0, r3, lsl #1
     358:	0a282302 	beq	a08f68 <_Min_Stack_Size+0xa08b68>
     35c:	000001de 	ldrdeq	r0, [r0], -lr
     360:	1101a006 	tstne	r1, r6
     364:	00000083 	andeq	r0, r0, r3, lsl #1
     368:	0a2c2302 	beq	b08f78 <_Min_Stack_Size+0xb08b78>
     36c:	00000197 	muleq	r0, r7, r1
     370:	1101a106 	tstne	r1, r6, lsl #2
     374:	00000083 	andeq	r0, r0, r3, lsl #1
     378:	09302302 	ldmdbeq	r0!, {r1, r8, r9, sp}
     37c:	00525343 	subseq	r5, r2, r3, asr #6
     380:	1101a206 	tstne	r1, r6, lsl #4
     384:	00000083 	andeq	r0, r0, r3, lsl #1
     388:	00342302 	eorseq	r2, r4, r2, lsl #6
     38c:	0001640d 	andeq	r6, r1, sp, lsl #8
     390:	01a30600 			; <UNDEFINED> instruction: 0x01a30600
     394:	0002a203 	andeq	sl, r2, r3, lsl #4
     398:	06d00800 	ldrbeq	r0, [r0], r0, lsl #16
     39c:	f50901c0 			; <UNDEFINED> instruction: 0xf50901c0
     3a0:	09000006 	stmdbeq	r0, {r1, r2}
     3a4:	06005254 			; <UNDEFINED> instruction: 0x06005254
     3a8:	831101c2 	tsthi	r1, #-2147483600	; 0x80000030
     3ac:	02000000 	andeq	r0, r0, #0
     3b0:	44090023 	strmi	r0, [r9], #-35	; 0xffffffdd
     3b4:	c3060052 	movwgt	r0, #24658	; 0x6052
     3b8:	00831101 	addeq	r1, r3, r1, lsl #2
     3bc:	23020000 	movwcs	r0, #8192	; 0x2000
     3c0:	52430904 	subpl	r0, r3, #4, 18	; 0x10000
     3c4:	01c40600 	biceq	r0, r4, r0, lsl #12
     3c8:	00008311 	andeq	r8, r0, r1, lsl r3
     3cc:	08230200 	stmdaeq	r3!, {r9}
     3d0:	52534909 	subspl	r4, r3, #147456	; 0x24000
     3d4:	01c50600 	biceq	r0, r5, r0, lsl #12
     3d8:	00008311 	andeq	r8, r0, r1, lsl r3
     3dc:	0c230200 	sfmeq	f0, 4, [r3], #-0
     3e0:	00003d0a 	andeq	r3, r0, sl, lsl #26
     3e4:	01c60600 	biceq	r0, r6, r0, lsl #12
     3e8:	00008311 	andeq	r8, r0, r1, lsl r3
     3ec:	10230200 	eorne	r0, r3, r0, lsl #4
     3f0:	0002d80a 	andeq	sp, r2, sl, lsl #16
     3f4:	01c70600 	biceq	r0, r7, r0, lsl #12
     3f8:	00008311 	andeq	r8, r0, r1, lsl r3
     3fc:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     400:	0000000a 	andeq	r0, r0, sl
     404:	01c80600 	biceq	r0, r8, r0, lsl #12
     408:	00008311 	andeq	r8, r0, r1, lsl r3
     40c:	18230200 	stmdane	r3!, {r9}
     410:	00024a0a 	andeq	r4, r2, sl, lsl #20
     414:	01c90600 	biceq	r0, r9, r0, lsl #12
     418:	00008311 	andeq	r8, r0, r1, lsl r3
     41c:	1c230200 	sfmne	f0, 4, [r3], #-0
     420:	0002bd0a 	andeq	fp, r2, sl, lsl #26
     424:	01ca0600 	biceq	r0, sl, r0, lsl #12
     428:	00008311 	andeq	r8, r0, r1, lsl r3
     42c:	20230200 	eorcs	r0, r3, r0, lsl #4
     430:	52505709 	subspl	r5, r0, #2359296	; 0x240000
     434:	01cb0600 	biceq	r0, fp, r0, lsl #12
     438:	00008311 	andeq	r8, r0, r1, lsl r3
     43c:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
     440:	52535309 	subspl	r5, r3, #603979776	; 0x24000000
     444:	01cc0600 	biceq	r0, ip, r0, lsl #12
     448:	00008311 	andeq	r8, r0, r1, lsl r3
     44c:	28230200 	stmdacs	r3!, {r9}
     450:	0003020a 	andeq	r0, r3, sl, lsl #4
     454:	01cd0600 	biceq	r0, sp, r0, lsl #12
     458:	00008311 	andeq	r8, r0, r1, lsl r3
     45c:	2c230200 	sfmcs	f0, 4, [r3], #-0
     460:	0001a10a 	andeq	sl, r1, sl, lsl #2
     464:	01ce0600 	biceq	r0, lr, r0, lsl #12
     468:	00008311 	andeq	r8, r0, r1, lsl r3
     46c:	30230200 	eorcc	r0, r3, r0, lsl #4
     470:	00001d0a 	andeq	r1, r0, sl, lsl #26
     474:	01cf0600 	biceq	r0, pc, r0, lsl #12
     478:	00008311 	andeq	r8, r0, r1, lsl r3
     47c:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
     480:	0000b30a 	andeq	fp, r0, sl, lsl #6
     484:	01d00600 	bicseq	r0, r0, r0, lsl #12
     488:	00008311 	andeq	r8, r0, r1, lsl r3
     48c:	38230200 	stmdacc	r3!, {r9}
     490:	0002010a 	andeq	r0, r2, sl, lsl #2
     494:	01d10600 	bicseq	r0, r1, r0, lsl #12
     498:	00008311 	andeq	r8, r0, r1, lsl r3
     49c:	3c230200 	sfmcc	f0, 4, [r3], #-0
     4a0:	0001a60a 	andeq	sl, r1, sl, lsl #12
     4a4:	01d20600 	bicseq	r0, r2, r0, lsl #12
     4a8:	00008311 	andeq	r8, r0, r1, lsl r3
     4ac:	40230200 	eormi	r0, r3, r0, lsl #4
     4b0:	0001310a 	andeq	r3, r1, sl, lsl #2
     4b4:	01d30600 	bicseq	r0, r3, r0, lsl #12
     4b8:	00008311 	andeq	r8, r0, r1, lsl r3
     4bc:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
     4c0:	0000cf0a 	andeq	ip, r0, sl, lsl #30
     4c4:	01d40600 	bicseq	r0, r4, r0, lsl #12
     4c8:	00008311 	andeq	r8, r0, r1, lsl r3
     4cc:	48230200 	stmdami	r3!, {r9}
     4d0:	00025e0a 	andeq	r5, r2, sl, lsl #28
     4d4:	01d50600 	bicseq	r0, r5, r0, lsl #12
     4d8:	0000770c 	andeq	r7, r0, ip, lsl #14
     4dc:	4c230200 	sfmmi	f0, 4, [r3], #-0
     4e0:	00029f0a 	andeq	r9, r2, sl, lsl #30
     4e4:	01d60600 	bicseq	r0, r6, r0, lsl #12
     4e8:	00008311 	andeq	r8, r0, r1, lsl r3
     4ec:	50230200 	eorpl	r0, r3, r0, lsl #4
     4f0:	0002e40a 	andeq	lr, r2, sl, lsl #8
     4f4:	01d70600 	bicseq	r0, r7, r0, lsl #12
     4f8:	00008311 	andeq	r8, r0, r1, lsl r3
     4fc:	54230200 	strtpl	r0, [r3], #-512	; 0xfffffe00
     500:	00032b0a 	andeq	r2, r3, sl, lsl #22
     504:	01d80600 	bicseq	r0, r8, r0, lsl #12
     508:	00008311 	andeq	r8, r0, r1, lsl r3
     50c:	58230200 	stmdapl	r3!, {r9}
     510:	0000370a 	andeq	r3, r0, sl, lsl #14
     514:	01d90600 	bicseq	r0, r9, r0, lsl #12
     518:	00008311 	andeq	r8, r0, r1, lsl r3
     51c:	5c230200 	sfmpl	f0, 4, [r3], #-0
     520:	0000c90a 	andeq	ip, r0, sl, lsl #18
     524:	01da0600 	bicseq	r0, sl, r0, lsl #12
     528:	00008311 	andeq	r8, r0, r1, lsl r3
     52c:	60230200 	eorvs	r0, r3, r0, lsl #4
     530:	00014a0a 	andeq	r4, r1, sl, lsl #20
     534:	01db0600 	bicseq	r0, fp, r0, lsl #12
     538:	00008311 	andeq	r8, r0, r1, lsl r3
     53c:	64230200 	strtvs	r0, [r3], #-512	; 0xfffffe00
     540:	0001f40a 	andeq	pc, r1, sl, lsl #8
     544:	01dc0600 	bicseq	r0, ip, r0, lsl #12
     548:	00008311 	andeq	r8, r0, r1, lsl r3
     54c:	68230200 	stmdavs	r3!, {r9}
     550:	0002510a 	andeq	r5, r2, sl, lsl #2
     554:	01dd0600 	bicseq	r0, sp, r0, lsl #12
     558:	00008311 	andeq	r8, r0, r1, lsl r3
     55c:	6c230200 	sfmvs	f0, 4, [r3], #-0
     560:	0002c90a 	andeq	ip, r2, sl, lsl #18
     564:	01de0600 	bicseq	r0, lr, r0, lsl #12
     568:	00008311 	andeq	r8, r0, r1, lsl r3
     56c:	70230200 	eorvc	r0, r3, r0, lsl #4
     570:	00030f0a 	andeq	r0, r3, sl, lsl #30
     574:	01df0600 	bicseq	r0, pc, r0, lsl #12
     578:	00008311 	andeq	r8, r0, r1, lsl r3
     57c:	74230200 	strtvc	r0, [r3], #-512	; 0xfffffe00
     580:	0001d00a 	andeq	sp, r1, sl
     584:	01e00600 	mvneq	r0, r0, lsl #12
     588:	00008311 	andeq	r8, r0, r1, lsl r3
     58c:	78230200 	stmdavc	r3!, {r9}
     590:	0002200a 	andeq	r2, r2, sl
     594:	01e10600 	mvneq	r0, r0, lsl #12
     598:	00008311 	andeq	r8, r0, r1, lsl r3
     59c:	7c230200 	sfmvc	f0, 4, [r3], #-0
     5a0:	0002ae0a 	andeq	sl, r2, sl, lsl #28
     5a4:	01e20600 	mvneq	r0, r0, lsl #12
     5a8:	00008311 	andeq	r8, r0, r1, lsl r3
     5ac:	80230300 	eorhi	r0, r3, r0, lsl #6
     5b0:	02f20a01 	rscseq	r0, r2, #4096	; 0x1000
     5b4:	e3060000 	movw	r0, #24576	; 0x6000
     5b8:	00831101 	addeq	r1, r3, r1, lsl #2
     5bc:	23030000 	movwcs	r0, #12288	; 0x3000
     5c0:	380a0184 	stmdacc	sl, {r2, r7, r8}
     5c4:	06000003 	streq	r0, [r0], -r3
     5c8:	831101e4 	tsthi	r1, #228, 2	; 0x39
     5cc:	03000000 	movweq	r0, #0
     5d0:	0a018823 	beq	62664 <_Min_Stack_Size+0x62264>
     5d4:	00000170 	andeq	r0, r0, r0, ror r1
     5d8:	1101e506 	tstne	r1, r6, lsl #10
     5dc:	00000083 	andeq	r0, r0, r3, lsl #1
     5e0:	018c2303 	orreq	r2, ip, r3, lsl #6
     5e4:	0000e10a 	andeq	lr, r0, sl, lsl #2
     5e8:	01e60600 	mvneq	r0, r0, lsl #12
     5ec:	00008311 	andeq	r8, r0, r1, lsl r3
     5f0:	90230300 	eorls	r0, r3, r0, lsl #6
     5f4:	01500a01 	cmpeq	r0, r1, lsl #20
     5f8:	e7060000 	str	r0, [r6, -r0]
     5fc:	00831101 	addeq	r1, r3, r1, lsl #2
     600:	23030000 	movwcs	r0, #12288	; 0x3000
     604:	fa0a0194 	blx	280c5c <_Min_Stack_Size+0x28085c>
     608:	06000001 	streq	r0, [r0], -r1
     60c:	831101e8 	tsthi	r1, #232, 2	; 0x3a
     610:	03000000 	movweq	r0, #0
     614:	0a019823 	beq	666a8 <_Min_Stack_Size+0x662a8>
     618:	00000257 	andeq	r0, r0, r7, asr r2
     61c:	1101e906 	tstne	r1, r6, lsl #18
     620:	00000083 	andeq	r0, r0, r3, lsl #1
     624:	019c2303 	orrseq	r2, ip, r3, lsl #6
     628:	0001080a 	andeq	r0, r1, sl, lsl #16
     62c:	01ea0600 	mvneq	r0, r0, lsl #12
     630:	00008311 	andeq	r8, r0, r1, lsl r3
     634:	a0230300 	eorge	r0, r3, r0, lsl #6
     638:	01770a01 	cmneq	r7, r1, lsl #20
     63c:	eb060000 	bl	180644 <_Min_Stack_Size+0x180244>
     640:	00831101 	addeq	r1, r3, r1, lsl #2
     644:	23030000 	movwcs	r0, #12288	; 0x3000
     648:	0d0a01a4 	stfeqs	f0, [sl, #-656]	; 0xfffffd70
     64c:	06000002 	streq	r0, [r0], -r2
     650:	831101ec 	tsthi	r1, #236, 2	; 0x3b
     654:	03000000 	movweq	r0, #0
     658:	0a01a823 	beq	6a6ec <_Min_Stack_Size+0x6a2ec>
     65c:	00000273 	andeq	r0, r0, r3, ror r2
     660:	1101ed06 	tstne	r1, r6, lsl #26
     664:	00000083 	andeq	r0, r0, r3, lsl #1
     668:	01ac2303 			; <UNDEFINED> instruction: 0x01ac2303
     66c:	0002dd0a 	andeq	sp, r2, sl, lsl #26
     670:	01ee0600 	mvneq	r0, r0, lsl #12
     674:	00008311 	andeq	r8, r0, r1, lsl r3
     678:	b0230300 	eorlt	r0, r3, r0, lsl #6
     67c:	03240a01 			; <UNDEFINED> instruction: 0x03240a01
     680:	ef060000 	svc	0x00060000
     684:	00831101 	addeq	r1, r3, r1, lsl #2
     688:	23030000 	movwcs	r0, #12288	; 0x3000
     68c:	220a01b4 	andcs	r0, sl, #180, 2	; 0x2d
     690:	06000000 	streq	r0, [r0], -r0
     694:	831101f0 	tsthi	r1, #240, 2	; 0x3c
     698:	03000000 	movweq	r0, #0
     69c:	0a01b823 	beq	6e730 <_Min_Stack_Size+0x6e330>
     6a0:	000000ac 	andeq	r0, r0, ip, lsr #1
     6a4:	1101f106 	tstne	r1, r6, lsl #2	; <UNPREDICTABLE>
     6a8:	00000083 	andeq	r0, r0, r3, lsl #1
     6ac:	01bc2303 			; <UNDEFINED> instruction: 0x01bc2303
     6b0:	0001250a 	andeq	r2, r1, sl, lsl #10
     6b4:	01f20600 	mvnseq	r0, r0, lsl #12
     6b8:	00008311 	andeq	r8, r0, r1, lsl r3
     6bc:	c0230300 	eorgt	r0, r3, r0, lsl #6
     6c0:	01d70a01 	bicseq	r0, r7, r1, lsl #20
     6c4:	f3060000 	vhadd.u8	d0, d6, d0
     6c8:	00831101 	addeq	r1, r3, r1, lsl #2
     6cc:	23030000 	movwcs	r0, #12288	; 0x3000
     6d0:	300a01c4 	andcc	r0, sl, r4, asr #3
     6d4:	06000000 	streq	r0, [r0], -r0
     6d8:	831101f4 	tsthi	r1, #244, 2	; 0x3d
     6dc:	03000000 	movweq	r0, #0
     6e0:	0a01c823 	beq	72774 <_Min_Stack_Size+0x72374>
     6e4:	000000b9 	strheq	r0, [r0], -r9
     6e8:	1101f506 	tstne	r1, r6, lsl #10	; <UNPREDICTABLE>
     6ec:	00000083 	andeq	r0, r0, r3, lsl #1
     6f0:	01cc2303 	biceq	r2, ip, r3, lsl #6
     6f4:	00670d00 	rsbeq	r0, r7, r0, lsl #26
     6f8:	f6060000 			; <UNDEFINED> instruction: 0xf6060000
     6fc:	03990301 	orrseq	r0, r9, #67108864	; 0x4000000
     700:	010e0000 	mrseq	r0, (UNDEF: 14)
     704:	0000033f 	andeq	r0, r0, pc, lsr r3
     708:	01050e02 	tsteq	r5, r2, lsl #28
     70c:	00000096 	muleq	r0, r6, r0
     710:	08000ca8 	stmdaeq	r0, {r3, r5, r7, sl, fp}
     714:	08000d2c 	stmdaeq	r0, {r2, r3, r5, r8, sl, fp}
     718:	00000000 	andeq	r0, r0, r0
     71c:	0007f401 	andeq	pc, r7, r1, lsl #8
     720:	0cba0f00 	ldceq	15, cr0, [sl]
     724:	0cd00800 	ldcleq	8, cr0, [r0], {0}
     728:	07430800 	strbeq	r0, [r3, -r0, lsl #16]
     72c:	2c100000 	ldccs	0, cr0, [r0], {-0}
     730:	02000001 	andeq	r0, r0, #1
     734:	00770311 	rsbseq	r0, r7, r1, lsl r3
     738:	00280000 	eoreq	r0, r8, r0
     73c:	00200000 	eoreq	r0, r0, r0
     740:	0f000000 	svceq	0x00000000
     744:	08000cd0 	stmdaeq	r0, {r4, r6, r7, sl, fp}
     748:	08000ce4 	stmdaeq	r0, {r2, r5, r6, r7, sl, fp}
     74c:	00000765 	andeq	r0, r0, r5, ror #14
     750:	00012c10 	andeq	r2, r1, r0, lsl ip
     754:	16110200 	ldrne	r0, [r1], -r0, lsl #4
     758:	00000077 	andeq	r0, r0, r7, ror r0
     75c:	0000006c 	andeq	r0, r0, ip, rrx
     760:	00000064 	andeq	r0, r0, r4, rrx
     764:	0ce40f00 	stcleq	15, cr0, [r4]
     768:	0cf60800 	ldcleq	8, cr0, [r6]
     76c:	07870800 	streq	r0, [r7, r0, lsl #16]
     770:	2c100000 	ldccs	0, cr0, [r0], {-0}
     774:	02000001 	andeq	r0, r0, #1
     778:	00770312 	rsbseq	r0, r7, r2, lsl r3
     77c:	00ae0000 	adceq	r0, lr, r0
     780:	00a80000 	adceq	r0, r8, r0
     784:	0f000000 	svceq	0x00000000
     788:	08000cf6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, sl, fp}
     78c:	08000d06 	stmdaeq	r0, {r1, r2, r8, sl, fp}
     790:	000007a9 	andeq	r0, r0, r9, lsr #15
     794:	00012c10 	andeq	r2, r1, r0, lsl ip
     798:	16120200 	ldrne	r0, [r2], -r0, lsl #4
     79c:	00000077 	andeq	r0, r0, r7, ror r0
     7a0:	000000e6 	andeq	r0, r0, r6, ror #1
     7a4:	000000e0 	andeq	r0, r0, r0, ror #1
     7a8:	09051100 	stmdbeq	r5, {r8, ip}
     7ac:	0d0a0000 	stceq	0, cr0, [sl, #-0]
     7b0:	0a010800 	beq	427b8 <_Min_Stack_Size+0x423b8>
     7b4:	0c08000d 	stceq	0, cr0, [r8], {13}
     7b8:	0208000d 	andeq	r0, r8, #13
     7bc:	b0120315 	andslt	r0, r2, r5, lsl r3
     7c0:	8308000c 	movwhi	r0, #32780	; 0x800c
     7c4:	d1000008 	tstle	r0, r8
     7c8:	13000007 	movwne	r0, #7
     7cc:	31015001 	tstcc	r1, r1
     7d0:	0d0a1400 	cfstrseq	mvf1, [sl, #-0]
     7d4:	090f0800 	stmdbeq	pc, {fp}	; <UNPREDICTABLE>
     7d8:	12140000 	andsne	r0, r4, #0
     7dc:	1d08000d 	stcne	0, cr0, [r8, #-52]	; 0xffffffcc
     7e0:	15000009 	strne	r0, [r0, #-9]
     7e4:	08000d18 	stmdaeq	r0, {r3, r4, r8, sl, fp}
     7e8:	000007f4 	strdeq	r0, [r0], -r4
     7ec:	02500113 	subseq	r0, r0, #-1073741820	; 0xc0000004
     7f0:	00000074 	andeq	r0, r0, r4, ror r0
     7f4:	01910116 	orrseq	r0, r1, r6, lsl r1
     7f8:	0a020000 	beq	80800 <_Min_Stack_Size+0x80400>
     7fc:	03580106 	cmpeq	r8, #-2147483647	; 0x80000001
     800:	03640800 	cmneq	r4, #0, 16
     804:	7d020800 	stcvc	8, cr0, [r2, #-0]
     808:	08230100 	stmdaeq	r3!, {r8}
     80c:	2f170000 	svccs	0x00170000
     810:	02000002 	andeq	r0, r0, #2
     814:	0077150a 	rsbseq	r1, r7, sl, lsl #10
     818:	011b0000 	tsteq	fp, r0
     81c:	01150000 	tsteq	r5, r0
     820:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
     824:	00026801 	andeq	r6, r2, r1, lsl #16
     828:	1c080200 	sfmne	f0, 4, [r8], {-0}
     82c:	00035601 	andeq	r5, r3, r1, lsl #12
     830:	00035808 	andeq	r5, r3, r8, lsl #16
     834:	007d0208 	rsbseq	r0, sp, r8, lsl #4
     838:	4d011901 	vstrmi.16	s2, [r1, #-2]	; <UNPREDICTABLE>
     83c:	02000008 	andeq	r0, r0, #8
     840:	1a011c07 	bne	47864 <_Min_Stack_Size+0x47464>
     844:	0002f901 	andeq	pc, r2, r1, lsl #18
     848:	06a00100 	strteq	r0, [r0], r0, lsl #2
     84c:	0800030c 	stmdaeq	r0, {r2, r3, r8, r9}
     850:	08000354 	stmdaeq	r0, {r2, r4, r6, r8, r9}
     854:	01007d02 	tsteq	r0, r2, lsl #26
     858:	00000883 	andeq	r0, r0, r3, lsl #17
     85c:	0100691b 	tsteq	r0, fp, lsl r9
     860:	00640ca1 	rsbeq	r0, r4, r1, lsr #25
     864:	014e0000 	mrseq	r0, (UNDEF: 78)
     868:	01460000 	mrseq	r0, (UNDEF: 70)
     86c:	741b0000 	ldrvc	r0, [fp], #-0
     870:	0100706d 	tsteq	r0, sp, rrx
     874:	00770ca2 	rsbseq	r0, r7, r2, lsr #25
     878:	01960000 	orrseq	r0, r6, r0
     87c:	01920000 	orrseq	r0, r2, r0
     880:	1c000000 	stcne	0, cr0, [r0], {-0}
     884:	0000a301 	andeq	sl, r0, r1, lsl #6
     888:	08480100 	stmdaeq	r8, {r8}^
     88c:	00003001 	andeq	r3, r0, r1
     890:	0001e800 	andeq	lr, r1, r0, lsl #16
     894:	00030c08 	andeq	r0, r3, r8, lsl #24
     898:	007d0208 	rsbseq	r0, sp, r8, lsl #4
     89c:	0008dc01 	andeq	sp, r8, r1, lsl #24
     8a0:	02061700 	andeq	r1, r6, #0, 14
     8a4:	48010000 	stmdami	r1, {}	; <UNPREDICTABLE>
     8a8:	00003018 	andeq	r3, r0, r8, lsl r0
     8ac:	0001bd00 	andeq	fp, r1, r0, lsl #26
     8b0:	0001b500 	andeq	fp, r1, r0, lsl #10
     8b4:	00691b00 	rsbeq	r1, r9, r0, lsl #22
     8b8:	640c4901 	strvs	r4, [ip], #-2305	; 0xfffff6ff
     8bc:	1b000000 	blne	8c4 <_Min_Stack_Size+0x4c4>
     8c0:	f7000002 			; <UNDEFINED> instruction: 0xf7000002
     8c4:	1b000001 	blne	8d0 <_Min_Stack_Size+0x4d0>
     8c8:	00706d74 	rsbseq	r6, r0, r4, ror sp
     8cc:	770c4a01 	strvc	r4, [ip, -r1, lsl #20]
     8d0:	5a000000 	bpl	8d8 <_Min_Stack_Size+0x4d8>
     8d4:	36000003 	strcc	r0, [r0], -r3
     8d8:	00000003 	andeq	r0, r0, r3
     8dc:	011e0116 	tsteq	lr, r6, lsl r1
     8e0:	18010000 	stmdane	r1, {}	; <UNPREDICTABLE>
     8e4:	01500106 	cmpeq	r0, r6, lsl #2
     8e8:	01e80800 	mvneq	r0, r0, lsl #16
     8ec:	7d020800 	stcvc	8, cr0, [r2, #-0]
     8f0:	09050100 	stmdbeq	r5, {r8}
     8f4:	311d0000 	tstcc	sp, r0
     8f8:	01000003 	tsteq	r0, r3
     8fc:	00511518 	subseq	r1, r1, r8, lsl r5
     900:	50010000 	andpl	r0, r1, r0
     904:	023d1e00 	eorseq	r1, sp, #0, 28
     908:	b4030000 	strlt	r0, [r3], #-0
     90c:	1f031604 	svcne	0x00031604
     910:	00730101 	rsbseq	r0, r3, r1, lsl #2
     914:	00730000 	rsbseq	r0, r3, r0
     918:	24070000 	strcs	r0, [r7], #-0
     91c:	01011f06 	tsteq	r1, r6, lsl #30
     920:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     924:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     928:	00064207 	andeq	r4, r6, r7, lsl #4
     92c:	0000126c 	andeq	r1, r0, ip, ror #4
     930:	02170002 	andseq	r0, r7, #2
     934:	01040000 	mrseq	r0, (UNDEF: 4)
     938:	00000344 	andeq	r0, r0, r4, asr #6
     93c:	0007680c 	andeq	r6, r7, ip, lsl #16
     940:	0001ac00 	andeq	sl, r1, r0, lsl #24
     944:	00036400 	andeq	r6, r3, r0, lsl #8
     948:	00096408 	andeq	r6, r9, r8, lsl #8
     94c:	00043308 	andeq	r3, r4, r8, lsl #6
     950:	06010200 	streq	r0, [r1], -r0, lsl #4
     954:	0000027c 	andeq	r0, r0, ip, ror r2
     958:	95050202 	strls	r0, [r5, #-514]	; 0xfffffdfe
     95c:	02000002 	andeq	r0, r0, #2
     960:	00820504 	addeq	r0, r2, r4, lsl #10
     964:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
     968:	00007d05 	andeq	r7, r0, r5, lsl #26
     96c:	03150300 	tsteq	r5, #0, 6
     970:	2e040000 	cdpcs	0, 0, cr0, cr4, cr0, {0}
     974:	00005718 	andeq	r5, r0, r8, lsl r7
     978:	00410400 	subeq	r0, r1, r0, lsl #8
     97c:	41050000 	mrsmi	r0, (UNDEF: 5)
     980:	02000000 	andeq	r0, r0, #0
     984:	027a0801 	rsbseq	r0, sl, #65536	; 0x10000
     988:	ff030000 			; <UNDEFINED> instruction: 0xff030000
     98c:	04000000 	streq	r0, [r0], #-0
     990:	006f1931 	rsbeq	r1, pc, r1, lsr r9	; <UNPREDICTABLE>
     994:	5e040000 	cdppl	0, 0, cr0, cr4, cr0, {0}
     998:	02000000 	andeq	r0, r0, #0
     99c:	017e0702 	cmneq	lr, r2, lsl #14
     9a0:	cf030000 	svcgt	0x00030000
     9a4:	04000002 	streq	r0, [r0], #-2
     9a8:	00871934 	addeq	r1, r7, r4, lsr r9
     9ac:	76040000 	strvc	r0, [r4], -r0
     9b0:	02000000 	andeq	r0, r0, #0
     9b4:	004d0704 	subeq	r0, sp, r4, lsl #14
     9b8:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
     9bc:	00004807 	andeq	r4, r0, r7, lsl #16
     9c0:	05040600 	streq	r0, [r4, #-1536]	; 0xfffffa00
     9c4:	00746e69 	rsbseq	r6, r4, r9, ror #28
     9c8:	00009504 	andeq	r9, r0, r4, lsl #10
     9cc:	07040200 	streq	r0, [r4, -r0, lsl #4]
     9d0:	00000052 	andeq	r0, r0, r2, asr r0
     9d4:	00071d03 	andeq	r1, r7, r3, lsl #26
     9d8:	0f1a0300 	svceq	0x001a0300
     9dc:	000000b4 	strheq	r0, [r0], -r4
     9e0:	00ba0407 	adcseq	r0, sl, r7, lsl #8
     9e4:	01080000 	mrseq	r0, (UNDEF: 8)
     9e8:	000000c6 	andeq	r0, r0, r6, asr #1
     9ec:	00004109 	andeq	r4, r0, r9, lsl #2
     9f0:	080a0000 	stmdaeq	sl, {}	; <UNPREDICTABLE>
     9f4:	1b091b03 	blne	247608 <_Min_Stack_Size+0x247208>
     9f8:	0b000001 	bleq	a04 <_Min_Stack_Size+0x604>
     9fc:	00000461 	andeq	r0, r0, r1, ror #8
     a00:	410b1c03 	tstmi	fp, r3, lsl #24
     a04:	02000000 	andeq	r0, r0, #0
     a08:	840b0023 	strhi	r0, [fp], #-35	; 0xffffffdd
     a0c:	03000008 	movweq	r0, #8
     a10:	00410b1d 	subeq	r0, r1, sp, lsl fp
     a14:	23020000 	movwcs	r0, #8192	; 0x2000
     a18:	04d00b01 	ldrbeq	r0, [r0], #2817	; 0xb01
     a1c:	1e030000 	cdpne	0, 0, cr0, cr3, cr0, {0}
     a20:	00005e0c 	andeq	r5, r0, ip, lsl #28
     a24:	02230200 	eoreq	r0, r3, #0, 4
     a28:	0003e90b 	andeq	lr, r3, fp, lsl #18
     a2c:	0c1f0300 	ldceq	3, cr0, [pc], {-0}
     a30:	0000005e 	andeq	r0, r0, lr, asr r0
     a34:	0b042302 	bleq	109644 <_Min_Stack_Size+0x109244>
     a38:	00000867 	andeq	r0, r0, r7, ror #16
     a3c:	5e0c2003 	cdppl	0, 0, cr2, cr12, cr3, {0}
     a40:	02000000 	andeq	r0, r0, #0
     a44:	03000623 	movweq	r0, #1571	; 0x623
     a48:	000008f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     a4c:	c6022103 	strgt	r2, [r2], -r3, lsl #2
     a50:	0c000000 	stceq	0, cr0, [r0], {-0}
     a54:	00250105 	eoreq	r0, r5, r5, lsl #2
     a58:	58050000 	stmdapl	r5, {}	; <UNPREDICTABLE>
     a5c:	00029e01 	andeq	r9, r2, r1, lsl #28
     a60:	08530d00 	ldmdaeq	r3, {r8, sl, fp}^
     a64:	0d720000 	ldcleq	0, cr0, [r2, #-0]
     a68:	000004d7 	ldrdeq	r0, [r0], -r7
     a6c:	06fb0d74 			; <UNDEFINED> instruction: 0x06fb0d74
     a70:	0d750000 	ldcleq	0, cr0, [r5, #-0]
     a74:	00000936 	andeq	r0, r0, r6, lsr r9
     a78:	042f0d76 	strteq	r0, [pc], #-3446	; a80 <_Min_Stack_Size+0x680>
     a7c:	0d7b0000 	ldcleq	0, cr0, [fp, #-0]
     a80:	00000924 	andeq	r0, r0, r4, lsr #18
     a84:	04b40d7c 	ldrteq	r0, [r4], #3452	; 0xd7c
     a88:	0d7e0000 	ldcleq	0, cr0, [lr, #-0]
     a8c:	000008bc 			; <UNDEFINED> instruction: 0x000008bc
     a90:	06d70e7f 			; <UNDEFINED> instruction: 0x06d70e7f
     a94:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
     a98:	00000714 	andeq	r0, r0, r4, lsl r7
     a9c:	04fc0e01 	ldrbteq	r0, [ip], #3585	; 0xe01
     aa0:	0e020000 	cdpeq	0, 0, cr0, cr2, cr0, {0}
     aa4:	000005eb 	andeq	r0, r0, fp, ror #11
     aa8:	047c0e03 	ldrbteq	r0, [ip], #-3587	; 0xfffff1fd
     aac:	0e040000 	cdpeq	0, 0, cr0, cr4, cr0, {0}
     ab0:	000004c7 	andeq	r0, r0, r7, asr #9
     ab4:	04910e05 	ldreq	r0, [r1], #3589	; 0xe05
     ab8:	0e060000 	cdpeq	0, 0, cr0, cr6, cr0, {0}
     abc:	00000879 	andeq	r0, r0, r9, ror r8
     ac0:	06150e07 	ldreq	r0, [r5], -r7, lsl #28
     ac4:	0e080000 	cdpeq	0, 0, cr0, cr8, cr0, {0}
     ac8:	000009cb 	andeq	r0, r0, fp, asr #19
     acc:	07090e09 	streq	r0, [r9, -r9, lsl #28]
     ad0:	0e0a0000 	cdpeq	0, 0, cr0, cr10, cr0, {0}
     ad4:	0000069e 	muleq	r0, lr, r6
     ad8:	04420e0b 	strbeq	r0, [r2], #-3595	; 0xfffff1f5
     adc:	0e0c0000 	cdpeq	0, 0, cr0, cr12, cr0, {0}
     ae0:	00000755 	andeq	r0, r0, r5, asr r7
     ae4:	05510e0d 	ldrbeq	r0, [r1, #-3597]	; 0xfffff1f3
     ae8:	0e0e0000 	cdpeq	0, 0, cr0, cr14, cr0, {0}
     aec:	000009a0 	andeq	r0, r0, r0, lsr #19
     af0:	06610e0f 	strbteq	r0, [r1], -pc, lsl #28
     af4:	0e100000 	cdpeq	0, 1, cr0, cr0, cr0, {0}
     af8:	0000040f 	andeq	r0, r0, pc, lsl #8
     afc:	06200e11 			; <UNDEFINED> instruction: 0x06200e11
     b00:	0e120000 	cdpeq	0, 1, cr0, cr2, cr0, {0}
     b04:	00000918 	andeq	r0, r0, r8, lsl r9
     b08:	0a2c0e13 	beq	b0435c <_Min_Stack_Size+0xb03f5c>
     b0c:	0e140000 	cdpeq	0, 1, cr0, cr4, cr0, {0}
     b10:	000009ba 			; <UNDEFINED> instruction: 0x000009ba
     b14:	05730e15 	ldrbeq	r0, [r3, #-3605]!	; 0xfffff1eb
     b18:	0e160000 	cdpeq	0, 1, cr0, cr6, cr0, {0}
     b1c:	00000970 	andeq	r0, r0, r0, ror r9
     b20:	04050e17 	streq	r0, [r5], #-3607	; 0xfffff1e9
     b24:	0e190000 	cdpeq	0, 1, cr0, cr9, cr0, {0}
     b28:	000006cc 	andeq	r0, r0, ip, asr #13
     b2c:	03de0e1a 	bicseq	r0, lr, #416	; 0x1a0
     b30:	0e1b0000 	cdpeq	0, 1, cr0, cr11, cr0, {0}
     b34:	000008cf 	andeq	r0, r0, pc, asr #17
     b38:	06940e1c 			; <UNDEFINED> instruction: 0x06940e1c
     b3c:	0e1d0000 	cdpeq	0, 1, cr0, cr13, cr0, {0}
     b40:	00000438 	andeq	r0, r0, r8, lsr r4
     b44:	07760e1e 			; <UNDEFINED> instruction: 0x07760e1e
     b48:	0e1f0000 	cdpeq	0, 1, cr0, cr15, cr0, {0}
     b4c:	000008af 	andeq	r0, r0, pc, lsr #17
     b50:	062a0e20 	strteq	r0, [sl], -r0, lsr #28
     b54:	0e210000 	cdpeq	0, 2, cr0, cr1, cr0, {0}
     b58:	00000422 	andeq	r0, r0, r2, lsr #8
     b5c:	052f0e22 	streq	r0, [pc, #-3618]!	; fffffd42 <BootRAM+0xef704e3>
     b60:	0e230000 	cdpeq	0, 2, cr0, cr3, cr0, {0}
     b64:	00000987 	andeq	r0, r0, r7, lsl #19
     b68:	083b0e24 	ldmdaeq	fp!, {r2, r5, r9, sl, fp}
     b6c:	0e250000 	cdpeq	0, 2, cr0, cr5, cr0, {0}
     b70:	000005cc 	andeq	r0, r0, ip, asr #11
     b74:	0a160e26 	beq	584414 <_Min_Stack_Size+0x584014>
     b78:	0e270000 	cdpeq	0, 2, cr0, cr7, cr0, {0}
     b7c:	0000049c 	muleq	r0, ip, r4
     b80:	07b40e28 	ldreq	r0, [r4, r8, lsr #28]!
     b84:	0e290000 	cdpeq	0, 2, cr0, cr9, cr0, {0}
     b88:	00000816 	andeq	r0, r0, r6, lsl r8
     b8c:	05470e2a 	strbeq	r0, [r7, #-3626]	; 0xfffff1d6
     b90:	0e2b0000 	cdpeq	0, 2, cr0, cr11, cr0, {0}
     b94:	00000996 	muleq	r0, r6, r9
     b98:	074b0e2c 	strbeq	r0, [fp, -ip, lsr #28]
     b9c:	0e2e0000 	cdpeq	0, 2, cr0, cr14, cr0, {0}
     ba0:	0000063c 	andeq	r0, r0, ip, lsr r6
     ba4:	06740e2f 	ldrbteq	r0, [r4], -pc, lsr #28
     ba8:	0e320000 	cdpeq	0, 3, cr0, cr2, cr0, {0}
     bac:	00000a03 	andeq	r0, r0, r3, lsl #20
     bb0:	07380e33 			; <UNDEFINED> instruction: 0x07380e33
     bb4:	0e340000 	cdpeq	0, 3, cr0, cr4, cr0, {0}
     bb8:	00000513 	andeq	r0, r0, r3, lsl r5
     bbc:	089c0e35 	ldmeq	ip, {r0, r2, r4, r5, r9, sl, fp}
     bc0:	0e360000 	cdpeq	0, 3, cr0, cr6, cr0, {0}
     bc4:	00000653 	andeq	r0, r0, r3, asr r6
     bc8:	b9030038 	stmdblt	r3, {r3, r4, r5}
     bcc:	05000005 	streq	r0, [r0, #-5]
     bd0:	01270398 			; <UNDEFINED> instruction: 0x01270398
     bd4:	040f0000 	streq	r0, [pc], #-0	; bdc <_Min_Stack_Size+0x7dc>
     bd8:	0984020e 	stmibeq	r4, {r1, r2, r3, r9}
     bdc:	00000382 	andeq	r0, r0, r2, lsl #7
     be0:	00050e0b 	andeq	r0, r5, fp, lsl #28
     be4:	11860200 	orrne	r0, r6, r0, lsl #4
     be8:	00000392 	muleq	r0, r2, r3
     bec:	0b002302 	bleq	97fc <_Min_Stack_Size+0x93fc>
     bf0:	000007d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     bf4:	97118702 	ldrls	r8, [r1, -r2, lsl #14]
     bf8:	02000003 	andeq	r0, r0, #3
     bfc:	820b2023 	andhi	r2, fp, #35	; 0x23
     c00:	02000009 	andeq	r0, r0, #9
     c04:	03921188 	orrseq	r1, r2, #136, 2	; 0x22
     c08:	23030000 	movwcs	r0, #12288	; 0x3000
     c0c:	260b0180 	strcs	r0, [fp], -r0, lsl #3
     c10:	02000005 	andeq	r0, r0, #5
     c14:	03971189 	orrseq	r1, r7, #1073741858	; 0x40000022
     c18:	23030000 	movwcs	r0, #12288	; 0x3000
     c1c:	e90b01a0 	stmdb	fp, {r5, r7, r8}
     c20:	02000009 	andeq	r0, r0, #9
     c24:	0392118a 	orrseq	r1, r2, #-2147483614	; 0x80000022
     c28:	23030000 	movwcs	r0, #12288	; 0x3000
     c2c:	e40b0280 	str	r0, [fp], #-640	; 0xfffffd80
     c30:	02000007 	andeq	r0, r0, #7
     c34:	0397118b 	orrseq	r1, r7, #-1073741790	; 0xc0000022
     c38:	23030000 	movwcs	r0, #12288	; 0x3000
     c3c:	330b02a0 	movwcc	r0, #45728	; 0xb2a0
     c40:	02000007 	andeq	r0, r0, #7
     c44:	0392118c 	orrseq	r1, r2, #140, 2	; 0x23
     c48:	23030000 	movwcs	r0, #12288	; 0x3000
     c4c:	ee0b0380 	cdp	3, 0, cr0, cr11, cr0, {4}
     c50:	02000007 	andeq	r0, r0, #7
     c54:	0397118d 	orrseq	r1, r7, #1073741859	; 0x40000023
     c58:	23030000 	movwcs	r0, #12288	; 0x3000
     c5c:	910b03a0 	smlatbls	fp, r0, r3, r0
     c60:	02000009 	andeq	r0, r0, #9
     c64:	0392118e 	orrseq	r1, r2, #-2147483613	; 0x80000023
     c68:	23030000 	movwcs	r0, #12288	; 0x3000
     c6c:	f80b0480 			; <UNDEFINED> instruction: 0xf80b0480
     c70:	02000007 	andeq	r0, r0, #7
     c74:	03a7118f 			; <UNDEFINED> instruction: 0x03a7118f
     c78:	23030000 	movwcs	r0, #12288	; 0x3000
     c7c:	491004a0 	ldmdbmi	r0, {r5, r7, sl}
     c80:	90020050 	andls	r0, r2, r0, asr r0
     c84:	0003c711 	andeq	ip, r3, r1, lsl r7
     c88:	80230300 	eorhi	r0, r3, r0, lsl #6
     c8c:	08020b06 	stmdaeq	r2, {r1, r2, r8, r9, fp}
     c90:	91020000 	mrsls	r0, (UNDEF: 2)
     c94:	0003cc11 	andeq	ip, r3, r1, lsl ip
     c98:	f0230300 			; <UNDEFINED> instruction: 0xf0230300
     c9c:	07af0b07 	streq	r0, [pc, r7, lsl #22]!
     ca0:	92020000 	andls	r0, r2, #0
     ca4:	00008211 	andeq	r8, r0, r1, lsl r2
     ca8:	80230300 	eorhi	r0, r3, r0, lsl #6
     cac:	8211001c 	andshi	r0, r1, #28
     cb0:	92000000 	andls	r0, r0, #0
     cb4:	12000003 	andne	r0, r0, #3
     cb8:	000000a1 	andeq	r0, r0, r1, lsr #1
     cbc:	82040007 	andhi	r0, r4, #7
     cc0:	11000003 	tstne	r0, r3
     cc4:	00000076 	andeq	r0, r0, r6, ror r0
     cc8:	000003a7 	andeq	r0, r0, r7, lsr #7
     ccc:	0000a112 	andeq	sl, r0, r2, lsl r1
     cd0:	11001700 	tstne	r0, r0, lsl #14
     cd4:	00000076 	andeq	r0, r0, r6, ror r0
     cd8:	000003b7 			; <UNDEFINED> instruction: 0x000003b7
     cdc:	0000a112 	andeq	sl, r0, r2, lsl r1
     ce0:	11003700 	tstne	r0, r0, lsl #14
     ce4:	0000004d 	andeq	r0, r0, sp, asr #32
     ce8:	000003c7 	andeq	r0, r0, r7, asr #7
     cec:	0000a112 	andeq	sl, r0, r2, lsl r1
     cf0:	0400ef00 	streq	lr, [r0], #-3840	; 0xfffff100
     cf4:	000003b7 			; <UNDEFINED> instruction: 0x000003b7
     cf8:	00007611 	andeq	r7, r0, r1, lsl r6
     cfc:	0003dd00 	andeq	sp, r3, r0, lsl #26
     d00:	00a11300 	adceq	r1, r1, r0, lsl #6
     d04:	02830000 	addeq	r0, r3, #0
     d08:	088d0300 	stmeq	sp, {r8, r9}
     d0c:	93020000 	movwls	r0, #8192	; 0x2000
     d10:	0002aa04 	andeq	sl, r2, r4, lsl #20
     d14:	02881400 	addeq	r1, r8, #0, 8
     d18:	ce020000 	cdpgt	0, 0, cr0, cr2, cr0, {0}
     d1c:	009c1506 	addseq	r1, ip, r6, lsl #10
     d20:	01010000 	mrseq	r0, (UNDEF: 1)
     d24:	00013a15 	andeq	r3, r1, r5, lsl sl
     d28:	114c0600 	cmpne	ip, r0, lsl #12
     d2c:	00000076 	andeq	r0, r0, r6, ror r0
     d30:	18160101 	ldmdane	r6, {r0, r8}
     d34:	09016105 	stmdbeq	r1, {r0, r2, r8, sp, lr}
     d38:	00000441 	andeq	r0, r0, r1, asr #8
     d3c:	0004c017 	andeq	ip, r4, r7, lsl r0
     d40:	01630500 	cmneq	r3, r0, lsl #10
     d44:	00008211 	andeq	r8, r0, r1, lsl r2
     d48:	00230200 	eoreq	r0, r3, r0, lsl #4
     d4c:	434d5018 	movtmi	r5, #53272	; 0xd018
     d50:	01640500 	cmneq	r4, r0, lsl #10
     d54:	00008211 	andeq	r8, r0, r1, lsl r2
     d58:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     d5c:	0006c017 	andeq	ip, r6, r7, lsl r0
     d60:	01650500 	cmneq	r5, r0, lsl #10
     d64:	00045111 	andeq	r5, r4, r1, lsl r1
     d68:	08230200 	stmdaeq	r3!, {r9}
     d6c:	00821100 	addeq	r1, r2, r0, lsl #2
     d70:	04510000 	ldrbeq	r0, [r1], #-0
     d74:	a1120000 	tstge	r2, r0
     d78:	03000000 	movweq	r0, #0
     d7c:	04410400 	strbeq	r0, [r1], #-1024	; 0xfffffc00
     d80:	f0190000 			; <UNDEFINED> instruction: 0xf0190000
     d84:	05000003 	streq	r0, [r0, #-3]
     d88:	06030166 	streq	r0, [r3], -r6, ror #2
     d8c:	16000004 	strne	r0, [r0], -r4
     d90:	01930538 	orrseq	r0, r3, r8, lsr r5
     d94:	00054d09 	andeq	r4, r5, r9, lsl #26
     d98:	52431800 	subpl	r1, r3, #0, 16
     d9c:	01950500 	orrseq	r0, r5, r0, lsl #10
     da0:	00008211 	andeq	r8, r0, r1, lsl r2
     da4:	00230200 	eoreq	r0, r3, r0, lsl #4
     da8:	00030917 	andeq	r0, r3, r7, lsl r9
     dac:	01960500 	orrseq	r0, r6, r0, lsl #10
     db0:	00008211 	andeq	r8, r0, r1, lsl r2
     db4:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     db8:	0002c417 	andeq	ip, r2, r7, lsl r4
     dbc:	01970500 	orrseq	r0, r7, r0, lsl #10
     dc0:	00008211 	andeq	r8, r0, r1, lsl r2
     dc4:	08230200 	stmdaeq	r3!, {r9}
     dc8:	52494318 	subpl	r4, r9, #24, 6	; 0x60000000
     dcc:	01980500 	orrseq	r0, r8, r0, lsl #10
     dd0:	00008211 	andeq	r8, r0, r1, lsl r2
     dd4:	0c230200 	sfmeq	f0, 4, [r3], #-0
     dd8:	00022717 	andeq	r2, r2, r7, lsl r7
     ddc:	01990500 	orrseq	r0, r9, r0, lsl #10
     de0:	00008211 	andeq	r8, r0, r1, lsl r2
     de4:	10230200 	eorne	r0, r3, r0, lsl #4
     de8:	0000c017 	andeq	ip, r0, r7, lsl r0
     dec:	019a0500 	orrseq	r0, sl, r0, lsl #10
     df0:	00008211 	andeq	r8, r0, r1, lsl r2
     df4:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     df8:	00023417 	andeq	r3, r2, r7, lsl r4
     dfc:	019b0500 	orrseq	r0, fp, r0, lsl #10
     e00:	00008211 	andeq	r8, r0, r1, lsl r2
     e04:	18230200 	stmdane	r3!, {r9}
     e08:	0003d717 	andeq	sp, r3, r7, lsl r7
     e0c:	019c0500 	orrseq	r0, ip, r0, lsl #10
     e10:	00008211 	andeq	r8, r0, r1, lsl r2
     e14:	1c230200 	sfmne	f0, 4, [r3], #-0
     e18:	0002b517 	andeq	fp, r2, r7, lsl r5
     e1c:	019d0500 	orrseq	r0, sp, r0, lsl #10
     e20:	00008211 	andeq	r8, r0, r1, lsl r2
     e24:	20230200 	eorcs	r0, r3, r0, lsl #4
     e28:	0002ea17 	andeq	lr, r2, r7, lsl sl
     e2c:	019e0500 	orrseq	r0, lr, r0, lsl #10
     e30:	00008211 	andeq	r8, r0, r1, lsl r2
     e34:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
     e38:	0000d817 	andeq	sp, r0, r7, lsl r8
     e3c:	019f0500 	orrseq	r0, pc, r0, lsl #10
     e40:	00008211 	andeq	r8, r0, r1, lsl r2
     e44:	28230200 	stmdacs	r3!, {r9}
     e48:	0001de17 	andeq	sp, r1, r7, lsl lr
     e4c:	01a00500 	lsleq	r0, r0, #10
     e50:	00008211 	andeq	r8, r0, r1, lsl r2
     e54:	2c230200 	sfmcs	f0, 4, [r3], #-0
     e58:	00019717 	andeq	r9, r1, r7, lsl r7
     e5c:	01a10500 			; <UNDEFINED> instruction: 0x01a10500
     e60:	00008211 	andeq	r8, r0, r1, lsl r2
     e64:	30230200 	eorcc	r0, r3, r0, lsl #4
     e68:	52534318 	subspl	r4, r3, #24, 6	; 0x60000000
     e6c:	01a20500 			; <UNDEFINED> instruction: 0x01a20500
     e70:	00008211 	andeq	r8, r0, r1, lsl r2
     e74:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
     e78:	01641900 	cmneq	r4, r0, lsl #18
     e7c:	a3050000 	movwge	r0, #20480	; 0x5000
     e80:	04630301 	strbteq	r0, [r3], #-769	; 0xfffffcff
     e84:	54160000 	ldrpl	r0, [r6], #-0
     e88:	09023705 	stmdbeq	r2, {r0, r2, r8, r9, sl, ip, sp}
     e8c:	00000705 	andeq	r0, r0, r5, lsl #14
     e90:	0005e617 	andeq	lr, r5, r7, lsl r6
     e94:	02390500 	eorseq	r0, r9, #0, 10
     e98:	00006a11 	andeq	r6, r0, r1, lsl sl
     e9c:	00230200 	eoreq	r0, r3, r0, lsl #4
     ea0:	0007d017 	andeq	sp, r7, r7, lsl r0
     ea4:	023a0500 	eorseq	r0, sl, #0, 10
     ea8:	00006a11 	andeq	r6, r0, r1, lsl sl
     eac:	02230200 	eoreq	r0, r3, #0, 4
     eb0:	00063717 	andeq	r3, r6, r7, lsl r7
     eb4:	023b0500 	eorseq	r0, fp, #0, 10
     eb8:	00006a11 	andeq	r6, r0, r1, lsl sl
     ebc:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     ec0:	0007da17 	andeq	sp, r7, r7, lsl sl
     ec4:	023c0500 	eorseq	r0, ip, #0, 10
     ec8:	00006a11 	andeq	r6, r0, r1, lsl sl
     ecc:	06230200 	strteq	r0, [r3], -r0, lsl #4
     ed0:	0006c717 	andeq	ip, r6, r7, lsl r7
     ed4:	023d0500 	eorseq	r0, sp, #0, 10
     ed8:	00006a11 	andeq	r6, r0, r1, lsl sl
     edc:	08230200 	stmdaeq	r3!, {r9}
     ee0:	0007e417 	andeq	lr, r7, r7, lsl r4
     ee4:	023e0500 	eorseq	r0, lr, #0, 10
     ee8:	00006a11 	andeq	r6, r0, r1, lsl sl
     eec:	0a230200 	beq	8c16f4 <_Min_Stack_Size+0x8c12f4>
     ef0:	0006f617 	andeq	pc, r6, r7, lsl r6	; <UNPREDICTABLE>
     ef4:	023f0500 	eorseq	r0, pc, #0, 10
     ef8:	00006a11 	andeq	r6, r0, r1, lsl sl
     efc:	0c230200 	sfmeq	f0, 4, [r3], #-0
     f00:	0007ee17 	andeq	lr, r7, r7, lsl lr
     f04:	02400500 	subeq	r0, r0, #0, 10
     f08:	00006a11 	andeq	r6, r0, r1, lsl sl
     f0c:	0e230200 	cdpeq	2, 2, cr0, cr3, cr0, {0}
     f10:	00097d17 	andeq	r7, r9, r7, lsl sp
     f14:	02410500 	subeq	r0, r1, #0, 10
     f18:	00006a11 	andeq	r6, r0, r1, lsl sl
     f1c:	10230200 	eorne	r0, r3, r0, lsl #4
     f20:	0007f817 	andeq	pc, r7, r7, lsl r8	; <UNPREDICTABLE>
     f24:	02420500 	subeq	r0, r2, #0, 10
     f28:	00006a11 	andeq	r6, r0, r1, lsl sl
     f2c:	12230200 	eorne	r0, r3, #0, 4
     f30:	0007cb17 	andeq	ip, r7, r7, lsl fp
     f34:	02430500 	subeq	r0, r3, #0, 10
     f38:	00006a11 	andeq	r6, r0, r1, lsl sl
     f3c:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     f40:	00080217 	andeq	r0, r8, r7, lsl r2
     f44:	02440500 	subeq	r0, r4, #0, 10
     f48:	00006a11 	andeq	r6, r0, r1, lsl sl
     f4c:	16230200 	strtne	r0, [r3], -r0, lsl #4
     f50:	00086f17 	andeq	r6, r8, r7, lsl pc
     f54:	02450500 	subeq	r0, r5, #0, 10
     f58:	00006a11 	andeq	r6, r0, r1, lsl sl
     f5c:	18230200 	stmdane	r3!, {r9}
     f60:	00080c17 	andeq	r0, r8, r7, lsl ip
     f64:	02460500 	subeq	r0, r6, #0, 10
     f68:	00006a11 	andeq	r6, r0, r1, lsl sl
     f6c:	1a230200 	bne	8c1774 <_Min_Stack_Size+0x8c1374>
     f70:	0008eb17 	andeq	lr, r8, r7, lsl fp
     f74:	02470500 	subeq	r0, r7, #0, 10
     f78:	00006a11 	andeq	r6, r0, r1, lsl sl
     f7c:	1c230200 	sfmne	f0, 4, [r3], #-0
     f80:	00025e17 	andeq	r5, r2, r7, lsl lr
     f84:	02480500 	subeq	r0, r8, #0, 10
     f88:	00071511 	andeq	r1, r7, r1, lsl r5
     f8c:	1e230200 	cdpne	2, 2, cr0, cr3, cr0, {0}
     f90:	00089717 	andeq	r9, r8, r7, lsl r7
     f94:	02490500 	subeq	r0, r9, #0, 10
     f98:	00006a11 	andeq	r6, r0, r1, lsl sl
     f9c:	40230200 	eormi	r0, r3, r0, lsl #4
     fa0:	000a2217 	andeq	r2, sl, r7, lsl r2
     fa4:	024a0500 	subeq	r0, sl, #0, 10
     fa8:	00006a11 	andeq	r6, r0, r1, lsl sl
     fac:	42230200 	eormi	r0, r3, #0, 4
     fb0:	0004f717 	andeq	pc, r4, r7, lsl r7	; <UNPREDICTABLE>
     fb4:	024b0500 	subeq	r0, fp, #0, 10
     fb8:	00006a11 	andeq	r6, r0, r1, lsl sl
     fbc:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
     fc0:	00082717 	andeq	r2, r8, r7, lsl r7
     fc4:	024c0500 	subeq	r0, ip, #0, 10
     fc8:	00006a11 	andeq	r6, r0, r1, lsl sl
     fcc:	46230200 	strtmi	r0, [r3], -r0, lsl #4
     fd0:	524e4618 	subpl	r4, lr, #24, 12	; 0x1800000
     fd4:	024d0500 	subeq	r0, sp, #0, 10
     fd8:	00006a11 	andeq	r6, r0, r1, lsl sl
     fdc:	48230200 	stmdami	r3!, {r9}
     fe0:	00083117 	andeq	r3, r8, r7, lsl r1
     fe4:	024e0500 	subeq	r0, lr, #0, 10
     fe8:	00006a11 	andeq	r6, r0, r1, lsl sl
     fec:	4a230200 	bmi	8c17f4 <_Min_Stack_Size+0x8c13f4>
     ff0:	00058917 	andeq	r8, r5, r7, lsl r9
     ff4:	024f0500 	subeq	r0, pc, #0, 10
     ff8:	00006a11 	andeq	r6, r0, r1, lsl sl
     ffc:	4c230200 	sfmmi	f0, 4, [r3], #-0
    1000:	000a3817 	andeq	r3, sl, r7, lsl r8
    1004:	02500500 	subseq	r0, r0, #0, 10
    1008:	00006a11 	andeq	r6, r0, r1, lsl sl
    100c:	4e230200 	cdpmi	2, 2, cr0, cr3, cr0, {0}
    1010:	0009b317 	andeq	fp, r9, r7, lsl r3
    1014:	02510500 	subseq	r0, r1, #0, 10
    1018:	00006a11 	andeq	r6, r0, r1, lsl sl
    101c:	50230200 	eorpl	r0, r3, r0, lsl #4
    1020:	000a4217 	andeq	r4, sl, r7, lsl r2
    1024:	02520500 	subseq	r0, r2, #0, 10
    1028:	00006a11 	andeq	r6, r0, r1, lsl sl
    102c:	52230200 	eorpl	r0, r3, #0, 4
    1030:	006a1100 	rsbeq	r1, sl, r0, lsl #2
    1034:	07150000 	ldreq	r0, [r5, -r0]
    1038:	a1120000 	tstge	r2, r0
    103c:	10000000 	andne	r0, r0, r0
    1040:	07050400 	streq	r0, [r5, -r0, lsl #8]
    1044:	7d190000 	ldcvc	0, cr0, [r9, #-0]
    1048:	05000005 	streq	r0, [r0, #-5]
    104c:	5a030253 	bpl	c19a0 <_Min_Stack_Size+0xc15a0>
    1050:	0a000005 	beq	106c <_Min_Stack_Size+0xc6c>
    1054:	07210104 	streq	r0, [r1, -r4, lsl #2]!
    1058:	00000767 	andeq	r0, r0, r7, ror #14
    105c:	00072a1a 	andeq	r2, r7, sl, lsl sl
    1060:	12220100 	eorne	r0, r2, #0, 2
    1064:	00000076 	andeq	r0, r0, r6, ror r0
    1068:	02160a04 	andseq	r0, r6, #4, 20	; 0x4000
    106c:	0a1a0023 	beq	681100 <_Min_Stack_Size+0x680d00>
    1070:	01000009 	tsteq	r0, r9
    1074:	00761223 	rsbseq	r1, r6, r3, lsr #4
    1078:	05040000 	streq	r0, [r4, #-0]
    107c:	00230211 	eoreq	r0, r3, r1, lsl r2
    1080:	0007a21a 	andeq	sl, r7, sl, lsl r2
    1084:	12240100 	eorne	r0, r4, #0, 2
    1088:	00000076 	andeq	r0, r0, r6, ror r0
    108c:	02100104 	andseq	r0, r0, #4, 2
    1090:	1b000023 	blne	1124 <_Min_Stack_Size+0xd24>
    1094:	0e1f0104 	mufeqe	f0, f7, f4
    1098:	00000782 	andeq	r0, r0, r2, lsl #15
    109c:	0007261c 	andeq	r2, r7, ip, lsl r6
    10a0:	10200100 	eorne	r0, r0, r0, lsl #2
    10a4:	00000076 	andeq	r0, r0, r6, ror r0
    10a8:	0007271d 	andeq	r2, r7, sp, lsl r7
    10ac:	67040000 	strvs	r0, [r4, -r0]
    10b0:	0a000007 	beq	10d4 <_Min_Stack_Size+0xcd4>
    10b4:	072a0104 	streq	r0, [sl, -r4, lsl #2]!
    10b8:	000007c7 	andeq	r0, r0, r7, asr #15
    10bc:	0009f21a 	andeq	pc, r9, sl, lsl r2	; <UNPREDICTABLE>
    10c0:	122b0100 	eorne	r0, fp, #0, 2
    10c4:	00000076 	andeq	r0, r0, r6, ror r0
    10c8:	02160a04 	andseq	r0, r6, #4, 20	; 0x4000
    10cc:	831a0023 	tsthi	sl, #35	; 0x23
    10d0:	01000007 	tsteq	r0, r7
    10d4:	0076122c 	rsbseq	r1, r6, ip, lsr #4
    10d8:	05040000 	streq	r0, [r4, #-0]
    10dc:	00230211 	eoreq	r0, r3, r1, lsl r2
    10e0:	0009461a 	andeq	r4, r9, sl, lsl r6
    10e4:	122d0100 	eorne	r0, sp, #0, 2
    10e8:	00000076 	andeq	r0, r0, r6, ror r0
    10ec:	02100104 	andseq	r0, r0, #4, 2
    10f0:	1b000023 	blne	1184 <_Min_Stack_Size+0xd84>
    10f4:	0e280104 	sufeqe	f0, f0, f4
    10f8:	000007e2 	andeq	r0, r0, r2, ror #15
    10fc:	0009ee1c 	andeq	lr, r9, ip, lsl lr
    1100:	10290100 	eorne	r0, r9, r0, lsl #2
    1104:	00000076 	andeq	r0, r0, r6, ror r0
    1108:	0007871d 	andeq	r8, r7, sp, lsl r7
    110c:	c7040000 	strgt	r0, [r4, -r0]
    1110:	0a000007 	beq	1134 <_Min_Stack_Size+0xd34>
    1114:	091d0110 	ldmdbeq	sp, {r4, r8}
    1118:	0000081f 	andeq	r0, r0, pc, lsl r8
    111c:	0009dd0b 	andeq	sp, r9, fp, lsl #26
    1120:	171e0100 	ldrne	r0, [lr, -r0, lsl #2]
    1124:	00000082 	andeq	r0, r0, r2, lsl #1
    1128:	1e002302 	cdpne	3, 0, cr2, cr0, cr2, {0}
    112c:	00000782 	andeq	r0, r0, r2, lsl #15
    1130:	0b042302 	bleq	109d40 <_Min_Stack_Size+0x109940>
    1134:	000008fe 	strdeq	r0, [r0], -lr
    1138:	82172701 	andshi	r2, r7, #262144	; 0x40000
    113c:	02000000 	andeq	r0, r0, #0
    1140:	e21e0823 	ands	r0, lr, #2293760	; 0x230000
    1144:	02000007 	andeq	r0, r0, #7
    1148:	03000c23 	movweq	r0, #3107	; 0xc23
    114c:	00000646 	andeq	r0, r0, r6, asr #12
    1150:	e7023001 	str	r3, [r2, -r1]
    1154:	11000007 	tstne	r0, r7
    1158:	000000a8 	andeq	r0, r0, r8, lsr #1
    115c:	0000083b 	andeq	r0, r0, fp, lsr r8
    1160:	0000a112 	andeq	sl, r0, r2, lsl r1
    1164:	1f000700 	svcne	0x00000700
    1168:	00000953 	andeq	r0, r0, r3, asr r9
    116c:	2b0a3201 	blcs	28d978 <_Min_Stack_Size+0x28d578>
    1170:	01000008 	tsteq	r0, r8
    1174:	001c0305 	andseq	r0, ip, r5, lsl #6
    1178:	021f2000 	andseq	r2, pc, #0
    117c:	01000006 	tsteq	r0, r6
    1180:	082b0a33 	stmdaeq	fp!, {r0, r1, r4, r5, r9, fp}
    1184:	05010000 	streq	r0, [r1, #-0]
    1188:	00003c03 	andeq	r3, r0, r3, lsl #24
    118c:	046f2020 	strbteq	r2, [pc], #-32	; 1194 <_Min_Stack_Size+0xd94>
    1190:	35010000 	strcc	r0, [r1, #-0]
    1194:	00011b16 	andeq	r1, r1, r6, lsl fp
    1198:	0c030500 	cfstr32eq	mvfx0, [r3], {-0}
    119c:	20200000 	eorcs	r0, r0, r0
    11a0:	000005f9 	strdeq	r0, [r0], -r9
    11a4:	41104701 	tstmi	r0, r1, lsl #14
    11a8:	05000000 	streq	r0, [r0, #-0]
    11ac:	00000803 	andeq	r0, r0, r3, lsl #16
    11b0:	060d2020 	streq	r2, [sp], -r0, lsr #32
    11b4:	48010000 	stmdami	r1, {}	; <UNPREDICTABLE>
    11b8:	00089717 	andeq	r9, r8, r7, lsl r7
    11bc:	04030500 	streq	r0, [r3], #-1280	; 0xfffffb00
    11c0:	07200000 	streq	r0, [r0, -r0]!
    11c4:	00005204 	andeq	r5, r0, r4, lsl #4
    11c8:	04ed2000 	strbteq	r2, [sp], #0
    11cc:	49010000 	stmdbmi	r1, {}	; <UNPREDICTABLE>
    11d0:	00005e11 	andeq	r5, r0, r1, lsl lr
    11d4:	0a030500 	beq	c25dc <_Min_Stack_Size+0xc21dc>
    11d8:	20200000 	eorcs	r0, r0, r0
    11dc:	000005d8 	ldrdeq	r0, [r0], -r8
    11e0:	41106401 	tstmi	r0, r1, lsl #8
    11e4:	05000000 	streq	r0, [r0, #-0]
    11e8:	00001603 	andeq	r1, r0, r3, lsl #12
    11ec:	04ab2020 	strteq	r2, [fp], #32
    11f0:	aa010000 	bge	411f8 <_Min_Stack_Size+0x40df8>
    11f4:	00005e11 	andeq	r5, r0, r1, lsl lr
    11f8:	00030500 	andeq	r0, r3, r0, lsl #10
    11fc:	16200000 	strtne	r0, [r0], -r0
    1200:	01320104 	teqeq	r2, r4, lsl #2
    1204:	00091705 	andeq	r1, r9, r5, lsl #14
    1208:	09f22100 	ldmibeq	r2!, {r8, sp}^
    120c:	33010000 	movwcc	r0, #4096	; 0x1000
    1210:	00761001 	rsbseq	r1, r6, r1
    1214:	0a040000 	beq	10121c <_Min_Stack_Size+0x100e1c>
    1218:	00230216 	eoreq	r0, r3, r6, lsl r2
    121c:	00078321 	andeq	r8, r7, r1, lsr #6
    1220:	01340100 	teqeq	r4, r0, lsl #2
    1224:	00007610 	andeq	r7, r0, r0, lsl r6
    1228:	11050400 	tstne	r5, r0, lsl #8
    122c:	21002302 	tstcs	r0, r2, lsl #6
    1230:	00000946 	andeq	r0, r0, r6, asr #18
    1234:	10013501 	andne	r3, r1, r1, lsl #10
    1238:	00000076 	andeq	r0, r0, r6, ror r0
    123c:	02100104 	andseq	r0, r0, #4, 2
    1240:	22000023 	andcs	r0, r0, #35	; 0x23
    1244:	01300104 	teqeq	r0, r4, lsl #2
    1248:	0009340c 	andeq	r3, r9, ip, lsl #8
    124c:	04f12300 	ldrbteq	r2, [r1], #768	; 0x300
    1250:	31010000 	mrscc	r0, (UNDEF: 1)
    1254:	00760e01 	rsbseq	r0, r6, r1, lsl #28
    1258:	d31d0000 	tstle	sp, #0
    125c:	00000008 	andeq	r0, r0, r8
    1260:	00091704 	andeq	r1, r9, r4, lsl #14
    1264:	01081600 	tsteq	r8, r0, lsl #12
    1268:	5c09012e 	stfpls	f0, [r9], {46}	; 0x2e
    126c:	17000009 	strne	r0, [r0, -r9]
    1270:	00000905 	andeq	r0, r0, r5, lsl #18
    1274:	15012f01 	strne	r2, [r1, #-3841]	; 0xfffff0ff
    1278:	00000082 	andeq	r0, r0, r2, lsl #1
    127c:	1e002302 	cdpne	3, 0, cr2, cr0, cr2, {0}
    1280:	00000934 	andeq	r0, r0, r4, lsr r9
    1284:	00042302 	andeq	r2, r4, r2, lsl #6
    1288:	00045519 	andeq	r5, r4, r9, lsl r5
    128c:	01380100 	teqeq	r8, r0, lsl #2
    1290:	00093902 	andeq	r3, r9, r2, lsl #18
    1294:	87012400 	strhi	r2, [r1, -r0, lsl #8]
    1298:	01000006 	tsteq	r0, r6
    129c:	01050148 	tsteq	r5, r8, asr #2
    12a0:	00000095 	muleq	r0, r5, r0
    12a4:	080007f0 	stmdaeq	r0, {r4, r5, r6, r7, r8, r9, sl}
    12a8:	0800084a 	stmdaeq	r0, {r1, r3, r6, fp}
    12ac:	0000044f 	andeq	r0, r0, pc, asr #8
    12b0:	000a1d01 	andeq	r1, sl, r1, lsl #26
    12b4:	64692500 	strbtvs	r2, [r9], #-1280	; 0xfffffb00
    12b8:	48010078 	stmdami	r1, {r3, r4, r5, r6}
    12bc:	00411a01 	subeq	r1, r1, r1, lsl #20
    12c0:	04730000 	ldrbteq	r0, [r3], #-0
    12c4:	046f0000 	strbteq	r0, [pc], #-0	; 12cc <_Min_Stack_Size+0xecc>
    12c8:	62250000 	eorvs	r0, r5, #0
    12cc:	01006675 	tsteq	r0, r5, ror r6
    12d0:	1d290148 	stfnes	f0, [r9, #-288]!	; 0xfffffee0
    12d4:	9a00000a 	bls	1304 <_Min_Stack_Size+0xf04>
    12d8:	94000004 	strls	r0, [r0], #-4
    12dc:	26000004 	strcs	r0, [r0], -r4
    12e0:	000005b3 			; <UNDEFINED> instruction: 0x000005b3
    12e4:	10014901 	andne	r4, r1, r1, lsl #18
    12e8:	00000a23 	andeq	r0, r0, r3, lsr #20
    12ec:	000004cc 	andeq	r0, r0, ip, asr #9
    12f0:	000004c8 	andeq	r0, r0, r8, asr #9
    12f4:	007a7327 	rsbseq	r7, sl, r7, lsr #6
    12f8:	07014a01 	streq	r4, [r1, -r1, lsl #20]
    12fc:	00000095 	muleq	r0, r5, r0
    1300:	000004f6 	strdeq	r0, [r0], -r6
    1304:	000004f4 	strdeq	r0, [r0], -r4
    1308:	01006e27 	tsteq	r0, r7, lsr #28
    130c:	9507014c 	strls	r0, [r7, #-332]	; 0xfffffeb4
    1310:	0f000000 	svceq	0x00000000
    1314:	09000005 	stmdbeq	r0, {r0, r2}
    1318:	27000005 	strcs	r0, [r0, -r5]
    131c:	01006e69 	tsteq	r0, r9, ror #28
    1320:	290d014d 	stmdbcs	sp, {r0, r2, r3, r6, r8}
    1324:	4600000a 	strmi	r0, [r0], -sl
    1328:	40000005 	andmi	r0, r0, r5
    132c:	28000005 	stmdacs	r0, {r0, r2}
    1330:	00000088 	andeq	r0, r0, r8, lsl #1
    1334:	01006927 	tsteq	r0, r7, lsr #18
    1338:	950b014e 	strls	r0, [fp, #-334]	; 0xfffffeb2
    133c:	73000000 	movwvc	r0, #0
    1340:	71000005 	tstvc	r0, r5
    1344:	00000005 	andeq	r0, r0, r5
    1348:	5e040700 	cdppl	7, 0, cr0, cr4, cr0, {0}
    134c:	07000000 	streq	r0, [r0, -r0]
    1350:	00095c04 	andeq	r5, r9, r4, lsl #24
    1354:	76040700 	strvc	r0, [r4], -r0, lsl #14
    1358:	29000000 	stmdbcs	r0, {}	; <UNPREDICTABLE>
    135c:	00053901 	andeq	r3, r5, r1, lsl #18
    1360:	013a0100 	teqeq	sl, r0, lsl #2
    1364:	07400106 	strbeq	r0, [r0, -r6, lsl #2]
    1368:	07940800 	ldreq	r0, [r4, r0, lsl #16]
    136c:	05870800 	streq	r0, [r7, #2048]	; 0x800
    1370:	eb010000 	bl	41378 <_Min_Stack_Size+0x40f78>
    1374:	2500000a 	strcs	r0, [r0, #-10]
    1378:	00786469 	rsbseq	r6, r8, r9, ror #8
    137c:	1c013a01 			; <UNDEFINED> instruction: 0x1c013a01
    1380:	00000041 	andeq	r0, r0, r1, asr #32
    1384:	000005ad 	andeq	r0, r0, sp, lsr #11
    1388:	000005a7 	andeq	r0, r0, r7, lsr #11
    138c:	6675622a 	ldrbtvs	r6, [r5], -sl, lsr #4
    1390:	013a0100 	teqeq	sl, r0, lsl #2
    1394:	00089730 	andeq	r9, r8, r0, lsr r7
    1398:	2b510100 	blcs	14417a0 <_Min_Stack_Size+0x14413a0>
    139c:	000007c6 	andeq	r0, r0, r6, asr #15
    13a0:	3e013a01 	vmlacc.f32	s6, s2, s2
    13a4:	0000005e 	andeq	r0, r0, lr, asr r0
    13a8:	b3265201 			; <UNDEFINED> instruction: 0xb3265201
    13ac:	01000005 	tsteq	r0, r5
    13b0:	2310013b 	tstcs	r0, #-1073741810	; 0xc000000e
    13b4:	db00000a 	blle	13e4 <_Min_Stack_Size+0xfe4>
    13b8:	d9000005 	stmdble	r0, {r0, r2}
    13bc:	27000005 	strcs	r0, [r0, -r5]
    13c0:	0100324e 	tsteq	r0, lr, asr #4
    13c4:	5e0c013c 	mcrpl	1, 0, r0, cr12, cr12, {1}
    13c8:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
    13cc:	ee000005 	cdp	0, 0, cr0, cr0, cr5, {0}
    13d0:	26000005 	strcs	r0, [r0], -r5
    13d4:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    13d8:	0d013e01 	stceq	14, cr3, [r1, #-4]
    13dc:	00000a1d 	andeq	r0, r0, sp, lsl sl
    13e0:	00000605 	andeq	r0, r0, r5, lsl #12
    13e4:	00000603 	andeq	r0, r0, r3, lsl #12
    13e8:	74756f27 	ldrbtvc	r6, [r5], #-3879	; 0xfffff0d9
    13ec:	013f0100 	teqeq	pc, r0, lsl #2
    13f0:	000a290d 	andeq	r2, sl, sp, lsl #18
    13f4:	00061e00 	andeq	r1, r6, r0, lsl #28
    13f8:	00061800 	andeq	r1, r6, r0, lsl #16
    13fc:	00502800 	subseq	r2, r0, r0, lsl #16
    1400:	69270000 	stmdbvs	r7!, {}	; <UNPREDICTABLE>
    1404:	01400100 	mrseq	r0, (UNDEF: 80)
    1408:	00005e10 	andeq	r5, r0, r0, lsl lr
    140c:	00065900 	andeq	r5, r6, r0, lsl #18
    1410:	00065500 	andeq	r5, r6, r0, lsl #10
    1414:	2c000000 	stccs	0, cr0, [r0], {-0}
    1418:	00058f01 	andeq	r8, r5, r1, lsl #30
    141c:	01040100 	mrseq	r0, (UNDEF: 20)
    1420:	00061806 	andeq	r1, r6, r6, lsl #16
    1424:	00074008 	andeq	r4, r7, r8
    1428:	00067908 	andeq	r7, r6, r8, lsl #18
    142c:	0bd30100 	bleq	ff4c1834 <BootRAM+0xe431fd5>
    1430:	302d0000 	eorcc	r0, sp, r0
    1434:	23000000 	movwcs	r0, #0
    1438:	2700000b 	strcs	r0, [r0, -fp]
    143c:	0a010069 	beq	415e8 <_Min_Stack_Size+0x411e8>
    1440:	00411101 	subeq	r1, r1, r1, lsl #2
    1444:	069d0000 	ldreq	r0, [sp], r0
    1448:	06990000 	ldreq	r0, [r9], r0
    144c:	2e000000 	cdpcs	0, 0, cr0, cr0, cr0, {0}
    1450:	08000688 	stmdaeq	r0, {r3, r7, r9, sl}
    1454:	080006dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r9, sl}
    1458:	00000b65 	andeq	r0, r0, r5, ror #22
    145c:	0008c926 	andeq	ip, r8, r6, lsr #18
    1460:	01160100 	tsteq	r6, r0, lsl #2
    1464:	0000410d 	andeq	r4, r0, sp, lsl #2
    1468:	0006c200 	andeq	ip, r6, r0, lsl #4
    146c:	0006c000 	andeq	ip, r6, r0
    1470:	06aa2f00 	strteq	r2, [sl], r0, lsl #30
    1474:	0b550800 	bleq	154347c <_Min_Stack_Size+0x154307c>
    1478:	01300000 	teqeq	r0, r0
    147c:	00750250 	rsbseq	r0, r5, r0, asr r2
    1480:	06cc3100 	strbeq	r3, [ip], r0, lsl #2
    1484:	01300800 	teqeq	r0, r0, lsl #16
    1488:	00750550 	rsbseq	r0, r5, r0, asr r5
    148c:	00218008 	eoreq	r8, r1, r8
    1490:	06283200 	strteq	r3, [r8], -r0, lsl #4
    1494:	11c20800 	bicne	r0, r2, r0, lsl #16
    1498:	6a330000 	bvs	cc14a0 <_Min_Stack_Size+0xcc10a0>
    149c:	61080006 	tstvs	r8, r6
    14a0:	9700000c 	strls	r0, [r0, -ip]
    14a4:	3000000b 	andcc	r0, r0, fp
    14a8:	74025001 	strvc	r5, [r2], #-1
    14ac:	51013000 	mrspl	r3, (UNDEF: 1)
    14b0:	30007402 	andcc	r7, r0, r2, lsl #8
    14b4:	08025201 	stmdaeq	r2, {r0, r9, ip, lr}
    14b8:	53013040 	movwpl	r3, #4160	; 0x1040
    14bc:	084b0305 	stmdaeq	fp, {r0, r2, r8, r9}^
    14c0:	33000800 	movwcc	r0, #2048	; 0x800
    14c4:	08000676 	stmdaeq	r0, {r1, r2, r4, r5, r6, r9, sl}
    14c8:	00000c61 	andeq	r0, r0, r1, ror #24
    14cc:	00000bc0 	andeq	r0, r0, r0, asr #23
    14d0:	02500130 	subseq	r0, r0, #48, 2
    14d4:	01308009 	teqeq	r0, r9
    14d8:	00740251 	rsbseq	r0, r4, r1, asr r2
    14dc:	02520130 	subseq	r0, r2, #48, 2
    14e0:	01304008 	teqeq	r0, r8
    14e4:	95030553 	strls	r0, [r3, #-1363]	; 0xfffffaad
    14e8:	00080007 	andeq	r0, r8, r7
    14ec:	00067e32 	andeq	r7, r6, r2, lsr lr
    14f0:	0011cb08 	andseq	ip, r1, r8, lsl #22
    14f4:	06ea3200 	strbteq	r3, [sl], r0, lsl #4
    14f8:	11c20800 	bicne	r0, r2, r0, lsl #16
    14fc:	34000000 	strcc	r0, [r0], #-0
    1500:	00095d01 	andeq	r5, r9, r1, lsl #26
    1504:	06d60100 	ldrbeq	r0, [r6], r0, lsl #2
    1508:	0004cc01 	andeq	ip, r4, r1, lsl #24
    150c:	00061808 	andeq	r1, r6, r8, lsl #16
    1510:	0006d508 	andeq	sp, r6, r8, lsl #10
    1514:	0c610100 	stfeqe	f0, [r1], #-0
    1518:	c9350000 	ldmdbgt	r5!, {}	; <UNPREDICTABLE>
    151c:	01000008 	tsteq	r0, r8
    1520:	004121d6 	ldrdeq	r2, [r1], #-22	; 0xffffffea
    1524:	06f90000 	ldrbteq	r0, [r9], r0
    1528:	06f50000 	ldrbteq	r0, [r5], r0
    152c:	c3350000 	teqgt	r5, #0
    1530:	01000009 	tsteq	r0, r9
    1534:	004130d6 	ldrdeq	r3, [r1], #-6
    1538:	07270000 	streq	r0, [r7, -r0]!
    153c:	07170000 	ldreq	r0, [r7, -r0]
    1540:	c6350000 	ldrtgt	r0, [r5], -r0
    1544:	01000007 	tsteq	r0, r7
    1548:	005e42d6 	ldrsbeq	r4, [lr], #-38	; 0xffffffda
    154c:	07990000 	ldreq	r0, [r9, r0]
    1550:	07930000 	ldreq	r0, [r3, r0]
    1554:	50360000 	eorspl	r0, r6, r0
    1558:	0100000c 	tsteq	r0, ip
    155c:	00a851d6 	ldrdeq	r5, [r8], r6	; <UNPREDICTABLE>
    1560:	53010000 	movwpl	r0, #4096	; 0x1000
    1564:	0009d637 	andeq	sp, r9, r7, lsr r6
    1568:	0bd70100 	bleq	ff5c1970 <BootRAM+0xe532111>
    156c:	00000041 	andeq	r0, r0, r1, asr #32
    1570:	000007cd 	andeq	r0, r0, sp, asr #15
    1574:	000007c5 	andeq	r0, r0, r5, asr #15
    1578:	66756238 			; <UNDEFINED> instruction: 0x66756238
    157c:	0cdd0100 	ldfeqe	f0, [sp], {0}
    1580:	0000005e 	andeq	r0, r0, lr, asr r0
    1584:	0000082b 	andeq	r0, r0, fp, lsr #16
    1588:	00000817 	andeq	r0, r0, r7, lsl r8
    158c:	47013400 	strmi	r3, [r1, -r0, lsl #8]
    1590:	01000008 	tsteq	r0, r8
    1594:	e00106ab 	and	r0, r1, fp, lsr #13
    1598:	cc080003 	stcgt	0, cr0, [r8], {3}
    159c:	cf080004 	svcgt	0x00080004
    15a0:	01000008 	tsteq	r0, r8
    15a4:	00000cf5 	strdeq	r0, [r0], -r5
    15a8:	0008c935 	andeq	ip, r8, r5, lsr r9
    15ac:	1aab0100 	bne	feac19b4 <BootRAM+0xda32155>
    15b0:	00000041 	andeq	r0, r0, r1, asr #32
    15b4:	000008f3 	strdeq	r0, [r0], -r3
    15b8:	000008ef 	andeq	r0, r0, pc, ror #17
    15bc:	0009c335 	andeq	ip, r9, r5, lsr r3
    15c0:	29ab0100 	stmibcs	fp!, {r8}
    15c4:	00000041 	andeq	r0, r0, r1, asr #32
    15c8:	00000921 	andeq	r0, r0, r1, lsr #18
    15cc:	00000911 	andeq	r0, r0, r1, lsl r9
    15d0:	0007c635 	andeq	ip, r7, r5, lsr r6
    15d4:	3bab0100 	blcc	feac19dc <BootRAM+0xda3217d>
    15d8:	0000005e 	andeq	r0, r0, lr, asr r0
    15dc:	00000993 	muleq	r0, r3, r9
    15e0:	0000098d 	andeq	r0, r0, sp, lsl #19
    15e4:	000c5035 	andeq	r5, ip, r5, lsr r0
    15e8:	4aab0100 	bmi	feac19f0 <BootRAM+0xda32191>
    15ec:	000000a8 	andeq	r0, r0, r8, lsr #1
    15f0:	000009c9 	andeq	r0, r0, r9, asr #19
    15f4:	000009bf 			; <UNDEFINED> instruction: 0x000009bf
    15f8:	0009d637 	andeq	sp, r9, r7, lsr r6
    15fc:	0bac0100 	bleq	feb01a04 <BootRAM+0xda721a5>
    1600:	00000041 	andeq	r0, r0, r1, asr #32
    1604:	00000a1b 	andeq	r0, r0, fp, lsl sl
    1608:	00000a17 	andeq	r0, r0, r7, lsl sl
    160c:	66756238 			; <UNDEFINED> instruction: 0x66756238
    1610:	0cb50100 	ldfeqs	f0, [r5]
    1614:	0000005e 	andeq	r0, r0, lr, asr r0
    1618:	00000a4e 	andeq	r0, r0, lr, asr #20
    161c:	00000a44 	andeq	r0, r0, r4, asr #20
    1620:	08e33900 	stmiaeq	r3!, {r8, fp, ip, sp}^
    1624:	66010000 	strvs	r0, [r1], -r0
    1628:	084a010d 	stmdaeq	sl, {r0, r2, r3, r8}^
    162c:	09640800 	stmdbeq	r4!, {fp}^
    1630:	0ab30800 	beq	fecc3638 <BootRAM+0xdc33dd9>
    1634:	e6010000 	str	r0, [r1], -r0
    1638:	3500000f 	strcc	r0, [r0, #-15]
    163c:	000008c9 	andeq	r0, r0, r9, asr #17
    1640:	411d6601 	tstmi	sp, r1, lsl #12
    1644:	f3000000 	vhadd.u8	d0, d0, d0
    1648:	eb00000a 	bl	1678 <_Min_Stack_Size+0x1278>
    164c:	2000000a 	andcs	r0, r0, sl
    1650:	00000487 	andeq	r0, r0, r7, lsl #9
    1654:	5e136701 	cdppl	7, 1, cr6, cr3, cr1, {0}
    1658:	05000000 	streq	r0, [r0, #-0]
    165c:	00001403 	andeq	r1, r0, r3, lsl #8
    1660:	09fb3720 	ldmibeq	fp!, {r5, r8, r9, sl, ip, sp}^
    1664:	68010000 	stmdavs	r1, {}	; <UNPREDICTABLE>
    1668:	00005e0c 	andeq	r5, r0, ip, lsl #28
    166c:	000b3500 	andeq	r3, fp, r0, lsl #10
    1670:	000b2d00 	andeq	r2, fp, r0, lsl #26
    1674:	00773700 	rsbseq	r3, r7, r0, lsl #14
    1678:	69010000 	stmdbvs	r1, {}	; <UNPREDICTABLE>
    167c:	0000410b 	andeq	r4, r0, fp, lsl #2
    1680:	000b6b00 	andeq	r6, fp, r0, lsl #22
    1684:	000b6900 	andeq	r6, fp, r0, lsl #18
    1688:	65723800 	ldrbvs	r3, [r2, #-2048]!	; 0xfffff800
    168c:	79010071 	stmdbvc	r1, {r0, r4, r5, r6}
    1690:	0000410b 	andeq	r4, r0, fp, lsl #2
    1694:	000b9400 	andeq	r9, fp, r0, lsl #8
    1698:	000b8800 	andeq	r8, fp, r0, lsl #16
    169c:	00b82d00 	adcseq	r2, r8, r0, lsl #26
    16a0:	0ebc0000 	cdpeq	0, 11, cr0, cr12, cr0, {0}
    16a4:	7a200000 	bvc	8016ac <_Min_Stack_Size+0x8012ac>
    16a8:	0100000d 	tsteq	r0, sp
    16ac:	0fe60b90 	svceq	0x00e60b90
    16b0:	91020000 	mrsls	r0, (UNDEF: 2)
    16b4:	07c6206c 	strbeq	r2, [r6, ip, rrx]
    16b8:	91010000 	mrsls	r0, (UNDEF: 1)
    16bc:	00005e0e 	andeq	r5, r0, lr, lsl #28
    16c0:	6a910200 	bvs	fe441ec8 <BootRAM+0xd3b2669>
    16c4:	0008a42e 	andeq	sl, r8, lr, lsr #8
    16c8:	0008b808 	andeq	fp, r8, r8, lsl #16
    16cc:	000dda08 	andeq	sp, sp, r8, lsl #20
    16d0:	0d7a2000 	ldcleq	0, cr2, [sl, #-0]
    16d4:	81010000 	mrshi	r0, (UNDEF: 1)
    16d8:	000fe817 	andeq	lr, pc, r7, lsl r8	; <UNPREDICTABLE>
    16dc:	6c910200 	lfmvs	f0, 4, [r1], {0}
    16e0:	0007c620 	andeq	ip, r7, r0, lsr #12
    16e4:	14820100 	strne	r0, [r2], #256	; 0x100
    16e8:	0000005e 	andeq	r0, r0, lr, asr r0
    16ec:	3a6a9102 	bcc	1aa5afc <_Min_Stack_Size+0x1aa56fc>
    16f0:	080008b8 	stmdaeq	r0, {r3, r4, r5, r7, fp}
    16f4:	00001261 	andeq	r1, r0, r1, ror #4
    16f8:	02510130 	subseq	r0, r1, #48, 2
    16fc:	01306c91 	teqeq	r0, r1	; <illegal shifter operand>
    1700:	6a910252 	bvs	fe442050 <BootRAM+0xd3b27f1>
    1704:	003b0000 	eorseq	r0, fp, r0
    1708:	90000012 	andls	r0, r0, r2, lsl r0
    170c:	01080008 	tsteq	r8, r8
    1710:	08000890 	stmdaeq	r0, {r4, r7, fp}
    1714:	08000894 	stmdaeq	r0, {r2, r4, r7, fp}
    1718:	1b0b8901 	blne	2e3b24 <_Min_Stack_Size+0x2e3724>
    171c:	3c00000e 	stccc	0, cr0, [r0], {14}
    1720:	00001226 	andeq	r1, r0, r6, lsr #4
    1724:	00000bea 	andeq	r0, r0, sl, ror #23
    1728:	00000be8 	andeq	r0, r0, r8, ror #23
    172c:	00121a3c 	andseq	r1, r2, ip, lsr sl
    1730:	000c0000 	andeq	r0, ip, r0
    1734:	000bfe00 	andeq	pc, fp, r0, lsl #28
    1738:	120e3c00 	andne	r3, lr, #0, 24
    173c:	0c1a0000 	ldceq	0, cr0, [sl], {-0}
    1740:	0c180000 	ldceq	0, cr0, [r8], {-0}
    1744:	3d000000 	stccc	0, cr0, [r0, #-0]
    1748:	00000fef 	andeq	r0, r0, pc, ror #31
    174c:	080008c8 	stmdaeq	r0, {r3, r6, r7, fp}
    1750:	0000d801 	andeq	sp, r0, r1, lsl #16
    1754:	05940100 	ldreq	r0, [r4, #256]	; 0x100
    1758:	00000e5b 	andeq	r0, r0, fp, asr lr
    175c:	0010093c 	andseq	r0, r0, ip, lsr r9
    1760:	000c3000 	andeq	r3, ip, r0
    1764:	000c2e00 	andeq	r2, ip, r0, lsl #28
    1768:	0ffd3c00 	svceq	0x00fd3c00
    176c:	0c460000 	mareq	acc0, r0, r6
    1770:	0c440000 	mareq	acc0, r0, r4
    1774:	d63a0000 	ldrtle	r0, [sl], -r0
    1778:	16080008 	strne	r0, [r8], -r8
    177c:	30000010 	andcc	r0, r0, r0, lsl r0
    1780:	09025001 	stmdbeq	r2, {r0, ip, lr}
    1784:	3b000080 	blcc	198c <_Min_Stack_Size+0x158c>
    1788:	00001200 	andeq	r1, r0, r0, lsl #4
    178c:	080008da 	stmdaeq	r0, {r1, r3, r4, r6, r7, fp}
    1790:	0008da01 	andeq	sp, r8, r1, lsl #20
    1794:	0008e208 	andeq	lr, r8, r8, lsl #4
    1798:	0b8c0108 	bleq	fe301bc0 <BootRAM+0xd272361>
    179c:	00000e9c 	muleq	r0, ip, lr
    17a0:	0012263c 	andseq	r2, r2, ip, lsr r6
    17a4:	000c5c00 	andeq	r5, ip, r0, lsl #24
    17a8:	000c5a00 	andeq	r5, ip, r0, lsl #20
    17ac:	121a3c00 	andsne	r3, sl, #0, 24
    17b0:	0c720000 	ldcleq	0, cr0, [r2], #-0
    17b4:	0c700000 	ldcleq	0, cr0, [r0], #-0
    17b8:	0e3c0000 	cdpeq	0, 3, cr0, cr12, cr0, {0}
    17bc:	8c000012 	stchi	0, cr0, [r0], {18}
    17c0:	8a00000c 	bhi	17f8 <_Min_Stack_Size+0x13f8>
    17c4:	0000000c 	andeq	r0, r0, ip
    17c8:	0008f83a 	andeq	pc, r8, sl, lsr r8	; <UNPREDICTABLE>
    17cc:	00116408 	andseq	r6, r1, r8, lsl #8
    17d0:	50013000 	andpl	r3, r1, r0
    17d4:	000c0305 	andeq	r0, ip, r5, lsl #6
    17d8:	01302000 	teqeq	r0, r0
    17dc:	6c910251 	lfmvs	f0, 4, [r1], {81}	; 0x51
    17e0:	02520130 	subseq	r0, r2, #48, 2
    17e4:	00006a91 	muleq	r0, r1, sl
    17e8:	0011d53d 	andseq	sp, r1, sp, lsr r5
    17ec:	00086a00 	andeq	r6, r8, r0, lsl #20
    17f0:	00a00108 	adceq	r0, r0, r8, lsl #2
    17f4:	6d010000 	stcvs	0, cr0, [r1, #-0]
    17f8:	000f0407 	andeq	r0, pc, r7, lsl #8
    17fc:	11e73c00 	mvnne	r3, r0, lsl #24
    1800:	0ca20000 	stceq	0, cr0, [r2]
    1804:	0ca00000 	stceq	0, cr0, [r0]
    1808:	f33c0000 	vhadd.u<illegal width 64>	d0, d12, d0
    180c:	b8000011 	stmdalt	r0, {r0, r4}
    1810:	b600000c 	strlt	r0, [r0], -ip
    1814:	3a00000c 	bcc	184c <_Min_Stack_Size+0x144c>
    1818:	08000874 	stmdaeq	r0, {r2, r4, r5, r6, fp}
    181c:	00000969 	andeq	r0, r0, r9, ror #18
    1820:	01500130 	cmpeq	r0, r0, lsr r1
    1824:	51013031 	tstpl	r1, r1, lsr r0
    1828:	000c0305 	andeq	r0, ip, r5, lsl #6
    182c:	00002000 	andeq	r2, r0, r0
    1830:	0012003d 	andseq	r0, r2, sp, lsr r0
    1834:	00090600 	andeq	r0, r9, r0, lsl #12
    1838:	00f00508 	rscseq	r0, r0, r8, lsl #10
    183c:	a6010000 	strge	r0, [r1], -r0
    1840:	000f4a2c 	andeq	r4, pc, ip, lsr #20
    1844:	12263c00 	eorne	r3, r6, #0, 24
    1848:	0cd20000 	ldcleq	0, cr0, [r2], {0}
    184c:	0cd00000 	ldcleq	0, cr0, [r0], {0}
    1850:	1a3c0000 	bne	f01858 <_Min_Stack_Size+0xf01458>
    1854:	d2000012 	andle	r0, r0, #18
    1858:	d000000c 	andle	r0, r0, ip
    185c:	3c00000c 	stccc	0, cr0, [r0], {12}
    1860:	0000120e 	andeq	r1, r0, lr, lsl #4
    1864:	00000cd2 	ldrdeq	r0, [r0], -r2
    1868:	00000cd0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    186c:	00089832 	andeq	r9, r8, r2, lsr r8
    1870:	000a2f08 	andeq	r2, sl, r8, lsl #30
    1874:	003b0000 	eorseq	r0, fp, r0
    1878:	06000012 			; <UNDEFINED> instruction: 0x06000012
    187c:	01080009 	tsteq	r8, r9
    1880:	08000906 	stmdaeq	r0, {r1, r2, r8, fp}
    1884:	08000906 	stmdaeq	r0, {r1, r2, r8, fp}
    1888:	8b099a01 	blhi	268094 <_Min_Stack_Size+0x267c94>
    188c:	3c00000f 	stccc	0, cr0, [r0], {15}
    1890:	00001226 	andeq	r1, r0, r6, lsr #4
    1894:	00000ce8 	andeq	r0, r0, r8, ror #25
    1898:	00000ce6 	andeq	r0, r0, r6, ror #25
    189c:	00121a3c 	andseq	r1, r2, ip, lsr sl
    18a0:	000ce800 	andeq	lr, ip, r0, lsl #16
    18a4:	000ce600 	andeq	lr, ip, r0, lsl #12
    18a8:	120e3c00 	andne	r3, lr, #0, 24
    18ac:	0ce80000 	stcleq	0, cr0, [r8]
    18b0:	0ce60000 	stcleq	0, cr0, [r6]
    18b4:	3b000000 	blcc	18bc <_Min_Stack_Size+0x14bc>
    18b8:	00001200 	andeq	r1, r0, r0, lsl #4
    18bc:	08000916 	stmdaeq	r0, {r1, r2, r4, r8, fp}
    18c0:	00091601 	andeq	r1, r9, r1, lsl #12
    18c4:	00091808 	andeq	r1, r9, r8, lsl #16
    18c8:	099e0108 	ldmibeq	lr, {r3, r8}
    18cc:	00000fcc 	andeq	r0, r0, ip, asr #31
    18d0:	0012263c 	andseq	r2, r2, ip, lsr r6
    18d4:	000cfe00 	andeq	pc, ip, r0, lsl #28
    18d8:	000cfc00 	andeq	pc, ip, r0, lsl #24
    18dc:	121a3c00 	andsne	r3, sl, #0, 24
    18e0:	0cfe0000 	ldcleq	0, cr0, [lr]
    18e4:	0cfc0000 	ldcleq	0, cr0, [ip]
    18e8:	0e3c0000 	cdpeq	0, 3, cr0, cr12, cr0, {0}
    18ec:	fe000012 	mcr2	0, 0, r0, cr0, cr2, {0}
    18f0:	fc00000c 	stc2	0, cr0, [r0], {12}
    18f4:	0000000c 	andeq	r0, r0, ip
    18f8:	0009223a 	andeq	r2, r9, sl, lsr r2
    18fc:	00110808 	andseq	r0, r1, r8, lsl #16
    1900:	50013000 	andpl	r3, r1, r0
    1904:	000c0305 	andeq	r0, ip, r5, lsl #6
    1908:	01302000 	teqeq	r0, r0
    190c:	00750252 	rsbseq	r0, r5, r2, asr r2
    1910:	043e0000 	ldrteq	r0, [lr], #-0
    1914:	0fee0407 	svceq	0x00ee0407
    1918:	403f0000 	eorsmi	r0, pc, r0
    191c:	000005c3 	andeq	r0, r0, r3, asr #11
    1920:	01145e01 	tsteq	r4, r1, lsl #28
    1924:	00101603 	andseq	r1, r0, r3, lsl #12
    1928:	75624100 	strbvc	r4, [r2, #-256]!	; 0xffffff00
    192c:	5e010066 	cdppl	0, 0, cr0, cr1, cr6, {3}
    1930:	0008972c 	andeq	r9, r8, ip, lsr #14
    1934:	07c64200 	strbeq	r4, [r6, r0, lsl #4]
    1938:	5e010000 	cdppl	0, 0, cr0, cr1, cr0, {0}
    193c:	00005e3a 	andeq	r5, r0, sl, lsr lr
    1940:	9b390000 	blls	e41948 <_Min_Stack_Size+0xe41548>
    1944:	01000007 	tsteq	r0, r7
    1948:	94010d4b 	strls	r0, [r1], #-3403	; 0xfffff2b5
    194c:	f0080007 			; <UNDEFINED> instruction: 0xf0080007
    1950:	12080007 	andne	r0, r8, #7
    1954:	0100000d 	tsteq	r0, sp
    1958:	000010ad 	andeq	r1, r0, sp, lsr #1
    195c:	0008c935 	andeq	ip, r8, r5, lsr r9
    1960:	1c4b0100 	stfnee	f0, [fp], {-0}
    1964:	00000041 	andeq	r0, r0, r1, asr #32
    1968:	00000d36 	andeq	r0, r0, r6, lsr sp
    196c:	00000d32 	andeq	r0, r0, r2, lsr sp
    1970:	00087437 	andeq	r7, r8, r7, lsr r4
    1974:	0c520100 	ldfeqe	f0, [r2], {-0}
    1978:	0000005e 	andeq	r0, r0, lr, asr r0
    197c:	00000d5b 	andeq	r0, r0, fp, asr sp
    1980:	00000d57 	andeq	r0, r0, r7, asr sp
    1984:	00120043 	andseq	r0, r2, r3, asr #32
    1988:	0007ca00 	andeq	ip, r7, r0, lsl #20
    198c:	00700208 	rsbseq	r0, r0, r8, lsl #4
    1990:	54010000 	strpl	r0, [r1], #-0
    1994:	12263c03 	eorne	r3, r6, #768	; 0x300
    1998:	0d7b0000 	ldcleq	0, cr0, [fp, #-0]
    199c:	0d790000 	ldcleq	0, cr0, [r9, #-0]
    19a0:	1a3c0000 	bne	f019a8 <_Min_Stack_Size+0xf015a8>
    19a4:	90000012 	andls	r0, r0, r2, lsl r0
    19a8:	8e00000d 	cdphi	0, 0, cr0, cr0, cr13, {0}
    19ac:	3c00000d 	stccc	0, cr0, [r0], {13}
    19b0:	0000120e 	andeq	r1, r0, lr, lsl #4
    19b4:	00000da5 	andeq	r0, r0, r5, lsr #27
    19b8:	00000da3 	andeq	r0, r0, r3, lsr #27
    19bc:	0007d23a 	andeq	sp, r7, sl, lsr r2
    19c0:	000a2f08 	andeq	r2, sl, r8, lsl #30
    19c4:	50013000 	andpl	r3, r1, r0
    19c8:	01303001 	teqeq	r0, r1
    19cc:	00710251 	rsbseq	r0, r1, r1, asr r2
    19d0:	02520130 	subseq	r0, r2, #48, 2
    19d4:	00000072 	andeq	r0, r0, r2, ror r0
    19d8:	73014400 	movwvc	r4, #5120	; 0x1400
    19dc:	01000000 	mrseq	r0, (UNDEF: 0)
    19e0:	03720637 	cmneq	r2, #57671680	; 0x3700000
    19e4:	03e00800 	mvneq	r0, #0, 16
    19e8:	7d020800 	stcvc	8, cr0, [r2, #-0]
    19ec:	11080100 	mrsne	r0, (UNDEF: 24)
    19f0:	182d0000 	stmdane	sp!, {}	; <UNPREDICTABLE>
    19f4:	e4000000 	str	r0, [r0], #-0
    19f8:	38000010 	stmdacc	r0, {r4}
    19fc:	00727463 	rsbseq	r7, r2, r3, ror #8
    1a00:	76103d01 	ldrvc	r3, [r0], -r1, lsl #26
    1a04:	c1000000 	mrsgt	r0, (UNDEF: 0)
    1a08:	b900000d 	stmdblt	r0, {r0, r2, r3}
    1a0c:	0000000d 	andeq	r0, r0, sp
    1a10:	00123345 	andseq	r3, r2, r5, asr #6
    1a14:	0003b600 	andeq	fp, r3, r0, lsl #12
    1a18:	03b60108 			; <UNDEFINED> instruction: 0x03b60108
    1a1c:	03be0800 			; <UNDEFINED> instruction: 0x03be0800
    1a20:	43010800 	movwmi	r0, #6144	; 0x1800
    1a24:	12423c03 	subne	r3, r2, #768	; 0x300
    1a28:	0e100000 	cdpeq	0, 1, cr0, cr0, cr0, {0}
    1a2c:	0e0e0000 	cdpeq	0, 0, cr0, cr14, cr0, {0}
    1a30:	00000000 	andeq	r0, r0, r0
    1a34:	08d90146 	ldmeq	r9, {r1, r2, r6, r8}^
    1a38:	1b010000 	blne	41a40 <_Min_Stack_Size+0x41640>
    1a3c:	1157011b 	cmpne	r7, fp, lsl r1
    1a40:	036e0000 	cmneq	lr, #0
    1a44:	03720800 	cmneq	r2, #0, 16
    1a48:	7d020800 	stcvc	8, cr0, [r2, #-0]
    1a4c:	11570100 	cmpne	r7, r0, lsl #2
    1a50:	72470000 	subvc	r0, r7, #0
    1a54:	01007165 	tsteq	r0, r5, ror #2
    1a58:	115e3c1b 	cmpne	lr, fp, lsl ip
    1a5c:	0e280000 	cdpeq	0, 2, cr0, cr8, cr0, {0}
    1a60:	0e240000 	cdpeq	0, 2, cr0, cr4, cr0, {0}
    1a64:	a8360000 	ldmdage	r6!, {}	; <UNPREDICTABLE>
    1a68:	0100000d 	tsteq	r0, sp
    1a6c:	005e4a1b 	subseq	r4, lr, fp, lsl sl
    1a70:	51010000 	mrspl	r0, (UNDEF: 1)
    1a74:	0007c336 	andeq	ip, r7, r6, lsr r3
    1a78:	5b1b0100 	blpl	6c1e80 <_Min_Stack_Size+0x6c1a80>
    1a7c:	0000005e 	andeq	r0, r0, lr, asr r0
    1a80:	02005201 	andeq	r5, r0, #268435456	; 0x10000000
    1a84:	02830801 	addeq	r0, r3, #65536	; 0x10000
    1a88:	04070000 	streq	r0, [r7], #-0
    1a8c:	0000011b 	andeq	r0, r0, fp, lsl r1
    1a90:	07910146 	ldreq	r0, [r1, r6, asr #2]
    1a94:	1a010000 	bne	41a9c <_Min_Stack_Size+0x4169c>
    1a98:	1157011b 	cmpne	r7, fp, lsl r1
    1a9c:	036a0000 	cmneq	sl, #0
    1aa0:	036e0800 	cmneq	lr, #0, 16
    1aa4:	7d020800 	stcvc	8, cr0, [r2, #-0]
    1aa8:	11b30100 			; <UNDEFINED> instruction: 0x11b30100
    1aac:	72470000 	subvc	r0, r7, #0
    1ab0:	01007165 	tsteq	r0, r5, ror #2
    1ab4:	115e3b1a 	cmpne	lr, sl, lsl fp
    1ab8:	0e4d0000 	cdpeq	0, 4, cr0, cr13, cr0, {0}
    1abc:	0e490000 	cdpeq	0, 4, cr0, cr9, cr0, {0}
    1ac0:	7a360000 	bvc	d81ac8 <_Min_Stack_Size+0xd816c8>
    1ac4:	0100000d 	tsteq	r0, sp
    1ac8:	11b3471a 			; <UNDEFINED> instruction: 0x11b3471a
    1acc:	51010000 	mrspl	r0, (UNDEF: 1)
    1ad0:	0007c636 	andeq	ip, r7, r6, lsr r6
    1ad4:	571a0100 	ldrpl	r0, [sl, -r0, lsl #2]
    1ad8:	00000a1d 	andeq	r0, r0, sp, lsl sl
    1adc:	07005201 	streq	r5, [r0, -r1, lsl #4]
    1ae0:	000fe604 	andeq	lr, pc, r4, lsl #12
    1ae4:	f0014800 			; <UNDEFINED> instruction: 0xf0014800
    1ae8:	01000000 	mrseq	r0, (UNDEF: 0)
    1aec:	01481b19 	cmpeq	r8, r9, lsl fp
    1af0:	000006e1 	andeq	r0, r0, r1, ror #13
    1af4:	491b1801 	ldmdbmi	fp, {r0, fp, ip}
    1af8:	0006b101 	andeq	fp, r6, r1, lsl #2
    1afc:	1b170100 	blne	5c1f04 <_Min_Stack_Size+0x5c1b04>
    1b00:	06884a01 	streq	r4, [r8], r1, lsl #20
    1b04:	b4030000 	strlt	r0, [r3], #-0
    1b08:	00950113 	addseq	r0, r5, r3, lsl r1
    1b0c:	00030000 	andeq	r0, r3, r0
    1b10:	42000012 	andmi	r0, r0, #18
    1b14:	000008c9 	andeq	r0, r0, r9, asr #17
    1b18:	4127b403 			; <UNDEFINED> instruction: 0x4127b403
    1b1c:	41000000 	mrsmi	r0, (UNDEF: 0)
    1b20:	00667562 	rsbeq	r7, r6, r2, ror #10
    1b24:	1d38b403 	cfldrsne	mvf11, [r8, #-12]!
    1b28:	0000000a 	andeq	r0, r0, sl
    1b2c:	00053a40 	andeq	r3, r5, r0, asr #20
    1b30:	14ab0300 	strtne	r0, [fp], #768	; 0x300
    1b34:	12330301 	eorsne	r0, r3, #67108864	; 0x4000000
    1b38:	c9420000 	stmdbgt	r2, {}^	; <UNPREDICTABLE>
    1b3c:	03000008 	movweq	r0, #8
    1b40:	004129ab 	subeq	r2, r1, fp, lsr #19
    1b44:	62410000 	subvs	r0, r1, #0
    1b48:	03006675 	movweq	r6, #1653	; 0x675
    1b4c:	08973fab 	ldmeq	r7, {r0, r1, r3, r5, r7, r8, r9, sl, fp, ip, sp}
    1b50:	c6420000 	strbgt	r0, [r2], -r0
    1b54:	03000007 	movweq	r0, #7
    1b58:	005e4dab 	subseq	r4, lr, fp, lsr #27
    1b5c:	4b000000 	blmi	1b64 <_Min_Stack_Size+0x1764>
    1b60:	00000564 	andeq	r0, r0, r4, ror #10
    1b64:	1605de02 	strne	sp, [r5], -r2, lsl #28
    1b68:	12500301 	subsne	r0, r0, #67108864	; 0x4000000
    1b6c:	d24c0000 	suble	r0, ip, #0
    1b70:	02000006 	andeq	r0, r0, #6
    1b74:	9e2f05de 	mcrls	5, 1, r0, cr15, cr14, {6}
    1b78:	00000002 	andeq	r0, r0, r2
    1b7c:	0011cb4d 	andseq	ip, r1, sp, asr #22
    1b80:	00036400 	andeq	r6, r3, r0, lsl #8
    1b84:	00036608 	andeq	r6, r3, r8, lsl #12
    1b88:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    1b8c:	01014e01 	tsteq	r1, r1, lsl #28
    1b90:	000005a1 	andeq	r0, r0, r1, lsr #11
    1b94:	000005a1 	andeq	r0, r0, r1, lsr #11
    1b98:	00063903 	andeq	r3, r6, r3, lsl #18
    1b9c:	000017ae 	andeq	r1, r0, lr, lsr #15
    1ba0:	06f60002 	ldrbteq	r0, [r6], r2
    1ba4:	01040000 	mrseq	r0, (UNDEF: 4)
    1ba8:	00000344 	andeq	r0, r0, r4, asr #6
    1bac:	000abf0c 	andeq	fp, sl, ip, lsl #30
    1bb0:	0001ac00 	andeq	sl, r1, r0, lsl #24
    1bb4:	00096400 	andeq	r6, r9, r0, lsl #8
    1bb8:	000b2808 	andeq	r2, fp, r8, lsl #16
    1bbc:	000b9308 	andeq	r9, fp, r8, lsl #6
    1bc0:	07040200 	streq	r0, [r4, -r0, lsl #4]
    1bc4:	00000052 	andeq	r0, r0, r2, asr r0
    1bc8:	7c060102 	stfvcs	f0, [r6], {2}
    1bcc:	03000002 	movweq	r0, #2
    1bd0:	00000100 	andeq	r0, r0, r0, lsl #2
    1bd4:	44182504 	ldrmi	r2, [r8], #-1284	; 0xfffffafc
    1bd8:	04000000 	streq	r0, [r0], #-0
    1bdc:	00000033 	andeq	r0, r0, r3, lsr r0
    1be0:	95050202 	strls	r0, [r5, #-514]	; 0xfffffdfe
    1be4:	02000002 	andeq	r0, r0, #2
    1be8:	00820504 	addeq	r0, r2, r4, lsl #10
    1bec:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    1bf0:	00007d05 	andeq	r7, r0, r5, lsl #26
    1bf4:	03150300 	tsteq	r5, #0, 6
    1bf8:	2e040000 	cdpcs	0, 0, cr0, cr4, cr0, {0}
    1bfc:	00006f18 	andeq	r6, r0, r8, lsl pc
    1c00:	00590500 	subseq	r0, r9, r0, lsl #10
    1c04:	59040000 	stmdbpl	r4, {}	; <UNPREDICTABLE>
    1c08:	02000000 	andeq	r0, r0, #0
    1c0c:	027a0801 	rsbseq	r0, sl, #65536	; 0x10000
    1c10:	ff030000 			; <UNDEFINED> instruction: 0xff030000
    1c14:	04000000 	streq	r0, [r0], #-0
    1c18:	00871931 	addeq	r1, r7, r1, lsr r9
    1c1c:	76050000 	strvc	r0, [r5], -r0
    1c20:	02000000 	andeq	r0, r0, #0
    1c24:	017e0702 	cmneq	lr, r2, lsl #14
    1c28:	cf030000 	svcgt	0x00030000
    1c2c:	04000002 	streq	r0, [r0], #-2
    1c30:	009f1934 	addseq	r1, pc, r4, lsr r9	; <UNPREDICTABLE>
    1c34:	8e050000 	cdphi	0, 0, cr0, cr5, cr0, {0}
    1c38:	02000000 	andeq	r0, r0, #0
    1c3c:	004d0704 	subeq	r0, sp, r4, lsl #14
    1c40:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    1c44:	00004807 	andeq	r4, r0, r7, lsl #16
    1c48:	05040600 	streq	r0, [r4, #-1536]	; 0xfffffa00
    1c4c:	00746e69 	rsbseq	r6, r4, r9, ror #28
    1c50:	0000ad05 	andeq	sl, r0, r5, lsl #26
    1c54:	02080700 	andeq	r0, r8, #0, 14
    1c58:	010e091b 	tsteq	lr, fp, lsl r9
    1c5c:	61080000 	mrsvs	r0, (UNDEF: 8)
    1c60:	02000004 	andeq	r0, r0, #4
    1c64:	00590b1c 	subseq	r0, r9, ip, lsl fp
    1c68:	23020000 	movwcs	r0, #8192	; 0x2000
    1c6c:	08840800 	stmeq	r4, {fp}
    1c70:	1d020000 	stcne	0, cr0, [r2, #-0]
    1c74:	0000590b 	andeq	r5, r0, fp, lsl #18
    1c78:	01230200 			; <UNDEFINED> instruction: 0x01230200
    1c7c:	0004d008 	andeq	sp, r4, r8
    1c80:	0c1e0200 	lfmeq	f0, 4, [lr], {-0}
    1c84:	00000076 	andeq	r0, r0, r6, ror r0
    1c88:	08022302 	stmdaeq	r2, {r1, r8, r9, sp}
    1c8c:	000003e9 	andeq	r0, r0, r9, ror #7
    1c90:	760c1f02 	strvc	r1, [ip], -r2, lsl #30
    1c94:	02000000 	andeq	r0, r0, #0
    1c98:	67080423 	strvs	r0, [r8, -r3, lsr #8]
    1c9c:	02000008 	andeq	r0, r0, #8
    1ca0:	00760c20 	rsbseq	r0, r6, r0, lsr #24
    1ca4:	23020000 	movwcs	r0, #8192	; 0x2000
    1ca8:	f0030006 			; <UNDEFINED> instruction: 0xf0030006
    1cac:	02000008 	andeq	r0, r0, #8
    1cb0:	00b90221 	adcseq	r0, r9, r1, lsr #4
    1cb4:	05090000 	streq	r0, [r9, #-0]
    1cb8:	00002c01 	andeq	r2, r0, r1, lsl #24
    1cbc:	01580500 	cmpeq	r8, r0, lsl #10
    1cc0:	00000291 	muleq	r0, r1, r2
    1cc4:	0008530a 	andeq	r5, r8, sl, lsl #6
    1cc8:	d70a7200 	strle	r7, [sl, -r0, lsl #4]
    1ccc:	74000004 	strvc	r0, [r0], #-4
    1cd0:	0006fb0a 	andeq	pc, r6, sl, lsl #22
    1cd4:	360a7500 	strcc	r7, [sl], -r0, lsl #10
    1cd8:	76000009 	strvc	r0, [r0], -r9
    1cdc:	00042f0a 	andeq	r2, r4, sl, lsl #30
    1ce0:	240a7b00 	strcs	r7, [sl], #-2816	; 0xfffff500
    1ce4:	7c000009 	stcvc	0, cr0, [r0], {9}
    1ce8:	0004b40a 	andeq	fp, r4, sl, lsl #8
    1cec:	bc0a7e00 	stclt	14, cr7, [sl], {-0}
    1cf0:	7f000008 	svcvc	0x00000008
    1cf4:	0006d70b 	andeq	sp, r6, fp, lsl #14
    1cf8:	140b0000 	strne	r0, [fp], #-0
    1cfc:	01000007 	tsteq	r0, r7
    1d00:	0004fc0b 	andeq	pc, r4, fp, lsl #24
    1d04:	eb0b0200 	bl	2c250c <_Min_Stack_Size+0x2c210c>
    1d08:	03000005 	movweq	r0, #5
    1d0c:	00047c0b 	andeq	r7, r4, fp, lsl #24
    1d10:	c70b0400 	strgt	r0, [fp, -r0, lsl #8]
    1d14:	05000004 	streq	r0, [r0, #-4]
    1d18:	0004910b 	andeq	r9, r4, fp, lsl #2
    1d1c:	790b0600 	stmdbvc	fp, {r9, sl}
    1d20:	07000008 	streq	r0, [r0, -r8]
    1d24:	0006150b 	andeq	r1, r6, fp, lsl #10
    1d28:	cb0b0800 	blgt	2c3d30 <_Min_Stack_Size+0x2c3930>
    1d2c:	09000009 	stmdbeq	r0, {r0, r3}
    1d30:	0007090b 	andeq	r0, r7, fp, lsl #18
    1d34:	9e0b0a00 	vmlals.f32	s0, s22, s0
    1d38:	0b000006 	bleq	1d58 <_Min_Stack_Size+0x1958>
    1d3c:	0004420b 	andeq	r4, r4, fp, lsl #4
    1d40:	550b0c00 	strpl	r0, [fp, #-3072]	; 0xfffff400
    1d44:	0d000007 	stceq	0, cr0, [r0, #-28]	; 0xffffffe4
    1d48:	0005510b 	andeq	r5, r5, fp, lsl #2
    1d4c:	a00b0e00 	andge	r0, fp, r0, lsl #28
    1d50:	0f000009 	svceq	0x00000009
    1d54:	0006610b 	andeq	r6, r6, fp, lsl #2
    1d58:	0f0b1000 	svceq	0x000b1000
    1d5c:	11000004 	tstne	r0, r4
    1d60:	0006200b 	andeq	r2, r6, fp
    1d64:	180b1200 	stmdane	fp, {r9, ip}
    1d68:	13000009 	movwne	r0, #9
    1d6c:	000a2c0b 	andeq	r2, sl, fp, lsl #24
    1d70:	ba0b1400 	blt	2c6d78 <_Min_Stack_Size+0x2c6978>
    1d74:	15000009 	strne	r0, [r0, #-9]
    1d78:	0005730b 	andeq	r7, r5, fp, lsl #6
    1d7c:	700b1600 	andvc	r1, fp, r0, lsl #12
    1d80:	17000009 	strne	r0, [r0, -r9]
    1d84:	0004050b 	andeq	r0, r4, fp, lsl #10
    1d88:	cc0b1900 			; <UNDEFINED> instruction: 0xcc0b1900
    1d8c:	1a000006 	bne	1dac <_Min_Stack_Size+0x19ac>
    1d90:	0003de0b 	andeq	sp, r3, fp, lsl #28
    1d94:	cf0b1b00 	svcgt	0x000b1b00
    1d98:	1c000008 	stcne	0, cr0, [r0], {8}
    1d9c:	0006940b 	andeq	r9, r6, fp, lsl #8
    1da0:	380b1d00 	stmdacc	fp, {r8, sl, fp, ip}
    1da4:	1e000004 	cdpne	0, 0, cr0, cr0, cr4, {0}
    1da8:	0007760b 	andeq	r7, r7, fp, lsl #12
    1dac:	af0b1f00 	svcge	0x000b1f00
    1db0:	20000008 	andcs	r0, r0, r8
    1db4:	00062a0b 	andeq	r2, r6, fp, lsl #20
    1db8:	220b2100 	andcs	r2, fp, #0, 2
    1dbc:	22000004 	andcs	r0, r0, #4
    1dc0:	00052f0b 	andeq	r2, r5, fp, lsl #30
    1dc4:	870b2300 	strhi	r2, [fp, -r0, lsl #6]
    1dc8:	24000009 	strcs	r0, [r0], #-9
    1dcc:	00083b0b 	andeq	r3, r8, fp, lsl #22
    1dd0:	cc0b2500 	cfstr32gt	mvfx2, [fp], {-0}
    1dd4:	26000005 	strcs	r0, [r0], -r5
    1dd8:	000a160b 	andeq	r1, sl, fp, lsl #12
    1ddc:	9c0b2700 	stcls	7, cr2, [fp], {-0}
    1de0:	28000004 	stmdacs	r0, {r2}
    1de4:	0007b40b 	andeq	fp, r7, fp, lsl #8
    1de8:	160b2900 	strne	r2, [fp], -r0, lsl #18
    1dec:	2a000008 	bcs	1e14 <_Min_Stack_Size+0x1a14>
    1df0:	0005470b 	andeq	r4, r5, fp, lsl #14
    1df4:	960b2b00 	strls	r2, [fp], -r0, lsl #22
    1df8:	2c000009 	stccs	0, cr0, [r0], {9}
    1dfc:	00074b0b 	andeq	r4, r7, fp, lsl #22
    1e00:	3c0b2e00 	stccc	14, cr2, [fp], {-0}
    1e04:	2f000006 	svccs	0x00000006
    1e08:	0006740b 	andeq	r7, r6, fp, lsl #8
    1e0c:	030b3200 	movweq	r3, #45568	; 0xb200
    1e10:	3300000a 	movwcc	r0, #10
    1e14:	0007380b 	andeq	r3, r7, fp, lsl #16
    1e18:	130b3400 	movwne	r3, #46080	; 0xb400
    1e1c:	35000005 	strcc	r0, [r0, #-5]
    1e20:	00089c0b 	andeq	r9, r8, fp, lsl #24
    1e24:	530b3600 	movwpl	r3, #46592	; 0xb600
    1e28:	38000006 	stmdacc	r0, {r1, r2}
    1e2c:	05b90300 	ldreq	r0, [r9, #768]!	; 0x300
    1e30:	98050000 	stmdals	r5, {}	; <UNPREDICTABLE>
    1e34:	00011a03 	andeq	r1, r1, r3, lsl #20
    1e38:	0e040c00 	cdpeq	12, 0, cr0, cr4, cr0, {0}
    1e3c:	75098403 	strvc	r8, [r9, #-1027]	; 0xfffffbfd
    1e40:	08000003 	stmdaeq	r0, {r0, r1}
    1e44:	0000050e 	andeq	r0, r0, lr, lsl #10
    1e48:	85118603 	ldrhi	r8, [r1, #-1539]	; 0xfffff9fd
    1e4c:	02000003 	andeq	r0, r0, #3
    1e50:	d0080023 	andle	r0, r8, r3, lsr #32
    1e54:	03000007 	movweq	r0, #7
    1e58:	038a1187 	orreq	r1, sl, #-1073741791	; 0xc0000021
    1e5c:	23020000 	movwcs	r0, #8192	; 0x2000
    1e60:	09820820 	stmibeq	r2, {r5, fp}
    1e64:	88030000 	stmdahi	r3, {}	; <UNPREDICTABLE>
    1e68:	00038511 	andeq	r8, r3, r1, lsl r5
    1e6c:	80230300 	eorhi	r0, r3, r0, lsl #6
    1e70:	05260801 	streq	r0, [r6, #-2049]!	; 0xfffff7ff
    1e74:	89030000 	stmdbhi	r3, {}	; <UNPREDICTABLE>
    1e78:	00038a11 	andeq	r8, r3, r1, lsl sl
    1e7c:	a0230300 	eorge	r0, r3, r0, lsl #6
    1e80:	09e90801 	stmibeq	r9!, {r0, fp}^
    1e84:	8a030000 	bhi	c1e8c <_Min_Stack_Size+0xc1a8c>
    1e88:	00038511 	andeq	r8, r3, r1, lsl r5
    1e8c:	80230300 	eorhi	r0, r3, r0, lsl #6
    1e90:	07e40802 	strbeq	r0, [r4, r2, lsl #16]!
    1e94:	8b030000 	blhi	c1e9c <_Min_Stack_Size+0xc1a9c>
    1e98:	00038a11 	andeq	r8, r3, r1, lsl sl
    1e9c:	a0230300 	eorge	r0, r3, r0, lsl #6
    1ea0:	07330802 	ldreq	r0, [r3, -r2, lsl #16]!
    1ea4:	8c030000 	stchi	0, cr0, [r3], {-0}
    1ea8:	00038511 	andeq	r8, r3, r1, lsl r5
    1eac:	80230300 	eorhi	r0, r3, r0, lsl #6
    1eb0:	07ee0803 	strbeq	r0, [lr, r3, lsl #16]!
    1eb4:	8d030000 	stchi	0, cr0, [r3, #-0]
    1eb8:	00038a11 	andeq	r8, r3, r1, lsl sl
    1ebc:	a0230300 	eorge	r0, r3, r0, lsl #6
    1ec0:	09910803 	ldmibeq	r1, {r0, r1, fp}
    1ec4:	8e030000 	cdphi	0, 0, cr0, cr3, cr0, {0}
    1ec8:	00038511 	andeq	r8, r3, r1, lsl r5
    1ecc:	80230300 	eorhi	r0, r3, r0, lsl #6
    1ed0:	07f80804 	ldrbeq	r0, [r8, r4, lsl #16]!
    1ed4:	8f030000 	svchi	0x00030000
    1ed8:	00039a11 	andeq	r9, r3, r1, lsl sl
    1edc:	a0230300 	eorge	r0, r3, r0, lsl #6
    1ee0:	50490d04 	subpl	r0, r9, r4, lsl #26
    1ee4:	11900300 	orrsne	r0, r0, r0, lsl #6
    1ee8:	000003ba 			; <UNDEFINED> instruction: 0x000003ba
    1eec:	06802303 	streq	r2, [r0], r3, lsl #6
    1ef0:	00080208 	andeq	r0, r8, r8, lsl #4
    1ef4:	11910300 	orrsne	r0, r1, r0, lsl #6
    1ef8:	000003bf 			; <UNDEFINED> instruction: 0x000003bf
    1efc:	07f02303 	ldrbeq	r2, [r0, r3, lsl #6]!
    1f00:	0007af08 	andeq	sl, r7, r8, lsl #30
    1f04:	11920300 	orrsne	r0, r2, r0, lsl #6
    1f08:	0000009a 	muleq	r0, sl, r0
    1f0c:	1c802303 	stcne	3, cr2, [r0], {3}
    1f10:	009a0e00 	addseq	r0, sl, r0, lsl #28
    1f14:	03850000 	orreq	r0, r5, #0
    1f18:	250f0000 	strcs	r0, [pc, #-0]	; 1f20 <_Min_Stack_Size+0x1b20>
    1f1c:	07000000 	streq	r0, [r0, -r0]
    1f20:	03750500 	cmneq	r5, #0, 10
    1f24:	8e0e0000 	cdphi	0, 0, cr0, cr14, cr0, {0}
    1f28:	9a000000 	bls	1f30 <_Min_Stack_Size+0x1b30>
    1f2c:	0f000003 	svceq	0x00000003
    1f30:	00000025 	andeq	r0, r0, r5, lsr #32
    1f34:	8e0e0017 	mcrhi	0, 0, r0, cr14, cr7, {0}
    1f38:	aa000000 	bge	1f40 <_Min_Stack_Size+0x1b40>
    1f3c:	0f000003 	svceq	0x00000003
    1f40:	00000025 	andeq	r0, r0, r5, lsr #32
    1f44:	650e0037 	strvs	r0, [lr, #-55]	; 0xffffffc9
    1f48:	ba000000 	blt	1f50 <_Min_Stack_Size+0x1b50>
    1f4c:	0f000003 	svceq	0x00000003
    1f50:	00000025 	andeq	r0, r0, r5, lsr #32
    1f54:	aa0500ef 	bge	142318 <_Min_Stack_Size+0x141f18>
    1f58:	0e000003 	cdpeq	0, 0, cr0, cr0, cr3, {0}
    1f5c:	0000008e 	andeq	r0, r0, lr, lsl #1
    1f60:	000003d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1f64:	00002510 	andeq	r2, r0, r0, lsl r5
    1f68:	00028300 	andeq	r8, r2, r0, lsl #6
    1f6c:	00088d03 	andeq	r8, r8, r3, lsl #26
    1f70:	04930300 	ldreq	r0, [r3], #768	; 0x300
    1f74:	0000029d 	muleq	r0, sp, r2
    1f78:	00028811 	andeq	r8, r2, r1, lsl r8
    1f7c:	06ce0300 	strbeq	r0, [lr], r0, lsl #6
    1f80:	0000b415 	andeq	fp, r0, r5, lsl r4
    1f84:	12010100 	andne	r0, r1, #0, 2
    1f88:	0000013a 	andeq	r0, r0, sl, lsr r1
    1f8c:	8e114c06 	cdphi	12, 1, cr4, cr1, cr6, {0}
    1f90:	01000000 	mrseq	r0, (UNDEF: 0)
    1f94:	052c1301 	streq	r1, [ip, #-769]!	; 0xfffffcff
    1f98:	a409014f 	strge	r0, [r9], #-335	; 0xfffffeb1
    1f9c:	14000004 	strne	r0, [r0], #-4
    1fa0:	00000042 	andeq	r0, r0, r2, asr #32
    1fa4:	11015105 	tstne	r1, r5, lsl #2
    1fa8:	0000009a 	muleq	r0, sl, r0
    1fac:	14002302 	strne	r2, [r0], #-770	; 0xfffffcfe
    1fb0:	00000029 	andeq	r0, r0, r9, lsr #32
    1fb4:	11015205 	tstne	r1, r5, lsl #4
    1fb8:	0000009a 	muleq	r0, sl, r0
    1fbc:	14042302 	strne	r2, [r4], #-770	; 0xfffffcfe
    1fc0:	00000116 	andeq	r0, r0, r6, lsl r1
    1fc4:	11015305 	tstne	r1, r5, lsl #6
    1fc8:	0000009a 	muleq	r0, sl, r0
    1fcc:	14082302 	strne	r2, [r8], #-770	; 0xfffffcfe
    1fd0:	00000007 	andeq	r0, r0, r7
    1fd4:	11015405 	tstne	r1, r5, lsl #8
    1fd8:	0000009a 	muleq	r0, sl, r0
    1fdc:	150c2302 	strne	r2, [ip, #-770]	; 0xfffffcfe
    1fe0:	00524449 	subseq	r4, r2, r9, asr #8
    1fe4:	11015505 	tstne	r1, r5, lsl #10
    1fe8:	0000009a 	muleq	r0, sl, r0
    1fec:	15102302 	ldrne	r2, [r0, #-770]	; 0xfffffcfe
    1ff0:	0052444f 	subseq	r4, r2, pc, asr #8
    1ff4:	11015605 	tstne	r1, r5, lsl #12
    1ff8:	0000009a 	muleq	r0, sl, r0
    1ffc:	14142302 	ldrne	r2, [r4], #-770	; 0xfffffcfe
    2000:	0000008b 	andeq	r0, r0, fp, lsl #1
    2004:	11015705 	tstne	r1, r5, lsl #14
    2008:	0000009a 	muleq	r0, sl, r0
    200c:	14182302 	ldrne	r2, [r8], #-770	; 0xfffffcfe
    2010:	0000000d 	andeq	r0, r0, sp
    2014:	11015805 	tstne	r1, r5, lsl #16
    2018:	0000009a 	muleq	r0, sl, r0
    201c:	151c2302 	ldrne	r2, [ip, #-770]	; 0xfffffcfe
    2020:	00524641 	subseq	r4, r2, r1, asr #12
    2024:	11015905 	tstne	r1, r5, lsl #18
    2028:	000004b4 			; <UNDEFINED> instruction: 0x000004b4
    202c:	15202302 	strne	r2, [r0, #-770]!	; 0xfffffcfe
    2030:	00525242 	subseq	r5, r2, r2, asr #4
    2034:	11015a05 	tstne	r1, r5, lsl #20
    2038:	0000009a 	muleq	r0, sl, r0
    203c:	00282302 	eoreq	r2, r8, r2, lsl #6
    2040:	00009a0e 	andeq	r9, r0, lr, lsl #20
    2044:	0004b400 	andeq	fp, r4, r0, lsl #8
    2048:	00250f00 	eoreq	r0, r5, r0, lsl #30
    204c:	00010000 	andeq	r0, r1, r0
    2050:	0004a405 	andeq	sl, r4, r5, lsl #8
    2054:	01571600 	cmpeq	r7, r0, lsl #12
    2058:	5b050000 	blpl	142060 <_Min_Stack_Size+0x141c60>
    205c:	03f90301 	mvnseq	r0, #67108864	; 0x4000000
    2060:	38130000 	ldmdacc	r3, {}	; <UNPREDICTABLE>
    2064:	09019305 	stmdbeq	r1, {r0, r2, r8, r9, ip, pc}
    2068:	000005b0 			; <UNDEFINED> instruction: 0x000005b0
    206c:	00524315 	subseq	r4, r2, r5, lsl r3
    2070:	11019505 	tstne	r1, r5, lsl #10
    2074:	0000009a 	muleq	r0, sl, r0
    2078:	14002302 	strne	r2, [r0], #-770	; 0xfffffcfe
    207c:	00000309 	andeq	r0, r0, r9, lsl #6
    2080:	11019605 	tstne	r1, r5, lsl #12
    2084:	0000009a 	muleq	r0, sl, r0
    2088:	14042302 	strne	r2, [r4], #-770	; 0xfffffcfe
    208c:	000002c4 	andeq	r0, r0, r4, asr #5
    2090:	11019705 	tstne	r1, r5, lsl #14
    2094:	0000009a 	muleq	r0, sl, r0
    2098:	15082302 	strne	r2, [r8, #-770]	; 0xfffffcfe
    209c:	00524943 	subseq	r4, r2, r3, asr #18
    20a0:	11019805 	tstne	r1, r5, lsl #16
    20a4:	0000009a 	muleq	r0, sl, r0
    20a8:	140c2302 	strne	r2, [ip], #-770	; 0xfffffcfe
    20ac:	00000227 	andeq	r0, r0, r7, lsr #4
    20b0:	11019905 	tstne	r1, r5, lsl #18
    20b4:	0000009a 	muleq	r0, sl, r0
    20b8:	14102302 	ldrne	r2, [r0], #-770	; 0xfffffcfe
    20bc:	000000c0 	andeq	r0, r0, r0, asr #1
    20c0:	11019a05 	tstne	r1, r5, lsl #20
    20c4:	0000009a 	muleq	r0, sl, r0
    20c8:	14142302 	ldrne	r2, [r4], #-770	; 0xfffffcfe
    20cc:	00000234 	andeq	r0, r0, r4, lsr r2
    20d0:	11019b05 	tstne	r1, r5, lsl #22
    20d4:	0000009a 	muleq	r0, sl, r0
    20d8:	14182302 	ldrne	r2, [r8], #-770	; 0xfffffcfe
    20dc:	000003d7 	ldrdeq	r0, [r0], -r7
    20e0:	11019c05 	tstne	r1, r5, lsl #24
    20e4:	0000009a 	muleq	r0, sl, r0
    20e8:	141c2302 	ldrne	r2, [ip], #-770	; 0xfffffcfe
    20ec:	000002b5 			; <UNDEFINED> instruction: 0x000002b5
    20f0:	11019d05 	tstne	r1, r5, lsl #26
    20f4:	0000009a 	muleq	r0, sl, r0
    20f8:	14202302 	strtne	r2, [r0], #-770	; 0xfffffcfe
    20fc:	000002ea 	andeq	r0, r0, sl, ror #5
    2100:	11019e05 	tstne	r1, r5, lsl #28
    2104:	0000009a 	muleq	r0, sl, r0
    2108:	14242302 	strtne	r2, [r4], #-770	; 0xfffffcfe
    210c:	000000d8 	ldrdeq	r0, [r0], -r8
    2110:	11019f05 	tstne	r1, r5, lsl #30
    2114:	0000009a 	muleq	r0, sl, r0
    2118:	14282302 	strtne	r2, [r8], #-770	; 0xfffffcfe
    211c:	000001de 	ldrdeq	r0, [r0], -lr
    2120:	1101a005 	tstne	r1, r5
    2124:	0000009a 	muleq	r0, sl, r0
    2128:	142c2302 	strtne	r2, [ip], #-770	; 0xfffffcfe
    212c:	00000197 	muleq	r0, r7, r1
    2130:	1101a105 	tstne	r1, r5, lsl #2
    2134:	0000009a 	muleq	r0, sl, r0
    2138:	15302302 	ldrne	r2, [r0, #-770]!	; 0xfffffcfe
    213c:	00525343 	subseq	r5, r2, r3, asr #6
    2140:	1101a205 	tstne	r1, r5, lsl #4
    2144:	0000009a 	muleq	r0, sl, r0
    2148:	00342302 	eorseq	r2, r4, r2, lsl #6
    214c:	00016416 	andeq	r6, r1, r6, lsl r4
    2150:	01a30500 			; <UNDEFINED> instruction: 0x01a30500
    2154:	0004c603 	andeq	ip, r4, r3, lsl #12
    2158:	05541300 	ldrbeq	r1, [r4, #-768]	; 0xfffffd00
    215c:	1609020c 	strne	r0, [r9], -ip, lsl #4
    2160:	15000007 	strne	r0, [r0, #-7]
    2164:	00315243 	eorseq	r5, r1, r3, asr #4
    2168:	11020e05 	tstne	r2, r5, lsl #28
    216c:	0000009a 	muleq	r0, sl, r0
    2170:	15002302 	strne	r2, [r0, #-770]	; 0xfffffcfe
    2174:	00325243 	eorseq	r5, r2, r3, asr #4
    2178:	11020f05 	tstne	r2, r5, lsl #30
    217c:	0000009a 	muleq	r0, sl, r0
    2180:	14042302 	strne	r2, [r4], #-770	; 0xfffffcfe
    2184:	00000d54 	andeq	r0, r0, r4, asr sp
    2188:	11021005 	tstne	r2, r5
    218c:	0000009a 	muleq	r0, sl, r0
    2190:	14082302 	strne	r2, [r8], #-770	; 0xfffffcfe
    2194:	00000c22 	andeq	r0, r0, r2, lsr #24
    2198:	11021105 	tstne	r2, r5, lsl #2
    219c:	0000009a 	muleq	r0, sl, r0
    21a0:	150c2302 	strne	r2, [ip, #-770]	; 0xfffffcfe
    21a4:	05005253 	streq	r5, [r0, #-595]	; 0xfffffdad
    21a8:	9a110212 	bls	4429f8 <_Min_Stack_Size+0x4425f8>
    21ac:	02000000 	andeq	r0, r0, #0
    21b0:	45151023 	ldrmi	r1, [r5, #-35]	; 0xffffffdd
    21b4:	05005247 	streq	r5, [r0, #-583]	; 0xfffffdb9
    21b8:	9a110213 	bls	442a0c <_Min_Stack_Size+0x44260c>
    21bc:	02000000 	andeq	r0, r0, #0
    21c0:	8c141423 	cfldrshi	mvf1, [r4], {35}	; 0x23
    21c4:	0500000b 	streq	r0, [r0, #-11]
    21c8:	9a110214 	bls	442a20 <_Min_Stack_Size+0x442620>
    21cc:	02000000 	andeq	r0, r0, #0
    21d0:	92141823 	andsls	r1, r4, #2293760	; 0x230000
    21d4:	0500000b 	streq	r0, [r0, #-11]
    21d8:	9a110215 	bls	442a34 <_Min_Stack_Size+0x442634>
    21dc:	02000000 	andeq	r0, r0, #0
    21e0:	5d141c23 	ldcpl	12, cr1, [r4, #-140]	; 0xffffff74
    21e4:	0500000b 	streq	r0, [r0, #-11]
    21e8:	9a110216 	bls	442a48 <_Min_Stack_Size+0x442648>
    21ec:	02000000 	andeq	r0, r0, #0
    21f0:	43152023 	tstmi	r5, #35	; 0x23
    21f4:	0500544e 	streq	r5, [r0, #-1102]	; 0xfffffbb2
    21f8:	9a110217 	bls	442a5c <_Min_Stack_Size+0x44265c>
    21fc:	02000000 	andeq	r0, r0, #0
    2200:	50152423 	andspl	r2, r5, r3, lsr #8
    2204:	05004353 	streq	r4, [r0, #-851]	; 0xfffffcad
    2208:	9a110218 	bls	442a70 <_Min_Stack_Size+0x442670>
    220c:	02000000 	andeq	r0, r0, #0
    2210:	41152823 	tstmi	r5, r3, lsr #16
    2214:	05005252 	streq	r5, [r0, #-594]	; 0xfffffdae
    2218:	9a110219 	bls	442a84 <_Min_Stack_Size+0x442684>
    221c:	02000000 	andeq	r0, r0, #0
    2220:	8d142c23 	ldchi	12, cr2, [r4, #-140]	; 0xffffff74
    2224:	0500000e 	streq	r0, [r0, #-14]
    2228:	8e11021a 	mrchi	2, 0, r0, cr1, cr10, {0}
    222c:	02000000 	andeq	r0, r0, #0
    2230:	82143023 	andshi	r3, r4, #35	; 0x23
    2234:	0500000b 	streq	r0, [r0, #-11]
    2238:	9a11021b 	bls	442aac <_Min_Stack_Size+0x4426ac>
    223c:	02000000 	andeq	r0, r0, #0
    2240:	87143423 	ldrhi	r3, [r4, -r3, lsr #8]
    2244:	0500000b 	streq	r0, [r0, #-11]
    2248:	9a11021c 	bls	442ac0 <_Min_Stack_Size+0x4426c0>
    224c:	02000000 	andeq	r0, r0, #0
    2250:	61143823 	tstvs	r4, r3, lsr #16
    2254:	0500000e 	streq	r0, [r0, #-14]
    2258:	9a11021d 	bls	442ad4 <_Min_Stack_Size+0x4426d4>
    225c:	02000000 	andeq	r0, r0, #0
    2260:	66143c23 	ldrvs	r3, [r4], -r3, lsr #24
    2264:	0500000e 	streq	r0, [r0, #-14]
    2268:	9a11021e 	bls	442ae8 <_Min_Stack_Size+0x4426e8>
    226c:	02000000 	andeq	r0, r0, #0
    2270:	98144023 	ldmdals	r4, {r0, r1, r5, lr}
    2274:	0500000e 	streq	r0, [r0, #-14]
    2278:	8e11021f 	mrchi	2, 0, r0, cr1, cr15, {0}
    227c:	02000000 	andeq	r0, r0, #0
    2280:	44154423 	ldrmi	r4, [r5], #-1059	; 0xfffffbdd
    2284:	05005243 	streq	r5, [r0, #-579]	; 0xfffffdbd
    2288:	9a110220 	bls	442b10 <_Min_Stack_Size+0x442710>
    228c:	02000000 	andeq	r0, r0, #0
    2290:	61144823 	tstvs	r4, r3, lsr #16
    2294:	0500000d 	streq	r0, [r0, #-13]
    2298:	9a110221 	bls	442b24 <_Min_Stack_Size+0x442724>
    229c:	02000000 	andeq	r0, r0, #0
    22a0:	4f154c23 	svcmi	0x00154c23
    22a4:	22050052 	andcs	r0, r5, #82	; 0x52
    22a8:	009a1102 	addseq	r1, sl, r2, lsl #2
    22ac:	23020000 	movwcs	r0, #8192	; 0x2000
    22b0:	42160050 	andsmi	r0, r6, #80	; 0x50
    22b4:	0500000b 	streq	r0, [r0, #-11]
    22b8:	bd030223 	sfmlt	f0, 4, [r3, #-140]	; 0xffffff74
    22bc:	13000005 	movwne	r0, #5
    22c0:	02370554 	eorseq	r0, r7, #84, 10	; 0x15000000
    22c4:	0008ce09 	andeq	ip, r8, r9, lsl #28
    22c8:	05e61400 	strbeq	r1, [r6, #1024]!	; 0x400
    22cc:	39050000 	stmdbcc	r5, {}	; <UNPREDICTABLE>
    22d0:	00821102 	addeq	r1, r2, r2, lsl #2
    22d4:	23020000 	movwcs	r0, #8192	; 0x2000
    22d8:	07d01400 	ldrbeq	r1, [r0, r0, lsl #8]
    22dc:	3a050000 	bcc	1422e4 <_Min_Stack_Size+0x141ee4>
    22e0:	00821102 	addeq	r1, r2, r2, lsl #2
    22e4:	23020000 	movwcs	r0, #8192	; 0x2000
    22e8:	06371402 	ldrteq	r1, [r7], -r2, lsl #8
    22ec:	3b050000 	blcc	1422f4 <_Min_Stack_Size+0x141ef4>
    22f0:	00821102 	addeq	r1, r2, r2, lsl #2
    22f4:	23020000 	movwcs	r0, #8192	; 0x2000
    22f8:	07da1404 	ldrbeq	r1, [sl, r4, lsl #8]
    22fc:	3c050000 	stccc	0, cr0, [r5], {-0}
    2300:	00821102 	addeq	r1, r2, r2, lsl #2
    2304:	23020000 	movwcs	r0, #8192	; 0x2000
    2308:	06c71406 	strbeq	r1, [r7], r6, lsl #8
    230c:	3d050000 	stccc	0, cr0, [r5, #-0]
    2310:	00821102 	addeq	r1, r2, r2, lsl #2
    2314:	23020000 	movwcs	r0, #8192	; 0x2000
    2318:	07e41408 	strbeq	r1, [r4, r8, lsl #8]!
    231c:	3e050000 	cdpcc	0, 0, cr0, cr5, cr0, {0}
    2320:	00821102 	addeq	r1, r2, r2, lsl #2
    2324:	23020000 	movwcs	r0, #8192	; 0x2000
    2328:	06f6140a 	ldrbteq	r1, [r6], sl, lsl #8
    232c:	3f050000 	svccc	0x00050000
    2330:	00821102 	addeq	r1, r2, r2, lsl #2
    2334:	23020000 	movwcs	r0, #8192	; 0x2000
    2338:	07ee140c 	strbeq	r1, [lr, ip, lsl #8]!
    233c:	40050000 	andmi	r0, r5, r0
    2340:	00821102 	addeq	r1, r2, r2, lsl #2
    2344:	23020000 	movwcs	r0, #8192	; 0x2000
    2348:	097d140e 	ldmdbeq	sp!, {r1, r2, r3, sl, ip}^
    234c:	41050000 	mrsmi	r0, (UNDEF: 5)
    2350:	00821102 	addeq	r1, r2, r2, lsl #2
    2354:	23020000 	movwcs	r0, #8192	; 0x2000
    2358:	07f81410 			; <UNDEFINED> instruction: 0x07f81410
    235c:	42050000 	andmi	r0, r5, #0
    2360:	00821102 	addeq	r1, r2, r2, lsl #2
    2364:	23020000 	movwcs	r0, #8192	; 0x2000
    2368:	07cb1412 	bfieq	r1, r2, #8, #4
    236c:	43050000 	movwmi	r0, #20480	; 0x5000
    2370:	00821102 	addeq	r1, r2, r2, lsl #2
    2374:	23020000 	movwcs	r0, #8192	; 0x2000
    2378:	08021414 	stmdaeq	r2, {r2, r4, sl, ip}
    237c:	44050000 	strmi	r0, [r5], #-0
    2380:	00821102 	addeq	r1, r2, r2, lsl #2
    2384:	23020000 	movwcs	r0, #8192	; 0x2000
    2388:	086f1416 	stmdaeq	pc!, {r1, r2, r4, sl, ip}^	; <UNPREDICTABLE>
    238c:	45050000 	strmi	r0, [r5, #-0]
    2390:	00821102 	addeq	r1, r2, r2, lsl #2
    2394:	23020000 	movwcs	r0, #8192	; 0x2000
    2398:	080c1418 	stmdaeq	ip, {r3, r4, sl, ip}
    239c:	46050000 	strmi	r0, [r5], -r0
    23a0:	00821102 	addeq	r1, r2, r2, lsl #2
    23a4:	23020000 	movwcs	r0, #8192	; 0x2000
    23a8:	08eb141a 	stmiaeq	fp!, {r1, r3, r4, sl, ip}^
    23ac:	47050000 	strmi	r0, [r5, -r0]
    23b0:	00821102 	addeq	r1, r2, r2, lsl #2
    23b4:	23020000 	movwcs	r0, #8192	; 0x2000
    23b8:	025e141c 	subseq	r1, lr, #28, 8	; 0x1c000000
    23bc:	48050000 	stmdami	r5, {}	; <UNPREDICTABLE>
    23c0:	08de1102 	ldmeq	lr, {r1, r8, ip}^
    23c4:	23020000 	movwcs	r0, #8192	; 0x2000
    23c8:	0897141e 	ldmeq	r7, {r1, r2, r3, r4, sl, ip}
    23cc:	49050000 	stmdbmi	r5, {}	; <UNPREDICTABLE>
    23d0:	00821102 	addeq	r1, r2, r2, lsl #2
    23d4:	23020000 	movwcs	r0, #8192	; 0x2000
    23d8:	0a221440 	beq	8874e0 <_Min_Stack_Size+0x8870e0>
    23dc:	4a050000 	bmi	1423e4 <_Min_Stack_Size+0x141fe4>
    23e0:	00821102 	addeq	r1, r2, r2, lsl #2
    23e4:	23020000 	movwcs	r0, #8192	; 0x2000
    23e8:	04f71442 	ldrbteq	r1, [r7], #1090	; 0x442
    23ec:	4b050000 	blmi	1423f4 <_Min_Stack_Size+0x141ff4>
    23f0:	00821102 	addeq	r1, r2, r2, lsl #2
    23f4:	23020000 	movwcs	r0, #8192	; 0x2000
    23f8:	08271444 	stmdaeq	r7!, {r2, r6, sl, ip}
    23fc:	4c050000 	stcmi	0, cr0, [r5], {-0}
    2400:	00821102 	addeq	r1, r2, r2, lsl #2
    2404:	23020000 	movwcs	r0, #8192	; 0x2000
    2408:	4e461546 	cdpmi	5, 4, cr1, cr6, cr6, {2}
    240c:	4d050052 	stcmi	0, cr0, [r5, #-328]	; 0xfffffeb8
    2410:	00821102 	addeq	r1, r2, r2, lsl #2
    2414:	23020000 	movwcs	r0, #8192	; 0x2000
    2418:	08311448 	ldmdaeq	r1!, {r3, r6, sl, ip}
    241c:	4e050000 	cdpmi	0, 0, cr0, cr5, cr0, {0}
    2420:	00821102 	addeq	r1, r2, r2, lsl #2
    2424:	23020000 	movwcs	r0, #8192	; 0x2000
    2428:	0589144a 	streq	r1, [r9, #1098]	; 0x44a
    242c:	4f050000 	svcmi	0x00050000
    2430:	00821102 	addeq	r1, r2, r2, lsl #2
    2434:	23020000 	movwcs	r0, #8192	; 0x2000
    2438:	0a38144c 	beq	e07570 <_Min_Stack_Size+0xe07170>
    243c:	50050000 	andpl	r0, r5, r0
    2440:	00821102 	addeq	r1, r2, r2, lsl #2
    2444:	23020000 	movwcs	r0, #8192	; 0x2000
    2448:	09b3144e 	ldmibeq	r3!, {r1, r2, r3, r6, sl, ip}
    244c:	51050000 	mrspl	r0, (UNDEF: 5)
    2450:	00821102 	addeq	r1, r2, r2, lsl #2
    2454:	23020000 	movwcs	r0, #8192	; 0x2000
    2458:	0a421450 	beq	10875a0 <_Min_Stack_Size+0x10871a0>
    245c:	52050000 	andpl	r0, r5, #0
    2460:	00821102 	addeq	r1, r2, r2, lsl #2
    2464:	23020000 	movwcs	r0, #8192	; 0x2000
    2468:	820e0052 	andhi	r0, lr, #82	; 0x52
    246c:	de000000 	cdple	0, 0, cr0, cr0, cr0, {0}
    2470:	0f000008 	svceq	0x00000008
    2474:	00000025 	andeq	r0, r0, r5, lsr #32
    2478:	ce050010 	mcrgt	0, 0, r0, cr5, cr0, {0}
    247c:	16000008 	strne	r0, [r0], -r8
    2480:	0000057d 	andeq	r0, r0, sp, ror r5
    2484:	03025305 	movweq	r5, #8965	; 0x2305
    2488:	00000723 	andeq	r0, r0, r3, lsr #14
    248c:	2a040802 	bcs	10449c <_Min_Stack_Size+0x10409c>
    2490:	1600000d 	strne	r0, [r0], -sp
    2494:	00000f8f 	andeq	r0, r0, pc, lsl #31
    2498:	17016507 	strne	r6, [r1, -r7, lsl #10]
    249c:	00000025 	andeq	r0, r0, r5, lsr #32
    24a0:	000a8903 	andeq	r8, sl, r3, lsl #18
    24a4:	0e2e0800 	cdpeq	8, 2, cr0, cr14, cr0, {0}
    24a8:	0000004b 	andeq	r0, r0, fp, asr #32
    24ac:	000b1a03 	andeq	r1, fp, r3, lsl #20
    24b0:	0e740800 	cdpeq	8, 7, cr0, cr4, cr0, {0}
    24b4:	0000004b 	andeq	r0, r0, fp, asr #32
    24b8:	a5080417 	strge	r0, [r8, #-1047]	; 0xfffffbe9
    24bc:	00093e03 	andeq	r3, r9, r3, lsl #28
    24c0:	0c6d1800 	stcleq	8, cr1, [sp], #-0
    24c4:	a7080000 	strge	r0, [r8, -r0]
    24c8:	0008f70c 	andeq	pc, r8, ip, lsl #14
    24cc:	0d7f1800 	ldcleq	8, cr1, [pc, #-0]	; 24d4 <_Min_Stack_Size+0x20d4>
    24d0:	a8080000 	stmdage	r8, {}	; <UNPREDICTABLE>
    24d4:	00093e13 	andeq	r3, r9, r3, lsl lr
    24d8:	6f0e0000 	svcvs	0x000e0000
    24dc:	4e000000 	cdpmi	0, 0, cr0, cr0, cr0, {0}
    24e0:	0f000009 	svceq	0x00000009
    24e4:	00000025 	andeq	r0, r0, r5, lsr #32
    24e8:	08070003 	stmdaeq	r7, {r0, r1}
    24ec:	7609a208 	strvc	sl, [r9], -r8, lsl #4
    24f0:	08000009 	stmdaeq	r0, {r0, r3}
    24f4:	00000b71 	andeq	r0, r0, r1, ror fp
    24f8:	ad07a408 	cfstrsge	mvf10, [r7, #-32]	; 0xffffffe0
    24fc:	02000000 	andeq	r0, r0, #0
    2500:	27080023 	strcs	r0, [r8, -r3, lsr #32]
    2504:	0800000c 	stmdaeq	r0, {r2, r3}
    2508:	091c05a9 	ldmdbeq	ip, {r0, r3, r5, r7, r8, sl}
    250c:	23020000 	movwcs	r0, #8192	; 0x2000
    2510:	e5030004 	str	r0, [r3, #-4]
    2514:	0800000c 	stmdaeq	r0, {r2, r3}
    2518:	094e03aa 	stmdbeq	lr, {r1, r3, r5, r7, r8, r9}^
    251c:	04190000 	ldreq	r0, [r9], #-0
    2520:	000cbe03 	andeq	fp, ip, r3, lsl #28
    2524:	19160900 	ldmdbne	r6, {r8, fp}
    2528:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    252c:	000aad03 	andeq	sl, sl, r3, lsl #26
    2530:	0d0c0a00 	vstreq	s0, [ip, #-0]
    2534:	000000ad 	andeq	r0, r0, sp, lsr #1
    2538:	000c6403 	andeq	r6, ip, r3, lsl #8
    253c:	1b230900 	blne	8c4944 <_Min_Stack_Size+0x8c4544>
    2540:	00000990 	muleq	r0, r0, r9
    2544:	000d591a 	andeq	r5, sp, sl, lsl r9
    2548:	34091800 	strcc	r1, [r9], #-2048	; 0xfffff800
    254c:	000a0e08 	andeq	r0, sl, r8, lsl #28
    2550:	0f6d0800 	svceq	0x006d0800
    2554:	36090000 	strcc	r0, [r9], -r0
    2558:	000a0e13 	andeq	r0, sl, r3, lsl lr
    255c:	00230200 	eoreq	r0, r3, r0, lsl #4
    2560:	006b5f0d 	rsbeq	r5, fp, sp, lsl #30
    2564:	ad073709 	stcge	7, cr3, [r7, #-36]	; 0xffffffdc
    2568:	02000000 	andeq	r0, r0, #0
    256c:	02080423 	andeq	r0, r8, #587202560	; 0x23000000
    2570:	0900000e 	stmdbeq	r0, {r1, r2, r3}
    2574:	00ad0b37 	adceq	r0, sp, r7, lsr fp
    2578:	23020000 	movwcs	r0, #8192	; 0x2000
    257c:	0d730808 	ldcleq	8, cr0, [r3, #-32]!	; 0xffffffe0
    2580:	37090000 	strcc	r0, [r9, -r0]
    2584:	0000ad14 	andeq	sl, r0, r4, lsl sp
    2588:	0c230200 	sfmeq	f0, 4, [r3], #-0
    258c:	000bd408 	andeq	sp, fp, r8, lsl #8
    2590:	1b370900 	blne	dc4998 <_Min_Stack_Size+0xdc4598>
    2594:	000000ad 	andeq	r0, r0, sp, lsr #1
    2598:	0d102302 	ldceq	3, cr2, [r0, #-8]
    259c:	0900785f 	stmdbeq	r0, {r0, r1, r2, r3, r4, r6, fp, ip, sp, lr}
    25a0:	0a140b38 	beq	505288 <_Min_Stack_Size+0x504e88>
    25a4:	23020000 	movwcs	r0, #8192	; 0x2000
    25a8:	041b0014 	ldreq	r0, [fp], #-20	; 0xffffffec
    25ac:	000009a8 	andeq	r0, r0, r8, lsr #19
    25b0:	0009840e 	andeq	r8, r9, lr, lsl #8
    25b4:	000a2400 	andeq	r2, sl, r0, lsl #8
    25b8:	00250f00 	eoreq	r0, r5, r0, lsl #30
    25bc:	00000000 	andeq	r0, r0, r0
    25c0:	000e1d1a 	andeq	r1, lr, sl, lsl sp
    25c4:	3c092400 	cfstrscc	mvf2, [r9], {-0}
    25c8:	000ab908 	andeq	fp, sl, r8, lsl #18
    25cc:	0bf90800 	bleq	ffe445d4 <BootRAM+0xedb4d75>
    25d0:	3e090000 	cdpcc	0, 0, cr0, cr9, cr0, {0}
    25d4:	0000ad09 	andeq	sl, r0, r9, lsl #26
    25d8:	00230200 	eoreq	r0, r3, r0, lsl #4
    25dc:	000b7908 	andeq	r7, fp, r8, lsl #18
    25e0:	093f0900 	ldmdbeq	pc!, {r8, fp}	; <UNPREDICTABLE>
    25e4:	000000ad 	andeq	r0, r0, sp, lsr #1
    25e8:	08042302 	stmdaeq	r4, {r1, r8, r9, sp}
    25ec:	00000b62 	andeq	r0, r0, r2, ror #22
    25f0:	ad094009 	stcge	0, cr4, [r9, #-36]	; 0xffffffdc
    25f4:	02000000 	andeq	r0, r0, #0
    25f8:	41080823 	tstmi	r8, r3, lsr #16
    25fc:	0900000c 	stmdbeq	r0, {r2, r3}
    2600:	00ad0941 	adceq	r0, sp, r1, asr #18
    2604:	23020000 	movwcs	r0, #8192	; 0x2000
    2608:	0d21080c 	stceq	8, cr0, [r1, #-48]!	; 0xffffffd0
    260c:	42090000 	andmi	r0, r9, #0
    2610:	0000ad09 	andeq	sl, r0, r9, lsl #26
    2614:	10230200 	eorne	r0, r3, r0, lsl #4
    2618:	000d4208 	andeq	r4, sp, r8, lsl #4
    261c:	09430900 	stmdbeq	r3, {r8, fp}^
    2620:	000000ad 	andeq	r0, r0, sp, lsr #1
    2624:	08142302 	ldmdaeq	r4, {r1, r8, r9, sp}
    2628:	00000b38 	andeq	r0, r0, r8, lsr fp
    262c:	ad094409 	cfstrsge	mvf4, [r9, #-36]	; 0xffffffdc
    2630:	02000000 	andeq	r0, r0, #0
    2634:	02081823 	andeq	r1, r8, #2293760	; 0x230000
    2638:	0900000c 	stmdbeq	r0, {r2, r3}
    263c:	00ad0945 	adceq	r0, sp, r5, asr #18
    2640:	23020000 	movwcs	r0, #8192	; 0x2000
    2644:	0cf0081c 	ldcleq	8, cr0, [r0], #112	; 0x70
    2648:	46090000 	strmi	r0, [r9], -r0
    264c:	0000ad09 	andeq	sl, r0, r9, lsl #26
    2650:	20230200 	eorcs	r0, r3, r0, lsl #4
    2654:	0d991c00 	ldceq	12, cr1, [r9]
    2658:	01080000 	mrseq	r0, (UNDEF: 8)
    265c:	07084f09 	streq	r4, [r8, -r9, lsl #30]
    2660:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    2664:	00000f06 	andeq	r0, r0, r6, lsl #30
    2668:	070a5009 	streq	r5, [sl, -r9]
    266c:	0200000b 	andeq	r0, r0, #11
    2670:	4d080023 	stcmi	0, cr0, [r8, #-140]	; 0xffffff74
    2674:	0900000e 	stmdbeq	r0, {r1, r2, r3}
    2678:	0b070951 	bleq	1c4bc4 <_Min_Stack_Size+0x1c47c4>
    267c:	23030000 	movwcs	r0, #12288	; 0x3000
    2680:	2e080180 	adfcs<illegal precision>	f0, f0, f0
    2684:	0900000f 	stmdbeq	r0, {r0, r1, r2, r3}
    2688:	09840a53 	stmibeq	r4, {r0, r1, r4, r6, r9, fp}
    268c:	23030000 	movwcs	r0, #12288	; 0x3000
    2690:	5a080280 	bpl	203098 <_Min_Stack_Size+0x202c98>
    2694:	0900000f 	stmdbeq	r0, {r0, r1, r2, r3}
    2698:	09840a56 	stmibeq	r4, {r1, r2, r4, r6, r9, fp}
    269c:	23030000 	movwcs	r0, #12288	; 0x3000
    26a0:	0e000284 	cdpeq	2, 0, cr0, cr0, cr4, {4}
    26a4:	00000982 	andeq	r0, r0, r2, lsl #19
    26a8:	00000b17 	andeq	r0, r0, r7, lsl fp
    26ac:	0000250f 	andeq	r2, r0, pc, lsl #10
    26b0:	1c001f00 	stcne	15, cr1, [r0], {-0}
    26b4:	00000d4c 	andeq	r0, r0, ip, asr #26
    26b8:	62090190 	andvs	r0, r9, #144, 2	; 0x24
    26bc:	000b6308 	andeq	r6, fp, r8, lsl #6
    26c0:	0f6d0800 	svceq	0x006d0800
    26c4:	63090000 	movwvs	r0, #36864	; 0x9000
    26c8:	000b6312 	andeq	r6, fp, r2, lsl r3
    26cc:	00230200 	eoreq	r0, r3, r0, lsl #4
    26d0:	000d0c08 	andeq	r0, sp, r8, lsl #24
    26d4:	06640900 	strbteq	r0, [r4], -r0, lsl #18
    26d8:	000000ad 	andeq	r0, r0, sp, lsr #1
    26dc:	08042302 	stmdaeq	r4, {r1, r8, r9, sp}
    26e0:	00000b22 	andeq	r0, r0, r2, lsr #22
    26e4:	69096609 	stmdbvs	r9, {r0, r3, r9, sl, sp, lr}
    26e8:	0200000b 	andeq	r0, r0, #11
    26ec:	99080823 	stmdbls	r8, {r0, r1, r5, fp}
    26f0:	0900000d 	stmdbeq	r0, {r0, r2, r3}
    26f4:	0ab91e67 	beq	fee4a098 <BootRAM+0xddba839>
    26f8:	23030000 	movwcs	r0, #12288	; 0x3000
    26fc:	1b000188 	blne	2d24 <_Min_Stack_Size+0x2924>
    2700:	000b1704 	andeq	r1, fp, r4, lsl #14
    2704:	0b790e00 	bleq	1e45f0c <_Min_Stack_Size+0x1e45b0c>
    2708:	0b790000 	bleq	1e42710 <_Min_Stack_Size+0x1e42310>
    270c:	250f0000 	strcs	r0, [pc, #-0]	; 2714 <_Min_Stack_Size+0x2314>
    2710:	1f000000 	svcne	0x00000000
    2714:	7f041b00 	svcvc	0x00041b00
    2718:	1d00000b 	stcne	0, cr0, [r0, #-44]	; 0xffffffd4
    271c:	0d3b1a01 	vldmdbeq	fp!, {s2}
    2720:	09080000 	stmdbeq	r8, {}	; <UNPREDICTABLE>
    2724:	0bad087a 	bleq	feb44914 <BootRAM+0xdab50b5>
    2728:	a8080000 	stmdage	r8, {}	; <UNPREDICTABLE>
    272c:	0900000c 	stmdbeq	r0, {r2, r3}
    2730:	0bad117b 	bleq	feb46d24 <BootRAM+0xdab74c5>
    2734:	23020000 	movwcs	r0, #8192	; 0x2000
    2738:	07c50800 	strbeq	r0, [r5, r0, lsl #16]
    273c:	7c090000 	stcvc	0, cr0, [r9], {-0}
    2740:	0000ad06 	andeq	sl, r0, r6, lsl #26
    2744:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    2748:	6f041b00 	svcvs	0x00041b00
    274c:	1a000000 	bne	2754 <_Min_Stack_Size+0x2354>
    2750:	00000bcc 	andeq	r0, r0, ip, asr #23
    2754:	08ba0968 	ldmeq	sl!, {r3, r5, r6, r8, fp}
    2758:	00000d26 	andeq	r0, r0, r6, lsr #26
    275c:	00705f0d 	rsbseq	r5, r0, sp, lsl #30
    2760:	ad12bb09 	vldrge	d11, [r2, #-36]	; 0xffffffdc
    2764:	0200000b 	andeq	r0, r0, #11
    2768:	5f0d0023 	svcpl	0x000d0023
    276c:	bc090072 	stclt	0, cr0, [r9], {114}	; 0x72
    2770:	0000ad07 	andeq	sl, r0, r7, lsl #26
    2774:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    2778:	00775f0d 	rsbseq	r5, r7, sp, lsl #30
    277c:	ad07bd09 	stcge	13, cr11, [r7, #-36]	; 0xffffffdc
    2780:	02000000 	andeq	r0, r0, #0
    2784:	74080823 	strvc	r0, [r8], #-2083	; 0xfffff7dd
    2788:	0900000a 	stmdbeq	r0, {r1, r3}
    278c:	004409be 	strheq	r0, [r4], #-158	; 0xffffff62
    2790:	23020000 	movwcs	r0, #8192	; 0x2000
    2794:	0cd5080c 	ldcleq	8, cr0, [r5], {12}
    2798:	bf090000 	svclt	0x00090000
    279c:	00004409 	andeq	r4, r0, r9, lsl #8
    27a0:	0e230200 	cdpeq	2, 2, cr0, cr3, cr0, {0}
    27a4:	66625f0d 	strbtvs	r5, [r2], -sp, lsl #30
    27a8:	11c00900 	bicne	r0, r0, r0, lsl #18
    27ac:	00000b81 	andeq	r0, r0, r1, lsl #23
    27b0:	08102302 	ldmdaeq	r0, {r1, r8, r9, sp}
    27b4:	00000a6b 	andeq	r0, r0, fp, ror #20
    27b8:	ad07c109 	stfged	f4, [r7, #-36]	; 0xffffffdc
    27bc:	02000000 	andeq	r0, r0, #0
    27c0:	27081823 	strcs	r1, [r8, -r3, lsr #16]
    27c4:	0900000b 	stmdbeq	r0, {r0, r1, r3}
    27c8:	09820ac8 	stmibeq	r2, {r3, r6, r7, r9, fp}
    27cc:	23020000 	movwcs	r0, #8192	; 0x2000
    27d0:	068e081c 	pkhbteq	r0, lr, ip, lsl #16
    27d4:	ca090000 	bgt	2427dc <_Min_Stack_Size+0x2423dc>
    27d8:	000ed71d 	andeq	sp, lr, sp, lsl r7
    27dc:	20230200 	eorcs	r0, r3, r0, lsl #4
    27e0:	00054008 	andeq	r4, r5, r8
    27e4:	1dcc0900 	vstrne.16	s1, [ip]	; <UNPREDICTABLE>
    27e8:	00000f02 	andeq	r0, r0, r2, lsl #30
    27ec:	08242302 	stmdaeq	r4!, {r1, r8, r9, sp}
    27f0:	00000be2 	andeq	r0, r0, r2, ror #23
    27f4:	270dcf09 	strcs	ip, [sp, -r9, lsl #30]
    27f8:	0200000f 	andeq	r0, r0, #15
    27fc:	79082823 	stmdbvc	r8, {r0, r1, r5, fp, sp}
    2800:	0900000c 	stmdbeq	r0, {r2, r3}
    2804:	0f4209d0 	svceq	0x004209d0
    2808:	23020000 	movwcs	r0, #8192	; 0x2000
    280c:	755f0d2c 	ldrbvc	r0, [pc, #-3372]	; 1ae8 <_Min_Stack_Size+0x16e8>
    2810:	d3090062 	movwle	r0, #36962	; 0x9062
    2814:	000b8111 	andeq	r8, fp, r1, lsl r1
    2818:	30230200 	eorcc	r0, r3, r0, lsl #4
    281c:	70755f0d 	rsbsvc	r5, r5, sp, lsl #30
    2820:	12d40900 	sbcsne	r0, r4, #0, 18
    2824:	00000bad 	andeq	r0, r0, sp, lsr #23
    2828:	0d382302 	ldceq	3, cr2, [r8, #-8]!
    282c:	0072755f 	rsbseq	r7, r2, pc, asr r5
    2830:	ad07d509 	cfstr32ge	mvfx13, [r7, #-36]	; 0xffffffdc
    2834:	02000000 	andeq	r0, r0, #0
    2838:	e8083c23 	stmda	r8, {r0, r1, r5, sl, fp, ip, sp}
    283c:	0900000b 	stmdbeq	r0, {r0, r1, r3}
    2840:	0f4811d8 	svceq	0x004811d8
    2844:	23020000 	movwcs	r0, #8192	; 0x2000
    2848:	0f370840 	svceq	0x00370840
    284c:	d9090000 	stmdble	r9, {}	; <UNPREDICTABLE>
    2850:	000f5811 	andeq	r5, pc, r1, lsl r8	; <UNPREDICTABLE>
    2854:	43230200 			; <UNDEFINED> instruction: 0x43230200
    2858:	626c5f0d 	rsbvs	r5, ip, #13, 30	; 0x34
    285c:	11dc0900 	bicsne	r0, ip, r0, lsl #18
    2860:	00000b81 	andeq	r0, r0, r1, lsl #23
    2864:	08442302 	stmdaeq	r4, {r1, r8, r9, sp}^
    2868:	00000e14 	andeq	r0, r0, r4, lsl lr
    286c:	ad07df09 	stcge	15, cr13, [r7, #-36]	; 0xffffffdc
    2870:	02000000 	andeq	r0, r0, #0
    2874:	a7084c23 	strge	r4, [r8, -r3, lsr #24]
    2878:	0900000d 	stmdbeq	r0, {r0, r2, r3}
    287c:	09040ae0 	stmdbeq	r4, {r5, r6, r7, r9, fp}
    2880:	23020000 	movwcs	r0, #8192	; 0x2000
    2884:	0d790850 	ldcleq	8, cr0, [r9, #-320]!	; 0xfffffec0
    2888:	e3090000 	movw	r0, #36864	; 0x9000
    288c:	000d4512 	andeq	r4, sp, r2, lsl r5
    2890:	54230200 	strtpl	r0, [r3], #-512	; 0xfffffe00
    2894:	000e2208 	andeq	r2, lr, r8, lsl #4
    2898:	0ce70900 			; <UNDEFINED> instruction: 0x0ce70900
    289c:	0000099c 	muleq	r0, ip, r9
    28a0:	08582302 	ldmdaeq	r8, {r1, r8, r9, sp}^
    28a4:	00000b2f 	andeq	r0, r0, pc, lsr #22
    28a8:	760ee909 	strvc	lr, [lr], -r9, lsl #18
    28ac:	02000009 	andeq	r0, r0, #9
    28b0:	52085c23 	andpl	r5, r8, #8960	; 0x2300
    28b4:	0900000f 	stmdbeq	r0, {r0, r1, r2, r3}
    28b8:	00ad09ea 	adceq	r0, sp, sl, ror #19
    28bc:	23020000 	movwcs	r0, #8192	; 0x2000
    28c0:	011e0064 	tsteq	lr, r4, rrx
    28c4:	000000ad 	andeq	r0, r0, sp, lsr #1
    28c8:	00000d45 	andeq	r0, r0, r5, asr #26
    28cc:	000d451f 	andeq	r4, sp, pc, lsl r5
    28d0:	09821f00 	stmibeq	r2, {r8, r9, sl, fp, ip}
    28d4:	c51f0000 	ldrgt	r0, [pc, #-0]	; 28dc <_Min_Stack_Size+0x24dc>
    28d8:	1f00000e 	svcne	0x0000000e
    28dc:	000000ad 	andeq	r0, r0, sp, lsr #1
    28e0:	50041b00 	andpl	r1, r4, r0, lsl #22
    28e4:	0400000d 	streq	r0, [r0], #-13
    28e8:	00000d45 	andeq	r0, r0, r5, asr #26
    28ec:	000f0e20 	andeq	r0, pc, r0, lsr #28
    28f0:	09042800 	stmdbeq	r4, {fp, sp}
    28f4:	c5080265 	strgt	r0, [r8, #-613]	; 0xfffffd9b
    28f8:	1400000e 	strne	r0, [r0], #-14
    28fc:	00000bdb 	ldrdeq	r0, [r0], -fp
    2900:	07026709 	streq	r6, [r2, -r9, lsl #14]
    2904:	000000ad 	andeq	r0, r0, sp, lsr #1
    2908:	14002302 	strne	r2, [r0], #-770	; 0xfffffcfe
    290c:	00000c8b 	andeq	r0, r0, fp, lsl #25
    2910:	0b026c09 	bleq	9d93c <_Min_Stack_Size+0x9d53c>
    2914:	00000fba 			; <UNDEFINED> instruction: 0x00000fba
    2918:	14042302 	strne	r2, [r4], #-770	; 0xfffffcfe
    291c:	00000b12 	andeq	r0, r0, r2, lsl fp
    2920:	14026c09 	strne	r6, [r2], #-3081	; 0xfffff3f7
    2924:	00000fba 			; <UNDEFINED> instruction: 0x00000fba
    2928:	14082302 	strne	r2, [r8], #-770	; 0xfffffcfe
    292c:	00000f87 	andeq	r0, r0, r7, lsl #31
    2930:	1e026c09 	cdpne	12, 0, cr6, cr2, cr9, {0}
    2934:	00000fba 			; <UNDEFINED> instruction: 0x00000fba
    2938:	140c2302 	strne	r2, [ip], #-770	; 0xfffffcfe
    293c:	00000c0c 	andeq	r0, r0, ip, lsl #24
    2940:	08026e09 	stmdaeq	r2, {r0, r3, r9, sl, fp, sp, lr}
    2944:	000000ad 	andeq	r0, r0, sp, lsr #1
    2948:	14102302 	ldrne	r2, [r0], #-770	; 0xfffffcfe
    294c:	00000bee 	andeq	r0, r0, lr, ror #23
    2950:	08026f09 	stmdaeq	r2, {r0, r3, r8, r9, sl, fp, sp, lr}
    2954:	000011f3 	strdeq	r1, [r0], -r3
    2958:	14142302 	ldrne	r2, [r4], #-770	; 0xfffffcfe
    295c:	00000ad5 	ldrdeq	r0, [r0], -r5
    2960:	07027209 	streq	r7, [r2, -r9, lsl #4]
    2964:	000000ad 	andeq	r0, r0, sp, lsr #1
    2968:	14302302 	ldrtne	r2, [r0], #-770	; 0xfffffcfe
    296c:	00000efe 	strdeq	r0, [r0], -lr
    2970:	16027309 	strne	r7, [r2], -r9, lsl #6
    2974:	00001209 	andeq	r1, r0, r9, lsl #4
    2978:	14342302 	ldrtne	r2, [r4], #-770	; 0xfffffcfe
    297c:	00000c80 	andeq	r0, r0, r0, lsl #25
    2980:	07027509 	streq	r7, [r2, -r9, lsl #10]
    2984:	000000ad 	andeq	r0, r0, sp, lsr #1
    2988:	14382302 	ldrtne	r2, [r8], #-770	; 0xfffffcfe
    298c:	00000cdb 	ldrdeq	r0, [r0], -fp
    2990:	0a027709 	beq	a05bc <_Min_Stack_Size+0xa01bc>
    2994:	0000121b 	andeq	r1, r0, fp, lsl r2
    2998:	143c2302 	ldrtne	r2, [ip], #-770	; 0xfffffcfe
    299c:	00000b4e 	andeq	r0, r0, lr, asr #22
    29a0:	13027a09 	movwne	r7, #10761	; 0x2a09
    29a4:	00000a0e 	andeq	r0, r0, lr, lsl #20
    29a8:	14402302 	strbne	r2, [r0], #-770	; 0xfffffcfe
    29ac:	00000ba0 	andeq	r0, r0, r0, lsr #23
    29b0:	07027b09 	streq	r7, [r2, -r9, lsl #22]
    29b4:	000000ad 	andeq	r0, r0, sp, lsr #1
    29b8:	14442302 	strbne	r2, [r4], #-770	; 0xfffffcfe
    29bc:	00000c2f 	andeq	r0, r0, pc, lsr #24
    29c0:	13027c09 	movwne	r7, #11273	; 0x2c09
    29c4:	00000a0e 	andeq	r0, r0, lr, lsl #20
    29c8:	14482302 	strbne	r2, [r8], #-770	; 0xfffffcfe
    29cc:	00000cae 	andeq	r0, r0, lr, lsr #25
    29d0:	14027d09 	strne	r7, [r2], #-3337	; 0xfffff2f7
    29d4:	00001221 	andeq	r1, r0, r1, lsr #4
    29d8:	144c2302 	strbne	r2, [ip], #-770	; 0xfffffcfe
    29dc:	00000dfa 	strdeq	r0, [r0], -sl
    29e0:	07028009 	streq	r8, [r2, -r9]
    29e4:	000000ad 	andeq	r0, r0, sp, lsr #1
    29e8:	14502302 	ldrbne	r2, [r0], #-770	; 0xfffffcfe
    29ec:	00000e59 	andeq	r0, r0, r9, asr lr
    29f0:	09028109 	stmdbeq	r2, {r0, r3, r8, pc}
    29f4:	00000ec5 	andeq	r0, r0, r5, asr #29
    29f8:	14542302 	ldrbne	r2, [r4], #-770	; 0xfffffcfe
    29fc:	00000b0d 	andeq	r0, r0, sp, lsl #22
    2a00:	0702a409 	streq	sl, [r2, -r9, lsl #8]
    2a04:	000011ce 	andeq	r1, r0, lr, asr #3
    2a08:	14582302 	ldrbne	r2, [r8], #-770	; 0xfffffcfe
    2a0c:	00000d4c 	andeq	r0, r0, ip, asr #26
    2a10:	1302a809 	movwne	sl, #10249	; 0x2809
    2a14:	00000b63 	andeq	r0, r0, r3, ror #22
    2a18:	02c82303 	sbceq	r2, r8, #201326592	; 0xc000000
    2a1c:	000f7314 	andeq	r7, pc, r4, lsl r3	; <UNPREDICTABLE>
    2a20:	02a90900 	adceq	r0, r9, #0, 18
    2a24:	000b1712 	andeq	r1, fp, r2, lsl r7
    2a28:	cc230300 	stcgt	3, cr0, [r3], #-0
    2a2c:	0c4b1402 	cfstrdeq	mvd1, [fp], {2}
    2a30:	ad090000 	stcge	0, cr0, [r9, #-0]
    2a34:	12330c02 	eorsne	r0, r3, #512	; 0x200
    2a38:	23030000 	movwcs	r0, #12288	; 0x3000
    2a3c:	db1405dc 	blle	5041b4 <_Min_Stack_Size+0x503db4>
    2a40:	0900000e 	stmdbeq	r0, {r1, r2, r3}
    2a44:	751002b2 	ldrvc	r0, [r0, #-690]	; 0xfffffd4e
    2a48:	0300000f 	movweq	r0, #15
    2a4c:	1405e023 	strne	lr, [r5], #-35	; 0xffffffdd
    2a50:	00000d6e 	andeq	r0, r0, lr, ror #26
    2a54:	0a02b409 	beq	afa80 <_Min_Stack_Size+0xaf680>
    2a58:	0000123f 	andeq	r1, r0, pc, lsr r2
    2a5c:	05ec2303 	strbeq	r2, [ip, #771]!	; 0x303
    2a60:	cb041b00 	blgt	109668 <_Min_Stack_Size+0x109268>
    2a64:	0200000e 	andeq	r0, r0, #14
    2a68:	02830801 	addeq	r0, r3, #65536	; 0x10000
    2a6c:	cb040000 	blgt	102a74 <_Min_Stack_Size+0x102674>
    2a70:	1b00000e 	blne	2ab0 <_Min_Stack_Size+0x26b0>
    2a74:	000d2604 	andeq	r2, sp, r4, lsl #12
    2a78:	ad011e00 	stcge	14, cr1, [r1, #-0]
    2a7c:	fc000000 	stc2	0, cr0, [r0], {-0}
    2a80:	1f00000e 	svcne	0x0000000e
    2a84:	00000d45 	andeq	r0, r0, r5, asr #26
    2a88:	0009821f 	andeq	r8, r9, pc, lsl r2
    2a8c:	0efc1f00 	cdpeq	15, 15, cr1, cr12, cr0, {0}
    2a90:	ad1f0000 	ldcge	0, cr0, [pc, #-0]	; 2a98 <_Min_Stack_Size+0x2698>
    2a94:	00000000 	andeq	r0, r0, r0
    2a98:	0ed2041b 	mrceq	4, 6, r0, cr2, cr11, {0}
    2a9c:	041b0000 	ldreq	r0, [fp], #-0
    2aa0:	00000edd 	ldrdeq	r0, [r0], -sp
    2aa4:	0910011e 	ldmdbeq	r0, {r1, r2, r3, r4, r8}
    2aa8:	0f270000 	svceq	0x00270000
    2aac:	451f0000 	ldrmi	r0, [pc, #-0]	; 2ab4 <_Min_Stack_Size+0x26b4>
    2ab0:	1f00000d 	svcne	0x0000000d
    2ab4:	00000982 	andeq	r0, r0, r2, lsl #19
    2ab8:	0009101f 	andeq	r1, r9, pc, lsl r0
    2abc:	00ad1f00 	adceq	r1, sp, r0, lsl #30
    2ac0:	1b000000 	blne	2ac8 <_Min_Stack_Size+0x26c8>
    2ac4:	000f0804 	andeq	r0, pc, r4, lsl #16
    2ac8:	ad011e00 	stcge	14, cr1, [r1, #-0]
    2acc:	42000000 	andmi	r0, r0, #0
    2ad0:	1f00000f 	svcne	0x0000000f
    2ad4:	00000d45 	andeq	r0, r0, r5, asr #26
    2ad8:	0009821f 	andeq	r8, r9, pc, lsl r2
    2adc:	041b0000 	ldreq	r0, [fp], #-0
    2ae0:	00000f2d 	andeq	r0, r0, sp, lsr #30
    2ae4:	00006f0e 	andeq	r6, r0, lr, lsl #30
    2ae8:	000f5800 	andeq	r5, pc, r0, lsl #16
    2aec:	00250f00 	eoreq	r0, r5, r0, lsl #30
    2af0:	00020000 	andeq	r0, r2, r0
    2af4:	00006f0e 	andeq	r6, r0, lr, lsl #30
    2af8:	000f6800 	andeq	r6, pc, r0, lsl #16
    2afc:	00250f00 	eoreq	r0, r5, r0, lsl #30
    2b00:	00000000 	andeq	r0, r0, r0
    2b04:	000b5616 	andeq	r5, fp, r6, lsl r6
    2b08:	01240900 			; <UNDEFINED> instruction: 0x01240900
    2b0c:	000bb31a 	andeq	fp, fp, sl, lsl r3
    2b10:	0ed52100 	cdpeq	1, 13, cr2, cr5, cr0, {0}
    2b14:	090c0000 	stmdbeq	ip, {}	; <UNPREDICTABLE>
    2b18:	b4080128 	strlt	r0, [r8], #-296	; 0xfffffed8
    2b1c:	1400000f 	strne	r0, [r0], #-15
    2b20:	00000f6d 	andeq	r0, r0, sp, ror #30
    2b24:	11012a09 	tstne	r1, r9, lsl #20
    2b28:	00000fb4 			; <UNDEFINED> instruction: 0x00000fb4
    2b2c:	14002302 	strne	r2, [r0], #-770	; 0xfffffcfe
    2b30:	00000e46 	andeq	r0, r0, r6, asr #28
    2b34:	07012b09 	streq	r2, [r1, -r9, lsl #22]
    2b38:	000000ad 	andeq	r0, r0, sp, lsr #1
    2b3c:	14042302 	strne	r2, [r4], #-770	; 0xfffffcfe
    2b40:	00000c73 	andeq	r0, r0, r3, ror ip
    2b44:	0b012c09 	bleq	4db70 <_Min_Stack_Size+0x4d770>
    2b48:	00000fba 			; <UNDEFINED> instruction: 0x00000fba
    2b4c:	00082302 	andeq	r2, r8, r2, lsl #6
    2b50:	0f75041b 	svceq	0x0075041b
    2b54:	041b0000 	ldreq	r0, [fp], #-0
    2b58:	00000f68 	andeq	r0, r0, r8, ror #30
    2b5c:	000b9821 	andeq	r9, fp, r1, lsr #16
    2b60:	44090e00 	strmi	r0, [r9], #-3584	; 0xfffff200
    2b64:	0fff0801 	svceq	0x00ff0801
    2b68:	62140000 	andsvs	r0, r4, #0
    2b6c:	0900000f 	stmdbeq	r0, {r0, r1, r2, r3}
    2b70:	ff120145 			; <UNDEFINED> instruction: 0xff120145
    2b74:	0200000f 	andeq	r0, r0, #15
    2b78:	b8140023 	ldmdalt	r4, {r0, r1, r5}
    2b7c:	0900000c 	stmdbeq	r0, {r2, r3}
    2b80:	ff120146 			; <UNDEFINED> instruction: 0xff120146
    2b84:	0200000f 	andeq	r0, r0, #15
    2b88:	6c140623 	ldcvs	6, cr0, [r4], {35}	; 0x23
    2b8c:	0900000b 	stmdbeq	r0, {r0, r1, r3}
    2b90:	87120147 	ldrhi	r0, [r2, -r7, asr #2]
    2b94:	02000000 	andeq	r0, r0, #0
    2b98:	0e000c23 	cdpeq	12, 0, cr0, cr0, cr3, {1}
    2b9c:	00000087 	andeq	r0, r0, r7, lsl #1
    2ba0:	0000100f 	andeq	r1, r0, pc
    2ba4:	0000250f 	andeq	r2, r0, pc, lsl #10
    2ba8:	13000200 	movwne	r0, #512	; 0x200
    2bac:	028509d0 	addeq	r0, r5, #208, 18	; 0x340000
    2bb0:	00115307 	andseq	r5, r1, r7, lsl #6
    2bb4:	0f3d1400 	svceq	0x003d1400
    2bb8:	87090000 	strhi	r0, [r9, -r0]
    2bbc:	00251802 	eoreq	r1, r5, r2, lsl #16
    2bc0:	23020000 	movwcs	r0, #8192	; 0x2000
    2bc4:	0ee31400 	cdpeq	4, 14, cr1, cr3, cr0, {0}
    2bc8:	88090000 	stmdahi	r9, {}	; <UNPREDICTABLE>
    2bcc:	0ec51202 	cdpeq	2, 12, cr1, cr5, cr2, {0}
    2bd0:	23020000 	movwcs	r0, #8192	; 0x2000
    2bd4:	0bbf1404 	bleq	fefc7bec <BootRAM+0xdf3838d>
    2bd8:	89090000 	stmdbhi	r9, {}	; <UNPREDICTABLE>
    2bdc:	11531002 	cmpne	r3, r2
    2be0:	23020000 	movwcs	r0, #8192	; 0x2000
    2be4:	0dca1408 	cfstrdeq	mvd1, [sl, #32]
    2be8:	8a090000 	bhi	242bf0 <_Min_Stack_Size+0x2427f0>
    2bec:	0a241702 	beq	9087fc <_Min_Stack_Size+0x9083fc>
    2bf0:	23020000 	movwcs	r0, #8192	; 0x2000
    2bf4:	0c921424 	cfldrseq	mvf1, [r2], {36}	; 0x24
    2bf8:	8b090000 	blhi	242c00 <_Min_Stack_Size+0x242800>
    2bfc:	00ad0f02 	adceq	r0, sp, r2, lsl #30
    2c00:	23020000 	movwcs	r0, #8192	; 0x2000
    2c04:	0f681448 	svceq	0x00681448
    2c08:	8c090000 	stchi	0, cr0, [r9], {-0}
    2c0c:	00a62c02 	adceq	r2, r6, r2, lsl #24
    2c10:	23020000 	movwcs	r0, #8192	; 0x2000
    2c14:	0a5a1450 	beq	1687d5c <_Min_Stack_Size+0x168795c>
    2c18:	8d090000 	stchi	0, cr0, [r9, #-0]
    2c1c:	0fc01a02 	svceq	0x00c01a02
    2c20:	23020000 	movwcs	r0, #8192	; 0x2000
    2c24:	0c341458 	cfldrseq	mvf1, [r4], #-352	; 0xfffffea0
    2c28:	8e090000 	cdphi	0, 0, cr0, cr9, cr0, {0}
    2c2c:	09761602 	ldmdbeq	r6!, {r1, r9, sl, ip}^
    2c30:	23020000 	movwcs	r0, #8192	; 0x2000
    2c34:	0ef01468 	cdpeq	4, 15, cr1, cr0, cr8, {3}
    2c38:	8f090000 	svchi	0x00090000
    2c3c:	09761602 	ldmdbeq	r6!, {r1, r9, sl, ip}^
    2c40:	23020000 	movwcs	r0, #8192	; 0x2000
    2c44:	0a4c1470 	beq	1307e0c <_Min_Stack_Size+0x1307a0c>
    2c48:	90090000 	andls	r0, r9, r0
    2c4c:	09761602 	ldmdbeq	r6!, {r1, r9, sl, ip}^
    2c50:	23020000 	movwcs	r0, #8192	; 0x2000
    2c54:	0e0a1478 	mcreq	4, 0, r1, cr10, cr8, {3}
    2c58:	91090000 	mrsls	r0, (UNDEF: 9)
    2c5c:	11631002 	cmnne	r3, r2
    2c60:	23030000 	movwcs	r0, #12288	; 0x3000
    2c64:	5f140180 	svcpl	0x00140180
    2c68:	0900000a 	stmdbeq	r0, {r1, r3}
    2c6c:	73100292 	tstvc	r0, #536870921	; 0x20000009
    2c70:	03000011 	movweq	r0, #17
    2c74:	14018823 	strne	r8, [r1], #-2083	; 0xfffff7dd
    2c78:	00000e6b 	andeq	r0, r0, fp, ror #28
    2c7c:	0f029309 	svceq	0x00029309
    2c80:	000000ad 	andeq	r0, r0, sp, lsr #1
    2c84:	01a02303 	lsleq	r2, r3, #6
    2c88:	000aee14 	andeq	lr, sl, r4, lsl lr
    2c8c:	02940900 	addseq	r0, r4, #0, 18
    2c90:	00097616 	andeq	r7, r9, r6, lsl r6
    2c94:	a4230300 	strtge	r0, [r3], #-768	; 0xfffffd00
    2c98:	0c551401 	cfldrdeq	mvd1, [r5], {1}
    2c9c:	95090000 	strls	r0, [r9, #-0]
    2ca0:	09761602 	ldmdbeq	r6!, {r1, r9, sl, ip}^
    2ca4:	23030000 	movwcs	r0, #12288	; 0x3000
    2ca8:	111401ac 	tstne	r4, ip, lsr #3
    2cac:	0900000c 	stmdbeq	r0, {r2, r3}
    2cb0:	76160296 			; <UNDEFINED> instruction: 0x76160296
    2cb4:	03000009 	movweq	r0, #9
    2cb8:	1401b423 	strne	fp, [r1], #-1059	; 0xfffffbdd
    2cbc:	00000cc6 	andeq	r0, r0, r6, asr #25
    2cc0:	16029709 	strne	r9, [r2], -r9, lsl #14
    2cc4:	00000976 	andeq	r0, r0, r6, ror r9
    2cc8:	01bc2303 			; <UNDEFINED> instruction: 0x01bc2303
    2ccc:	000cfb14 	andeq	pc, ip, r4, lsl fp	; <UNPREDICTABLE>
    2cd0:	02980900 	addseq	r0, r8, #0, 18
    2cd4:	00097616 	andeq	r7, r9, r6, lsl r6
    2cd8:	c4230300 	strtgt	r0, [r3], #-768	; 0xfffffd00
    2cdc:	0bd91401 	bleq	ff647ce8 <BootRAM+0xe5b8489>
    2ce0:	99090000 	stmdbls	r9, {}	; <UNPREDICTABLE>
    2ce4:	00ad0802 	adceq	r0, sp, r2, lsl #16
    2ce8:	23030000 	movwcs	r0, #12288	; 0x3000
    2cec:	0e0001cc 	adfeqdm	f0, f0, #4.0
    2cf0:	00000ecb 	andeq	r0, r0, fp, asr #29
    2cf4:	00001163 	andeq	r1, r0, r3, ror #2
    2cf8:	0000250f 	andeq	r2, r0, pc, lsl #10
    2cfc:	0e001900 	vmlaeq.f16	s2, s0, s0	; <UNPREDICTABLE>
    2d00:	00000ecb 	andeq	r0, r0, fp, asr #29
    2d04:	00001173 	andeq	r1, r0, r3, ror r1
    2d08:	0000250f 	andeq	r2, r0, pc, lsl #10
    2d0c:	0e000700 	cdpeq	7, 0, cr0, cr0, cr0, {0}
    2d10:	00000ecb 	andeq	r0, r0, fp, asr #29
    2d14:	00001183 	andeq	r1, r0, r3, lsl #3
    2d18:	0000250f 	andeq	r2, r0, pc, lsl #10
    2d1c:	13001700 	movwne	r1, #1792	; 0x700
    2d20:	029e09f0 	addseq	r0, lr, #240, 18	; 0x3c0000
    2d24:	0011ae07 	andseq	sl, r1, r7, lsl #28
    2d28:	0ca11400 	cfstrseq	mvf1, [r1]
    2d2c:	a1090000 	mrsge	r0, (UNDEF: 9)
    2d30:	11ae1b02 			; <UNDEFINED> instruction: 0x11ae1b02
    2d34:	23020000 	movwcs	r0, #8192	; 0x2000
    2d38:	0a901400 	beq	fe407d40 <BootRAM+0xd3784e1>
    2d3c:	a2090000 	andge	r0, r9, #0
    2d40:	11be1802 			; <UNDEFINED> instruction: 0x11be1802
    2d44:	23020000 	movwcs	r0, #8192	; 0x2000
    2d48:	ad0e0078 	stcge	0, cr0, [lr, #-480]	; 0xfffffe20
    2d4c:	be00000b 	cdplt	0, 0, cr0, cr0, cr11, {0}
    2d50:	0f000011 	svceq	0x00000011
    2d54:	00000025 	andeq	r0, r0, r5, lsr #32
    2d58:	250e001d 	strcs	r0, [lr, #-29]	; 0xffffffe3
    2d5c:	ce000000 	cdpgt	0, 0, cr0, cr0, cr0, {0}
    2d60:	0f000011 	svceq	0x00000011
    2d64:	00000025 	andeq	r0, r0, r5, lsr #32
    2d68:	f022001d 			; <UNDEFINED> instruction: 0xf022001d
    2d6c:	03028309 	movweq	r8, #8969	; 0x2309
    2d70:	000011f3 	strdeq	r1, [r0], -r3
    2d74:	000f0e23 	andeq	r0, pc, r3, lsr #28
    2d78:	029a0900 	addseq	r0, sl, #0, 18
    2d7c:	00100f0b 	andseq	r0, r0, fp, lsl #30
    2d80:	0df22300 	ldcleq	3, cr2, [r2]
    2d84:	a3090000 	movwge	r0, #36864	; 0x9000
    2d88:	11830b02 	orrne	r0, r3, r2, lsl #22
    2d8c:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    2d90:	00000ecb 	andeq	r0, r0, fp, asr #29
    2d94:	00001203 	andeq	r1, r0, r3, lsl #4
    2d98:	0000250f 	andeq	r2, r0, pc, lsl #10
    2d9c:	24001800 	strcs	r1, [r0], #-2048	; 0xfffff800
    2da0:	00000f7c 	andeq	r0, r0, ip, ror pc
    2da4:	03041b01 	movweq	r1, #19201	; 0x4b01
    2da8:	25000012 	strcs	r0, [r0, #-18]	; 0xffffffee
    2dac:	00121b01 	andseq	r1, r2, r1, lsl #22
    2db0:	0d451f00 	stcleq	15, cr1, [r5, #-0]
    2db4:	1b000000 	blne	2dbc <_Min_Stack_Size+0x29bc>
    2db8:	00120f04 	andseq	r0, r2, r4, lsl #30
    2dbc:	0e041b00 	vmlaeq.f64	d1, d4, d0
    2dc0:	2500000a 	strcs	r0, [r0, #-10]
    2dc4:	00123301 	andseq	r3, r2, r1, lsl #6
    2dc8:	00ad1f00 	adceq	r1, sp, r0, lsl #30
    2dcc:	1b000000 	blne	2dd4 <_Min_Stack_Size+0x29d4>
    2dd0:	00123904 	andseq	r3, r2, r4, lsl #18
    2dd4:	27041b00 	strcs	r1, [r4, -r0, lsl #22]
    2dd8:	0e000012 	mcreq	0, 0, r0, cr0, cr2, {0}
    2ddc:	00000f68 	andeq	r0, r0, r8, ror #30
    2de0:	0000124f 	andeq	r1, r0, pc, asr #4
    2de4:	0000250f 	andeq	r2, r0, pc, lsl #10
    2de8:	11000200 	mrsne	r0, R8_usr
    2dec:	00000d8d 	andeq	r0, r0, sp, lsl #27
    2df0:	17033309 	strne	r3, [r3, -r9, lsl #6]
    2df4:	00000d45 	andeq	r0, r0, r5, asr #26
    2df8:	86110101 	ldrhi	r0, [r1], -r1, lsl #2
    2dfc:	0900000d 	stmdbeq	r0, {r0, r2, r3}
    2e00:	4b1d0334 	blmi	743ad8 <_Min_Stack_Size+0x7436d8>
    2e04:	0100000d 	tsteq	r0, sp
    2e08:	006a0e01 	rsbeq	r0, sl, r1, lsl #28
    2e0c:	127d0000 	rsbsne	r0, sp, #0
    2e10:	250f0000 	strcs	r0, [pc, #-0]	; 2e18 <_Min_Stack_Size+0x2a18>
    2e14:	11000000 	mrsne	r0, (UNDEF: 0)
    2e18:	126d0400 	rsbne	r0, sp, #0, 8
    2e1c:	78260000 	stmdavc	r6!, {}	; <UNPREDICTABLE>
    2e20:	0100000e 	tsteq	r0, lr
    2e24:	127d1614 	rsbsne	r1, sp, #20, 12	; 0x1400000
    2e28:	03050000 	movweq	r0, #20480	; 0x5000
    2e2c:	08000d2e 	stmdaeq	r0, {r1, r2, r3, r5, r8, sl, fp}
    2e30:	00006a0e 	andeq	r6, r0, lr, lsl #20
    2e34:	0012a400 	andseq	sl, r2, r0, lsl #8
    2e38:	00250f00 	eoreq	r0, r5, r0, lsl #30
    2e3c:	00090000 	andeq	r0, r9, r0
    2e40:	00129404 	andseq	r9, r2, r4, lsl #8
    2e44:	0e282600 	cfmadda32eq	mvax0, mvax2, mvfx8, mvfx0
    2e48:	27010000 	strcs	r0, [r1, -r0]
    2e4c:	0012a416 	andseq	sl, r2, r6, lsl r4
    2e50:	ad030500 	cfstr32ge	mvfx0, [r3, #-0]
    2e54:	0e08000d 	cdpeq	0, 0, cr0, cr8, cr13, {0}
    2e58:	0000006a 	andeq	r0, r0, sl, rrx
    2e5c:	000012cb 	andeq	r1, r0, fp, asr #5
    2e60:	0000250f 	andeq	r2, r0, pc, lsl #10
    2e64:	04006c00 	streq	r6, [r0], #-3072	; 0xfffff400
    2e68:	000012bb 			; <UNDEFINED> instruction: 0x000012bb
    2e6c:	000baa26 	andeq	sl, fp, r6, lsr #20
    2e70:	16370100 	ldrtne	r0, [r7], -r0, lsl #2
    2e74:	000012cb 	andeq	r1, r0, fp, asr #5
    2e78:	0d400305 	stcleq	3, cr0, [r0, #-20]	; 0xffffffec
    2e7c:	d91a0800 	ldmdble	sl, {fp}
    2e80:	0400000d 	streq	r0, [r0], #-13
    2e84:	1d01bd01 	stcne	13, cr11, [r1, #-4]
    2e88:	08000013 	stmdaeq	r0, {r0, r1, r4}
    2e8c:	00000f4a 	andeq	r0, r0, sl, asr #30
    2e90:	5901bd01 	stmdbpl	r1, {r0, r8, sl, fp, ip, sp, pc}
    2e94:	02000000 	andeq	r0, r0, #0
    2e98:	a3080023 	movwge	r0, #32803	; 0x8023
    2e9c:	0100000e 	tsteq	r0, lr
    2ea0:	005901bd 	ldrheq	r0, [r9], #-29	; 0xffffffe3
    2ea4:	23020000 	movwcs	r0, #8192	; 0x2000
    2ea8:	0d660801 	stcleq	8, cr0, [r6, #-4]!
    2eac:	bd010000 	stclt	0, cr0, [r1, #-0]
    2eb0:	00132201 	andseq	r2, r3, r1, lsl #4
    2eb4:	02230200 	eoreq	r0, r3, #0, 4
    2eb8:	12e20400 	rscne	r0, r2, #0, 8
    2ebc:	760e0000 	strvc	r0, [lr], -r0
    2ec0:	32000000 	andcc	r0, r0, #0
    2ec4:	0f000013 	svceq	0x00000013
    2ec8:	00000025 	andeq	r0, r0, r5, lsr #32
    2ecc:	d9260000 	stmdble	r6!, {}	; <UNPREDICTABLE>
    2ed0:	0100000d 	tsteq	r0, sp
    2ed4:	131d01bd 	tstne	sp, #1073741871	; 0x4000002f
    2ed8:	03050000 	movweq	r0, #20480	; 0x5000
    2edc:	08000db8 	stmdaeq	r0, {r3, r4, r5, r7, r8, sl, fp}
    2ee0:	000eb31a 	andeq	fp, lr, sl, lsl r3
    2ee4:	be011600 	cfmadd32lt	mvax0, mvfx1, mvfx1, mvfx0
    2ee8:	00137f01 	andseq	r7, r3, r1, lsl #30
    2eec:	0f4a0800 	svceq	0x004a0800
    2ef0:	be010000 	cdplt	0, 0, cr0, cr1, cr0, {0}
    2ef4:	00005901 	andeq	r5, r0, r1, lsl #18
    2ef8:	00230200 	eoreq	r0, r3, r0, lsl #4
    2efc:	000ea308 	andeq	sl, lr, r8, lsl #6
    2f00:	01be0100 			; <UNDEFINED> instruction: 0x01be0100
    2f04:	00000059 	andeq	r0, r0, r9, asr r0
    2f08:	08012302 	stmdaeq	r1, {r1, r8, r9, sp}
    2f0c:	00000d66 	andeq	r0, r0, r6, ror #26
    2f10:	8401be01 	strhi	fp, [r1], #-3585	; 0xfffff1ff
    2f14:	02000013 	andeq	r0, r0, #19
    2f18:	04000223 	streq	r0, [r0], #-547	; 0xfffffddd
    2f1c:	00001344 	andeq	r1, r0, r4, asr #6
    2f20:	0000760e 	andeq	r7, r0, lr, lsl #12
    2f24:	00139400 	andseq	r9, r3, r0, lsl #8
    2f28:	00250f00 	eoreq	r0, r5, r0, lsl #30
    2f2c:	00090000 	andeq	r0, r9, r0
    2f30:	000eb326 	andeq	fp, lr, r6, lsr #6
    2f34:	01be0100 			; <UNDEFINED> instruction: 0x01be0100
    2f38:	0000137f 	andeq	r1, r0, pc, ror r3
    2f3c:	0dbc0305 	ldceq	3, cr0, [ip, #20]!
    2f40:	151a0800 	ldrne	r0, [sl, #-2048]	; 0xfffff800
    2f44:	1400000f 	strne	r0, [r0], #-15
    2f48:	e101bf01 	tst	r1, r1, lsl #30
    2f4c:	08000013 	stmdaeq	r0, {r0, r1, r4}
    2f50:	00000f4a 	andeq	r0, r0, sl, asr #30
    2f54:	5901bf01 	stmdbpl	r1, {r0, r8, r9, sl, fp, ip, sp, pc}
    2f58:	02000000 	andeq	r0, r0, #0
    2f5c:	a3080023 	movwge	r0, #32803	; 0x8023
    2f60:	0100000e 	tsteq	r0, lr
    2f64:	005901bf 	ldrheq	r0, [r9], #-31	; 0xffffffe1
    2f68:	23020000 	movwcs	r0, #8192	; 0x2000
    2f6c:	0d660801 	stcleq	8, cr0, [r6, #-4]!
    2f70:	bf010000 	svclt	0x00010000
    2f74:	0013e601 	andseq	lr, r3, r1, lsl #12
    2f78:	02230200 	eoreq	r0, r3, #0, 4
    2f7c:	13a60400 			; <UNDEFINED> instruction: 0x13a60400
    2f80:	760e0000 	strvc	r0, [lr], -r0
    2f84:	f6000000 			; <UNDEFINED> instruction: 0xf6000000
    2f88:	0f000013 	svceq	0x00000013
    2f8c:	00000025 	andeq	r0, r0, r5, lsr #32
    2f90:	15260008 	strne	r0, [r6, #-8]!
    2f94:	0100000f 	tsteq	r0, pc
    2f98:	13e101bf 	mvnne	r0, #-1073741777	; 0xc000002f
    2f9c:	03050000 	movweq	r0, #20480	; 0x5000
    2fa0:	08000dd2 	stmdaeq	r0, {r1, r4, r6, r7, r8, sl, fp}
    2fa4:	000daf1a 	andeq	sl, sp, sl, lsl pc
    2fa8:	c0010400 	andgt	r0, r1, r0, lsl #8
    2fac:	00144301 	andseq	r4, r4, r1, lsl #6
    2fb0:	0f4a0800 	svceq	0x004a0800
    2fb4:	c0010000 	andgt	r0, r1, r0
    2fb8:	00005901 	andeq	r5, r0, r1, lsl #18
    2fbc:	00230200 	eoreq	r0, r3, r0, lsl #4
    2fc0:	000ea308 	andeq	sl, lr, r8, lsl #6
    2fc4:	01c00100 	biceq	r0, r0, r0, lsl #2
    2fc8:	00000059 	andeq	r0, r0, r9, asr r0
    2fcc:	08012302 	stmdaeq	r1, {r1, r8, r9, sp}
    2fd0:	00000d66 	andeq	r0, r0, r6, ror #26
    2fd4:	2201c001 	andcs	ip, r1, #1
    2fd8:	02000013 	andeq	r0, r0, #19
    2fdc:	04000223 	streq	r0, [r0], #-547	; 0xfffffddd
    2fe0:	00001408 	andeq	r1, r0, r8, lsl #8
    2fe4:	000daf26 	andeq	sl, sp, r6, lsr #30
    2fe8:	01c00100 	biceq	r0, r0, r0, lsl #2
    2fec:	00001443 	andeq	r1, r0, r3, asr #8
    2ff0:	0de60305 	stcleq	3, cr0, [r6, #20]!
    2ff4:	f1270800 			; <UNDEFINED> instruction: 0xf1270800
    2ff8:	01000004 	tsteq	r0, r4
    2ffc:	006512f8 	strdeq	r1, [r5], #-40	; 0xffffffd8	; <UNPREDICTABLE>
    3000:	05010000 	streq	r0, [r1, #-0]
    3004:	00001803 	andeq	r1, r0, r3, lsl #16
    3008:	f0012820 			; <UNDEFINED> instruction: 0xf0012820
    300c:	01000000 	mrseq	r0, (UNDEF: 0)
    3010:	08060126 	stmdaeq	r6, {r1, r2, r5, r8}
    3014:	2808000b 	stmdacs	r8, {r0, r1, r3}
    3018:	0208000b 	andeq	r0, r8, #11
    301c:	2901007d 	stmdbcs	r1, {r0, r2, r3, r4, r5, r6}
    3020:	0006b101 	andeq	fp, r6, r1, lsl #2
    3024:	01190100 	tsteq	r9, r0, lsl #2
    3028:	000abc06 	andeq	fp, sl, r6, lsl #24
    302c:	000b0808 	andeq	r0, fp, r8, lsl #16
    3030:	000e6e08 	andeq	r6, lr, r8, lsl #28
    3034:	14e70100 	strbtne	r0, [r7], #256	; 0x100
    3038:	6b2a0000 	blvs	a83040 <_Min_Stack_Size+0xa82c40>
    303c:	f2000017 	vqadd.s8	d0, d0, d7
    3040:	0108000a 	tsteq	r8, sl
    3044:	00000140 	andeq	r0, r0, r0, asr #2
    3048:	03012201 	movweq	r2, #4609	; 0x1201
    304c:	000014c2 	andeq	r1, r0, r2, asr #9
    3050:	00177a2b 	andseq	r7, r7, fp, lsr #20
    3054:	000e9000 	andeq	r9, lr, r0
    3058:	000e8e00 	andeq	r8, lr, r0, lsl #28
    305c:	ca2c0000 	bgt	b03064 <_Min_Stack_Size+0xb02c64>
    3060:	8808000a 	stmdahi	r8, {r1, r3}
    3064:	2d000017 	stccs	0, cr0, [r0, #-92]	; 0xffffffa4
    3068:	09025001 	stmdbeq	r2, {r0, ip, lr}
    306c:	51012d81 	smlabbpl	r1, r1, sp, r2
    3070:	012d3101 			; <UNDEFINED> instruction: 0x012d3101
    3074:	40080252 	andmi	r0, r8, r2, asr r2
    3078:	0553012d 	ldrbeq	r0, [r3, #-301]	; 0xfffffed3
    307c:	000a0903 	andeq	r0, sl, r3, lsl #18
    3080:	28000008 	stmdacs	r0, {r3}
    3084:	000d1101 	andeq	r1, sp, r1, lsl #2
    3088:	01120100 	tsteq	r2, r0, lsl #2
    308c:	000aa006 	andeq	sl, sl, r6
    3090:	000abc08 	andeq	fp, sl, r8, lsl #24
    3094:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    3098:	7b012e01 	blvc	4e8a4 <_Min_Stack_Size+0x4e4a4>
    309c:	0100000a 	tsteq	r0, sl
    30a0:	080106f9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r9, sl}
    30a4:	a008000a 	andge	r0, r8, sl
    30a8:	a408000a 	strge	r0, [r8], #-10
    30ac:	0100000e 	tsteq	r0, lr
    30b0:	000015e6 	andeq	r1, r0, r6, ror #11
    30b4:	0008c92f 	andeq	ip, r8, pc, lsr #18
    30b8:	1cf90100 	ldfnee	f0, [r9]
    30bc:	00000059 	andeq	r0, r0, r9, asr r0
    30c0:	00000eee 	andeq	r0, r0, lr, ror #29
    30c4:	00000eea 	andeq	r0, r0, sl, ror #29
    30c8:	66756230 			; <UNDEFINED> instruction: 0x66756230
    30cc:	0bfa0100 	bleq	ffe834d4 <BootRAM+0xedf3c75>
    30d0:	000015e6 	andeq	r1, r0, r6, ror #11
    30d4:	7ee09103 	urdvcs	f1, f3
    30d8:	746e6331 	strbtvc	r6, [lr], #-817	; 0xfffffccf
    30dc:	01010100 	mrseq	r0, (UNDEF: 17)
    30e0:	00003312 	andeq	r3, r0, r2, lsl r3
    30e4:	1a030500 	bne	c44ec <_Min_Stack_Size+0xc40ec>
    30e8:	32200000 	eorcc	r0, r0, #0
    30ec:	00000108 	andeq	r0, r0, r8, lsl #2
    30f0:	00001588 	andeq	r1, r0, r8, lsl #11
    30f4:	01006933 	tsteq	r0, r3, lsr r9
    30f8:	590f0102 	stmdbpl	pc, {r1, r8}	; <UNPREDICTABLE>
    30fc:	13000000 	movwne	r0, #0
    3100:	0f00000f 	svceq	0x0000000f
    3104:	2c00000f 	stccs	0, cr0, [r0], {15}
    3108:	08000a6e 	stmdaeq	r0, {r1, r2, r3, r5, r6, r9, fp}
    310c:	000015f6 	strdeq	r1, [r0], -r6
    3110:	0e50012d 	rdfeqsp	f0, f0, #5.0
    3114:	00750078 	rsbseq	r0, r5, r8, ror r0
    3118:	7925f71e 	stmdbvc	r5!, {r1, r2, r3, r4, r8, r9, sl, ip, sp, lr, pc}
    311c:	1b25f700 	blne	980d24 <_Min_Stack_Size+0x980924>
    3120:	000000f7 	strdeq	r0, [r0], -r7
    3124:	00172634 	andseq	r2, r7, r4, lsr r6
    3128:	000a4200 	andeq	r4, sl, r0, lsl #4
    312c:	01280008 			; <UNDEFINED> instruction: 0x01280008
    3130:	0e010000 	cdpeq	0, 0, cr0, cr1, cr0, {0}
    3134:	342b0301 	strtcc	r0, [fp], #-769	; 0xfffffcff
    3138:	35000017 	strcc	r0, [r0, #-23]	; 0xffffffe9
    313c:	3300000f 	movwcc	r0, #15
    3140:	2b00000f 	blcs	3184 <_Min_Stack_Size+0x2d84>
    3144:	0000174c 	andeq	r1, r0, ip, asr #14
    3148:	00000f4b 	andeq	r0, r0, fp, asr #30
    314c:	00000f49 	andeq	r0, r0, r9, asr #30
    3150:	0017402b 	andseq	r4, r7, fp, lsr #32
    3154:	000f6700 	andeq	r6, pc, r0, lsl #14
    3158:	000f6500 	andeq	r6, pc, r0, lsl #10
    315c:	01283500 			; <UNDEFINED> instruction: 0x01283500
    3160:	58360000 	ldmdapl	r6!, {}	; <UNPREDICTABLE>
    3164:	7c000017 	stcvc	0, cr0, [r0], {23}
    3168:	7a00000f 	bvc	31ac <_Min_Stack_Size+0x2dac>
    316c:	2c00000f 	stccs	0, cr0, [r0], {15}
    3170:	08000a56 	stmdaeq	r0, {r1, r2, r4, r6, r9, fp}
    3174:	00001796 	muleq	r0, r6, r7
    3178:	0251012d 	subseq	r0, r1, #1073741835	; 0x4000000b
    317c:	0000007d 	andeq	r0, r0, sp, ror r0
    3180:	330e0000 	movwcc	r0, #57344	; 0xe000
    3184:	f6000000 			; <UNDEFINED> instruction: 0xf6000000
    3188:	0f000015 	svceq	0x00000015
    318c:	00000025 	andeq	r0, r0, r5, lsr #32
    3190:	0137003f 	teqeq	r7, pc, lsr r0
    3194:	00000d36 	andeq	r0, r0, r6, lsr sp
    3198:	0109ed01 	tsteq	r9, r1, lsl #26
    319c:	00000033 	andeq	r0, r0, r3, lsr r0
    31a0:	080009e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, fp}
    31a4:	08000a08 	stmdaeq	r0, {r3, r9, fp}
    31a8:	00000f98 	muleq	r0, r8, pc	; <UNPREDICTABLE>
    31ac:	00165801 	andseq	r5, r6, r1, lsl #16
    31b0:	00783800 	rsbseq	r3, r8, r0, lsl #16
    31b4:	5916ed01 	ldmdbpl	r6, {r0, r8, sl, fp, sp, lr, pc}
    31b8:	d5000000 	strle	r0, [r0, #-0]
    31bc:	d100000f 	tstle	r0, pc
    31c0:	3000000f 	andcc	r0, r0, pc
    31c4:	00727261 	rsbseq	r7, r2, r1, ror #4
    31c8:	6811ee01 	ldmdavs	r1, {r0, r9, sl, fp, sp, lr, pc}
    31cc:	03000016 	movweq	r0, #22
    31d0:	2c7bf891 	ldclcs	8, cr15, [fp], #-580	; 0xfffffdbc
    31d4:	080009f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, fp}
    31d8:	000017a4 	andeq	r1, r0, r4, lsr #15
    31dc:	0250012d 	subseq	r0, r0, #1073741835	; 0x4000000b
    31e0:	012d007d 			; <UNDEFINED> instruction: 0x012d007d
    31e4:	ea030551 	b	c4730 <_Min_Stack_Size+0xc4330>
    31e8:	2d08000d 	stccs	0, cr0, [r8, #-52]	; 0xffffffcc
    31ec:	0a035201 	beq	d79f8 <_Min_Stack_Size+0xd75f8>
    31f0:	00000200 	andeq	r0, r0, r0, lsl #4
    31f4:	00003f0e 	andeq	r3, r0, lr, lsl #30
    31f8:	00166800 	andseq	r6, r6, r0, lsl #16
    31fc:	00250f00 	eoreq	r0, r5, r0, lsl #30
    3200:	00ff0000 	rscseq	r0, pc, r0
    3204:	00165804 	andseq	r5, r6, r4, lsl #16
    3208:	91013900 	tstls	r1, r0, lsl #18
    320c:	01000007 	tsteq	r0, r7
    3210:	cb0106e8 	blgt	44db8 <_Min_Stack_Size+0x449b8>
    3214:	e000000e 	and	r0, r0, lr
    3218:	e4080009 	str	r0, [r8], #-9
    321c:	02080009 	andeq	r0, r8, #9
    3220:	bc01007d 	stclt	0, cr0, [r1], {125}	; 0x7d
    3224:	38000016 	stmdacc	r0, {r1, r2, r4}
    3228:	00716572 	rsbseq	r6, r1, r2, ror r5
    322c:	bc26e801 	stclt	8, cr14, [r6], #-4
    3230:	fa000016 	blx	3290 <_Min_Stack_Size+0x2e90>
    3234:	f600000f 			; <UNDEFINED> instruction: 0xf600000f
    3238:	3a00000f 	bcc	327c <_Min_Stack_Size+0x2e7c>
    323c:	00000d7a 	andeq	r0, r0, sl, ror sp
    3240:	c232e801 	eorsgt	lr, r2, #65536	; 0x10000
    3244:	01000016 	tsteq	r0, r6, lsl r0
    3248:	07c63a51 			; <UNDEFINED> instruction: 0x07c63a51
    324c:	e8010000 	stmda	r1, {}	; <UNPREDICTABLE>
    3250:	0016c842 	andseq	ip, r6, r2, asr #16
    3254:	00520100 	subseq	r0, r2, r0, lsl #2
    3258:	010e041b 	tsteq	lr, fp, lsl r4
    325c:	041b0000 	ldreq	r0, [fp], #-0
    3260:	00000982 	andeq	r0, r0, r2, lsl #19
    3264:	0076041b 	rsbseq	r0, r6, fp, lsl r4
    3268:	013b0000 	teqeq	fp, r0
    326c:	000005a1 	andeq	r0, r0, r1, lsr #11
    3270:	0106c201 	tsteq	r6, r1, lsl #4
    3274:	08000964 	stmdaeq	r0, {r2, r5, r6, r8, fp}
    3278:	080009e0 	stmdaeq	r0, {r5, r6, r7, r8, fp}
    327c:	01007d02 	tsteq	r0, r2, lsl #26
    3280:	00001719 	andeq	r1, r0, r9, lsl r7
    3284:	0005b32f 	andeq	fp, r5, pc, lsr #6
    3288:	27c20100 	strbcs	r0, [r2, r0, lsl #2]
    328c:	00000076 	andeq	r0, r0, r6, ror r0
    3290:	00001023 	andeq	r1, r0, r3, lsr #32
    3294:	0000101b 	andeq	r1, r0, fp, lsl r0
    3298:	000d7a3a 	andeq	r7, sp, sl, lsr sl
    329c:	3bc20100 	blcc	ff0836a4 <BootRAM+0xdff3e45>
    32a0:	00001719 	andeq	r1, r0, r9, lsl r7
    32a4:	c63a5101 	ldrtgt	r5, [sl], -r1, lsl #2
    32a8:	01000007 	tsteq	r0, r7
    32ac:	16c84bc2 	strbne	r4, [r8], r2, asr #23
    32b0:	52010000 	andpl	r0, r1, #0
    32b4:	1f041b00 	svcne	0x00041b00
    32b8:	1b000017 	blne	331c <_Min_Stack_Size+0x2f1c>
    32bc:	00172504 	andseq	r2, r7, r4, lsl #10
    32c0:	993d3c00 	ldmdbls	sp!, {sl, fp, ip, sp}
    32c4:	0200000a 	andeq	r0, r0, #10
    32c8:	030114ae 	movweq	r1, #5294	; 0x14ae
    32cc:	00001765 	andeq	r1, r0, r5, ror #14
    32d0:	0008c93e 	andeq	ip, r8, lr, lsr r9
    32d4:	30ae0200 	adccc	r0, lr, r0, lsl #4
    32d8:	00000059 	andeq	r0, r0, r9, asr r0
    32dc:	6675623f 			; <UNDEFINED> instruction: 0x6675623f
    32e0:	46ae0200 	strtmi	r0, [lr], r0, lsl #4
    32e4:	00001765 	andeq	r1, r0, r5, ror #14
    32e8:	0007c63e 	andeq	ip, r7, lr, lsr r6
    32ec:	54ae0200 	strtpl	r0, [lr], #512	; 0x200
    32f0:	00000076 	andeq	r0, r0, r6, ror r0
    32f4:	78646940 	stmdavc	r4!, {r6, r8, fp, sp, lr}^
    32f8:	0baf0200 	bleq	febc3b00 <BootRAM+0xdb342a1>
    32fc:	00000059 	andeq	r0, r0, r9, asr r0
    3300:	6a041b00 	bvs	109f08 <_Min_Stack_Size+0x109b08>
    3304:	41000000 	mrsmi	r0, (UNDEF: 0)
    3308:	00000564 	andeq	r0, r0, r4, ror #10
    330c:	1605de03 	strne	sp, [r5], -r3, lsl #28
    3310:	17880301 	strne	r0, [r8, r1, lsl #6]
    3314:	d2420000 	suble	r0, r2, #0
    3318:	03000006 	movweq	r0, #6
    331c:	912f05de 	ldrdls	r0, [pc, -lr]!
    3320:	00000002 	andeq	r0, r0, r2
    3324:	5d010143 	stfpls	f0, [r1, #-268]	; 0xfffffef4
    3328:	5d000009 	stcpl	0, cr0, [r0, #-36]	; 0xffffffdc
    332c:	02000009 	andeq	r0, r0, #9
    3330:	01430626 	cmpeq	r3, r6, lsr #12
    3334:	00053901 	andeq	r3, r5, r1, lsl #18
    3338:	00053900 	andeq	r3, r5, r0, lsl #18
    333c:	06aa0200 	strteq	r0, [sl], r0, lsl #4
    3340:	06010144 	streq	r0, [r1], -r4, asr #2
    3344:	fc00000b 	stc2	0, cr0, [r0], {11}
    3348:	0b00000a 	bleq	3378 <_Min_Stack_Size+0x2f78>
    334c:	01160000 	tsteq	r6, r0
    3350:	00040000 	andeq	r0, r4, r0
    3354:	00000b0d 	andeq	r0, r0, sp, lsl #22
    3358:	10340104 	eorsne	r0, r4, r4, lsl #2
    335c:	e60c0000 	str	r0, [ip], -r0
    3360:	c2000010 	andgt	r0, r0, #16
    3364:	2800000f 	stmdacs	r0, {r0, r1, r2, r3}
    3368:	4808000b 	stmdami	r8, {r0, r1, r3}
    336c:	de000000 	cdple	0, 0, cr0, cr0, cr0, {0}
    3370:	0200000e 	andeq	r0, r0, #14
    3374:	027c0601 	rsbseq	r0, ip, #1048576	; 0x100000
    3378:	01020000 	mrseq	r0, (UNDEF: 2)
    337c:	00027a08 	andeq	r7, r2, r8, lsl #20
    3380:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    3384:	00000295 	muleq	r0, r5, r2
    3388:	7e070202 	cdpvc	2, 0, cr0, cr7, cr2, {0}
    338c:	02000001 	andeq	r0, r0, #1
    3390:	00820504 	addeq	r0, r2, r4, lsl #10
    3394:	04020000 	streq	r0, [r2], #-0
    3398:	00004d07 	andeq	r4, r0, r7, lsl #26
    339c:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    33a0:	0000007d 	andeq	r0, r0, sp, ror r0
    33a4:	48070802 	stmdami	r7, {r1, fp}
    33a8:	03000000 	movweq	r0, #0
    33ac:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    33b0:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    33b4:	00005207 	andeq	r5, r0, r7, lsl #4
    33b8:	0fa90400 	svceq	0x00a90400
    33bc:	d8020000 	stmdale	r2, {}	; <UNPREDICTABLE>
    33c0:	00006417 	andeq	r6, r0, r7, lsl r4
    33c4:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
    33c8:	00000d2a 	andeq	r0, r0, sl, lsr #26
    33cc:	83080102 	movwhi	r0, #33026	; 0x8102
    33d0:	05000002 	streq	r0, [r0, #-2]
    33d4:	00000090 	muleq	r0, r0, r0
    33d8:	00000090 	muleq	r0, r0, r0
    33dc:	04070006 	streq	r0, [r7], #-6
    33e0:	00000096 	muleq	r0, r6, r0
    33e4:	101e0908 	andsne	r0, lr, r8, lsl #18
    33e8:	13010000 	movwne	r0, #4096	; 0x1000
    33ec:	0000850f 	andeq	r8, r0, pc, lsl #10
    33f0:	10c10900 	sbcne	r0, r1, r0, lsl #18
    33f4:	14010000 	strne	r0, [r1], #-0
    33f8:	0000850f 	andeq	r8, r0, pc, lsl #10
    33fc:	0f960900 	svceq	0x00960900
    3400:	15010000 	strne	r0, [r1, #-0]
    3404:	0000850f 	andeq	r8, r0, pc, lsl #10
    3408:	10d50900 	sbcsne	r0, r5, r0, lsl #18
    340c:	16010000 	strne	r0, [r1], -r0
    3410:	0000850f 	andeq	r8, r0, pc, lsl #10
    3414:	0fb00a00 	svceq	0x00b00a00
    3418:	1e010000 	cdpne	0, 0, cr0, cr1, cr0, {0}
    341c:	000b2801 	andeq	r2, fp, r1, lsl #16
    3420:	00004808 	andeq	r4, r0, r8, lsl #16
    3424:	0d9c0100 	ldfeqs	f0, [ip]
    3428:	0b000001 	bleq	3434 <_Min_Stack_Size+0x3034>
    342c:	000004f1 	strdeq	r0, [r0], -r1
    3430:	6b0a2001 	blvs	28b43c <_Min_Stack_Size+0x28b03c>
    3434:	65000000 	strvs	r0, [r0, #-0]
    3438:	5d000010 	stcpl	0, cr0, [r0, #-64]	; 0xffffffc0
    343c:	0c000010 	stceq	0, cr0, [r0], {16}
    3440:	21010069 	tstcs	r1, r9, rrx
    3444:	00006b0a 	andeq	r6, r0, sl, lsl #22
    3448:	0010b100 	andseq	fp, r0, r0, lsl #2
    344c:	0010a100 	andseq	sl, r0, r0, lsl #2
    3450:	0b4a0d00 	bleq	1286858 <_Min_Stack_Size+0x1286458>
    3454:	010d0800 	tsteq	sp, r0, lsl #16
    3458:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    345c:	0000084d 	andeq	r0, r0, sp, asr #16
    3460:	0000084d 	andeq	r0, r0, sp, asr #16
    3464:	000d1901 	andeq	r1, sp, r1, lsl #18
    3468:	00000022 	andeq	r0, r0, r2, lsr #32
    346c:	0bd90002 	bleq	ff64347c <BootRAM+0xe5b3c1d>
    3470:	01040000 	mrseq	r0, (UNDEF: 4)
    3474:	00000ff2 	strdeq	r0, [r0], -r2
    3478:	08000b70 	stmdaeq	r0, {r4, r5, r6, r8, r9, fp}
    347c:	08000c5c 	stmdaeq	r0, {r2, r3, r4, r6, sl, fp}
    3480:	00001116 	andeq	r1, r0, r6, lsl r1
    3484:	00001159 	andeq	r1, r0, r9, asr r1
    3488:	000011bc 			; <UNDEFINED> instruction: 0x000011bc
    348c:	Address 0x000000000000348c is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
   c:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
  10:	00061001 	andeq	r1, r6, r1
  14:	00240200 	eoreq	r0, r4, r0, lsl #4
  18:	0b3e0b0b 	bleq	f82c4c <_Min_Stack_Size+0xf8284c>
  1c:	00000e03 	andeq	r0, r0, r3, lsl #28
  20:	03001603 	movweq	r1, #1539	; 0x603
  24:	3b0b3a0e 	blcc	2ce864 <_Min_Stack_Size+0x2ce464>
  28:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
  2c:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
  30:	13490035 	movtne	r0, #36917	; 0x9035
  34:	24050000 	strcs	r0, [r5], #-0
  38:	3e0b0b00 	vmlacc.f64	d0, d11, d0
  3c:	0008030b 	andeq	r0, r8, fp, lsl #6
  40:	00340600 	eorseq	r0, r4, r0, lsl #12
  44:	0b3a0e03 	bleq	e83858 <_Min_Stack_Size+0xe83458>
  48:	0b39053b 	bleq	e4153c <_Min_Stack_Size+0xe4113c>
  4c:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; ffffff30 <BootRAM+0xef706d1>
  50:	00000c3c 	andeq	r0, r0, ip, lsr ip
  54:	03003407 	movweq	r3, #1031	; 0x407
  58:	3b0b3a0e 	blcc	2ce898 <_Min_Stack_Size+0x2ce498>
  5c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
  60:	3c0c3f13 	stccc	15, cr3, [ip], {19}
  64:	0800000c 	stmdaeq	r0, {r2, r3}
  68:	0b0b0113 	bleq	2c04bc <_Min_Stack_Size+0x2c00bc>
  6c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
  70:	13010b39 	movwne	r0, #6969	; 0x1b39
  74:	0d090000 	stceq	0, cr0, [r9, #-0]
  78:	3a080300 	bcc	200c80 <_Min_Stack_Size+0x200880>
  7c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
  80:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
  84:	0a00000a 	beq	b4 <_Min_Heap_Size+0xb4>
  88:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
  8c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
  90:	13490b39 	movtne	r0, #39737	; 0x9b39
  94:	00000a38 	andeq	r0, r0, r8, lsr sl
  98:	4901010b 	stmdbmi	r1, {r0, r1, r3, r8}
  9c:	00130113 	andseq	r0, r3, r3, lsl r1
  a0:	00210c00 	eoreq	r0, r1, r0, lsl #24
  a4:	0b2f1349 	bleq	bc4dd0 <_Min_Stack_Size+0xbc49d0>
  a8:	160d0000 	strne	r0, [sp], -r0
  ac:	3a0e0300 	bcc	380cb4 <_Min_Stack_Size+0x3808b4>
  b0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
  b4:	0013490b 	andseq	r4, r3, fp, lsl #18
  b8:	012e0e00 			; <UNDEFINED> instruction: 0x012e0e00
  bc:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
  c0:	0b3b0b3a 	bleq	ec2db0 <_Min_Stack_Size+0xec29b0>
  c4:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
  c8:	01111349 	tsteq	r1, r9, asr #6
  cc:	06400112 			; <UNDEFINED> instruction: 0x06400112
  d0:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
  d4:	0f000013 	svceq	0x00000013
  d8:	0111010b 	tsteq	r1, fp, lsl #2
  dc:	13010112 	movwne	r0, #4370	; 0x1112
  e0:	34100000 	ldrcc	r0, [r0], #-0
  e4:	3a0e0300 	bcc	380cec <_Min_Stack_Size+0x3808ec>
  e8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  ec:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
  f0:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
  f4:	1d110000 	ldcne	0, cr0, [r1, #-0]
  f8:	52133100 	andspl	r3, r3, #0, 2
  fc:	0b42b801 	bleq	10ae108 <_Min_Stack_Size+0x10add08>
 100:	01120111 	tsteq	r2, r1, lsl r1
 104:	0b590b58 	bleq	1642e6c <_Min_Stack_Size+0x1642a6c>
 108:	00000b57 	andeq	r0, r0, r7, asr fp
 10c:	01828912 	orreq	r8, r2, r2, lsl r9
 110:	31011101 	tstcc	r1, r1, lsl #2
 114:	00130113 	andseq	r0, r3, r3, lsl r1
 118:	828a1300 	addhi	r1, sl, #0, 6
 11c:	0a020001 	beq	80128 <_Min_Stack_Size+0x7fd28>
 120:	000a4291 	muleq	sl, r1, r2
 124:	82891400 	addhi	r1, r9, #0, 8
 128:	01110001 	tsteq	r1, r1
 12c:	00001331 	andeq	r1, r0, r1, lsr r3
 130:	01828915 	orreq	r8, r2, r5, lsl r9
 134:	31011101 	tstcc	r1, r1, lsl #2
 138:	16000013 			; <UNDEFINED> instruction: 0x16000013
 13c:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 8c <_Min_Heap_Size+0x8c>
 140:	0b3a0e03 	bleq	e83954 <_Min_Stack_Size+0xe83554>
 144:	0b390b3b 	bleq	e42e38 <_Min_Stack_Size+0xe42a38>
 148:	01110c27 	tsteq	r1, r7, lsr #24
 14c:	0a400112 	beq	100059c <_Min_Stack_Size+0x100019c>
 150:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
 154:	17000013 	smladne	r0, r3, r0, r0
 158:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
 15c:	0b3b0b3a 	bleq	ec2e4c <_Min_Stack_Size+0xec2a4c>
 160:	13490b39 	movtne	r0, #39737	; 0x9b39
 164:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
 168:	18000006 	stmdane	r0, {r1, r2}
 16c:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; bc <_Min_Heap_Size+0xbc>
 170:	0b3a0e03 	bleq	e83984 <_Min_Stack_Size+0xe83584>
 174:	0b390b3b 	bleq	e42e68 <_Min_Stack_Size+0xe42a68>
 178:	01110c27 	tsteq	r1, r7, lsr #24
 17c:	0a400112 	beq	10005cc <_Min_Stack_Size+0x10001cc>
 180:	000c4297 	muleq	ip, r7, r2
 184:	002e1900 	eoreq	r1, lr, r0, lsl #18
 188:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
 18c:	0b3b0b3a 	bleq	ec2e7c <_Min_Stack_Size+0xec2a7c>
 190:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
 194:	2e1a0000 	cdpcs	0, 1, cr0, cr10, cr0, {0}
 198:	030c3f01 	movweq	r3, #52993	; 0xcf01
 19c:	3b0b3a0e 	blcc	2ce9dc <_Min_Stack_Size+0x2ce5dc>
 1a0:	110b390b 	tstne	fp, fp, lsl #18
 1a4:	40011201 	andmi	r1, r1, r1, lsl #4
 1a8:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
 1ac:	00001301 	andeq	r1, r0, r1, lsl #6
 1b0:	0300341b 	movweq	r3, #1051	; 0x41b
 1b4:	3b0b3a08 	blcc	2ce9dc <_Min_Stack_Size+0x2ce5dc>
 1b8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 1bc:	b7060213 	smladlt	r6, r3, r2, r0
 1c0:	00000642 	andeq	r0, r0, r2, asr #12
 1c4:	3f012e1c 	svccc	0x00012e1c
 1c8:	3a0e030c 	bcc	380e00 <_Min_Stack_Size+0x380a00>
 1cc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 1d0:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
 1d4:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
 1d8:	970a4001 	strls	r4, [sl, -r1]
 1dc:	13010c42 	movwne	r0, #7234	; 0x1c42
 1e0:	051d0000 	ldreq	r0, [sp, #-0]
 1e4:	3a0e0300 	bcc	380dec <_Min_Stack_Size+0x3809ec>
 1e8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 1ec:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 1f0:	1e00000a 	cdpne	0, 0, cr0, cr0, cr10, {0}
 1f4:	0e03002e 	cdpeq	0, 0, cr0, cr3, cr14, {1}
 1f8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 1fc:	0b200b39 	bleq	802ee8 <_Min_Stack_Size+0x802ae8>
 200:	2e1f0000 	cdpcs	0, 1, cr0, cr15, cr0, {0}
 204:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
 208:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
 20c:	0b3a0e03 	bleq	e83a20 <_Min_Stack_Size+0xe83620>
 210:	0b390b3b 	bleq	e42f04 <_Min_Stack_Size+0xe42b04>
 214:	01000000 	mrseq	r0, (UNDEF: 0)
 218:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
 21c:	0e030b13 	vmoveq.32	d3[0], r0
 220:	01110e1b 	tsteq	r1, fp, lsl lr
 224:	06100112 			; <UNDEFINED> instruction: 0x06100112
 228:	24020000 	strcs	r0, [r2], #-0
 22c:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 230:	000e030b 	andeq	r0, lr, fp, lsl #6
 234:	00160300 	andseq	r0, r6, r0, lsl #6
 238:	0b3a0e03 	bleq	e83a4c <_Min_Stack_Size+0xe8364c>
 23c:	0b390b3b 	bleq	e42f30 <_Min_Stack_Size+0xe42b30>
 240:	00001349 	andeq	r1, r0, r9, asr #6
 244:	49003504 	stmdbmi	r0, {r2, r8, sl, ip, sp}
 248:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
 24c:	13490026 	movtne	r0, #36902	; 0x9026
 250:	24060000 	strcs	r0, [r6], #-0
 254:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 258:	0008030b 	andeq	r0, r8, fp, lsl #6
 25c:	000f0700 	andeq	r0, pc, r0, lsl #14
 260:	13490b0b 	movtne	r0, #39691	; 0x9b0b
 264:	15080000 	strne	r0, [r8, #-0]
 268:	010c2701 	tsteq	ip, r1, lsl #14
 26c:	09000013 	stmdbeq	r0, {r0, r1, r4}
 270:	13490005 	movtne	r0, #36869	; 0x9005
 274:	130a0000 	movwne	r0, #40960	; 0xa000
 278:	3a0b0b01 	bcc	2c2e84 <_Min_Stack_Size+0x2c2a84>
 27c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 280:	0013010b 	andseq	r0, r3, fp, lsl #2
 284:	000d0b00 	andeq	r0, sp, r0, lsl #22
 288:	0b3a0e03 	bleq	e83a9c <_Min_Stack_Size+0xe8369c>
 28c:	0b390b3b 	bleq	e42f80 <_Min_Stack_Size+0xe42b80>
 290:	0a381349 	beq	e04fbc <_Min_Stack_Size+0xe04bbc>
 294:	040c0000 	streq	r0, [ip], #-0
 298:	0b0b3e01 	bleq	2cfaa4 <_Min_Stack_Size+0x2cf6a4>
 29c:	3a13490b 	bcc	4d26d0 <_Min_Stack_Size+0x4d22d0>
 2a0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 2a4:	0013010b 	andseq	r0, r3, fp, lsl #2
 2a8:	00280d00 	eoreq	r0, r8, r0, lsl #26
 2ac:	0d1c0e03 	ldceq	14, cr0, [ip, #-12]
 2b0:	280e0000 	stmdacs	lr, {}	; <UNPREDICTABLE>
 2b4:	1c0e0300 	stcne	3, cr0, [lr], {-0}
 2b8:	0f00000b 	svceq	0x0000000b
 2bc:	050b0113 	streq	r0, [fp, #-275]	; 0xfffffeed
 2c0:	0b3b0b3a 	bleq	ec2fb0 <_Min_Stack_Size+0xec2bb0>
 2c4:	13010b39 	movwne	r0, #6969	; 0x1b39
 2c8:	0d100000 	ldceq	0, cr0, [r0, #-0]
 2cc:	3a080300 	bcc	200ed4 <_Min_Stack_Size+0x200ad4>
 2d0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 2d4:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 2d8:	1100000a 	tstne	r0, sl
 2dc:	13490101 	movtne	r0, #37121	; 0x9101
 2e0:	00001301 	andeq	r1, r0, r1, lsl #6
 2e4:	49002112 	stmdbmi	r0, {r1, r4, r8, sp}
 2e8:	000b2f13 	andeq	r2, fp, r3, lsl pc
 2ec:	00211300 	eoreq	r1, r1, r0, lsl #6
 2f0:	052f1349 	streq	r1, [pc, #-841]!	; ffffffaf <BootRAM+0xef70750>
 2f4:	34140000 	ldrcc	r0, [r4], #-0
 2f8:	3a0e0300 	bcc	380f00 <_Min_Stack_Size+0x380b00>
 2fc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 300:	3f13490b 	svccc	0x0013490b
 304:	000c3c0c 	andeq	r3, ip, ip, lsl #24
 308:	00341500 	eorseq	r1, r4, r0, lsl #10
 30c:	0b3a0e03 	bleq	e83b20 <_Min_Stack_Size+0xe83720>
 310:	0b390b3b 	bleq	e43004 <_Min_Stack_Size+0xe42c04>
 314:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 1f8 <_Min_Heap_Size+0x1f8>
 318:	00000c3c 	andeq	r0, r0, ip, lsr ip
 31c:	0b011316 	bleq	44f7c <_Min_Stack_Size+0x44b7c>
 320:	3b0b3a0b 	blcc	2ceb54 <_Min_Stack_Size+0x2ce754>
 324:	010b3905 	tsteq	fp, r5, lsl #18
 328:	17000013 	smladne	r0, r3, r0, r0
 32c:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 330:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 334:	13490b39 	movtne	r0, #39737	; 0x9b39
 338:	00000a38 	andeq	r0, r0, r8, lsr sl
 33c:	03000d18 	movweq	r0, #3352	; 0xd18
 340:	3b0b3a08 	blcc	2ceb68 <_Min_Stack_Size+0x2ce768>
 344:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 348:	000a3813 	andeq	r3, sl, r3, lsl r8
 34c:	00161900 	andseq	r1, r6, r0, lsl #18
 350:	0b3a0e03 	bleq	e83b64 <_Min_Stack_Size+0xe83764>
 354:	0b39053b 	bleq	e41848 <_Min_Stack_Size+0xe41448>
 358:	00001349 	andeq	r1, r0, r9, asr #6
 35c:	03000d1a 	movweq	r0, #3354	; 0xd1a
 360:	3b0b3a0e 	blcc	2ceba0 <_Min_Stack_Size+0x2ce7a0>
 364:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 368:	0d0b0b13 	vstreq	d0, [fp, #-76]	; 0xffffffb4
 36c:	380b0c0b 	stmdacc	fp, {r0, r1, r3, sl, fp}
 370:	1b00000a 	blne	3a0 <_Min_Heap_Size+0x3a0>
 374:	0b0b0117 	bleq	2c07d8 <_Min_Stack_Size+0x2c03d8>
 378:	0b3b0b3a 	bleq	ec3068 <_Min_Stack_Size+0xec2c68>
 37c:	13010b39 	movwne	r0, #6969	; 0x1b39
 380:	0d1c0000 	ldceq	0, cr0, [ip, #-0]
 384:	3a0e0300 	bcc	380f8c <_Min_Stack_Size+0x380b8c>
 388:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 38c:	0013490b 	andseq	r4, r3, fp, lsl #18
 390:	000d1d00 	andeq	r1, sp, r0, lsl #26
 394:	00001349 	andeq	r1, r0, r9, asr #6
 398:	49000d1e 	stmdbmi	r0, {r1, r2, r3, r4, r8, sl, fp}
 39c:	000a3813 	andeq	r3, sl, r3, lsl r8
 3a0:	00341f00 	eorseq	r1, r4, r0, lsl #30
 3a4:	0b3a0e03 	bleq	e83bb8 <_Min_Stack_Size+0xe837b8>
 3a8:	0b390b3b 	bleq	e4309c <_Min_Stack_Size+0xe42c9c>
 3ac:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 290 <_Min_Heap_Size+0x290>
 3b0:	00000a02 	andeq	r0, r0, r2, lsl #20
 3b4:	03003420 	movweq	r3, #1056	; 0x420
 3b8:	3b0b3a0e 	blcc	2cebf8 <_Min_Stack_Size+0x2ce7f8>
 3bc:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 3c0:	000a0213 	andeq	r0, sl, r3, lsl r2
 3c4:	000d2100 	andeq	r2, sp, r0, lsl #2
 3c8:	0b3a0e03 	bleq	e83bdc <_Min_Stack_Size+0xe837dc>
 3cc:	0b39053b 	bleq	e418c0 <_Min_Stack_Size+0xe414c0>
 3d0:	0b0b1349 	bleq	2c50fc <_Min_Stack_Size+0x2c4cfc>
 3d4:	0b0c0b0d 	bleq	303010 <_Min_Stack_Size+0x302c10>
 3d8:	00000a38 	andeq	r0, r0, r8, lsr sl
 3dc:	0b011722 	bleq	4606c <_Min_Stack_Size+0x45c6c>
 3e0:	3b0b3a0b 	blcc	2cec14 <_Min_Stack_Size+0x2ce814>
 3e4:	010b3905 	tsteq	fp, r5, lsl #18
 3e8:	23000013 	movwcs	r0, #19
 3ec:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 3f0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 3f4:	13490b39 	movtne	r0, #39737	; 0x9b39
 3f8:	2e240000 	cdpcs	0, 2, cr0, cr4, cr0, {0}
 3fc:	030c3f01 	movweq	r3, #52993	; 0xcf01
 400:	3b0b3a0e 	blcc	2cec40 <_Min_Stack_Size+0x2ce840>
 404:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
 408:	1113490c 	tstne	r3, ip, lsl #18
 40c:	40011201 	andmi	r1, r1, r1, lsl #4
 410:	0c429706 	mcrreq	7, 0, r9, r2, cr6
 414:	00001301 	andeq	r1, r0, r1, lsl #6
 418:	03000525 	movweq	r0, #1317	; 0x525
 41c:	3b0b3a08 	blcc	2cec44 <_Min_Stack_Size+0x2ce844>
 420:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 424:	b7060213 	smladlt	r6, r3, r2, r0
 428:	00000642 	andeq	r0, r0, r2, asr #12
 42c:	03003426 	movweq	r3, #1062	; 0x426
 430:	3b0b3a0e 	blcc	2cec70 <_Min_Stack_Size+0x2ce870>
 434:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 438:	b7060213 	smladlt	r6, r3, r2, r0
 43c:	00000642 	andeq	r0, r0, r2, asr #12
 440:	03003427 	movweq	r3, #1063	; 0x427
 444:	3b0b3a08 	blcc	2cec6c <_Min_Stack_Size+0x2ce86c>
 448:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 44c:	b7060213 	smladlt	r6, r3, r2, r0
 450:	00000642 	andeq	r0, r0, r2, asr #12
 454:	55010b28 	strpl	r0, [r1, #-2856]	; 0xfffff4d8
 458:	29000006 	stmdbcs	r0, {r1, r2}
 45c:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 3ac <_Min_Heap_Size+0x3ac>
 460:	0b3a0e03 	bleq	e83c74 <_Min_Stack_Size+0xe83874>
 464:	0b39053b 	bleq	e41958 <_Min_Stack_Size+0xe41558>
 468:	01110c27 	tsteq	r1, r7, lsr #24
 46c:	06400112 			; <UNDEFINED> instruction: 0x06400112
 470:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
 474:	2a000013 	bcs	4c8 <_Min_Stack_Size+0xc8>
 478:	08030005 	stmdaeq	r3, {r0, r2}
 47c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 480:	13490b39 	movtne	r0, #39737	; 0x9b39
 484:	00000a02 	andeq	r0, r0, r2, lsl #20
 488:	0300052b 	movweq	r0, #1323	; 0x52b
 48c:	3b0b3a0e 	blcc	2ceccc <_Min_Stack_Size+0x2ce8cc>
 490:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 494:	000a0213 	andeq	r0, sl, r3, lsl r2
 498:	012e2c00 			; <UNDEFINED> instruction: 0x012e2c00
 49c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
 4a0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 4a4:	01110b39 	tsteq	r1, r9, lsr fp
 4a8:	06400112 			; <UNDEFINED> instruction: 0x06400112
 4ac:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
 4b0:	2d000013 	stccs	0, cr0, [r0, #-76]	; 0xffffffb4
 4b4:	0655010b 	ldrbeq	r0, [r5], -fp, lsl #2
 4b8:	00001301 	andeq	r1, r0, r1, lsl #6
 4bc:	11010b2e 	tstne	r1, lr, lsr #22
 4c0:	01011201 	tsteq	r1, r1, lsl #4
 4c4:	2f000013 	svccs	0x00000013
 4c8:	01018289 	smlabbeq	r1, r9, r2, r8
 4cc:	13010111 	movwne	r0, #4369	; 0x1111
 4d0:	8a300000 	bhi	c004d8 <_Min_Stack_Size+0xc000d8>
 4d4:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
 4d8:	0a42910a 	beq	10a4908 <_Min_Stack_Size+0x10a4508>
 4dc:	89310000 	ldmdbhi	r1!, {}	; <UNPREDICTABLE>
 4e0:	11010182 	smlabbne	r1, r2, r1, r0
 4e4:	32000001 	andcc	r0, r0, #1
 4e8:	00018289 	andeq	r8, r1, r9, lsl #5
 4ec:	13310111 	teqne	r1, #1073741828	; 0x40000004
 4f0:	89330000 	ldmdbhi	r3!, {}	; <UNPREDICTABLE>
 4f4:	11010182 	smlabbne	r1, r2, r1, r0
 4f8:	01133101 	tsteq	r3, r1, lsl #2
 4fc:	34000013 	strcc	r0, [r0], #-19	; 0xffffffed
 500:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 450 <_Min_Stack_Size+0x50>
 504:	0b3a0e03 	bleq	e83d18 <_Min_Stack_Size+0xe83918>
 508:	0b390b3b 	bleq	e431fc <_Min_Stack_Size+0xe42dfc>
 50c:	01110c27 	tsteq	r1, r7, lsr #24
 510:	06400112 			; <UNDEFINED> instruction: 0x06400112
 514:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
 518:	35000013 	strcc	r0, [r0, #-19]	; 0xffffffed
 51c:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
 520:	0b3b0b3a 	bleq	ec3210 <_Min_Stack_Size+0xec2e10>
 524:	13490b39 	movtne	r0, #39737	; 0x9b39
 528:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
 52c:	36000006 	strcc	r0, [r0], -r6
 530:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
 534:	0b3b0b3a 	bleq	ec3224 <_Min_Stack_Size+0xec2e24>
 538:	13490b39 	movtne	r0, #39737	; 0x9b39
 53c:	00000a02 	andeq	r0, r0, r2, lsl #20
 540:	03003437 	movweq	r3, #1079	; 0x437
 544:	3b0b3a0e 	blcc	2ced84 <_Min_Stack_Size+0x2ce984>
 548:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 54c:	b7060213 	smladlt	r6, r3, r2, r0
 550:	00000642 	andeq	r0, r0, r2, asr #12
 554:	03003438 	movweq	r3, #1080	; 0x438
 558:	3b0b3a08 	blcc	2ced80 <_Min_Stack_Size+0x2ce980>
 55c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 560:	b7060213 	smladlt	r6, r3, r2, r0
 564:	00000642 	andeq	r0, r0, r2, asr #12
 568:	03012e39 	movweq	r2, #7737	; 0x1e39
 56c:	3b0b3a0e 	blcc	2cedac <_Min_Stack_Size+0x2ce9ac>
 570:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 574:	1201110c 	andne	r1, r1, #12, 2
 578:	97064001 	strls	r4, [r6, -r1]
 57c:	13010c42 	movwne	r0, #7234	; 0x1c42
 580:	893a0000 	ldmdbhi	sl!, {}	; <UNPREDICTABLE>
 584:	11010182 	smlabbne	r1, r2, r1, r0
 588:	00133101 	andseq	r3, r3, r1, lsl #2
 58c:	011d3b00 	tsteq	sp, r0, lsl #22
 590:	01521331 	cmpeq	r2, r1, lsr r3
 594:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
 598:	58011201 	stmdapl	r1, {r0, r9, ip}
 59c:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
 5a0:	0013010b 	andseq	r0, r3, fp, lsl #2
 5a4:	00053c00 	andeq	r3, r5, r0, lsl #24
 5a8:	06021331 			; <UNDEFINED> instruction: 0x06021331
 5ac:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
 5b0:	011d3d00 	tsteq	sp, r0, lsl #26
 5b4:	01521331 	cmpeq	r2, r1, lsr r3
 5b8:	550b42b8 	strpl	r4, [fp, #-696]	; 0xfffffd48
 5bc:	590b5806 	stmdbpl	fp, {r1, r2, fp, ip, lr}
 5c0:	010b570b 	tsteq	fp, fp, lsl #14
 5c4:	3e000013 	mcrcc	0, 0, r0, cr0, cr3, {0}
 5c8:	0b0b000f 	bleq	2c060c <_Min_Stack_Size+0x2c020c>
 5cc:	263f0000 	ldrtcs	r0, [pc], -r0
 5d0:	40000000 	andmi	r0, r0, r0
 5d4:	0e03012e 	adfeqsp	f0, f3, #0.5
 5d8:	0b3b0b3a 	bleq	ec32c8 <_Min_Stack_Size+0xec2ec8>
 5dc:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
 5e0:	13010b20 	movwne	r0, #6944	; 0x1b20
 5e4:	05410000 	strbeq	r0, [r1, #-0]
 5e8:	3a080300 	bcc	2011f0 <_Min_Stack_Size+0x200df0>
 5ec:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 5f0:	0013490b 	andseq	r4, r3, fp, lsl #18
 5f4:	00054200 	andeq	r4, r5, r0, lsl #4
 5f8:	0b3a0e03 	bleq	e83e0c <_Min_Stack_Size+0xe83a0c>
 5fc:	0b390b3b 	bleq	e432f0 <_Min_Stack_Size+0xe42ef0>
 600:	00001349 	andeq	r1, r0, r9, asr #6
 604:	31011d43 	tstcc	r1, r3, asr #26
 608:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
 60c:	06550b42 	ldrbeq	r0, [r5], -r2, asr #22
 610:	0b590b58 	bleq	1643378 <_Min_Stack_Size+0x1642f78>
 614:	00000b57 	andeq	r0, r0, r7, asr fp
 618:	3f012e44 	svccc	0x00012e44
 61c:	3a0e030c 	bcc	381254 <_Min_Stack_Size+0x380e54>
 620:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 624:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
 628:	970a4001 	strls	r4, [sl, -r1]
 62c:	13010c42 	movwne	r0, #7234	; 0x1c42
 630:	1d450000 	stclne	0, cr0, [r5, #-0]
 634:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
 638:	0b42b801 	bleq	10ae644 <_Min_Stack_Size+0x10ae244>
 63c:	01120111 	tsteq	r2, r1, lsl r1
 640:	0b590b58 	bleq	16433a8 <_Min_Stack_Size+0x1642fa8>
 644:	00000b57 	andeq	r0, r0, r7, asr fp
 648:	3f012e46 	svccc	0x00012e46
 64c:	3a0e030c 	bcc	381284 <_Min_Stack_Size+0x380e84>
 650:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 654:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
 658:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
 65c:	970a4001 	strls	r4, [sl, -r1]
 660:	13010c42 	movwne	r0, #7234	; 0x1c42
 664:	05470000 	strbeq	r0, [r7, #-0]
 668:	3a080300 	bcc	201270 <_Min_Stack_Size+0x200e70>
 66c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 670:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 674:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
 678:	2e480000 	cdpcs	0, 4, cr0, cr8, cr0, {0}
 67c:	030c3f00 	movweq	r3, #52992	; 0xcf00
 680:	3b0b3a0e 	blcc	2ceec0 <_Min_Stack_Size+0x2ceac0>
 684:	000b390b 	andeq	r3, fp, fp, lsl #18
 688:	002e4900 	eoreq	r4, lr, r0, lsl #18
 68c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
 690:	0b3b0b3a 	bleq	ec3380 <_Min_Stack_Size+0xec2f80>
 694:	0b200b39 	bleq	803380 <_Min_Stack_Size+0x802f80>
 698:	2e4a0000 	cdpcs	0, 4, cr0, cr10, cr0, {0}
 69c:	3a0e0301 	bcc	3812a8 <_Min_Stack_Size+0x380ea8>
 6a0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 6a4:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
 6a8:	010b2013 	tsteq	fp, r3, lsl r0
 6ac:	4b000013 	blmi	700 <_Min_Stack_Size+0x300>
 6b0:	0e03012e 	adfeqsp	f0, f3, #0.5
 6b4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 6b8:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
 6bc:	13010b20 	movwne	r0, #6944	; 0x1b20
 6c0:	054c0000 	strbeq	r0, [ip, #-0]
 6c4:	3a0e0300 	bcc	3812cc <_Min_Stack_Size+0x380ecc>
 6c8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 6cc:	0013490b 	andseq	r4, r3, fp, lsl #18
 6d0:	002e4d00 	eoreq	r4, lr, r0, lsl #26
 6d4:	01111331 	tsteq	r1, r1, lsr r3
 6d8:	0a400112 	beq	1000b28 <_Min_Stack_Size+0x1000728>
 6dc:	000c4297 	muleq	ip, r7, r2
 6e0:	002e4e00 	eoreq	r4, lr, r0, lsl #28
 6e4:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
 6e8:	030e4087 	movweq	r4, #57479	; 0xe087
 6ec:	3b0b3a0e 	blcc	2cef2c <_Min_Stack_Size+0x2ceb2c>
 6f0:	000b390b 	andeq	r3, fp, fp, lsl #18
 6f4:	11010000 	mrsne	r0, (UNDEF: 1)
 6f8:	130e2501 	movwne	r2, #58625	; 0xe501
 6fc:	1b0e030b 	blne	381330 <_Min_Stack_Size+0x380f30>
 700:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
 704:	00061001 	andeq	r1, r6, r1
 708:	00240200 	eoreq	r0, r4, r0, lsl #4
 70c:	0b3e0b0b 	bleq	f83340 <_Min_Stack_Size+0xf82f40>
 710:	00000e03 	andeq	r0, r0, r3, lsl #28
 714:	03001603 	movweq	r1, #1539	; 0x603
 718:	3b0b3a0e 	blcc	2cef58 <_Min_Stack_Size+0x2ceb58>
 71c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 720:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
 724:	13490026 	movtne	r0, #36902	; 0x9026
 728:	35050000 	strcc	r0, [r5, #-0]
 72c:	00134900 	andseq	r4, r3, r0, lsl #18
 730:	00240600 	eoreq	r0, r4, r0, lsl #12
 734:	0b3e0b0b 	bleq	f83368 <_Min_Stack_Size+0xf82f68>
 738:	00000803 	andeq	r0, r0, r3, lsl #16
 73c:	0b011307 	bleq	45360 <_Min_Stack_Size+0x44f60>
 740:	3b0b3a0b 	blcc	2cef74 <_Min_Stack_Size+0x2ceb74>
 744:	010b390b 	tsteq	fp, fp, lsl #18
 748:	08000013 	stmdaeq	r0, {r0, r1, r4}
 74c:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 750:	0b3b0b3a 	bleq	ec3440 <_Min_Stack_Size+0xec3040>
 754:	13490b39 	movtne	r0, #39737	; 0x9b39
 758:	00000a38 	andeq	r0, r0, r8, lsr sl
 75c:	3e010409 	cdpcc	4, 0, cr0, cr1, cr9, {0}
 760:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
 764:	3b0b3a13 	blcc	2cefb8 <_Min_Stack_Size+0x2cebb8>
 768:	010b390b 	tsteq	fp, fp, lsl #18
 76c:	0a000013 	beq	7c0 <_Min_Stack_Size+0x3c0>
 770:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
 774:	00000d1c 	andeq	r0, r0, ip, lsl sp
 778:	0300280b 	movweq	r2, #2059	; 0x80b
 77c:	000b1c0e 	andeq	r1, fp, lr, lsl #24
 780:	01130c00 	tsteq	r3, r0, lsl #24
 784:	0b3a050b 	bleq	e81bb8 <_Min_Stack_Size+0xe817b8>
 788:	0b390b3b 	bleq	e4347c <_Min_Stack_Size+0xe4307c>
 78c:	00001301 	andeq	r1, r0, r1, lsl #6
 790:	03000d0d 	movweq	r0, #3341	; 0xd0d
 794:	3b0b3a08 	blcc	2cefbc <_Min_Stack_Size+0x2cebbc>
 798:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 79c:	000a3813 	andeq	r3, sl, r3, lsl r8
 7a0:	01010e00 	tsteq	r1, r0, lsl #28
 7a4:	13011349 	movwne	r1, #4937	; 0x1349
 7a8:	210f0000 	mrscs	r0, CPSR
 7ac:	2f134900 	svccs	0x00134900
 7b0:	1000000b 	andne	r0, r0, fp
 7b4:	13490021 	movtne	r0, #36897	; 0x9021
 7b8:	0000052f 	andeq	r0, r0, pc, lsr #10
 7bc:	03003411 	movweq	r3, #1041	; 0x411
 7c0:	3b0b3a0e 	blcc	2cf000 <_Min_Stack_Size+0x2cec00>
 7c4:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 7c8:	3c0c3f13 	stccc	15, cr3, [ip], {19}
 7cc:	1200000c 	andne	r0, r0, #12
 7d0:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 7d4:	0b3b0b3a 	bleq	ec34c4 <_Min_Stack_Size+0xec30c4>
 7d8:	13490b39 	movtne	r0, #39737	; 0x9b39
 7dc:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
 7e0:	13130000 	tstne	r3, #0
 7e4:	3a0b0b01 	bcc	2c33f0 <_Min_Stack_Size+0x2c2ff0>
 7e8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 7ec:	0013010b 	andseq	r0, r3, fp, lsl #2
 7f0:	000d1400 	andeq	r1, sp, r0, lsl #8
 7f4:	0b3a0e03 	bleq	e84008 <_Min_Stack_Size+0xe83c08>
 7f8:	0b39053b 	bleq	e41cec <_Min_Stack_Size+0xe418ec>
 7fc:	0a381349 	beq	e05528 <_Min_Stack_Size+0xe05128>
 800:	0d150000 	ldceq	0, cr0, [r5, #-0]
 804:	3a080300 	bcc	20140c <_Min_Stack_Size+0x20100c>
 808:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 80c:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 810:	1600000a 	strne	r0, [r0], -sl
 814:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
 818:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 81c:	13490b39 	movtne	r0, #39737	; 0x9b39
 820:	17170000 	ldrne	r0, [r7, -r0]
 824:	3a0b0b01 	bcc	2c3430 <_Min_Stack_Size+0x2c3030>
 828:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 82c:	0013010b 	andseq	r0, r3, fp, lsl #2
 830:	000d1800 	andeq	r1, sp, r0, lsl #16
 834:	0b3a0e03 	bleq	e84048 <_Min_Stack_Size+0xe83c48>
 838:	0b390b3b 	bleq	e4352c <_Min_Stack_Size+0xe4312c>
 83c:	00001349 	andeq	r1, r0, r9, asr #6
 840:	0b000f19 	bleq	44ac <_Min_Stack_Size+0x40ac>
 844:	1a00000b 	bne	878 <_Min_Stack_Size+0x478>
 848:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
 84c:	0b3a0b0b 	bleq	e83480 <_Min_Stack_Size+0xe83080>
 850:	0b390b3b 	bleq	e43544 <_Min_Stack_Size+0xe43144>
 854:	00001301 	andeq	r1, r0, r1, lsl #6
 858:	0b000f1b 	bleq	44cc <_Min_Stack_Size+0x40cc>
 85c:	0013490b 	andseq	r4, r3, fp, lsl #18
 860:	01131c00 	tsteq	r3, r0, lsl #24
 864:	050b0e03 	streq	r0, [fp, #-3587]	; 0xfffff1fd
 868:	0b3b0b3a 	bleq	ec3558 <_Min_Stack_Size+0xec3158>
 86c:	13010b39 	movwne	r0, #6969	; 0x1b39
 870:	151d0000 	ldrne	r0, [sp, #-0]
 874:	000c2700 	andeq	r2, ip, r0, lsl #14
 878:	01151e00 	tsteq	r5, r0, lsl #28
 87c:	13490c27 	movtne	r0, #39975	; 0x9c27
 880:	00001301 	andeq	r1, r0, r1, lsl #6
 884:	4900051f 	stmdbmi	r0, {r0, r1, r2, r3, r4, r8, sl}
 888:	20000013 	andcs	r0, r0, r3, lsl r0
 88c:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
 890:	0b3a050b 	bleq	e81cc4 <_Min_Stack_Size+0xe818c4>
 894:	0b39053b 	bleq	e41d88 <_Min_Stack_Size+0xe41988>
 898:	00001301 	andeq	r1, r0, r1, lsl #6
 89c:	03011321 	movweq	r1, #4897	; 0x1321
 8a0:	3a0b0b0e 	bcc	2c34e0 <_Min_Stack_Size+0x2c30e0>
 8a4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 8a8:	0013010b 	andseq	r0, r3, fp, lsl #2
 8ac:	01172200 	tsteq	r7, r0, lsl #4
 8b0:	0b3a0b0b 	bleq	e834e4 <_Min_Stack_Size+0xe830e4>
 8b4:	0b39053b 	bleq	e41da8 <_Min_Stack_Size+0xe419a8>
 8b8:	00001301 	andeq	r1, r0, r1, lsl #6
 8bc:	03000d23 	movweq	r0, #3363	; 0xd23
 8c0:	3b0b3a0e 	blcc	2cf100 <_Min_Stack_Size+0x2ced00>
 8c4:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 8c8:	24000013 	strcs	r0, [r0], #-19	; 0xffffffed
 8cc:	0e030013 	mcreq	0, 0, r0, cr3, cr3, {0}
 8d0:	00000c3c 	andeq	r0, r0, ip, lsr ip
 8d4:	27011525 	strcs	r1, [r1, -r5, lsr #10]
 8d8:	0013010c 	andseq	r0, r3, ip, lsl #2
 8dc:	00342600 	eorseq	r2, r4, r0, lsl #12
 8e0:	0b3a0e03 	bleq	e840f4 <_Min_Stack_Size+0xe83cf4>
 8e4:	0b390b3b 	bleq	e435d8 <_Min_Stack_Size+0xe431d8>
 8e8:	0a021349 	beq	85614 <_Min_Stack_Size+0x85214>
 8ec:	34270000 	strtcc	r0, [r7], #-0
 8f0:	3a0e0300 	bcc	3814f8 <_Min_Stack_Size+0x3810f8>
 8f4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 8f8:	3f13490b 	svccc	0x0013490b
 8fc:	000a020c 	andeq	r0, sl, ip, lsl #4
 900:	002e2800 	eoreq	r2, lr, r0, lsl #16
 904:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
 908:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 90c:	01110b39 	tsteq	r1, r9, lsr fp
 910:	0a400112 	beq	1000d60 <_Min_Stack_Size+0x1000960>
 914:	000c4297 	muleq	ip, r7, r2
 918:	012e2900 			; <UNDEFINED> instruction: 0x012e2900
 91c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
 920:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 924:	01110b39 	tsteq	r1, r9, lsr fp
 928:	06400112 			; <UNDEFINED> instruction: 0x06400112
 92c:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
 930:	2a000013 	bcs	984 <_Min_Stack_Size+0x584>
 934:	1331011d 	teqne	r1, #1073741831	; 0x40000007
 938:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
 93c:	5806550b 	stmdapl	r6, {r0, r1, r3, r8, sl, ip, lr}
 940:	5705590b 	strpl	r5, [r5, -fp, lsl #18]
 944:	0013010b 	andseq	r0, r3, fp, lsl #2
 948:	00052b00 	andeq	r2, r5, r0, lsl #22
 94c:	06021331 			; <UNDEFINED> instruction: 0x06021331
 950:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
 954:	82892c00 	addhi	r2, r9, #0, 24
 958:	01110101 	tsteq	r1, r1, lsl #2
 95c:	00001331 	andeq	r1, r0, r1, lsr r3
 960:	01828a2d 	orreq	r8, r2, sp, lsr #20
 964:	910a0200 	mrsls	r0, R10_fiq
 968:	00000a42 	andeq	r0, r0, r2, asr #20
 96c:	3f012e2e 	svccc	0x00012e2e
 970:	3a0e030c 	bcc	3815a8 <_Min_Stack_Size+0x3811a8>
 974:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 978:	110c270b 	tstne	ip, fp, lsl #14
 97c:	40011201 	andmi	r1, r1, r1, lsl #4
 980:	0c429706 	mcrreq	7, 0, r9, r2, cr6
 984:	00001301 	andeq	r1, r0, r1, lsl #6
 988:	0300052f 	movweq	r0, #1327	; 0x52f
 98c:	3b0b3a0e 	blcc	2cf1cc <_Min_Stack_Size+0x2cedcc>
 990:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 994:	b7060213 	smladlt	r6, r3, r2, r0
 998:	00000642 	andeq	r0, r0, r2, asr #12
 99c:	03003430 	movweq	r3, #1072	; 0x430
 9a0:	3b0b3a08 	blcc	2cf1c8 <_Min_Stack_Size+0x2cedc8>
 9a4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 9a8:	000a0213 	andeq	r0, sl, r3, lsl r2
 9ac:	00343100 	eorseq	r3, r4, r0, lsl #2
 9b0:	0b3a0803 	bleq	e829c4 <_Min_Stack_Size+0xe825c4>
 9b4:	0b39053b 	bleq	e41ea8 <_Min_Stack_Size+0xe41aa8>
 9b8:	0a021349 	beq	856e4 <_Min_Stack_Size+0x852e4>
 9bc:	0b320000 	bleq	c809c4 <_Min_Stack_Size+0xc805c4>
 9c0:	01065501 	tsteq	r6, r1, lsl #10
 9c4:	33000013 	movwcc	r0, #19
 9c8:	08030034 	stmdaeq	r3, {r2, r4, r5}
 9cc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 9d0:	13490b39 	movtne	r0, #39737	; 0x9b39
 9d4:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
 9d8:	34000006 	strcc	r0, [r0], #-6
 9dc:	1331011d 	teqne	r1, #1073741831	; 0x40000007
 9e0:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
 9e4:	5806550b 	stmdapl	r6, {r0, r1, r3, r8, sl, ip, lr}
 9e8:	5705590b 	strpl	r5, [r5, -fp, lsl #18]
 9ec:	3500000b 	strcc	r0, [r0, #-11]
 9f0:	0655010b 	ldrbeq	r0, [r5], -fp, lsl #2
 9f4:	34360000 	ldrtcc	r0, [r6], #-0
 9f8:	02133100 	andseq	r3, r3, #0, 2
 9fc:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
 a00:	2e370000 	cdpcs	0, 3, cr0, cr7, cr0, {0}
 a04:	030c3f01 	movweq	r3, #52993	; 0xcf01
 a08:	3b0b3a0e 	blcc	2cf248 <_Min_Stack_Size+0x2cee48>
 a0c:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 a10:	1113490c 	tstne	r3, ip, lsl #18
 a14:	40011201 	andmi	r1, r1, r1, lsl #4
 a18:	0c429706 	mcrreq	7, 0, r9, r2, cr6
 a1c:	00001301 	andeq	r1, r0, r1, lsl #6
 a20:	03000538 	movweq	r0, #1336	; 0x538
 a24:	3b0b3a08 	blcc	2cf24c <_Min_Stack_Size+0x2cee4c>
 a28:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 a2c:	b7060213 	smladlt	r6, r3, r2, r0
 a30:	00000642 	andeq	r0, r0, r2, asr #12
 a34:	3f012e39 	svccc	0x00012e39
 a38:	3a0e030c 	bcc	381670 <_Min_Stack_Size+0x381270>
 a3c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 a40:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
 a44:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
 a48:	970a4001 	strls	r4, [sl, -r1]
 a4c:	13010c42 	movwne	r0, #7234	; 0x1c42
 a50:	053a0000 	ldreq	r0, [sl, #-0]!
 a54:	3a0e0300 	bcc	38165c <_Min_Stack_Size+0x38125c>
 a58:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 a5c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 a60:	3b00000a 	blcc	a90 <_Min_Stack_Size+0x690>
 a64:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 9b4 <_Min_Stack_Size+0x5b4>
 a68:	0b3a0e03 	bleq	e8427c <_Min_Stack_Size+0xe83e7c>
 a6c:	0b390b3b 	bleq	e43760 <_Min_Stack_Size+0xe43360>
 a70:	01110c27 	tsteq	r1, r7, lsr #24
 a74:	0a400112 	beq	1000ec4 <_Min_Stack_Size+0x1000ac4>
 a78:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
 a7c:	3c000013 	stccc	0, cr0, [r0], {19}
 a80:	00000026 	andeq	r0, r0, r6, lsr #32
 a84:	03012e3d 	movweq	r2, #7741	; 0x1e3d
 a88:	3b0b3a0e 	blcc	2cf2c8 <_Min_Stack_Size+0x2ceec8>
 a8c:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 a90:	010b200c 	tsteq	fp, ip
 a94:	3e000013 	mcrcc	0, 0, r0, cr0, cr3, {0}
 a98:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
 a9c:	0b3b0b3a 	bleq	ec378c <_Min_Stack_Size+0xec338c>
 aa0:	13490b39 	movtne	r0, #39737	; 0x9b39
 aa4:	053f0000 	ldreq	r0, [pc, #-0]!	; aac <_Min_Stack_Size+0x6ac>
 aa8:	3a080300 	bcc	2016b0 <_Min_Stack_Size+0x2012b0>
 aac:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 ab0:	0013490b 	andseq	r4, r3, fp, lsl #18
 ab4:	00344000 	eorseq	r4, r4, r0
 ab8:	0b3a0803 	bleq	e82acc <_Min_Stack_Size+0xe826cc>
 abc:	0b390b3b 	bleq	e437b0 <_Min_Stack_Size+0xe433b0>
 ac0:	00001349 	andeq	r1, r0, r9, asr #6
 ac4:	03012e41 	movweq	r2, #7745	; 0x1e41
 ac8:	3b0b3a0e 	blcc	2cf308 <_Min_Stack_Size+0x2cef08>
 acc:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
 ad0:	010b200c 	tsteq	fp, ip
 ad4:	42000013 	andmi	r0, r0, #19
 ad8:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
 adc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 ae0:	13490b39 	movtne	r0, #39737	; 0x9b39
 ae4:	2e430000 	cdpcs	0, 4, cr0, cr3, cr0, {0}
 ae8:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
 aec:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
 af0:	0b3a0e03 	bleq	e84304 <_Min_Stack_Size+0xe83f04>
 af4:	0b390b3b 	bleq	e437e8 <_Min_Stack_Size+0xe433e8>
 af8:	2e440000 	cdpcs	0, 4, cr0, cr4, cr0, {0}
 afc:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
 b00:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
 b04:	0b3a0e03 	bleq	e84318 <_Min_Stack_Size+0xe83f18>
 b08:	00000b3b 	andeq	r0, r0, fp, lsr fp
 b0c:	01110100 	tsteq	r1, r0, lsl #2
 b10:	0b130e25 	bleq	4c43ac <_Min_Stack_Size+0x4c3fac>
 b14:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
 b18:	06120111 			; <UNDEFINED> instruction: 0x06120111
 b1c:	00001710 	andeq	r1, r0, r0, lsl r7
 b20:	0b002402 	bleq	9b30 <_Min_Stack_Size+0x9730>
 b24:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
 b28:	0300000e 	movweq	r0, #14
 b2c:	0b0b0024 	bleq	2c0bc4 <_Min_Stack_Size+0x2c07c4>
 b30:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
 b34:	16040000 	strne	r0, [r4], -r0
 b38:	3a0e0300 	bcc	381740 <_Min_Stack_Size+0x381340>
 b3c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 b40:	0013490b 	andseq	r4, r3, fp, lsl #18
 b44:	01010500 	tsteq	r1, r0, lsl #10
 b48:	13011349 	movwne	r1, #4937	; 0x1349
 b4c:	21060000 	mrscs	r0, (UNDEF: 6)
 b50:	07000000 	streq	r0, [r0, -r0]
 b54:	0b0b000f 	bleq	2c0b98 <_Min_Stack_Size+0x2c0798>
 b58:	00001349 	andeq	r1, r0, r9, asr #6
 b5c:	27001508 	strcs	r1, [r0, -r8, lsl #10]
 b60:	09000019 	stmdbeq	r0, {r0, r3, r4}
 b64:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 b68:	0b3b0b3a 	bleq	ec3858 <_Min_Stack_Size+0xec3458>
 b6c:	13490b39 	movtne	r0, #39737	; 0x9b39
 b70:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
 b74:	2e0a0000 	cdpcs	0, 0, cr0, cr10, cr0, {0}
 b78:	03193f01 	tsteq	r9, #1, 30
 b7c:	3b0b3a0e 	blcc	2cf3bc <_Min_Stack_Size+0x2cefbc>
 b80:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 b84:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 b88:	96184006 	ldrls	r4, [r8], -r6
 b8c:	13011942 	movwne	r1, #6466	; 0x1942
 b90:	340b0000 	strcc	r0, [fp], #-0
 b94:	3a0e0300 	bcc	38179c <_Min_Stack_Size+0x38139c>
 b98:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 b9c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 ba0:	1742b717 	smlaldne	fp, r2, r7, r7
 ba4:	340c0000 	strcc	r0, [ip], #-0
 ba8:	3a080300 	bcc	2017b0 <_Min_Stack_Size+0x2013b0>
 bac:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 bb0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 bb4:	1742b717 	smlaldne	fp, r2, r7, r7
 bb8:	890d0000 	stmdbhi	sp, {}	; <UNPREDICTABLE>
 bbc:	11000182 	smlabbne	r0, r2, r1, r0
 bc0:	00133101 	andseq	r3, r3, r1, lsl #2
 bc4:	002e0e00 	eoreq	r0, lr, r0, lsl #28
 bc8:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
 bcc:	0e030e6e 	cdpeq	14, 0, cr0, cr3, cr14, {3}
 bd0:	0b3b0b3a 	bleq	ec38c0 <_Min_Stack_Size+0xec34c0>
 bd4:	00000b39 	andeq	r0, r0, r9, lsr fp
 bd8:	00110100 	andseq	r0, r1, r0, lsl #2
 bdc:	01110610 	tsteq	r1, r0, lsl r6
 be0:	0e030112 	mcreq	1, 0, r0, cr3, cr2, {0}
 be4:	0e250e1b 	mcreq	14, 1, r0, cr5, cr11, {0}
 be8:	00000513 	andeq	r0, r0, r3, lsl r5
	...

Disassembly of section .debug_loc:

00000000 <.debug_loc>:
       0:	08000ca8 	stmdaeq	r0, {r3, r5, r7, sl, fp}
       4:	08000caa 	stmdaeq	r0, {r1, r3, r5, r7, sl, fp}
       8:	007d0002 	rsbseq	r0, sp, r2
       c:	08000caa 	stmdaeq	r0, {r1, r3, r5, r7, sl, fp}
      10:	08000d2c 	stmdaeq	r0, {r2, r3, r5, r8, sl, fp}
      14:	087d0002 	ldmdaeq	sp!, {r1}^
	...
      20:	00010100 	andeq	r0, r1, r0, lsl #2
      24:	00000000 	andeq	r0, r0, r0
      28:	08000cbe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r7, sl, fp}
      2c:	08000cca 	stmdaeq	r0, {r1, r3, r6, r7, sl, fp}
      30:	ca520001 	bgt	148003c <_Min_Stack_Size+0x147fc3c>
      34:	ce08000c 	cdpgt	0, 0, cr0, cr8, cr12, {0}
      38:	0808000c 	stmdaeq	r8, {r2, r3}
      3c:	11007200 	mrsne	r7, R8_usr
      40:	1a4fffff 	bne	1400044 <_Min_Stack_Size+0x13ffc44>
      44:	000cce9f 	muleq	ip, pc, lr	; <UNPREDICTABLE>
      48:	000cd208 	andeq	sp, ip, r8, lsl #4
      4c:	52000108 	andpl	r0, r0, #8, 2
      50:	08000cd2 	stmdaeq	r0, {r1, r4, r6, r7, sl, fp}
      54:	08000cdc 	stmdaeq	r0, {r2, r3, r4, r6, r7, sl, fp}
      58:	08730002 	ldmdaeq	r3!, {r1}^
	...
      64:	00010100 	andeq	r0, r1, r0, lsl #2
      68:	00000000 	andeq	r0, r0, r0
      6c:	08000cd2 	stmdaeq	r0, {r1, r4, r6, r7, sl, fp}
      70:	08000cde 	stmdaeq	r0, {r1, r2, r3, r4, r6, r7, sl, fp}
      74:	de520001 	cdple	0, 5, cr0, cr2, cr1, {0}
      78:	e208000c 	and	r0, r8, #12
      7c:	0808000c 	stmdaeq	r8, {r2, r3}
      80:	11007200 	mrsne	r7, R8_usr
      84:	1a73ffff 	bne	1d00088 <_Min_Stack_Size+0x1cffc88>
      88:	000ce29f 	muleq	ip, pc, r2	; <UNPREDICTABLE>
      8c:	000ce608 	andeq	lr, ip, r8, lsl #12
      90:	52000108 	andpl	r0, r0, #8, 2
      94:	08000ce6 	stmdaeq	r0, {r1, r2, r5, r6, r7, sl, fp}
      98:	08000cee 	stmdaeq	r0, {r1, r2, r3, r5, r6, r7, sl, fp}
      9c:	08730002 	ldmdaeq	r3!, {r1}^
	...
      a8:	00010100 	andeq	r0, r1, r0, lsl #2
      ac:	0ce80000 	stcleq	0, cr0, [r8]
      b0:	0cf00800 	ldcleq	8, cr0, [r0]
      b4:	00010800 	andeq	r0, r1, r0, lsl #16
      b8:	000cf051 	andeq	pc, ip, r1, asr r0	; <UNPREDICTABLE>
      bc:	000cf408 	andeq	pc, ip, r8, lsl #8
      c0:	71000a08 	tstvc	r0, r8, lsl #20
      c4:	ffff1100 			; <UNDEFINED> instruction: 0xffff1100
      c8:	1a7f9fff 	bne	1fe80cc <_Min_Stack_Size+0x1fe7ccc>
      cc:	000cf49f 	muleq	ip, pc, r4	; <UNPREDICTABLE>
      d0:	000d0908 	andeq	r0, sp, r8, lsl #18
      d4:	51000108 	tstpl	r0, r8, lsl #2
	...
      e0:	00010100 	andeq	r0, r1, r0, lsl #2
      e4:	0cf80000 	ldcleq	0, cr0, [r8]
      e8:	0d000800 	stceq	8, cr0, [r0, #-0]
      ec:	00010800 	andeq	r0, r1, r0, lsl #16
      f0:	000d0052 	andeq	r0, sp, r2, asr r0
      f4:	000d0408 	andeq	r0, sp, r8, lsl #8
      f8:	72000708 	andvc	r0, r0, #8, 14	; 0x200000
      fc:	f3ff0b00 	vtbl.8	d16, {d15-d18}, d0
     100:	0d049f1a 	stceq	15, cr9, [r4, #-104]	; 0xffffff98
     104:	0d090800 	stceq	8, cr0, [r9, #-0]
     108:	00010800 	andeq	r0, r1, r0, lsl #16
     10c:	00000052 	andeq	r0, r0, r2, asr r0
     110:	00000000 	andeq	r0, r0, r0
     114:	02020000 	andeq	r0, r2, #0
     118:	58000000 	stmdapl	r0, {}	; <UNPREDICTABLE>
     11c:	58080003 	stmdapl	r8, {r0, r1}
     120:	01080003 	tsteq	r8, r3
     124:	03585000 	cmpeq	r8, #0
     128:	035c0800 	cmpeq	ip, #0, 16
     12c:	00010800 	andeq	r0, r1, r0, lsl #16
     130:	00035c50 	andeq	r5, r3, r0, asr ip
     134:	00036408 	andeq	r6, r3, r8, lsl #8
     138:	70000308 	andvc	r0, r0, r8, lsl #6
     13c:	00009f01 	andeq	r9, r0, r1, lsl #30
     140:	00000000 	andeq	r0, r0, r0
     144:	00010000 	andeq	r0, r1, r0
     148:	00000000 	andeq	r0, r0, r0
     14c:	03160000 	tsteq	r6, #0
     150:	031a0800 	tsteq	sl, #0, 16
     154:	00020800 	andeq	r0, r2, r0, lsl #16
     158:	031a9f30 	tsteq	sl, #48, 30	; 0xc0
     15c:	03220800 			; <UNDEFINED> instruction: 0x03220800
     160:	00070800 	andeq	r0, r7, r0, lsl #16
     164:	720fff0a 	andvc	pc, pc, #10, 30	; 0x28
     168:	229f1c00 	addscs	r1, pc, #0, 24
     16c:	24080003 	strcs	r0, [r8], #-3
     170:	07080003 	streq	r0, [r8, -r3]
     174:	10000a00 	andne	r0, r0, r0, lsl #20
     178:	9f1c0072 	svcls	0x001c0072
     17c:	0800032c 	stmdaeq	r0, {r2, r3, r5, r8, r9}
     180:	08000354 	stmdaeq	r0, {r2, r4, r6, r8, r9}
     184:	ff0a0004 			; <UNDEFINED> instruction: 0xff0a0004
     188:	00009f1f 	andeq	r9, r0, pc, lsl pc
	...
     194:	03100000 	tsteq	r0, #0
     198:	031a0800 	tsteq	sl, #0, 16
     19c:	00010800 	andeq	r0, r1, r0, lsl #16
     1a0:	00031a52 	andeq	r1, r3, r2, asr sl
     1a4:	00033408 	andeq	r3, r3, r8, lsl #8
     1a8:	73000208 	movwvc	r0, #520	; 0x208
     1ac:	00000008 	andeq	r0, r0, r8
	...
     1bc:	0001e800 	andeq	lr, r1, r0, lsl #16
     1c0:	00020a08 	andeq	r0, r2, r8, lsl #20
     1c4:	50000108 	andpl	r0, r0, r8, lsl #2
     1c8:	0800020a 	stmdaeq	r0, {r1, r3, r9}
     1cc:	0800028e 	stmdaeq	r0, {r1, r2, r3, r7, r9}
     1d0:	01f30004 	mvnseq	r0, r4
     1d4:	028e9f50 	addeq	r9, lr, #80, 30	; 0x140
     1d8:	02ea0800 	rsceq	r0, sl, #0, 16
     1dc:	00010800 	andeq	r0, r1, r0, lsl #16
     1e0:	0002ea50 	andeq	lr, r2, r0, asr sl
     1e4:	00030c08 	andeq	r0, r3, r8, lsl #24
     1e8:	f3000408 	vshl.u8	d0, d8, d0
     1ec:	009f5001 	addseq	r5, pc, r1
     1f0:	00000000 	andeq	r0, r0, r0
     1f4:	01000000 	mrseq	r0, (UNDEF: 0)
     1f8:	00000000 	andeq	r0, r0, r0
     1fc:	01000000 	mrseq	r0, (UNDEF: 0)
     200:	00000000 	andeq	r0, r0, r0
     204:	01010000 	mrseq	r0, (UNDEF: 1)
     208:	00000000 	andeq	r0, r0, r0
     20c:	01010000 	mrseq	r0, (UNDEF: 1)
     210:	00000000 	andeq	r0, r0, r0
     214:	00000100 	andeq	r0, r0, r0, lsl #2
     218:	f2000000 	vhadd.s8	d0, d0, d0
     21c:	f6080001 			; <UNDEFINED> instruction: 0xf6080001
     220:	02080001 	andeq	r0, r8, #1
     224:	f69f3000 			; <UNDEFINED> instruction: 0xf69f3000
     228:	fe080001 	cdp2	0, 0, cr0, cr8, cr1, {0}
     22c:	07080001 	streq	r0, [r8, -r1]
     230:	0fff0a00 	svceq	0x00ff0a00
     234:	9f1c0072 	svcls	0x001c0072
     238:	080001fe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, r8}
     23c:	08000200 	stmdaeq	r0, {r9}
     240:	000a0007 	andeq	r0, sl, r7
     244:	1c007210 	sfmne	f7, 4, [r0], {16}
     248:	00020c9f 	muleq	r2, pc, ip	; <UNPREDICTABLE>
     24c:	00020e08 	andeq	r0, r2, r8, lsl #28
     250:	0a000708 	beq	1e78 <_Min_Stack_Size+0x1a78>
     254:	00730fff 	ldrshteq	r0, [r3], #-255	; 0xffffff01
     258:	02449f1c 	subeq	r9, r4, #28, 30	; 0x70
     25c:	024a0800 	subeq	r0, sl, #0, 16
     260:	00020800 	andeq	r0, r2, r0, lsl #16
     264:	024a9f30 	subeq	r9, sl, #48, 30	; 0xc0
     268:	02500800 	subseq	r0, r0, #0, 16
     26c:	00070800 	andeq	r0, r7, r0, lsl #16
     270:	730fff0a 	movwvc	pc, #65290	; 0xff0a	; <UNPREDICTABLE>
     274:	509f1c00 	addspl	r1, pc, r0, lsl #24
     278:	52080002 	andpl	r0, r8, #2
     27c:	07080002 	streq	r0, [r8, -r2]
     280:	10000a00 	andne	r0, r0, r0, lsl #20
     284:	9f1c0073 	svcls	0x001c0073
     288:	08000264 	stmdaeq	r0, {r2, r5, r6, r9}
     28c:	08000276 	stmdaeq	r0, {r1, r2, r4, r5, r6, r9}
     290:	ff0a0004 			; <UNDEFINED> instruction: 0xff0a0004
     294:	02769f1f 	rsbseq	r9, r6, #31, 30	; 0x7c
     298:	027a0800 	rsbseq	r0, sl, #0, 16
     29c:	00020800 	andeq	r0, r2, r0, lsl #16
     2a0:	027a9f30 	rsbseq	r9, sl, #48, 30	; 0xc0
     2a4:	02840800 	addeq	r0, r4, #0, 16
     2a8:	00070800 	andeq	r0, r7, r0, lsl #16
     2ac:	730fff0a 	movwvc	pc, #65290	; 0xff0a	; <UNPREDICTABLE>
     2b0:	849f1c00 	ldrhi	r1, [pc], #3072	; 2b8 <_Min_Heap_Size+0x2b8>
     2b4:	86080002 	strhi	r0, [r8], -r2
     2b8:	07080002 	streq	r0, [r8, -r2]
     2bc:	10000a00 	andne	r0, r0, r0, lsl #20
     2c0:	9f1c0073 	svcls	0x001c0073
     2c4:	0800028e 	stmdaeq	r0, {r1, r2, r3, r7, r9}
     2c8:	080002c8 	stmdaeq	r0, {r3, r6, r7, r9}
     2cc:	ff0a0004 			; <UNDEFINED> instruction: 0xff0a0004
     2d0:	02c89f1f 	sbceq	r9, r8, #31, 30	; 0x7c
     2d4:	02ce0800 	sbceq	r0, lr, #0, 16
     2d8:	00020800 	andeq	r0, r2, r0, lsl #16
     2dc:	02ce9f30 	sbceq	r9, lr, #48, 30	; 0xc0
     2e0:	02d40800 	sbcseq	r0, r4, #0, 16
     2e4:	00070800 	andeq	r0, r7, r0, lsl #16
     2e8:	730fff0a 	movwvc	pc, #65290	; 0xff0a	; <UNPREDICTABLE>
     2ec:	d49f1c00 	ldrle	r1, [pc], #3072	; 2f4 <_Min_Heap_Size+0x2f4>
     2f0:	d6080002 	strle	r0, [r8], -r2
     2f4:	07080002 	streq	r0, [r8, -r2]
     2f8:	10000a00 	andne	r0, r0, r0, lsl #20
     2fc:	9f1c0073 	svcls	0x001c0073
     300:	080002e6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r9}
     304:	080002ea 	stmdaeq	r0, {r1, r3, r5, r6, r7, r9}
     308:	9f300002 	svcls	0x00300002
     30c:	080002ea 	stmdaeq	r0, {r1, r3, r5, r6, r7, r9}
     310:	080002f0 	stmdaeq	r0, {r4, r5, r6, r7, r9}
     314:	ff0a0007 			; <UNDEFINED> instruction: 0xff0a0007
     318:	1c00730f 	stcne	3, cr7, [r0], {15}
     31c:	0002f09f 	muleq	r2, pc, r0	; <UNPREDICTABLE>
     320:	0002f208 	andeq	pc, r2, r8, lsl #4
     324:	0a000708 	beq	1f4c <_Min_Stack_Size+0x1b4c>
     328:	00731000 	rsbseq	r1, r3, r0
     32c:	00009f1c 	andeq	r9, r0, ip, lsl pc
	...
     338:	01000000 	mrseq	r0, (UNDEF: 0)
     33c:	00020201 	andeq	r0, r2, r1, lsl #4
     340:	03010100 	movweq	r0, #4352	; 0x1100
     344:	00000003 	andeq	r0, r0, r3
     348:	00010100 	andeq	r0, r1, r0, lsl #2
     34c:	00000000 	andeq	r0, r0, r0
     350:	00010100 	andeq	r0, r1, r0, lsl #2
     354:	00000000 	andeq	r0, r0, r0
     358:	01ec0000 	mvneq	r0, r0
     35c:	01f60800 	mvnseq	r0, r0, lsl #16
     360:	00010800 	andeq	r0, r1, r0, lsl #16
     364:	0001f652 	andeq	pc, r1, r2, asr r6	; <UNPREDICTABLE>
     368:	00020c08 	andeq	r0, r2, r8, lsl #24
     36c:	73000208 	movwvc	r0, #520	; 0x208
     370:	00022c08 	andeq	r2, r2, r8, lsl #24
     374:	00023208 	andeq	r3, r2, r8, lsl #4
     378:	53000108 	movwpl	r0, #264	; 0x108
     37c:	08000232 	stmdaeq	r0, {r1, r4, r5, r9}
     380:	08000232 	stmdaeq	r0, {r1, r4, r5, r9}
     384:	00730007 	rsbseq	r0, r3, r7
     388:	21243c40 			; <UNDEFINED> instruction: 0x21243c40
     38c:	0002329f 	muleq	r2, pc, r2	; <UNPREDICTABLE>
     390:	00023608 	andeq	r3, r2, r8, lsl #12
     394:	73000708 	movwvc	r0, #1800	; 0x708
     398:	24404100 	strbcs	r4, [r0], #-256	; 0xffffff00
     39c:	02369f21 	eorseq	r9, r6, #33, 30	; 0x84
     3a0:	02360800 	eorseq	r0, r6, #0, 16
     3a4:	00010800 	andeq	r0, r1, r0, lsl #16
     3a8:	00023653 	andeq	r3, r2, r3, asr r6
     3ac:	00023608 	andeq	r3, r2, r8, lsl #12
     3b0:	73000708 	movwvc	r0, #1800	; 0x708
     3b4:	ff0f0b00 			; <UNDEFINED> instruction: 0xff0f0b00
     3b8:	02369f1a 	eorseq	r9, r6, #26, 30	; 0x68
     3bc:	023a0800 	eorseq	r0, sl, #0, 16
     3c0:	00070800 	andeq	r0, r7, r0, lsl #16
     3c4:	0f0b0073 	svceq	0x000b0073
     3c8:	3a9f1ac7 	bcc	fe7c6eec <BootRAM+0xd73768d>
     3cc:	4a080002 	bmi	2003dc <_Min_Stack_Size+0x1fffdc>
     3d0:	01080002 	tsteq	r8, r2
     3d4:	025e5100 	subseq	r5, lr, #0, 2
     3d8:	025e0800 	subseq	r0, lr, #0, 16
     3dc:	00010800 	andeq	r0, r1, r0, lsl #16
     3e0:	00025e53 	andeq	r5, r2, r3, asr lr
     3e4:	00026208 	andeq	r6, r2, r8, lsl #4
     3e8:	73000708 	movwvc	r0, #1800	; 0x708
     3ec:	243f4000 	ldrtcs	r4, [pc], #-0	; 3f4 <_Min_Heap_Size+0x3f4>
     3f0:	02629f21 	rsbeq	r9, r2, #33, 30	; 0x84
     3f4:	02640800 	rsbeq	r0, r4, #0, 16
     3f8:	00010800 	andeq	r0, r1, r0, lsl #16
     3fc:	00026453 	andeq	r6, r2, r3, asr r4
     400:	00026c08 	andeq	r6, r2, r8, lsl #24
     404:	71000208 	tstvc	r0, r8, lsl #4
     408:	00026e08 	andeq	r6, r2, r8, lsl #28
     40c:	00026e08 	andeq	r6, r2, r8, lsl #28
     410:	53000108 	movwpl	r0, #264	; 0x108
     414:	0800026e 	stmdaeq	r0, {r1, r2, r3, r5, r6, r9}
     418:	08000274 	stmdaeq	r0, {r2, r4, r5, r6, r9}
     41c:	00730006 	rsbseq	r0, r3, r6
     420:	9f1afc09 	svcls	0x001afc09
     424:	08000274 	stmdaeq	r0, {r2, r4, r5, r6, r9}
     428:	0800027a 	stmdaeq	r0, {r1, r3, r4, r5, r6, r9}
     42c:	7a530001 	bvc	14c0438 <_Min_Stack_Size+0x14c0038>
     430:	8e080002 	cdphi	0, 0, cr0, cr8, cr2, {0}
     434:	02080002 	andeq	r0, r8, #2
     438:	8e087100 	adfhie	f7, f0, f0
     43c:	96080002 	strls	r0, [r8], -r2
     440:	02080002 	andeq	r0, r8, #2
     444:	00087300 	andeq	r7, r8, r0, lsl #6
     448:	00000000 	andeq	r0, r0, r0
     44c:	8c000000 	stchi	0, cr0, [r0], {-0}
     450:	8e000004 	cdphi	0, 0, cr0, cr0, cr4, {0}
     454:	02000004 	andeq	r0, r0, #4
     458:	8e007d00 	cdphi	13, 0, cr7, cr0, cr0, {0}
     45c:	e6000004 	str	r0, [r0], -r4
     460:	02000004 	andeq	r0, r0, #4
     464:	000c7d00 	andeq	r7, ip, r0, lsl #26
	...
     470:	8c000000 	stchi	0, cr0, [r0], {-0}
     474:	9c000004 	stcls	0, cr0, [r0], {4}
     478:	01000004 	tsteq	r0, r4
     47c:	049c5000 	ldreq	r5, [ip], #0
     480:	04e60000 	strbteq	r0, [r6], #0
     484:	00040000 	andeq	r0, r4, r0
     488:	9f5001f3 	svcls	0x005001f3
	...
     498:	048c0000 	streq	r0, [ip], #0
     49c:	04b40000 	ldrteq	r0, [r4], #0
     4a0:	00010000 	andeq	r0, r1, r0
     4a4:	0004b451 	andeq	fp, r4, r1, asr r4
     4a8:	0004b800 	andeq	fp, r4, r0, lsl #16
     4ac:	71000300 	mrsvc	r0, LR_irq
     4b0:	04b89f02 	ldrteq	r9, [r8], #3842	; 0xf02
     4b4:	04e60000 	strbteq	r0, [r6], #0
     4b8:	00040000 	andeq	r0, r4, r0
     4bc:	9f5101f3 	svcls	0x005101f3
	...
     4cc:	00000498 	muleq	r0, r8, r4
     4d0:	000004a4 	andeq	r0, r0, r4, lsr #9
     4d4:	a4520001 	ldrbge	r0, [r2], #-1
     4d8:	c6000004 	strgt	r0, [r0], -r4
     4dc:	0b000004 	bleq	4f4 <_Min_Stack_Size+0xf4>
     4e0:	33007300 	movwcc	r7, #768	; 0x300
     4e4:	c0802324 	addgt	r2, r0, r4, lsr #6
     4e8:	9f048081 	svcls	0x00048081
	...
     4f4:	04a00000 	strteq	r0, [r0], #0
     4f8:	04e60000 	strbteq	r0, [r6], #0
     4fc:	00010000 	andeq	r0, r1, r0
     500:	00000050 	andeq	r0, r0, r0, asr r0
     504:	00000000 	andeq	r0, r0, r0
     508:	00000100 	andeq	r0, r0, r0, lsl #2
     50c:	a2010000 	andge	r0, r1, #0
     510:	b2000004 	andlt	r0, r0, #4
     514:	05000004 	streq	r0, [r0, #-4]
     518:	31017000 	mrscc	r7, (UNDEF: 1)
     51c:	04b29f26 	ldrteq	r9, [r2], #3878	; 0xf26
     520:	04b80000 	ldrteq	r0, [r8], #0
     524:	00010000 	andeq	r0, r1, r0
     528:	0004b854 	andeq	fp, r4, r4, asr r8
     52c:	0004e400 	andeq	lr, r4, r0, lsl #8
     530:	70000500 	andvc	r0, r0, r0, lsl #10
     534:	9f263101 	svcls	0x00263101
	...
     544:	04b00000 	ldrteq	r0, [r0], #0
     548:	04bc0000 	ldrteq	r0, [ip], #0
     54c:	00010000 	andeq	r0, r1, r0
     550:	0004bc52 	andeq	fp, r4, r2, asr ip
     554:	0004c200 	andeq	ip, r4, r0, lsl #4
     558:	72000300 	andvc	r0, r0, #0, 6
     55c:	04c29f7c 	strbeq	r9, [r2], #3964	; 0xf7c
     560:	04d20000 	ldrbeq	r0, [r2], #0
     564:	00010000 	andeq	r0, r1, r0
     568:	00000052 	andeq	r0, r0, r2, asr r0
     56c:	00000000 	andeq	r0, r0, r0
     570:	b0000200 	andlt	r0, r0, r0, lsl #4
     574:	b8000004 	stmdalt	r0, {r2}
     578:	02000004 	andeq	r0, r0, #4
     57c:	009f3000 	addseq	r3, pc, r0
     580:	00000000 	andeq	r0, r0, r0
     584:	dc000000 	stcle	0, cr0, [r0], {-0}
     588:	de000003 	cdple	0, 0, cr0, cr0, cr3, {0}
     58c:	02000003 	andeq	r0, r0, #3
     590:	de007d00 	cdple	13, 0, cr7, cr0, cr0, {0}
     594:	30000003 	andcc	r0, r0, r3
     598:	02000004 	andeq	r0, r0, #4
     59c:	00147d00 	andseq	r7, r4, r0, lsl #26
	...
     5ac:	0003dc00 	andeq	sp, r3, r0, lsl #24
     5b0:	00040200 	andeq	r0, r4, r0, lsl #4
     5b4:	50000100 	andpl	r0, r0, r0, lsl #2
     5b8:	00000402 	andeq	r0, r0, r2, lsl #8
     5bc:	00000424 	andeq	r0, r0, r4, lsr #8
     5c0:	01f30004 	mvnseq	r0, r4
     5c4:	04249f50 	strteq	r9, [r4], #-3920	; 0xfffff0b0
     5c8:	04300000 	ldrteq	r0, [r0], #-0
     5cc:	00010000 	andeq	r0, r1, r0
     5d0:	00000050 	andeq	r0, r0, r0, asr r0
     5d4:	00000000 	andeq	r0, r0, r0
     5d8:	ea000000 	b	5e0 <_Min_Stack_Size+0x1e0>
     5dc:	30000003 	andcc	r0, r0, r3
     5e0:	01000004 	tsteq	r0, r4
     5e4:	00005400 	andeq	r5, r0, r0, lsl #8
	...
     5f0:	000003f8 	strdeq	r0, [r0], -r8
     5f4:	00000430 	andeq	r0, r0, r0, lsr r4
     5f8:	00560001 	subseq	r0, r6, r1
     5fc:	00000000 	andeq	r0, r0, r0
     600:	01000000 	mrseq	r0, (UNDEF: 0)
     604:	0003f800 	andeq	pc, r3, r0, lsl #16
     608:	00043000 	andeq	r3, r4, r0
     60c:	51000100 	mrspl	r0, (UNDEF: 16)
	...
     618:	00020200 	andeq	r0, r2, r0, lsl #4
     61c:	03fa0000 	mvnseq	r0, #0
     620:	03fa0000 	mvnseq	r0, #0
     624:	00010000 	andeq	r0, r1, r0
     628:	0003fa53 	andeq	pc, r3, r3, asr sl	; <UNPREDICTABLE>
     62c:	00041000 	andeq	r1, r4, r0
     630:	75000800 	strvc	r0, [r0, #-2048]	; 0xfffff800
     634:	73243200 			; <UNDEFINED> instruction: 0x73243200
     638:	249f2200 	ldrcs	r2, [pc], #512	; 640 <_Min_Stack_Size+0x240>
     63c:	2c000004 	stccs	0, cr0, [r0], {4}
     640:	08000004 	stmdaeq	r0, {r2}
     644:	32007500 	andcc	r7, r0, #0, 10
     648:	22007324 	andcs	r7, r0, #36, 6	; 0x90000000
     64c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     650:	00000000 	andeq	r0, r0, r0
     654:	00000200 	andeq	r0, r0, r0, lsl #4
     658:	0003fa00 	andeq	pc, r3, r0, lsl #20
     65c:	00042c00 	andeq	r2, r4, r0, lsl #24
     660:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
     664:	0000042c 	andeq	r0, r0, ip, lsr #8
     668:	0000042e 	andeq	r0, r0, lr, lsr #8
     66c:	01750003 	cmneq	r5, r3
     670:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     674:	00000000 	andeq	r0, r0, r0
     678:	0002b400 	andeq	fp, r2, r0, lsl #8
     67c:	0002b600 	andeq	fp, r2, r0, lsl #12
     680:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     684:	0002b600 	andeq	fp, r2, r0, lsl #12
     688:	0003dc00 	andeq	sp, r3, r0, lsl #24
     68c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     690:	00000010 	andeq	r0, r0, r0, lsl r0
     694:	00000000 	andeq	r0, r0, r0
     698:	00000200 	andeq	r0, r0, r0, lsl #4
     69c:	0002dc00 	andeq	sp, r2, r0, lsl #24
     6a0:	0002e000 	andeq	lr, r2, r0
     6a4:	30000200 	andcc	r0, r0, r0, lsl #4
     6a8:	0002e09f 	muleq	r2, pc, r0	; <UNPREDICTABLE>
     6ac:	0002e200 	andeq	lr, r2, r0, lsl #4
     6b0:	38000500 	stmdacc	r0, {r8, sl}
     6b4:	9f1c0074 	svcls	0x001c0074
	...
     6c0:	032c0000 			; <UNDEFINED> instruction: 0x032c0000
     6c4:	03780000 	cmneq	r8, #0
     6c8:	00010000 	andeq	r0, r1, r0
     6cc:	00000055 	andeq	r0, r0, r5, asr r0
     6d0:	00000000 	andeq	r0, r0, r0
     6d4:	00016800 	andeq	r6, r1, r0, lsl #16
     6d8:	00016a00 	andeq	r6, r1, r0, lsl #20
     6dc:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     6e0:	00016a00 	andeq	r6, r1, r0, lsl #20
     6e4:	0002b400 	andeq	fp, r2, r0, lsl #8
     6e8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     6ec:	00000014 	andeq	r0, r0, r4, lsl r0
	...
     6f8:	00016800 	andeq	r6, r1, r0, lsl #16
     6fc:	00017200 	andeq	r7, r1, r0, lsl #4
     700:	50000100 	andpl	r0, r0, r0, lsl #2
     704:	00000172 	andeq	r0, r0, r2, ror r1
     708:	000002b4 			; <UNDEFINED> instruction: 0x000002b4
     70c:	00560001 	subseq	r0, r6, r1
	...
     724:	68000000 	stmdavs	r0, {}	; <UNPREDICTABLE>
     728:	be000001 	cdplt	0, 0, cr0, cr0, cr1, {0}
     72c:	01000001 	tsteq	r0, r1
     730:	01be5100 			; <UNDEFINED> instruction: 0x01be5100
     734:	01c40000 	biceq	r0, r4, r0
     738:	00040000 	andeq	r0, r4, r0
     73c:	9f5101f3 	svcls	0x005101f3
     740:	000001c4 	andeq	r0, r0, r4, asr #3
     744:	000001c8 	andeq	r0, r0, r8, asr #3
     748:	c8510001 	ldmdagt	r1, {r0}^
     74c:	28000001 	stmdacs	r0, {r0}
     750:	04000002 	streq	r0, [r0], #-2
     754:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
     758:	0002289f 	muleq	r2, pc, r8	; <UNPREDICTABLE>
     75c:	00022c00 	andeq	r2, r2, r0, lsl #24
     760:	51000100 	mrspl	r0, (UNDEF: 16)
     764:	0000022c 	andeq	r0, r0, ip, lsr #4
     768:	0000022e 	andeq	r0, r0, lr, lsr #4
     76c:	01f30004 	mvnseq	r0, r4
     770:	022e9f51 	eoreq	r9, lr, #324	; 0x144
     774:	02320000 	eorseq	r0, r2, #0
     778:	00010000 	andeq	r0, r1, r0
     77c:	00023251 	andeq	r3, r2, r1, asr r2
     780:	0002b400 	andeq	fp, r2, r0, lsl #8
     784:	f3000400 	vshl.u8	d0, d0, d0
     788:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
     798:	00016800 	andeq	r6, r1, r0, lsl #16
     79c:	00021a00 	andeq	r1, r2, r0, lsl #20
     7a0:	52000100 	andpl	r0, r0, #0, 2
     7a4:	0000021a 	andeq	r0, r0, sl, lsl r2
     7a8:	00000228 	andeq	r0, r0, r8, lsr #4
     7ac:	01f30004 	mvnseq	r0, r4
     7b0:	02289f52 	eoreq	r9, r8, #328	; 0x148
     7b4:	02b40000 	adcseq	r0, r4, #0
     7b8:	00010000 	andeq	r0, r1, r0
     7bc:	00000052 	andeq	r0, r0, r2, asr r0
     7c0:	00000000 	andeq	r0, r0, r0
     7c4:	00000200 	andeq	r0, r0, r0, lsl #4
     7c8:	00000000 	andeq	r0, r0, r0
     7cc:	00016800 	andeq	r6, r1, r0, lsl #16
     7d0:	0001e600 	andeq	lr, r1, r0, lsl #12
     7d4:	70000600 	andvc	r0, r0, r0, lsl #12
     7d8:	1a800900 	bne	fe002be0 <BootRAM+0xcf73381>
     7dc:	0001e69f 	muleq	r1, pc, r6	; <UNPREDICTABLE>
     7e0:	00022800 	andeq	r2, r2, r0, lsl #16
     7e4:	f3000700 	vabd.u8	d0, d0, d0
     7e8:	80095001 	andhi	r5, r9, r1
     7ec:	02289f1a 	eoreq	r9, r8, #26, 30	; 0x68
     7f0:	02340000 	eorseq	r0, r4, #0
     7f4:	00060000 	andeq	r0, r6, r0
     7f8:	80090070 	andhi	r0, r9, r0, ror r0
     7fc:	02349f1a 	eorseq	r9, r4, #26, 30	; 0x68
     800:	02b40000 	adcseq	r0, r4, #0
     804:	00070000 	andeq	r0, r7, r0
     808:	095001f3 	ldmdbeq	r0, {r0, r1, r4, r5, r6, r7, r8}^
     80c:	009f1a80 	addseq	r1, pc, r0, lsl #21
	...
     818:	02020101 	andeq	r0, r2, #1073741824	; 0x40000000
	...
     828:	a8000000 	stmdage	r0, {}	; <UNPREDICTABLE>
     82c:	a8000001 	stmdage	r0, {r0}
     830:	01000001 	tsteq	r0, r1
     834:	01a85400 			; <UNDEFINED> instruction: 0x01a85400
     838:	01a80000 			; <UNDEFINED> instruction: 0x01a80000
     83c:	000b0000 	andeq	r0, fp, r0
     840:	0f0a0074 	svceq	0x000a0074
     844:	800b1a0f 	andhi	r1, fp, pc, lsl #20
     848:	a89f2180 	ldmge	pc, {r7, r8, sp}	; <UNPREDICTABLE>
     84c:	ac000001 	stcge	0, cr0, [r0], {1}
     850:	11000001 	tstne	r0, r1
     854:	0a007400 	beq	1d85c <_Min_Stack_Size+0x1d45c>
     858:	761a0f00 	ldrvc	r0, [sl], -r0, lsl #30
     85c:	1aff0800 	bne	fffc2864 <BootRAM+0xef33005>
     860:	80800b21 	addhi	r0, r0, r1, lsr #22
     864:	01b09f21 	lsrseq	r9, r1, #30
     868:	01c20000 	biceq	r0, r2, r0
     86c:	00070000 	andeq	r0, r7, r0
     870:	800b0074 	andhi	r0, fp, r4, ror r0
     874:	c29f2180 	addsgt	r2, pc, #128, 2
     878:	c4000001 	strgt	r0, [r0], #-1
     87c:	01000001 	tsteq	r0, r1
     880:	01c45100 	biceq	r5, r4, r0, lsl #2
     884:	01c80000 	biceq	r0, r8, r0
     888:	00070000 	andeq	r0, r7, r0
     88c:	800b0074 	andhi	r0, fp, r4, ror r0
     890:	c89f2180 	ldmgt	pc, {r7, r8, sp}	; <UNPREDICTABLE>
     894:	d4000001 	strle	r0, [r0], #-1
     898:	01000001 	tsteq	r0, r1
     89c:	01d45100 	bicseq	r5, r4, r0, lsl #2
     8a0:	01ea0000 	mvneq	r0, r0
     8a4:	00020000 	andeq	r0, r2, r0
     8a8:	02280075 	eoreq	r0, r8, #117	; 0x75
     8ac:	02340000 	eorseq	r0, r4, #0
     8b0:	00070000 	andeq	r0, r7, r0
     8b4:	800b0074 	andhi	r0, fp, r4, ror r0
     8b8:	349f2180 	ldrcc	r2, [pc], #384	; 8c0 <_Min_Stack_Size+0x4c0>
     8bc:	36000002 	strcc	r0, [r0], -r2
     8c0:	02000002 	andeq	r0, r0, #2
     8c4:	00007500 	andeq	r7, r0, r0, lsl #10
     8c8:	00000000 	andeq	r0, r0, r0
     8cc:	7c000000 	stcvc	0, cr0, [r0], {-0}
     8d0:	7e000000 	cdpvc	0, 0, cr0, cr0, cr0, {0}
     8d4:	02000000 	andeq	r0, r0, #0
     8d8:	7e007d00 	cdpvc	13, 0, cr7, cr0, cr0, {0}
     8dc:	68000000 	stmdavs	r0, {}	; <UNPREDICTABLE>
     8e0:	02000001 	andeq	r0, r0, #1
     8e4:	00147d00 	andseq	r7, r4, r0, lsl #26
	...
     8f0:	7c000000 	stcvc	0, cr0, [r0], {-0}
     8f4:	82000000 	andhi	r0, r0, #0
     8f8:	01000000 	mrseq	r0, (UNDEF: 0)
     8fc:	00825000 	addeq	r5, r2, r0
     900:	01680000 	cmneq	r8, r0
     904:	00010000 	andeq	r0, r1, r0
     908:	00000056 	andeq	r0, r0, r6, asr r0
	...
     920:	00007c00 	andeq	r7, r0, r0, lsl #24
     924:	0000c800 	andeq	ip, r0, r0, lsl #16
     928:	51000100 	mrspl	r0, (UNDEF: 16)
     92c:	000000c8 	andeq	r0, r0, r8, asr #1
     930:	000000ca 	andeq	r0, r0, sl, asr #1
     934:	01f30004 	mvnseq	r0, r4
     938:	00ca9f51 	sbceq	r9, sl, r1, asr pc
     93c:	00ce0000 	sbceq	r0, lr, r0
     940:	00010000 	andeq	r0, r1, r0
     944:	0000ce51 	andeq	ip, r0, r1, asr lr
     948:	00010a00 	andeq	r0, r1, r0, lsl #20
     94c:	f3000400 	vshl.u8	d0, d0, d0
     950:	0a9f5101 	beq	fe7d4d5c <BootRAM+0xd7454fd>
     954:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
     958:	01000001 	tsteq	r0, r1
     95c:	010e5100 	mrseq	r5, (UNDEF: 30)
     960:	01100000 	tsteq	r0, r0
     964:	00040000 	andeq	r0, r4, r0
     968:	9f5101f3 	svcls	0x005101f3
     96c:	00000110 	andeq	r0, r0, r0, lsl r1
     970:	00000114 	andeq	r0, r0, r4, lsl r1
     974:	14510001 	ldrbne	r0, [r1], #-1
     978:	68000001 	stmdavs	r0, {r0}
     97c:	04000001 	streq	r0, [r0], #-1
     980:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
     984:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     990:	7c000000 	stcvc	0, cr0, [r0], {-0}
     994:	04000000 	streq	r0, [r0], #-0
     998:	01000001 	tsteq	r0, r1
     99c:	01045200 	mrseq	r5, R12_usr
     9a0:	01060000 	mrseq	r0, (UNDEF: 6)
     9a4:	00040000 	andeq	r0, r4, r0
     9a8:	9f5201f3 	svcls	0x005201f3
     9ac:	0000010a 	andeq	r0, r0, sl, lsl #2
     9b0:	00000168 	andeq	r0, r0, r8, ror #2
     9b4:	00520001 	subseq	r0, r2, r1
	...
     9c8:	00007c00 	andeq	r7, r0, r0, lsl #24
     9cc:	0000f200 	andeq	pc, r0, r0, lsl #4
     9d0:	53000100 	movwpl	r0, #256	; 0x100
     9d4:	000000f2 	strdeq	r0, [r0], -r2
     9d8:	00000102 	andeq	r0, r0, r2, lsl #2
     9dc:	00760007 	rsbseq	r0, r6, r7
     9e0:	00712432 	rsbseq	r2, r1, r2, lsr r4
     9e4:	00010222 	andeq	r0, r1, r2, lsr #4
     9e8:	00010a00 	andeq	r0, r1, r0, lsl #20
     9ec:	f3000400 	vshl.u8	d0, d0, d0
     9f0:	0a9f5301 	beq	fe7d55fc <BootRAM+0xd745d9d>
     9f4:	4a000001 	bmi	a00 <_Min_Stack_Size+0x600>
     9f8:	01000001 	tsteq	r0, r1
     9fc:	014a5300 	mrseq	r5, (UNDEF: 122)
     a00:	01680000 	cmneq	r8, r0
     a04:	00070000 	andeq	r0, r7, r0
     a08:	24320076 	ldrtcs	r0, [r2], #-118	; 0xffffff8a
     a0c:	00220071 	eoreq	r0, r2, r1, ror r0
     a10:	00000000 	andeq	r0, r0, r0
     a14:	02000000 	andeq	r0, r0, #0
     a18:	7c000000 	stcvc	0, cr0, [r0], {-0}
     a1c:	e6000000 	str	r0, [r0], -r0
     a20:	06000000 	streq	r0, [r0], -r0
     a24:	09007000 	stmdbeq	r0, {ip, sp, lr}
     a28:	e69f1a80 	ldr	r1, [pc], r0, lsl #21
     a2c:	68000000 	stmdavs	r0, {}	; <UNPREDICTABLE>
     a30:	07000001 	streq	r0, [r0, -r1]
     a34:	5001f300 	andpl	pc, r1, r0, lsl #6
     a38:	9f1a8009 	svcls	0x001a8009
	...
     a44:	02010100 	andeq	r0, r1, #0, 2
     a48:	00000002 	andeq	r0, r0, r2
     a4c:	00b20000 	adcseq	r0, r2, r0
     a50:	00b20000 	adcseq	r0, r2, r0
     a54:	00010000 	andeq	r0, r1, r0
     a58:	0000b254 	andeq	fp, r0, r4, asr r2
     a5c:	0000b200 	andeq	fp, r0, r0, lsl #4
     a60:	74000b00 	strvc	r0, [r0], #-2816	; 0xfffff500
     a64:	0f0f0a00 	svceq	0x000f0a00
     a68:	80800b1a 	addhi	r0, r0, sl, lsl fp
     a6c:	00b29f21 	adcseq	r9, r2, r1, lsr #30
     a70:	00b80000 	adcseq	r0, r8, r0
     a74:	00110000 	andseq	r0, r1, r0
     a78:	000a0074 	andeq	r0, sl, r4, ror r0
     a7c:	00761a0f 	rsbseq	r1, r6, pc, lsl #20
     a80:	211aff08 	tstcs	sl, r8, lsl #30	; <UNPREDICTABLE>
     a84:	2180800b 	orrcs	r8, r0, fp
     a88:	0000bc9f 	muleq	r0, pc, ip	; <UNPREDICTABLE>
     a8c:	0000d200 	andeq	sp, r0, r0, lsl #4
     a90:	74000700 	strvc	r0, [r0], #-1792	; 0xfffff900
     a94:	80800b00 	addhi	r0, r0, r0, lsl #22
     a98:	010a9f21 	tsteq	sl, r1, lsr #30
     a9c:	01160000 	tsteq	r6, r0
     aa0:	00070000 	andeq	r0, r7, r0
     aa4:	800b0074 	andhi	r0, fp, r4, ror r0
     aa8:	009f2180 	addseq	r2, pc, r0, lsl #3
     aac:	00000000 	andeq	r0, r0, r0
     ab0:	e6000000 	str	r0, [r0], -r0
     ab4:	e8000004 	stmda	r0, {r2}
     ab8:	02000004 	andeq	r0, r0, #4
     abc:	e8007d00 	stmda	r0, {r8, sl, fp, ip, sp, lr}
     ac0:	74000004 	strvc	r0, [r0], #-4
     ac4:	02000005 	andeq	r0, r0, #5
     ac8:	74187d00 	ldrvc	r7, [r8], #-3328	; 0xfffff300
     acc:	76000005 	strvc	r0, [r0], -r5
     ad0:	02000005 	andeq	r0, r0, #5
     ad4:	76107d00 	ldrvc	r7, [r0], -r0, lsl #26
     ad8:	00000005 	andeq	r0, r0, r5
     adc:	02000006 	andeq	r0, r0, #6
     ae0:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
     af0:	e6000000 	str	r0, [r0], -r0
     af4:	0c000004 	stceq	0, cr0, [r0], {4}
     af8:	01000005 	tsteq	r0, r5
     afc:	050c5000 	streq	r5, [ip, #-0]
     b00:	05360000 	ldreq	r0, [r6, #-0]!
     b04:	00040000 	andeq	r0, r4, r0
     b08:	9f5001f3 	svcls	0x005001f3
     b0c:	00000536 	andeq	r0, r0, r6, lsr r5
     b10:	00000540 	andeq	r0, r0, r0, asr #10
     b14:	40500001 	subsmi	r0, r0, r1
     b18:	00000005 	andeq	r0, r0, r5
     b1c:	04000006 	streq	r0, [r0], #-6
     b20:	5001f300 	andpl	pc, r1, r0, lsl #6
     b24:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     b28:	00000000 	andeq	r0, r0, r0
     b2c:	00000100 	andeq	r0, r0, r0, lsl #2
     b30:	00030000 	andeq	r0, r3, r0
     b34:	00051200 	andeq	r1, r5, r0, lsl #4
     b38:	00053000 	andeq	r3, r5, r0
     b3c:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
     b40:	00000540 	andeq	r0, r0, r0, asr #10
     b44:	00000572 	andeq	r0, r0, r2, ror r5
     b48:	76550001 	ldrbvc	r0, [r5], -r1
     b4c:	a2000005 	andge	r0, r0, #5
     b50:	01000005 	tsteq	r0, r5
     b54:	05aa5500 	streq	r5, [sl, #1280]!	; 0x500
     b58:	05da0000 	ldrbeq	r0, [sl]
     b5c:	00010000 	andeq	r0, r1, r0
     b60:	00000055 	andeq	r0, r0, r5, asr r0
     b64:	00000000 	andeq	r0, r0, r0
     b68:	f8000100 			; <UNDEFINED> instruction: 0xf8000100
     b6c:	02000004 	andeq	r0, r0, #4
     b70:	0b000005 	bleq	b8c <_Min_Stack_Size+0x78c>
     b74:	0a007300 	beq	1d77c <_Min_Stack_Size+0x1d37c>
     b78:	401a0800 	andsmi	r0, sl, r0, lsl #16
     b7c:	9f2e3024 	svcls	0x002e3024
	...
     b90:	00000300 	andeq	r0, r0, r0, lsl #6
     b94:	00000518 	andeq	r0, r0, r8, lsl r5
     b98:	00000530 	andeq	r0, r0, r0, lsr r5
     b9c:	40530001 	subsmi	r0, r3, r1
     ba0:	53000005 	movwpl	r0, #5
     ba4:	01000005 	tsteq	r0, r5
     ba8:	05765300 	ldrbeq	r5, [r6, #-768]!	; 0xfffffd00
     bac:	05800000 	streq	r0, [r0]
     bb0:	00010000 	andeq	r0, r1, r0
     bb4:	00058053 	andeq	r8, r5, r3, asr r0
     bb8:	00059300 	andeq	r9, r5, r0, lsl #6
     bbc:	03000b00 	movweq	r0, #2816	; 0xb00
     bc0:	2000000c 	andcs	r0, r0, ip
     bc4:	7f080194 	svcvc	0x00080194
     bc8:	05969f1a 	ldreq	r9, [r6, #3866]	; 0xf1a
     bcc:	05a20000 	streq	r0, [r2, #0]!
     bd0:	00010000 	andeq	r0, r1, r0
     bd4:	0005aa53 	andeq	sl, r5, r3, asr sl
     bd8:	0005bd00 	andeq	fp, r5, r0, lsl #26
     bdc:	53000100 	movwpl	r0, #256	; 0x100
	...
     be8:	052c0001 	streq	r0, [ip, #-1]!
     bec:	05300000 	ldreq	r0, [r0, #-0]!
     bf0:	00020000 	andeq	r0, r2, r0
     bf4:	00009f32 	andeq	r9, r0, r2, lsr pc
     bf8:	00000000 	andeq	r0, r0, r0
     bfc:	00010000 	andeq	r0, r1, r0
     c00:	0000052c 	andeq	r0, r0, ip, lsr #10
     c04:	00000530 	andeq	r0, r0, r0, lsr r5
     c08:	2c030006 	stccs	0, cr0, [r3], {6}
     c0c:	9f08000d 	svcls	0x0008000d
	...
     c18:	052c0001 	streq	r0, [ip, #-1]!
     c1c:	05300000 	ldreq	r0, [r0, #-0]!
     c20:	00020000 	andeq	r0, r2, r0
     c24:	00009f30 	andeq	r9, r0, r0, lsr pc
     c28:	00000000 	andeq	r0, r0, r0
     c2c:	00010000 	andeq	r0, r1, r0
     c30:	00000564 	andeq	r0, r0, r4, ror #10
     c34:	00000571 	andeq	r0, r0, r1, ror r5
     c38:	6a910002 	bvs	fe440c48 <BootRAM+0xd3b13e9>
	...
     c44:	05640001 	strbeq	r0, [r4, #-1]!
     c48:	05710000 	ldrbeq	r0, [r1, #-0]!
     c4c:	00020000 	andeq	r0, r2, r0
     c50:	00006c91 	muleq	r0, r1, ip
     c54:	00000000 	andeq	r0, r0, r0
     c58:	00010000 	andeq	r0, r1, r0
     c5c:	00000576 	andeq	r0, r0, r6, ror r5
     c60:	0000057e 	andeq	r0, r0, lr, ror r5
     c64:	9f310002 	svcls	0x00310002
	...
     c70:	05760001 	ldrbeq	r0, [r6, #-1]!
     c74:	057e0000 	ldrbeq	r0, [lr, #-0]!
     c78:	00060000 	andeq	r0, r6, r0
     c7c:	00001603 	andeq	r1, r0, r3, lsl #12
     c80:	00009f20 	andeq	r9, r0, r0, lsr #30
     c84:	00000000 	andeq	r0, r0, r0
     c88:	00010000 	andeq	r0, r1, r0
     c8c:	00000576 	andeq	r0, r0, r6, ror r5
     c90:	0000057e 	andeq	r0, r0, lr, ror r5
     c94:	9f300002 	svcls	0x00300002
	...
     ca0:	05060002 	streq	r0, [r6, #-2]
     ca4:	05100000 	ldreq	r0, [r0, #-0]
     ca8:	00020000 	andeq	r0, r2, r0
     cac:	00009f30 	andeq	r9, r0, r0, lsr pc
     cb0:	00000000 	andeq	r0, r0, r0
     cb4:	00020000 	andeq	r0, r2, r0
     cb8:	00000506 	andeq	r0, r0, r6, lsl #10
     cbc:	00000510 	andeq	r0, r0, r0, lsl r5
     cc0:	0c030006 	stceq	0, cr0, [r3], {6}
     cc4:	9f200000 	svcls	0x00200000
	...
     cd0:	05a20005 	streq	r0, [r2, #5]!
     cd4:	05aa0000 	streq	r0, [sl, #0]!
     cd8:	00020000 	andeq	r0, r2, r0
     cdc:	00009f30 	andeq	r9, r0, r0, lsr pc
     ce0:	00000000 	andeq	r0, r0, r0
     ce4:	03010000 	movweq	r0, #4096	; 0x1000
     ce8:	000005a2 	andeq	r0, r0, r2, lsr #11
     cec:	000005a2 	andeq	r0, r0, r2, lsr #11
     cf0:	9f300002 	svcls	0x00300002
	...
     cfc:	05b20001 	ldreq	r0, [r2, #1]!
     d00:	05b40000 	ldreq	r0, [r4, #0]!
     d04:	00020000 	andeq	r0, r2, r0
     d08:	00009f30 	andeq	r9, r0, r0, lsr pc
     d0c:	00000000 	andeq	r0, r0, r0
     d10:	04300000 	ldrteq	r0, [r0], #-0
     d14:	04320000 	ldrteq	r0, [r2], #-0
     d18:	00020000 	andeq	r0, r2, r0
     d1c:	0432007d 	ldrteq	r0, [r2], #-125	; 0xffffff83
     d20:	048c0000 	streq	r0, [ip], #0
     d24:	00020000 	andeq	r0, r2, r0
     d28:	0000187d 	andeq	r1, r0, sp, ror r8
	...
     d34:	04300000 	ldrteq	r0, [r0], #-0
     d38:	04680000 	strbteq	r0, [r8], #-0
     d3c:	00010000 	andeq	r0, r1, r0
     d40:	00046850 	andeq	r6, r4, r0, asr r8
     d44:	00048c00 	andeq	r8, r4, r0, lsl #24
     d48:	f3000400 	vshl.u8	d0, d0, d0
     d4c:	009f5001 	addseq	r5, pc, r1
	...
     d58:	5c000000 	stcpl	0, cr0, [r0], {-0}
     d5c:	66000004 	strvs	r0, [r0], -r4
     d60:	01000004 	tsteq	r0, r4
     d64:	04665700 	strbteq	r5, [r6], #-1792	; 0xfffff900
     d68:	04800000 	streq	r0, [r0], #0
     d6c:	00010000 	andeq	r0, r1, r0
     d70:	00000056 	andeq	r0, r0, r6, asr r0
     d74:	00000000 	andeq	r0, r0, r0
     d78:	66000200 	strvs	r0, [r0], -r0, lsl #4
     d7c:	6e000004 	cdpvs	0, 0, cr0, cr0, cr4, {0}
     d80:	01000004 	tsteq	r0, r4
     d84:	00005600 	andeq	r5, r0, r0, lsl #12
     d88:	00000000 	andeq	r0, r0, r0
     d8c:	00020000 	andeq	r0, r2, r0
     d90:	00000466 	andeq	r0, r0, r6, ror #8
     d94:	0000046e 	andeq	r0, r0, lr, ror #8
     d98:	00510001 	subseq	r0, r1, r1
     d9c:	00000000 	andeq	r0, r0, r0
     da0:	02000000 	andeq	r0, r0, #0
     da4:	00046600 	andeq	r6, r4, r0, lsl #12
     da8:	00046e00 	andeq	r6, r4, r0, lsl #28
     dac:	30000200 	andcc	r0, r0, r0, lsl #4
     db0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     db4:	00000000 	andeq	r0, r0, r0
     db8:	00000200 	andeq	r0, r0, r0, lsl #4
     dbc:	00000000 	andeq	r0, r0, r0
     dc0:	00003200 	andeq	r3, r0, r0, lsl #4
     dc4:	00003400 	andeq	r3, r0, r0, lsl #8
     dc8:	30000200 	andcc	r0, r0, r0, lsl #4
     dcc:	0000349f 	muleq	r0, pc, r4	; <UNPREDICTABLE>
     dd0:	00003600 	andeq	r3, r0, r0, lsl #12
     dd4:	0c000900 			; <UNDEFINED> instruction: 0x0c000900
     dd8:	000186a0 	andeq	r8, r1, r0, lsr #13
     ddc:	9f1c0072 	svcls	0x001c0072
     de0:	00000036 	andeq	r0, r0, r6, lsr r0
     de4:	00000038 	andeq	r0, r0, r8, lsr r0
     de8:	a10c0009 	tstge	ip, r9
     dec:	72000186 	andvc	r0, r0, #-2147483615	; 0x80000021
     df0:	389f1c00 	ldmcc	pc, {sl, fp, ip}	; <UNPREDICTABLE>
     df4:	4e000000 	cdpmi	0, 0, cr0, cr0, cr0, {0}
     df8:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
     dfc:	86a00c00 	strthi	r0, [r0], r0, lsl #24
     e00:	00720001 	rsbseq	r0, r2, r1
     e04:	00009f1c 	andeq	r9, r0, ip, lsl pc
     e08:	00000000 	andeq	r0, r0, r0
     e0c:	00010000 	andeq	r0, r1, r0
     e10:	00000052 	andeq	r0, r0, r2, asr r0
     e14:	0000005a 	andeq	r0, r0, sl, asr r0
     e18:	9f440002 	svcls	0x00440002
	...
     e28:	0000000a 	andeq	r0, r0, sl
     e2c:	0000000c 	andeq	r0, r0, ip
     e30:	0c500001 	mrrceq	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
     e34:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
     e38:	04000000 	streq	r0, [r0], #-0
     e3c:	5001f300 	andpl	pc, r1, r0, lsl #6
     e40:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     e4c:	00000600 	andeq	r0, r0, r0, lsl #12
     e50:	00000800 	andeq	r0, r0, r0, lsl #16
     e54:	50000100 	andpl	r0, r0, r0, lsl #2
     e58:	00000008 	andeq	r0, r0, r8
     e5c:	0000000a 	andeq	r0, r0, sl
     e60:	01f30004 	mvnseq	r0, r4
     e64:	00009f50 	andeq	r9, r0, r0, asr pc
     e68:	00000000 	andeq	r0, r0, r0
     e6c:	01580000 	cmpeq	r8, r0
     e70:	015a0000 	cmpeq	sl, r0
     e74:	00020000 	andeq	r0, r2, r0
     e78:	015a007d 	cmpeq	sl, sp, ror r0
     e7c:	01a40000 			; <UNDEFINED> instruction: 0x01a40000
     e80:	00020000 	andeq	r0, r2, r0
     e84:	0000087d 	andeq	r0, r0, sp, ror r8
     e88:	00000000 	andeq	r0, r0, r0
     e8c:	00010000 	andeq	r0, r1, r0
     e90:	0000018e 	andeq	r0, r0, lr, lsl #3
     e94:	00000190 	muleq	r0, r0, r1
     e98:	9f4e0002 	svcls	0x004e0002
	...
     ea4:	000000a4 	andeq	r0, r0, r4, lsr #1
     ea8:	000000a8 	andeq	r0, r0, r8, lsr #1
     eac:	007d0002 	rsbseq	r0, sp, r2
     eb0:	000000a8 	andeq	r0, r0, r8, lsr #1
     eb4:	000000ac 	andeq	r0, r0, ip, lsr #1
     eb8:	1c7d0002 	ldclne	0, cr0, [sp], #-8
     ebc:	000000ac 	andeq	r0, r0, ip, lsr #1
     ec0:	000000f8 	strdeq	r0, [r0], -r8
     ec4:	a07d0003 	rsbsge	r0, sp, r3
     ec8:	0000f801 	andeq	pc, r0, r1, lsl #16
     ecc:	0000fc00 	andeq	pc, r0, r0, lsl #24
     ed0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     ed4:	0000fc1c 	andeq	pc, r0, ip, lsl ip	; <UNPREDICTABLE>
     ed8:	00013c00 	andeq	r3, r1, r0, lsl #24
     edc:	7d000300 	stcvc	3, cr0, [r0, #-0]
     ee0:	000001a0 	andeq	r0, r0, r0, lsr #3
	...
     eec:	00a40000 	adceq	r0, r4, r0
     ef0:	00ce0000 	sbceq	r0, lr, r0
     ef4:	00010000 	andeq	r0, r1, r0
     ef8:	0000ce50 	andeq	ip, r0, r0, asr lr
     efc:	00013c00 	andeq	r3, r1, r0, lsl #24
     f00:	f3000400 	vshl.u8	d0, d0, d0
     f04:	009f5001 	addseq	r5, pc, r1
	...
     f10:	ce000000 	cdpgt	0, 0, cr0, cr0, cr0, {0}
     f14:	2a000000 	bcs	f1c <_Min_Stack_Size+0xb1c>
     f18:	01000001 	tsteq	r0, r1
     f1c:	012a5700 			; <UNDEFINED> instruction: 0x012a5700
     f20:	012c0000 			; <UNDEFINED> instruction: 0x012c0000
     f24:	00030000 	andeq	r0, r3, r0
     f28:	009f0177 	addseq	r0, pc, r7, ror r1	; <UNPREDICTABLE>
     f2c:	00000000 	andeq	r0, r0, r0
     f30:	01000000 	mrseq	r0, (UNDEF: 0)
     f34:	0000de00 	andeq	sp, r0, r0, lsl #28
     f38:	0000f200 	andeq	pc, r0, r0, lsl #4
     f3c:	31000200 	mrscc	r0, R8_usr
     f40:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     f44:	00000000 	andeq	r0, r0, r0
     f48:	de000000 	cdple	0, 0, cr0, cr0, cr0, {0}
     f4c:	e2000000 	and	r0, r0, #0
     f50:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     f54:	08007200 	stmdaeq	r0, {r9, ip, sp, lr}
     f58:	24311aff 	ldrtcs	r1, [r1], #-2815	; 0xfffff501
     f5c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     f60:	00000000 	andeq	r0, r0, r0
     f64:	da000100 	ble	136c <_Min_Stack_Size+0xf6c>
     f68:	f2000000 	vhadd.s8	d0, d0, d0
     f6c:	01000000 	mrseq	r0, (UNDEF: 0)
     f70:	00005d00 	andeq	r5, r0, r0, lsl #26
	...
     f7c:	000000e0 	andeq	r0, r0, r0, ror #1
     f80:	000000e6 	andeq	r0, r0, r6, ror #1
     f84:	0070000a 	rsbseq	r0, r0, sl
     f88:	401a4008 	andsmi	r4, sl, r8
     f8c:	9f293024 	svcls	0x00293024
	...
     f98:	00000080 	andeq	r0, r0, r0, lsl #1
     f9c:	00000082 	andeq	r0, r0, r2, lsl #1
     fa0:	007d0002 	rsbseq	r0, sp, r2
     fa4:	00000082 	andeq	r0, r0, r2, lsl #1
     fa8:	00000088 	andeq	r0, r0, r8, lsl #1
     fac:	087d0002 	ldmdaeq	sp!, {r1}^
     fb0:	00000088 	andeq	r0, r0, r8, lsl #1
     fb4:	0000009c 	muleq	r0, ip, r0
     fb8:	887d0003 	ldmdahi	sp!, {r0, r1}^
     fbc:	00009c04 	andeq	r9, r0, r4, lsl #24
     fc0:	0000a400 	andeq	sl, r0, r0, lsl #8
     fc4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     fc8:	00000008 	andeq	r0, r0, r8
	...
     fd4:	00008000 	andeq	r8, r0, r0
     fd8:	00009000 	andeq	r9, r0, r0
     fdc:	50000100 	andpl	r0, r0, r0, lsl #2
     fe0:	00000090 	muleq	r0, r0, r0
     fe4:	000000a4 	andeq	r0, r0, r4, lsr #1
     fe8:	01f30004 	mvnseq	r0, r4
     fec:	00009f50 	andeq	r9, r0, r0, asr pc
	...
     ff8:	007c0000 	rsbseq	r0, ip, r0
     ffc:	007e0000 	rsbseq	r0, lr, r0
    1000:	00010000 	andeq	r0, r1, r0
    1004:	00007e50 	andeq	r7, r0, r0, asr lr
    1008:	00008000 	andeq	r8, r0, r0
    100c:	f3000400 	vshl.u8	d0, d0, d0
    1010:	009f5001 	addseq	r5, pc, r1
	...
    1024:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    1028:	01000000 	mrseq	r0, (UNDEF: 0)
    102c:	00285000 	eoreq	r5, r8, r0
    1030:	002c0000 	eoreq	r0, ip, r0
    1034:	00040000 	andeq	r0, r4, r0
    1038:	9f5001f3 	svcls	0x005001f3
    103c:	0000002c 	andeq	r0, r0, ip, lsr #32
    1040:	0000003e 	andeq	r0, r0, lr, lsr r0
    1044:	3e500001 	cdpcc	0, 5, cr0, cr0, cr1, {0}
    1048:	7c000000 	stcvc	0, cr0, [r0], {-0}
    104c:	04000000 	streq	r0, [r0], #-0
    1050:	5001f300 	andpl	pc, r1, r0, lsl #6
    1054:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    1064:	00000800 	andeq	r0, r0, r0, lsl #16
    1068:	00000a00 	andeq	r0, r0, r0, lsl #20
    106c:	76000500 	strvc	r0, [r0], -r0, lsl #10
    1070:	9f263200 	svcls	0x00263200
    1074:	0000000a 	andeq	r0, r0, sl
    1078:	0000001c 	andeq	r0, r0, ip, lsl r0
    107c:	24560001 	ldrbcs	r0, [r6], #-1
    1080:	26000000 	strcs	r0, [r0], -r0
    1084:	05000000 	streq	r0, [r0, #-0]
    1088:	32007600 	andcc	r7, r0, #0, 12
    108c:	00269f26 	eoreq	r9, r6, r6, lsr #30
    1090:	00380000 	eorseq	r0, r8, r0
    1094:	00010000 	andeq	r0, r1, r0
    1098:	00000056 	andeq	r0, r0, r6, asr r0
    109c:	00000000 	andeq	r0, r0, r0
    10a0:	00000100 	andeq	r0, r0, r0, lsl #2
    10a4:	00000000 	andeq	r0, r0, r0
    10a8:	00000100 	andeq	r0, r0, r0, lsl #2
    10ac:	00000000 	andeq	r0, r0, r0
    10b0:	00000800 	andeq	r0, r0, r0, lsl #16
    10b4:	00000e00 	andeq	r0, r0, r0, lsl #28
    10b8:	30000200 	andcc	r0, r0, r0, lsl #4
    10bc:	00000e9f 	muleq	r0, pc, lr	; <UNPREDICTABLE>
    10c0:	00001000 	andeq	r1, r0, r0
    10c4:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
    10c8:	00000010 	andeq	r0, r0, r0, lsl r0
    10cc:	00000016 	andeq	r0, r0, r6, lsl r0
    10d0:	7f740003 	svcvc	0x00740003
    10d4:	0000169f 	muleq	r0, pc, r6	; <UNPREDICTABLE>
    10d8:	00001a00 	andeq	r1, r0, r0, lsl #20
    10dc:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
    10e0:	00000024 	andeq	r0, r0, r4, lsr #32
    10e4:	0000002a 	andeq	r0, r0, sl, lsr #32
    10e8:	9f300002 	svcls	0x00300002
    10ec:	0000002a 	andeq	r0, r0, sl, lsr #32
    10f0:	0000002c 	andeq	r0, r0, ip, lsr #32
    10f4:	2c540001 	mrrccs	0, 0, r0, r4, cr1
    10f8:	32000000 	andcc	r0, r0, #0
    10fc:	03000000 	movweq	r0, #0
    1100:	9f7f7400 	svcls	0x007f7400
    1104:	00000032 	andeq	r0, r0, r2, lsr r0
    1108:	00000036 	andeq	r0, r0, r6, lsr r0
    110c:	00540001 	subseq	r0, r4, r1
    1110:	00000000 	andeq	r0, r0, r0
    1114:	Address 0x0000000000001114 is out of bounds.


Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	08000150 	stmdaeq	r0, {r4, r6, r8}
  14:	00000214 	andeq	r0, r0, r4, lsl r2
  18:	08000ca8 	stmdaeq	r0, {r3, r5, r7, sl, fp}
  1c:	00000084 	andeq	r0, r0, r4, lsl #1
	...
  28:	0000001c 	andeq	r0, r0, ip, lsl r0
  2c:	092c0002 	stmdbeq	ip!, {r1}
  30:	00040000 	andeq	r0, r4, r0
  34:	00000000 	andeq	r0, r0, r0
  38:	08000364 	stmdaeq	r0, {r2, r5, r6, r8, r9}
  3c:	00000600 	andeq	r0, r0, r0, lsl #12
	...
  48:	0000001c 	andeq	r0, r0, ip, lsl r0
  4c:	1b9c0002 	blne	fe70005c <BootRAM+0xd6707fd>
  50:	00040000 	andeq	r0, r4, r0
  54:	00000000 	andeq	r0, r0, r0
  58:	08000964 	stmdaeq	r0, {r2, r5, r6, r8, fp}
  5c:	000001c4 	andeq	r0, r0, r4, asr #3
	...
  68:	0000001c 	andeq	r0, r0, ip, lsl r0
  6c:	334e0002 	movtcc	r0, #57346	; 0xe002
  70:	00040000 	andeq	r0, r4, r0
  74:	00000000 	andeq	r0, r0, r0
  78:	08000b28 	stmdaeq	r0, {r3, r5, r8, r9, fp}
  7c:	00000048 	andeq	r0, r0, r8, asr #32
	...
  88:	0000001c 	andeq	r0, r0, ip, lsl r0
  8c:	34680002 	strbtcc	r0, [r8], #-2
  90:	00040000 	andeq	r0, r4, r0
  94:	00000000 	andeq	r0, r0, r0
  98:	08000b70 	stmdaeq	r0, {r4, r5, r6, r8, r9, fp}
  9c:	000000ec 	andeq	r0, r0, ip, ror #1
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	08000150 	stmdaeq	r0, {r4, r6, r8}
   4:	08000364 	stmdaeq	r0, {r2, r5, r6, r8, r9}
   8:	08000ca8 	stmdaeq	r0, {r3, r5, r7, sl, fp}
   c:	08000d2c 	stmdaeq	r0, {r2, r3, r5, r8, sl, fp}
	...
  18:	00000032 	andeq	r0, r0, r2, lsr r0
  1c:	00000032 	andeq	r0, r0, r2, lsr r0
  20:	00000034 	andeq	r0, r0, r4, lsr r0
  24:	0000003a 	andeq	r0, r0, sl, lsr r0
	...
  30:	000002d6 	ldrdeq	r0, [r0], -r6
  34:	000002d8 	ldrdeq	r0, [r0], -r8
  38:	000002dc 	ldrdeq	r0, [r0], -ip
  3c:	000002dc 	ldrdeq	r0, [r0], -ip
  40:	000002e0 	andeq	r0, r0, r0, ror #5
  44:	000002f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
	...
  50:	000003de 	ldrdeq	r0, [r0], -lr
  54:	000003e0 	andeq	r0, r0, r0, ror #7
  58:	000003fa 	strdeq	r0, [r0], -sl
  5c:	00000400 	andeq	r0, r0, r0, lsl #8
  60:	00000424 	andeq	r0, r0, r4, lsr #8
  64:	00000430 	andeq	r0, r0, r0, lsr r4
	...
  70:	0000045c 	andeq	r0, r0, ip, asr r4
  74:	00000466 	andeq	r0, r0, r6, ror #8
  78:	00000466 	andeq	r0, r0, r6, ror #8
  7c:	0000046e 	andeq	r0, r0, lr, ror #8
	...
  88:	000004b0 			; <UNDEFINED> instruction: 0x000004b0
  8c:	000004b0 			; <UNDEFINED> instruction: 0x000004b0
  90:	000004b8 			; <UNDEFINED> instruction: 0x000004b8
  94:	000004c4 	andeq	r0, r0, r4, asr #9
	...
  a0:	00000506 	andeq	r0, r0, r6, lsl #10
  a4:	00000506 	andeq	r0, r0, r6, lsl #10
  a8:	00000508 	andeq	r0, r0, r8, lsl #10
  ac:	00000510 	andeq	r0, r0, r0, lsl r5
	...
  b8:	0000051c 	andeq	r0, r0, ip, lsl r5
  bc:	00000530 	andeq	r0, r0, r0, lsr r5
  c0:	00000540 	andeq	r0, r0, r0, asr #10
  c4:	00000572 	andeq	r0, r0, r2, ror r5
  c8:	00000576 	andeq	r0, r0, r6, ror r5
  cc:	00000596 	muleq	r0, r6, r5
	...
  d8:	0000055a 	andeq	r0, r0, sl, asr r5
  dc:	0000055c 	andeq	r0, r0, ip, asr r5
  e0:	00000564 	andeq	r0, r0, r4, ror #10
  e4:	00000572 	andeq	r0, r0, r2, ror r5
	...
  f0:	00000530 	andeq	r0, r0, r0, lsr r5
  f4:	00000536 	andeq	r0, r0, r6, lsr r5
  f8:	000005a2 	andeq	r0, r0, r2, lsr #11
  fc:	000005aa 	andeq	r0, r0, sl, lsr #11
	...
 108:	000000c0 	andeq	r0, r0, r0, asr #1
 10c:	000000c4 	andeq	r0, r0, r4, asr #1
 110:	000000c6 	andeq	r0, r0, r6, asr #1
 114:	000000da 	ldrdeq	r0, [r0], -sl
 118:	000000fc 	strdeq	r0, [r0], -ip
 11c:	0000013c 	andeq	r0, r0, ip, lsr r1
	...
 128:	000000da 	ldrdeq	r0, [r0], -sl
 12c:	000000dc 	ldrdeq	r0, [r0], -ip
 130:	000000de 	ldrdeq	r0, [r0], -lr
 134:	000000f2 	strdeq	r0, [r0], -r2
	...
 140:	00000168 	andeq	r0, r0, r8, ror #2
 144:	0000016c 	andeq	r0, r0, ip, ror #2
 148:	0000016e 	andeq	r0, r0, lr, ror #2
 14c:	00000170 	andeq	r0, r0, r0, ror r1
 150:	0000018e 	andeq	r0, r0, lr, lsl #3
 154:	00000190 	muleq	r0, r0, r1
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
       0:	0000042f 	andeq	r0, r0, pc, lsr #8
       4:	00af0003 	adceq	r0, pc, r3
       8:	01020000 	mrseq	r0, (UNDEF: 2)
       c:	000d0efb 	strdeq	r0, [sp], -fp
      10:	01010101 	tsteq	r1, r1, lsl #2
      14:	01000000 	mrseq	r0, (UNDEF: 0)
      18:	73010000 	movwvc	r0, #4096	; 0x1000
      1c:	6c006372 	stcvs	3, cr6, [r0], {114}	; 0x72
      20:	692f6269 	stmdbvs	pc!, {r0, r3, r5, r6, r9, sp, lr}	; <UNPREDICTABLE>
      24:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
      28:	2f006564 	svccs	0x00006564
      2c:	2f727375 	svccs	0x00727375
      30:	2f62696c 	svccs	0x0062696c
      34:	2f636367 	svccs	0x00636367
      38:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
      3c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
      40:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
      44:	2e382f69 	cdpcs	15, 3, cr2, cr8, cr9, {3}
      48:	2f312e33 	svccs	0x00312e33
      4c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
      50:	00656475 	rsbeq	r6, r5, r5, ror r4
      54:	6f6c6300 	svcvs	0x006c6300
      58:	682e6b63 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
      5c:	00000100 	andeq	r0, r0, r0, lsl #2
      60:	6e69616d 	powvsez	f6, f1, #5.0
      64:	0100632e 	tsteq	r0, lr, lsr #6
      68:	6f630000 	svcvs	0x00630000
      6c:	635f6572 	cmpvs	pc, #478150656	; 0x1c800000
      70:	682e336d 	stmdavs	lr!, {r0, r2, r3, r5, r6, r8, r9, ip, sp}
      74:	00000200 	andeq	r0, r0, r0, lsl #4
      78:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
      7c:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
      80:	00000300 	andeq	r0, r0, r0, lsl #6
      84:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
      88:	735f6d65 	cmpvc	pc, #6464	; 0x1940
      8c:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
      90:	7878316c 	ldmdavc	r8!, {r2, r3, r5, r6, r8, ip, sp}^
      94:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
      98:	74730000 	ldrbtvc	r0, [r3], #-0
      9c:	6c32336d 	ldcvs	3, cr3, [r2], #-436	; 0xfffffe4c
      a0:	78313531 	ldmdavc	r1!, {r0, r4, r5, r8, sl, ip, sp}
      a4:	00682e63 	rsbeq	r2, r8, r3, ror #28
      a8:	75000002 	strvc	r0, [r0, #-2]
      ac:	6c5f6273 	lfmvs	f6, 2, [pc], {115}	; 0x73
      b0:	682e6269 	stmdavs	lr!, {r0, r3, r5, r6, r9, sp, lr}
      b4:	00000100 	andeq	r0, r0, r0, lsl #2
      b8:	001c0500 	andseq	r0, ip, r0, lsl #10
      bc:	01500205 	cmpeq	r0, r5, lsl #4
      c0:	17030800 	strne	r0, [r3, -r0, lsl #16]
      c4:	13030501 	movwne	r0, #13569	; 0x3501
      c8:	01061005 	tsteq	r6, r5
      cc:	05210b05 	streq	r0, [r1, #-2821]!	; 0xfffff4fb
      d0:	03051f10 	movweq	r1, #24336	; 0x5f10
      d4:	0b054b06 	bleq	152cf4 <_Min_Stack_Size+0x1528f4>
      d8:	03050106 	movweq	r0, #20742	; 0x5106
      dc:	14144c06 	ldrne	r4, [r4], #-3078	; 0xfffff3fa
      e0:	01060c05 	tsteq	r6, r5, lsl #24
      e4:	4b060305 	blmi	180d00 <_Min_Stack_Size+0x180900>
      e8:	01060c05 	tsteq	r6, r5, lsl #24
      ec:	4d060305 	stcmi	3, cr0, [r6, #-20]	; 0xffffffec
      f0:	01060c05 	tsteq	r6, r5, lsl #24
      f4:	4a061e05 	bmi	187910 <_Min_Stack_Size+0x187510>
      f8:	02004205 	andeq	r4, r0, #1342177280	; 0x50000000
      fc:	05010204 	streq	r0, [r1, #-516]	; 0xfffffdfc
     100:	04020029 	streq	r0, [r2], #-41	; 0xffffffd7
     104:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
     108:	04020023 	streq	r0, [r2], #-35	; 0xffffffdd
     10c:	03052002 	movweq	r2, #20482	; 0x5002
     110:	0c053306 	stceq	3, cr3, [r5], {6}
     114:	03050106 	movweq	r0, #20742	; 0x5106
     118:	0c054c06 	stceq	12, cr4, [r5], {6}
     11c:	03050106 	movweq	r0, #20742	; 0x5106
     120:	0c054e06 	stceq	14, cr4, [r5], {6}
     124:	03050106 	movweq	r0, #20742	; 0x5106
     128:	0c054c06 	stceq	12, cr4, [r5], {6}
     12c:	03050106 	movweq	r0, #20742	; 0x5106
     130:	0c053d06 	stceq	13, cr3, [r5], {6}
     134:	03050106 	movweq	r0, #20742	; 0x5106
     138:	0c052f06 	stceq	15, cr2, [r5], {6}
     13c:	03050106 	movweq	r0, #20742	; 0x5106
     140:	26054b06 	strcs	r4, [r5], -r6, lsl #22
     144:	01040200 	mrseq	r0, R12_usr
     148:	000e0501 	andeq	r0, lr, r1, lsl #10
     14c:	06010402 	streq	r0, [r1], -r2, lsl #8
     150:	00080501 	andeq	r0, r8, r1, lsl #10
     154:	20010402 	andcs	r0, r1, r2, lsl #8
     158:	30060305 	andcc	r0, r6, r5, lsl #6
     15c:	01060d05 	tsteq	r6, r5, lsl #26
     160:	4c060305 	stcmi	3, cr0, [r6], {5}
     164:	01060d05 	tsteq	r6, r5, lsl #26
     168:	4b060305 	blmi	180d84 <_Min_Stack_Size+0x180984>
     16c:	01060d05 	tsteq	r6, r5, lsl #26
     170:	03060305 	movweq	r0, #25349	; 0x6305
     174:	0c054a0b 			; <UNDEFINED> instruction: 0x0c054a0b
     178:	03050106 	movweq	r0, #20742	; 0x5106
     17c:	0c054b06 			; <UNDEFINED> instruction: 0x0c054b06
     180:	01050106 	tsteq	r5, r6, lsl #2
     184:	061f052f 	ldreq	r0, [pc], -pc, lsr #10
     188:	13030592 	movwne	r0, #13714	; 0x3592
     18c:	07051513 	smladeq	r5, r3, r5, r1
     190:	03050106 	movweq	r0, #20742	; 0x5106
     194:	07052f06 	streq	r2, [r5, -r6, lsl #30]
     198:	03050106 	movweq	r0, #20742	; 0x5106
     19c:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
     1a0:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     1a4:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
     1a8:	0511060d 	ldreq	r0, [r1, #-1549]	; 0xfffff9f3
     1ac:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
     1b0:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
     1b4:	203c2007 	eorscs	r2, ip, r7
     1b8:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
     1bc:	051f0204 	ldreq	r0, [pc, #-516]	; ffffffc0 <BootRAM+0xef70761>
     1c0:	202e3119 	eorcs	r3, lr, r9, lsl r1
     1c4:	03060305 	movweq	r0, #25349	; 0x6305
     1c8:	0e05201d 	mcreq	0, 0, r2, cr5, cr13, {0}
     1cc:	03050106 	movweq	r0, #20742	; 0x5106
     1d0:	0e055906 	vmlaeq.f16	s10, s10, s12	; <UNPREDICTABLE>
     1d4:	03050106 	movweq	r0, #20742	; 0x5106
     1d8:	0e054b06 	vmlaeq.f64	d4, d5, d6
     1dc:	03050106 	movweq	r0, #20742	; 0x5106
     1e0:	07054d06 	streq	r4, [r5, -r6, lsl #26]
     1e4:	03050106 	movweq	r0, #20742	; 0x5106
     1e8:	07052f06 	streq	r2, [r5, -r6, lsl #30]
     1ec:	03050106 	movweq	r0, #20742	; 0x5106
     1f0:	05053006 	streq	r3, [r5, #-6]
     1f4:	21060106 	tstcs	r6, r6, lsl #2
     1f8:	09051313 	stmdbeq	r5, {r0, r1, r4, r8, r9, ip}
     1fc:	03050106 	movweq	r0, #20742	; 0x5106
     200:	14133406 	ldrne	r3, [r3], #-1030	; 0xfffffbfa
     204:	07051413 	smladeq	r5, r3, r4, r1
     208:	03050106 	movweq	r0, #20742	; 0x5106
     20c:	05142f06 	ldreq	r2, [r4, #-3846]	; 0xfffff0fa
     210:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     214:	05220603 	streq	r0, [r2, #-1539]!	; 0xfffff9fd
     218:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
     21c:	054b0603 	strbeq	r0, [fp, #-1539]	; 0xfffff9fd
     220:	3011060b 	andscc	r0, r1, fp, lsl #12
     224:	20060505 	andcs	r0, r6, r5, lsl #10
     228:	01060b05 	tsteq	r6, r5, lsl #22
     22c:	2e200705 	cdpcs	7, 2, cr0, cr0, cr5, {0}
     230:	00030520 	andeq	r0, r3, r0, lsr #10
     234:	1f020402 	svcne	0x00020402
     238:	05311905 	ldreq	r1, [r1, #-2309]!	; 0xfffff6fb
     23c:	6d030605 	stcvs	6, cr0, [r3, #-20]	; 0xffffffec
     240:	0905133c 	stmdbeq	r5, {r2, r3, r4, r5, r8, r9, ip}
     244:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
     248:	1b030603 	blne	c1a5c <_Min_Stack_Size+0xc165c>
     24c:	19051420 	stmdbne	r5, {r5, sl, ip}
     250:	01051006 	tsteq	r5, r6
     254:	06030540 	streq	r0, [r3], -r0, asr #10
     258:	14207303 	strtne	r7, [r0], #-771	; 0xfffffcfd
     25c:	01060705 	tsteq	r6, r5, lsl #14
     260:	21060305 	tstcs	r6, r5, lsl #6
     264:	060c0513 			; <UNDEFINED> instruction: 0x060c0513
     268:	1d070515 	cfstr32ne	mvfx0, [r7, #-84]	; 0xffffffac
     26c:	2f060305 	svccs	0x00060305
     270:	01060d05 	tsteq	r6, r5, lsl #26
     274:	21060305 	tstcs	r6, r5, lsl #6
     278:	11060d05 	tstne	r6, r5, lsl #26
     27c:	30060505 	andcc	r0, r6, r5, lsl #10
     280:	01060c05 	tsteq	r6, r5, lsl #24
     284:	05201305 	streq	r1, [r0, #-773]!	; 0xfffffcfb
     288:	202e2e07 	eorcs	r2, lr, r7, lsl #28
     28c:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
     290:	061f0204 	ldreq	r0, [pc], -r4, lsl #4
     294:	3c7fbd03 	ldclcc	13, cr11, [pc], #-12	; 290 <_Min_Heap_Size+0x290>
     298:	060b0515 			; <UNDEFINED> instruction: 0x060b0515
     29c:	06030501 	streq	r0, [r3], -r1, lsl #10
     2a0:	060b054b 	streq	r0, [fp], -fp, asr #10
     2a4:	06030501 	streq	r0, [r3], -r1, lsl #10
     2a8:	060b054b 	streq	r0, [fp], -fp, asr #10
     2ac:	06030501 	streq	r0, [r3], -r1, lsl #10
     2b0:	060b054b 	streq	r0, [fp], -fp, asr #10
     2b4:	06030501 	streq	r0, [r3], -r1, lsl #10
     2b8:	060b054b 	streq	r0, [fp], -fp, asr #10
     2bc:	06030501 	streq	r0, [r3], -r1, lsl #10
     2c0:	060b054b 	streq	r0, [fp], -fp, asr #10
     2c4:	06030501 	streq	r0, [r3], -r1, lsl #10
     2c8:	0605054d 	streq	r0, [r5], -sp, asr #10
     2cc:	05210601 	streq	r0, [r1, #-1537]!	; 0xfffff9ff
     2d0:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     2d4:	054b0605 	strbeq	r0, [fp, #-1541]	; 0xfffff9fb
     2d8:	3011060d 	andscc	r0, r1, sp, lsl #12
     2dc:	20060705 	andcs	r0, r6, r5, lsl #14
     2e0:	01060d05 	tsteq	r6, r5, lsl #26
     2e4:	2e200905 	vmulcs.f16	s0, s0, s10	; <UNPREDICTABLE>
     2e8:	00050520 	andeq	r0, r5, r0, lsr #10
     2ec:	1f020402 	svcne	0x00020402
     2f0:	0d053606 	stceq	6, cr3, [r5, #-24]	; 0xffffffe8
     2f4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     2f8:	0d055906 	vstreq.16	s10, [r5, #-12]	; <UNPREDICTABLE>
     2fc:	07051106 	streq	r1, [r5, -r6, lsl #2]
     300:	0d053006 	stceq	0, cr3, [r5, #-24]	; 0xffffffe8
     304:	09050106 	stmdbeq	r5, {r1, r2, r8}
     308:	05202e20 	streq	r2, [r0, #-3616]!	; 0xfffff1e0
     30c:	04020005 	streq	r0, [r2], #-5
     310:	1b051f02 	blne	147f20 <_Min_Stack_Size+0x147b20>
     314:	06100531 			; <UNDEFINED> instruction: 0x06100531
     318:	059e3303 	ldreq	r3, [lr, #771]	; 0x303
     31c:	15131303 	ldrne	r1, [r3, #-771]	; 0xfffffcfd
     320:	01060705 	tsteq	r6, r5, lsl #14
     324:	2f060305 	svccs	0x00060305
     328:	01060705 	tsteq	r6, r5, lsl #14
     32c:	2f060305 	svccs	0x00060305
     330:	060d0513 			; <UNDEFINED> instruction: 0x060d0513
     334:	06030501 	streq	r0, [r3], -r1, lsl #10
     338:	060d0521 	streq	r0, [sp], -r1, lsr #10
     33c:	06050511 			; <UNDEFINED> instruction: 0x06050511
     340:	060c0530 			; <UNDEFINED> instruction: 0x060c0530
     344:	20070501 	andcs	r0, r7, r1, lsl #10
     348:	0305203c 	movweq	r2, #20540	; 0x503c
     34c:	02040200 	andeq	r0, r4, #0, 4
     350:	053f061f 	ldreq	r0, [pc, #-1567]!	; fffffd39 <BootRAM+0xef704da>
     354:	03050119 	movweq	r0, #20761	; 0x5119
     358:	060b0515 			; <UNDEFINED> instruction: 0x060b0515
     35c:	06030501 	streq	r0, [r3], -r1, lsl #10
     360:	060b054b 	streq	r0, [fp], -fp, asr #10
     364:	06030501 	streq	r0, [r3], -r1, lsl #10
     368:	060b054b 	streq	r0, [fp], -fp, asr #10
     36c:	06030501 	streq	r0, [r3], -r1, lsl #10
     370:	060b054b 	streq	r0, [fp], -fp, asr #10
     374:	4b010501 	blmi	41780 <_Min_Stack_Size+0x41380>
     378:	2c050204 	sfmcs	f0, 4, [r5], {4}
     37c:	7ed50306 	cdpvc	3, 13, cr0, cr5, cr6, {0}
     380:	012d0558 			; <UNDEFINED> instruction: 0x012d0558
     384:	01060105 	tsteq	r6, r5, lsl #2
     388:	22061a05 	andcs	r1, r6, #20480	; 0x5000
     38c:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
     390:	04020008 	streq	r0, [r2], #-8
     394:	00010601 	andeq	r0, r1, r1, lsl #12
     398:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
     39c:	05210105 	streq	r0, [r1, #-261]!	; 0xfffffefb
     3a0:	04020010 	streq	r0, [r2], #-16
     3a4:	021f0602 	andseq	r0, pc, #2097152	; 0x200000
     3a8:	01010002 	tsteq	r1, r2
     3ac:	0f050204 	svceq	0x00050204
     3b0:	a8020500 	stmdage	r2, {r8, sl}
     3b4:	0308000c 	movweq	r0, #32780	; 0x800c
     3b8:	0305010d 	movweq	r0, #20749	; 0x510d
     3bc:	060f0513 			; <UNDEFINED> instruction: 0x060f0513
     3c0:	21030511 	tstcs	r3, r1, lsl r5
     3c4:	0f053d06 	svceq	0x00053d06
     3c8:	03050106 	movweq	r0, #20742	; 0x5106
     3cc:	2e015906 	vmlacs.f16	s10, s2, s12	; <UNPREDICTABLE>
     3d0:	20202e2e 	eorcs	r2, r0, lr, lsr #28
     3d4:	01202e01 			; <UNDEFINED> instruction: 0x01202e01
     3d8:	01011605 	tsteq	r1, r5, lsl #12
     3dc:	202e2e20 	eorcs	r2, lr, r0, lsr #28
     3e0:	202e0120 	eorcs	r0, lr, r0, lsr #2
     3e4:	13030501 	movwne	r0, #13569	; 0x3501
     3e8:	06200601 	strteq	r0, [r0], -r1, lsl #12
     3ec:	20012e20 	andcs	r2, r1, r0, lsr #28
     3f0:	202e0120 	eorcs	r0, lr, r0, lsr #2
     3f4:	01160501 	tsteq	r6, r1, lsl #10
     3f8:	012e2001 			; <UNDEFINED> instruction: 0x012e2001
     3fc:	2e012020 	cdpcs	0, 0, cr2, cr1, cr0, {1}
     400:	03050120 	movweq	r0, #20768	; 0x5120
     404:	03042f14 	movweq	r2, #20244	; 0x4f14
     408:	9f031605 	svcls	0x00031605
     40c:	35050109 	strcc	r0, [r5, #-265]	; 0xfffffef7
     410:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
     414:	e4030605 	str	r0, [r3], #-1541	; 0xfffff9fb
     418:	03052076 	movweq	r2, #20598	; 0x5076
     41c:	01040200 	mrseq	r0, R12_usr
     420:	05051e06 	streq	r1, [r5, #-3590]	; 0xfffff1fa
     424:	01040200 	mrseq	r0, R12_usr
     428:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
     42c:	0d022f01 	stceq	15, cr2, [r2, #-4]
     430:	5c010100 	stfpls	f0, [r1], {-0}
     434:	03000007 	movweq	r0, #7
     438:	0000a700 	andeq	sl, r0, r0, lsl #14
     43c:	fb010200 	blx	40c46 <_Min_Stack_Size+0x40846>
     440:	01000d0e 	tsteq	r0, lr, lsl #26
     444:	00010101 	andeq	r0, r1, r1, lsl #2
     448:	00010000 	andeq	r0, r1, r0
     44c:	72730100 	rsbsvc	r0, r3, #0, 2
     450:	696c0063 	stmdbvs	ip!, {r0, r1, r5, r6}^
     454:	6e692f62 	cdpvs	15, 6, cr2, cr9, cr2, {3}
     458:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     45c:	752f0065 	strvc	r0, [pc, #-101]!	; 3ff <_Min_Heap_Size+0x3ff>
     460:	6c2f7273 	sfmvs	f7, 4, [pc], #-460	; 29c <_Min_Heap_Size+0x29c>
     464:	672f6269 	strvs	r6, [pc, -r9, ror #4]!
     468:	612f6363 			; <UNDEFINED> instruction: 0x612f6363
     46c:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     470:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     474:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     478:	332e382f 			; <UNDEFINED> instruction: 0x332e382f
     47c:	692f312e 	stmdbvs	pc!, {r1, r2, r3, r5, r8, ip, sp}	; <UNPREDICTABLE>
     480:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     484:	00006564 	andeq	r6, r0, r4, ror #10
     488:	5f627375 	svcpl	0x00627375
     48c:	2e62696c 	vnmulcs.f16	s13, s4, s25	; <UNPREDICTABLE>
     490:	00010063 	andeq	r0, r1, r3, rrx
     494:	726f6300 	rsbvc	r6, pc, #0, 6
     498:	6d635f65 	stclvs	15, cr5, [r3, #-404]!	; 0xfffffe6c
     49c:	00682e33 	rsbeq	r2, r8, r3, lsr lr
     4a0:	75000002 	strvc	r0, [r0, #-2]
     4a4:	6c5f6273 	lfmvs	f6, 2, [pc], {115}	; 0x73
     4a8:	682e6269 	stmdavs	lr!, {r0, r3, r5, r6, r9, sp, lr}
     4ac:	00000100 	andeq	r0, r0, r0, lsl #2
     4b0:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
     4b4:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
     4b8:	00000300 	andeq	r0, r0, r0, lsl #6
     4bc:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     4c0:	35316c32 	ldrcc	r6, [r1, #-3122]!	; 0xfffff3ce
     4c4:	2e637831 	mcrcs	8, 3, r7, cr3, cr1, {1}
     4c8:	00020068 	andeq	r0, r2, r8, rrx
     4cc:	73797300 	cmnvc	r9, #0, 6
     4d0:	5f6d6574 	svcpl	0x006d6574
     4d4:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     4d8:	78316c32 	ldmdavc	r1!, {r1, r4, r5, sl, fp, sp, lr}
     4dc:	00682e78 	rsbeq	r2, r8, r8, ror lr
     4e0:	00000002 	andeq	r0, r0, r2
     4e4:	05002b05 	streq	r2, [r0, #-2821]	; 0xfffff4fb
     4e8:	00036402 	andeq	r6, r3, r2, lsl #8
     4ec:	01160308 	tsteq	r6, r8, lsl #6
     4f0:	05012c05 	streq	r2, [r1, #-3077]	; 0xfffff3fb
     4f4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     4f8:	053f065c 	ldreq	r0, [pc, #-1628]!	; fffffea4 <BootRAM+0xef70645>
     4fc:	0105015d 	tsteq	r5, sp, asr r1
     500:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
     504:	05210663 	streq	r0, [r1, #-1635]!	; 0xfffff99d
     508:	01050164 	tsteq	r5, r4, ror #2
     50c:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
     510:	1c030611 	stcne	6, cr0, [r3], {17}
     514:	13030520 	movwne	r0, #13600	; 0x3520
     518:	01061005 	tsteq	r6, r5
     51c:	59060305 	stmdbpl	r6, {r0, r2, r8, r9}
     520:	01061005 	tsteq	r6, r5
     524:	4c060305 	stcmi	3, cr0, [r6], {5}
     528:	01060f05 	tsteq	r6, r5, lsl #30
     52c:	59060305 	stmdbpl	r6, {r0, r2, r8, r9}
     530:	01060f05 	tsteq	r6, r5, lsl #30
     534:	4b060305 	blmi	181150 <_Min_Stack_Size+0x180d50>
     538:	06010705 	streq	r0, [r1], -r5, lsl #14
     53c:	110f0501 	tstne	pc, r1, lsl #10
     540:	02002e05 	andeq	r2, r0, #5, 28	; 0x50
     544:	21060304 	tstcs	r6, r4, lsl #6
     548:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
     54c:	20060304 	andcs	r0, r6, r4, lsl #6
     550:	03040200 	movweq	r0, #16896	; 0x4200
     554:	05210620 	streq	r0, [r1, #-1568]!	; 0xfffff9e0
     558:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
     55c:	052f0603 	streq	r0, [pc, #-1539]!	; ffffff61 <BootRAM+0xef70702>
     560:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
     564:	052f0603 	streq	r0, [pc, #-1539]!	; ffffff69 <BootRAM+0xef7070a>
     568:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
     56c:	052f0603 	streq	r0, [pc, #-1539]!	; ffffff71 <BootRAM+0xef70712>
     570:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
     574:	052f0603 	streq	r0, [pc, #-1539]!	; ffffff79 <BootRAM+0xef7071a>
     578:	2e01060f 	cfmadd32cs	mvax0, mvfx0, mvfx1, mvfx15
     57c:	2f060305 	svccs	0x00060305
     580:	16050204 	strne	r0, [r5], -r4, lsl #4
     584:	010b9b03 	tsteq	fp, r3, lsl #22
     588:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
     58c:	4a010627 	bmi	41e30 <_Min_Stack_Size+0x41a30>
     590:	03050104 	movweq	r0, #20740	; 0x5104
     594:	74e40306 	strbtvc	r0, [r4], #774	; 0x306
     598:	060f0501 	streq	r0, [pc], -r1, lsl #10
     59c:	59010501 	stmdbpl	r1, {r0, r8, sl}
     5a0:	03064f05 	movweq	r4, #28421	; 0x6f05
     5a4:	05ba00e6 	ldreq	r0, [sl, #230]!	; 0xe6
     5a8:	05131303 	ldreq	r1, [r3, #-771]	; 0xfffffcfd
     5ac:	0510064f 	ldreq	r0, [r0, #-1615]	; 0xfffff9b1
     5b0:	03052209 	movweq	r2, #21001	; 0x5209
     5b4:	05053006 	streq	r3, [r5, #-6]
     5b8:	062d5906 	strteq	r5, [sp], -r6, lsl #18
     5bc:	3e060121 	adfccsp	f0, f6, f1
     5c0:	061e222c 	ldreq	r2, [lr], -ip, lsr #4
     5c4:	03050130 	movweq	r0, #20784	; 0x5130
     5c8:	060c0569 	streq	r0, [ip], -r9, ror #10
     5cc:	06030501 	streq	r0, [r3], -r1, lsl #10
     5d0:	06141321 	ldreq	r1, [r4], -r1, lsr #6
     5d4:	2e063c13 	mcrcs	12, 0, r3, cr6, cr3, {0}
     5d8:	054b1905 	strbeq	r1, [fp, #-2309]	; 0xfffff6fb
     5dc:	2e01061d 	mcrcs	6, 0, r0, cr1, cr13, {0}
     5e0:	051e0705 	ldreq	r0, [lr, #-1797]	; 0xfffff8fb
     5e4:	03053312 	movweq	r3, #21266	; 0x5312
     5e8:	12053006 	andne	r3, r5, #6
     5ec:	03052006 	movweq	r2, #20486	; 0x5006
     5f0:	05052206 	streq	r2, [r5, #-518]	; 0xfffffdfa
     5f4:	06583c06 	ldrbeq	r3, [r8], -r6, lsl #24
     5f8:	06230521 	strteq	r0, [r3], -r1, lsr #10
     5fc:	06050501 	streq	r0, [r5], -r1, lsl #10
     600:	06160521 	ldreq	r0, [r6], -r1, lsr #10
     604:	06050501 	streq	r0, [r5], -r1, lsl #10
     608:	2006013d 	andcs	r0, r6, sp, lsr r1
     60c:	0e030c05 	cdpeq	12, 0, cr0, cr3, cr5, {0}
     610:	1e050582 	cfsh32ne	mvfx0, mvfx5, #-62
     614:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
     618:	01060c05 	tsteq	r6, r5, lsl #24
     61c:	05210105 	streq	r0, [r1, #-261]!	; 0xfffffefb
     620:	69030619 	stmdbvs	r3, {r0, r3, r4, r9, sl}
     624:	061d0520 	ldreq	r0, [sp], -r0, lsr #10
     628:	0e052e01 	cdpeq	14, 0, cr2, cr5, cr1, {0}
     62c:	12052106 	andne	r2, r5, #-2147483647	; 0x80000001
     630:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
     634:	09030605 	stmdbeq	r3, {r0, r2, r9, sl}
     638:	06230520 	strteq	r0, [r3], -r0, lsr #10
     63c:	06050501 	streq	r0, [r5], -r1, lsl #10
     640:	06260521 	strteq	r0, [r6], -r1, lsr #10
     644:	1f070513 	svcne	0x00070513
     648:	26052106 	strcs	r2, [r5], -r6, lsl #2
     64c:	31391506 	teqcc	r9, r6, lsl #10
     650:	0607051d 			; <UNDEFINED> instruction: 0x0607051d
     654:	06270521 	strteq	r0, [r7], -r1, lsr #10
     658:	2e330516 	mrccs	5, 1, r0, cr3, cr6, {0}
     65c:	052a2e05 	streq	r2, [sl, #-3589]!	; 0xfffff1fb
     660:	13300607 	teqne	r0, #7340032	; 0x700000
     664:	06330513 			; <UNDEFINED> instruction: 0x06330513
     668:	2e270501 	cfsh64cs	mvdx0, mvdx7, #1
     66c:	4c060505 	cfstr32mi	mvfx0, [r6], {5}
     670:	01061705 	tsteq	r6, r5, lsl #14
     674:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
     678:	05200601 	streq	r0, [r0, #-1537]!	; 0xfffff9ff
     67c:	05e90656 	strbeq	r0, [r9, #1622]!	; 0x656
     680:	05131303 	ldreq	r1, [r3, #-771]	; 0xfffffcfd
     684:	05100656 	ldreq	r0, [r0, #-1622]	; 0xfffff9aa
     688:	09052403 	stmdbeq	r5, {r0, r1, sl, sp}
     68c:	0603052c 	streq	r0, [r3], -ip, lsr #10
     690:	6e060130 	fltvssp	f6, r0
     694:	06207803 	strteq	r7, [r0], -r3, lsl #16
     698:	05a00191 	streq	r0, [r0, #401]!	; 0x191
     69c:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
     6a0:	13210603 			; <UNDEFINED> instruction: 0x13210603
     6a4:	062e0614 			; <UNDEFINED> instruction: 0x062e0614
     6a8:	5919052f 	ldmdbpl	r9, {r0, r1, r2, r3, r5, r8, sl}
     6ac:	01061d05 	tsteq	r6, r5, lsl #26
     6b0:	2e311205 	cdpcs	2, 3, cr1, cr1, cr5, {0}
     6b4:	051b0705 	ldreq	r0, [fp, #-1797]	; 0xfffff8fb
     6b8:	05350603 	ldreq	r0, [r5, #-1539]!	; 0xfffff9fd
     6bc:	052e0612 	streq	r0, [lr, #-1554]!	; 0xfffff9ee
     6c0:	06220603 	strteq	r0, [r2], -r3, lsl #12
     6c4:	2e05053c 	mcrcs	5, 0, r0, cr5, cr12, {1}
     6c8:	05210674 	streq	r0, [r1, #-1652]!	; 0xfffff98c
     6cc:	05010623 	streq	r0, [r1, #-1571]	; 0xfffff9dd
     6d0:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
     6d4:	05010623 	streq	r0, [r1, #-1571]	; 0xfffff9dd
     6d8:	01210605 			; <UNDEFINED> instruction: 0x01210605
     6dc:	0306019f 	movweq	r0, #24991	; 0x619f
     6e0:	0305900d 	movweq	r9, #20493	; 0x500d
     6e4:	14052206 	strne	r2, [r5], #-518	; 0xfffffdfa
     6e8:	0c050106 	stfeqs	f0, [r5], {6}
     6ec:	2b140523 	blcs	501b80 <_Min_Stack_Size+0x501780>
     6f0:	2f060305 	svccs	0x00060305
     6f4:	01061405 	tsteq	r6, r5, lsl #8
     6f8:	05220c05 	streq	r0, [r2, #-3077]!	; 0xfffff3fb
     6fc:	03051e14 	movweq	r1, #24084	; 0x5e14
     700:	01053006 	tsteq	r5, r6
     704:	19051306 	stmdbne	r5, {r1, r2, r8, r9, ip}
     708:	20640306 	rsbcs	r0, r4, r6, lsl #6
     70c:	01061d05 	tsteq	r6, r5, lsl #26
     710:	060e052e 	streq	r0, [lr], -lr, lsr #10
     714:	06120521 	ldreq	r0, [r2], -r1, lsr #10
     718:	05052e01 	streq	r2, [r5, #-3585]	; 0xfffff1ff
     71c:	200a0306 	andcs	r0, sl, r6, lsl #6
     720:	01062305 	tsteq	r6, r5, lsl #6
     724:	21060505 	tstcs	r6, r5, lsl #10
     728:	13060705 	movwne	r0, #26373	; 0x6705
     72c:	051f2305 	ldreq	r2, [pc, #-773]	; 42f <_Min_Stack_Size+0x2f>
     730:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
     734:	05130647 	ldreq	r0, [r3, #-1607]	; 0xfffff9b9
     738:	21061f07 	tstcs	r6, r7, lsl #30
     73c:	01064705 	tsteq	r6, r5, lsl #14
     740:	053c2605 	ldreq	r2, [ip, #-1541]!	; 0xfffff9fb
     744:	054b0607 	strbeq	r0, [fp, #-1543]	; 0xfffff9f9
     748:	05010650 	streq	r0, [r1, #-1616]	; 0xfffff9b0
     74c:	27053249 	strcs	r3, [r5, -r9, asr #4]
     750:	06050566 	streq	r0, [r5], -r6, ror #10
     754:	019f0168 	orrseq	r0, pc, r8, ror #2
     758:	05990705 	ldreq	r0, [r9, #1797]	; 0x705
     75c:	05010647 	streq	r0, [r1, #-1607]	; 0xfffff9b9
     760:	07053c26 	streq	r3, [r5, -r6, lsr #24]
     764:	05134b06 	ldreq	r4, [r3, #-2822]	; 0xfffff4fa
     768:	05010655 	streq	r0, [r1, #-1621]	; 0xfffff9ab
     76c:	0c030619 	stceq	6, cr0, [r3], {25}
     770:	130305ac 	movwne	r0, #13740	; 0x35ac
     774:	11061905 	tstne	r6, r5, lsl #18
     778:	05210905 	streq	r0, [r1, #-2309]!	; 0xfffff6fb
     77c:	2f063c05 	svccs	0x00063c05
     780:	060f052f 	streq	r0, [pc], -pc, lsr #10
     784:	2f0e0501 	svccs	0x000e0501
     788:	051f0f05 	ldreq	r0, [pc, #-3845]	; fffff88b <BootRAM+0xef7002c>
     78c:	052f0605 	streq	r0, [pc, #-1541]!	; 18f <_Min_Heap_Size+0x18f>
     790:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
     794:	053d0605 	ldreq	r0, [sp, #-1541]!	; 0xfffff9fb
     798:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
     79c:	10052224 	andne	r2, r5, r4, lsr #4
     7a0:	0605051e 			; <UNDEFINED> instruction: 0x0605051e
     7a4:	0109052f 	tsteq	r9, pc, lsr #10
     7a8:	10050106 	andne	r0, r5, r6, lsl #2
     7ac:	00070511 	andeq	r0, r7, r1, lsl r5
     7b0:	06030402 	streq	r0, [r3], -r2, lsl #8
     7b4:	00050530 	andeq	r0, r5, r0, lsr r5
     7b8:	06030402 	streq	r0, [r3], -r2, lsl #8
     7bc:	0024051f 	eoreq	r0, r4, pc, lsl r5
     7c0:	2f030402 	svccs	0x00030402
     7c4:	02001405 	andeq	r1, r0, #83886080	; 0x5000000
     7c8:	052e0304 	streq	r0, [lr, #-772]!	; 0xfffffcfc
     7cc:	04020005 	streq	r0, [r2], #-5
     7d0:	24062d03 	strcs	r2, [r6], #-3331	; 0xfffff2fd
     7d4:	01060f05 	tsteq	r6, r5, lsl #30
     7d8:	053d0505 	ldreq	r0, [sp, #-1285]!	; 0xfffffafb
     7dc:	05051f0f 	streq	r1, [r5, #-3855]	; 0xfffff0f1
     7e0:	67592f06 	ldrbvs	r2, [r9, -r6, lsl #30]
     7e4:	01060d05 	tsteq	r6, r5, lsl #26
     7e8:	2f060505 	svccs	0x00060505
     7ec:	05310305 	ldreq	r0, [r1, #-773]!	; 0xfffffcfb
     7f0:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
     7f4:	2f063c05 	svccs	0x00063c05
     7f8:	01061805 	tsteq	r6, r5, lsl #16
     7fc:	052e0d05 	streq	r0, [lr, #-3333]!	; 0xfffff2fb
     800:	052f0605 	streq	r0, [pc, #-1541]!	; 203 <_Min_Heap_Size+0x203>
     804:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
     808:	2f066607 	svccs	0x00066607
     80c:	01061105 	tsteq	r6, r5, lsl #2
     810:	06200705 	strteq	r0, [r0], -r5, lsl #14
     814:	0505014b 	streq	r0, [r5, #-331]	; 0xfffffeb5
     818:	06080584 	streq	r0, [r8], -r4, lsl #11
     81c:	20070501 	andcs	r0, r7, r1, lsl #10
     820:	10052f06 	andne	r2, r5, r6, lsl #30
     824:	07050106 	streq	r0, [r5, -r6, lsl #2]
     828:	01590620 	cmpeq	r9, r0, lsr #12
     82c:	03058206 	movweq	r8, #20998	; 0x5206
     830:	09051606 	stmdbeq	r5, {r1, r2, r9, sl, ip}
     834:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     838:	2f2f063c 	svccs	0x002f063c
     83c:	01060f05 	tsteq	r6, r5, lsl #30
     840:	67060505 	strvs	r0, [r6, -r5, lsl #10]
     844:	01060f05 	tsteq	r6, r5, lsl #30
     848:	4d060305 	stcmi	3, cr0, [r6, #-20]	; 0xffffffec
     84c:	01060905 	tsteq	r6, r5, lsl #18
     850:	063c0505 	ldrteq	r0, [ip], -r5, lsl #10
     854:	060f052f 	streq	r0, [pc], -pc, lsr #10
     858:	06050501 	streq	r0, [r5], -r1, lsl #10
     85c:	060f0583 	streq	r0, [pc], -r3, lsl #11
     860:	4c010501 	cfstr32mi	mvfx0, [r1], {1}
     864:	03064305 	movweq	r4, #25349	; 0x6305
     868:	0305f20f 	movweq	pc, #21007	; 0x520f	; <UNPREDICTABLE>
     86c:	06430513 			; <UNDEFINED> instruction: 0x06430513
     870:	26030511 			; <UNDEFINED> instruction: 0x26030511
     874:	051b3305 	ldreq	r3, [fp, #-773]	; 0xfffffcfb
     878:	03052010 	movweq	r2, #20496	; 0x5010
     87c:	3f054b06 	svccc	0x00054b06
     880:	17051506 	strne	r1, [r5, -r6, lsl #10]
     884:	2338051d 	teqcs	r8, #121634816	; 0x7400000
     888:	05470c05 	strbeq	r0, [r7, #-3077]	; 0xfffff3fb
     88c:	13220603 			; <UNDEFINED> instruction: 0x13220603
     890:	01063805 	tsteq	r6, r5, lsl #16
     894:	21060305 	tstcs	r6, r5, lsl #6
     898:	05010705 	streq	r0, [r1, #-1797]	; 0xfffff8fb
     89c:	04020003 	streq	r0, [r2], #-3
     8a0:	06010601 	streq	r0, [r1], -r1, lsl #12
     8a4:	2014063f 	andscs	r0, r4, pc, lsr r6
     8a8:	053a1005 	ldreq	r1, [sl, #-5]!
     8ac:	01220603 			; <UNDEFINED> instruction: 0x01220603
     8b0:	01053c06 	tsteq	r5, r6, lsl #24
     8b4:	00050591 	muleq	r5, r1, r5
     8b8:	06030402 	streq	r0, [r3], -r2, lsl #8
     8bc:	0011051b 	andseq	r0, r1, fp, lsl r5
     8c0:	06030402 	streq	r0, [r3], -r2, lsl #8
     8c4:	04020001 	streq	r0, [r2], #-1
     8c8:	02004a03 	andeq	r4, r0, #12288	; 0x3000
     8cc:	05200304 	streq	r0, [r0, #-772]!	; 0xfffffcfc
     8d0:	05000622 	streq	r0, [r0, #-1570]	; 0xfffff9de
     8d4:	00079402 	andeq	r9, r7, r2, lsl #8
     8d8:	7e8a0308 	cdpvc	3, 8, cr0, cr10, cr8, {0}
     8dc:	13030501 	movwne	r0, #13569	; 0x3501
     8e0:	11062205 	tstne	r6, r5, lsl #4
     8e4:	05210b05 	streq	r0, [r1, #-2821]!	; 0xfffff4fb
     8e8:	0b052024 	bleq	148980 <_Min_Stack_Size+0x148580>
     8ec:	2e240520 	cfsh64cs	mvdx0, mvdx4, #16
     8f0:	06200505 	strteq	r0, [r0], -r5, lsl #10
     8f4:	0610053d 			; <UNDEFINED> instruction: 0x0610053d
     8f8:	06030501 	streq	r0, [r3], -r1, lsl #10
     8fc:	0608055b 			; <UNDEFINED> instruction: 0x0608055b
     900:	20050501 	andcs	r0, r5, r1, lsl #10
     904:	4b060305 	blmi	181520 <_Min_Stack_Size+0x181120>
     908:	01060e05 	tsteq	r6, r5, lsl #28
     90c:	05200505 	streq	r0, [r0, #-1285]!	; 0xfffffafb
     910:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
     914:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
     918:	04210603 	strteq	r0, [r1], #-1539	; 0xfffff9fd
     91c:	d9030603 	stmdble	r3, {r0, r1, r9, sl}
     920:	04580100 	ldrbeq	r0, [r8], #-256	; 0xffffff00
     924:	a8030601 	stmdage	r3, {r0, r9, sl}
     928:	0304017f 	movweq	r0, #16767	; 0x417f
     92c:	d7031405 	strle	r1, [r3, -r5, lsl #8]
     930:	03050100 	movweq	r0, #20736	; 0x5100
     934:	3c200613 	stccc	6, cr0, [r0], #-76	; 0xffffffb4
     938:	03060104 	movweq	r0, #24836	; 0x6104
     93c:	05017faa 	streq	r7, [r1, #-4010]	; 0xfffff056
     940:	05150605 	ldreq	r0, [r5, #-1541]	; 0xfffff9fb
     944:	03051d0d 	movweq	r1, #23821	; 0x5d0d
     948:	05143d06 	ldreq	r3, [r4, #-3334]	; 0xfffff2fa
     94c:	0513060d 	ldreq	r0, [r3, #-1549]	; 0xfffff9f3
     950:	05052b0b 	streq	r2, [r5, #-2827]	; 0xfffff4f5
     954:	0d053106 	stfeqs	f3, [r5, #-24]	; 0xffffffe8
     958:	01050106 	tsteq	r5, r6, lsl #2
     95c:	062d0522 	strteq	r0, [sp], -r2, lsr #10
     960:	6601ec03 	strvs	lr, [r1], -r3, lsl #24
     964:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
     968:	0511062d 	ldreq	r0, [r1, #-1581]	; 0xfffff9d3
     96c:	10052133 	andne	r2, r5, r3, lsr r1
     970:	06030520 	streq	r0, [r3], -r0, lsr #10
     974:	062d054b 	strteq	r0, [sp], -fp, asr #10
     978:	22110510 	andscs	r0, r1, #16, 10	; 0x4000000
     97c:	06030520 	streq	r0, [r3], -r0, lsr #10
     980:	0605052f 	streq	r0, [r5], -pc, lsr #10
     984:	06030501 	streq	r0, [r3], -r1, lsl #10
     988:	3e051321 	cdpcc	3, 0, cr1, cr5, cr1, {1}
     98c:	0f050106 	svceq	0x00050106
     990:	2137051f 	teqcs	r7, pc, lsl r5
     994:	59060305 	stmdbpl	r6, {r0, r2, r8, r9}
     998:	06010705 	streq	r0, [r1], -r5, lsl #14
     99c:	20201001 	eorcs	r1, r0, r1
     9a0:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
     9a4:	31060304 	tstcc	r6, r4, lsl #6
     9a8:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
     9ac:	01060304 	tsteq	r6, r4, lsl #6
     9b0:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
     9b4:	052d0304 	streq	r0, [sp, #-772]!	; 0xfffffcfc
     9b8:	0402000c 	streq	r0, [r2], #-12
     9bc:	03052103 	movweq	r2, #20739	; 0x5103
     9c0:	03040200 	movweq	r0, #16896	; 0x4200
     9c4:	0123062d 			; <UNDEFINED> instruction: 0x0123062d
     9c8:	06662006 	strbteq	r2, [r6], -r6
     9cc:	06010591 			; <UNDEFINED> instruction: 0x06010591
     9d0:	06230513 			; <UNDEFINED> instruction: 0x06230513
     9d4:	207e9303 	rsbscs	r9, lr, r3, lsl #6
     9d8:	13130305 	tstne	r3, #335544320	; 0x14000000
     9dc:	10062305 	andne	r2, r6, r5, lsl #6
     9e0:	3d160522 	cfldr32cc	mvfx0, [r6, #-136]	; 0xffffff78
     9e4:	053b2305 	ldreq	r2, [fp, #-773]!	; 0xfffffcfb
     9e8:	142f0603 	strtne	r0, [pc], #-1539	; 9f0 <_Min_Stack_Size+0x5f0>
     9ec:	01060505 	tsteq	r6, r5, lsl #10
     9f0:	07053d06 	streq	r3, [r5, -r6, lsl #26]
     9f4:	062e0106 	strteq	r0, [lr], -r6, lsl #2
     9f8:	0503042f 	streq	r0, [r3, #-1071]	; 0xfffffbd1
     9fc:	00c70313 	sbceq	r0, r7, r3, lsl r3
     a00:	13030501 	movwne	r0, #13569	; 0x3501
     a04:	11050104 	tstne	r5, r4, lsl #2
     a08:	7fb90306 	svcvc	0x00b90306
     a0c:	05030401 	streq	r0, [r3, #-1025]	; 0xfffffbff
     a10:	00c7030a 	sbceq	r0, r7, sl, lsl #6
     a14:	042e2e20 	strteq	r2, [lr], #-3616	; 0xfffff1e0
     a18:	06070501 	streq	r0, [r7], -r1, lsl #10
     a1c:	017fb903 	cmneq	pc, r3, lsl #18
     a20:	01061105 	tsteq	r6, r5, lsl #2
     a24:	21060705 	tstcs	r6, r5, lsl #14
     a28:	0a030305 	beq	c1644 <_Min_Stack_Size+0xc1244>
     a2c:	061d0501 	ldreq	r0, [sp], -r1, lsl #10
     a30:	200b0501 	andcs	r0, fp, r1, lsl #10
     a34:	30060305 	andcc	r0, r6, r5, lsl #6
     a38:	01060505 	tsteq	r6, r5, lsl #10
     a3c:	07053006 	streq	r3, [r5, -r6]
     a40:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     a44:	07052106 	streq	r2, [r5, -r6, lsl #2]
     a48:	21060106 	tstcs	r6, r6, lsl #2
     a4c:	01061a05 	tsteq	r6, r5, lsl #20
     a50:	05200705 	streq	r0, [r0, #-1797]!	; 0xfffff8fb
     a54:	0a03060b 	beq	c2288 <_Min_Stack_Size+0xc1e88>
     a58:	05030458 	streq	r0, [r3, #-1112]	; 0xfffffba8
     a5c:	01220314 			; <UNDEFINED> instruction: 0x01220314
     a60:	06130305 	ldreq	r0, [r3], -r5, lsl #6
     a64:	01043c2e 	tsteq	r4, lr, lsr #24
     a68:	03060705 	movweq	r0, #26373	; 0x6705
     a6c:	09050145 	stmdbeq	r5, {r0, r2, r6, r8}
     a70:	0b050106 	bleq	140e90 <_Min_Stack_Size+0x140a90>
     a74:	58100306 	ldmdapl	r0, {r1, r2, r8, r9}
     a78:	01061705 	tsteq	r6, r5, lsl #14
     a7c:	05220b05 	streq	r0, [r2, #-2821]!	; 0xfffff4fb
     a80:	0b051e17 	bleq	1482e4 <_Min_Stack_Size+0x147ee4>
     a84:	13062106 	movwne	r2, #24838	; 0x6106
     a88:	053b1405 	ldreq	r1, [fp, #-1029]!	; 0xfffffbfb
     a8c:	2f2f060b 	svccs	0x002f060b
     a90:	0f030505 	svceq	0x00030505
     a94:	06140501 	ldreq	r0, [r4], -r1, lsl #10
     a98:	20070501 	andcs	r0, r7, r1, lsl #10
     a9c:	4e030305 	cdpmi	3, 0, cr0, cr3, cr5, {0}
     aa0:	0307052e 	movweq	r0, #29998	; 0x752e
     aa4:	25052032 	strcs	r2, [r5, #-50]	; 0xffffffce
     aa8:	2a052006 	bcs	148ac8 <_Min_Stack_Size+0x1486c8>
     aac:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     ab0:	14053d06 	strne	r3, [r5], #-3334	; 0xfffff2fa
     ab4:	05014a03 	streq	r4, [r1, #-2563]	; 0xfffff5fd
     ab8:	0d051303 	stceq	3, cr1, [r5, #-12]
     abc:	03050106 	movweq	r0, #20742	; 0x5106
     ac0:	0b053d06 	bleq	14fee0 <_Min_Stack_Size+0x14fae0>
     ac4:	03050106 	movweq	r0, #20742	; 0x5106
     ac8:	2e062f06 	cdpcs	15, 0, cr2, cr6, cr6, {0}
     acc:	c7030105 	strgt	r0, [r3, -r5, lsl #2]
     ad0:	0b050100 	bleq	140ed8 <_Min_Stack_Size+0x140ad8>
     ad4:	2e640306 	cdpcs	3, 6, cr0, cr4, cr6, {0}
     ad8:	14050304 	strne	r0, [r5], #-772	; 0xfffffcfc
     adc:	05011f03 	streq	r1, [r1, #-3843]	; 0xfffff0fd
     ae0:	4a061303 	bmi	1856f4 <_Min_Stack_Size+0x1852f4>
     ae4:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
     ae8:	01640306 	cmneq	r4, r6, lsl #6
     aec:	01060b05 	tsteq	r6, r5, lsl #22
     af0:	06050520 	streq	r0, [r5], -r0, lsr #10
     af4:	060e0521 	streq	r0, [lr], -r1, lsr #10
     af8:	21050501 	tstcs	r5, r1, lsl #10
     afc:	05490e05 	strbeq	r0, [r9, #-3589]	; 0xfffff1fb
     b00:	062f0605 	strteq	r0, [pc], -r5, lsl #12
     b04:	1706202e 	strne	r2, [r6, -lr, lsr #32]
     b08:	01060705 	tsteq	r6, r5, lsl #14
     b0c:	16052106 	strne	r2, [r5], -r6, lsl #2
     b10:	09050106 	stmdbeq	r5, {r1, r2, r8}
     b14:	052f0620 	streq	r0, [pc, #-1568]!	; 4fc <_Min_Stack_Size+0xfc>
     b18:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     b1c:	042f0609 	strteq	r0, [pc], #-1545	; b24 <_Min_Stack_Size+0x724>
     b20:	03140503 	tsteq	r4, #12582912	; 0xc00000
     b24:	03050111 	movweq	r0, #20753	; 0x5111
     b28:	04010613 	streq	r0, [r1], #-1555	; 0xfffff9ed
     b2c:	062c0501 	strteq	r0, [ip], -r1, lsl #10
     b30:	04017a03 	streq	r7, [r1], #-2563	; 0xfffff5fd
     b34:	17140503 	ldrne	r0, [r4, -r3, lsl #10]
     b38:	06130305 	ldreq	r0, [r3], -r5, lsl #6
     b3c:	0501044a 	streq	r0, [r1, #-1098]	; 0xfffffbb6
     b40:	7003060d 	andvc	r0, r3, sp, lsl #12
     b44:	060f0501 	streq	r0, [pc], -r1, lsl #10
     b48:	06090501 	streq	r0, [r9], -r1, lsl #10
     b4c:	0617052f 	ldreq	r0, [r7], -pc, lsr #10
     b50:	06090501 	streq	r0, [r9], -r1, lsl #10
     b54:	0503042f 	streq	r0, [r3, #-1071]	; 0xfffffbd1
     b58:	010d0314 	tsteq	sp, r4, lsl r3
     b5c:	06130305 	ldreq	r0, [r3], -r5, lsl #6
     b60:	05010420 	streq	r0, [r1, #-1056]	; 0xfffffbe0
     b64:	76030605 	strvc	r0, [r3], -r5, lsl #12
     b68:	06090501 	streq	r0, [r9], -r1, lsl #10
     b6c:	58070501 	stmdapl	r7, {r0, r8, sl}
     b70:	05012106 	streq	r2, [r1, #-262]	; 0xfffffefa
     b74:	0f05ae05 	svceq	0x0005ae05
     b78:	07050106 	streq	r0, [r5, -r6, lsl #2]
     b7c:	1f0f052f 	svcne	0x000f052f
     b80:	05210705 	streq	r0, [r1, #-1797]!	; 0xfffff8fb
     b84:	05051f0f 	streq	r1, [r5, #-3855]	; 0xfffff0f1
     b88:	07052106 	streq	r2, [r5, -r6, lsl #2]
     b8c:	0f020106 	svceq	0x00020106
     b90:	47010100 	strmi	r0, [r1, -r0, lsl #2]
     b94:	03000003 	movweq	r0, #3
     b98:	00010200 	andeq	r0, r1, r0, lsl #4
     b9c:	fb010200 	blx	413a6 <_Min_Stack_Size+0x40fa6>
     ba0:	01000d0e 	tsteq	r0, lr, lsl #26
     ba4:	00010101 	andeq	r0, r1, r1, lsl #2
     ba8:	00010000 	andeq	r0, r1, r0
     bac:	72730100 	rsbsvc	r0, r3, #0, 2
     bb0:	696c0063 	stmdbvs	ip!, {r0, r1, r5, r6}^
     bb4:	6e692f62 	cdpvs	15, 6, cr2, cr9, cr2, {3}
     bb8:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     bbc:	752f0065 	strvc	r0, [pc, #-101]!	; b5f <_Min_Stack_Size+0x75f>
     bc0:	6c2f7273 	sfmvs	f7, 4, [pc], #-460	; 9fc <_Min_Stack_Size+0x5fc>
     bc4:	672f6269 	strvs	r6, [pc, -r9, ror #4]!
     bc8:	612f6363 			; <UNDEFINED> instruction: 0x612f6363
     bcc:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     bd0:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     bd4:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     bd8:	332e382f 			; <UNDEFINED> instruction: 0x332e382f
     bdc:	692f312e 	stmdbvs	pc!, {r1, r2, r3, r5, r8, ip, sp}	; <UNPREDICTABLE>
     be0:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     be4:	2f006564 	svccs	0x00006564
     be8:	2f727375 	svccs	0x00727375
     bec:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     bf0:	2f656475 	svccs	0x00656475
     bf4:	6c77656e 	cfldr64vs	mvdx6, [r7], #-440	; 0xfffffe48
     bf8:	732f6269 			; <UNDEFINED> instruction: 0x732f6269
     bfc:	00007379 	andeq	r7, r0, r9, ror r3
     c00:	5f627375 	svcpl	0x00627375
     c04:	73616c63 	cmnvc	r1, #25344	; 0x6300
     c08:	75615f73 	strbvc	r5, [r1, #-3955]!	; 0xfffff08d
     c0c:	2e6f6964 	vnmulcs.f16	s13, s30, s9	; <UNPREDICTABLE>
     c10:	00010063 	andeq	r0, r1, r3, rrx
     c14:	62737500 	rsbsvs	r7, r3, #0, 10
     c18:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
     c1c:	0100682e 	tsteq	r0, lr, lsr #16
     c20:	6f630000 	svcvs	0x00630000
     c24:	635f6572 	cmpvs	pc, #478150656	; 0x1c800000
     c28:	682e336d 	stmdavs	lr!, {r0, r2, r3, r5, r6, r8, r9, ip, sp}
     c2c:	00000200 	andeq	r0, r0, r0, lsl #4
     c30:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
     c34:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
     c38:	00000300 	andeq	r0, r0, r0, lsl #6
     c3c:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     c40:	35316c32 	ldrcc	r6, [r1, #-3122]!	; 0xfffff3ce
     c44:	2e637831 	mcrcs	8, 3, r7, cr3, cr1, {1}
     c48:	00020068 	andeq	r0, r2, r8, rrx
     c4c:	73797300 	cmnvc	r9, #0, 6
     c50:	5f6d6574 	svcpl	0x006d6574
     c54:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     c58:	78316c32 	ldmdavc	r1!, {r1, r4, r5, sl, fp, sp, lr}
     c5c:	00682e78 	rsbeq	r2, r8, r8, ror lr
     c60:	73000002 	movwvc	r0, #2
     c64:	65646474 	strbvs	r6, [r4, #-1140]!	; 0xfffffb8c
     c68:	00682e66 	rsbeq	r2, r8, r6, ror #28
     c6c:	5f000003 	svcpl	0x00000003
     c70:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
     c74:	00682e73 	rsbeq	r2, r8, r3, ror lr
     c78:	72000004 	andvc	r0, r0, #4
     c7c:	746e6565 	strbtvc	r6, [lr], #-1381	; 0xfffffa9b
     c80:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
     c84:	6f6c0000 	svcvs	0x006c0000
     c88:	682e6b63 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
     c8c:	00000400 	andeq	r0, r0, r0, lsl #8
     c90:	6975623c 	ldmdbvs	r5!, {r2, r3, r4, r5, r9, sp, lr}^
     c94:	692d746c 	pushvs	{r2, r3, r5, r6, sl, ip, sp, lr}
     c98:	00003e6e 	andeq	r3, r0, lr, ror #28
     c9c:	05000000 	streq	r0, [r0, #-0]
     ca0:	02050050 	andeq	r0, r5, #80	; 0x50
     ca4:	08000964 	stmdaeq	r0, {r2, r5, r6, r8, fp}
     ca8:	0101c103 	tsteq	r1, r3, lsl #2
     cac:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
     cb0:	05140807 	ldreq	r0, [r4, #-2055]	; 0xfffff7f9
     cb4:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     cb8:	052f0607 	streq	r0, [pc, #-1543]!	; 6b9 <_Min_Stack_Size+0x2b9>
     cbc:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     cc0:	201b0320 	andscs	r0, fp, r0, lsr #6
     cc4:	21060705 	tstcs	r6, r5, lsl #14
     cc8:	16060105 	strne	r0, [r6], -r5, lsl #2
     ccc:	03060705 	movweq	r0, #26373	; 0x6705
     cd0:	0d052063 	stceq	0, cr2, [r5, #-396]	; 0xfffffe74
     cd4:	07050106 	streq	r0, [r5, -r6, lsl #2]
     cd8:	0d052f06 	stceq	15, cr2, [r5, #-24]	; 0xffffffe8
     cdc:	07050106 	streq	r0, [r5, -r6, lsl #2]
     ce0:	0d053106 	stfeqs	f3, [r5, #-24]	; 0xffffffe8
     ce4:	07050106 	streq	r0, [r5, -r6, lsl #2]
     ce8:	0d052f06 	stceq	15, cr2, [r5, #-24]	; 0xffffffe8
     cec:	07050106 	streq	r0, [r5, -r6, lsl #2]
     cf0:	20063106 	andcs	r3, r6, r6, lsl #2
     cf4:	68060b05 	stmdavs	r6, {r0, r2, r8, r9, fp}
     cf8:	01061105 	tsteq	r6, r5, lsl #2
     cfc:	05200903 	streq	r0, [r0, #-2307]!	; 0xfffff6fd
     d00:	0521060b 	streq	r0, [r1, #-1547]!	; 0xfffff9f5
     d04:	20051607 	andcs	r1, r5, r7, lsl #12
     d08:	0b050106 	bleq	141128 <_Min_Stack_Size+0x140d28>
     d0c:	3c750306 	ldclcc	3, cr0, [r5], #-24	; 0xffffffe8
     d10:	01061105 	tsteq	r6, r5, lsl #2
     d14:	31060b05 	tstcc	r6, r5, lsl #22
     d18:	01061105 	tsteq	r6, r5, lsl #2
     d1c:	31060b05 	tstcc	r6, r5, lsl #22
     d20:	01061105 	tsteq	r6, r5, lsl #2
     d24:	00064705 	andeq	r4, r6, r5, lsl #14
     d28:	09e00205 	stmibeq	r0!, {r0, r2, r9}^
     d2c:	0c030800 	stceq	8, cr0, [r3], {-0}
     d30:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
     d34:	13060105 	movwne	r0, #24837	; 0x6105
     d38:	06180520 	ldreq	r0, [r8], -r0, lsr #10
     d3c:	13030522 	movwne	r0, #13602	; 0x3522
     d40:	11061805 	tstne	r6, r5, lsl #16
     d44:	4a4b1105 	bmi	12c5160 <_Min_Stack_Size+0x12c4d60>
     d48:	31060305 	tstcc	r6, r5, lsl #6
     d4c:	13060105 	movwne	r0, #24837	; 0x6105
     d50:	89062205 	stmdbhi	r6, {r0, r2, r9, sp}
     d54:	14130305 	ldrne	r0, [r3], #-773	; 0xfffffcfb
     d58:	0f062205 	svceq	0x00062205
     d5c:	05310c05 	ldreq	r0, [r1, #-3077]!	; 0xfffff3fb
     d60:	0c051d22 	stceq	13, cr1, [r5], {34}	; 0x22
     d64:	20050523 	andcs	r0, r5, r3, lsr #10
     d68:	0b052f06 	bleq	14c988 <_Min_Stack_Size+0x14c588>
     d6c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     d70:	2d0b0521 	cfstr32cs	mvfx0, [fp, #-132]	; 0xffffff7c
     d74:	21060505 	tstcs	r6, r5, lsl #10
     d78:	00220501 	eoreq	r0, r2, r1, lsl #10
     d7c:	06010402 	streq	r0, [r1], -r2, lsl #8
     d80:	00300529 	eorseq	r0, r0, r9, lsr #10
     d84:	03010402 	movweq	r0, #5122	; 0x1402
     d88:	2205200b 	andcs	r2, r5, #11
     d8c:	01040200 	mrseq	r0, R12_usr
     d90:	052e7503 	streq	r7, [lr, #-1283]!	; 0xfffffafd
     d94:	04020036 	streq	r0, [r2], #-54	; 0xffffffca
     d98:	200b0301 	andcs	r0, fp, r1, lsl #6
     d9c:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
     da0:	05480104 	strbeq	r0, [r8, #-260]	; 0xfffffefc
     da4:	04020003 	streq	r0, [r2], #-3
     da8:	03062001 	movweq	r2, #24577	; 0x6001
     dac:	0204580c 	andeq	r5, r4, #12, 16	; 0xc0000
     db0:	03061305 	movweq	r1, #25349	; 0x6305
     db4:	04017fa1 	streq	r7, [r1], #-4001	; 0xfffff05f
     db8:	03030501 	movweq	r0, #13569	; 0x3501
     dbc:	042000df 	strteq	r0, [r0], #-223	; 0xffffff21
     dc0:	06140502 	ldreq	r0, [r4], -r2, lsl #10
     dc4:	207fa003 	rsbscs	sl, pc, r3
     dc8:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
     dcc:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
     dd0:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
     dd4:	2e1f0611 	mrccs	6, 0, r0, cr15, cr1, {0}
     dd8:	4a2f0305 	bmi	bc19f4 <_Min_Stack_Size+0xbc15f4>
     ddc:	03060104 	movweq	r0, #24836	; 0x6104
     de0:	050100df 	streq	r0, [r1, #-223]	; 0xffffff21
     de4:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
     de8:	05052f01 	streq	r2, [r5, #-3841]	; 0xfffff0ff
     dec:	3c740306 	ldclcc	3, cr0, [r4], #-24	; 0xffffffe8
     df0:	01063005 	tsteq	r6, r5
     df4:	052e3605 	streq	r3, [lr, #-1541]!	; 0xfffff9fb
     df8:	0c052e0e 	stceq	14, cr2, [r5], {14}
     dfc:	3d08053c 	cfstr32cc	mvfx0, [r8, #-240]	; 0xffffff10
     e00:	053d0705 	ldreq	r0, [sp, #-1797]!	; 0xfffff8fb
     e04:	0c052e1c 	stceq	14, cr2, [r5], {28}
     e08:	06050548 	streq	r0, [r5], -r8, asr #10
     e0c:	1805132f 	stmdane	r5, {r0, r1, r2, r3, r5, r8, r9, ip}
     e10:	061c0501 	ldreq	r0, [ip], -r1, lsl #10
     e14:	05202e01 	streq	r2, [r0, #-3585]!	; 0xfffff1ff
     e18:	05000617 	streq	r0, [r0, #-1559]	; 0xfffff9e9
     e1c:	000aa002 	andeq	sl, sl, r2
     e20:	010c0308 	tsteq	ip, r8, lsl #6
     e24:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
     e28:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
     e2c:	054c0603 	strbeq	r0, [ip, #-1539]	; 0xfffff9fd
     e30:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
     e34:	16055a01 	strne	r5, [r5], -r1, lsl #20
     e38:	03055a06 	movweq	r5, #23046	; 0x5a06
     e3c:	06160513 			; <UNDEFINED> instruction: 0x06160513
     e40:	21030511 	tstcs	r3, r1, lsl r5
     e44:	10056906 	andne	r6, r5, r6, lsl #18
     e48:	03040106 	movweq	r0, #16646	; 0x4106
     e4c:	c3032705 	movwgt	r2, #14085	; 0x3705
     e50:	01042009 	tsteq	r4, r9
     e54:	bd031005 	stclt	0, cr1, [r3, #-20]	; 0xffffffec
     e58:	03042e76 	movweq	r2, #20086	; 0x4e76
     e5c:	c3032705 	movwgt	r2, #14085	; 0x3705
     e60:	01042009 	tsteq	r4, r9
     e64:	bd031005 	stclt	0, cr1, [r3, #-20]	; 0xffffffec
     e68:	03052076 	movweq	r2, #20598	; 0x5076
     e6c:	0d053d06 	stceq	13, cr3, [r5, #-24]	; 0xffffffe8
     e70:	03050106 	movweq	r0, #20742	; 0x5106
     e74:	0d053d06 	stceq	13, cr3, [r5, #-24]	; 0xffffffe8
     e78:	03050106 	movweq	r0, #20742	; 0x5106
     e7c:	0d053d06 	stceq	13, cr3, [r5, #-24]	; 0xffffffe8
     e80:	03050106 	movweq	r0, #20742	; 0x5106
     e84:	0e054b06 	vmlaeq.f64	d4, d5, d6
     e88:	03050106 	movweq	r0, #20742	; 0x5106
     e8c:	03042f06 	movweq	r2, #20230	; 0x4f06
     e90:	bc031605 	stclt	6, cr1, [r3], {5}
     e94:	03050109 	movweq	r0, #20745	; 0x5109
     e98:	06270514 			; <UNDEFINED> instruction: 0x06270514
     e9c:	01042001 	tsteq	r4, r1
     ea0:	03060305 	movweq	r0, #25349	; 0x6305
     ea4:	050176c3 	streq	r7, [r1, #-1731]	; 0xfffff93d
     ea8:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     eac:	16052101 	strne	r2, [r5], -r1, lsl #2
     eb0:	03059206 	movweq	r9, #20998	; 0x5206
     eb4:	06060513 			; <UNDEFINED> instruction: 0x06060513
     eb8:	2e050501 	cfsh32cs	mvfx0, mvfx5, #1
     ebc:	02001405 	andeq	r1, r0, #83886080	; 0x5000000
     ec0:	2e060104 	adfcss	f0, f6, f4
     ec4:	01040200 	mrseq	r0, R12_usr
     ec8:	00230501 	eoreq	r0, r3, r1, lsl #10
     ecc:	4a010402 	bmi	41edc <_Min_Stack_Size+0x41adc>
     ed0:	01040200 	mrseq	r0, R12_usr
     ed4:	06010501 	streq	r0, [r1], -r1, lsl #10
     ed8:	0005023d 	andeq	r0, r5, sp, lsr r2
     edc:	01100101 	tsteq	r0, r1, lsl #2
     ee0:	00030000 	andeq	r0, r3, r0
     ee4:	0000007b 	andeq	r0, r0, fp, ror r0
     ee8:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
     eec:	0101000d 	tsteq	r1, sp
     ef0:	00000101 	andeq	r0, r0, r1, lsl #2
     ef4:	00000100 	andeq	r0, r0, r0, lsl #2
     ef8:	2f2e2e01 	svccs	0x002e2e01
     efc:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
     f00:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
     f04:	2f2e2e2f 	svccs	0x002e2e2f
     f08:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
     f0c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
     f10:	77656e2f 	strbvc	r6, [r5, -pc, lsr #28]!
     f14:	2f62696c 	svccs	0x0062696c
     f18:	6362696c 	cmnvs	r2, #108, 18	; 0x1b0000
     f1c:	73696d2f 	cmnvc	r9, #3008	; 0xbc0
     f20:	752f0063 	strvc	r0, [pc, #-99]!	; ec5 <_Min_Stack_Size+0xac5>
     f24:	6c2f7273 	sfmvs	f7, 4, [pc], #-460	; d60 <_Min_Stack_Size+0x960>
     f28:	672f6269 	strvs	r6, [pc, -r9, ror #4]!
     f2c:	612f6363 			; <UNDEFINED> instruction: 0x612f6363
     f30:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     f34:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     f38:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     f3c:	332e382f 			; <UNDEFINED> instruction: 0x332e382f
     f40:	692f312e 	stmdbvs	pc!, {r1, r2, r3, r5, r8, ip, sp}	; <UNPREDICTABLE>
     f44:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     f48:	00006564 	andeq	r6, r0, r4, ror #10
     f4c:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
     f50:	0100632e 	tsteq	r0, lr, lsr #6
     f54:	74730000 	ldrbtvc	r0, [r3], #-0
     f58:	66656464 	strbtvs	r6, [r5], -r4, ror #8
     f5c:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
     f60:	05000000 	streq	r0, [r0, #-0]
     f64:	02050001 	andeq	r0, r5, #1
     f68:	08000b28 	stmdaeq	r0, {r3, r5, r8, r9, fp}
     f6c:	05011e03 	streq	r1, [r1, #-3587]	; 0xfffff1fd
     f70:	14131303 	ldrne	r1, [r3], #-771	; 0xfffffcfd
     f74:	0e060105 	adfeqs	f0, f6, f5
     f78:	05241f05 	streq	r1, [r4, #-3845]!	; 0xfffff0fb
     f7c:	063d0603 	ldrteq	r0, [sp], -r3, lsl #12
     f80:	0a052001 	beq	148f8c <_Min_Stack_Size+0x148b8c>
     f84:	00050520 	andeq	r0, r5, r0, lsr #10
     f88:	06030402 	streq	r0, [r3], -r2, lsl #8
     f8c:	001b0521 	andseq	r0, fp, r1, lsr #10
     f90:	06030402 	streq	r0, [r3], -r2, lsl #8
     f94:	001a0511 	andseq	r0, sl, r1, lsl r5
     f98:	21030402 	tstcs	r3, r2, lsl #8
     f9c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
     fa0:	052e0304 	streq	r0, [lr, #-772]!	; 0xfffffcfc
     fa4:	04020003 	streq	r0, [r2], #-3
     fa8:	32061f03 	andcc	r1, r6, #3, 30
     fac:	15061c05 	strne	r1, [r6, #-3077]	; 0xfffff3fb
     fb0:	1d030520 	cfstr32ne	mvfx0, [r3, #-128]	; 0xffffff80
     fb4:	1c053106 	stfnes	f3, [r5], {6}
     fb8:	03050106 	movweq	r0, #20742	; 0x5106
     fbc:	01062106 	tsteq	r6, r6, lsl #2
     fc0:	200a0520 	andcs	r0, sl, r0, lsr #10
     fc4:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
     fc8:	21060304 	tstcs	r6, r4, lsl #6
     fcc:	02001b05 	andeq	r1, r0, #5120	; 0x1400
     fd0:	11060304 	tstne	r6, r4, lsl #6
     fd4:	02001705 	andeq	r1, r0, #1310720	; 0x140000
     fd8:	05210304 	streq	r0, [r1, #-772]!	; 0xfffffcfc
     fdc:	04020005 	streq	r0, [r2], #-5
     fe0:	03052e03 	movweq	r2, #24067	; 0x5e03
     fe4:	03040200 	movweq	r0, #16896	; 0x4200
     fe8:	3001051f 	andcc	r0, r1, pc, lsl r5
     fec:	00080220 	andeq	r0, r8, r0, lsr #4
     ff0:	00bd0101 	adcseq	r0, sp, r1, lsl #2
     ff4:	00030000 	andeq	r0, r3, r0
     ff8:	00000059 	andeq	r0, r0, r9, asr r0
     ffc:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    1000:	0101000d 	tsteq	r1, sp
    1004:	00000101 	andeq	r0, r0, r1, lsl #2
    1008:	00000100 	andeq	r0, r0, r0, lsl #2
    100c:	2f2e2e01 	svccs	0x002e2e01
    1010:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1014:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1018:	2f2e2e2f 	svccs	0x002e2e2f
    101c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1020:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1024:	2f2e2e2f 	svccs	0x002e2e2f
    1028:	6c77656e 	cfldr64vs	mvdx6, [r7], #-440	; 0xfffffe48
    102c:	6c2f6269 	sfmvs	f6, 4, [pc], #-420	; e90 <_Min_Stack_Size+0xa90>
    1030:	2f636269 	svccs	0x00636269
    1034:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    1038:	2f656e69 	svccs	0x00656e69
    103c:	006d7261 	rsbeq	r7, sp, r1, ror #4
    1040:	6d656d00 	stclvs	13, cr6, [r5, #-0]
    1044:	2d797063 	ldclcs	0, cr7, [r9, #-396]!	; 0xfffffe74
    1048:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
    104c:	532e6d37 			; <UNDEFINED> instruction: 0x532e6d37
    1050:	00000100 	andeq	r0, r0, r0, lsl #2
    1054:	02050000 	andeq	r0, r5, #0
    1058:	08000b70 	stmdaeq	r0, {r4, r5, r6, r8, r9, fp}
    105c:	0100df03 	tsteq	r0, r3, lsl #30
    1060:	232f2f24 			; <UNDEFINED> instruction: 0x232f2f24
    1064:	200d0321 	andcs	r0, sp, r1, lsr #6
    1068:	2221e508 	eorcs	lr, r1, #8, 10	; 0x2000000
    106c:	03212321 			; <UNDEFINED> instruction: 0x03212321
    1070:	2183200d 	orrcs	r2, r3, sp
    1074:	21232122 			; <UNDEFINED> instruction: 0x21232122
    1078:	212f2f25 			; <UNDEFINED> instruction: 0x212f2f25
    107c:	21222123 			; <UNDEFINED> instruction: 0x21222123
    1080:	22302f21 	eorscs	r2, r0, #33, 30	; 0x84
    1084:	200a0321 	andcs	r0, sl, r1, lsr #6
    1088:	2e0c0324 	cdpcs	3, 0, cr0, cr12, cr4, {1}
    108c:	03212321 			; <UNDEFINED> instruction: 0x03212321
    1090:	222f200f 	eorcs	r2, pc, #15
    1094:	2121222f 			; <UNDEFINED> instruction: 0x2121222f
    1098:	2f23302f 	svccs	0x0023302f
    109c:	00c8032f 	sbceq	r0, r8, pc, lsr #6
    10a0:	21232120 			; <UNDEFINED> instruction: 0x21232120
    10a4:	21222f2f 			; <UNDEFINED> instruction: 0x21222f2f
    10a8:	21212121 			; <UNDEFINED> instruction: 0x21212121
    10ac:	01022423 	tsteq	r2, r3, lsr #8
    10b0:	Address 0x00000000000010b0 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
       0:	494c4143 	stmdbmi	ip, {r0, r1, r6, r8, lr}^
       4:	50005242 	andpl	r5, r0, r2, asr #4
       8:	52445055 	subpl	r5, r4, #85	; 0x55
       c:	4b434c00 	blmi	10d3014 <_Min_Stack_Size+0x10d2c14>
      10:	72730052 	rsbsvc	r0, r3, #82	; 0x52
      14:	616d2f63 	cmnvs	sp, r3, ror #30
      18:	632e6e69 			; <UNDEFINED> instruction: 0x632e6e69
      1c:	44535400 	ldrbmi	r5, [r3], #-1024	; 0xfffffc00
      20:	4b420052 	blmi	1080170 <_Min_Stack_Size+0x107fd70>
      24:	52363250 	eorspl	r3, r6, #80, 4
      28:	59544f00 	ldmdbpl	r4, {r8, r9, sl, fp, lr}^
      2c:	00524550 	subseq	r4, r2, r0, asr r5
      30:	33504b42 	cmpcc	r0, #67584	; 0x10800
      34:	42005230 	andmi	r5, r0, #48, 4
      38:	5233504b 	eorspl	r5, r3, #75	; 0x4b
      3c:	45525000 	ldrbmi	r5, [r2, #-0]
      40:	4f4d0052 	svcmi	0x004d0052
      44:	00524544 	subseq	r4, r2, r4, asr #10
      48:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
      4c:	6e6f6c20 	cdpvs	12, 6, cr6, cr15, cr0, {1}
      50:	6e752067 	cdpvs	0, 7, cr2, cr5, cr7, {3}
      54:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
      58:	69206465 	stmdbvs	r0!, {r0, r2, r5, r6, sl, sp, lr}
      5c:	5000746e 	andpl	r7, r0, lr, ror #8
      60:	454b4752 	strbmi	r4, [fp, #-1874]	; 0xfffff8ae
      64:	52005259 	andpl	r5, r0, #-1879048187	; 0x90000005
      68:	545f4354 	ldrbpl	r4, [pc], #-852	; 70 <_Min_Heap_Size+0x70>
      6c:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
      70:	55006665 	strpl	r6, [r0, #-1637]	; 0xfffff99b
      74:	735f4253 	cmpvc	pc, #805306373	; 0x30000005
      78:	70757465 	rsbsvc	r7, r5, r5, ror #8
      7c:	6e6f6c00 	cdpvs	12, 6, cr6, cr15, cr0, {0}
      80:	6f6c2067 	svcvs	0x006c2067
      84:	6920676e 	stmdbvs	r0!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
      88:	4200746e 	andmi	r7, r0, #1845493760	; 0x6e000000
      8c:	00525253 	subseq	r5, r2, r3, asr r2
      90:	53414c46 	movtpl	r4, #7238	; 0x1c46
      94:	79545f48 	ldmdbvc	r4, {r3, r6, r8, r9, sl, fp, ip, lr}^
      98:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
      9c:	45500066 	ldrbmi	r0, [r0, #-102]	; 0xffffff9a
      a0:	63005243 	movwvs	r5, #579	; 0x243
      a4:	6b636f6c 	blvs	18dbe5c <_Min_Stack_Size+0x18dba5c>
      a8:	0053485f 	subseq	r4, r3, pc, asr r8
      ac:	32504b42 	subscc	r4, r0, #67584	; 0x10800
      b0:	54005237 	strpl	r5, [r0], #-567	; 0xfffffdc9
      b4:	52535353 	subspl	r5, r3, #1275068417	; 0x4c000001
      b8:	504b4200 	subpl	r4, fp, r0, lsl #4
      bc:	00523133 	subseq	r3, r2, r3, lsr r1
      c0:	32425041 	subcc	r5, r2, #65	; 0x41
      c4:	52545352 	subspl	r5, r4, #1207959553	; 0x48000001
      c8:	504b4200 	subpl	r4, fp, r0, lsl #4
      cc:	41005234 	tstmi	r0, r4, lsr r2
      d0:	424d524c 	submi	r5, sp, #76, 4	; 0xc0000004
      d4:	00525353 	subseq	r5, r2, r3, asr r3
      d8:	4c424841 	mcrrmi	8, 4, r4, r2, cr1
      dc:	524e4550 	subpl	r4, lr, #80, 10	; 0x14000000
      e0:	504b4200 	subpl	r4, fp, r0, lsl #4
      e4:	00523631 	subseq	r3, r2, r1, lsr r6
      e8:	4b54504f 	blmi	151422c <_Min_Stack_Size+0x1513e2c>
      ec:	00525945 	subseq	r5, r2, r5, asr #18
      f0:	5f627375 	svcpl	0x00627375
      f4:	73616c63 	cmnvc	r1, #25344	; 0x6300
      f8:	6f705f73 	svcvs	0x00705f73
      fc:	75006c6c 	strvc	r6, [r0, #-3180]	; 0xfffff394
     100:	31746e69 	cmncc	r4, r9, ror #28
     104:	00745f36 	rsbseq	r5, r4, r6, lsr pc
     108:	32504b42 	subscc	r4, r0, #67584	; 0x10800
     10c:	50005230 	andpl	r5, r0, r0, lsr r2
     110:	59454b44 	stmdbpl	r5, {r2, r6, r8, r9, fp, lr}^
     114:	534f0052 	movtpl	r0, #61522	; 0xf052
     118:	44454550 	strbmi	r4, [r5], #-1360	; 0xfffffab0
     11c:	6e690052 	mcrvs	0, 3, r0, cr9, cr2, {2}
     120:	32337469 	eorscc	r7, r3, #1761607680	; 0x69000000
     124:	504b4200 	subpl	r4, fp, r0, lsl #4
     128:	00523832 	subseq	r3, r2, r2, lsr r8
     12c:	706d6574 	rsbvc	r6, sp, r4, ror r5
     130:	524c4100 	subpl	r4, ip, #0, 2
     134:	5353414d 	cmppl	r3, #1073741843	; 0x40000013
     138:	79530052 	ldmdbvc	r3, {r1, r4, r6}^
     13c:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
     140:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
     144:	636f6c43 	cmnvs	pc, #17152	; 0x4300
     148:	4b42006b 	blmi	10802fc <_Min_Stack_Size+0x107fefc>
     14c:	00523550 	subseq	r3, r2, r0, asr r5
     150:	31504b42 	cmpcc	r0, r2, asr #22
     154:	47005237 	smladxmi	r0, r7, r2, r5
     158:	5f4f4950 	svcpl	0x004f4950
     15c:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     160:	00666544 	rsbeq	r6, r6, r4, asr #10
     164:	5f434352 	svcpl	0x00434352
     168:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     16c:	00666544 	rsbeq	r6, r6, r4, asr #10
     170:	31504b42 	cmpcc	r0, r2, asr #22
     174:	42005235 	andmi	r5, r0, #1342177283	; 0x50000003
     178:	3132504b 	teqcc	r2, fp, asr #32
     17c:	68730052 	ldmdavs	r3!, {r1, r4, r6}^
     180:	2074726f 	rsbscs	r7, r4, pc, ror #4
     184:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
     188:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
     18c:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
     190:	656c7300 	strbvs	r7, [ip, #-768]!	; 0xfffffd00
     194:	41007065 	tstmi	r0, r5, rrx
     198:	4c314250 	lfmmi	f4, 4, [r1], #-320	; 0xfffffec0
     19c:	524e4550 	subpl	r4, lr, #80, 10	; 0x14000000
     1a0:	54535400 	ldrbpl	r5, [r3], #-1024	; 0xfffffc00
     1a4:	41540052 	cmpmi	r4, r2, asr r0
     1a8:	00524346 	subseq	r4, r2, r6, asr #6
     1ac:	64656d2f 	strbtvs	r6, [r5], #-3375	; 0xfffff2d1
     1b0:	652f6169 	strvs	r6, [pc, #-361]!	; 4f <_Min_Heap_Size+0x4f>
     1b4:	642f7478 	strtvs	r7, [pc], #-1144	; 1bc <_Min_Heap_Size+0x1bc>
     1b8:	702f7665 	eorvc	r7, pc, r5, ror #12
     1bc:	2f676f72 	svccs	0x00676f72
     1c0:	2f6d7261 	svccs	0x006d7261
     1c4:	2f627375 	svccs	0x00627375
     1c8:	75412e34 	strbvc	r2, [r1, #-3636]	; 0xfffff1cc
     1cc:	006f6964 	rsbeq	r6, pc, r4, ror #18
     1d0:	31504b42 	cmpcc	r0, r2, asr #22
     1d4:	42005230 	andmi	r5, r0, #48, 4
     1d8:	3932504b 	ldmdbcc	r2!, {r0, r1, r3, r6, ip, lr}
     1dc:	50410052 	subpl	r0, r1, r2, asr r0
     1e0:	504c3242 	subpl	r3, ip, r2, asr #4
     1e4:	00524e45 	subseq	r4, r2, r5, asr #28
     1e8:	5f525750 	svcpl	0x00525750
     1ec:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     1f0:	00666544 	rsbeq	r6, r6, r4, asr #10
     1f4:	36504b42 	ldrbcc	r4, [r0], -r2, asr #22
     1f8:	4b420052 	blmi	1080348 <_Min_Stack_Size+0x107ff48>
     1fc:	52383150 	eorspl	r3, r8, #80, 2
     200:	4c414300 	mcrrmi	3, 0, r4, r1, cr0
     204:	75710052 	ldrbvc	r0, [r1, #-82]!	; 0xffffffae
     208:	7a747261 	bvc	1d1cb94 <_Min_Stack_Size+0x1d1c794>
     20c:	504b4200 	subpl	r4, fp, r0, lsl #4
     210:	00523232 	subseq	r3, r2, r2, lsr r2
     214:	52505257 	subspl	r5, r0, #1879048197	; 0x70000005
     218:	52570031 	subspl	r0, r7, #49	; 0x31
     21c:	00325250 	eorseq	r5, r2, r0, asr r2
     220:	31504b42 	cmpcc	r0, r2, asr #22
     224:	41005231 	tstmi	r0, r1, lsr r2
     228:	53524248 	cmppl	r2, #72, 4	; 0x80000004
     22c:	74005254 	strvc	r5, [r0], #-596	; 0xfffffdac
     230:	00656d69 	rsbeq	r6, r5, r9, ror #26
     234:	31425041 	cmpcc	r2, r1, asr #32
     238:	52545352 	subspl	r5, r4, #1207959553	; 0x48000001
     23c:	655f5f00 	ldrbvs	r5, [pc, #-3840]	; fffff344 <BootRAM+0xef6fae5>
     240:	6c62616e 	stfvse	f6, [r2], #-440	; 0xfffffe48
     244:	72695f65 	rsbvc	r5, r9, #404	; 0x194
     248:	4c410071 	mcrrmi	0, 7, r0, r1, cr1
     24c:	52414d52 	subpl	r4, r1, #5248	; 0x1480
     250:	504b4200 	subpl	r4, fp, r0, lsl #4
     254:	42005237 	andmi	r5, r0, #1879048195	; 0x70000003
     258:	3931504b 	ldmdbcc	r1!, {r0, r1, r3, r6, ip, lr}
     25c:	45520052 	ldrbmi	r0, [r2, #-82]	; 0xffffffae
     260:	56524553 			; <UNDEFINED> instruction: 0x56524553
     264:	00374445 	eorseq	r4, r7, r5, asr #8
     268:	74737953 	ldrbtvc	r7, [r3], #-2387	; 0xfffff6ad
     26c:	6e496d65 	cdpvs	13, 4, cr6, cr9, cr5, {3}
     270:	42007469 	andmi	r7, r0, #1761607680	; 0x69000000
     274:	3332504b 	teqcc	r2, #75	; 0x4b
     278:	6e750052 	mrcvs	0, 3, r0, cr5, cr2, {2}
     27c:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
     280:	63206465 			; <UNDEFINED> instruction: 0x63206465
     284:	00726168 	rsbseq	r6, r2, r8, ror #2
     288:	5f4d5449 	svcpl	0x004d5449
     28c:	75427852 	strbvc	r7, [r2, #-2130]	; 0xfffff7ae
     290:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
     294:	6f687300 	svcvs	0x00687300
     298:	69207472 	stmdbvs	r0!, {r1, r4, r5, r6, sl, ip, sp, lr}
     29c:	4200746e 	andmi	r7, r0, #1845493760	; 0x6e000000
     2a0:	5230504b 	eorspl	r5, r0, #75	; 0x4b
     2a4:	53455200 	movtpl	r5, #20992	; 0x5200
     2a8:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     2ac:	4b420044 	blmi	10803c4 <_Min_Stack_Size+0x107ffc4>
     2b0:	52323150 	eorspl	r3, r2, #80, 2
     2b4:	42504100 	subsmi	r4, r0, #0, 2
     2b8:	524e4532 	subpl	r4, lr, #209715200	; 0xc800000
     2bc:	524c4100 	subpl	r4, ip, #0, 2
     2c0:	0052424d 	subseq	r4, r2, sp, asr #4
     2c4:	52474643 	subpl	r4, r7, #70254592	; 0x4300000
     2c8:	504b4200 	subpl	r4, fp, r0, lsl #4
     2cc:	75005238 	strvc	r5, [r0, #-568]	; 0xfffffdc8
     2d0:	33746e69 	cmncc	r4, #1680	; 0x690
     2d4:	00745f32 	rsbseq	r5, r4, r2, lsr pc
     2d8:	52545557 	subspl	r5, r4, #364904448	; 0x15c00000
     2dc:	504b4200 	subpl	r4, fp, r0, lsl #4
     2e0:	00523432 	subseq	r3, r2, r2, lsr r4
     2e4:	31504b42 	cmpcc	r0, r2, asr #22
     2e8:	50410052 	subpl	r0, r1, r2, asr r0
     2ec:	4e453142 	dvfmism	f3, f5, f2
     2f0:	4b420052 	blmi	1080440 <_Min_Stack_Size+0x1080040>
     2f4:	52333150 	eorspl	r3, r3, #80, 2
     2f8:	6f6c6300 	svcvs	0x006c6300
     2fc:	4d5f6b63 	vldrmi	d22, [pc, #-396]	; 178 <_Min_Heap_Size+0x178>
     300:	48530053 	ldmdami	r3, {r0, r1, r4, r6}^
     304:	52544649 	subspl	r4, r4, #76546048	; 0x4900000
     308:	53434900 	movtpl	r4, #14592	; 0x3900
     30c:	42005243 	andmi	r5, r0, #805306372	; 0x30000004
     310:	5239504b 	eorspl	r5, r9, #75	; 0x4b
     314:	6e697500 	cdpvs	5, 6, cr7, cr9, cr0, {0}
     318:	745f3874 	ldrbvc	r3, [pc], #-2164	; 320 <_Min_Heap_Size+0x320>
     31c:	4b455000 	blmi	1154324 <_Min_Stack_Size+0x1153f24>
     320:	00525945 	subseq	r5, r2, r5, asr #18
     324:	32504b42 	subscc	r4, r0, #67584	; 0x10800
     328:	42005235 	andmi	r5, r0, #1342177283	; 0x50000003
     32c:	5232504b 	eorspl	r5, r2, #75	; 0x4b
     330:	69657200 	stmdbvs	r5!, {r9, ip, sp, lr}^
     334:	0074696e 	rsbseq	r6, r4, lr, ror #18
     338:	31504b42 	cmpcc	r0, r2, asr #22
     33c:	6d005234 	sfmvs	f5, 4, [r0, #-208]	; 0xffffff30
     340:	006e6961 	rsbeq	r6, lr, r1, ror #18
     344:	20554e47 	subscs	r4, r5, r7, asr #28
     348:	20373143 	eorscs	r3, r7, r3, asr #2
     34c:	2e332e38 	mrccs	14, 1, r2, cr3, cr8, {1}
     350:	30322031 	eorscc	r2, r2, r1, lsr r0
     354:	37303931 			; <UNDEFINED> instruction: 0x37303931
     358:	28203330 	stmdacs	r0!, {r4, r5, r8, r9, ip, sp}
     35c:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
     360:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
     364:	63675b20 	cmnvs	r7, #32, 22	; 0x8000
     368:	2d382d63 	ldccs	13, cr2, [r8, #-396]!	; 0xfffffe74
     36c:	6e617262 	cdpvs	2, 6, cr7, cr1, cr2, {3}
     370:	72206863 	eorvc	r6, r0, #6488064	; 0x630000
     374:	73697665 	cmnvc	r9, #105906176	; 0x6500000
     378:	206e6f69 	rsbcs	r6, lr, r9, ror #30
     37c:	30333732 	eorscc	r3, r3, r2, lsr r7
     380:	205d3732 	subscs	r3, sp, r2, lsr r7
     384:	68746d2d 	ldmdavs	r4!, {r0, r2, r3, r5, r8, sl, fp, sp, lr}^
     388:	20626d75 	rsbcs	r6, r2, r5, ror sp
     38c:	70636d2d 	rsbvc	r6, r3, sp, lsr #26
     390:	6f633d75 	svcvs	0x00633d75
     394:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
     398:	20336d2d 	eorscs	r6, r3, sp, lsr #26
     39c:	6c666d2d 	stclvs	13, cr6, [r6], #-180	; 0xffffff4c
     3a0:	2d74616f 	ldfcse	f6, [r4, #-444]!	; 0xfffffe44
     3a4:	3d696261 	sfmcc	f6, 2, [r9, #-388]!	; 0xfffffe7c
     3a8:	74666f73 	strbtvc	r6, [r6], #-3955	; 0xfffff08d
     3ac:	616d2d20 	cmnvs	sp, r0, lsr #26
     3b0:	3d686372 	stclcc	3, cr6, [r8, #-456]!	; 0xfffffe38
     3b4:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
     3b8:	206d2d37 	rsbcs	r2, sp, r7, lsr sp
     3bc:	7764672d 	strbvc	r6, [r4, -sp, lsr #14]!
     3c0:	2d667261 	sfmcs	f7, 2, [r6, #-388]!	; 0xfffffe7c
     3c4:	4f2d2032 	svcmi	0x002d2032
     3c8:	662d2073 			; <UNDEFINED> instruction: 0x662d2073
     3cc:	622d6f6e 	eorvs	r6, sp, #440	; 0x1b8
     3d0:	746c6975 	strbtvc	r6, [ip], #-2421	; 0xfffff68b
     3d4:	41006e69 	tstmi	r0, r9, ror #28
     3d8:	4e454248 	cdpmi	2, 4, cr4, cr5, cr8, {2}
     3dc:	49540052 	ldmdbmi	r4, {r1, r4, r6}^
     3e0:	5f31314d 	svcpl	0x0031314d
     3e4:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     3e8:	6e497700 	cdpvs	7, 4, cr7, cr9, cr0, {0}
     3ec:	00786564 	rsbseq	r6, r8, r4, ror #10
     3f0:	43535953 	cmpmi	r3, #1359872	; 0x14c000
     3f4:	545f4746 	ldrbpl	r4, [pc], #-1862	; 3fc <_Min_Heap_Size+0x3fc>
     3f8:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
     3fc:	62006665 	andvs	r6, r0, #105906176	; 0x6500000
     400:	36316675 			; <UNDEFINED> instruction: 0x36316675
     404:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
     408:	52495f39 	subpl	r5, r9, #57, 30	; 0xe4
     40c:	44006e51 	strmi	r6, [r0], #-3665	; 0xfffff1af
     410:	5f31414d 	svcpl	0x0031414d
     414:	6e616843 	cdpvs	8, 6, cr6, cr1, cr3, {2}
     418:	376c656e 	strbcc	r6, [ip, -lr, ror #10]!
     41c:	5152495f 	cmppl	r2, pc, asr r9
     420:	3249006e 	subcc	r0, r9, #110	; 0x6e
     424:	455f3243 	ldrbmi	r3, [pc, #-579]	; 1e9 <_Min_Heap_Size+0x1e9>
     428:	52495f52 	subpl	r5, r9, #328	; 0x148
     42c:	53006e51 	movwpl	r6, #3665	; 0xe51
     430:	495f4356 	ldmdbmi	pc, {r1, r2, r4, r6, r8, r9, lr}^	; <UNPREDICTABLE>
     434:	006e5152 	rsbeq	r5, lr, r2, asr r1
     438:	344d4954 	strbcc	r4, [sp], #-2388	; 0xfffff6ac
     43c:	5152495f 	cmppl	r2, pc, asr r9
     440:	4d44006e 	stclmi	0, cr0, [r4, #-440]	; 0xfffffe48
     444:	435f3141 	cmpmi	pc, #1073741840	; 0x40000010
     448:	6e6e6168 	powvsez	f6, f6, #0.0
     44c:	5f326c65 	svcpl	0x00326c65
     450:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     454:	616d7000 	cmnvs	sp, r0
     458:	7365645f 	cmnvc	r5, #1593835520	; 0x5f000000
     45c:	745f7263 	ldrbvc	r7, [pc], #-611	; 464 <_Min_Stack_Size+0x64>
     460:	526d6200 	rsbpl	r6, sp, #0, 4
     464:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0xfffffe9b
     468:	79547473 	ldmdbvc	r4, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
     46c:	73006570 	movwvc	r6, #1392	; 0x570
     470:	70757465 	rsbsvc	r7, r5, r5, ror #8
     474:	6361705f 	cmnvs	r1, #95	; 0x5f
     478:	0074656b 	rsbseq	r6, r4, fp, ror #10
     47c:	53414c46 	movtpl	r4, #7238	; 0x1c46
     480:	52495f48 	subpl	r5, r9, #72, 30	; 0x120
     484:	62006e51 	andvs	r6, r0, #1296	; 0x510
     488:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
     48c:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
     490:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
     494:	495f3049 	ldmdbmi	pc, {r0, r3, r6, ip, sp}^	; <UNPREDICTABLE>
     498:	006e5152 	rsbeq	r5, lr, r2, asr r1
     49c:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
     4a0:	315f3531 	cmpcc	pc, r1, lsr r5	; <UNPREDICTABLE>
     4a4:	52495f30 	subpl	r5, r9, #48, 30	; 0xc0
     4a8:	6c006e51 	stcvs	14, cr6, [r0], {81}	; 0x51
     4ac:	61747361 	cmnvs	r4, r1, ror #6
     4b0:	00726464 	rsbseq	r6, r2, r4, ror #8
     4b4:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
     4b8:	495f5653 	ldmdbmi	pc, {r0, r1, r4, r6, r9, sl, ip, lr}^	; <UNPREDICTABLE>
     4bc:	006e5152 	rsbeq	r5, lr, r2, asr r1
     4c0:	524d454d 	subpl	r4, sp, #322961408	; 0x13400000
     4c4:	5200504d 	andpl	r5, r0, #77	; 0x4d
     4c8:	495f4343 	ldmdbmi	pc, {r0, r1, r6, r8, r9, lr}^	; <UNPREDICTABLE>
     4cc:	006e5152 	rsbeq	r5, lr, r2, asr r1
     4d0:	6c615677 	stclvs	6, cr5, [r1], #-476	; 0xfffffe24
     4d4:	4d006575 	cfstr32mi	mvfx6, [r0, #-468]	; 0xfffffe2c
     4d8:	726f6d65 	rsbvc	r6, pc, #6464	; 0x1940
     4dc:	6e614d79 	mcrvs	13, 3, r4, cr1, cr9, {3}
     4e0:	6d656761 	stclvs	7, cr6, [r5, #-388]!	; 0xfffffe7c
     4e4:	5f746e65 	svcpl	0x00746e65
     4e8:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     4ec:	30706500 	rsbscc	r6, r0, r0, lsl #10
     4f0:	756f635f 	strbvc	r6, [pc, #-863]!	; 199 <_Min_Heap_Size+0x199>
     4f4:	4900746e 	stmdbmi	r0, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
     4f8:	00525453 	subseq	r5, r2, r3, asr r4
     4fc:	504d4154 	subpl	r4, sp, r4, asr r1
     500:	535f5245 	cmppl	pc, #1342177284	; 0x50000004
     504:	504d4154 	subpl	r4, sp, r4, asr r1
     508:	5152495f 	cmppl	r2, pc, asr r9
     50c:	5349006e 	movtpl	r0, #36974	; 0x906e
     510:	44005245 	strmi	r5, [r0], #-581	; 0xfffffdbb
     514:	5f32414d 	svcpl	0x0032414d
     518:	6e616843 	cdpvs	8, 6, cr6, cr1, cr3, {2}
     51c:	346c656e 	strbtcc	r6, [ip], #-1390	; 0xfffffa92
     520:	5152495f 	cmppl	r2, pc, asr r9
     524:	5352006e 	cmppl	r2, #110	; 0x6e
     528:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     52c:	53003144 	movwpl	r3, #324	; 0x144
     530:	5f314950 	svcpl	0x00314950
     534:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     538:	73755f00 	cmnvc	r5, #0, 30
     53c:	70655f62 	rsbvc	r5, r5, r2, ror #30
     540:	6972775f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}^
     544:	54006574 	strpl	r6, [r0], #-1396	; 0xfffffa8c
     548:	5f364d49 	svcpl	0x00364d49
     54c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     550:	414d4400 	cmpmi	sp, r0, lsl #8
     554:	68435f31 	stmdavs	r3, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
     558:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xfffff19f
     55c:	495f346c 	ldmdbmi	pc, {r2, r3, r5, r6, sl, ip, sp}^	; <UNPREDICTABLE>
     560:	006e5152 	rsbeq	r5, lr, r2, asr r1
     564:	4349564e 	movtmi	r5, #38478	; 0x964e
     568:	616e455f 	cmnvs	lr, pc, asr r5
     56c:	49656c62 	stmdbmi	r5!, {r1, r5, r6, sl, fp, sp, lr}^
     570:	43005152 	movwmi	r5, #338	; 0x152
     574:	5f504d4f 	svcpl	0x00504d4f
     578:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     57c:	42535500 	subsmi	r5, r3, #0, 10
     580:	7079545f 	rsbsvc	r5, r9, pc, asr r4
     584:	66654465 	strbtvs	r4, [r5], -r5, ror #8
     588:	44414400 	strbmi	r4, [r1], #-1024	; 0xfffffc00
     58c:	55005244 	strpl	r5, [r0, #-580]	; 0xfffffdbc
     590:	4c5f4253 	lfmmi	f4, 2, [pc], {83}	; 0x53
     594:	52495f50 	subpl	r5, r9, #80, 30	; 0x140
     598:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
     59c:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     5a0:	62737500 	rsbsvs	r7, r3, #0, 10
     5a4:	616c635f 	cmnvs	ip, pc, asr r3
     5a8:	675f7373 			; <UNDEFINED> instruction: 0x675f7373
     5ac:	735f7465 	cmpvc	pc, #1694498816	; 0x65000000
     5b0:	645f6474 	ldrbvs	r6, [pc], #-1140	; 5b8 <_Min_Stack_Size+0x1b8>
     5b4:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
     5b8:	51524900 	cmppl	r2, r0, lsl #18
     5bc:	79545f6e 	ldmdbvc	r4, {r1, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
     5c0:	65006570 	strvs	r6, [r0, #-1392]	; 0xfffffa90
     5c4:	735f3070 	cmpvc	pc, #112	; 0x70
     5c8:	00646e65 	rsbeq	r6, r4, r5, ror #28
     5cc:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
     5d0:	495f3254 	ldmdbmi	pc, {r2, r4, r6, r9, ip, sp}^	; <UNPREDICTABLE>
     5d4:	006e5152 	rsbeq	r5, lr, r2, asr r1
     5d8:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
     5dc:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
     5e0:	6f697461 	svcvs	0x00697461
     5e4:	5045006e 	subpl	r0, r5, lr, rrx
     5e8:	52005230 	andpl	r5, r0, #48, 4
     5ec:	575f4354 			; <UNDEFINED> instruction: 0x575f4354
     5f0:	5f50554b 	svcpl	0x0050554b
     5f4:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     5f8:	42535500 	subsmi	r5, r3, #0, 10
     5fc:	6464415f 	strbtvs	r4, [r4], #-351	; 0xfffffea1
     600:	70650072 	rsbvc	r0, r5, r2, ror r0
     604:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
     608:	74756f5f 	ldrbtvc	r6, [r5], #-3935	; 0xfffff0a1
     60c:	30706500 	rsbscc	r6, r0, r0, lsl #10
     610:	6675625f 			; <UNDEFINED> instruction: 0x6675625f
     614:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
     618:	495f3249 	ldmdbmi	pc, {r0, r3, r6, r9, ip, sp}^	; <UNPREDICTABLE>
     61c:	006e5152 	rsbeq	r5, lr, r2, asr r1
     620:	31434441 	cmpcc	r3, r1, asr #8
     624:	5152495f 	cmppl	r2, pc, asr r9
     628:	3249006e 	subcc	r0, r9, #110	; 0x6e
     62c:	455f3243 	ldrbmi	r3, [pc, #-579]	; 3f1 <_Min_Heap_Size+0x3f1>
     630:	52495f56 	subpl	r5, r9, #344	; 0x158
     634:	45006e51 	strmi	r6, [r0, #-3665]	; 0xfffff1af
     638:	00523150 	subseq	r3, r2, r0, asr r1
     63c:	33495053 	movtcc	r5, #36947	; 0x9053
     640:	5152495f 	cmppl	r2, pc, asr r9
     644:	7375006e 	cmnvc	r5, #110	; 0x6e
     648:	70655f62 	rsbvc	r5, r5, r2, ror #30
     64c:	61746164 	cmnvs	r4, r4, ror #2
     650:	4300745f 	movwmi	r7, #1119	; 0x45f
     654:	5f504d4f 	svcpl	0x00504d4f
     658:	5f514341 	svcpl	0x00514341
     65c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     660:	414d4400 	cmpmi	sp, r0, lsl #8
     664:	68435f31 	stmdavs	r3, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
     668:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xfffff19f
     66c:	495f366c 	ldmdbmi	pc, {r2, r3, r5, r6, r9, sl, ip, sp}^	; <UNPREDICTABLE>
     670:	006e5152 	rsbeq	r5, lr, r2, asr r1
     674:	32414d44 	subcc	r4, r1, #68, 26	; 0x1100
     678:	6168435f 	cmnvs	r8, pc, asr r3
     67c:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
     680:	52495f31 	subpl	r5, r9, #49, 30	; 0xc4
     684:	5f006e51 	svcpl	0x00006e51
     688:	5f627375 	svcpl	0x00627375
     68c:	725f7065 	subsvc	r7, pc, #101	; 0x65
     690:	00646165 	rsbeq	r6, r4, r5, ror #2
     694:	334d4954 	movtcc	r4, #55636	; 0xd954
     698:	5152495f 	cmppl	r2, pc, asr r9
     69c:	4d44006e 	stclmi	0, cr0, [r4, #-440]	; 0xfffffe48
     6a0:	435f3141 	cmpmi	pc, #1073741840	; 0x40000010
     6a4:	6e6e6168 	powvsez	f6, f6, #0.0
     6a8:	5f316c65 	svcpl	0x00316c65
     6ac:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     6b0:	62737500 	rsbsvs	r7, r3, #0, 10
     6b4:	616c635f 	cmnvs	ip, pc, asr r3
     6b8:	695f7373 	ldmdbvs	pc, {r0, r1, r4, r5, r6, r8, r9, ip, sp, lr}^	; <UNPREDICTABLE>
     6bc:	0074696e 	rsbseq	r6, r4, lr, ror #18
     6c0:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
     6c4:	45005243 	strmi	r5, [r0, #-579]	; 0xfffffdbd
     6c8:	00523250 	subseq	r3, r2, r0, asr r2
     6cc:	314d4954 	cmpcc	sp, r4, asr r9
     6d0:	52495f30 	subpl	r5, r9, #48, 30	; 0xc0
     6d4:	57006e51 	smlsdpl	r0, r1, lr, r6
     6d8:	5f474457 	svcpl	0x00474457
     6dc:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     6e0:	62737500 	rsbsvs	r7, r3, #0, 10
     6e4:	616c635f 	cmnvs	ip, pc, asr r3
     6e8:	645f7373 	ldrbvs	r7, [pc], #-883	; 6f0 <_Min_Stack_Size+0x2f0>
     6ec:	6f637369 	svcvs	0x00637369
     6f0:	63656e6e 	cmnvs	r5, #1760	; 0x6e0
     6f4:	50450074 	subpl	r0, r5, r4, ror r0
     6f8:	42005233 	andmi	r5, r0, #805306371	; 0x30000003
     6fc:	61467375 	hvcvs	26421	; 0x6735
     700:	5f746c75 	svcpl	0x00746c75
     704:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     708:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
     70c:	495f3449 	ldmdbmi	pc, {r0, r3, r6, sl, ip, sp}^	; <UNPREDICTABLE>
     710:	006e5152 	rsbeq	r5, lr, r2, asr r1
     714:	5f445650 	svcpl	0x00445650
     718:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     71c:	66706500 	ldrbtvs	r6, [r0], -r0, lsl #10
     720:	5f636e75 	svcpl	0x00636e75
     724:	73750074 	cmnvc	r5, #116	; 0x74
     728:	78745f62 	ldmdavc	r4!, {r1, r5, r6, r8, r9, sl, fp, ip, lr}^
     72c:	756f635f 	strbvc	r6, [pc, #-863]!	; 3d5 <_Min_Heap_Size+0x3d5>
     730:	4900746e 	stmdbmi	r0, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
     734:	00525043 	subseq	r5, r2, r3, asr #32
     738:	32414d44 	subcc	r4, r1, #68, 26	; 0x1100
     73c:	6168435f 	cmnvs	r8, pc, asr r3
     740:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
     744:	52495f33 	subpl	r5, r9, #51, 30	; 0xcc
     748:	54006e51 	strpl	r6, [r0], #-3665	; 0xfffff1af
     74c:	5f354d49 	svcpl	0x00354d49
     750:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     754:	414d4400 	cmpmi	sp, r0, lsl #8
     758:	68435f31 	stmdavs	r3, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
     75c:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xfffff19f
     760:	495f336c 	ldmdbmi	pc, {r2, r3, r5, r6, r8, r9, ip, sp}^	; <UNPREDICTABLE>
     764:	006e5152 	rsbeq	r5, lr, r2, asr r1
     768:	2f637273 	svccs	0x00637273
     76c:	5f627375 	svcpl	0x00627375
     770:	2e62696c 	vnmulcs.f16	s13, s4, s25	; <UNPREDICTABLE>
     774:	32490063 	subcc	r0, r9, #99	; 0x63
     778:	455f3143 	ldrbmi	r3, [pc, #-323]	; 63d <_Min_Stack_Size+0x23d>
     77c:	52495f56 	subpl	r5, r9, #344	; 0x158
     780:	72006e51 	andvc	r6, r0, #1296	; 0x510
     784:	756e5f78 	strbvc	r5, [lr, #-3960]!	; 0xfffff088
     788:	6c625f6d 	stclvs	15, cr5, [r2], #-436	; 0xfffffe4c
     78c:	736b636f 	cmnvc	fp, #-1140850687	; 0xbc000001
     790:	62737500 	rsbsvs	r7, r3, #0, 10
     794:	616c635f 	cmnvs	ip, pc, asr r3
     798:	655f7373 	ldrbvs	r7, [pc, #-883]	; 42d <_Min_Stack_Size+0x2d>
     79c:	695f3070 	ldmdbvs	pc, {r4, r5, r6, ip, sp}^	; <UNPREDICTABLE>
     7a0:	7874006e 	ldmdavc	r4!, {r1, r2, r3, r5, r6}^
     7a4:	6f6c625f 	svcvs	0x006c625f
     7a8:	69736b63 	ldmdbvs	r3!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^
     7ac:	5300657a 	movwpl	r6, #1402	; 0x57a
     7b0:	00524954 	subseq	r4, r2, r4, asr r9
     7b4:	5f435452 	svcpl	0x00435452
     7b8:	72616c41 	rsbvc	r6, r1, #16640	; 0x4100
     7bc:	52495f6d 	subpl	r5, r9, #436	; 0x1b4
     7c0:	72006e51 	andvc	r6, r0, #1296	; 0x510
     7c4:	69735f78 	ldmdbvs	r3!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     7c8:	4500657a 	strmi	r6, [r0, #-1402]	; 0xfffffa86
     7cc:	00523550 	subseq	r3, r2, r0, asr r5
     7d0:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     7d4:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     7d8:	45520030 	ldrbmi	r0, [r2, #-48]	; 0xffffffd0
     7dc:	56524553 			; <UNDEFINED> instruction: 0x56524553
     7e0:	00314445 	eorseq	r4, r1, r5, asr #8
     7e4:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     7e8:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     7ec:	45520032 	ldrbmi	r0, [r2, #-50]	; 0xffffffce
     7f0:	56524553 			; <UNDEFINED> instruction: 0x56524553
     7f4:	00334445 	eorseq	r4, r3, r5, asr #8
     7f8:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     7fc:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     800:	45520034 	ldrbmi	r0, [r2, #-52]	; 0xffffffcc
     804:	56524553 			; <UNDEFINED> instruction: 0x56524553
     808:	00354445 	eorseq	r4, r5, r5, asr #8
     80c:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     810:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     814:	53550036 	cmppl	r5, #54	; 0x36
     818:	53465f42 	movtpl	r5, #28482	; 0x6f42
     81c:	554b575f 	strbpl	r5, [fp, #-1887]	; 0xfffff8a1
     820:	52495f50 	subpl	r5, r9, #80, 30	; 0x140
     824:	52006e51 	andpl	r6, r0, #1296	; 0x510
     828:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     82c:	39444556 	stmdbcc	r4, {r1, r2, r4, r6, r8, sl, lr}^
     830:	53455200 	movtpl	r5, #20992	; 0x5200
     834:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     838:	55004144 	strpl	r4, [r0, #-324]	; 0xfffffebc
     83c:	54524153 	ldrbpl	r4, [r2], #-339	; 0xfffffead
     840:	52495f31 	subpl	r5, r9, #49, 30	; 0xc4
     844:	75006e51 	strvc	r6, [r0, #-3665]	; 0xfffff1af
     848:	655f6273 	ldrbvs	r6, [pc, #-627]	; 5dd <_Min_Stack_Size+0x1dd>
     84c:	6e695f70 	mcrvs	15, 3, r5, cr9, cr0, {3}
     850:	4e007469 	cdpmi	4, 0, cr7, cr0, cr9, {3}
     854:	614d6e6f 	cmpvs	sp, pc, ror #28
     858:	62616b73 	rsbvs	r6, r1, #117760	; 0x1cc00
     85c:	6e49656c 	cdpvs	5, 4, cr6, cr9, cr12, {3}
     860:	52495f74 	subpl	r5, r9, #116, 30	; 0x1d0
     864:	77006e51 	smlsdvc	r0, r1, lr, r6
     868:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
     86c:	45006874 	strmi	r6, [r0, #-2164]	; 0xfffff78c
     870:	00523650 	subseq	r3, r2, r0, asr r6
     874:	7466656c 	strbtvc	r6, [r6], #-1388	; 0xfffffa94
     878:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
     87c:	495f3149 	ldmdbmi	pc, {r0, r3, r6, r8, ip, sp}^	; <UNPREDICTABLE>
     880:	006e5152 	rsbeq	r5, lr, r2, asr r1
     884:	71655262 	cmnvc	r5, r2, ror #4
     888:	74736575 	ldrbtvc	r6, [r3], #-1397	; 0xfffffa8b
     88c:	49564e00 	ldmdbmi	r6, {r9, sl, fp, lr}^
     890:	79545f43 	ldmdbvc	r4, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
     894:	43006570 	movwmi	r6, #1392	; 0x570
     898:	0052544e 	subseq	r5, r2, lr, asr #8
     89c:	32414d44 	subcc	r4, r1, #68, 26	; 0x1100
     8a0:	6168435f 	cmnvs	r8, pc, asr r3
     8a4:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
     8a8:	52495f35 	subpl	r5, r9, #53, 30	; 0xd4
     8ac:	49006e51 	stmdbmi	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
     8b0:	5f314332 	svcpl	0x00314332
     8b4:	495f5245 	ldmdbmi	pc, {r0, r2, r6, r9, ip, lr}^	; <UNPREDICTABLE>
     8b8:	006e5152 	rsbeq	r5, lr, r2, asr r1
     8bc:	54737953 	ldrbtpl	r7, [r3], #-2387	; 0xfffff6ad
     8c0:	5f6b6369 	svcpl	0x006b6369
     8c4:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     8c8:	6e706500 	cdpvs	5, 7, cr6, cr0, cr0, {0}
     8cc:	54006d75 	strpl	r6, [r0], #-3445	; 0xfffff28b
     8d0:	5f324d49 	svcpl	0x00324d49
     8d4:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     8d8:	62737500 	rsbsvs	r7, r3, #0, 10
     8dc:	616c635f 	cmnvs	ip, pc, asr r3
     8e0:	655f7373 	ldrbvs	r7, [pc, #-883]	; 575 <_Min_Stack_Size+0x175>
     8e4:	6f5f3070 	svcvs	0x005f3070
     8e8:	45007475 	strmi	r7, [r0, #-1141]	; 0xfffffb8b
     8ec:	00523750 	subseq	r3, r2, r0, asr r7
     8f0:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
     8f4:	705f6769 	subsvc	r6, pc, r9, ror #14
     8f8:	5f6b6361 	svcpl	0x006b6361
     8fc:	73750074 	cmnvc	r5, #116	; 0x74
     900:	78725f62 	ldmdavc	r2!, {r1, r5, r6, r8, r9, sl, fp, ip, lr}^
     904:	6464615f 	strbtvs	r6, [r4], #-351	; 0xfffffea1
     908:	78740072 	ldmdavc	r4!, {r1, r4, r5, r6}^
     90c:	6d756e5f 	ldclvs	14, cr6, [r5, #-380]!	; 0xfffffe84
     910:	6f6c625f 	svcvs	0x006c625f
     914:	00736b63 	rsbseq	r6, r3, r3, ror #22
     918:	5f425355 	svcpl	0x00425355
     91c:	495f5048 	ldmdbmi	pc, {r3, r6, ip, lr}^	; <UNPREDICTABLE>
     920:	006e5152 	rsbeq	r5, lr, r2, asr r1
     924:	75626544 	strbvc	r6, [r2, #-1348]!	; 0xfffffabc
     928:	6e6f4d67 	cdpvs	13, 6, cr4, cr15, cr7, {3}
     92c:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
     930:	5152495f 	cmppl	r2, pc, asr r9
     934:	7355006e 	cmpvc	r5, #110	; 0x6e
     938:	46656761 	strbtmi	r6, [r5], -r1, ror #14
     93c:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     940:	5152495f 	cmppl	r2, pc, asr r9
     944:	7872006e 	ldmdavc	r2!, {r1, r2, r3, r5, r6}^
     948:	6f6c625f 	svcvs	0x006c625f
     94c:	69736b63 	ldmdbvs	r3!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^
     950:	6500657a 	strvs	r6, [r0, #-1402]	; 0xfffffa86
     954:	6e756670 	mrcvs	6, 3, r6, cr5, cr0, {3}
     958:	6e695f63 	cdpvs	15, 6, cr5, cr9, cr3, {3}
     95c:	62737500 	rsbsvs	r7, r3, #0, 10
     960:	5f70655f 	svcpl	0x0070655f
     964:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
     968:	756f645f 	strbvc	r6, [pc, #-1119]!	; 511 <_Min_Stack_Size+0x111>
     96c:	00656c62 	rsbeq	r6, r5, r2, ror #24
     970:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
     974:	5f355f39 	svcpl	0x00355f39
     978:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     97c:	34504500 	ldrbcc	r4, [r0], #-1280	; 0xfffffb00
     980:	43490052 	movtmi	r0, #36946	; 0x9052
     984:	53005245 	movwpl	r5, #581	; 0x245
     988:	5f324950 	svcpl	0x00324950
     98c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     990:	42414900 	submi	r4, r1, #0, 18
     994:	49540052 	ldmdbmi	r4, {r1, r4, r6}^
     998:	495f374d 	ldmdbmi	pc, {r0, r2, r3, r6, r8, r9, sl, ip, sp}^	; <UNPREDICTABLE>
     99c:	006e5152 	rsbeq	r5, lr, r2, asr r1
     9a0:	31414d44 	cmpcc	r1, r4, asr #26
     9a4:	6168435f 	cmnvs	r8, pc, asr r3
     9a8:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
     9ac:	52495f35 	subpl	r5, r9, #53, 30	; 0xd4
     9b0:	42006e51 	andmi	r6, r0, #1296	; 0x510
     9b4:	4c424154 	stfmie	f4, [r2], {84}	; 0x54
     9b8:	41440045 	cmpmi	r4, r5, asr #32
     9bc:	52495f43 	subpl	r5, r9, #268	; 0x10c
     9c0:	65006e51 	strvs	r6, [r0, #-3665]	; 0xfffff1af
     9c4:	79745f70 	ldmdbvc	r4!, {r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     9c8:	45006570 	strmi	r6, [r0, #-1392]	; 0xfffffa90
     9cc:	33495458 	movtcc	r5, #37976	; 0x9458
     9d0:	5152495f 	cmppl	r2, pc, asr r9
     9d4:	6964006e 	stmdbvs	r4!, {r1, r2, r3, r5, r6}^
     9d8:	6e695f72 	mcrvs	15, 3, r5, cr9, cr2, {3}
     9dc:	62737500 	rsbsvs	r7, r3, #0, 10
     9e0:	5f78745f 	svcpl	0x0078745f
     9e4:	72646461 	rsbvc	r6, r4, #1627389952	; 0x61000000
     9e8:	50534900 	subspl	r4, r3, r0, lsl #18
     9ec:	73750052 	cmnvc	r5, #82	; 0x52
     9f0:	78725f62 	ldmdavc	r2!, {r1, r5, r6, r8, r9, sl, fp, ip, lr}^
     9f4:	756f635f 	strbvc	r6, [pc, #-863]!	; 69d <_Min_Stack_Size+0x29d>
     9f8:	7200746e 	andvc	r7, r0, #1845493760	; 0x6e000000
     9fc:	756f6378 	strbvc	r6, [pc, #-888]!	; 68c <_Min_Stack_Size+0x28c>
     a00:	4400746e 	strmi	r7, [r0], #-1134	; 0xfffffb92
     a04:	5f32414d 	svcpl	0x0032414d
     a08:	6e616843 	cdpvs	8, 6, cr6, cr1, cr3, {2}
     a0c:	326c656e 	rsbcc	r6, ip, #461373440	; 0x1b800000
     a10:	5152495f 	cmppl	r2, pc, asr r9
     a14:	5355006e 	cmppl	r5, #110	; 0x6e
     a18:	33545241 	cmpcc	r4, #268435460	; 0x10000004
     a1c:	5152495f 	cmppl	r2, pc, asr r9
     a20:	4552006e 	ldrbmi	r0, [r2, #-110]	; 0xffffff92
     a24:	56524553 			; <UNDEFINED> instruction: 0x56524553
     a28:	00384445 	eorseq	r4, r8, r5, asr #8
     a2c:	5f425355 	svcpl	0x00425355
     a30:	495f504c 	ldmdbmi	pc, {r2, r3, r6, ip, lr}^	; <UNPREDICTABLE>
     a34:	006e5152 	rsbeq	r5, lr, r2, asr r1
     a38:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     a3c:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     a40:	45520042 	ldrbmi	r0, [r2, #-66]	; 0xffffffbe
     a44:	56524553 			; <UNDEFINED> instruction: 0x56524553
     a48:	00434445 	subeq	r4, r3, r5, asr #8
     a4c:	7463775f 	strbtvc	r7, [r3], #-1887	; 0xfffff8a1
     a50:	5f626d6f 	svcpl	0x00626d6f
     a54:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
     a58:	725f0065 	subsvc	r0, pc, #101	; 0x65
     a5c:	5f003834 	svcpl	0x00003834
     a60:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
     a64:	625f6c61 	subsvs	r6, pc, #24832	; 0x6100
     a68:	5f006675 	svcpl	0x00006675
     a6c:	7366626c 	cmnvc	r6, #108, 4	; 0xc0000006
     a70:	00657a69 	rsbeq	r7, r5, r9, ror #20
     a74:	616c665f 	cmnvs	ip, pc, asr r6
     a78:	64007367 	strvs	r7, [r0], #-871	; 0xfffffc99
     a7c:	5f617461 	svcpl	0x00617461
     a80:	6c6c6163 	stfvse	f6, [ip], #-396	; 0xfffffe74
     a84:	6b636162 	blvs	18d9014 <_Min_Stack_Size+0x18d8c14>
     a88:	666f5f00 	strbtvs	r5, [pc], -r0, lsl #30
     a8c:	00745f66 	rsbseq	r5, r4, r6, ror #30
     a90:	616d6e5f 	cmnvs	sp, pc, asr lr
     a94:	636f6c6c 	cmnvs	pc, #108, 24	; 0x6c00
     a98:	62737500 	rsbsvs	r7, r3, #0, 10
     a9c:	5f70655f 	svcpl	0x0070655f
     aa0:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
     aa4:	6f645f65 	svcvs	0x00645f65
     aa8:	656c6275 	strbvs	r6, [ip, #-629]!	; 0xfffffd8b
     aac:	4f4c5f00 	svcmi	0x004c5f00
     ab0:	525f4b43 	subspl	r4, pc, #68608	; 0x10c00
     ab4:	52554345 	subspl	r4, r5, #335544321	; 0x14000001
     ab8:	45564953 	ldrbmi	r4, [r6, #-2387]	; 0xfffff6ad
     abc:	7300545f 	movwvc	r5, #1119	; 0x45f
     ac0:	752f6372 	strvc	r6, [pc, #-882]!	; 756 <_Min_Stack_Size+0x356>
     ac4:	635f6273 	cmpvs	pc, #805306375	; 0x30000007
     ac8:	7373616c 	cmnvc	r3, #108, 2
     acc:	6475615f 	ldrbtvs	r6, [r5], #-351	; 0xfffffea1
     ad0:	632e6f69 			; <UNDEFINED> instruction: 0x632e6f69
     ad4:	6e755f00 	cdpvs	15, 7, cr5, cr5, cr0, {0}
     ad8:	63657073 	cmnvs	r5, #115	; 0x73
     adc:	65696669 	strbvs	r6, [r9, #-1641]!	; 0xfffff997
     ae0:	6f6c5f64 	svcvs	0x006c5f64
     ae4:	656c6163 	strbvs	r6, [ip, #-355]!	; 0xfffffe9d
     ae8:	666e695f 			; <UNDEFINED> instruction: 0x666e695f
     aec:	6d5f006f 	ldclvs	0, cr0, [pc, #-444]	; 938 <_Min_Stack_Size+0x538>
     af0:	656c7262 	strbvs	r7, [ip, #-610]!	; 0xfffffd9e
     af4:	74735f6e 	ldrbtvc	r5, [r3], #-3950	; 0xfffff092
     af8:	00657461 	rsbeq	r7, r5, r1, ror #8
     afc:	75625f5f 	strbvc	r5, [r2, #-3935]!	; 0xfffff0a1
     b00:	69746c69 	ldmdbvs	r4!, {r0, r3, r5, r6, sl, fp, sp, lr}^
     b04:	656d5f6e 	strbvs	r5, [sp, #-3950]!	; 0xfffff092
     b08:	7970636d 	ldmdbvc	r0!, {r0, r2, r3, r5, r6, r8, r9, sp, lr}^
     b0c:	656e5f00 	strbvs	r5, [lr, #-3840]!	; 0xfffff100
     b10:	735f0077 	cmpvc	pc, #119	; 0x77
     b14:	756f6474 	strbvc	r6, [pc, #-1140]!	; 6a8 <_Min_Stack_Size+0x2a8>
     b18:	665f0074 			; <UNDEFINED> instruction: 0x665f0074
     b1c:	5f736f70 	svcpl	0x00736f70
     b20:	665f0074 			; <UNDEFINED> instruction: 0x665f0074
     b24:	5f00736e 	svcpl	0x0000736e
     b28:	6b6f6f63 	blvs	1bdc8bc <_Min_Stack_Size+0x1bdc4bc>
     b2c:	5f006569 	svcpl	0x00006569
     b30:	7473626d 	ldrbtvc	r6, [r3], #-621	; 0xfffffd93
     b34:	00657461 	rsbeq	r7, r5, r1, ror #8
     b38:	6d745f5f 	ldclvs	15, cr5, [r4, #-380]!	; 0xfffffe84
     b3c:	6164775f 	cmnvs	r4, pc, asr r7
     b40:	49540079 	ldmdbmi	r4, {r0, r3, r4, r5, r6}^
     b44:	79545f4d 	ldmdbvc	r4, {r0, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
     b48:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
     b4c:	725f0066 	subsvc	r0, pc, #102	; 0x66
     b50:	6c757365 	ldclvs	3, cr7, [r5], #-404	; 0xfffffe6c
     b54:	5f5f0074 	svcpl	0x005f0074
     b58:	454c4946 	strbmi	r4, [ip, #-2374]	; 0xfffff6ba
     b5c:	45434300 	strbmi	r4, [r3, #-768]	; 0xfffffd00
     b60:	5f5f0052 	svcpl	0x005f0052
     b64:	685f6d74 	ldmdavs	pc, {r2, r4, r5, r6, r8, sl, fp, sp, lr}^	; <UNPREDICTABLE>
     b68:	0072756f 	rsbseq	r7, r2, pc, ror #10
     b6c:	6464615f 	strbtvs	r6, [r4], #-351	; 0xfffffea1
     b70:	635f5f00 	cmpvs	pc, #0, 30
     b74:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
     b78:	745f5f00 	ldrbvc	r5, [pc], #-3840	; b80 <_Min_Stack_Size+0x780>
     b7c:	696d5f6d 	stmdbvs	sp!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
     b80:	4343006e 	movtmi	r0, #12398	; 0x306e
     b84:	43003152 	movwmi	r3, #338	; 0x152
     b88:	00325243 	eorseq	r5, r2, r3, asr #4
     b8c:	524d4343 	subpl	r4, sp, #201326593	; 0xc000001
     b90:	43430031 	movtmi	r0, #12337	; 0x3031
     b94:	0032524d 	eorseq	r5, r2, sp, asr #4
     b98:	6e61725f 	mcrvs	2, 3, r7, cr1, cr15, {2}
     b9c:	00383464 	eorseq	r3, r8, r4, ror #8
     ba0:	7365725f 	cmnvc	r5, #-268435451	; 0xf0000005
     ba4:	5f746c75 	svcpl	0x00746c75
     ba8:	5355006b 	cmppl	r5, #107	; 0x6b
     bac:	6f435f42 	svcvs	0x00435f42
     bb0:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
     bb4:	63736544 	cmnvs	r3, #68, 10	; 0x11000000
     bb8:	74706972 	ldrbtvc	r6, [r0], #-2418	; 0xfffff68e
     bbc:	5f00726f 	svcpl	0x0000726f
     bc0:	74637361 	strbtvc	r7, [r3], #-865	; 0xfffffc9f
     bc4:	5f656d69 	svcpl	0x00656d69
     bc8:	00667562 	rsbeq	r7, r6, r2, ror #10
     bcc:	46735f5f 	uhsaxmi	r5, r3, pc	; <UNPREDICTABLE>
     bd0:	00454c49 	subeq	r4, r5, r9, asr #24
     bd4:	7364775f 	cmnvc	r4, #24903680	; 0x17c0000
     bd8:	5f685f00 	svcpl	0x00685f00
     bdc:	6e727265 	cdpvs	2, 7, cr7, cr2, cr5, {3}
     be0:	735f006f 	cmpvc	pc, #111	; 0x6f
     be4:	006b6565 	rsbeq	r6, fp, r5, ror #10
     be8:	7562755f 	strbvc	r7, [r2, #-1375]!	; 0xfffffaa1
     bec:	655f0066 	ldrbvs	r0, [pc, #-102]	; b8e <_Min_Stack_Size+0x78e>
     bf0:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
     bf4:	79636e65 	stmdbvc	r3!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
     bf8:	745f5f00 	ldrbvc	r5, [pc], #-3840	; c00 <_Min_Stack_Size+0x800>
     bfc:	65735f6d 	ldrbvs	r5, [r3, #-3949]!	; 0xfffff093
     c00:	5f5f0063 	svcpl	0x005f0063
     c04:	795f6d74 	ldmdbvc	pc, {r2, r4, r5, r6, r8, sl, fp, sp, lr}^	; <UNPREDICTABLE>
     c08:	00796164 	rsbseq	r6, r9, r4, ror #2
     c0c:	636e695f 	cmnvs	lr, #1556480	; 0x17c000
     c10:	626d5f00 	rsbvs	r5, sp, #0, 30
     c14:	6f747273 	svcvs	0x00747273
     c18:	5f736377 	svcpl	0x00736377
     c1c:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
     c20:	49440065 	stmdbmi	r4, {r0, r2, r5, r6}^
     c24:	5f005245 	svcpl	0x00005245
     c28:	6c61765f 	stclvs	6, cr7, [r1], #-380	; 0xfffffe84
     c2c:	5f006575 	svcpl	0x00006575
     c30:	00733570 	rsbseq	r3, r3, r0, ror r5
     c34:	6c626d5f 	stclvs	13, cr6, [r2], #-380	; 0xfffffe84
     c38:	735f6e65 	cmpvc	pc, #1616	; 0x650
     c3c:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
     c40:	745f5f00 	ldrbvc	r5, [pc], #-3840	; c48 <_Min_Stack_Size+0x848>
     c44:	646d5f6d 	strbtvs	r5, [sp], #-3949	; 0xfffff093
     c48:	5f007961 	svcpl	0x00007961
     c4c:	5f676973 	svcpl	0x00676973
     c50:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
     c54:	626d5f00 	rsbvs	r5, sp, #0, 30
     c58:	776f7472 			; <UNDEFINED> instruction: 0x776f7472
     c5c:	74735f63 	ldrbtvc	r5, [r3], #-3939	; 0xfffff09d
     c60:	00657461 	rsbeq	r7, r5, r1, ror #8
     c64:	6f6c665f 	svcvs	0x006c665f
     c68:	745f6b63 	ldrbvc	r6, [pc], #-2915	; c70 <_Min_Stack_Size+0x870>
     c6c:	775f5f00 	ldrbvc	r5, [pc, -r0, lsl #30]
     c70:	5f006863 	svcpl	0x00006863
     c74:	73626f69 	cmnvc	r2, #420	; 0x1a4
     c78:	6c635f00 	stclvs	15, cr5, [r3], #-0
     c7c:	0065736f 	rsbeq	r7, r5, pc, ror #6
     c80:	64735f5f 	ldrbtvs	r5, [r3], #-3935	; 0xfffff0a1
     c84:	6e696469 	cdpvs	4, 6, cr6, cr9, cr9, {3}
     c88:	5f007469 	svcpl	0x00007469
     c8c:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
     c90:	675f006e 	ldrbvs	r0, [pc, -lr, rrx]
     c94:	616d6d61 	cmnvs	sp, r1, ror #26
     c98:	6769735f 			; <UNDEFINED> instruction: 0x6769735f
     c9c:	6d61676e 	stclvs	7, cr6, [r1, #-440]!	; 0xfffffe48
     ca0:	656e5f00 	strbvs	r5, [lr, #-3840]!	; 0xfffff100
     ca4:	00667478 	rsbeq	r7, r6, r8, ror r4
     ca8:	7361625f 	cmnvc	r1, #-268435451	; 0xf0000005
     cac:	665f0065 	ldrbvs	r0, [pc], -r5, rrx
     cb0:	6c656572 	cfstr64vs	mvdx6, [r5], #-456	; 0xfffffe38
     cb4:	00747369 	rsbseq	r7, r4, r9, ror #6
     cb8:	6c756d5f 	ldclvs	13, cr6, [r5], #-380	; 0xfffffe84
     cbc:	5f5f0074 	svcpl	0x005f0074
     cc0:	6e6f4c55 	mcrvs	12, 3, r4, cr15, cr5, {2}
     cc4:	775f0067 	ldrbvc	r0, [pc, -r7, rrx]
     cc8:	6f747263 	svcvs	0x00747263
     ccc:	735f626d 	cmpvc	pc, #-805306362	; 0xd0000006
     cd0:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
     cd4:	69665f00 	stmdbvs	r6!, {r8, r9, sl, fp, ip, lr}^
     cd8:	5f00656c 	svcpl	0x0000656c
     cdc:	656c635f 	strbvs	r6, [ip, #-863]!	; 0xfffffca1
     ce0:	70756e61 	rsbsvc	r6, r5, r1, ror #28
     ce4:	626d5f00 	rsbvs	r5, sp, #0, 30
     ce8:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
     cec:	00745f65 	rsbseq	r5, r4, r5, ror #30
     cf0:	6d745f5f 	ldclvs	15, cr5, [r4, #-380]!	; 0xfffffe84
     cf4:	6473695f 	ldrbtvs	r6, [r3], #-2399	; 0xfffff6a1
     cf8:	5f007473 	svcpl	0x00007473
     cfc:	72736377 	rsbsvc	r6, r3, #-603979775	; 0xdc000001
     d00:	626d6f74 	rsbvs	r6, sp, #116, 30	; 0x1d0
     d04:	74735f73 	ldrbtvc	r5, [r3], #-3955	; 0xfffff08d
     d08:	00657461 	rsbeq	r7, r5, r1, ror #8
     d0c:	646e695f 	strbtvs	r6, [lr], #-2399	; 0xfffff6a1
     d10:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
     d14:	52495f34 	subpl	r5, r9, #52, 30	; 0xd0
     d18:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
     d1c:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     d20:	745f5f00 	ldrbvc	r5, [pc], #-3840	; d28 <_Min_Stack_Size+0x928>
     d24:	6f6d5f6d 	svcvs	0x006d5f6d
     d28:	6f6c006e 	svcvs	0x006c006e
     d2c:	6420676e 	strtvs	r6, [r0], #-1902	; 0xfffff892
     d30:	6c62756f 	cfstr64vs	mvdx7, [r2], #-444	; 0xfffffe44
     d34:	73640065 	cmnvc	r4, #101	; 0x65
     d38:	5f006e69 	svcpl	0x00006e69
     d3c:	7562735f 	strbvc	r7, [r2, #-863]!	; 0xfffffca1
     d40:	5f5f0066 	svcpl	0x005f0066
     d44:	795f6d74 	ldmdbvc	pc, {r2, r4, r5, r6, r8, sl, fp, sp, lr}^	; <UNPREDICTABLE>
     d48:	00726165 	rsbseq	r6, r2, r5, ror #2
     d4c:	6574615f 	ldrbvs	r6, [r4, #-351]!	; 0xfffffea1
     d50:	00746978 	rsbseq	r6, r4, r8, ror r9
     d54:	52434d53 	subpl	r4, r3, #5312	; 0x14c0
     d58:	69425f00 	stmdbvs	r2, {r8, r9, sl, fp, ip, lr}^
     d5c:	746e6967 	strbtvc	r6, [lr], #-2407	; 0xfffff699
     d60:	414d4400 	cmpmi	sp, r0, lsl #8
     d64:	53620052 	cmnpl	r2, #82	; 0x52
     d68:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
     d6c:	5f5f0067 	svcpl	0x005f0067
     d70:	5f006673 	svcpl	0x00006673
     d74:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
     d78:	61645f00 	cmnvs	r4, r0, lsl #30
     d7c:	5f006174 	svcpl	0x00006174
     d80:	6863775f 	stmdavs	r3!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}^
     d84:	675f0062 	ldrbvs	r0, [pc, -r2, rrx]
     d88:	61626f6c 	cmnvs	r2, ip, ror #30
     d8c:	6d695f6c 	stclvs	15, cr5, [r9, #-432]!	; 0xfffffe50
     d90:	65727570 	ldrbvs	r7, [r2, #-1392]!	; 0xfffffa90
     d94:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
     d98:	6e6f5f00 	cdpvs	15, 6, cr5, cr15, cr0, {0}
     d9c:	6978655f 	ldmdbvs	r8!, {r0, r1, r2, r3, r4, r6, r8, sl, sp, lr}^
     da0:	72615f74 	rsbvc	r5, r1, #116, 30	; 0x1d0
     da4:	5f007367 	svcpl	0x00007367
     da8:	7366666f 	cmnvc	r6, #116391936	; 0x6f00000
     dac:	55007465 	strpl	r7, [r0, #-1125]	; 0xfffffb9b
     db0:	535f4253 	cmppl	pc, #805306373	; 0x30000005
     db4:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
     db8:	72655367 	rsbvc	r5, r5, #-1677721599	; 0x9c000001
     dbc:	446c6169 	strbtmi	r6, [ip], #-361	; 0xfffffe97
     dc0:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
     dc4:	6f747069 	svcvs	0x00747069
     dc8:	6c5f0072 	mrrcvs	0, 7, r0, pc, cr2	; <UNPREDICTABLE>
     dcc:	6c61636f 	stclvs	3, cr6, [r1], #-444	; 0xfffffe44
     dd0:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
     dd4:	6675625f 			; <UNDEFINED> instruction: 0x6675625f
     dd8:	42535500 	subsmi	r5, r3, #0, 10
     ddc:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
     de0:	4c676e69 	stclmi	14, cr6, [r7], #-420	; 0xfffffe5c
     de4:	44676e61 	strbtmi	r6, [r7], #-3681	; 0xfffff19f
     de8:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
     dec:	6f747069 	svcvs	0x00747069
     df0:	755f0072 	ldrbvc	r0, [pc, #-114]	; d86 <_Min_Stack_Size+0x986>
     df4:	6573756e 	ldrbvs	r7, [r3, #-1390]!	; 0xfffffa92
     df8:	635f0064 	cmpvs	pc, #100	; 0x64
     dfc:	656c7476 	strbvs	r7, [ip, #-1142]!	; 0xfffffb8a
     e00:	6d5f006e 	ldclvs	0, cr0, [pc, #-440]	; c50 <_Min_Stack_Size+0x850>
     e04:	64777861 	ldrbtvs	r7, [r7], #-2145	; 0xfffff79f
     e08:	6c5f0073 	mrrcvs	0, 7, r0, pc, cr3	; <UNPREDICTABLE>
     e0c:	5f613436 	svcpl	0x00613436
     e10:	00667562 	rsbeq	r7, r6, r2, ror #10
     e14:	6b6c625f 	blvs	1b19798 <_Min_Stack_Size+0x1b19398>
     e18:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
     e1c:	745f5f00 	ldrbvc	r5, [pc], #-3840	; e24 <_Min_Stack_Size+0xa24>
     e20:	6c5f006d 	mrrcvs	0, 6, r0, pc, cr13	; <UNPREDICTABLE>
     e24:	006b636f 	rsbeq	r6, fp, pc, ror #6
     e28:	5f425355 	svcpl	0x00425355
     e2c:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
     e30:	75516563 	ldrbvc	r6, [r1, #-1379]	; 0xfffffa9d
     e34:	66696c61 	strbtvs	r6, [r9], -r1, ror #24
     e38:	44726569 	ldrbtmi	r6, [r2], #-1385	; 0xfffffa97
     e3c:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
     e40:	6f747069 	svcvs	0x00747069
     e44:	6e5f0072 	mrcvs	0, 2, r0, cr15, cr2, {3}
     e48:	73626f69 	cmnvc	r2, #420	; 0x1a4
     e4c:	73645f00 	cmnvc	r4, #0, 30
     e50:	61685f6f 	cmnvs	r8, pc, ror #30
     e54:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     e58:	76635f00 	strbtvc	r5, [r3], -r0, lsl #30
     e5c:	66756274 			; <UNDEFINED> instruction: 0x66756274
     e60:	52434300 	subpl	r4, r3, #0, 6
     e64:	43430033 	movtmi	r0, #12339	; 0x3033
     e68:	5f003452 	svcpl	0x00003452
     e6c:	64746567 	ldrbtvs	r6, [r4], #-1383	; 0xfffffa99
     e70:	5f657461 	svcpl	0x00657461
     e74:	00727265 	rsbseq	r7, r2, r5, ror #4
     e78:	5f425355 	svcpl	0x00425355
     e7c:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
     e80:	65446563 	strbvs	r6, [r4, #-1379]	; 0xfffffa9d
     e84:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
     e88:	726f7470 	rsbvc	r7, pc, #112, 8	; 0x70000000
     e8c:	53455200 	movtpl	r5, #20992	; 0x5200
     e90:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     e94:	00323144 	eorseq	r3, r2, r4, asr #2
     e98:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     e9c:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     ea0:	62003731 	andvs	r3, r0, #12845056	; 0xc40000
     ea4:	63736544 	cmnvs	r3, #68, 10	; 0x11000000
     ea8:	74706972 	ldrbtvc	r6, [r0], #-2418	; 0xfffff68e
     eac:	7954726f 	ldmdbvc	r4, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
     eb0:	55006570 	strpl	r6, [r0, #-1392]	; 0xfffffa90
     eb4:	535f4253 	cmppl	pc, #805306373	; 0x30000005
     eb8:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
     ebc:	6e614d67 	cdpvs	13, 6, cr4, cr1, cr7, {3}
     ec0:	63616675 	cmnvs	r1, #122683392	; 0x7500000
     ec4:	69727574 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, sl, ip, sp, lr}^
     ec8:	6544676e 	strbvs	r6, [r4, #-1902]	; 0xfffff892
     ecc:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
     ed0:	726f7470 	rsbvc	r7, pc, #112, 8	; 0x70000000
     ed4:	6c675f00 	stclvs	15, cr5, [r7], #-0
     ed8:	5f006575 	svcpl	0x00006575
     edc:	6c67735f 	stclvs	3, cr7, [r7], #-380	; 0xfffffe84
     ee0:	5f006575 	svcpl	0x00006575
     ee4:	74727473 	ldrbtvc	r7, [r2], #-1139	; 0xfffffb8d
     ee8:	6c5f6b6f 	mrrcvs	11, 6, r6, pc, cr15	; <UNPREDICTABLE>
     eec:	00747361 	rsbseq	r7, r4, r1, ror #6
     ef0:	74626d5f 	strbtvc	r6, [r2], #-3423	; 0xfffff2a1
     ef4:	5f63776f 	svcpl	0x0063776f
     ef8:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
     efc:	6c5f0065 	mrrcvs	0, 6, r0, pc, cr5	; <UNPREDICTABLE>
     f00:	6c61636f 	stclvs	3, cr6, [r1], #-444	; 0xfffffe44
     f04:	665f0065 	ldrbvs	r0, [pc], -r5, rrx
     f08:	6772616e 	ldrbvs	r6, [r2, -lr, ror #2]!
     f0c:	725f0073 	subsvc	r0, pc, #115	; 0x73
     f10:	746e6565 	strbtvc	r6, [lr], #-1381	; 0xfffffa9b
     f14:	42535500 	subsmi	r5, r3, #0, 10
     f18:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
     f1c:	50676e69 	rsbpl	r6, r7, r9, ror #28
     f20:	44646f72 	strbtmi	r6, [r4], #-3954	; 0xfffff08e
     f24:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
     f28:	6f747069 	svcvs	0x00747069
     f2c:	665f0072 			; <UNDEFINED> instruction: 0x665f0072
     f30:	7079746e 	rsbsvc	r7, r9, lr, ror #8
     f34:	5f007365 	svcpl	0x00007365
     f38:	6675626e 	ldrbtvs	r6, [r5], -lr, ror #4
     f3c:	6e755f00 	cdpvs	15, 7, cr5, cr5, cr0, {0}
     f40:	64657375 	strbtvs	r7, [r5], #-885	; 0xfffffc8b
     f44:	6e61725f 	mcrvs	2, 3, r7, cr1, cr15, {2}
     f48:	4c620064 	stclmi	0, cr0, [r2], #-400	; 0xfffffe70
     f4c:	74676e65 	strbtvc	r6, [r7], #-3685	; 0xfffff19b
     f50:	665f0068 	ldrbvs	r0, [pc], -r8, rrx
     f54:	7367616c 	cmnvc	r7, #108, 2
     f58:	695f0032 	ldmdbvs	pc, {r1, r4, r5}^	; <UNPREDICTABLE>
     f5c:	78635f73 	stmdavc	r3!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     f60:	735f0061 	cmpvc	pc, #97	; 0x61
     f64:	00646565 	rsbeq	r6, r4, r5, ror #10
     f68:	6e61725f 	mcrvs	2, 3, r7, cr1, cr15, {2}
     f6c:	656e5f64 	strbvs	r5, [lr, #-3940]!	; 0xfffff09c
     f70:	5f007478 	svcpl	0x00007478
     f74:	78657461 	stmdavc	r5!, {r0, r5, r6, sl, ip, sp, lr}^
     f78:	00307469 	eorseq	r7, r0, r9, ror #8
     f7c:	6f6c5f5f 	svcvs	0x006c5f5f
     f80:	656c6163 	strbvs	r6, [ip, #-355]!	; 0xfffffe9d
     f84:	5f00745f 	svcpl	0x0000745f
     f88:	65647473 	strbvs	r7, [r4, #-1139]!	; 0xfffffb8d
     f8c:	77007272 	smlsdxvc	r0, r2, r2, r7
     f90:	5f746e69 	svcpl	0x00746e69
     f94:	5f5f0074 	svcpl	0x005f0074
     f98:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
     f9c:	7272615f 	rsbsvc	r6, r2, #-1073741801	; 0xc0000017
     fa0:	735f7961 	cmpvc	pc, #1589248	; 0x184000
     fa4:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
     fa8:	7a697300 	bvc	1a5dbb0 <_Min_Stack_Size+0x1a5d7b0>
     fac:	00745f65 	rsbseq	r5, r4, r5, ror #30
     fb0:	696c5f5f 	stmdbvs	ip!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
     fb4:	695f6362 	ldmdbvs	pc, {r1, r5, r6, r8, r9, sp, lr}^	; <UNPREDICTABLE>
     fb8:	5f74696e 	svcpl	0x0074696e
     fbc:	61727261 	cmnvs	r2, r1, ror #4
     fc0:	622f0079 	eorvs	r0, pc, #121	; 0x79
     fc4:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
     fc8:	77656e2f 	strbvc	r6, [r5, -pc, lsr #28]!
     fcc:	2d62696c 			; <UNDEFINED> instruction: 0x2d62696c
     fd0:	7667476b 	strbtvc	r4, [r7], -fp, ror #14
     fd4:	6e2f4577 	mcrvs	5, 1, r4, cr15, cr7, {3}
     fd8:	696c7765 	stmdbvs	ip!, {r0, r2, r5, r6, r8, r9, sl, ip, sp, lr}^
     fdc:	2e332d62 	cdpcs	13, 3, cr2, cr3, cr2, {3}
     fe0:	2f302e33 	svccs	0x00302e33
     fe4:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
     fe8:	616e5f64 	cmnvs	lr, r4, ror #30
     fec:	612f6f6e 			; <UNDEFINED> instruction: 0x612f6f6e
     ff0:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     ff4:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     ff8:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     ffc:	7568742f 	strbvc	r7, [r8, #-1071]!	; 0xfffffbd1
    1000:	762f626d 	strtvc	r6, [pc], -sp, ror #4
    1004:	2f6d2d37 	svccs	0x006d2d37
    1008:	70666f6e 	rsbvc	r6, r6, lr, ror #30
    100c:	77656e2f 	strbvc	r6, [r5, -pc, lsr #28]!
    1010:	2f62696c 	svccs	0x0062696c
    1014:	6362696c 	cmnvs	r2, #108, 18	; 0x1b0000
    1018:	73696d2f 	cmnvc	r9, #3008	; 0xbc0
    101c:	5f5f0063 	svcpl	0x005f0063
    1020:	69657270 	stmdbvs	r5!, {r4, r5, r6, r9, ip, sp, lr}^
    1024:	5f74696e 	svcpl	0x0074696e
    1028:	61727261 	cmnvs	r2, r1, ror #4
    102c:	74735f79 	ldrbtvc	r5, [r3], #-3961	; 0xfffff087
    1030:	00747261 	rsbseq	r7, r4, r1, ror #4
    1034:	20554e47 	subscs	r4, r5, r7, asr #28
    1038:	20373143 	eorscs	r3, r7, r3, asr #2
    103c:	2e332e38 	mrccs	14, 1, r2, cr3, cr8, {1}
    1040:	30322031 	eorscc	r2, r2, r1, lsr r0
    1044:	37303931 			; <UNDEFINED> instruction: 0x37303931
    1048:	28203330 	stmdacs	r0!, {r4, r5, r8, r9, ip, sp}
    104c:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
    1050:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
    1054:	63675b20 	cmnvs	r7, #32, 22	; 0x8000
    1058:	2d382d63 	ldccs	13, cr2, [r8, #-396]!	; 0xfffffe74
    105c:	6e617262 	cdpvs	2, 6, cr7, cr1, cr2, {3}
    1060:	72206863 	eorvc	r6, r0, #6488064	; 0x630000
    1064:	73697665 	cmnvc	r9, #105906176	; 0x6500000
    1068:	206e6f69 	rsbcs	r6, lr, r9, ror #30
    106c:	30333732 	eorscc	r3, r3, r2, lsr r7
    1070:	205d3732 	subscs	r3, sp, r2, lsr r7
    1074:	6c666d2d 	stclvs	13, cr6, [r6], #-180	; 0xffffff4c
    1078:	2d74616f 	ldfcse	f6, [r4, #-444]!	; 0xfffffe44
    107c:	3d696261 	sfmcc	f6, 2, [r9, #-388]!	; 0xfffffe7c
    1080:	74666f73 	strbtvc	r6, [r6], #-3955	; 0xfffff08d
    1084:	746d2d20 	strbtvc	r2, [sp], #-3360	; 0xfffff2e0
    1088:	626d7568 	rsbvs	r7, sp, #104, 10	; 0x1a000000
    108c:	666d2d20 	strbtvs	r2, [sp], -r0, lsr #26
    1090:	74616f6c 	strbtvc	r6, [r1], #-3948	; 0xfffff094
    1094:	6962612d 	stmdbvs	r2!, {r0, r2, r3, r5, r8, sp, lr}^
    1098:	666f733d 			; <UNDEFINED> instruction: 0x666f733d
    109c:	6d2d2074 	stcvs	0, cr2, [sp, #-464]!	; 0xfffffe30
    10a0:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    10a4:	6d72613d 	ldfvse	f6, [r2, #-244]!	; 0xffffff0c
    10a8:	6d2d3776 	stcvs	7, cr3, [sp, #-472]!	; 0xfffffe28
    10ac:	20672d20 	rsbcs	r2, r7, r0, lsr #26
    10b0:	20324f2d 	eorscs	r4, r2, sp, lsr #30
    10b4:	6f6e662d 	svcvs	0x006e662d
    10b8:	6975622d 	ldmdbvs	r5!, {r0, r2, r3, r5, r9, sp, lr}^
    10bc:	6e69746c 	cdpvs	4, 6, cr7, cr9, cr12, {3}
    10c0:	705f5f00 	subsvc	r5, pc, r0, lsl #30
    10c4:	6e696572 	mcrvs	5, 3, r6, cr9, cr2, {3}
    10c8:	615f7469 	cmpvs	pc, r9, ror #8
    10cc:	79617272 	stmdbvc	r1!, {r1, r4, r5, r6, r9, ip, sp, lr}^
    10d0:	646e655f 	strbtvs	r6, [lr], #-1375	; 0xfffffaa1
    10d4:	695f5f00 	ldmdbvs	pc, {r8, r9, sl, fp, ip, lr}^	; <UNPREDICTABLE>
    10d8:	5f74696e 	svcpl	0x0074696e
    10dc:	61727261 	cmnvs	r2, r1, ror #4
    10e0:	6e655f79 	mcrvs	15, 3, r5, cr5, cr9, {3}
    10e4:	2e2e0064 	cdpcs	0, 2, cr0, cr14, cr4, {3}
    10e8:	2f2e2e2f 	svccs	0x002e2e2f
    10ec:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    10f0:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    10f4:	2f2e2e2f 	svccs	0x002e2e2f
    10f8:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    10fc:	656e2f2e 	strbvs	r2, [lr, #-3886]!	; 0xfffff0d2
    1100:	62696c77 	rsbvs	r6, r9, #30464	; 0x7700
    1104:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    1108:	696d2f63 	stmdbvs	sp!, {r0, r1, r5, r6, r8, r9, sl, fp, sp}^
    110c:	692f6373 	stmdbvs	pc!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}	; <UNPREDICTABLE>
    1110:	2e74696e 	vsubcs.f16	s13, s8, s29	; <UNPREDICTABLE>
    1114:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
    1118:	2f2e2e2f 	svccs	0x002e2e2f
    111c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1120:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1124:	2f2e2e2f 	svccs	0x002e2e2f
    1128:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    112c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1130:	77656e2f 	strbvc	r6, [r5, -pc, lsr #28]!
    1134:	2f62696c 	svccs	0x0062696c
    1138:	6362696c 	cmnvs	r2, #108, 18	; 0x1b0000
    113c:	63616d2f 	cmnvs	r1, #3008	; 0xbc0
    1140:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
    1144:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
    1148:	6d656d2f 	stclvs	13, cr6, [r5, #-188]!	; 0xffffff44
    114c:	2d797063 	ldclcs	0, cr7, [r9, #-396]!	; 0xfffffe74
    1150:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
    1154:	532e6d37 			; <UNDEFINED> instruction: 0x532e6d37
    1158:	75622f00 	strbvc	r2, [r2, #-3840]!	; 0xfffff100
    115c:	2f646c69 	svccs	0x00646c69
    1160:	6c77656e 	cfldr64vs	mvdx6, [r7], #-440	; 0xfffffe48
    1164:	6b2d6269 	blvs	b59b10 <_Min_Stack_Size+0xb59710>
    1168:	77766747 	ldrbvc	r6, [r6, -r7, asr #14]!
    116c:	656e2f45 	strbvs	r2, [lr, #-3909]!	; 0xfffff0bb
    1170:	62696c77 	rsbvs	r6, r9, #30464	; 0x7700
    1174:	332e332d 			; <UNDEFINED> instruction: 0x332e332d
    1178:	622f302e 	eorvs	r3, pc, #46	; 0x2e
    117c:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
    1180:	6e616e5f 	mcrvs	14, 3, r6, cr1, cr15, {2}
    1184:	72612f6f 	rsbvc	r2, r1, #444	; 0x1bc
    1188:	6f6e2d6d 	svcvs	0x006e2d6d
    118c:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    1190:	2f696261 	svccs	0x00696261
    1194:	6d756874 	ldclvs	8, cr6, [r5, #-464]!	; 0xfffffe30
    1198:	37762f62 	ldrbcc	r2, [r6, -r2, ror #30]!
    119c:	6e2f6d2d 	cdpvs	13, 2, cr6, cr15, cr13, {1}
    11a0:	2f70666f 	svccs	0x0070666f
    11a4:	6c77656e 	cfldr64vs	mvdx6, [r7], #-440	; 0xfffffe48
    11a8:	6c2f6269 	sfmvs	f6, 4, [pc], #-420	; 100c <_Min_Stack_Size+0xc0c>
    11ac:	2f636269 	svccs	0x00636269
    11b0:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    11b4:	2f656e69 	svccs	0x00656e69
    11b8:	006d7261 	rsbeq	r7, sp, r1, ror #4
    11bc:	20554e47 	subscs	r4, r5, r7, asr #28
    11c0:	32205341 	eorcc	r5, r0, #67108865	; 0x4000001
    11c4:	2e32332e 	cdpcs	3, 3, cr3, cr2, cr14, {1}
    11c8:	Address 0x00000000000011c8 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <_Min_Stack_Size+0x10d0924>
   4:	35312820 	ldrcc	r2, [r1, #-2080]!	; 0xfffff7e0
   8:	322d383a 	eorcc	r3, sp, #3801088	; 0x3a0000
   c:	2d393130 	ldfcss	f3, [r9, #-192]!	; 0xffffff40
  10:	312d3371 			; <UNDEFINED> instruction: 0x312d3371
  14:	2e382029 	cdpcs	0, 3, cr2, cr8, cr9, {1}
  18:	20312e33 	eorscs	r2, r1, r3, lsr lr
  1c:	39313032 	ldmdbcc	r1!, {r1, r4, r5, ip, sp}
  20:	33303730 	teqcc	r0, #48, 14	; 0xc00000
  24:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
  28:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
  2c:	5b202965 	blpl	80a5c8 <_Min_Stack_Size+0x80a1c8>
  30:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
  34:	72622d38 	rsbvc	r2, r2, #56, 26	; 0xe00
  38:	68636e61 	stmdavs	r3!, {r0, r5, r6, r9, sl, fp, sp, lr}^
  3c:	76657220 	strbtvc	r7, [r5], -r0, lsr #4
  40:	6f697369 	svcvs	0x00697369
  44:	3732206e 	ldrcc	r2, [r2, -lr, rrx]!
  48:	37323033 			; <UNDEFINED> instruction: 0x37323033
  4c:	Address 0x000000000000004c is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	08000150 	stmdaeq	r0, {r4, r6, r8}
  1c:	00000098 	muleq	r0, r8, r0
  20:	0000000c 	andeq	r0, r0, ip
  24:	00000000 	andeq	r0, r0, r0
  28:	080001e8 	stmdaeq	r0, {r3, r5, r6, r7, r8}
  2c:	00000124 	andeq	r0, r0, r4, lsr #2
  30:	0000000c 	andeq	r0, r0, ip
  34:	00000000 	andeq	r0, r0, r0
  38:	0800030c 	stmdaeq	r0, {r2, r3, r8, r9}
  3c:	00000048 	andeq	r0, r0, r8, asr #32
  40:	0000000c 	andeq	r0, r0, ip
  44:	00000000 	andeq	r0, r0, r0
  48:	08000354 	stmdaeq	r0, {r2, r4, r6, r8, r9}
  4c:	00000002 	andeq	r0, r0, r2
  50:	0000000c 	andeq	r0, r0, ip
  54:	00000000 	andeq	r0, r0, r0
  58:	08000356 	stmdaeq	r0, {r1, r2, r4, r6, r8, r9}
  5c:	00000002 	andeq	r0, r0, r2
  60:	0000000c 	andeq	r0, r0, ip
  64:	00000000 	andeq	r0, r0, r0
  68:	08000358 	stmdaeq	r0, {r3, r4, r6, r8, r9}
  6c:	0000000c 	andeq	r0, r0, ip
  70:	00000014 	andeq	r0, r0, r4, lsl r0
  74:	00000000 	andeq	r0, r0, r0
  78:	08000ca8 	stmdaeq	r0, {r3, r5, r7, sl, fp}
  7c:	00000084 	andeq	r0, r0, r4, lsl #1
  80:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
  84:	00018e02 	andeq	r8, r1, r2, lsl #28
  88:	0000000c 	andeq	r0, r0, ip
  8c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
  90:	7c020001 	stcvc	0, cr0, [r2], {1}
  94:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  98:	0000000c 	andeq	r0, r0, ip
  9c:	00000088 	andeq	r0, r0, r8, lsl #1
  a0:	08000364 	stmdaeq	r0, {r2, r5, r6, r8, r9}
  a4:	00000002 	andeq	r0, r0, r2
  a8:	0000000c 	andeq	r0, r0, ip
  ac:	00000088 	andeq	r0, r0, r8, lsl #1
  b0:	08000366 	stmdaeq	r0, {r1, r2, r5, r6, r8, r9}
  b4:	00000002 	andeq	r0, r0, r2
  b8:	0000000c 	andeq	r0, r0, ip
  bc:	00000088 	andeq	r0, r0, r8, lsl #1
  c0:	08000368 	stmdaeq	r0, {r3, r5, r6, r8, r9}
  c4:	00000002 	andeq	r0, r0, r2
  c8:	0000000c 	andeq	r0, r0, ip
  cc:	00000088 	andeq	r0, r0, r8, lsl #1
  d0:	0800036a 	stmdaeq	r0, {r1, r3, r5, r6, r8, r9}
  d4:	00000004 	andeq	r0, r0, r4
  d8:	0000000c 	andeq	r0, r0, ip
  dc:	00000088 	andeq	r0, r0, r8, lsl #1
  e0:	0800036e 	stmdaeq	r0, {r1, r2, r3, r5, r6, r8, r9}
  e4:	00000004 	andeq	r0, r0, r4
  e8:	0000000c 	andeq	r0, r0, ip
  ec:	00000088 	andeq	r0, r0, r8, lsl #1
  f0:	08000372 	stmdaeq	r0, {r1, r4, r5, r6, r8, r9}
  f4:	0000006e 	andeq	r0, r0, lr, rrx
  f8:	0000001c 	andeq	r0, r0, ip, lsl r0
  fc:	00000088 	andeq	r0, r0, r8, lsl #1
 100:	080003e0 	stmdaeq	r0, {r5, r6, r7, r8, r9}
 104:	000000ec 	andeq	r0, r0, ip, ror #1
 108:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
 10c:	86048505 	strhi	r8, [r4], -r5, lsl #10
 110:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 114:	00000001 	andeq	r0, r0, r1
 118:	0000001c 	andeq	r0, r0, ip, lsl r0
 11c:	00000088 	andeq	r0, r0, r8, lsl #1
 120:	080004cc 	stmdaeq	r0, {r2, r3, r6, r7, sl}
 124:	0000014c 	andeq	r0, r0, ip, asr #2
 128:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
 12c:	86048505 	strhi	r8, [r4], -r5, lsl #10
 130:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 134:	00000001 	andeq	r0, r0, r1
 138:	00000018 	andeq	r0, r0, r8, lsl r0
 13c:	00000088 	andeq	r0, r0, r8, lsl #1
 140:	08000618 	stmdaeq	r0, {r3, r4, r9, sl}
 144:	00000128 	andeq	r0, r0, r8, lsr #2
 148:	83100e41 	tsthi	r0, #1040	; 0x410
 14c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
 150:	00018e02 	andeq	r8, r1, r2, lsl #28
 154:	0000001c 	andeq	r0, r0, ip, lsl r0
 158:	00000088 	andeq	r0, r0, r8, lsl #1
 15c:	08000740 	stmdaeq	r0, {r6, r8, r9, sl}
 160:	00000054 	andeq	r0, r0, r4, asr r0
 164:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
 168:	86048505 	strhi	r8, [r4], -r5, lsl #10
 16c:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 170:	00000001 	andeq	r0, r0, r1
 174:	0000001c 	andeq	r0, r0, ip, lsl r0
 178:	00000088 	andeq	r0, r0, r8, lsl #1
 17c:	08000794 	stmdaeq	r0, {r2, r4, r7, r8, r9, sl}
 180:	0000005c 	andeq	r0, r0, ip, asr r0
 184:	83180e41 	tsthi	r8, #1040	; 0x410
 188:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
 18c:	87038604 	strhi	r8, [r3, -r4, lsl #12]
 190:	00018e02 	andeq	r8, r1, r2, lsl #28
 194:	00000018 	andeq	r0, r0, r8, lsl r0
 198:	00000088 	andeq	r0, r0, r8, lsl #1
 19c:	080007f0 	stmdaeq	r0, {r4, r5, r6, r7, r8, r9, sl}
 1a0:	0000005a 	andeq	r0, r0, sl, asr r0
 1a4:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 1a8:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
 1ac:	00000001 	andeq	r0, r0, r1
 1b0:	00000020 	andeq	r0, r0, r0, lsr #32
 1b4:	00000088 	andeq	r0, r0, r8, lsl #1
 1b8:	0800084a 	stmdaeq	r0, {r1, r3, r6, fp}
 1bc:	0000011a 	andeq	r0, r0, sl, lsl r1
 1c0:	84180e41 	ldrhi	r0, [r8], #-3649	; 0xfffff1bf
 1c4:	86038504 	strhi	r8, [r3], -r4, lsl #10
 1c8:	02018e02 	andeq	r8, r1, #2, 28
 1cc:	100e0a46 	andne	r0, lr, r6, asr #20
 1d0:	00000b41 	andeq	r0, r0, r1, asr #22
 1d4:	0000000c 	andeq	r0, r0, ip
 1d8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 1dc:	7c020001 	stcvc	0, cr0, [r2], {1}
 1e0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 1e4:	0000000c 	andeq	r0, r0, ip
 1e8:	000001d4 	ldrdeq	r0, [r0], -r4
 1ec:	08000964 	stmdaeq	r0, {r2, r5, r6, r8, fp}
 1f0:	0000007c 	andeq	r0, r0, ip, ror r0
 1f4:	0000000c 	andeq	r0, r0, ip
 1f8:	000001d4 	ldrdeq	r0, [r0], -r4
 1fc:	080009e0 	stmdaeq	r0, {r5, r6, r7, r8, fp}
 200:	00000004 	andeq	r0, r0, r4
 204:	0000001c 	andeq	r0, r0, ip, lsl r0
 208:	000001d4 	ldrdeq	r0, [r0], -r4
 20c:	080009e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, fp}
 210:	00000024 	andeq	r0, r0, r4, lsr #32
 214:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
 218:	43018e02 	movwmi	r8, #7682	; 0x1e02
 21c:	4a04880e 	bmi	12225c <_Min_Stack_Size+0x121e5c>
 220:	0000080e 	andeq	r0, r0, lr, lsl #16
 224:	00000028 	andeq	r0, r0, r8, lsr #32
 228:	000001d4 	ldrdeq	r0, [r0], -r4
 22c:	08000a08 	stmdaeq	r0, {r3, r9, fp}
 230:	00000098 	muleq	r0, r8, r0
 234:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
 238:	86068507 	strhi	r8, [r6], -r7, lsl #10
 23c:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
 240:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
 244:	a00e4201 	andge	r4, lr, r1, lsl #4
 248:	0e0a6601 	cfmadd32eq	mvax0, mvfx6, mvfx10, mvfx1
 24c:	000b421c 	andeq	r4, fp, ip, lsl r2
 250:	0000000c 	andeq	r0, r0, ip
 254:	000001d4 	ldrdeq	r0, [r0], -r4
 258:	08000aa0 	stmdaeq	r0, {r5, r7, r9, fp}
 25c:	0000001c 	andeq	r0, r0, ip, lsl r0
 260:	00000014 	andeq	r0, r0, r4, lsl r0
 264:	000001d4 	ldrdeq	r0, [r0], -r4
 268:	08000abc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9, fp}
 26c:	0000004c 	andeq	r0, r0, ip, asr #32
 270:	83080e41 	movwhi	r0, #36417	; 0x8e41
 274:	00018e02 	andeq	r8, r1, r2, lsl #28
 278:	0000000c 	andeq	r0, r0, ip
 27c:	000001d4 	ldrdeq	r0, [r0], -r4
 280:	08000b08 	stmdaeq	r0, {r3, r8, r9, fp}
 284:	00000020 	andeq	r0, r0, r0, lsr #32
 288:	0000000c 	andeq	r0, r0, ip
 28c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 290:	7c020001 	stcvc	0, cr0, [r2], {1}
 294:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 298:	00000018 	andeq	r0, r0, r8, lsl r0
 29c:	00000288 	andeq	r0, r0, r8, lsl #5
 2a0:	08000b28 	stmdaeq	r0, {r3, r5, r8, r9, fp}
 2a4:	00000048 	andeq	r0, r0, r8, asr #32
 2a8:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
 2ac:	86038504 	strhi	r8, [r3], -r4, lsl #10
 2b0:	00018e02 	andeq	r8, r1, r2, lsl #28
