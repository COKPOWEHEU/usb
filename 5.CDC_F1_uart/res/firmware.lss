
res/firmware.elf:     file format elf32-littlearm


Disassembly of section .isr_vector:

08000000 <g_pfnVectors>:
 8000000:	20005000 	andcs	r5, r0, r0
 8000004:	08000c09 	stmdaeq	r0, {r0, r3, sl, fp}
 8000008:	08000c4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp}
 800000c:	08000c4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp}
 8000010:	08000c4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp}
 8000014:	08000c4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp}
 8000018:	08000c4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp}
	...
 800002c:	08000c4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp}
 8000030:	08000c4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp}
 8000034:	00000000 	andeq	r0, r0, r0
 8000038:	08000c4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp}
 800003c:	08000c4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp}
 8000040:	08000c4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp}
 8000044:	08000c4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp}
 8000048:	08000c4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp}
 800004c:	08000c4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp}
 8000050:	08000c4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp}
 8000054:	08000c4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp}
 8000058:	08000c4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp}
 800005c:	08000c4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp}
 8000060:	08000c4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp}
 8000064:	08000c4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp}
 8000068:	08000c4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp}
 800006c:	08000c4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp}
 8000070:	08000c4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp}
 8000074:	08000c4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp}
 8000078:	08000c4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp}
 800007c:	08000c4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp}
 8000080:	08000c4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp}
 8000084:	08000c4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp}
 8000088:	08000c4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp}
 800008c:	08000c4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp}
 8000090:	080004b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, sl}
 8000094:	08000c4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp}
 8000098:	08000c4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp}
 800009c:	08000c4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp}
 80000a0:	08000c4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp}
 80000a4:	08000c4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp}
 80000a8:	08000c4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp}
 80000ac:	08000c4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp}
 80000b0:	08000c4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp}
 80000b4:	08000c4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp}
 80000b8:	08000c4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp}
 80000bc:	08000c4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp}
 80000c0:	08000c4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp}
 80000c4:	08000c4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp}
 80000c8:	08000c4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp}
 80000cc:	08000c4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp}
 80000d0:	08000c4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp}
 80000d4:	08000857 	stmdaeq	r0, {r0, r1, r2, r4, r6, fp}
 80000d8:	08000c4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp}
 80000dc:	08000c4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp}
 80000e0:	08000c4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp}
 80000e4:	08000c4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp}
 80000e8:	08000c4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp}
	...
 8000108:	f108f85f 			; <UNDEFINED> instruction: 0xf108f85f

Disassembly of section .text:

0800010c <SysClockMax-0x14>:
 800010c:	08000d2c 	stmdaeq	r0, {r2, r3, r5, r8, sl, fp}
 8000110:	20000000 	andcs	r0, r0, r0
 8000114:	2000000c 	andcs	r0, r0, ip
 8000118:	2000000c 	andcs	r0, r0, ip
 800011c:	20000264 	andcs	r0, r0, r4, ror #4

08000120 <SysClockMax>:
#define F_CPU 72000000
//F_HSE = 8 MHz
int8_t SysClockMax(){
  int i;
  uint32_t tmp;
  RCC->CR &=~RCC_CR_HSEON;
 8000120:	4b27      	ldr	r3, [pc, #156]	; (80001c0 <SysClockMax+0xa0>)
 8000122:	681a      	ldr	r2, [r3, #0]
 8000124:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8000128:	601a      	str	r2, [r3, #0]
  RCC->CR &=~RCC_CR_HSEBYP;
 800012a:	681a      	ldr	r2, [r3, #0]
 800012c:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8000130:	601a      	str	r2, [r3, #0]
  RCC->CR |= RCC_CR_HSEON;
 8000132:	681a      	ldr	r2, [r3, #0]
 8000134:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8000138:	601a      	str	r2, [r3, #0]
 800013a:	f640 72ff 	movw	r2, #4095	; 0xfff
  for(i=0;i<0x0FFF;i++){
    if(RCC->CR & RCC_CR_HSERDY){i=0x1FFF; break;}
 800013e:	6819      	ldr	r1, [r3, #0]
 8000140:	0388      	lsls	r0, r1, #14
 8000142:	d416      	bmi.n	8000172 <SysClockMax+0x52>
  for(i=0;i<0x0FFF;i++){
 8000144:	3a01      	subs	r2, #1
 8000146:	d1fa      	bne.n	800013e <SysClockMax+0x1e>
  }
  if(i != 0x1FFF)return SCME_HSE; //can not start HSE
 8000148:	2001      	movs	r0, #1
 800014a:	4770      	bx	lr
  RCC->CFGR = tmp;
  for(i=0;i<0x0FFF;i++){
    if((RCC->CFGR & RCC_CFGR_SWS)==RCC_CFGR_SWS_PLL){i=0x1FFF; break;}
  }
  if(i != 0x1FFF)return SCME_SW;
  return SCME_OK;
 800014c:	2000      	movs	r0, #0
}
 800014e:	4770      	bx	lr
  tmp = RCC->CFGR;
 8000150:	685a      	ldr	r2, [r3, #4]
  tmp &=~RCC_CFGR_SW;
 8000152:	f022 0203 	bic.w	r2, r2, #3
  tmp |= RCC_CFGR_SW_PLL;
 8000156:	f042 0202 	orr.w	r2, r2, #2
  RCC->CFGR = tmp;
 800015a:	605a      	str	r2, [r3, #4]
 800015c:	f640 72ff 	movw	r2, #4095	; 0xfff
    if((RCC->CFGR & RCC_CFGR_SWS)==RCC_CFGR_SWS_PLL){i=0x1FFF; break;}
 8000160:	6859      	ldr	r1, [r3, #4]
 8000162:	f001 010c 	and.w	r1, r1, #12
 8000166:	2908      	cmp	r1, #8
 8000168:	d0f0      	beq.n	800014c <SysClockMax+0x2c>
  for(i=0;i<0x0FFF;i++){
 800016a:	3a01      	subs	r2, #1
 800016c:	d1f8      	bne.n	8000160 <SysClockMax+0x40>
  if(i != 0x1FFF)return SCME_SW;
 800016e:	2003      	movs	r0, #3
 8000170:	4770      	bx	lr
  FLASH->ACR &=~FLASH_ACR_PRFTBE;
 8000172:	4a14      	ldr	r2, [pc, #80]	; (80001c4 <SysClockMax+0xa4>)
 8000174:	6811      	ldr	r1, [r2, #0]
 8000176:	f021 0110 	bic.w	r1, r1, #16
 800017a:	6011      	str	r1, [r2, #0]
  FLASH->ACR |= FLASH_ACR_PRFTBE;
 800017c:	6811      	ldr	r1, [r2, #0]
 800017e:	f041 0110 	orr.w	r1, r1, #16
 8000182:	6011      	str	r1, [r2, #0]
  FLASH->ACR &=~FLASH_ACR_LATENCY;
 8000184:	6811      	ldr	r1, [r2, #0]
 8000186:	f021 0107 	bic.w	r1, r1, #7
 800018a:	6011      	str	r1, [r2, #0]
  FLASH->ACR |= FLASH_ACR_LATENCY_2;
 800018c:	6811      	ldr	r1, [r2, #0]
 800018e:	f041 0104 	orr.w	r1, r1, #4
 8000192:	6011      	str	r1, [r2, #0]
  tmp = RCC->CFGR;
 8000194:	6859      	ldr	r1, [r3, #4]
  tmp &=~RCC_CFGR_PPRE1;
 8000196:	4a0c      	ldr	r2, [pc, #48]	; (80001c8 <SysClockMax+0xa8>)
 8000198:	400a      	ands	r2, r1
  tmp |= RCC_CFGR_PPRE1_DIV2;
 800019a:	f442 12e8 	orr.w	r2, r2, #1900544	; 0x1d0000
 800019e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
  RCC->CFGR = tmp;
 80001a2:	605a      	str	r2, [r3, #4]
  RCC->CR |= RCC_CR_PLLON;
 80001a4:	681a      	ldr	r2, [r3, #0]
 80001a6:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 80001aa:	601a      	str	r2, [r3, #0]
 80001ac:	f640 72ff 	movw	r2, #4095	; 0xfff
    if(RCC->CR & RCC_CR_PLLRDY){i=0x1FFF; break;}
 80001b0:	6819      	ldr	r1, [r3, #0]
 80001b2:	0189      	lsls	r1, r1, #6
 80001b4:	d4cc      	bmi.n	8000150 <SysClockMax+0x30>
  for(i=0;i<0x0FFF;i++){
 80001b6:	3a01      	subs	r2, #1
 80001b8:	d1fa      	bne.n	80001b0 <SysClockMax+0x90>
  if(i != 0x1FFF)return SCME_PLL; //can not enable PLL
 80001ba:	2002      	movs	r0, #2
 80001bc:	4770      	bx	lr
 80001be:	bf00      	nop
 80001c0:	40021000 	andmi	r1, r2, r0
 80001c4:	40022000 	andmi	r2, r2, r0
 80001c8:	ffc2c00f 			; <UNDEFINED> instruction: 0xffc2c00f

080001cc <_init>:
 80001cc:	4770      	bx	lr

080001ce <SystemInit>:
#include "hardware.h"
#include "usb_lib.h"
#include "clock.h"

void __attribute__((weak)) _init(void){}
void __attribute__((weak)) SystemInit(void){}
 80001ce:	4770      	bx	lr

080001d0 <sleep>:

void sleep(uint32_t time){
  while(time--)asm volatile("nop");
 80001d0:	f110 30ff 	adds.w	r0, r0, #4294967295	; 0xffffffff
 80001d4:	d200      	bcs.n	80001d8 <sleep+0x8>
}
 80001d6:	4770      	bx	lr
  while(time--)asm volatile("nop");
 80001d8:	bf00      	nop
 80001da:	e7f9      	b.n	80001d0 <sleep>

080001dc <endp_callback_default>:
__attribute__((weak))void usb_class_disconnect(){}
__attribute__((weak))void usb_class_poll(){}
__attribute__((weak))char usb_class_ep0_in(config_pack_t *req, void **data, uint16_t *size){return 0;}
__attribute__((weak))char usb_class_ep0_out(config_pack_t *req, uint16_t offset, uint16_t rx_size){return 0;}

static void endp_callback_default(uint8_t epnum){}
 80001dc:	4770      	bx	lr
__attribute__((weak))void usb_class_init(){}
 80001de:	4770      	bx	lr

080001e0 <usb_class_disconnect>:
 80001e0:	4770      	bx	lr
 80001e2:	4770      	bx	lr
__attribute__((weak))char usb_class_ep0_in(config_pack_t *req, void **data, uint16_t *size){return 0;}
 80001e4:	2000      	movs	r0, #0
 80001e6:	4770      	bx	lr
__attribute__((weak))char usb_class_ep0_out(config_pack_t *req, uint16_t offset, uint16_t rx_size){return 0;}
 80001e8:	2000      	movs	r0, #0
 80001ea:	4770      	bx	lr

080001ec <USB_setup>:
epfunc_t epfunc_out[STM32ENDPOINTS];

static config_pack_t setup_packet;

void USB_setup(){
  RCC->APB1ENR |= RCC_APB1ENR_USBEN;
 80001ec:	4a15      	ldr	r2, [pc, #84]	; (8000244 <USB_setup+0x58>)
 80001ee:	69d3      	ldr	r3, [r2, #28]
 80001f0:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80001f4:	61d3      	str	r3, [r2, #28]
#ifdef SYSCFG_PMC_USB_PU
  RCC->APB2ENR |= RCC_APB2ENR_SYSCFGEN;
  SYSCFG->PMC &=~ SYSCFG_PMC_USB_PU;
#elif defined USB_PULLUP
  GPIO_config( USB_PULLUP );
 80001f6:	f5a2 3282 	sub.w	r2, r2, #66560	; 0x10400
 80001fa:	6813      	ldr	r3, [r2, #0]
 80001fc:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 8000200:	f443 7340 	orr.w	r3, r3, #768	; 0x300
 8000204:	6013      	str	r3, [r2, #0]
  GPO_OFF( USB_PULLUP );
 8000206:	f44f 2380 	mov.w	r3, #262144	; 0x40000
 800020a:	6113      	str	r3, [r2, #16]
#else
  #warning USB_PULLUP undefined
#endif
  USB->CNTR   = USB_CNTR_FRES; // Force USB Reset
 800020c:	2201      	movs	r2, #1
 800020e:	4b0e      	ldr	r3, [pc, #56]	; (8000248 <USB_setup+0x5c>)
 8000210:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
 8000214:	4a0d      	ldr	r2, [pc, #52]	; (800024c <USB_setup+0x60>)
  for(uint32_t ctr = 0; ctr < 100000; ++ctr) asm volatile("nop"); // wait >1ms
 8000216:	bf00      	nop
 8000218:	3a01      	subs	r2, #1
 800021a:	d1fc      	bne.n	8000216 <USB_setup+0x2a>
  USB->CNTR   = 0;
 800021c:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
  USB->BTABLE = 0;
 8000220:	f8a3 2050 	strh.w	r2, [r3, #80]	; 0x50
  USB->DADDR  = 0;
 8000224:	f8a3 204c 	strh.w	r2, [r3, #76]	; 0x4c
  USB->ISTR   = 0;
 8000228:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
  USB->CNTR   = USB_CNTR_RESETM | USB_CNTR_WKUPM;
 800022c:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
 8000230:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
 * Enable a device specific interupt in the NVIC interrupt controller.
 * The interrupt number cannot be a negative value.
 */
static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
 8000234:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
 8000238:	4b05      	ldr	r3, [pc, #20]	; (8000250 <USB_setup+0x64>)
 800023a:	601a      	str	r2, [r3, #0]
  NVIC_EnableIRQ(USB_LP_IRQn);
#ifdef SYSCFG_PMC_USB_PU
  SYSCFG->PMC |= SYSCFG_PMC_USB_PU;
#elif defined USB_PULLUP
  GPO_ON( USB_PULLUP );
 800023c:	2204      	movs	r2, #4
 800023e:	4b05      	ldr	r3, [pc, #20]	; (8000254 <USB_setup+0x68>)
 8000240:	611a      	str	r2, [r3, #16]
#endif
}
 8000242:	4770      	bx	lr
 8000244:	40021000 	andmi	r1, r2, r0
 8000248:	40005c00 	andmi	r5, r0, r0, lsl #24
 800024c:	000186a0 	andeq	r8, r1, r0, lsr #13
 8000250:	e000e100 	and	lr, r0, r0, lsl #2
 8000254:	40010c00 	andmi	r0, r1, r0, lsl #24

08000258 <usb_ep_init>:
    if( bytesread >= setup_packet.wLength )usb_ep_write(0, NULL, 0);
  }
}

static uint16_t lastaddr = LASTADDR_DEFAULT;
void usb_ep_init(uint8_t epnum, uint8_t ep_type, uint16_t size, epfunc_t func){
 8000258:	b5f0      	push	{r4, r5, r6, r7, lr}
  if(func == NULL)func = endp_callback_default;
 800025a:	4c41      	ldr	r4, [pc, #260]	; (8000360 <usb_ep_init+0x108>)
  uint8_t dir_in = (epnum & 0x80);
  epnum &= 0x0F;
 800025c:	f000 070f 	and.w	r7, r0, #15
 8000260:	fa4f fc80 	sxtb.w	ip, r0
 8000264:	00bd      	lsls	r5, r7, #2
  if(func == NULL)func = endp_callback_default;
 8000266:	2b00      	cmp	r3, #0
 8000268:	bf08      	it	eq
 800026a:	4623      	moveq	r3, r4
  
  if(dir_in){
 800026c:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 8000270:	f1bc 0f00 	cmp.w	ip, #0
 8000274:	f505 45b8 	add.w	r5, r5, #23552	; 0x5c00
 8000278:	da17      	bge.n	80002aa <usb_ep_init+0x52>
    ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 800027a:	8828      	ldrh	r0, [r5, #0]
 800027c:	f020 00c0 	bic.w	r0, r0, #192	; 0xc0
 8000280:	0500      	lsls	r0, r0, #20
 8000282:	0d00      	lsrs	r0, r0, #20
 8000284:	f440 4000 	orr.w	r0, r0, #32768	; 0x8000
 8000288:	f040 0080 	orr.w	r0, r0, #128	; 0x80
 800028c:	8028      	strh	r0, [r5, #0]
  }else{
    ENDP_STAT_RX(epnum, USB_EP_RX_DIS);
  }
  
  uint16_t buf = USB_EPx(epnum);
 800028e:	882c      	ldrh	r4, [r5, #0]
  buf = (buf & ~(USB_EP_DTOG_RX | USB_EP_DTOG_TX | USB_EPTX_STAT | USB_EPRX_STAT)) | USB_EP_CTR_RX | USB_EP_CTR_TX;
  buf = (buf & ~USB_EPADDR_FIELD) | epnum;
  //buf = (buf & ~USB_EP_T_FIELD) | ep_type;
  buf &=~ USB_EP_T_FIELD;
  switch(ep_type){
 8000290:	2902      	cmp	r1, #2
 8000292:	f404 6410 	and.w	r4, r4, #2304	; 0x900
 8000296:	ea44 0407 	orr.w	r4, r4, r7
 800029a:	d011      	beq.n	80002c0 <usb_ep_init+0x68>
 800029c:	2903      	cmp	r1, #3
 800029e:	d035      	beq.n	800030c <usb_ep_init+0xb4>
 80002a0:	2900      	cmp	r1, #0
 80002a2:	d136      	bne.n	8000312 <usb_ep_init+0xba>
    case USB_ENDP_CTRL: buf |= USB_EP_CONTROL; break;
 80002a4:	f444 4402 	orr.w	r4, r4, #33280	; 0x8200
 80002a8:	e00c      	b.n	80002c4 <usb_ep_init+0x6c>
    ENDP_STAT_RX(epnum, USB_EP_RX_DIS);
 80002aa:	882c      	ldrh	r4, [r5, #0]
 80002ac:	f024 04f0 	bic.w	r4, r4, #240	; 0xf0
 80002b0:	04a4      	lsls	r4, r4, #18
 80002b2:	0ca4      	lsrs	r4, r4, #18
 80002b4:	f444 4400 	orr.w	r4, r4, #32768	; 0x8000
 80002b8:	f044 0480 	orr.w	r4, r4, #128	; 0x80
 80002bc:	802c      	strh	r4, [r5, #0]
 80002be:	e7e6      	b.n	800028e <usb_ep_init+0x36>
  buf &=~ USB_EP_T_FIELD;
 80002c0:	f444 4400 	orr.w	r4, r4, #32768	; 0x8000
    case USB_ENDP_BULK: buf |= USB_EP_BULK; break;
    case USB_ENDP_INTR: buf |= USB_EP_INTERRUPT; break;
    default: buf |= USB_EP_ISOCHRONOUS; //в дескрипторах изохронные точки могут иметь расширенные настройки
 80002c4:	f044 0480 	orr.w	r4, r4, #128	; 0x80
  }
  USB_EPx(epnum) = buf;
 80002c8:	802c      	strh	r4, [r5, #0]
  
  if( dir_in ){
 80002ca:	4826      	ldr	r0, [pc, #152]	; (8000364 <usb_ep_init+0x10c>)
 80002cc:	013c      	lsls	r4, r7, #4
 80002ce:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
 80002d2:	f1bc 0f00 	cmp.w	ip, #0
 80002d6:	8806      	ldrh	r6, [r0, #0]
 80002d8:	f504 44c0 	add.w	r4, r4, #24576	; 0x6000
 80002dc:	da1c      	bge.n	8000318 <usb_ep_init+0xc0>
    usb_epdata[epnum].usb_tx_addr = lastaddr;
 80002de:	6026      	str	r6, [r4, #0]
    epfunc_in[epnum] = func;
 80002e0:	4c21      	ldr	r4, [pc, #132]	; (8000368 <usb_ep_init+0x110>)
    if((ep_type & 0x03) == USB_ENDP_ISO){
 80002e2:	f001 0103 	and.w	r1, r1, #3
    epfunc_in[epnum] = func;
 80002e6:	f844 3027 	str.w	r3, [r4, r7, lsl #2]
    if((ep_type & 0x03) == USB_ENDP_ISO){
 80002ea:	f640 733f 	movw	r3, #3903	; 0xf3f
 80002ee:	2901      	cmp	r1, #1
      ENDP_STAT_TX(epnum, USB_EP_TX_VALID);
 80002f0:	8829      	ldrh	r1, [r5, #0]
 80002f2:	ea03 0301 	and.w	r3, r3, r1
 80002f6:	f483 4300 	eor.w	r3, r3, #32768	; 0x8000
 80002fa:	bf0c      	ite	eq
 80002fc:	f083 03b0 	eoreq.w	r3, r3, #176	; 0xb0
    }else{
      ENDP_STAT_TX(epnum, USB_EP_TX_NAK);
 8000300:	f083 03a0 	eorne.w	r3, r3, #160	; 0xa0
      usb_epdata[epnum].rx_num_blocks = size / 32 - 1;
    }
    epfunc_out[epnum] = func;
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
  }
  lastaddr += size;
 8000304:	4432      	add	r2, r6
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
 8000306:	802b      	strh	r3, [r5, #0]
  lastaddr += size;
 8000308:	8002      	strh	r2, [r0, #0]
}
 800030a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    case USB_ENDP_INTR: buf |= USB_EP_INTERRUPT; break;
 800030c:	f444 4406 	orr.w	r4, r4, #34304	; 0x8600
 8000310:	e7d8      	b.n	80002c4 <usb_ep_init+0x6c>
    default: buf |= USB_EP_ISOCHRONOUS; //в дескрипторах изохронные точки могут иметь расширенные настройки
 8000312:	f444 4404 	orr.w	r4, r4, #33792	; 0x8400
 8000316:	e7d5      	b.n	80002c4 <usb_ep_init+0x6c>
    usb_epdata[epnum].usb_rx_addr = lastaddr;
 8000318:	60a6      	str	r6, [r4, #8]
      usb_epdata[epnum].rx_blocksize = 0;
 800031a:	89a1      	ldrh	r1, [r4, #12]
    if(size < 64){
 800031c:	2a3f      	cmp	r2, #63	; 0x3f
      usb_epdata[epnum].rx_blocksize = 1;
 800031e:	bf8b      	itete	hi
 8000320:	f441 4100 	orrhi.w	r1, r1, #32768	; 0x8000
      usb_epdata[epnum].rx_blocksize = 0;
 8000324:	f36f 31cf 	bfcls	r1, #15, #1
      usb_epdata[epnum].rx_blocksize = 1;
 8000328:	81a1      	strhhi	r1, [r4, #12]
      usb_epdata[epnum].rx_blocksize = 0;
 800032a:	81a1      	strhls	r1, [r4, #12]
      usb_epdata[epnum].rx_num_blocks = size / 32 - 1;
 800032c:	f8b4 c00c 	ldrh.w	ip, [r4, #12]
 8000330:	bf8a      	itet	hi
 8000332:	0951      	lsrhi	r1, r2, #5
      usb_epdata[epnum].rx_num_blocks = size / 2;
 8000334:	f3c2 0144 	ubfxls	r1, r2, #1, #5
      usb_epdata[epnum].rx_num_blocks = size / 32 - 1;
 8000338:	f101 31ff 	addhi.w	r1, r1, #4294967295	; 0xffffffff
 800033c:	f361 2c8e 	bfi	ip, r1, #10, #5
    epfunc_out[epnum] = func;
 8000340:	490a      	ldr	r1, [pc, #40]	; (800036c <usb_ep_init+0x114>)
      usb_epdata[epnum].rx_num_blocks = size / 32 - 1;
 8000342:	f8a4 c00c 	strh.w	ip, [r4, #12]
    epfunc_out[epnum] = func;
 8000346:	f841 3027 	str.w	r3, [r1, r7, lsl #2]
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
 800034a:	882b      	ldrh	r3, [r5, #0]
 800034c:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8000350:	049b      	lsls	r3, r3, #18
 8000352:	0c9b      	lsrs	r3, r3, #18
 8000354:	f483 4330 	eor.w	r3, r3, #45056	; 0xb000
 8000358:	f083 0380 	eor.w	r3, r3, #128	; 0x80
 800035c:	e7d2      	b.n	8000304 <usb_ep_init+0xac>
 800035e:	bf00      	nop
 8000360:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 8000364:	20000000 	andcs	r0, r0, r0
 8000368:	20000224 	andcs	r0, r0, r4, lsr #4
 800036c:	20000244 	andcs	r0, r0, r4, asr #4

08000370 <usb_ep_init_double>:

void usb_ep_init_double(uint8_t epnum, uint8_t ep_type, uint16_t size, epfunc_t func){
 8000370:	b5f0      	push	{r4, r5, r6, r7, lr}
  if(func == NULL)func = endp_callback_default;
  uint8_t dir_in = (epnum & 0x80);
  epnum &= 0x0F;
  
  ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 8000372:	f248 0780 	movw	r7, #32896	; 0x8080
  epnum &= 0x0F;
 8000376:	f000 060f 	and.w	r6, r0, #15
  ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 800037a:	00b5      	lsls	r5, r6, #2
  if(func == NULL)func = endp_callback_default;
 800037c:	4c4a      	ldr	r4, [pc, #296]	; (80004a8 <usb_ep_init_double+0x138>)
  ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 800037e:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 8000382:	f505 45b8 	add.w	r5, r5, #23552	; 0x5c00
  if(func == NULL)func = endp_callback_default;
 8000386:	2b00      	cmp	r3, #0
 8000388:	bf08      	it	eq
 800038a:	4623      	moveq	r3, r4
  ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 800038c:	882c      	ldrh	r4, [r5, #0]
  uint16_t buf = USB_EPx(epnum);
  buf = (buf & ~(USB_EP_DTOG_RX | USB_EP_DTOG_TX | USB_EPTX_STAT | USB_EPRX_STAT)) | USB_EP_CTR_RX | USB_EP_CTR_TX;
  buf = (buf & ~USB_EPADDR_FIELD) | epnum;
  
  buf &=~ USB_EP_T_FIELD;
  switch(ep_type){
 800038e:	2902      	cmp	r1, #2
  ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 8000390:	f024 04c0 	bic.w	r4, r4, #192	; 0xc0
 8000394:	ea4f 5404 	mov.w	r4, r4, lsl #20
 8000398:	ea4f 5414 	mov.w	r4, r4, lsr #20
 800039c:	ea44 0407 	orr.w	r4, r4, r7
 80003a0:	802c      	strh	r4, [r5, #0]
  ENDP_STAT_RX(epnum, USB_EP_RX_DIS);
 80003a2:	882c      	ldrh	r4, [r5, #0]
 80003a4:	f024 04f0 	bic.w	r4, r4, #240	; 0xf0
 80003a8:	ea4f 4484 	mov.w	r4, r4, lsl #18
 80003ac:	ea4f 4494 	mov.w	r4, r4, lsr #18
 80003b0:	ea47 0704 	orr.w	r7, r7, r4
 80003b4:	802f      	strh	r7, [r5, #0]
  uint16_t buf = USB_EPx(epnum);
 80003b6:	882c      	ldrh	r4, [r5, #0]
  buf &=~ USB_EP_T_FIELD;
 80003b8:	f404 6410 	and.w	r4, r4, #2304	; 0x900
 80003bc:	ea44 0406 	orr.w	r4, r4, r6
  switch(ep_type){
 80003c0:	d02f      	beq.n	8000422 <usb_ep_init_double+0xb2>
 80003c2:	2903      	cmp	r1, #3
 80003c4:	d030      	beq.n	8000428 <usb_ep_init_double+0xb8>
 80003c6:	bb91      	cbnz	r1, 800042e <usb_ep_init_double+0xbe>
    case USB_ENDP_CTRL: buf |= USB_EP_CONTROL; break;
 80003c8:	f444 4102 	orr.w	r1, r4, #33280	; 0x8200
 80003cc:	f8df c0e4 	ldr.w	ip, [pc, #228]	; 80004b4 <usb_ep_init_double+0x144>
    case USB_ENDP_BULK: buf |= USB_EP_BULK | USB_EP_KIND; break;
    case USB_ENDP_INTR: buf |= USB_EP_INTERRUPT; break;
    default: buf |= USB_EP_ISOCHRONOUS; //в дескрипторах изохронные точки могут иметь расширенные настройки
 80003d0:	f041 0180 	orr.w	r1, r1, #128	; 0x80
  }
  USB_EPx(epnum) = buf;
 80003d4:	8029      	strh	r1, [r5, #0]
  
#define USB_EP_SWBUF_TX     USB_EP_DTOG_RX
#define USB_EP_SWBUF_RX     USB_EP_DTOG_TX
  if( dir_in ){
 80003d6:	f8bc 4000 	ldrh.w	r4, [ip]
 80003da:	0131      	lsls	r1, r6, #4
 80003dc:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 80003e0:	f010 0f80 	tst.w	r0, #128	; 0x80
 80003e4:	f501 41c0 	add.w	r1, r1, #24576	; 0x6000
 80003e8:	eb02 0704 	add.w	r7, r2, r4
 80003ec:	4660      	mov	r0, ip
 80003ee:	d021      	beq.n	8000434 <usb_ep_init_double+0xc4>
    usb_epdata[epnum].usb_tx_addr = lastaddr;
    usb_epdata[epnum].usb_tx_count = 0;
 80003f0:	f04f 0c00 	mov.w	ip, #0
    usb_epdata[epnum].usb_tx_addr = lastaddr;
 80003f4:	600c      	str	r4, [r1, #0]
    usb_epdata[epnum].usb_tx_count = 0;
 80003f6:	f8c1 c004 	str.w	ip, [r1, #4]
    usb_epdata[epnum].usb_rx_addr = lastaddr + size;
 80003fa:	608f      	str	r7, [r1, #8]
    usb_epdata[epnum].usb_rx_count = 0;
 80003fc:	f8c1 c00c 	str.w	ip, [r1, #12]
    
    buf = USB_EPx(epnum);
 8000400:	8829      	ldrh	r1, [r5, #0]
    USB_EPx(epnum) = (buf ^ USB_EP_TX_VALID) & (USB_EPREG_MASK | USB_EPTX_STAT | USB_EP_DTOG_TX | USB_EP_SWBUF_TX);
 8000402:	f081 0130 	eor.w	r1, r1, #48	; 0x30
 8000406:	f421 5140 	bic.w	r1, r1, #12288	; 0x3000
 800040a:	b289      	uxth	r1, r1
      usb_epdata[epnum].rx_blocksize = usb_epdata[epnum].tx_blocksize = 1;
      if(size < 32)size = 32;
      usb_epdata[epnum].rx_num_blocks = usb_epdata[epnum].tx_num_blocks = size / 32 - 1;
    }
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
    ENDP_STAT_TX(epnum, USB_EP_TX_VALID);
 800040c:	8029      	strh	r1, [r5, #0]
  }
  epfunc_in[epnum] = func;
 800040e:	4927      	ldr	r1, [pc, #156]	; (80004ac <usb_ep_init_double+0x13c>)
  epfunc_out[epnum]= func;
    
  lastaddr += 2*size;
 8000410:	eb04 0242 	add.w	r2, r4, r2, lsl #1
  epfunc_in[epnum] = func;
 8000414:	f841 3026 	str.w	r3, [r1, r6, lsl #2]
  epfunc_out[epnum]= func;
 8000418:	4925      	ldr	r1, [pc, #148]	; (80004b0 <usb_ep_init_double+0x140>)
  lastaddr += 2*size;
 800041a:	8002      	strh	r2, [r0, #0]
  epfunc_out[epnum]= func;
 800041c:	f841 3026 	str.w	r3, [r1, r6, lsl #2]
}
 8000420:	bdf0      	pop	{r4, r5, r6, r7, pc}
    case USB_ENDP_BULK: buf |= USB_EP_BULK | USB_EP_KIND; break;
 8000422:	f444 4101 	orr.w	r1, r4, #33024	; 0x8100
 8000426:	e7d1      	b.n	80003cc <usb_ep_init_double+0x5c>
    case USB_ENDP_INTR: buf |= USB_EP_INTERRUPT; break;
 8000428:	f444 4106 	orr.w	r1, r4, #34304	; 0x8600
 800042c:	e7ce      	b.n	80003cc <usb_ep_init_double+0x5c>
    default: buf |= USB_EP_ISOCHRONOUS; //в дескрипторах изохронные точки могут иметь расширенные настройки
 800042e:	f444 4104 	orr.w	r1, r4, #33792	; 0x8400
 8000432:	e7cb      	b.n	80003cc <usb_ep_init_double+0x5c>
    usb_epdata[epnum].usb_rx_addr = lastaddr;
 8000434:	608c      	str	r4, [r1, #8]
    if(size < 64){
 8000436:	2a3f      	cmp	r2, #63	; 0x3f
    usb_epdata[epnum].usb_tx_addr = lastaddr + size;
 8000438:	600f      	str	r7, [r1, #0]
      usb_epdata[epnum].rx_blocksize = usb_epdata[epnum].tx_blocksize = 0;
 800043a:	888f      	ldrh	r7, [r1, #4]
    if(size < 64){
 800043c:	d828      	bhi.n	8000490 <usb_ep_init_double+0x120>
      usb_epdata[epnum].rx_blocksize = usb_epdata[epnum].tx_blocksize = 0;
 800043e:	f36f 37cf 	bfc	r7, #15, #1
 8000442:	808f      	strh	r7, [r1, #4]
 8000444:	898f      	ldrh	r7, [r1, #12]
 8000446:	f36f 37cf 	bfc	r7, #15, #1
 800044a:	818f      	strh	r7, [r1, #12]
      usb_epdata[epnum].rx_num_blocks = usb_epdata[epnum].tx_num_blocks = size / 2;
 800044c:	f3c2 0744 	ubfx	r7, r2, #1, #5
      usb_epdata[epnum].rx_num_blocks = usb_epdata[epnum].tx_num_blocks = size / 32 - 1;
 8000450:	f8b1 c004 	ldrh.w	ip, [r1, #4]
 8000454:	f367 2c8e 	bfi	ip, r7, #10, #5
 8000458:	f8a1 c004 	strh.w	ip, [r1, #4]
 800045c:	f8b1 c00c 	ldrh.w	ip, [r1, #12]
 8000460:	f367 2c8e 	bfi	ip, r7, #10, #5
 8000464:	f8a1 c00c 	strh.w	ip, [r1, #12]
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
 8000468:	8829      	ldrh	r1, [r5, #0]
 800046a:	f021 01f0 	bic.w	r1, r1, #240	; 0xf0
 800046e:	0489      	lsls	r1, r1, #18
 8000470:	0c89      	lsrs	r1, r1, #18
 8000472:	f481 4130 	eor.w	r1, r1, #45056	; 0xb000
 8000476:	f081 0180 	eor.w	r1, r1, #128	; 0x80
 800047a:	8029      	strh	r1, [r5, #0]
    ENDP_STAT_TX(epnum, USB_EP_TX_VALID);
 800047c:	8829      	ldrh	r1, [r5, #0]
 800047e:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8000482:	0509      	lsls	r1, r1, #20
 8000484:	0d09      	lsrs	r1, r1, #20
 8000486:	f481 4100 	eor.w	r1, r1, #32768	; 0x8000
 800048a:	f081 01b0 	eor.w	r1, r1, #176	; 0xb0
 800048e:	e7bd      	b.n	800040c <usb_ep_init_double+0x9c>
      usb_epdata[epnum].rx_blocksize = usb_epdata[epnum].tx_blocksize = 1;
 8000490:	f447 4700 	orr.w	r7, r7, #32768	; 0x8000
 8000494:	808f      	strh	r7, [r1, #4]
 8000496:	898f      	ldrh	r7, [r1, #12]
 8000498:	f447 4700 	orr.w	r7, r7, #32768	; 0x8000
 800049c:	818f      	strh	r7, [r1, #12]
      usb_epdata[epnum].rx_num_blocks = usb_epdata[epnum].tx_num_blocks = size / 32 - 1;
 800049e:	0957      	lsrs	r7, r2, #5
 80004a0:	3f01      	subs	r7, #1
 80004a2:	f007 071f 	and.w	r7, r7, #31
 80004a6:	e7d3      	b.n	8000450 <usb_ep_init_double+0xe0>
 80004a8:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 80004ac:	20000224 	andcs	r0, r0, r4, lsr #4
 80004b0:	20000244 	andcs	r0, r0, r4, asr #4
 80004b4:	20000000 	andcs	r0, r0, r0

080004b8 <USB_LP_CAN1_RX0_IRQHandler>:

// standard IRQ handler
void USB_LP_IRQHandler(){
 80004b8:	b538      	push	{r3, r4, r5, lr}
  if(USB->ISTR & USB_ISTR_RESET){
 80004ba:	4c42      	ldr	r4, [pc, #264]	; (80005c4 <USB_LP_CAN1_RX0_IRQHandler+0x10c>)
 80004bc:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 80004c0:	055d      	lsls	r5, r3, #21
 80004c2:	d52c      	bpl.n	800051e <USB_LP_CAN1_RX0_IRQHandler+0x66>
    usb_class_disconnect();
 80004c4:	f7ff fe8c 	bl	80001e0 <usb_class_disconnect>
    USB->CNTR = USB_CNTR_RESETM | USB_CNTR_CTRM | USB_CNTR_SUSPM | USB_CNTR_WKUPM;
 80004c8:	f44f 431c 	mov.w	r3, #39936	; 0x9c00
    lastaddr = LASTADDR_DEFAULT;
 80004cc:	2240      	movs	r2, #64	; 0x40
    USB->CNTR = USB_CNTR_RESETM | USB_CNTR_CTRM | USB_CNTR_SUSPM | USB_CNTR_WKUPM;
 80004ce:	f8a4 3040 	strh.w	r3, [r4, #64]	; 0x40
    lastaddr = LASTADDR_DEFAULT;
 80004d2:	4b3d      	ldr	r3, [pc, #244]	; (80005c8 <USB_LP_CAN1_RX0_IRQHandler+0x110>)
 80004d4:	493d      	ldr	r1, [pc, #244]	; (80005cc <USB_LP_CAN1_RX0_IRQHandler+0x114>)
 80004d6:	801a      	strh	r2, [r3, #0]
    USB->DADDR = USB_DADDR_EF;
 80004d8:	2380      	movs	r3, #128	; 0x80
    for(uint8_t i=0; i<STM32ENDPOINTS; i++){
      epfunc_in[i] = epfunc_out[i] = NULL;
 80004da:	2200      	movs	r2, #0
    USB->DADDR = USB_DADDR_EF;
 80004dc:	f8a4 304c 	strh.w	r3, [r4, #76]	; 0x4c
 80004e0:	2408      	movs	r4, #8
 80004e2:	4b3b      	ldr	r3, [pc, #236]	; (80005d0 <USB_LP_CAN1_RX0_IRQHandler+0x118>)
      epfunc_in[i] = epfunc_out[i] = NULL;
 80004e4:	3c01      	subs	r4, #1
    for(uint8_t i=0; i<STM32ENDPOINTS; i++){
 80004e6:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
      epfunc_in[i] = epfunc_out[i] = NULL;
 80004ea:	f841 2b04 	str.w	r2, [r1], #4
 80004ee:	f843 2b04 	str.w	r2, [r3], #4
    for(uint8_t i=0; i<STM32ENDPOINTS; i++){
 80004f2:	d1f7      	bne.n	80004e4 <USB_LP_CAN1_RX0_IRQHandler+0x2c>
    }
    // state is default - wait for enumeration
    USB->ISTR = (uint16_t)~USB_ISTR_RESET;
 80004f4:	f64f 32ff 	movw	r2, #64511	; 0xfbff
 80004f8:	4b32      	ldr	r3, [pc, #200]	; (80005c4 <USB_LP_CAN1_RX0_IRQHandler+0x10c>)
    usb_ep_init(0x00, USB_ENDP_CTRL, USB_EP0_BUFSZ, ep0_out);
 80004fa:	4621      	mov	r1, r4
    USB->ISTR = (uint16_t)~USB_ISTR_RESET;
 80004fc:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
    usb_ep_init(0x00, USB_ENDP_CTRL, USB_EP0_BUFSZ, ep0_out);
 8000500:	4620      	mov	r0, r4
 8000502:	4b34      	ldr	r3, [pc, #208]	; (80005d4 <USB_LP_CAN1_RX0_IRQHandler+0x11c>)
 8000504:	2208      	movs	r2, #8
 8000506:	f7ff fea7 	bl	8000258 <usb_ep_init>
    usb_ep_init(0x80, USB_ENDP_CTRL, USB_EP0_BUFSZ, ep0_in);
 800050a:	4b33      	ldr	r3, [pc, #204]	; (80005d8 <USB_LP_CAN1_RX0_IRQHandler+0x120>)
 800050c:	2208      	movs	r2, #8
 800050e:	4621      	mov	r1, r4
 8000510:	2080      	movs	r0, #128	; 0x80
 8000512:	f7ff fea1 	bl	8000258 <usb_ep_init>
    ep0_buf = NULL;
 8000516:	4b31      	ldr	r3, [pc, #196]	; (80005dc <USB_LP_CAN1_RX0_IRQHandler+0x124>)
 8000518:	601c      	str	r4, [r3, #0]
    usb_class_init();
 800051a:	f000 faf1 	bl	8000b00 <usb_class_init>
  }
  
  if(USB->ISTR & USB_ISTR_CTR){
 800051e:	4b29      	ldr	r3, [pc, #164]	; (80005c4 <USB_LP_CAN1_RX0_IRQHandler+0x10c>)
 8000520:	f8b3 2044 	ldrh.w	r2, [r3, #68]	; 0x44
 8000524:	0414      	lsls	r4, r2, #16
 8000526:	d529      	bpl.n	800057c <USB_LP_CAN1_RX0_IRQHandler+0xc4>
    uint8_t epnum = USB->ISTR & USB_ISTR_EP_ID;
 8000528:	f8b3 5044 	ldrh.w	r5, [r3, #68]	; 0x44
 800052c:	f005 050f 	and.w	r5, r5, #15
    if(USB_EPx(epnum) & USB_EP_CTR_RX){ //OUT
 8000530:	00ac      	lsls	r4, r5, #2
 8000532:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
 8000536:	f504 44b8 	add.w	r4, r4, #23552	; 0x5c00
 800053a:	8823      	ldrh	r3, [r4, #0]
 800053c:	0418      	lsls	r0, r3, #16
 800053e:	d50c      	bpl.n	800055a <USB_LP_CAN1_RX0_IRQHandler+0xa2>
      epfunc_out[epnum](epnum);
 8000540:	4b22      	ldr	r3, [pc, #136]	; (80005cc <USB_LP_CAN1_RX0_IRQHandler+0x114>)
 8000542:	4628      	mov	r0, r5
 8000544:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8000548:	4798      	blx	r3
      ENDP_CTR_RX_CLR(epnum);
 800054a:	8823      	ldrh	r3, [r4, #0]
 800054c:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8000550:	051b      	lsls	r3, r3, #20
 8000552:	0d1b      	lsrs	r3, r3, #20
 8000554:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000558:	8023      	strh	r3, [r4, #0]
    }
    if(USB_EPx(epnum) & USB_EP_CTR_TX){//IN
 800055a:	8823      	ldrh	r3, [r4, #0]
 800055c:	0619      	lsls	r1, r3, #24
 800055e:	d50d      	bpl.n	800057c <USB_LP_CAN1_RX0_IRQHandler+0xc4>
      epfunc_in[epnum](epnum | 0x80);
 8000560:	4b1b      	ldr	r3, [pc, #108]	; (80005d0 <USB_LP_CAN1_RX0_IRQHandler+0x118>)
 8000562:	f045 0080 	orr.w	r0, r5, #128	; 0x80
 8000566:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 800056a:	4798      	blx	r3
      ENDP_CTR_TX_CLR(epnum);
 800056c:	8823      	ldrh	r3, [r4, #0]
 800056e:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8000572:	051b      	lsls	r3, r3, #20
 8000574:	0d1b      	lsrs	r3, r3, #20
 8000576:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800057a:	8023      	strh	r3, [r4, #0]
    }
  }
  
  if(USB->ISTR & USB_ISTR_SUSP){ // suspend -> still no connection, may sleep
 800057c:	4c11      	ldr	r4, [pc, #68]	; (80005c4 <USB_LP_CAN1_RX0_IRQHandler+0x10c>)
 800057e:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 8000582:	051a      	lsls	r2, r3, #20
 8000584:	d50b      	bpl.n	800059e <USB_LP_CAN1_RX0_IRQHandler+0xe6>
    usb_class_disconnect();
 8000586:	f7ff fe2b 	bl	80001e0 <usb_class_disconnect>
    USB->CNTR |= USB_CNTR_FSUSP | USB_CNTR_LP_MODE;
 800058a:	f8b4 3040 	ldrh.w	r3, [r4, #64]	; 0x40
 800058e:	f043 030c 	orr.w	r3, r3, #12
 8000592:	f8a4 3040 	strh.w	r3, [r4, #64]	; 0x40
    USB->ISTR = (uint16_t)~USB_ISTR_SUSP;
 8000596:	f24f 73ff 	movw	r3, #63487	; 0xf7ff
 800059a:	f8a4 3044 	strh.w	r3, [r4, #68]	; 0x44
  }
  
  if(USB->ISTR & USB_ISTR_WKUP){ // wakeup
 800059e:	4a09      	ldr	r2, [pc, #36]	; (80005c4 <USB_LP_CAN1_RX0_IRQHandler+0x10c>)
 80005a0:	f8b2 3044 	ldrh.w	r3, [r2, #68]	; 0x44
 80005a4:	04db      	lsls	r3, r3, #19
 80005a6:	d50b      	bpl.n	80005c0 <USB_LP_CAN1_RX0_IRQHandler+0x108>
    USB->CNTR &= ~(USB_CNTR_FSUSP | USB_CNTR_LP_MODE); // clear suspend flags
 80005a8:	f8b2 3040 	ldrh.w	r3, [r2, #64]	; 0x40
 80005ac:	f023 030c 	bic.w	r3, r3, #12
 80005b0:	041b      	lsls	r3, r3, #16
 80005b2:	0c1b      	lsrs	r3, r3, #16
 80005b4:	f8a2 3040 	strh.w	r3, [r2, #64]	; 0x40
    USB->ISTR = (uint16_t)~USB_ISTR_WKUP;
 80005b8:	f64e 73ff 	movw	r3, #61439	; 0xefff
 80005bc:	f8a2 3044 	strh.w	r3, [r2, #68]	; 0x44
  }
}
 80005c0:	bd38      	pop	{r3, r4, r5, pc}
 80005c2:	bf00      	nop
 80005c4:	40005c00 	andmi	r5, r0, r0, lsl #24
 80005c8:	20000000 	andcs	r0, r0, r0
 80005cc:	20000244 	andcs	r0, r0, r4, asr #4
 80005d0:	20000224 	andcs	r0, r0, r4, lsr #4
 80005d4:	080006eb 	stmdaeq	r0, {r0, r1, r3, r5, r6, r7, r9, sl}
 80005d8:	08000635 	stmdaeq	r0, {r0, r2, r4, r5, r9, sl}
 80005dc:	2000000c 	andcs	r0, r0, ip

080005e0 <_usb_ep_write>:
      uint32_t rx_blocksize:1;
    };
  };
}pma_descr_t;

void _usb_ep_write(uint8_t idx, const uint8_t *buf, uint16_t size){
 80005e0:	b5f0      	push	{r4, r5, r6, r7, lr}
  pma_descr_t *descr = &((pma_descr_t*)usb_epdata)[idx];
  uint16_t N2 = (size + 1) >> 1;
  // the buffer is 16-bit, so we should copy data as it would be uint16_t
  uint16_t *buf16 = (uint16_t *)buf;
  uint32_t *out = (uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
  for(uint16_t i = 0; i < N2; ++i, ++out){
 80005e2:	2500      	movs	r5, #0
  pma_descr_t *descr = &((pma_descr_t*)usb_epdata)[idx];
 80005e4:	00c4      	lsls	r4, r0, #3
 80005e6:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
 80005ea:	f504 44c0 	add.w	r4, r4, #24576	; 0x6000
  uint32_t *out = (uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
 80005ee:	6823      	ldr	r3, [r4, #0]
  uint16_t N2 = (size + 1) >> 1;
 80005f0:	1c56      	adds	r6, r2, #1
  uint32_t *out = (uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
 80005f2:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
 80005f6:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
  uint16_t N2 = (size + 1) >> 1;
 80005fa:	0876      	lsrs	r6, r6, #1
  uint32_t *out = (uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
 80005fc:	005b      	lsls	r3, r3, #1
  for(uint16_t i = 0; i < N2; ++i, ++out){
 80005fe:	b2af      	uxth	r7, r5
 8000600:	42be      	cmp	r6, r7
 8000602:	d811      	bhi.n	8000628 <_usb_ep_write+0x48>
    *out = buf16[i];
  }
  descr->count = size;
  
  ENDP_STAT_TX((idx/2), USB_EP_TX_VALID);
 8000604:	0840      	lsrs	r0, r0, #1
 8000606:	0080      	lsls	r0, r0, #2
 8000608:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
  descr->count = size;
 800060c:	6062      	str	r2, [r4, #4]
  ENDP_STAT_TX((idx/2), USB_EP_TX_VALID);
 800060e:	f500 40b8 	add.w	r0, r0, #23552	; 0x5c00
 8000612:	8803      	ldrh	r3, [r0, #0]
 8000614:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 8000618:	051b      	lsls	r3, r3, #20
 800061a:	0d1b      	lsrs	r3, r3, #20
 800061c:	f483 4300 	eor.w	r3, r3, #32768	; 0x8000
 8000620:	f083 03b0 	eor.w	r3, r3, #176	; 0xb0
 8000624:	8003      	strh	r3, [r0, #0]
}
 8000626:	bdf0      	pop	{r4, r5, r6, r7, pc}
    *out = buf16[i];
 8000628:	f831 7015 	ldrh.w	r7, [r1, r5, lsl #1]
 800062c:	f843 7025 	str.w	r7, [r3, r5, lsl #2]
 8000630:	3501      	adds	r5, #1
 8000632:	e7e4      	b.n	80005fe <_usb_ep_write+0x1e>

08000634 <ep0_in>:
static void ep0_in(uint8_t epnum){
 8000634:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if( (USB->DADDR & USB_DADDR_ADD) != USB_Addr ){
 8000636:	4b14      	ldr	r3, [pc, #80]	; (8000688 <ep0_in+0x54>)
 8000638:	4c14      	ldr	r4, [pc, #80]	; (800068c <ep0_in+0x58>)
 800063a:	f8b3 104c 	ldrh.w	r1, [r3, #76]	; 0x4c
 800063e:	7922      	ldrb	r2, [r4, #4]
 8000640:	f001 017f 	and.w	r1, r1, #127	; 0x7f
 8000644:	4291      	cmp	r1, r2
    USB->DADDR = USB_DADDR_EF | USB_Addr;
 8000646:	bf1c      	itt	ne
 8000648:	f042 0280 	orrne.w	r2, r2, #128	; 0x80
 800064c:	f8a3 204c 	strhne.w	r2, [r3, #76]	; 0x4c
  if( (USB_EPx(0) & USB_EPTX_STAT) == USB_EP_TX_VALID )return;
 8000650:	881b      	ldrh	r3, [r3, #0]
 8000652:	f003 0330 	and.w	r3, r3, #48	; 0x30
 8000656:	2b30      	cmp	r3, #48	; 0x30
 8000658:	d014      	beq.n	8000684 <ep0_in+0x50>
  if(ep0_buf == NULL)return;
 800065a:	6825      	ldr	r5, [r4, #0]
 800065c:	b195      	cbz	r5, 8000684 <ep0_in+0x50>
  uint16_t left = ep0_count;
 800065e:	88e7      	ldrh	r7, [r4, #6]

#define ENDP_TOG(num, tog) do{USB_EPx(num) = ((USB_EPx(num) & ~(USB_EP_DTOG_RX | USB_EP_DTOG_TX | USB_EPRX_STAT | USB_EPTX_STAT)) | USB_EP_CTR_RX | USB_EP_CTR_TX) | tog; }while(0)

void _usb_ep_write(uint8_t idx, const uint8_t *buf, uint16_t size);
static inline void usb_ep_write(uint8_t epnum, const uint8_t *buf, uint16_t size){
  _usb_ep_write((epnum & 0x0F)*2, buf, size);
 8000660:	4629      	mov	r1, r5
 8000662:	2f08      	cmp	r7, #8
 8000664:	463e      	mov	r6, r7
 8000666:	bf28      	it	cs
 8000668:	2608      	movcs	r6, #8
 800066a:	2000      	movs	r0, #0
 800066c:	4632      	mov	r2, r6
 800066e:	f7ff ffb7 	bl	80005e0 <_usb_ep_write>
  if(left < USB_EP0_BUFSZ){
 8000672:	2f07      	cmp	r7, #7
  ep0_count -= left;
 8000674:	eba7 0306 	sub.w	r3, r7, r6
 8000678:	80e3      	strh	r3, [r4, #6]
    ep0_buf = NULL;
 800067a:	bf93      	iteet	ls
 800067c:	2300      	movls	r3, #0
  ep0_buf += left;
 800067e:	19ad      	addhi	r5, r5, r6
 8000680:	6025      	strhi	r5, [r4, #0]
    ep0_buf = NULL;
 8000682:	6023      	strls	r3, [r4, #0]
}
 8000684:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000686:	bf00      	nop
 8000688:	40005c00 	andmi	r5, r0, r0, lsl #24
 800068c:	2000000c 	andcs	r0, r0, ip

08000690 <_usb_ep_read>:

int _usb_ep_read(uint8_t idx, uint16_t *buf){
 8000690:	b530      	push	{r4, r5, lr}
  pma_descr_t *descr = &((pma_descr_t*)usb_epdata)[idx];
 8000692:	00c2      	lsls	r2, r0, #3
 8000694:	f102 4280 	add.w	r2, r2, #1073741824	; 0x40000000
 8000698:	f502 42c0 	add.w	r2, r2, #24576	; 0x6000
int _usb_ep_read(uint8_t idx, uint16_t *buf){
 800069c:	4603      	mov	r3, r0
  int sz = descr->rx_count;
 800069e:	6850      	ldr	r0, [r2, #4]
 80006a0:	f3c0 0009 	ubfx	r0, r0, #0, #10
  if(!sz) return 0;
 80006a4:	b300      	cbz	r0, 80006e8 <_usb_ep_read+0x58>
  int n = (sz + 1) >> 1;
  uint32_t *in = (uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
 80006a6:	6812      	ldr	r2, [r2, #0]
  int n = (sz + 1) >> 1;
 80006a8:	1c44      	adds	r4, r0, #1
  uint32_t *in = (uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
 80006aa:	f102 5200 	add.w	r2, r2, #536870912	; 0x20000000
 80006ae:	f502 5240 	add.w	r2, r2, #12288	; 0x3000
 80006b2:	0052      	lsls	r2, r2, #1
  int n = (sz + 1) >> 1;
 80006b4:	1064      	asrs	r4, r4, #1
 80006b6:	3902      	subs	r1, #2
 80006b8:	eb02 0484 	add.w	r4, r2, r4, lsl #2
  for(int i = 0; i < n; ++i, ++in)
    buf[i] = *(uint16_t*)in;
 80006bc:	f832 5b04 	ldrh.w	r5, [r2], #4
  for(int i = 0; i < n; ++i, ++in)
 80006c0:	42a2      	cmp	r2, r4
    buf[i] = *(uint16_t*)in;
 80006c2:	f821 5f02 	strh.w	r5, [r1, #2]!
  for(int i = 0; i < n; ++i, ++in)
 80006c6:	d1f9      	bne.n	80006bc <_usb_ep_read+0x2c>
  
  ENDP_STAT_RX((idx/2), USB_EP_RX_VALID);
 80006c8:	085b      	lsrs	r3, r3, #1
 80006ca:	009b      	lsls	r3, r3, #2
 80006cc:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80006d0:	f503 43b8 	add.w	r3, r3, #23552	; 0x5c00
 80006d4:	881a      	ldrh	r2, [r3, #0]
 80006d6:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 80006da:	0492      	lsls	r2, r2, #18
 80006dc:	0c92      	lsrs	r2, r2, #18
 80006de:	f482 4230 	eor.w	r2, r2, #45056	; 0xb000
 80006e2:	f082 0280 	eor.w	r2, r2, #128	; 0x80
 80006e6:	801a      	strh	r2, [r3, #0]
  return sz;
}
 80006e8:	bd30      	pop	{r4, r5, pc}

080006ea <ep0_out>:
static void ep0_out(uint8_t epnum){
 80006ea:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint16_t rxcount = usb_epdata[0].rx_count;
 80006ec:	4b3f      	ldr	r3, [pc, #252]	; (80007ec <ep0_out+0x102>)
 80006ee:	4c40      	ldr	r4, [pc, #256]	; (80007f0 <ep0_out+0x106>)
 80006f0:	68dd      	ldr	r5, [r3, #12]
  uint8_t setup = !!(USB_EPx(0) & USB_EP_SETUP);
 80006f2:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 80006f6:	881b      	ldrh	r3, [r3, #0]
  uint16_t rxcount = usb_epdata[0].rx_count;
 80006f8:	f3c5 0509 	ubfx	r5, r5, #0, #10
  if( setup ){
 80006fc:	f413 6600 	ands.w	r6, r3, #2048	; 0x800
 8000700:	d009      	beq.n	8000716 <ep0_out+0x2c>
    if( setup_packet.bmRequestType & 0x80 ){ //предыдущий пакет=IN, этот точно будет запросом
 8000702:	f994 3008 	ldrsb.w	r3, [r4, #8]
 8000706:	2b00      	cmp	r3, #0
 8000708:	da17      	bge.n	800073a <ep0_out+0x50>
      bytesread = 0;
 800070a:	2500      	movs	r5, #0
  _usb_ep_write(idx, buf, size);
}

int _usb_ep_read(uint8_t idx, uint16_t *buf);
static inline int usb_ep_read(uint8_t epnum, uint16_t *buf){
  return _usb_ep_read((epnum & 0x0F)*2 + 1, buf);
 800070c:	4939      	ldr	r1, [pc, #228]	; (80007f4 <ep0_out+0x10a>)
 800070e:	2001      	movs	r0, #1
 8000710:	f7ff ffbe 	bl	8000690 <_usb_ep_read>
 8000714:	8225      	strh	r5, [r4, #16]
  uint8_t req = setup_packet.bmRequestType & 0x7F;
 8000716:	7a22      	ldrb	r2, [r4, #8]
 8000718:	f002 037f 	and.w	r3, r2, #127	; 0x7f
  if(setup_packet.bmRequestType & 0x80){
 800071c:	0612      	lsls	r2, r2, #24
 800071e:	d53c      	bpl.n	800079a <ep0_out+0xb0>
    if( !setup )return; //какой-то костыль. Иначе вызывается два раза
 8000720:	b34e      	cbz	r6, 8000776 <ep0_out+0x8c>
    if(req == (USB_REQ_STANDARD | USB_REQ_DEVICE)){
 8000722:	bb73      	cbnz	r3, 8000782 <ep0_out+0x98>
      switch(setup_packet.bRequest){
 8000724:	7a60      	ldrb	r0, [r4, #9]
 8000726:	2806      	cmp	r0, #6
 8000728:	d00c      	beq.n	8000744 <ep0_out+0x5a>
 800072a:	2808      	cmp	r0, #8
 800072c:	d025      	beq.n	800077a <ep0_out+0x90>
 800072e:	bb40      	cbnz	r0, 8000782 <ep0_out+0x98>
  _usb_ep_write((epnum & 0x0F)*2, buf, size);
 8000730:	2202      	movs	r2, #2
 8000732:	4931      	ldr	r1, [pc, #196]	; (80007f8 <ep0_out+0x10e>)
 8000734:	f7ff ff54 	bl	80005e0 <_usb_ep_write>
 8000738:	e01d      	b.n	8000776 <ep0_out+0x8c>
      if( bytesread >= setup_packet.wLength ){
 800073a:	89e2      	ldrh	r2, [r4, #14]
 800073c:	8a23      	ldrh	r3, [r4, #16]
 800073e:	429a      	cmp	r2, r3
 8000740:	d8e9      	bhi.n	8000716 <ep0_out+0x2c>
 8000742:	e7e2      	b.n	800070a <ep0_out+0x20>
          const void *data = ZLPP;
 8000744:	2201      	movs	r2, #1
          usb_class_get_std_descr(setup_packet.wValue, &data, &size);
 8000746:	a901      	add	r1, sp, #4
          const void *data = ZLPP;
 8000748:	9201      	str	r2, [sp, #4]
          usb_class_get_std_descr(setup_packet.wValue, &data, &size);
 800074a:	8960      	ldrh	r0, [r4, #10]
 800074c:	f10d 0202 	add.w	r2, sp, #2
          uint16_t size = 0;
 8000750:	f8ad 3002 	strh.w	r3, [sp, #2]
          usb_class_get_std_descr(setup_packet.wValue, &data, &size);
 8000754:	f000 f910 	bl	8000978 <usb_class_get_std_descr>
    if(setup_packet.wLength < size) size = setup_packet.wLength;
 8000758:	89e3      	ldrh	r3, [r4, #14]
 800075a:	f8bd 2002 	ldrh.w	r2, [sp, #2]
  ep0_in(0x80);
 800075e:	2080      	movs	r0, #128	; 0x80
    if(setup_packet.wLength < size) size = setup_packet.wLength;
 8000760:	429a      	cmp	r2, r3
 8000762:	bf88      	it	hi
 8000764:	f8ad 3002 	strhhi.w	r3, [sp, #2]
  ep0_count = size;
 8000768:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800076c:	80e3      	strh	r3, [r4, #6]
  ep0_buf = buf;
 800076e:	9b01      	ldr	r3, [sp, #4]
 8000770:	6023      	str	r3, [r4, #0]
  ep0_in(0x80);
 8000772:	f7ff ff5f 	bl	8000634 <ep0_in>
}
 8000776:	b002      	add	sp, #8
 8000778:	bd70      	pop	{r4, r5, r6, pc}
 800077a:	2201      	movs	r2, #1
 800077c:	491f      	ldr	r1, [pc, #124]	; (80007fc <ep0_out+0x112>)
 800077e:	4618      	mov	r0, r3
 8000780:	e7d8      	b.n	8000734 <ep0_out+0x4a>
    void *data = ZLPP;
 8000782:	2301      	movs	r3, #1
 8000784:	9301      	str	r3, [sp, #4]
    uint16_t size = 0;
 8000786:	2300      	movs	r3, #0
    usb_class_ep0_in( &setup_packet, &data, &size );
 8000788:	f10d 0202 	add.w	r2, sp, #2
 800078c:	a901      	add	r1, sp, #4
 800078e:	4819      	ldr	r0, [pc, #100]	; (80007f4 <ep0_out+0x10a>)
    uint16_t size = 0;
 8000790:	f8ad 3002 	strh.w	r3, [sp, #2]
    usb_class_ep0_in( &setup_packet, &data, &size );
 8000794:	f000 f92e 	bl	80009f4 <usb_class_ep0_in>
 8000798:	e7de      	b.n	8000758 <ep0_out+0x6e>
    if(req == (USB_REQ_STANDARD | USB_REQ_DEVICE)){
 800079a:	b96b      	cbnz	r3, 80007b8 <ep0_out+0xce>
      if(setup_packet.bRequest == SET_ADDRESS){
 800079c:	7a62      	ldrb	r2, [r4, #9]
 800079e:	2a05      	cmp	r2, #5
 80007a0:	d105      	bne.n	80007ae <ep0_out+0xc4>
        USB_Addr = setup_packet.wValue;
 80007a2:	8962      	ldrh	r2, [r4, #10]
 80007a4:	7122      	strb	r2, [r4, #4]
 80007a6:	2200      	movs	r2, #0
 80007a8:	4611      	mov	r1, r2
 80007aa:	4610      	mov	r0, r2
 80007ac:	e7c2      	b.n	8000734 <ep0_out+0x4a>
      }else if(setup_packet.bRequest == SET_CONFIGURATION){
 80007ae:	2a09      	cmp	r2, #9
 80007b0:	d102      	bne.n	80007b8 <ep0_out+0xce>
        configuration = setup_packet.wValue;
 80007b2:	8962      	ldrh	r2, [r4, #10]
 80007b4:	74a2      	strb	r2, [r4, #18]
 80007b6:	e7f6      	b.n	80007a6 <ep0_out+0xbc>
    if(!usb_class_ep0_out( &setup_packet, bytesread, rxcount )){
 80007b8:	462a      	mov	r2, r5
 80007ba:	8a21      	ldrh	r1, [r4, #16]
 80007bc:	480d      	ldr	r0, [pc, #52]	; (80007f4 <ep0_out+0x10a>)
 80007be:	f000 f92b 	bl	8000a18 <usb_class_ep0_out>
 80007c2:	b950      	cbnz	r0, 80007da <ep0_out+0xf0>
      ENDP_STAT_RX(0, USB_EP_RX_VALID);
 80007c4:	4a0e      	ldr	r2, [pc, #56]	; (8000800 <ep0_out+0x116>)
 80007c6:	8813      	ldrh	r3, [r2, #0]
 80007c8:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80007cc:	049b      	lsls	r3, r3, #18
 80007ce:	0c9b      	lsrs	r3, r3, #18
 80007d0:	f483 4330 	eor.w	r3, r3, #45056	; 0xb000
 80007d4:	f083 0380 	eor.w	r3, r3, #128	; 0x80
 80007d8:	8013      	strh	r3, [r2, #0]
    bytesread += rxcount;
 80007da:	8a23      	ldrh	r3, [r4, #16]
 80007dc:	441d      	add	r5, r3
    if( bytesread >= setup_packet.wLength )usb_ep_write(0, NULL, 0);
 80007de:	89e3      	ldrh	r3, [r4, #14]
    bytesread += rxcount;
 80007e0:	b2ad      	uxth	r5, r5
    if( bytesread >= setup_packet.wLength )usb_ep_write(0, NULL, 0);
 80007e2:	42ab      	cmp	r3, r5
    bytesread += rxcount;
 80007e4:	8225      	strh	r5, [r4, #16]
    if( bytesread >= setup_packet.wLength )usb_ep_write(0, NULL, 0);
 80007e6:	d8c6      	bhi.n	8000776 <ep0_out+0x8c>
 80007e8:	e7dd      	b.n	80007a6 <ep0_out+0xbc>
 80007ea:	bf00      	nop
 80007ec:	40006000 	andmi	r6, r0, r0
 80007f0:	2000000c 	andcs	r0, r0, ip
 80007f4:	20000014 	andcs	r0, r0, r4, lsl r0
 80007f8:	08000c9c 	stmdaeq	r0, {r2, r3, r4, r7, sl, fp}
 80007fc:	2000001e 	andcs	r0, r0, lr, lsl r0
 8000800:	40005c00 	andmi	r5, r0, r0, lsl #24

08000804 <uart_buf_size>:
  volatile uint8_t st,en;
  volatile uint8_t arr[UART_SIZE];
}uart_buffer;

uint8_t uart_buf_size(uart_buffer *buf){
  return ((buf->st - buf->en) & UART_MASK);
 8000804:	7803      	ldrb	r3, [r0, #0]
 8000806:	7840      	ldrb	r0, [r0, #1]
 8000808:	1a18      	subs	r0, r3, r0
}
 800080a:	b2c0      	uxtb	r0, r0
 800080c:	4770      	bx	lr

0800080e <uart_buf_read>:
  return ((buf->st - buf->en) & UART_MASK);
 800080e:	7801      	ldrb	r1, [r0, #0]
 8000810:	7842      	ldrb	r2, [r0, #1]

uint8_t uart_buf_read(uart_buffer *buf){
 8000812:	4603      	mov	r3, r0
  uint8_t res;
  if(uart_buf_size(buf) == 0)return 0;
 8000814:	4291      	cmp	r1, r2
 8000816:	d00b      	beq.n	8000830 <uart_buf_read+0x22>
  res = buf->arr[buf->st];
 8000818:	7802      	ldrb	r2, [r0, #0]
 800081a:	4402      	add	r2, r0
 800081c:	7890      	ldrb	r0, [r2, #2]
  buf->st++;
 800081e:	781a      	ldrb	r2, [r3, #0]
  res = buf->arr[buf->st];
 8000820:	b2c0      	uxtb	r0, r0
  buf->st++;
 8000822:	3201      	adds	r2, #1
 8000824:	b2d2      	uxtb	r2, r2
 8000826:	701a      	strb	r2, [r3, #0]
  buf->st &= UART_MASK;
 8000828:	781a      	ldrb	r2, [r3, #0]
 800082a:	b2d2      	uxtb	r2, r2
 800082c:	701a      	strb	r2, [r3, #0]
  return res;
 800082e:	4770      	bx	lr
  if(uart_buf_size(buf) == 0)return 0;
 8000830:	2000      	movs	r0, #0
}
 8000832:	4770      	bx	lr

08000834 <uart_buf_write>:
  return ((buf->st - buf->en) & UART_MASK);
 8000834:	7803      	ldrb	r3, [r0, #0]
 8000836:	7842      	ldrb	r2, [r0, #1]
 8000838:	1a9b      	subs	r3, r3, r2

void uart_buf_write(uart_buffer *buf, uint8_t dat){
  if(uart_buf_size(buf)!=1){
 800083a:	b2db      	uxtb	r3, r3
 800083c:	2b01      	cmp	r3, #1
 800083e:	d009      	beq.n	8000854 <uart_buf_write+0x20>
    buf->arr[buf->en]=dat;
 8000840:	7843      	ldrb	r3, [r0, #1]
 8000842:	4403      	add	r3, r0
 8000844:	7099      	strb	r1, [r3, #2]
    buf->en++; buf->en &= UART_MASK;
 8000846:	7843      	ldrb	r3, [r0, #1]
 8000848:	3301      	adds	r3, #1
 800084a:	b2db      	uxtb	r3, r3
 800084c:	7043      	strb	r3, [r0, #1]
 800084e:	7843      	ldrb	r3, [r0, #1]
 8000850:	b2db      	uxtb	r3, r3
 8000852:	7043      	strb	r3, [r0, #1]
  }
}
 8000854:	4770      	bx	lr

08000856 <USART1_IRQHandler>:
///////////////////////////////////////////////////////////////////////////////////////////////
#ifdef UART1_EN
static uart_buffer uart1_rx;
static uart_buffer uart1_tx;

void USART1_IRQHandler(void){
 8000856:	b510      	push	{r4, lr}
  if( USART1->SR & USART_SR_RXNE ){
 8000858:	4c0f      	ldr	r4, [pc, #60]	; (8000898 <USART1_IRQHandler+0x42>)
 800085a:	6823      	ldr	r3, [r4, #0]
 800085c:	069a      	lsls	r2, r3, #26
 800085e:	d506      	bpl.n	800086e <USART1_IRQHandler+0x18>
    uint8_t temp = USART1->DR;
 8000860:	6861      	ldr	r1, [r4, #4]
    uart_buf_write(&uart1_rx, temp);
 8000862:	480e      	ldr	r0, [pc, #56]	; (800089c <USART1_IRQHandler+0x46>)
 8000864:	b2c9      	uxtb	r1, r1
  }else if( USART1->SR & USART_SR_TXE ){
    if(uart_buf_size(&uart1_tx) != 0)USART1->DR = uart_buf_read(&uart1_tx);
      else USART1->CR1 &=~ USART_CR1_TXEIE;
  }
}
 8000866:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    uart_buf_write(&uart1_rx, temp);
 800086a:	f7ff bfe3 	b.w	8000834 <uart_buf_write>
  }else if( USART1->SR & USART_SR_TXE ){
 800086e:	6823      	ldr	r3, [r4, #0]
 8000870:	061b      	lsls	r3, r3, #24
 8000872:	d50b      	bpl.n	800088c <USART1_IRQHandler+0x36>
  return ((buf->st - buf->en) & UART_MASK);
 8000874:	4809      	ldr	r0, [pc, #36]	; (800089c <USART1_IRQHandler+0x46>)
 8000876:	f890 2102 	ldrb.w	r2, [r0, #258]	; 0x102
 800087a:	f890 3103 	ldrb.w	r3, [r0, #259]	; 0x103
    if(uart_buf_size(&uart1_tx) != 0)USART1->DR = uart_buf_read(&uart1_tx);
 800087e:	429a      	cmp	r2, r3
 8000880:	d005      	beq.n	800088e <USART1_IRQHandler+0x38>
 8000882:	f500 7081 	add.w	r0, r0, #258	; 0x102
 8000886:	f7ff ffc2 	bl	800080e <uart_buf_read>
 800088a:	6060      	str	r0, [r4, #4]
}
 800088c:	bd10      	pop	{r4, pc}
      else USART1->CR1 &=~ USART_CR1_TXEIE;
 800088e:	68e3      	ldr	r3, [r4, #12]
 8000890:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000894:	60e3      	str	r3, [r4, #12]
}
 8000896:	e7f9      	b.n	800088c <USART1_IRQHandler+0x36>
 8000898:	40013800 	andmi	r3, r1, r0, lsl #16
 800089c:	2000001f 	andcs	r0, r0, pc, lsl r0

080008a0 <UART1_write>:

void UART1_write(uint8_t *data, uint8_t len){
 80008a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008a2:	4604      	mov	r4, r0
  while(len--)UART_putc(1, *(data++));
 80008a4:	4f07      	ldr	r7, [pc, #28]	; (80008c4 <UART1_write+0x24>)
 80008a6:	4d08      	ldr	r5, [pc, #32]	; (80008c8 <UART1_write+0x28>)
 80008a8:	1846      	adds	r6, r0, r1
 80008aa:	42b4      	cmp	r4, r6
 80008ac:	d100      	bne.n	80008b0 <UART1_write+0x10>
}
 80008ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  while(len--)UART_putc(1, *(data++));
 80008b0:	f814 1b01 	ldrb.w	r1, [r4], #1
 80008b4:	4638      	mov	r0, r7
 80008b6:	f7ff ffbd 	bl	8000834 <uart_buf_write>
 80008ba:	68eb      	ldr	r3, [r5, #12]
 80008bc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80008c0:	60eb      	str	r3, [r5, #12]
 80008c2:	e7f2      	b.n	80008aa <UART1_write+0xa>
 80008c4:	20000121 	andcs	r0, r0, r1, lsr #2
 80008c8:	40013800 	andmi	r3, r1, r0, lsl #16

080008cc <UART1_puts>:

void UART1_puts(char *str){
 80008cc:	b570      	push	{r4, r5, r6, lr}
  while(str[0] != 0)UART_putc(1, *(str++));
 80008ce:	4e07      	ldr	r6, [pc, #28]	; (80008ec <UART1_puts+0x20>)
 80008d0:	4d07      	ldr	r5, [pc, #28]	; (80008f0 <UART1_puts+0x24>)
 80008d2:	1e44      	subs	r4, r0, #1
 80008d4:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 80008d8:	b901      	cbnz	r1, 80008dc <UART1_puts+0x10>
}
 80008da:	bd70      	pop	{r4, r5, r6, pc}
  while(str[0] != 0)UART_putc(1, *(str++));
 80008dc:	4630      	mov	r0, r6
 80008de:	f7ff ffa9 	bl	8000834 <uart_buf_write>
 80008e2:	68eb      	ldr	r3, [r5, #12]
 80008e4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80008e8:	60eb      	str	r3, [r5, #12]
 80008ea:	e7f3      	b.n	80008d4 <UART1_puts+0x8>
 80008ec:	20000121 	andcs	r0, r0, r1, lsr #2
 80008f0:	40013800 	andmi	r3, r1, r0, lsl #16

080008f4 <UART1_read>:

void UART1_read(uint8_t *data, uint8_t len){
 80008f4:	b570      	push	{r4, r5, r6, lr}
 80008f6:	4604      	mov	r4, r0
  return ((buf->st - buf->en) & UART_MASK);
 80008f8:	4d08      	ldr	r5, [pc, #32]	; (800091c <UART1_read+0x28>)
 80008fa:	1846      	adds	r6, r0, r1
  while(len--){
 80008fc:	42b4      	cmp	r4, r6
 80008fe:	d100      	bne.n	8000902 <UART1_read+0xe>
    while(UART_rx_count(1) == 0){}
    *(data++) = UART_getc(1);
  }
}
 8000900:	bd70      	pop	{r4, r5, r6, pc}
  return ((buf->st - buf->en) & UART_MASK);
 8000902:	782a      	ldrb	r2, [r5, #0]
 8000904:	786b      	ldrb	r3, [r5, #1]
    while(UART_rx_count(1) == 0){}
 8000906:	1a9b      	subs	r3, r3, r2
 8000908:	f013 0fff 	tst.w	r3, #255	; 0xff
 800090c:	d0f9      	beq.n	8000902 <UART1_read+0xe>
    *(data++) = UART_getc(1);
 800090e:	4628      	mov	r0, r5
 8000910:	f7ff ff7d 	bl	800080e <uart_buf_read>
 8000914:	f804 0b01 	strb.w	r0, [r4], #1
 8000918:	e7f0      	b.n	80008fc <UART1_read+0x8>
 800091a:	bf00      	nop
 800091c:	2000001f 	andcs	r0, r0, pc, lsl r0

08000920 <UART1_gets>:

void UART1_gets(char *str, uint8_t len){
 8000920:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000922:	4606      	mov	r6, r0
 8000924:	3901      	subs	r1, #1
  return ((buf->st - buf->en) & UART_MASK);
 8000926:	4f13      	ldr	r7, [pc, #76]	; (8000974 <UART1_gets+0x54>)
 8000928:	b2cc      	uxtb	r4, r1
  while(len--){
 800092a:	2cff      	cmp	r4, #255	; 0xff
 800092c:	4635      	mov	r5, r6
 800092e:	d10d      	bne.n	800094c <UART1_gets+0x2c>
    while(UART_rx_count(1) == 0){}
    str[0] = UART_getc(1);
    if(str[0] == 0 || str[0] == 13)break;
    str++;
  }
  if(str[0] != 0){
 8000930:	782b      	ldrb	r3, [r5, #0]
 8000932:	b153      	cbz	r3, 800094a <UART1_gets+0x2a>
    if(len < 3)str[0] = 0;
 8000934:	2c02      	cmp	r4, #2
      else{ str[0] = 0x0A; str[1] = 0x0D; str[2] = 0; }
 8000936:	bf83      	ittte	hi
 8000938:	230a      	movhi	r3, #10
 800093a:	702b      	strbhi	r3, [r5, #0]
 800093c:	230d      	movhi	r3, #13
    if(len < 3)str[0] = 0;
 800093e:	2300      	movls	r3, #0
      else{ str[0] = 0x0A; str[1] = 0x0D; str[2] = 0; }
 8000940:	bf85      	ittet	hi
 8000942:	706b      	strbhi	r3, [r5, #1]
 8000944:	2300      	movhi	r3, #0
    if(len < 3)str[0] = 0;
 8000946:	702b      	strbls	r3, [r5, #0]
      else{ str[0] = 0x0A; str[1] = 0x0D; str[2] = 0; }
 8000948:	70ab      	strbhi	r3, [r5, #2]
  }
}
 800094a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  return ((buf->st - buf->en) & UART_MASK);
 800094c:	783a      	ldrb	r2, [r7, #0]
 800094e:	787b      	ldrb	r3, [r7, #1]
    while(UART_rx_count(1) == 0){}
 8000950:	1a9b      	subs	r3, r3, r2
 8000952:	f013 0fff 	tst.w	r3, #255	; 0xff
 8000956:	d0f9      	beq.n	800094c <UART1_gets+0x2c>
    str[0] = UART_getc(1);
 8000958:	4638      	mov	r0, r7
 800095a:	f7ff ff58 	bl	800080e <uart_buf_read>
 800095e:	f806 0b01 	strb.w	r0, [r6], #1
    if(str[0] == 0 || str[0] == 13)break;
 8000962:	2800      	cmp	r0, #0
 8000964:	d0e4      	beq.n	8000930 <UART1_gets+0x10>
 8000966:	1e63      	subs	r3, r4, #1
 8000968:	280d      	cmp	r0, #13
 800096a:	b2db      	uxtb	r3, r3
 800096c:	d0e0      	beq.n	8000930 <UART1_gets+0x10>
 800096e:	461c      	mov	r4, r3
 8000970:	e7db      	b.n	800092a <UART1_gets+0xa>
 8000972:	bf00      	nop
 8000974:	2000001f 	andcs	r0, r0, pc, lsl r0

08000978 <usb_class_get_std_descr>:
USB_STRING(USB_StringManufacturingDescriptor, u"COKPOWEHEU"); //Vendor
USB_STRING(USB_StringProdDescriptor, u"USB CDC"); //Product
USB_STRING(USB_StringSerialDescriptor, u"1"); //Serial (BCD)

void usb_class_get_std_descr(uint16_t descr, const void **data, uint16_t *size){
  switch(descr & 0xFF00){
 8000978:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 800097c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000980:	d010      	beq.n	80009a4 <usb_class_get_std_descr+0x2c>
 8000982:	d803      	bhi.n	800098c <usb_class_get_std_descr+0x14>
 8000984:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8000988:	d007      	beq.n	800099a <usb_class_get_std_descr+0x22>
 800098a:	4770      	bx	lr
 800098c:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8000990:	d010      	beq.n	80009b4 <usb_class_get_std_descr+0x3c>
 8000992:	f5b3 6fc0 	cmp.w	r3, #1536	; 0x600
 8000996:	d009      	beq.n	80009ac <usb_class_get_std_descr+0x34>
 8000998:	4770      	bx	lr
    case DEVICE_DESCRIPTOR:
      *data = &USB_DeviceDescriptor;
 800099a:	4b0f      	ldr	r3, [pc, #60]	; (80009d8 <usb_class_get_std_descr+0x60>)
 800099c:	600b      	str	r3, [r1, #0]
      *size = sizeof(USB_DeviceDescriptor);
 800099e:	2312      	movs	r3, #18
          *data = &USB_StringSerialDescriptor;
          break;
        default:
          return;
      }
      *size = ((uint8_t*)*data)[0]; //data->bLength
 80009a0:	8013      	strh	r3, [r2, #0]
      break;
    default:
      break;
  }
}
 80009a2:	4770      	bx	lr
      *data = &USB_ConfigDescriptor;
 80009a4:	4b0d      	ldr	r3, [pc, #52]	; (80009dc <usb_class_get_std_descr+0x64>)
 80009a6:	600b      	str	r3, [r1, #0]
      *size = sizeof(USB_ConfigDescriptor);
 80009a8:	2343      	movs	r3, #67	; 0x43
 80009aa:	e7f9      	b.n	80009a0 <usb_class_get_std_descr+0x28>
      *data = &USB_DeviceQualifierDescriptor;
 80009ac:	4b0c      	ldr	r3, [pc, #48]	; (80009e0 <usb_class_get_std_descr+0x68>)
 80009ae:	600b      	str	r3, [r1, #0]
      *size = USB_DeviceQualifierDescriptor[0];
 80009b0:	230a      	movs	r3, #10
 80009b2:	e7f5      	b.n	80009a0 <usb_class_get_std_descr+0x28>
      switch(descr & 0xFF){
 80009b4:	b2c0      	uxtb	r0, r0
 80009b6:	2803      	cmp	r0, #3
 80009b8:	d8f3      	bhi.n	80009a2 <usb_class_get_std_descr+0x2a>
 80009ba:	e8df f000 	tbb	[pc, r0]
 80009be:	0b090702 	bleq	82425ce <_etext+0x2418a2>
          *data = &USB_StringLangDescriptor;
 80009c2:	4b08      	ldr	r3, [pc, #32]	; (80009e4 <usb_class_get_std_descr+0x6c>)
          *data = &USB_StringSerialDescriptor;
 80009c4:	600b      	str	r3, [r1, #0]
      *size = ((uint8_t*)*data)[0]; //data->bLength
 80009c6:	680b      	ldr	r3, [r1, #0]
 80009c8:	781b      	ldrb	r3, [r3, #0]
 80009ca:	e7e9      	b.n	80009a0 <usb_class_get_std_descr+0x28>
          *data = &USB_StringManufacturingDescriptor;
 80009cc:	4b06      	ldr	r3, [pc, #24]	; (80009e8 <usb_class_get_std_descr+0x70>)
 80009ce:	e7f9      	b.n	80009c4 <usb_class_get_std_descr+0x4c>
          *data = &USB_StringProdDescriptor;
 80009d0:	4b06      	ldr	r3, [pc, #24]	; (80009ec <usb_class_get_std_descr+0x74>)
 80009d2:	e7f7      	b.n	80009c4 <usb_class_get_std_descr+0x4c>
          *data = &USB_StringSerialDescriptor;
 80009d4:	4b06      	ldr	r3, [pc, #24]	; (80009f0 <usb_class_get_std_descr+0x78>)
 80009d6:	e7f5      	b.n	80009c4 <usb_class_get_std_descr+0x4c>
 80009d8:	08000c9e 	stmdaeq	r0, {r1, r2, r3, r4, r7, sl, fp}
 80009dc:	08000cb0 	stmdaeq	r0, {r4, r5, r7, sl, fp}
 80009e0:	08000cf3 	stmdaeq	r0, {r0, r1, r4, r5, r6, r7, sl, fp}
 80009e4:	08000cfe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, sl, fp}
 80009e8:	08000d02 	stmdaeq	r0, {r1, r8, sl, fp}
 80009ec:	08000d18 	stmdaeq	r0, {r3, r4, r8, sl, fp}
 80009f0:	08000d28 	stmdaeq	r0, {r3, r5, r8, sl, fp}

080009f4 <usb_class_ep0_in>:
  .parity = 0,
  .wordsize = 8,
};

char usb_class_ep0_in(config_pack_t *req, void **data, uint16_t *size){
  if( (req->bmRequestType & 0x7F) == (USB_REQ_CLASS | USB_REQ_INTERFACE) ){
 80009f4:	7803      	ldrb	r3, [r0, #0]
 80009f6:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 80009fa:	2b21      	cmp	r3, #33	; 0x21
 80009fc:	d108      	bne.n	8000a10 <usb_class_ep0_in+0x1c>
    if( req->bRequest == CDC_GET_LINE_CODING ){
 80009fe:	7843      	ldrb	r3, [r0, #1]
 8000a00:	2b21      	cmp	r3, #33	; 0x21
 8000a02:	d105      	bne.n	8000a10 <usb_class_ep0_in+0x1c>
      *data = (void*)&linecoding;
 8000a04:	4b03      	ldr	r3, [pc, #12]	; (8000a14 <usb_class_ep0_in+0x20>)
      *size = sizeof(linecoding);
      return 1;
 8000a06:	2001      	movs	r0, #1
      *data = (void*)&linecoding;
 8000a08:	600b      	str	r3, [r1, #0]
      *size = sizeof(linecoding);
 8000a0a:	2307      	movs	r3, #7
 8000a0c:	8013      	strh	r3, [r2, #0]
      return 1;
 8000a0e:	4770      	bx	lr
    }
  }
  return 0;
 8000a10:	2000      	movs	r0, #0
}
 8000a12:	4770      	bx	lr
 8000a14:	20000002 	andcs	r0, r0, r2

08000a18 <usb_class_ep0_out>:

char usb_class_ep0_out(config_pack_t *req, uint16_t offset, uint16_t rx_size){
 8000a18:	b510      	push	{r4, lr}
  if( (req->bmRequestType & 0x7F) == (USB_REQ_CLASS | USB_REQ_INTERFACE) ){
 8000a1a:	7803      	ldrb	r3, [r0, #0]
 8000a1c:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8000a20:	2b21      	cmp	r3, #33	; 0x21
 8000a22:	d157      	bne.n	8000ad4 <usb_class_ep0_out+0xbc>
    if( req->bRequest == CDC_SET_LINE_CODING ){
 8000a24:	7843      	ldrb	r3, [r0, #1]
 8000a26:	2b20      	cmp	r3, #32
 8000a28:	d144      	bne.n	8000ab4 <usb_class_ep0_out+0x9c>
      if(rx_size == 0)return 1;
 8000a2a:	b90a      	cbnz	r2, 8000a30 <usb_class_ep0_out+0x18>
        USART1->CR1 |= USART_CR1_PCE;
        USART1->CR1 &=~USART_CR1_PS;
      }
      //if(linecoding.baudrate == 9600)GPO_ON(GLED); else GPO_OFF(GLED);
      //if(linecoding.baudrate == 115200)GPO_ON(RLED); else GPO_OFF(RLED);
      return 1;
 8000a2c:	2001      	movs	r0, #1
      //  1   : RTS
      //  0   : DTR
    }
  }
  return 0;
}
 8000a2e:	bd10      	pop	{r4, pc}
  return _usb_ep_read((epnum & 0x0F)*2 + 1, buf);
 8000a30:	4c2b      	ldr	r4, [pc, #172]	; (8000ae0 <usb_class_ep0_out+0xc8>)
 8000a32:	2001      	movs	r0, #1
 8000a34:	4621      	mov	r1, r4
 8000a36:	f7ff fe2b 	bl	8000690 <_usb_ep_read>
      UART_speed( USART, linecoding.baudrate );
 8000a3a:	6822      	ldr	r2, [r4, #0]
 8000a3c:	4b29      	ldr	r3, [pc, #164]	; (8000ae4 <usb_class_ep0_out+0xcc>)
 8000a3e:	fbb3 f3f2 	udiv	r3, r3, r2
 8000a42:	4a29      	ldr	r2, [pc, #164]	; (8000ae8 <usb_class_ep0_out+0xd0>)
 8000a44:	6093      	str	r3, [r2, #8]
      if(linecoding.baudrate == 57600)GPO_ON(GLED); else GPO_OFF(GLED);
 8000a46:	6823      	ldr	r3, [r4, #0]
 8000a48:	f5b3 4f61 	cmp.w	r3, #57600	; 0xe100
 8000a4c:	bf0c      	ite	eq
 8000a4e:	2240      	moveq	r2, #64	; 0x40
 8000a50:	f44f 0280 	movne.w	r2, #4194304	; 0x400000
 8000a54:	4b25      	ldr	r3, [pc, #148]	; (8000aec <usb_class_ep0_out+0xd4>)
 8000a56:	611a      	str	r2, [r3, #16]
      if(linecoding.parity == 0){ //none
 8000a58:	7963      	ldrb	r3, [r4, #5]
 8000a5a:	b94b      	cbnz	r3, 8000a70 <usb_class_ep0_out+0x58>
        USART1->CR1 &=~USART_CR1_PCE;
 8000a5c:	4b22      	ldr	r3, [pc, #136]	; (8000ae8 <usb_class_ep0_out+0xd0>)
 8000a5e:	68da      	ldr	r2, [r3, #12]
 8000a60:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8000a64:	60da      	str	r2, [r3, #12]
        USART1->CR1 &=~USART_CR1_M;
 8000a66:	68da      	ldr	r2, [r3, #12]
 8000a68:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8000a6c:	60da      	str	r2, [r3, #12]
 8000a6e:	e7dd      	b.n	8000a2c <usb_class_ep0_out+0x14>
      }else if(linecoding.parity == 1){ //odd
 8000a70:	7960      	ldrb	r0, [r4, #5]
 8000a72:	b2c0      	uxtb	r0, r0
 8000a74:	2801      	cmp	r0, #1
 8000a76:	d10d      	bne.n	8000a94 <usb_class_ep0_out+0x7c>
        USART1->CR1 |= USART_CR1_M;
 8000a78:	4b1b      	ldr	r3, [pc, #108]	; (8000ae8 <usb_class_ep0_out+0xd0>)
 8000a7a:	68da      	ldr	r2, [r3, #12]
 8000a7c:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8000a80:	60da      	str	r2, [r3, #12]
        USART1->CR1 |= USART_CR1_PCE;
 8000a82:	68da      	ldr	r2, [r3, #12]
 8000a84:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8000a88:	60da      	str	r2, [r3, #12]
        USART1->CR1 |= USART_CR1_PS;
 8000a8a:	68da      	ldr	r2, [r3, #12]
 8000a8c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8000a90:	60da      	str	r2, [r3, #12]
 8000a92:	e7cc      	b.n	8000a2e <usb_class_ep0_out+0x16>
      }else if(linecoding.parity == 2){ //even
 8000a94:	7963      	ldrb	r3, [r4, #5]
 8000a96:	2b02      	cmp	r3, #2
 8000a98:	d1c8      	bne.n	8000a2c <usb_class_ep0_out+0x14>
        USART1->CR1 |= USART_CR1_M;
 8000a9a:	4b13      	ldr	r3, [pc, #76]	; (8000ae8 <usb_class_ep0_out+0xd0>)
 8000a9c:	68da      	ldr	r2, [r3, #12]
 8000a9e:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8000aa2:	60da      	str	r2, [r3, #12]
        USART1->CR1 |= USART_CR1_PCE;
 8000aa4:	68da      	ldr	r2, [r3, #12]
 8000aa6:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8000aaa:	60da      	str	r2, [r3, #12]
        USART1->CR1 &=~USART_CR1_PS;
 8000aac:	68da      	ldr	r2, [r3, #12]
 8000aae:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8000ab2:	e7db      	b.n	8000a6c <usb_class_ep0_out+0x54>
    }else if( req->bRequest == CDC_SET_CTRL_LINES ){
 8000ab4:	2b22      	cmp	r3, #34	; 0x22
 8000ab6:	d10d      	bne.n	8000ad4 <usb_class_ep0_out+0xbc>
      if( req->wValue & (1<<0) ){ //DTR
 8000ab8:	8840      	ldrh	r0, [r0, #2]
 8000aba:	4b0c      	ldr	r3, [pc, #48]	; (8000aec <usb_class_ep0_out+0xd4>)
 8000abc:	f010 0f01 	tst.w	r0, #1
        GPO_ON(GLED);
 8000ac0:	bf14      	ite	ne
 8000ac2:	2240      	movne	r2, #64	; 0x40
        GPO_OFF(GLED);
 8000ac4:	f44f 0280 	moveq.w	r2, #4194304	; 0x400000
      if( req->wValue & (1<<1) ){ //RTS
 8000ac8:	f010 0002 	ands.w	r0, r0, #2
        GPO_OFF(GLED);
 8000acc:	611a      	str	r2, [r3, #16]
      if( req->wValue & (1<<1) ){ //RTS
 8000ace:	d003      	beq.n	8000ad8 <usb_class_ep0_out+0xc0>
        GPO_ON(RLED);
 8000ad0:	2280      	movs	r2, #128	; 0x80
 8000ad2:	611a      	str	r2, [r3, #16]
  return 0;
 8000ad4:	2000      	movs	r0, #0
 8000ad6:	e7aa      	b.n	8000a2e <usb_class_ep0_out+0x16>
        GPO_OFF(RLED);
 8000ad8:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
 8000adc:	611a      	str	r2, [r3, #16]
 8000ade:	e7a6      	b.n	8000a2e <usb_class_ep0_out+0x16>
 8000ae0:	20000002 	andcs	r0, r0, r2
 8000ae4:	044aa200 	strbeq	sl, [sl], #-512	; 0xfffffe00
 8000ae8:	40013800 	andmi	r3, r1, r0, lsl #16
 8000aec:	40010c00 	andmi	r0, r1, r0, lsl #24

08000af0 <usb_out_func>:

volatile char flag = 0;
void usb_out_func(uint8_t epnum){
  flag = 1;
 8000af0:	2201      	movs	r2, #1
 8000af2:	4b02      	ldr	r3, [pc, #8]	; (8000afc <usb_out_func+0xc>)
 8000af4:	f883 2204 	strb.w	r2, [r3, #516]	; 0x204
}
 8000af8:	4770      	bx	lr
 8000afa:	bf00      	nop
 8000afc:	2000001f 	andcs	r0, r0, pc, lsl r0

08000b00 <usb_class_init>:

void usb_class_init(){
  UART_init( USART, 115200 );
 8000b00:	4a20      	ldr	r2, [pc, #128]	; (8000b84 <usb_class_init+0x84>)
void usb_class_init(){
 8000b02:	b570      	push	{r4, r5, r6, lr}
  UART_init( USART, 115200 );
 8000b04:	6853      	ldr	r3, [r2, #4]
 8000b06:	2400      	movs	r4, #0
 8000b08:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 8000b0c:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000b10:	6053      	str	r3, [r2, #4]
 8000b12:	6853      	ldr	r3, [r2, #4]
 8000b14:	2520      	movs	r5, #32
 8000b16:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8000b1a:	f043 03b0 	orr.w	r3, r3, #176	; 0xb0
 8000b1e:	6053      	str	r3, [r2, #4]
 8000b20:	4b19      	ldr	r3, [pc, #100]	; (8000b88 <usb_class_init+0x88>)

  usb_ep_init( ENDP_CTL_NUM | 0x80, USB_ENDP_INTR, ENDP_CTL_SIZE, NULL );
 8000b22:	2103      	movs	r1, #3
  UART_init( USART, 115200 );
 8000b24:	699a      	ldr	r2, [r3, #24]
  usb_ep_init( ENDP_CTL_NUM | 0x80, USB_ENDP_INTR, ENDP_CTL_SIZE, NULL );
 8000b26:	2082      	movs	r0, #130	; 0x82
  UART_init( USART, 115200 );
 8000b28:	f042 0201 	orr.w	r2, r2, #1
 8000b2c:	619a      	str	r2, [r3, #24]
 8000b2e:	699a      	ldr	r2, [r3, #24]
 8000b30:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8000b34:	619a      	str	r2, [r3, #24]
 8000b36:	f240 2271 	movw	r2, #625	; 0x271
 8000b3a:	f5a3 4358 	sub.w	r3, r3, #55296	; 0xd800
 8000b3e:	609a      	str	r2, [r3, #8]
 8000b40:	f242 022c 	movw	r2, #8236	; 0x202c
 8000b44:	60da      	str	r2, [r3, #12]
 8000b46:	611c      	str	r4, [r3, #16]
 8000b48:	615c      	str	r4, [r3, #20]
 8000b4a:	619c      	str	r4, [r3, #24]
 8000b4c:	4b0f      	ldr	r3, [pc, #60]	; (8000b8c <usb_class_init+0x8c>)
  usb_ep_init( ENDP_CTL_NUM | 0x80, USB_ENDP_INTR, ENDP_CTL_SIZE, NULL );
 8000b4e:	2208      	movs	r2, #8
  UART_init( USART, 115200 );
 8000b50:	701c      	strb	r4, [r3, #0]
 8000b52:	705c      	strb	r4, [r3, #1]
 8000b54:	f883 4102 	strb.w	r4, [r3, #258]	; 0x102
 8000b58:	f883 4103 	strb.w	r4, [r3, #259]	; 0x103
 8000b5c:	4b0c      	ldr	r3, [pc, #48]	; (8000b90 <usb_class_init+0x90>)
 8000b5e:	605d      	str	r5, [r3, #4]
  usb_ep_init( ENDP_CTL_NUM | 0x80, USB_ENDP_INTR, ENDP_CTL_SIZE, NULL );
 8000b60:	4623      	mov	r3, r4
 8000b62:	f7ff fb79 	bl	8000258 <usb_ep_init>
  
  usb_ep_init( ENDP_DATA_IN | 0x80, USB_ENDP_BULK, ENDP_DATA_SIZE, NULL );
 8000b66:	4623      	mov	r3, r4
 8000b68:	462a      	mov	r2, r5
 8000b6a:	2102      	movs	r1, #2
 8000b6c:	2081      	movs	r0, #129	; 0x81
 8000b6e:	f7ff fb73 	bl	8000258 <usb_ep_init>
  usb_ep_init( ENDP_DATA_OUT, USB_ENDP_BULK, ENDP_DATA_SIZE, NULL );
 8000b72:	4623      	mov	r3, r4
 8000b74:	462a      	mov	r2, r5
  
}
 8000b76:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  usb_ep_init( ENDP_DATA_OUT, USB_ENDP_BULK, ENDP_DATA_SIZE, NULL );
 8000b7a:	2102      	movs	r1, #2
 8000b7c:	2001      	movs	r0, #1
 8000b7e:	f7ff bb6b 	b.w	8000258 <usb_ep_init>
 8000b82:	bf00      	nop
 8000b84:	40010800 	andmi	r0, r1, r0, lsl #16
 8000b88:	40021000 	andmi	r1, r2, r0
 8000b8c:	2000001f 	andcs	r0, r0, pc, lsl r0
 8000b90:	e000e100 	and	lr, r0, r0, lsl #2

08000b94 <usb_class_poll>:

void usb_class_poll(){
 8000b94:	b530      	push	{r4, r5, lr}
  return ((buf->st - buf->en) & UART_MASK);
 8000b96:	4d1a      	ldr	r5, [pc, #104]	; (8000c00 <usb_class_poll+0x6c>)
 8000b98:	b089      	sub	sp, #36	; 0x24
 8000b9a:	782a      	ldrb	r2, [r5, #0]
 8000b9c:	786c      	ldrb	r4, [r5, #1]
  char buf[ENDP_DATA_SIZE];
  int len = UART_rx_count(USART);
 8000b9e:	1aa4      	subs	r4, r4, r2
  if( len > 0 ){
 8000ba0:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
 8000ba4:	d011      	beq.n	8000bca <usb_class_poll+0x36>
    if( usb_ep_ready( ENDP_DATA_IN | 0x80 ) ){
 8000ba6:	4b17      	ldr	r3, [pc, #92]	; (8000c04 <usb_class_poll+0x70>)
 8000ba8:	881b      	ldrh	r3, [r3, #0]
 8000baa:	f003 0330 	and.w	r3, r3, #48	; 0x30
 8000bae:	2b30      	cmp	r3, #48	; 0x30
 8000bb0:	d00b      	beq.n	8000bca <usb_class_poll+0x36>
      if( len > ENDP_DATA_SIZE )len = ENDP_DATA_SIZE;
 8000bb2:	2c20      	cmp	r4, #32
 8000bb4:	bfa8      	it	ge
 8000bb6:	2420      	movge	r4, #32
      UART_read( USART, buf, len );
 8000bb8:	4668      	mov	r0, sp
 8000bba:	4621      	mov	r1, r4
 8000bbc:	f7ff fe9a 	bl	80008f4 <UART1_read>
  _usb_ep_write((epnum & 0x0F)*2, buf, size);
 8000bc0:	4622      	mov	r2, r4
 8000bc2:	4669      	mov	r1, sp
 8000bc4:	2002      	movs	r0, #2
 8000bc6:	f7ff fd0b 	bl	80005e0 <_usb_ep_write>
 8000bca:	f895 3102 	ldrb.w	r3, [r5, #258]	; 0x102
 8000bce:	f895 2103 	ldrb.w	r2, [r5, #259]	; 0x103
 8000bd2:	1a9b      	subs	r3, r3, r2
      usb_ep_write( ENDP_DATA_IN | 0x80, buf, len );
    }
  }
  
  if( UART_tx_count(USART) > (ENDP_DATA_SIZE + 10) ){
 8000bd4:	b2db      	uxtb	r3, r3
 8000bd6:	f1c3 03ff 	rsb	r3, r3, #255	; 0xff
 8000bda:	2b2a      	cmp	r3, #42	; 0x2a
 8000bdc:	dd0e      	ble.n	8000bfc <usb_class_poll+0x68>
    if( usb_ep_ready( ENDP_DATA_OUT ) ){
 8000bde:	4b09      	ldr	r3, [pc, #36]	; (8000c04 <usb_class_poll+0x70>)
 8000be0:	881b      	ldrh	r3, [r3, #0]
 8000be2:	f403 5340 	and.w	r3, r3, #12288	; 0x3000
 8000be6:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8000bea:	d107      	bne.n	8000bfc <usb_class_poll+0x68>
  return _usb_ep_read((epnum & 0x0F)*2 + 1, buf);
 8000bec:	4669      	mov	r1, sp
 8000bee:	2003      	movs	r0, #3
 8000bf0:	f7ff fd4e 	bl	8000690 <_usb_ep_read>
    //if(flag){ flag=0;
      len = usb_ep_read( ENDP_DATA_OUT, buf );
      UART_write( USART, buf, len );
 8000bf4:	b2c1      	uxtb	r1, r0
 8000bf6:	4668      	mov	r0, sp
 8000bf8:	f7ff fe52 	bl	80008a0 <UART1_write>
    }
  }
  //sleep(500000);
  //GPO_T(RLED);
}
 8000bfc:	b009      	add	sp, #36	; 0x24
 8000bfe:	bd30      	pop	{r4, r5, pc}
 8000c00:	2000001f 	andcs	r0, r0, pc, lsl r0
 8000c04:	40005c04 	andmi	r5, r0, r4, lsl #24

08000c08 <Reset_Handler>:
 8000c08:	2100      	movs	r1, #0
 8000c0a:	e003      	b.n	8000c14 <LoopCopyDataInit>

08000c0c <CopyDataInit>:
 8000c0c:	4b0a      	ldr	r3, [pc, #40]	; (8000c38 <LoopFillZerobss+0x10>)
 8000c0e:	585b      	ldr	r3, [r3, r1]
 8000c10:	5043      	str	r3, [r0, r1]
 8000c12:	3104      	adds	r1, #4

08000c14 <LoopCopyDataInit>:
 8000c14:	4809      	ldr	r0, [pc, #36]	; (8000c3c <LoopFillZerobss+0x14>)
 8000c16:	4b0a      	ldr	r3, [pc, #40]	; (8000c40 <LoopFillZerobss+0x18>)
 8000c18:	1842      	adds	r2, r0, r1
 8000c1a:	429a      	cmp	r2, r3
 8000c1c:	d3f6      	bcc.n	8000c0c <CopyDataInit>
 8000c1e:	4a09      	ldr	r2, [pc, #36]	; (8000c44 <LoopFillZerobss+0x1c>)
 8000c20:	e002      	b.n	8000c28 <LoopFillZerobss>

08000c22 <FillZerobss>:
 8000c22:	2300      	movs	r3, #0
 8000c24:	f842 3b04 	str.w	r3, [r2], #4

08000c28 <LoopFillZerobss>:
 8000c28:	4b07      	ldr	r3, [pc, #28]	; (8000c48 <LoopFillZerobss+0x20>)
 8000c2a:	429a      	cmp	r2, r3
 8000c2c:	d3f9      	bcc.n	8000c22 <FillZerobss>
 8000c2e:	f7ff face 	bl	80001ce <SystemInit>
 8000c32:	f000 f80d 	bl	8000c50 <main>
 8000c36:	4770      	bx	lr
 8000c38:	08000d2c 	stmdaeq	r0, {r2, r3, r5, r8, sl, fp}
 8000c3c:	20000000 	andcs	r0, r0, r0
 8000c40:	2000000c 	andcs	r0, r0, ip
 8000c44:	2000000c 	andcs	r0, r0, ip
 8000c48:	20000264 	andcs	r0, r0, r4, ror #4

08000c4c <ADC1_2_IRQHandler>:
 8000c4c:	e7fe      	b.n	8000c4c <ADC1_2_IRQHandler>
	...

08000c50 <main>:

int main(void){
 8000c50:	b508      	push	{r3, lr}
  SysClockMax();
 8000c52:	f7ff fa65 	bl	8000120 <SysClockMax>
  RCC->APB2ENR |= RCC_APB2ENR_IOPBEN | RCC_APB2ENR_IOPAEN;
 8000c56:	4a0f      	ldr	r2, [pc, #60]	; (8000c94 <main+0x44>)
 8000c58:	6993      	ldr	r3, [r2, #24]
 8000c5a:	f043 030c 	orr.w	r3, r3, #12
 8000c5e:	6193      	str	r3, [r2, #24]

  GPIO_config(RLED); GPIO_config(GLED); GPIO_config(YLED);
 8000c60:	4b0d      	ldr	r3, [pc, #52]	; (8000c98 <main+0x48>)
 8000c62:	681a      	ldr	r2, [r3, #0]
 8000c64:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 8000c68:	f042 5240 	orr.w	r2, r2, #805306368	; 0x30000000
 8000c6c:	601a      	str	r2, [r3, #0]
 8000c6e:	681a      	ldr	r2, [r3, #0]
 8000c70:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8000c74:	f042 7240 	orr.w	r2, r2, #50331648	; 0x3000000
 8000c78:	601a      	str	r2, [r3, #0]
 8000c7a:	681a      	ldr	r2, [r3, #0]
 8000c7c:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 8000c80:	f442 1240 	orr.w	r2, r2, #3145728	; 0x300000
 8000c84:	601a      	str	r2, [r3, #0]
  //GPIO_config(BTN1); GPIO_config(BTN2);
  
  USB_setup();
 8000c86:	f7ff fab1 	bl	80001ec <USB_setup>
static __INLINE void __enable_irq()               { __ASM volatile ("cpsie i"); }
 8000c8a:	b662      	cpsie	i
  __enable_irq();

  while(1){
    usb_class_poll();
 8000c8c:	f7ff ff82 	bl	8000b94 <usb_class_poll>
 8000c90:	e7fc      	b.n	8000c8c <main+0x3c>
 8000c92:	bf00      	nop
 8000c94:	40021000 	andmi	r1, r2, r0
 8000c98:	40010c00 	andmi	r0, r1, r0, lsl #24
	...

08000c9e <USB_DeviceDescriptor>:
 8000c9e:	01100112 	tsteq	r0, r2, lsl r1
 8000ca2:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
 8000ca6:	05df16c0 	ldrbeq	r1, [pc, #1728]	; 800136e <_etext+0x642>
 8000caa:	02010001 	andeq	r0, r1, #1
 8000cae:	 	andeq	r0, r9, #-1073741824	; 0xc0000000

08000cb0 <USB_ConfigDescriptor>:
 8000cb0:	00430209 	subeq	r0, r3, r9, lsl #4
 8000cb4:	80000102 	andhi	r0, r0, r2, lsl #2
 8000cb8:	00040932 	andeq	r0, r4, r2, lsr r9
 8000cbc:	02020100 	andeq	r0, r2, #0, 2
 8000cc0:	24050000 	strcs	r0, [r5], #-0
 8000cc4:	05011000 	streq	r1, [r1, #-0]
 8000cc8:	01000124 	tsteq	r0, r4, lsr #2
 8000ccc:	02022404 	andeq	r2, r2, #4, 8	; 0x4000000
 8000cd0:	00062405 	andeq	r2, r6, r5, lsl #8
 8000cd4:	82050701 	andhi	r0, r5, #262144	; 0x40000
 8000cd8:	64000803 	strvs	r0, [r0], #-2051	; 0xfffff7fd
 8000cdc:	00010409 	andeq	r0, r1, r9, lsl #8
 8000ce0:	00000a02 	andeq	r0, r0, r2, lsl #20
 8000ce4:	01050700 	tsteq	r5, r0, lsl #14
 8000ce8:	00002002 	andeq	r2, r0, r2
 8000cec:	02810507 	addeq	r0, r1, #29360128	; 0x1c00000
 8000cf0:	 	beq	8000d78 <_etext+0x4c>

08000cf3 <USB_DeviceQualifierDescriptor>:
 8000cf3:	0200060a 	andeq	r0, r0, #10485760	; 0xa00000
 8000cf7:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
 8000cfb:	 	streq	r0, [r0], #-1

08000cfe <USB_StringLangDescriptor>:
 8000cfe:	04090304 	streq	r0, [r9], #-772	; 0xfffffcfc

08000d02 <USB_StringManufacturingDescriptor>:
 8000d02:	00430316 	subeq	r0, r3, r6, lsl r3
 8000d06:	004b004f 	subeq	r0, fp, pc, asr #32
 8000d0a:	004f0050 	subeq	r0, pc, r0, asr r0	; <UNPREDICTABLE>
 8000d0e:	00450057 	subeq	r0, r5, r7, asr r0
 8000d12:	00450048 	subeq	r0, r5, r8, asr #32
 8000d16:	 	tsteq	r0, #85	; 0x55

08000d18 <USB_StringProdDescriptor>:
 8000d18:	00550310 	subseq	r0, r5, r0, lsl r3
 8000d1c:	00420053 	subeq	r0, r2, r3, asr r0
 8000d20:	00430020 	subeq	r0, r3, r0, lsr #32
 8000d24:	00430044 	subeq	r0, r3, r4, asr #32

08000d28 <USB_StringSerialDescriptor>:
 8000d28:	00310304 	eorseq	r0, r1, r4, lsl #6

Disassembly of section .data:

20000000 <lastaddr>:
20000000:	 	strcs	r0, [r0, #64]	; 0x40

20000002 <linecoding>:
volatile struct cdc_linecoding linecoding = {
20000002:	00002580 	andeq	r2, r0, r0, lsl #11
20000006:	00080000 	andeq	r0, r8, r0
	...

Disassembly of section .bss:

2000000c <ep0_buf>:
2000000c:	00000000 	andeq	r0, r0, r0

20000010 <USB_Addr>:
	...

20000012 <ep0_count>:
	...

20000014 <setup_packet>:
	...

2000001c <bytesread.4427>:
	...

2000001e <configuration>:
	...

2000001f <uart1_rx>:
	...

20000121 <uart1_tx>:
	...

20000223 <flag>:
	...

20000224 <epfunc_in>:
	...

20000244 <epfunc_out>:
	...

Disassembly of section ._usrstack:

20000264 <_susrstack>:
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <__Stack_Size+0x10d0924>
   4:	35312820 	ldrcc	r2, [r1, #-2080]!	; 0xfffff7e0
   8:	322d383a 	eorcc	r3, sp, #3801088	; 0x3a0000
   c:	2d393130 	ldfcss	f3, [r9, #-192]!	; 0xffffff40
  10:	312d3371 			; <UNDEFINED> instruction: 0x312d3371
  14:	2e382029 	cdpcs	0, 3, cr2, cr8, cr9, {1}
  18:	20312e33 	eorscs	r2, r1, r3, lsr lr
  1c:	39313032 	ldmdbcc	r1!, {r1, r4, r5, ip, sp}
  20:	33303730 	teqcc	r0, #48, 14	; 0xc00000
  24:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
  28:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
  2c:	5b202965 	blpl	80a5c8 <__Stack_Size+0x80a1c8>
  30:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
  34:	72622d38 	rsbvc	r2, r2, #56, 26	; 0xe00
  38:	68636e61 	stmdavs	r3!, {r0, r5, r6, r9, sl, fp, sp, lr}^
  3c:	76657220 	strbtvc	r7, [r5], -r0, lsr #4
  40:	6f697369 	svcvs	0x00697369
  44:	3732206e 	ldrcc	r2, [r2, -lr, rrx]!
  48:	37323033 			; <UNDEFINED> instruction: 0x37323033
  4c:	Address 0x000000000000004c is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002e41 	andeq	r2, r0, r1, asr #28
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000024 	andeq	r0, r0, r4, lsr #32
  10:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
  14:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
  18:	0600334d 	streq	r3, [r0], -sp, asr #6
  1c:	094d070a 	stmdbeq	sp, {r1, r3, r8, r9, sl}^
  20:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  24:	17011501 	strne	r1, [r1, -r1, lsl #10]
  28:	1a011803 	bne	4603c <__Stack_Size+0x45c3c>
  2c:	Address 0x000000000000002c is out of bounds.


Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	08000120 	stmdaeq	r0, {r5, r8}
  14:	000000bc 	strheq	r0, [r0], -ip
  18:	08000c50 	stmdaeq	r0, {r4, r6, sl, fp}
  1c:	0000004c 	andeq	r0, r0, ip, asr #32
	...
  28:	0000001c 	andeq	r0, r0, ip, lsl r0
  2c:	04ce0002 	strbeq	r0, [lr], #2
  30:	00040000 	andeq	r0, r4, r0
  34:	00000000 	andeq	r0, r0, r0
  38:	080001dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8}
  3c:	00000628 	andeq	r0, r0, r8, lsr #12
	...
  48:	0000001c 	andeq	r0, r0, ip, lsl r0
  4c:	179f0002 	ldrne	r0, [pc, r2]
  50:	00040000 	andeq	r0, r4, r0
  54:	00000000 	andeq	r0, r0, r0
  58:	08000804 	stmdaeq	r0, {r2, fp}
  5c:	00000404 	andeq	r0, r0, r4, lsl #8
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	000004ca 	andeq	r0, r0, sl, asr #9
       4:	00000002 	andeq	r0, r0, r2
       8:	01040000 	mrseq	r0, (UNDEF: 4)
       c:	00000018 	andeq	r0, r0, r8, lsl r0
      10:	0001b40c 	andeq	fp, r1, ip, lsl #8
      14:	0001ff00 	andeq	pc, r1, r0, lsl #30
      18:	00002000 	andeq	r2, r0, r0
	...
      28:	06010200 	streq	r0, [r1], -r0, lsl #4
      2c:	0000012f 	andeq	r0, r0, pc, lsr #2
      30:	00017f03 	andeq	r7, r1, r3, lsl #30
      34:	17220400 	strne	r0, [r2, -r0, lsl #8]!
      38:	00000029 	andeq	r0, r0, r9, lsr #32
      3c:	cd050202 	sfmgt	f0, 4, [r5, #-8]
      40:	02000001 	andeq	r0, r0, #1
      44:	019b0504 	orrseq	r0, fp, r4, lsl #10
      48:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
      4c:	00019605 	andeq	r9, r1, r5, lsl #12
      50:	017e0300 	cmneq	lr, r0, lsl #6
      54:	2e040000 	cdpcs	0, 0, cr0, cr4, cr0, {0}
      58:	00006218 	andeq	r6, r0, r8, lsl r2
      5c:	00510400 	subseq	r0, r1, r0, lsl #8
      60:	01020000 	mrseq	r0, (UNDEF: 2)
      64:	00012d08 	andeq	r2, r1, r8, lsl #26
      68:	07020200 	streq	r0, [r2, -r0, lsl #4]
      6c:	00000105 	andeq	r0, r0, r5, lsl #2
      70:	0001e303 	andeq	lr, r1, r3, lsl #6
      74:	19340400 	ldmdbne	r4!, {sl}
      78:	00000081 	andeq	r0, r0, r1, lsl #1
      7c:	00007005 	andeq	r7, r0, r5
      80:	07040200 	streq	r0, [r4, -r0, lsl #4]
      84:	0000016c 	andeq	r0, r0, ip, ror #2
      88:	67070802 	strvs	r0, [r7, -r2, lsl #16]
      8c:	06000001 	streq	r0, [r0], -r1
      90:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
      94:	8f050074 	svchi	0x00050074
      98:	02000000 	andeq	r0, r0, #0
      9c:	01710704 	cmneq	r1, r4, lsl #14
      a0:	18070000 	stmdane	r7, {}	; <UNPREDICTABLE>
      a4:	03000001 	movweq	r0, #1
      a8:	961506ce 	ldrls	r0, [r5], -lr, asr #13
      ac:	01000000 	mrseq	r0, (UNDEF: 0)
      b0:	01a40801 			; <UNDEFINED> instruction: 0x01a40801
      b4:	45050000 	strmi	r0, [r5, #-0]
      b8:	00007011 	andeq	r7, r0, r1, lsl r0
      bc:	09010100 	stmdbeq	r1, {r8}
      c0:	0000005d 	andeq	r0, r0, sp, asr r0
      c4:	000000cf 	andeq	r0, r0, pc, asr #1
      c8:	00009b0a 	andeq	r9, r0, sl, lsl #22
      cc:	04000f00 	streq	r0, [r0], #-3840	; 0xfffff100
      d0:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
      d4:	0000f708 	andeq	pc, r0, r8, lsl #14
      d8:	17460500 	strbne	r0, [r6, -r0, lsl #10]
      dc:	000000cf 	andeq	r0, r0, pc, asr #1
      e0:	5d090101 	stfpls	f0, [r9, #-4]
      e4:	f2000000 	vhadd.s8	d0, d0, d0
      e8:	0a000000 	beq	f0 <_Minimum_Stack_Size-0x10>
      ec:	0000009b 	muleq	r0, fp, r0
      f0:	e2040007 	and	r0, r4, #7
      f4:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
      f8:	000001bf 			; <UNDEFINED> instruction: 0x000001bf
      fc:	f2174705 	vabd.s16	d4, d7, d5
     100:	01000000 	mrseq	r0, (UNDEF: 0)
     104:	06240b01 	strteq	r0, [r4], -r1, lsl #22
     108:	9d090158 	stflss	f0, [r9, #-352]	; 0xfffffea0
     10c:	0c000001 	stceq	0, cr0, [r0], {1}
     110:	00524341 	subseq	r4, r2, r1, asr #6
     114:	11015a06 	tstne	r1, r6, lsl #20
     118:	0000007c 	andeq	r0, r0, ip, ror r0
     11c:	0d002302 	stceq	3, cr2, [r0, #-8]
     120:	00000128 	andeq	r0, r0, r8, lsr #2
     124:	11015b06 	tstne	r1, r6, lsl #22
     128:	0000007c 	andeq	r0, r0, ip, ror r0
     12c:	0d042302 	stceq	3, cr2, [r4, #-8]
     130:	00000125 	andeq	r0, r0, r5, lsr #2
     134:	11015c06 	tstne	r1, r6, lsl #24
     138:	0000007c 	andeq	r0, r0, ip, ror r0
     13c:	0c082302 	stceq	3, cr2, [r8], {2}
     140:	06005253 			; <UNDEFINED> instruction: 0x06005253
     144:	7c11015d 	ldfvcs	f0, [r1], {93}	; 0x5d
     148:	02000000 	andeq	r0, r0, #0
     14c:	430c0c23 	movwmi	r0, #52259	; 0xcc23
     150:	5e060052 	mcrpl	0, 0, r0, cr6, cr2, {2}
     154:	007c1101 	rsbseq	r1, ip, r1, lsl #2
     158:	23020000 	movwcs	r0, #8192	; 0x2000
     15c:	52410c10 	subpl	r0, r1, #16, 24	; 0x1000
     160:	015f0600 	cmpeq	pc, r0, lsl #12
     164:	00007c11 	andeq	r7, r0, r1, lsl ip
     168:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     16c:	00013b0d 	andeq	r3, r1, sp, lsl #22
     170:	01600600 	cmneq	r0, r0, lsl #12
     174:	00007c11 	andeq	r7, r0, r1, lsl ip
     178:	18230200 	stmdane	r3!, {r9}
     17c:	52424f0c 	subpl	r4, r2, #12, 30	; 0x30
     180:	01610600 	cmneq	r1, r0, lsl #12
     184:	00007c11 	andeq	r7, r0, r1, lsl ip
     188:	1c230200 	sfmne	f0, 4, [r3], #-0
     18c:	0000d00d 	andeq	sp, r0, sp
     190:	01620600 	cmneq	r2, r0, lsl #12
     194:	00007c11 	andeq	r7, r0, r1, lsl ip
     198:	20230200 	eorcs	r0, r3, r0, lsl #4
     19c:	000a0e00 	andeq	r0, sl, r0, lsl #28
     1a0:	63060000 	movwvs	r0, #24576	; 0x6000
     1a4:	01050301 	tsteq	r5, r1, lsl #6
     1a8:	1c0b0000 	stcne	0, cr0, [fp], {-0}
     1ac:	09017906 	stmdbeq	r1, {r1, r2, r8, fp, ip, sp, lr}
     1b0:	00000225 	andeq	r0, r0, r5, lsr #4
     1b4:	4c52430c 	mrrcmi	3, 0, r4, r2, cr12
     1b8:	017b0600 	cmneq	fp, r0, lsl #12
     1bc:	00007c11 	andeq	r7, r0, r1, lsl ip
     1c0:	00230200 	eoreq	r0, r3, r0, lsl #4
     1c4:	4852430c 	ldmdami	r2, {r2, r3, r8, r9, lr}^
     1c8:	017c0600 	cmneq	ip, r0, lsl #12
     1cc:	00007c11 	andeq	r7, r0, r1, lsl ip
     1d0:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     1d4:	5244490c 	subpl	r4, r4, #12, 18	; 0x30000
     1d8:	017d0600 	cmneq	sp, r0, lsl #12
     1dc:	00007c11 	andeq	r7, r0, r1, lsl ip
     1e0:	08230200 	stmdaeq	r3!, {r9}
     1e4:	52444f0c 	subpl	r4, r4, #12, 30	; 0x30
     1e8:	017e0600 	cmneq	lr, r0, lsl #12
     1ec:	00007c11 	andeq	r7, r0, r1, lsl ip
     1f0:	0c230200 	sfmeq	f0, 4, [r3], #-0
     1f4:	0000ba0d 	andeq	fp, r0, sp, lsl #20
     1f8:	017f0600 	cmneq	pc, r0, lsl #12
     1fc:	00007c11 	andeq	r7, r0, r1, lsl ip
     200:	10230200 	eorne	r0, r3, r0, lsl #4
     204:	5252420c 	subspl	r4, r2, #12, 4	; 0xc0000000
     208:	01800600 	orreq	r0, r0, r0, lsl #12
     20c:	00007c11 	andeq	r7, r0, r1, lsl ip
     210:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     214:	0002290d 	andeq	r2, r2, sp, lsl #18
     218:	01810600 	orreq	r0, r1, r0, lsl #12
     21c:	00007c11 	andeq	r7, r0, r1, lsl ip
     220:	18230200 	stmdane	r3!, {r9}
     224:	00e10e00 	rsceq	r0, r1, r0, lsl #28
     228:	82060000 	andhi	r0, r6, #0
     22c:	01aa0301 			; <UNDEFINED> instruction: 0x01aa0301
     230:	280b0000 	stmdacs	fp, {}	; <UNPREDICTABLE>
     234:	0901bb06 	stmdbeq	r1, {r1, r2, r8, r9, fp, ip, sp, pc}
     238:	000002dc 	ldrdeq	r0, [r0], -ip
     23c:	0052430c 	subseq	r4, r2, ip, lsl #6
     240:	1101bd06 	tstne	r1, r6, lsl #26
     244:	0000007c 	andeq	r0, r0, ip, ror r0
     248:	0d002302 	stceq	3, cr2, [r0, #-8]
     24c:	00000005 	andeq	r0, r0, r5
     250:	1101be06 	tstne	r1, r6, lsl #28
     254:	0000007c 	andeq	r0, r0, ip, ror r0
     258:	0c042302 	stceq	3, cr2, [r4], {2}
     25c:	00524943 	subseq	r4, r2, r3, asr #18
     260:	1101bf06 	tstne	r1, r6, lsl #30
     264:	0000007c 	andeq	r0, r0, ip, ror r0
     268:	0d082302 	stceq	3, cr2, [r8, #-8]
     26c:	00000159 	andeq	r0, r0, r9, asr r1
     270:	1101c006 	tstne	r1, r6
     274:	0000007c 	andeq	r0, r0, ip, ror r0
     278:	0d0c2302 	stceq	3, cr2, [ip, #-8]
     27c:	000000ee 	andeq	r0, r0, lr, ror #1
     280:	1101c106 	tstne	r1, r6, lsl #2
     284:	0000007c 	andeq	r0, r0, ip, ror r0
     288:	0d102302 	ldceq	3, cr2, [r0, #-8]
     28c:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     290:	1101c206 	tstne	r1, r6, lsl #4
     294:	0000007c 	andeq	r0, r0, ip, ror r0
     298:	0d142302 	ldceq	3, cr2, [r4, #-8]
     29c:	00000144 	andeq	r0, r0, r4, asr #2
     2a0:	1101c306 	tstne	r1, r6, lsl #6
     2a4:	0000007c 	andeq	r0, r0, ip, ror r0
     2a8:	0d182302 	ldceq	3, cr2, [r8, #-8]
     2ac:	00000151 	andeq	r0, r0, r1, asr r1
     2b0:	1101c406 	tstne	r1, r6, lsl #8
     2b4:	0000007c 	andeq	r0, r0, ip, ror r0
     2b8:	0d1c2302 	ldceq	3, cr2, [ip, #-8]
     2bc:	00000000 	andeq	r0, r0, r0
     2c0:	1101c506 	tstne	r1, r6, lsl #10
     2c4:	0000007c 	andeq	r0, r0, ip, ror r0
     2c8:	0c202302 	stceq	3, cr2, [r0], #-8
     2cc:	00525343 	subseq	r5, r2, r3, asr #6
     2d0:	1101c606 	tstne	r1, r6, lsl #12
     2d4:	0000007c 	andeq	r0, r0, ip, ror r0
     2d8:	00242302 	eoreq	r2, r4, r2, lsl #6
     2dc:	0001d70e 	andeq	sp, r1, lr, lsl #14
     2e0:	01c90600 	biceq	r0, r9, r0, lsl #12
     2e4:	00023203 	andeq	r3, r2, r3, lsl #4
     2e8:	4c010f00 	stcmi	15, cr0, [r1], {-0}
     2ec:	02000001 	andeq	r0, r0, #1
     2f0:	8f01050e 	svchi	0x0001050e
     2f4:	50000000 	andpl	r0, r0, r0
     2f8:	9c08000c 	stcls	0, cr0, [r8], {12}
     2fc:	0008000c 	andeq	r0, r8, ip
     300:	01000000 	mrseq	r0, (UNDEF: 0)
     304:	000003d5 	ldrdeq	r0, [r0], -r5
     308:	000c6010 	andeq	r6, ip, r0, lsl r0
     30c:	000c6e08 	andeq	r6, ip, r8, lsl #28
     310:	00032a08 	andeq	r2, r3, r8, lsl #20
     314:	01621100 	cmneq	r2, r0, lsl #2
     318:	12020000 	andne	r0, r2, #0
     31c:	00007003 	andeq	r7, r0, r3
     320:	00002400 	andeq	r2, r0, r0, lsl #8
     324:	00002000 	andeq	r2, r0, r0
     328:	3c120000 	ldccc	0, cr0, [r2], {-0}
     32c:	13000003 	movwne	r0, #3
     330:	00000162 	andeq	r0, r0, r2, ror #2
     334:	70031202 	andvc	r1, r3, r2, lsl #4
     338:	00000000 	andeq	r0, r0, r0
     33c:	000c6e10 	andeq	r6, ip, r0, lsl lr
     340:	000c7a08 	andeq	r7, ip, r8, lsl #20
     344:	00035e08 	andeq	r5, r3, r8, lsl #28
     348:	01621100 	cmneq	r2, r0, lsl #2
     34c:	12020000 	andne	r0, r2, #0
     350:	00007016 	andeq	r7, r0, r6, lsl r0
     354:	00004700 	andeq	r4, r0, r0, lsl #14
     358:	00004300 	andeq	r4, r0, r0, lsl #6
     35c:	70120000 	andsvc	r0, r2, r0
     360:	13000003 	movwne	r0, #3
     364:	00000162 	andeq	r0, r0, r2, ror #2
     368:	70161202 	andsvc	r1, r6, r2, lsl #4
     36c:	00000000 	andeq	r0, r0, r0
     370:	000c7a10 	andeq	r7, ip, r0, lsl sl
     374:	000c8608 	andeq	r8, ip, r8, lsl #12
     378:	00039208 	andeq	r9, r3, r8, lsl #4
     37c:	01621100 	cmneq	r2, r0, lsl #2
     380:	12020000 	andne	r0, r2, #0
     384:	00007029 	andeq	r7, r0, r9, lsr #32
     388:	00006800 	andeq	r6, r0, r0, lsl #16
     38c:	00006600 	andeq	r6, r0, r0, lsl #12
     390:	a4120000 	ldrge	r0, [r2], #-0
     394:	13000003 	movwne	r0, #3
     398:	00000162 	andeq	r0, r0, r2, ror #2
     39c:	70291202 	eorvc	r1, r9, r2, lsl #4
     3a0:	00000000 	andeq	r0, r0, r0
     3a4:	00044d14 	andeq	r4, r4, r4, lsl sp
     3a8:	000c8a00 	andeq	r8, ip, r0, lsl #20
     3ac:	0c8a0108 	stfeqs	f0, [sl], {8}
     3b0:	0c8c0800 	stceq	8, cr0, [ip], {0}
     3b4:	16020800 	strne	r0, [r2], -r0, lsl #16
     3b8:	0c561503 	cfldr64eq	mvdx1, [r6], {3}
     3bc:	04240800 	strteq	r0, [r4], #-2048	; 0xfffff800
     3c0:	8a150000 	bhi	5403c8 <__Stack_Size+0x53ffc8>
     3c4:	b108000c 	tstlt	r8, ip
     3c8:	15000004 	strne	r0, [r0, #-4]
     3cc:	08000c90 	stmdaeq	r0, {r4, r7, sl, fp}
     3d0:	000004bf 			; <UNDEFINED> instruction: 0x000004bf
     3d4:	f9011600 			; <UNDEFINED> instruction: 0xf9011600
     3d8:	02000001 	andeq	r0, r0, #1
     3dc:	d001060a 	andle	r0, r1, sl, lsl #12
     3e0:	dc080001 	stcle	0, cr0, [r8], {1}
     3e4:	02080001 	andeq	r0, r8, #1
     3e8:	0401007d 	streq	r0, [r1], #-125	; 0xffffff83
     3ec:	17000004 	strne	r0, [r0, -r4]
     3f0:	00000186 	andeq	r0, r0, r6, lsl #3
     3f4:	70150a02 	andsvc	r0, r5, r2, lsl #20
     3f8:	81000000 	mrshi	r0, (UNDEF: 0)
     3fc:	7b000000 	blvc	404 <__Stack_Size+0x4>
     400:	00000000 	andeq	r0, r0, r0
     404:	018b0118 	orreq	r0, fp, r8, lsl r1
     408:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
     40c:	01ce011c 	biceq	r0, lr, ip, lsl r1
     410:	01d00800 	bicseq	r0, r0, r0, lsl #16
     414:	7d020800 	stcvc	8, cr0, [r2, #-0]
     418:	01190100 	tsteq	r9, r0, lsl #2
     41c:	0000065e 	andeq	r0, r0, lr, asr r6
     420:	011c0702 	tsteq	ip, r2, lsl #14
     424:	00d5011a 	sbcseq	r0, r5, sl, lsl r1
     428:	0d010000 	stceq	0, cr0, [r1, #-0]
     42c:	00003008 	andeq	r3, r0, r8
     430:	044d0100 	strbeq	r0, [sp], #-256	; 0xffffff00
     434:	691b0000 	ldmdbvs	fp, {}	; <UNPREDICTABLE>
     438:	070e0100 	streq	r0, [lr, -r0, lsl #2]
     43c:	0000008f 	andeq	r0, r0, pc, lsl #1
     440:	706d741b 	rsbvc	r7, sp, fp, lsl r4
     444:	0c0f0100 	stfeqs	f0, [pc], {-0}
     448:	00000070 	andeq	r0, r0, r0, ror r0
     44c:	01ec1c00 	mvneq	r1, r0, lsl #24
     450:	b4030000 	strlt	r0, [r3], #-0
     454:	1d031604 	stcne	6, cr1, [r3, #-16]
     458:	00000424 	andeq	r0, r0, r4, lsr #8
     45c:	08000120 	stmdaeq	r0, {r5, r8}
     460:	080001cc 	stmdaeq	r0, {r2, r3, r6, r7, r8}
     464:	01007d02 	tsteq	r0, r2, lsl #26
     468:	000004b1 			; <UNDEFINED> instruction: 0x000004b1
     46c:	0004361e 	andeq	r3, r4, lr, lsl r6
     470:	0000b600 	andeq	fp, r0, r0, lsl #12
     474:	0000ac00 	andeq	sl, r0, r0, lsl #24
     478:	04401f00 	strbeq	r1, [r0], #-3840	; 0xfffff100
     47c:	24200000 	strtcs	r0, [r0], #-0
     480:	72000004 	andvc	r0, r0, #4
     484:	02080001 	andeq	r0, r8, #1
     488:	00000000 	andeq	r0, r0, r0
     48c:	21080d01 	tstcs	r8, r1, lsl #26
     490:	00000000 	andeq	r0, r0, r0
     494:	0004361e 	andeq	r3, r4, lr, lsl r6
     498:	00011f00 	andeq	r1, r1, r0, lsl #30
     49c:	00010b00 	andeq	r0, r1, r0, lsl #22
     4a0:	04401e00 	strbeq	r1, [r0], #-3584	; 0xfffff200
     4a4:	01dc0000 	bicseq	r0, ip, r0
     4a8:	01c40000 	biceq	r0, r4, r0
     4ac:	00000000 	andeq	r0, r0, r0
     4b0:	01012200 	mrseq	r2, R9_usr
     4b4:	000000c6 	andeq	r0, r0, r6, asr #1
     4b8:	000000c6 	andeq	r0, r0, r6, asr #1
     4bc:	22062407 	andcs	r2, r6, #117440512	; 0x7000000
     4c0:	00ab0101 	adceq	r0, fp, r1, lsl #2
     4c4:	00ab0000 	adceq	r0, fp, r0
     4c8:	42070000 	andmi	r0, r7, #0
     4cc:	12cd0006 	sbcne	r0, sp, #6
     4d0:	00020000 	andeq	r0, r2, r0
     4d4:	00000217 	andeq	r0, r0, r7, lsl r2
     4d8:	00180104 	andseq	r0, r8, r4, lsl #2
     4dc:	690c0000 	stmdbvs	ip, {}	; <UNPREDICTABLE>
     4e0:	ff000005 			; <UNDEFINED> instruction: 0xff000005
     4e4:	dc000001 	stcle	0, cr0, [r0], {1}
     4e8:	04080001 	streq	r0, [r8], #-1
     4ec:	5f080008 	svcpl	0x00080008
     4f0:	02000002 	andeq	r0, r0, #2
     4f4:	012f0601 			; <UNDEFINED> instruction: 0x012f0601
     4f8:	02020000 	andeq	r0, r2, #0
     4fc:	0001cd05 	andeq	ip, r1, r5, lsl #26
     500:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
     504:	0000019b 	muleq	r0, fp, r1
     508:	96050802 	strls	r0, [r5], -r2, lsl #16
     50c:	03000001 	movweq	r0, #1
     510:	0000017e 	andeq	r0, r0, lr, ror r1
     514:	57182e04 	ldrpl	r2, [r8, -r4, lsl #28]
     518:	04000000 	streq	r0, [r0], #-0
     51c:	00000041 	andeq	r0, r0, r1, asr #32
     520:	00004105 	andeq	r4, r0, r5, lsl #2
     524:	08010200 	stmdaeq	r1, {r9}
     528:	0000012d 	andeq	r0, r0, sp, lsr #2
     52c:	0005a303 	andeq	sl, r5, r3, lsl #6
     530:	19310400 	ldmdbne	r1!, {sl}
     534:	0000006f 	andeq	r0, r0, pc, rrx
     538:	00005e04 	andeq	r5, r0, r4, lsl #28
     53c:	07020200 	streq	r0, [r2, -r0, lsl #4]
     540:	00000105 	andeq	r0, r0, r5, lsl #2
     544:	0001e303 	andeq	lr, r1, r3, lsl #6
     548:	19340400 	ldmdbne	r4!, {sl}
     54c:	00000087 	andeq	r0, r0, r7, lsl #1
     550:	00007604 	andeq	r7, r0, r4, lsl #12
     554:	07040200 	streq	r0, [r4, -r0, lsl #4]
     558:	0000016c 	andeq	r0, r0, ip, ror #2
     55c:	67070802 	strvs	r0, [r7, -r2, lsl #16]
     560:	06000001 	streq	r0, [r0], -r1
     564:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
     568:	95040074 	strls	r0, [r4, #-116]	; 0xffffff8c
     56c:	02000000 	andeq	r0, r0, #0
     570:	01710704 	cmneq	r1, r4, lsl #14
     574:	36030000 	strcc	r0, [r3], -r0
     578:	03000005 	movweq	r0, #5
     57c:	00b40f1a 	adcseq	r0, r4, sl, lsl pc
     580:	04070000 	streq	r0, [r7], #-0
     584:	000000ba 	strheq	r0, [r0], -sl
     588:	00c60108 	sbceq	r0, r6, r8, lsl #2
     58c:	41090000 	mrsmi	r0, (UNDEF: 9)
     590:	00000000 	andeq	r0, r0, r0
     594:	1b03080a 	blne	c25c4 <__Stack_Size+0xc21c4>
     598:	00011b09 	andeq	r1, r1, r9, lsl #22
     59c:	02a70b00 	adceq	r0, r7, #0, 22
     5a0:	1c030000 	stcne	0, cr0, [r3], {-0}
     5a4:	0000410b 	andeq	r4, r0, fp, lsl #2
     5a8:	00230200 	eoreq	r0, r3, r0, lsl #4
     5ac:	0006a20b 	andeq	sl, r6, fp, lsl #4
     5b0:	0b1d0300 	bleq	7411b8 <__Stack_Size+0x740db8>
     5b4:	00000041 	andeq	r0, r0, r1, asr #32
     5b8:	0b012302 	bleq	491c8 <__Stack_Size+0x48dc8>
     5bc:	0000032a 	andeq	r0, r0, sl, lsr #6
     5c0:	5e0c1e03 	cdppl	14, 0, cr1, cr12, cr3, {0}
     5c4:	02000000 	andeq	r0, r0, #0
     5c8:	430b0223 	movwmi	r0, #45603	; 0xb223
     5cc:	03000002 	movweq	r0, #2
     5d0:	005e0c1f 	subseq	r0, lr, pc, lsl ip
     5d4:	23020000 	movwcs	r0, #8192	; 0x2000
     5d8:	06780b04 	ldrbteq	r0, [r8], -r4, lsl #22
     5dc:	20030000 	andcs	r0, r3, r0
     5e0:	00005e0c 	andeq	r5, r0, ip, lsl #28
     5e4:	06230200 	strteq	r0, [r3], -r0, lsl #4
     5e8:	07150300 	ldreq	r0, [r5, -r0, lsl #6]
     5ec:	21030000 	mrscs	r0, (UNDEF: 3)
     5f0:	0000c602 	andeq	ip, r0, r2, lsl #12
     5f4:	01050c00 	tsteq	r5, r0, lsl #24
     5f8:	00000025 	andeq	r0, r0, r5, lsr #32
     5fc:	6e015805 	cdpvs	8, 0, cr5, cr1, cr5, {0}
     600:	0d000002 	stceq	0, cr0, [r0, #-8]
     604:	00000664 	andeq	r0, r0, r4, ror #12
     608:	07f60d72 			; <UNDEFINED> instruction: 0x07f60d72
     60c:	0d730000 	ldcleq	0, cr0, [r3, #-0]
     610:	00000331 	andeq	r0, r0, r1, lsr r3
     614:	05050d74 	streq	r0, [r5, #-3444]	; 0xfffff28c
     618:	0d750000 	ldcleq	0, cr0, [r5, #-0]
     61c:	0000074f 	andeq	r0, r0, pc, asr #14
     620:	07960d76 			; <UNDEFINED> instruction: 0x07960d76
     624:	0d7b0000 	ldcleq	0, cr0, [fp, #-0]
     628:	0000073d 	andeq	r0, r0, sp, lsr r7
     62c:	03150d7c 	tsteq	r5, #124, 26	; 0x1f00
     630:	0d7e0000 	ldcleq	0, cr0, [lr, #-0]
     634:	000006d9 	ldrdeq	r0, [r0], -r9
     638:	04e10e7f 	strbteq	r0, [r1], #3711	; 0xe7f
     63c:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
     640:	0000052d 	andeq	r0, r0, sp, lsr #10
     644:	08410e01 	stmdaeq	r1, {r0, r9, sl, fp}^
     648:	0e020000 	cdpeq	0, 0, cr0, cr2, cr0, {0}
     64c:	000005da 	ldrdeq	r0, [r0], -sl
     650:	02c20e03 	sbceq	r0, r2, #3, 28	; 0x30
     654:	0e040000 	cdpeq	0, 0, cr0, cr4, cr0, {0}
     658:	00000321 	andeq	r0, r0, r1, lsr #6
     65c:	02d70e05 	sbcseq	r0, r7, #5, 28	; 0x50
     660:	0e060000 	cdpeq	0, 0, cr0, cr6, cr0, {0}
     664:	00000697 	muleq	r0, r7, r6
     668:	04660e07 	strbteq	r0, [r6], #-3591	; 0xfffff1f9
     66c:	0e080000 	cdpeq	0, 0, cr0, cr8, cr0, {0}
     670:	000007e4 	andeq	r0, r0, r4, ror #15
     674:	05130e09 	ldreq	r0, [r3, #-3593]	; 0xfffff1f7
     678:	0e0a0000 	cdpeq	0, 0, cr0, cr10, cr0, {0}
     67c:	000004ba 			; <UNDEFINED> instruction: 0x000004ba
     680:	02880e0b 	addeq	r0, r8, #11, 28	; 0xb0
     684:	0e0c0000 	cdpeq	0, 0, cr0, cr12, cr0, {0}
     688:	00000556 	andeq	r0, r0, r6, asr r5
     68c:	03a00e0d 	moveq	r0, #13, 28	; 0xd0
     690:	0e0e0000 	cdpeq	0, 0, cr0, cr14, cr0, {0}
     694:	000007c2 	andeq	r0, r0, r2, asr #15
     698:	04900e0f 	ldreq	r0, [r0], #3599	; 0xe0f
     69c:	0e100000 	cdpeq	0, 1, cr0, cr0, cr0, {0}
     6a0:	0000025e 	andeq	r0, r0, lr, asr r2
     6a4:	081f0e11 	ldmdaeq	pc, {r0, r4, r9, sl, fp}	; <UNPREDICTABLE>
     6a8:	0e120000 	cdpeq	0, 1, cr0, cr2, cr0, {0}
     6ac:	00000404 	andeq	r0, r0, r4, lsl #8
     6b0:	022e0e13 	eoreq	r0, lr, #304	; 0x130
     6b4:	0e140000 	cdpeq	0, 1, cr0, cr4, cr0, {0}
     6b8:	000003d4 	ldrdeq	r0, [r0], -r4
     6bc:	02500e15 	subseq	r0, r0, #336	; 0x150
     6c0:	0e160000 	cdpeq	0, 1, cr0, cr6, cr0, {0}
     6c4:	00000789 	andeq	r0, r0, r9, lsl #15
     6c8:	03710e17 	cmneq	r1, #368	; 0x170
     6cc:	0e180000 	cdpeq	0, 1, cr0, cr8, cr0, {0}
     6d0:	000005b9 			; <UNDEFINED> instruction: 0x000005b9
     6d4:	06ba0e19 	ssateq	r0, #27, r9, lsl #28
     6d8:	0e1a0000 	cdpeq	0, 1, cr0, cr10, cr0, {0}
     6dc:	00000680 	andeq	r0, r0, r0, lsl #13
     6e0:	06f40e1b 	usateq	r0, #20, fp, lsl #28
     6e4:	0e1c0000 	cdpeq	0, 1, cr0, cr12, cr0, {0}
     6e8:	000004b0 			; <UNDEFINED> instruction: 0x000004b0
     6ec:	027e0e1d 	rsbseq	r0, lr, #464	; 0x1d0
     6f0:	0e1e0000 	cdpeq	0, 1, cr0, cr14, cr0, {0}
     6f4:	00000577 	andeq	r0, r0, r7, ror r5
     6f8:	06cc0e1f 			; <UNDEFINED> instruction: 0x06cc0e1f
     6fc:	0e200000 	cdpeq	0, 2, cr0, cr0, cr0, {0}
     700:	00000471 	andeq	r0, r0, r1, ror r4
     704:	02710e21 	rsbseq	r0, r1, #528	; 0x210
     708:	0e220000 	cdpeq	0, 2, cr0, cr2, cr0, {0}
     70c:	00000388 	andeq	r0, r0, r8, lsl #7
     710:	07a70e23 	streq	r0, [r7, r3, lsr #28]!
     714:	0e240000 	cdpeq	0, 2, cr0, cr4, cr0, {0}
     718:	0000064c 	andeq	r0, r0, ip, asr #12
     71c:	042b0e25 	strteq	r0, [fp], #-3621	; 0xfffff1db
     720:	0e260000 	cdpeq	0, 2, cr0, cr6, cr0, {0}
     724:	00000835 	andeq	r0, r0, r5, lsr r8
     728:	02fd0e27 	rscseq	r0, sp, #624	; 0x270
     72c:	0e280000 	cdpeq	0, 2, cr0, cr8, cr0, {0}
     730:	000005cb 	andeq	r0, r0, fp, asr #11
     734:	04d20e29 	ldrbeq	r0, [r2], #3625	; 0xe29
     738:	002a0000 	eoreq	r0, sl, r0
     73c:	00041803 	andeq	r1, r4, r3, lsl #16
     740:	03900500 	orrseq	r0, r0, #0, 10
     744:	00000127 	andeq	r0, r0, r7, lsr #2
     748:	020e040f 	andeq	r0, lr, #251658240	; 0xf000000
     74c:	03520984 	cmpeq	r2, #132, 18	; 0x210000
     750:	560b0000 	strpl	r0, [fp], -r0
     754:	02000003 	andeq	r0, r0, #3
     758:	03621186 	cmneq	r2, #-2147483615	; 0x80000021
     75c:	23020000 	movwcs	r0, #8192	; 0x2000
     760:	05e80b00 	strbeq	r0, [r8, #2816]!	; 0xb00
     764:	87020000 	strhi	r0, [r2, -r0]
     768:	00036711 	andeq	r6, r3, r1, lsl r7
     76c:	20230200 	eorcs	r0, r3, r0, lsl #4
     770:	0007a20b 	andeq	sl, r7, fp, lsl #4
     774:	11880200 	orrne	r0, r8, r0, lsl #4
     778:	00000362 	andeq	r0, r0, r2, ror #6
     77c:	01802303 	orreq	r2, r0, r3, lsl #6
     780:	00037f0b 	andeq	r7, r3, fp, lsl #30
     784:	11890200 	orrne	r0, r9, r0, lsl #4
     788:	00000367 	andeq	r0, r0, r7, ror #6
     78c:	01a02303 	lsleq	r2, r3, #6
     790:	0008050b 	andeq	r0, r8, fp, lsl #10
     794:	118a0200 	orrne	r0, sl, r0, lsl #4
     798:	00000362 	andeq	r0, r0, r2, ror #6
     79c:	02802303 	addeq	r2, r0, #201326592	; 0xc000000
     7a0:	0005fc0b 	andeq	pc, r5, fp, lsl #24
     7a4:	118b0200 	orrne	r0, fp, r0, lsl #4
     7a8:	00000367 	andeq	r0, r0, r7, ror #6
     7ac:	02a02303 	adceq	r2, r0, #201326592	; 0xc000000
     7b0:	00054c0b 	andeq	r4, r5, fp, lsl #24
     7b4:	118c0200 	orrne	r0, ip, r0, lsl #4
     7b8:	00000362 	andeq	r0, r0, r2, ror #6
     7bc:	03802303 	orreq	r2, r0, #201326592	; 0xc000000
     7c0:	0006060b 	andeq	r0, r6, fp, lsl #12
     7c4:	118d0200 	orrne	r0, sp, r0, lsl #4
     7c8:	00000367 	andeq	r0, r0, r7, ror #6
     7cc:	03a02303 	moveq	r2, #201326592	; 0xc000000
     7d0:	0007b10b 	andeq	fp, r7, fp, lsl #2
     7d4:	118e0200 	orrne	r0, lr, r0, lsl #4
     7d8:	00000362 	andeq	r0, r0, r2, ror #6
     7dc:	04802303 	streq	r2, [r0], #771	; 0x303
     7e0:	0006100b 	andeq	r1, r6, fp
     7e4:	118f0200 	orrne	r0, pc, r0, lsl #4
     7e8:	00000377 	andeq	r0, r0, r7, ror r3
     7ec:	04a02303 	strteq	r2, [r0], #771	; 0x303
     7f0:	00504910 	subseq	r4, r0, r0, lsl r9
     7f4:	97119002 	ldrls	r9, [r1, -r2]
     7f8:	03000003 	movweq	r0, #3
     7fc:	0b068023 	bleq	1a0890 <__Stack_Size+0x1a0490>
     800:	0000061a 	andeq	r0, r0, sl, lsl r6
     804:	9c119102 	ldflsd	f1, [r1], {2}
     808:	03000003 	movweq	r0, #3
     80c:	0b07f023 	bleq	1fc8a0 <__Stack_Size+0x1fc4a0>
     810:	000005c6 	andeq	r0, r0, r6, asr #11
     814:	82119202 	andshi	r9, r1, #536870912	; 0x20000000
     818:	03000000 	movweq	r0, #0
     81c:	001c8023 	andseq	r8, ip, r3, lsr #32
     820:	00008211 	andeq	r8, r0, r1, lsl r2
     824:	00036200 	andeq	r6, r3, r0, lsl #4
     828:	00a11200 	adceq	r1, r1, r0, lsl #4
     82c:	00070000 	andeq	r0, r7, r0
     830:	00035204 	andeq	r5, r3, r4, lsl #4
     834:	00761100 	rsbseq	r1, r6, r0, lsl #2
     838:	03770000 	cmneq	r7, #0
     83c:	a1120000 	tstge	r2, r0
     840:	17000000 	strne	r0, [r0, -r0]
     844:	00761100 	rsbseq	r1, r6, r0, lsl #2
     848:	03870000 	orreq	r0, r7, #0
     84c:	a1120000 	tstge	r2, r0
     850:	37000000 	strcc	r0, [r0, -r0]
     854:	004d1100 	subeq	r1, sp, r0, lsl #2
     858:	03970000 	orrseq	r0, r7, #0
     85c:	a1120000 	tstge	r2, r0
     860:	ef000000 	svc	0x00000000
     864:	03870400 	orreq	r0, r7, #0, 8
     868:	76110000 	ldrvc	r0, [r1], -r0
     86c:	ad000000 	stcge	0, cr0, [r0, #-0]
     870:	13000003 	movwne	r0, #3
     874:	000000a1 	andeq	r0, r0, r1, lsr #1
     878:	03000283 	movweq	r0, #643	; 0x283
     87c:	000006ab 	andeq	r0, r0, fp, lsr #13
     880:	7a049302 	bvc	125490 <__Stack_Size+0x125090>
     884:	14000002 	strne	r0, [r0], #-2
     888:	00000118 	andeq	r0, r0, r8, lsl r1
     88c:	1506ce02 	strne	ip, [r6, #-3586]	; 0xfffff1fe
     890:	0000009c 	muleq	r0, ip, r0
     894:	a4150101 	ldrge	r0, [r5], #-257	; 0xfffffeff
     898:	06000001 	streq	r0, [r0], -r1
     89c:	00761145 	rsbseq	r1, r6, r5, asr #2
     8a0:	01010000 	mrseq	r0, (UNDEF: 1)
     8a4:	00005211 	andeq	r5, r0, r1, lsl r2
     8a8:	0003e600 	andeq	lr, r3, r0, lsl #12
     8ac:	00a11200 	adceq	r1, r1, r0, lsl #4
     8b0:	000f0000 	andeq	r0, pc, r0
     8b4:	0003d605 	andeq	sp, r3, r5, lsl #12
     8b8:	00f71500 	rscseq	r1, r7, r0, lsl #10
     8bc:	46060000 	strmi	r0, [r6], -r0
     8c0:	0003e617 	andeq	lr, r3, r7, lsl r6
     8c4:	11010100 	mrsne	r0, (UNDEF: 17)
     8c8:	00000052 	andeq	r0, r0, r2, asr r0
     8cc:	00000409 	andeq	r0, r0, r9, lsl #8
     8d0:	0000a112 	andeq	sl, r0, r2, lsl r1
     8d4:	05000700 	streq	r0, [r0, #-1792]	; 0xfffff900
     8d8:	000003f9 	strdeq	r0, [r0], -r9
     8dc:	0001bf15 	andeq	fp, r1, r5, lsl pc
     8e0:	17470600 	strbne	r0, [r7, -r0, lsl #12]
     8e4:	00000409 	andeq	r0, r0, r9, lsl #8
     8e8:	1c160101 	ldfnes	f0, [r6], {1}
     8ec:	09017905 	stmdbeq	r1, {r0, r2, r8, fp, ip, sp, lr}
     8f0:	00000497 	muleq	r0, r7, r4
     8f4:	4c524317 	mrrcmi	3, 1, r4, r2, cr7
     8f8:	017b0500 	cmneq	fp, r0, lsl #10
     8fc:	00008211 	andeq	r8, r0, r1, lsl r2
     900:	00230200 	eoreq	r0, r3, r0, lsl #4
     904:	48524317 	ldmdami	r2, {r0, r1, r2, r4, r8, r9, lr}^
     908:	017c0500 	cmneq	ip, r0, lsl #10
     90c:	00008211 	andeq	r8, r0, r1, lsl r2
     910:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     914:	52444917 	subpl	r4, r4, #376832	; 0x5c000
     918:	017d0500 	cmneq	sp, r0, lsl #10
     91c:	00008211 	andeq	r8, r0, r1, lsl r2
     920:	08230200 	stmdaeq	r3!, {r9}
     924:	52444f17 	subpl	r4, r4, #23, 30	; 0x5c
     928:	017e0500 	cmneq	lr, r0, lsl #10
     92c:	00008211 	andeq	r8, r0, r1, lsl r2
     930:	0c230200 	sfmeq	f0, 4, [r3], #-0
     934:	0000ba18 	andeq	fp, r0, r8, lsl sl
     938:	017f0500 	cmneq	pc, r0, lsl #10
     93c:	00008211 	andeq	r8, r0, r1, lsl r2
     940:	10230200 	eorne	r0, r3, r0, lsl #4
     944:	52524217 	subspl	r4, r2, #1879048193	; 0x70000001
     948:	01800500 	orreq	r0, r0, r0, lsl #10
     94c:	00008211 	andeq	r8, r0, r1, lsl r2
     950:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     954:	00022918 	andeq	r2, r2, r8, lsl r9
     958:	01810500 	orreq	r0, r1, r0, lsl #10
     95c:	00008211 	andeq	r8, r0, r1, lsl r2
     960:	18230200 	stmdane	r3!, {r9}
     964:	00e11900 	rsceq	r1, r1, r0, lsl #18
     968:	82050000 	andhi	r0, r5, #0
     96c:	041c0301 	ldreq	r0, [ip], #-769	; 0xfffffcff
     970:	28160000 	ldmdacs	r6, {}	; <UNPREDICTABLE>
     974:	0901bb05 	stmdbeq	r1, {r0, r2, r8, r9, fp, ip, sp, pc}
     978:	0000054e 	andeq	r0, r0, lr, asr #10
     97c:	00524317 	subseq	r4, r2, r7, lsl r3
     980:	1101bd05 	tstne	r1, r5, lsl #26
     984:	00000082 	andeq	r0, r0, r2, lsl #1
     988:	18002302 	stmdane	r0, {r1, r8, r9, sp}
     98c:	00000005 	andeq	r0, r0, r5
     990:	1101be05 	tstne	r1, r5, lsl #28
     994:	00000082 	andeq	r0, r0, r2, lsl #1
     998:	17042302 	strne	r2, [r4, -r2, lsl #6]
     99c:	00524943 	subseq	r4, r2, r3, asr #18
     9a0:	1101bf05 	tstne	r1, r5, lsl #30
     9a4:	00000082 	andeq	r0, r0, r2, lsl #1
     9a8:	18082302 	stmdane	r8, {r1, r8, r9, sp}
     9ac:	00000159 	andeq	r0, r0, r9, asr r1
     9b0:	1101c005 	tstne	r1, r5
     9b4:	00000082 	andeq	r0, r0, r2, lsl #1
     9b8:	180c2302 	stmdane	ip, {r1, r8, r9, sp}
     9bc:	000000ee 	andeq	r0, r0, lr, ror #1
     9c0:	1101c105 	tstne	r1, r5, lsl #2
     9c4:	00000082 	andeq	r0, r0, r2, lsl #1
     9c8:	18102302 	ldmdane	r0, {r1, r8, r9, sp}
     9cc:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     9d0:	1101c205 	tstne	r1, r5, lsl #4
     9d4:	00000082 	andeq	r0, r0, r2, lsl #1
     9d8:	18142302 	ldmdane	r4, {r1, r8, r9, sp}
     9dc:	00000144 	andeq	r0, r0, r4, asr #2
     9e0:	1101c305 	tstne	r1, r5, lsl #6
     9e4:	00000082 	andeq	r0, r0, r2, lsl #1
     9e8:	18182302 	ldmdane	r8, {r1, r8, r9, sp}
     9ec:	00000151 	andeq	r0, r0, r1, asr r1
     9f0:	1101c405 	tstne	r1, r5, lsl #8
     9f4:	00000082 	andeq	r0, r0, r2, lsl #1
     9f8:	181c2302 	ldmdane	ip, {r1, r8, r9, sp}
     9fc:	00000000 	andeq	r0, r0, r0
     a00:	1101c505 	tstne	r1, r5, lsl #10
     a04:	00000082 	andeq	r0, r0, r2, lsl #1
     a08:	17202302 	strne	r2, [r0, -r2, lsl #6]!
     a0c:	00525343 	subseq	r5, r2, r3, asr #6
     a10:	1101c605 	tstne	r1, r5, lsl #12
     a14:	00000082 	andeq	r0, r0, r2, lsl #1
     a18:	00242302 	eoreq	r2, r4, r2, lsl #6
     a1c:	0001d719 	andeq	sp, r1, r9, lsl r7
     a20:	01c90500 	biceq	r0, r9, r0, lsl #10
     a24:	0004a403 	andeq	sl, r4, r3, lsl #8
     a28:	05541600 	ldrbeq	r1, [r4, #-1536]	; 0xfffffa00
     a2c:	06090239 			; <UNDEFINED> instruction: 0x06090239
     a30:	18000007 	stmdane	r0, {r0, r1, r2}
     a34:	00000445 	andeq	r0, r0, r5, asr #8
     a38:	11023b05 	tstne	r2, r5, lsl #22
     a3c:	0000006a 	andeq	r0, r0, sl, rrx
     a40:	18002302 	stmdane	r0, {r1, r8, r9, sp}
     a44:	000005e8 	andeq	r0, r0, r8, ror #11
     a48:	11023c05 	tstne	r2, r5, lsl #24
     a4c:	0000006a 	andeq	r0, r0, sl, rrx
     a50:	18022302 	stmdane	r2, {r1, r8, r9, sp}
     a54:	0000047e 	andeq	r0, r0, lr, ror r4
     a58:	11023d05 	tstne	r2, r5, lsl #26
     a5c:	0000006a 	andeq	r0, r0, sl, rrx
     a60:	18042302 	stmdane	r4, {r1, r8, r9, sp}
     a64:	000005f2 	strdeq	r0, [r0], -r2
     a68:	11023e05 	tstne	r2, r5, lsl #28
     a6c:	0000006a 	andeq	r0, r0, sl, rrx
     a70:	18062302 	stmdane	r6, {r1, r8, r9, sp}
     a74:	000004cd 	andeq	r0, r0, sp, asr #9
     a78:	11023f05 	tstne	r2, r5, lsl #30
     a7c:	0000006a 	andeq	r0, r0, sl, rrx
     a80:	18082302 	stmdane	r8, {r1, r8, r9, sp}
     a84:	000005fc 	strdeq	r0, [r0], -ip
     a88:	11024005 	tstne	r2, r5
     a8c:	0000006a 	andeq	r0, r0, sl, rrx
     a90:	180a2302 	stmdane	sl, {r1, r8, r9, sp}
     a94:	00000500 	andeq	r0, r0, r0, lsl #10
     a98:	11024105 	tstne	r2, r5, lsl #2
     a9c:	0000006a 	andeq	r0, r0, sl, rrx
     aa0:	180c2302 	stmdane	ip, {r1, r8, r9, sp}
     aa4:	00000606 	andeq	r0, r0, r6, lsl #12
     aa8:	11024205 	tstne	r2, r5, lsl #4
     aac:	0000006a 	andeq	r0, r0, sl, rrx
     ab0:	180e2302 	stmdane	lr, {r1, r8, r9, sp}
     ab4:	00000551 	andeq	r0, r0, r1, asr r5
     ab8:	11024305 	tstne	r2, r5, lsl #6
     abc:	0000006a 	andeq	r0, r0, sl, rrx
     ac0:	18102302 	ldmdane	r0, {r1, r8, r9, sp}
     ac4:	00000610 	andeq	r0, r0, r0, lsl r6
     ac8:	11024405 	tstne	r2, r5, lsl #8
     acc:	0000006a 	andeq	r0, r0, sl, rrx
     ad0:	18122302 	ldmdane	r2, {r1, r8, r9, sp}
     ad4:	000005e3 	andeq	r0, r0, r3, ror #11
     ad8:	11024505 	tstne	r2, r5, lsl #10
     adc:	0000006a 	andeq	r0, r0, sl, rrx
     ae0:	18142302 	ldmdane	r4, {r1, r8, r9, sp}
     ae4:	0000061a 	andeq	r0, r0, sl, lsl r6
     ae8:	11024605 	tstne	r2, r5, lsl #12
     aec:	0000006a 	andeq	r0, r0, sl, rrx
     af0:	18162302 	ldmdane	r6, {r1, r8, r9, sp}
     af4:	0000068d 	andeq	r0, r0, sp, lsl #13
     af8:	11024705 	tstne	r2, r5, lsl #14
     afc:	0000006a 	andeq	r0, r0, sl, rrx
     b00:	18182302 	ldmdane	r8, {r1, r8, r9, sp}
     b04:	00000624 	andeq	r0, r0, r4, lsr #12
     b08:	11024805 	tstne	r2, r5, lsl #16
     b0c:	0000006a 	andeq	r0, r0, sl, rrx
     b10:	181a2302 	ldmdane	sl, {r1, r8, r9, sp}
     b14:	00000710 	andeq	r0, r0, r0, lsl r7
     b18:	11024905 	tstne	r2, r5, lsl #18
     b1c:	0000006a 	andeq	r0, r0, sl, rrx
     b20:	181c2302 	ldmdane	ip, {r1, r8, r9, sp}
     b24:	0000082b 	andeq	r0, r0, fp, lsr #16
     b28:	11024a05 	tstne	r2, r5, lsl #20
     b2c:	00000716 	andeq	r0, r0, r6, lsl r7
     b30:	181e2302 	ldmdane	lr, {r1, r8, r9, sp}
     b34:	000006b5 			; <UNDEFINED> instruction: 0x000006b5
     b38:	11024b05 	tstne	r2, r5, lsl #22
     b3c:	0000006a 	andeq	r0, r0, sl, rrx
     b40:	18402302 	stmdane	r0, {r1, r8, r9, sp}^
     b44:	0000062e 	andeq	r0, r0, lr, lsr #12
     b48:	11024c05 	tstne	r2, r5, lsl #24
     b4c:	0000006a 	andeq	r0, r0, sl, rrx
     b50:	18422302 	stmdane	r2, {r1, r8, r9, sp}^
     b54:	00000351 	andeq	r0, r0, r1, asr r3
     b58:	11024d05 	tstne	r2, r5, lsl #26
     b5c:	0000006a 	andeq	r0, r0, sl, rrx
     b60:	18442302 	stmdane	r4, {r1, r8, r9, sp}^
     b64:	00000638 	andeq	r0, r0, r8, lsr r6
     b68:	11024e05 	tstne	r2, r5, lsl #28
     b6c:	0000006a 	andeq	r0, r0, sl, rrx
     b70:	17462302 	strbne	r2, [r6, -r2, lsl #6]
     b74:	00524e46 	subseq	r4, r2, r6, asr #28
     b78:	11024f05 	tstne	r2, r5, lsl #30
     b7c:	0000006a 	andeq	r0, r0, sl, rrx
     b80:	18482302 	stmdane	r8, {r1, r8, r9, sp}^
     b84:	00000642 	andeq	r0, r0, r2, asr #12
     b88:	11025005 	tstne	r2, r5
     b8c:	0000006a 	andeq	r0, r0, sl, rrx
     b90:	184a2302 	stmdane	sl, {r1, r8, r9, sp}^
     b94:	000003ce 	andeq	r0, r0, lr, asr #7
     b98:	11025105 	tstne	r2, r5, lsl #2
     b9c:	0000006a 	andeq	r0, r0, sl, rrx
     ba0:	184c2302 	stmdane	ip, {r1, r8, r9, sp}^
     ba4:	000003e2 	andeq	r0, r0, r2, ror #7
     ba8:	11025205 	tstne	r2, r5, lsl #4
     bac:	0000006a 	andeq	r0, r0, sl, rrx
     bb0:	184e2302 	stmdane	lr, {r1, r8, r9, sp}^
     bb4:	000007d5 	ldrdeq	r0, [r0], -r5
     bb8:	11025305 	tstne	r2, r5, lsl #6
     bbc:	0000006a 	andeq	r0, r0, sl, rrx
     bc0:	18502302 	ldmdane	r0, {r1, r8, r9, sp}^
     bc4:	0000084d 	andeq	r0, r0, sp, asr #16
     bc8:	11025405 	tstne	r2, r5, lsl #8
     bcc:	0000006a 	andeq	r0, r0, sl, rrx
     bd0:	00522302 	subseq	r2, r2, r2, lsl #6
     bd4:	00006a11 	andeq	r6, r0, r1, lsl sl
     bd8:	00071600 	andeq	r1, r7, r0, lsl #12
     bdc:	00a11200 	adceq	r1, r1, r0, lsl #4
     be0:	00100000 	andseq	r0, r0, r0
     be4:	00070604 	andeq	r0, r7, r4, lsl #12
     be8:	03c21900 	biceq	r1, r2, #0, 18
     bec:	55050000 	strpl	r0, [r5, #-0]
     bf0:	055b0302 	ldrbeq	r0, [fp, #-770]	; 0xfffffcfe
     bf4:	040a0000 	streq	r0, [sl], #-0
     bf8:	68072301 	stmdavs	r7, {r0, r8, r9, sp}
     bfc:	1a000007 	bne	c20 <__Stack_Size+0x820>
     c00:	00000543 	andeq	r0, r0, r3, asr #10
     c04:	76122401 	ldrvc	r2, [r2], -r1, lsl #8
     c08:	04000000 	streq	r0, [r0], #-0
     c0c:	2302160a 	movwcs	r1, #9738	; 0x260a
     c10:	072f1a00 	streq	r1, [pc, -r0, lsl #20]!
     c14:	25010000 	strcs	r0, [r1, #-0]
     c18:	00007612 	andeq	r7, r0, r2, lsl r6
     c1c:	11050400 	tstne	r5, r0, lsl #8
     c20:	1a002302 	bne	9830 <__Stack_Size+0x9430>
     c24:	000005ac 	andeq	r0, r0, ip, lsr #11
     c28:	76122601 	ldrvc	r2, [r2], -r1, lsl #12
     c2c:	04000000 	streq	r0, [r0], #-0
     c30:	23021001 	movwcs	r1, #8193	; 0x2001
     c34:	041b0000 	ldreq	r0, [fp], #-0
     c38:	830e2101 	movwhi	r2, #57601	; 0xe101
     c3c:	1c000007 	stcne	0, cr0, [r0], {7}
     c40:	0000053f 	andeq	r0, r0, pc, lsr r5
     c44:	76102201 	ldrvc	r2, [r0], -r1, lsl #4
     c48:	1d000000 	stcne	0, cr0, [r0, #-0]
     c4c:	00000728 	andeq	r0, r0, r8, lsr #14
     c50:	07680400 	strbeq	r0, [r8, -r0, lsl #8]!
     c54:	040a0000 	streq	r0, [sl], #-0
     c58:	c8072c01 	stmdagt	r7, {r0, sl, fp, sp}
     c5c:	1a000007 	bne	c80 <__Stack_Size+0x880>
     c60:	0000080e 	andeq	r0, r0, lr, lsl #16
     c64:	76122d01 	ldrvc	r2, [r2], -r1, lsl #26
     c68:	04000000 	streq	r0, [r0], #-0
     c6c:	2302160a 	movwcs	r1, #9738	; 0x260a
     c70:	05841a00 	streq	r1, [r4, #2560]	; 0xa00
     c74:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
     c78:	00007612 	andeq	r7, r0, r2, lsl r6
     c7c:	11050400 	tstne	r5, r0, lsl #8
     c80:	1a002302 	bne	9890 <__Stack_Size+0x9490>
     c84:	0000075f 	andeq	r0, r0, pc, asr r7
     c88:	76122f01 	ldrvc	r2, [r2], -r1, lsl #30
     c8c:	04000000 	streq	r0, [r0], #-0
     c90:	23021001 	movwcs	r1, #8193	; 0x2001
     c94:	041b0000 	ldreq	r0, [fp], #-0
     c98:	e30e2a01 	movw	r2, #59905	; 0xea01
     c9c:	1c000007 	stcne	0, cr0, [r0], {7}
     ca0:	0000080a 	andeq	r0, r0, sl, lsl #16
     ca4:	76102b01 	ldrvc	r2, [r0], -r1, lsl #22
     ca8:	1d000000 	stcne	0, cr0, [r0, #-0]
     cac:	00000788 	andeq	r0, r0, r8, lsl #15
     cb0:	07c80400 	strbeq	r0, [r8, r0, lsl #8]
     cb4:	100a0000 	andne	r0, sl, r0
     cb8:	20091f01 	andcs	r1, r9, r1, lsl #30
     cbc:	0b000008 	bleq	ce4 <__Stack_Size+0x8e4>
     cc0:	000007b6 			; <UNDEFINED> instruction: 0x000007b6
     cc4:	82172001 	andshi	r2, r7, #1
     cc8:	02000000 	andeq	r0, r0, #0
     ccc:	831e0023 	tsthi	lr, #35	; 0x23
     cd0:	02000007 	andeq	r0, r0, #7
     cd4:	230b0423 	movwcs	r0, #46115	; 0xb423
     cd8:	01000007 	tsteq	r0, r7
     cdc:	00821729 	addeq	r1, r2, r9, lsr #14
     ce0:	23020000 	movwcs	r0, #8192	; 0x2000
     ce4:	07e31e08 	strbeq	r1, [r3, r8, lsl #28]!
     ce8:	23020000 	movwcs	r0, #8192	; 0x2000
     cec:	8303000c 	movwhi	r0, #12300	; 0x300c
     cf0:	01000004 	tsteq	r0, r4
     cf4:	07e80232 			; <UNDEFINED> instruction: 0x07e80232
     cf8:	a8110000 	ldmdage	r1, {}	; <UNPREDICTABLE>
     cfc:	3c000000 	stccc	0, cr0, [r0], {-0}
     d00:	12000008 	andne	r0, r0, #8
     d04:	000000a1 	andeq	r0, r0, r1, lsr #1
     d08:	6c1f0007 	ldcvs	0, cr0, [pc], {7}
     d0c:	01000007 	tsteq	r0, r7
     d10:	082c0a34 	stmdaeq	ip!, {r2, r4, r5, r9, fp}
     d14:	05010000 	streq	r0, [r1, #-0]
     d18:	00022403 	andeq	r2, r2, r3, lsl #8
     d1c:	04531f20 	ldrbeq	r1, [r3], #-3872	; 0xfffff0e0
     d20:	35010000 	strcc	r0, [r1, #-0]
     d24:	00082c0a 	andeq	r2, r8, sl, lsl #24
     d28:	03050100 	movweq	r0, #20736	; 0x5100
     d2c:	20000244 	andcs	r0, r0, r4, asr #4
     d30:	0002b520 	andeq	fp, r2, r0, lsr #10
     d34:	16370100 	ldrtne	r0, [r7], -r0, lsl #2
     d38:	0000011b 	andeq	r0, r0, fp, lsl r1
     d3c:	00140305 	andseq	r0, r4, r5, lsl #6
     d40:	4a202000 	bmi	808d48 <__Stack_Size+0x808948>
     d44:	01000004 	tsteq	r0, r4
     d48:	00411053 	subeq	r1, r1, r3, asr r0
     d4c:	03050000 	movweq	r0, #20480	; 0x5000
     d50:	20000010 	andcs	r0, r0, r0, lsl r0
     d54:	00045e20 	andeq	r5, r4, r0, lsr #28
     d58:	17540100 	ldrbne	r0, [r4, -r0, lsl #2]
     d5c:	00000898 	muleq	r0, r8, r8
     d60:	000c0305 	andeq	r0, ip, r5, lsl #6
     d64:	04072000 	streq	r2, [r7], #-0
     d68:	00000052 	andeq	r0, r0, r2, asr r0
     d6c:	00034720 	andeq	r4, r3, r0, lsr #14
     d70:	11550100 	cmpne	r5, r0, lsl #2
     d74:	0000005e 	andeq	r0, r0, lr, asr r0
     d78:	00120305 	andseq	r0, r2, r5, lsl #6
     d7c:	37202000 	strcc	r2, [r0, -r0]!
     d80:	01000004 	tsteq	r0, r4
     d84:	00411070 	subeq	r1, r1, r0, ror r0
     d88:	03050000 	movweq	r0, #20480	; 0x5000
     d8c:	2000001e 	andcs	r0, r0, lr, lsl r0
     d90:	00030c20 	andeq	r0, r3, r0, lsr #24
     d94:	11b60100 			; <UNDEFINED> instruction: 0x11b60100
     d98:	0000005e 	andeq	r0, r0, lr, asr r0
     d9c:	00000305 	andeq	r0, r0, r5, lsl #6
     da0:	04162000 	ldreq	r2, [r6], #-0
     da4:	05014901 	streq	r4, [r1, #-2305]	; 0xfffff6ff
     da8:	00000918 	andeq	r0, r0, r8, lsl r9
     dac:	00080e21 	andeq	r0, r8, r1, lsr #28
     db0:	014a0100 	mrseq	r0, (UNDEF: 90)
     db4:	00007610 	andeq	r7, r0, r0, lsl r6
     db8:	160a0400 	strne	r0, [sl], -r0, lsl #8
     dbc:	21002302 	tstcs	r0, r2, lsl #6
     dc0:	00000584 	andeq	r0, r0, r4, lsl #11
     dc4:	10014b01 	andne	r4, r1, r1, lsl #22
     dc8:	00000076 	andeq	r0, r0, r6, ror r0
     dcc:	02110504 	andseq	r0, r1, #4, 10	; 0x1000000
     dd0:	5f210023 	svcpl	0x00210023
     dd4:	01000007 	tsteq	r0, r7
     dd8:	7610014c 	ldrvc	r0, [r0], -ip, asr #2
     ddc:	04000000 	streq	r0, [r0], #-0
     de0:	23021001 	movwcs	r1, #8193	; 0x2001
     de4:	04220000 	strteq	r0, [r2], #-0
     de8:	0c014701 	stceq	7, cr4, [r1], {1}
     dec:	00000935 	andeq	r0, r0, r5, lsr r9
     df0:	00034b23 	andeq	r4, r3, r3, lsr #22
     df4:	01480100 	mrseq	r0, (UNDEF: 88)
     df8:	0000760e 	andeq	r7, r0, lr, lsl #12
     dfc:	08d41d00 	ldmeq	r4, {r8, sl, fp, ip}^
     e00:	04000000 	streq	r0, [r0], #-0
     e04:	00000918 	andeq	r0, r0, r8, lsl r9
     e08:	45010816 	strmi	r0, [r1, #-2070]	; 0xfffff7ea
     e0c:	095d0901 	ldmdbeq	sp, {r0, r8, fp}^
     e10:	2a180000 	bcs	600e18 <__Stack_Size+0x600a18>
     e14:	01000007 	tsteq	r0, r7
     e18:	82150146 	andshi	r0, r5, #-2147483631	; 0x80000011
     e1c:	02000000 	andeq	r0, r0, #0
     e20:	351e0023 	ldrcc	r0, [lr, #-35]	; 0xffffffdd
     e24:	02000009 	andeq	r0, r0, #9
     e28:	19000423 	stmdbne	r0, {r0, r1, r5, sl}
     e2c:	0000029b 	muleq	r0, fp, r2
     e30:	02014f01 	andeq	r4, r1, #1, 30
     e34:	0000093a 	andeq	r0, r0, sl, lsr r9
     e38:	04a30124 	strteq	r0, [r3], #292	; 0x124
     e3c:	5f010000 	svcpl	0x00010000
     e40:	95010501 	strls	r0, [r1, #-1281]	; 0xfffffaff
     e44:	90000000 	andls	r0, r0, r0
     e48:	ea080006 	b	200e68 <__Stack_Size+0x200a68>
     e4c:	ab080006 	blge	200e6c <__Stack_Size+0x200a6c>
     e50:	01000002 	tsteq	r0, r2
     e54:	00000a1e 	andeq	r0, r0, lr, lsl sl
     e58:	78646925 	stmdavc	r4!, {r0, r2, r5, r8, fp, sp, lr}^
     e5c:	015f0100 	cmpeq	pc, r0, lsl #2
     e60:	0000411a 	andeq	r4, r0, sl, lsl r1
     e64:	0002cf00 	andeq	ip, r2, r0, lsl #30
     e68:	0002cb00 	andeq	ip, r2, r0, lsl #22
     e6c:	75622500 	strbvc	r2, [r2, #-1280]!	; 0xfffffb00
     e70:	5f010066 	svcpl	0x00010066
     e74:	0a1e2901 	beq	78b280 <__Stack_Size+0x78ae80>
     e78:	02f60000 	rscseq	r0, r6, #0
     e7c:	02f00000 	rscseq	r0, r0, #0
     e80:	fe260000 	cdp2	0, 2, cr0, cr6, cr0, {0}
     e84:	01000003 	tsteq	r0, r3
     e88:	24100160 	ldrcs	r0, [r0], #-352	; 0xfffffea0
     e8c:	2800000a 	stmdacs	r0, {r1, r3}
     e90:	24000003 	strcs	r0, [r0], #-3
     e94:	27000003 	strcs	r0, [r0, -r3]
     e98:	01007a73 	tsteq	r0, r3, ror sl
     e9c:	95070161 	strls	r0, [r7, #-353]	; 0xfffffe9f
     ea0:	52000000 	andpl	r0, r0, #0
     ea4:	50000003 	andpl	r0, r0, r3
     ea8:	27000003 	strcs	r0, [r0, -r3]
     eac:	6301006e 	movwvs	r0, #4206	; 0x106e
     eb0:	00950701 	addseq	r0, r5, r1, lsl #14
     eb4:	036b0000 	cmneq	fp, #0
     eb8:	03650000 	cmneq	r5, #0
     ebc:	69270000 	stmdbvs	r7!, {}	; <UNPREDICTABLE>
     ec0:	6401006e 	strvs	r0, [r1], #-110	; 0xffffff92
     ec4:	0a2a0d01 	beq	a842d0 <__Stack_Size+0xa83ed0>
     ec8:	03a20000 			; <UNDEFINED> instruction: 0x03a20000
     ecc:	039c0000 	orrseq	r0, ip, #0
     ed0:	a8280000 	stmdage	r8!, {}	; <UNPREDICTABLE>
     ed4:	27000000 	strcs	r0, [r0, -r0]
     ed8:	65010069 	strvs	r0, [r1, #-105]	; 0xffffff97
     edc:	00950b01 	addseq	r0, r5, r1, lsl #22
     ee0:	03cf0000 	biceq	r0, pc, #0
     ee4:	03cd0000 	biceq	r0, sp, #0
     ee8:	00000000 	andeq	r0, r0, r0
     eec:	005e0407 	subseq	r0, lr, r7, lsl #8
     ef0:	04070000 	streq	r0, [r7], #-0
     ef4:	0000095d 	andeq	r0, r0, sp, asr r9
     ef8:	00760407 	rsbseq	r0, r6, r7, lsl #8
     efc:	01290000 			; <UNDEFINED> instruction: 0x01290000
     f00:	00000392 	muleq	r0, r2, r3
     f04:	06015101 	streq	r5, [r1], -r1, lsl #2
     f08:	0005e001 	andeq	lr, r5, r1
     f0c:	00063408 	andeq	r3, r6, r8, lsl #8
     f10:	0003e308 	andeq	lr, r3, r8, lsl #6
     f14:	0aec0100 	beq	ffb0131c <BootRAM+0xea71abd>
     f18:	69250000 	stmdbvs	r5!, {}	; <UNPREDICTABLE>
     f1c:	01007864 	tsteq	r0, r4, ror #16
     f20:	411c0151 	tstmi	ip, r1, asr r1
     f24:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
     f28:	03000004 	movweq	r0, #4
     f2c:	2a000004 	bcs	f44 <__Stack_Size+0xb44>
     f30:	00667562 	rsbeq	r7, r6, r2, ror #10
     f34:	30015101 	andcc	r5, r1, r1, lsl #2
     f38:	00000898 	muleq	r0, r8, r8
     f3c:	4c2b5101 	stfmis	f5, [fp], #-4
     f40:	0100000c 	tsteq	r0, ip
     f44:	5e3e0151 	mrcpl	1, 1, r0, cr14, cr1, {2}
     f48:	01000000 	mrseq	r0, (UNDEF: 0)
     f4c:	03fe2652 	mvnseq	r2, #85983232	; 0x5200000
     f50:	52010000 	andpl	r0, r1, #0
     f54:	0a241001 	beq	904f60 <__Stack_Size+0x904b60>
     f58:	04370000 	ldrteq	r0, [r7], #-0
     f5c:	04350000 	ldrteq	r0, [r5], #-0
     f60:	4e270000 	cdpmi	0, 2, cr0, cr7, cr0, {0}
     f64:	53010032 	movwpl	r0, #4146	; 0x1032
     f68:	005e0c01 	subseq	r0, lr, r1, lsl #24
     f6c:	044c0000 	strbeq	r0, [ip], #-0
     f70:	044a0000 	strbeq	r0, [sl], #-0
     f74:	4a260000 	bmi	980f7c <__Stack_Size+0x980b7c>
     f78:	01000002 	tsteq	r0, r2
     f7c:	1e0d0155 	mcrne	1, 0, r0, cr13, cr5, {2}
     f80:	6100000a 	tstvs	r0, sl
     f84:	5f000004 	svcpl	0x00000004
     f88:	27000004 	strcs	r0, [r0, -r4]
     f8c:	0074756f 	rsbseq	r7, r4, pc, ror #10
     f90:	0d015601 	stceq	6, cr5, [r1, #-4]
     f94:	00000a2a 	andeq	r0, r0, sl, lsr #20
     f98:	0000047a 	andeq	r0, r0, sl, ror r4
     f9c:	00000474 	andeq	r0, r0, r4, ror r4
     fa0:	00007028 	andeq	r7, r0, r8, lsr #32
     fa4:	00692700 	rsbeq	r2, r9, r0, lsl #14
     fa8:	10015701 	andne	r5, r1, r1, lsl #14
     fac:	0000005e 	andeq	r0, r0, lr, asr r0
     fb0:	000004b5 			; <UNDEFINED> instruction: 0x000004b5
     fb4:	000004b1 			; <UNDEFINED> instruction: 0x000004b1
     fb8:	012c0000 			; <UNDEFINED> instruction: 0x012c0000
     fbc:	000002e2 	andeq	r0, r0, r2, ror #5
     fc0:	06011b01 	streq	r1, [r1], -r1, lsl #22
     fc4:	080004b8 	stmdaeq	r0, {r3, r4, r5, r7, sl}
     fc8:	080005e0 	stmdaeq	r0, {r5, r6, r7, r8, sl}
     fcc:	000004d5 	ldrdeq	r0, [r0], -r5
     fd0:	000bd201 	andeq	sp, fp, r1, lsl #4
     fd4:	00502d00 	subseq	r2, r0, r0, lsl #26
     fd8:	0b240000 	bleq	900fe0 <__Stack_Size+0x900be0>
     fdc:	69270000 	stmdbvs	r7!, {}	; <UNPREDICTABLE>
     fe0:	01210100 			; <UNDEFINED> instruction: 0x01210100
     fe4:	00004111 	andeq	r4, r0, r1, lsl r1
     fe8:	0004f900 	andeq	pc, r4, r0, lsl #18
     fec:	0004f500 	andeq	pc, r4, r0, lsl #10
     ff0:	282e0000 	stmdacs	lr!, {}	; <UNPREDICTABLE>
     ff4:	7c080005 	stcvc	0, cr0, [r8], {5}
     ff8:	66080005 	strvs	r0, [r8], -r5
     ffc:	2600000b 	strcs	r0, [r0], -fp
    1000:	000006e6 	andeq	r0, r0, r6, ror #13
    1004:	0d012d01 	stceq	13, cr2, [r1, #-4]
    1008:	00000041 	andeq	r0, r0, r1, asr #32
    100c:	0000051e 	andeq	r0, r0, lr, lsl r5
    1010:	0000051c 	andeq	r0, r0, ip, lsl r5
    1014:	00054a2f 	andeq	r4, r5, pc, lsr #20
    1018:	000b5608 	andeq	r5, fp, r8, lsl #12
    101c:	50013000 	andpl	r3, r1, r0
    1020:	00007502 	andeq	r7, r0, r2, lsl #10
    1024:	00056c31 	andeq	r6, r5, r1, lsr ip
    1028:	50013008 	andpl	r3, r1, r8
    102c:	08007505 	stmdaeq	r0, {r0, r2, r8, sl, ip, sp, lr}
    1030:	00002180 	andeq	r2, r0, r0, lsl #3
    1034:	0004c832 	andeq	ip, r4, r2, lsr r8
    1038:	00122308 	andseq	r2, r2, r8, lsl #6
    103c:	050a3300 	streq	r3, [sl, #-768]	; 0xfffffd00
    1040:	0c660800 	stcleq	8, cr0, [r6], #-0
    1044:	0b970000 	bleq	fe5c104c <BootRAM+0xd5317ed>
    1048:	01300000 	teqeq	r0, r0
    104c:	00740250 	rsbseq	r0, r4, r0, asr r2
    1050:	02510130 	subseq	r0, r1, #48, 2
    1054:	01300074 	teqeq	r0, r4, ror r0
    1058:	30380152 	eorscc	r0, r8, r2, asr r1
    105c:	03055301 	movweq	r5, #21249	; 0x5301
    1060:	080006eb 	stmdaeq	r0, {r0, r1, r3, r5, r6, r7, r9, sl}
    1064:	05163300 	ldreq	r3, [r6, #-768]	; 0xfffffd00
    1068:	0c660800 	stcleq	8, cr0, [r6], #-0
    106c:	0bbf0000 	bleq	fefc1074 <BootRAM+0xdf31815>
    1070:	01300000 	teqeq	r0, r0
    1074:	80090250 	andhi	r0, r9, r0, asr r2
    1078:	02510130 	subseq	r0, r1, #48, 2
    107c:	01300074 	teqeq	r0, r4, ror r0
    1080:	30380152 	eorscc	r0, r8, r2, asr r1
    1084:	03055301 	movweq	r5, #21249	; 0x5301
    1088:	08000635 	stmdaeq	r0, {r0, r2, r4, r5, r9, sl}
    108c:	051e3200 	ldreq	r3, [lr, #-512]	; 0xfffffe00
    1090:	122c0800 	eorne	r0, ip, #0, 16
    1094:	8a320000 	bhi	c8109c <__Stack_Size+0xc80c9c>
    1098:	23080005 	movwcs	r0, #32773	; 0x8005
    109c:	00000012 	andeq	r0, r0, r2, lsl r0
    10a0:	07760134 			; <UNDEFINED> instruction: 0x07760134
    10a4:	e7010000 	str	r0, [r1, -r0]
    10a8:	03700106 	cmneq	r0, #-2147483647	; 0x80000001
    10ac:	04b80800 	ldrteq	r0, [r8], #2048	; 0x800
    10b0:	05310800 	ldreq	r0, [r1, #-2048]!	; 0xfffff800
    10b4:	66010000 	strvs	r0, [r1], -r0
    10b8:	3500000c 	strcc	r0, [r0, #-12]
    10bc:	000006e6 	andeq	r0, r0, r6, ror #13
    10c0:	4121e701 			; <UNDEFINED> instruction: 0x4121e701
    10c4:	55000000 	strpl	r0, [r0, #-0]
    10c8:	51000005 	tstpl	r0, r5
    10cc:	35000005 	strcc	r0, [r0, #-5]
    10d0:	000007dc 	ldrdeq	r0, [r0], -ip
    10d4:	4130e701 	teqmi	r0, r1, lsl #14
    10d8:	83000000 	movwhi	r0, #0
    10dc:	73000005 	movwvc	r0, #5
    10e0:	35000005 	strcc	r0, [r0, #-5]
    10e4:	00000c4c 	andeq	r0, r0, ip, asr #24
    10e8:	5e42e701 	cdppl	7, 4, cr14, cr2, cr1, {0}
    10ec:	f5000000 			; <UNDEFINED> instruction: 0xf5000000
    10f0:	ef000005 	svc	0x00000005
    10f4:	35000005 	strcc	r0, [r0, #-5]
    10f8:	00000a74 	andeq	r0, r0, r4, ror sl
    10fc:	a851e701 	ldmdage	r1, {r0, r8, r9, sl, sp, lr, pc}^
    1100:	25000000 	strcs	r0, [r0, #-0]
    1104:	21000006 	tstcs	r0, r6
    1108:	36000006 	strcc	r0, [r0], -r6
    110c:	000007ef 	andeq	r0, r0, pc, ror #15
    1110:	410be901 	tstmi	fp, r1, lsl #18
    1114:	4b000000 	blmi	111c <__Stack_Size+0xd1c>
    1118:	43000006 	movwmi	r0, #6
    111c:	37000006 	strcc	r0, [r0, -r6]
    1120:	00667562 	rsbeq	r7, r6, r2, ror #10
    1124:	5e0cef01 	cdppl	15, 0, cr14, cr12, cr1, {0}
    1128:	a7000000 	strge	r0, [r0, -r0]
    112c:	95000006 	strls	r0, [r0, #-6]
    1130:	00000006 	andeq	r0, r0, r6
    1134:	06580134 			; <UNDEFINED> instruction: 0x06580134
    1138:	b7010000 	strlt	r0, [r1, -r0]
    113c:	02580106 	subseq	r0, r8, #-2147483647	; 0x80000001
    1140:	03700800 	cmneq	r0, #0, 16
    1144:	073a0800 	ldreq	r0, [sl, -r0, lsl #16]!
    1148:	fa010000 	blx	41150 <__Stack_Size+0x40d50>
    114c:	3500000c 	strcc	r0, [r0, #-12]
    1150:	000006e6 	andeq	r0, r0, r6, ror #13
    1154:	411ab701 	tstmi	sl, r1, lsl #14
    1158:	5e000000 	cdppl	0, 0, cr0, cr0, cr0, {0}
    115c:	5a000007 	bpl	1180 <__Stack_Size+0xd80>
    1160:	35000007 	strcc	r0, [r0, #-7]
    1164:	000007dc 	ldrdeq	r0, [r0], -ip
    1168:	4129b701 			; <UNDEFINED> instruction: 0x4129b701
    116c:	84000000 	strhi	r0, [r0], #-0
    1170:	7c000007 	stcvc	0, cr0, [r0], {7}
    1174:	35000007 	strcc	r0, [r0, #-7]
    1178:	00000c4c 	andeq	r0, r0, ip, asr #24
    117c:	5e3bb701 	cdppl	7, 3, cr11, cr11, cr1, {0}
    1180:	c4000000 	strgt	r0, [r0], #-0
    1184:	be000007 	cdplt	0, 0, cr0, cr0, cr7, {0}
    1188:	35000007 	strcc	r0, [r0, #-7]
    118c:	00000a74 	andeq	r0, r0, r4, ror sl
    1190:	a84ab701 	stmdage	sl, {r0, r8, r9, sl, ip, sp, pc}^
    1194:	fc000000 	stc2	0, cr0, [r0], {-0}
    1198:	f0000007 			; <UNDEFINED> instruction: 0xf0000007
    119c:	36000007 	strcc	r0, [r0], -r7
    11a0:	000007ef 	andeq	r0, r0, pc, ror #15
    11a4:	410bb901 	tstmi	fp, r1, lsl #18
    11a8:	6e000000 	cdpvs	0, 0, cr0, cr0, cr0, {0}
    11ac:	64000008 	strvs	r0, [r0], #-8
    11b0:	37000008 	strcc	r0, [r0, -r8]
    11b4:	00667562 	rsbeq	r7, r6, r2, ror #10
    11b8:	5e0cc201 	cdppl	2, 0, cr12, cr12, cr1, {0}
    11bc:	d5000000 	strle	r0, [r0, #-0]
    11c0:	c7000008 	strgt	r0, [r0, -r8]
    11c4:	00000008 	andeq	r0, r0, r8
    11c8:	00070838 	andeq	r0, r7, r8, lsr r8
    11cc:	0d720100 	ldfeqe	f0, [r2, #-0]
    11d0:	0006ea01 	andeq	lr, r6, r1, lsl #20
    11d4:	00080408 	andeq	r0, r8, r8, lsl #8
    11d8:	00095c08 	andeq	r5, r9, r8, lsl #24
    11dc:	0feb0100 	svceq	0x00eb0100
    11e0:	e6350000 	ldrt	r0, [r5], -r0
    11e4:	01000006 	tsteq	r0, r6
    11e8:	00411d72 	subeq	r1, r1, r2, ror sp
    11ec:	099c0000 	ldmibeq	ip, {}	; <UNPREDICTABLE>
    11f0:	09940000 	ldmibeq	r4, {}	; <UNPREDICTABLE>
    11f4:	cd200000 	stcgt	0, cr0, [r0, #-0]
    11f8:	01000002 	tsteq	r0, r2
    11fc:	005e1373 	subseq	r1, lr, r3, ror r3
    1200:	03050000 	movweq	r0, #20480	; 0x5000
    1204:	2000001c 	andcs	r0, r0, ip, lsl r0
    1208:	00081736 	andeq	r1, r8, r6, lsr r7
    120c:	0c740100 	ldfeqe	f0, [r4], #-0
    1210:	0000005e 	andeq	r0, r0, lr, asr r0
    1214:	000009de 	ldrdeq	r0, [r0], -lr
    1218:	000009d6 	ldrdeq	r0, [r0], -r6
    121c:	0000ca36 	andeq	ip, r0, r6, lsr sl
    1220:	0b750100 	bleq	1d41628 <__Stack_Size+0x1d41228>
    1224:	00000041 	andeq	r0, r0, r1, asr #32
    1228:	00000a14 	andeq	r0, r0, r4, lsl sl
    122c:	00000a12 	andeq	r0, r0, r2, lsl sl
    1230:	71657237 	cmnvc	r5, r7, lsr r2
    1234:	0b850100 	bleq	fe14163c <BootRAM+0xd0b1ddd>
    1238:	00000041 	andeq	r0, r0, r1, asr #32
    123c:	00000a3d 	andeq	r0, r0, sp, lsr sl
    1240:	00000a31 	andeq	r0, r0, r1, lsr sl
    1244:	0000d82d 	andeq	sp, r0, sp, lsr #16
    1248:	000ec100 	andeq	ip, lr, r0, lsl #2
    124c:	0ba92000 	bleq	fea49254 <BootRAM+0xd9b99f5>
    1250:	9c010000 	stcls	0, cr0, [r1], {-0}
    1254:	000feb0b 	andeq	lr, pc, fp, lsl #22
    1258:	6c910200 	lfmvs	f0, 4, [r1], {0}
    125c:	000c4c20 	andeq	r4, ip, r0, lsr #24
    1260:	0e9d0100 	fmleqe	f0, f5, f0
    1264:	0000005e 	andeq	r0, r0, lr, asr r0
    1268:	2e6a9102 	lgncse	f1, f2
    126c:	08000744 	stmdaeq	r0, {r2, r6, r8, r9, sl}
    1270:	08000758 	stmdaeq	r0, {r3, r4, r6, r8, r9, sl}
    1274:	00000ddf 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    1278:	000ba920 	andeq	sl, fp, r0, lsr #18
    127c:	178d0100 	strne	r0, [sp, r0, lsl #2]
    1280:	00000fed 	andeq	r0, r0, sp, ror #31
    1284:	206c9102 	rsbcs	r9, ip, r2, lsl #2
    1288:	00000c4c 	andeq	r0, r0, ip, asr #24
    128c:	5e148e01 	cdppl	14, 1, cr8, cr4, cr1, {0}
    1290:	02000000 	andeq	r0, r0, #0
    1294:	58396a91 	ldmdapl	r9!, {r0, r4, r7, r9, fp, sp, lr}
    1298:	c2080007 	andgt	r0, r8, #7
    129c:	30000012 	andcc	r0, r0, r2, lsl r0
    12a0:	91025101 	tstls	r2, r1, lsl #2
    12a4:	5201306c 	andpl	r3, r1, #108	; 0x6c
    12a8:	006a9102 	rsbeq	r9, sl, r2, lsl #2
    12ac:	12613a00 	rsbne	r3, r1, #0, 20
    12b0:	07300000 	ldreq	r0, [r0, -r0]!
    12b4:	30010800 	andcc	r0, r1, r0, lsl #16
    12b8:	34080007 	strcc	r0, [r8], #-7
    12bc:	01080007 	tsteq	r8, r7
    12c0:	0e200b95 	vmoveq.32	d16[1], r0
    12c4:	873b0000 	ldrhi	r0, [fp, -r0]!
    12c8:	93000012 	movwls	r0, #18
    12cc:	9100000a 	tstls	r0, sl
    12d0:	3b00000a 	blcc	1300 <__Stack_Size+0xf00>
    12d4:	0000127b 	andeq	r1, r0, fp, ror r2
    12d8:	00000aa9 	andeq	r0, r0, r9, lsr #21
    12dc:	00000aa7 	andeq	r0, r0, r7, lsr #21
    12e0:	00126f3b 	andseq	r6, r2, fp, lsr pc
    12e4:	000ac300 	andeq	ip, sl, r0, lsl #6
    12e8:	000ac100 	andeq	ip, sl, r0, lsl #2
    12ec:	f43c0000 			; <UNDEFINED> instruction: 0xf43c0000
    12f0:	6800000f 	stmdavs	r0, {r0, r1, r2, r3}
    12f4:	01080007 	tsteq	r8, r7
    12f8:	000000f8 	strdeq	r0, [r0], -r8
    12fc:	6005a001 	andvs	sl, r5, r1
    1300:	3b00000e 	blcc	1340 <__Stack_Size+0xf40>
    1304:	0000100e 	andeq	r1, r0, lr
    1308:	00000ad9 	ldrdeq	r0, [r0], -r9
    130c:	00000ad7 	ldrdeq	r0, [r0], -r7
    1310:	0010023b 	andseq	r0, r0, fp, lsr r2
    1314:	000aef00 	andeq	lr, sl, r0, lsl #30
    1318:	000aed00 	andeq	lr, sl, r0, lsl #26
    131c:	07763900 	ldrbeq	r3, [r6, -r0, lsl #18]!
    1320:	101b0800 	andsne	r0, fp, r0, lsl #16
    1324:	01300000 	teqeq	r0, r0
    1328:	80090250 	andhi	r0, r9, r0, asr r2
    132c:	613a0000 	teqvs	sl, r0
    1330:	7a000012 	bvc	1380 <__Stack_Size+0xf80>
    1334:	01080007 	tsteq	r8, r7
    1338:	0800077a 	stmdaeq	r0, {r1, r3, r4, r5, r6, r8, r9, sl}
    133c:	08000782 	stmdaeq	r0, {r1, r7, r8, r9, sl}
    1340:	a10b9801 	tstge	fp, r1, lsl #16
    1344:	3b00000e 	blcc	1384 <__Stack_Size+0xf84>
    1348:	00001287 	andeq	r1, r0, r7, lsl #5
    134c:	00000b05 	andeq	r0, r0, r5, lsl #22
    1350:	00000b03 	andeq	r0, r0, r3, lsl #22
    1354:	00127b3b 	andseq	r7, r2, fp, lsr fp
    1358:	000b1b00 	andeq	r1, fp, r0, lsl #22
    135c:	000b1900 	andeq	r1, fp, r0, lsl #18
    1360:	126f3b00 	rsbne	r3, pc, #0, 22
    1364:	0b350000 	bleq	d4136c <__Stack_Size+0xd40f6c>
    1368:	0b330000 	bleq	cc1370 <__Stack_Size+0xcc0f70>
    136c:	39000000 	stmdbcc	r0, {}	; <UNPREDICTABLE>
    1370:	08000798 	stmdaeq	r0, {r3, r4, r7, r8, r9, sl}
    1374:	000011c5 	andeq	r1, r0, r5, asr #3
    1378:	05500130 	ldrbeq	r0, [r0, #-304]	; 0xfffffed0
    137c:	00001403 	andeq	r1, r0, r3, lsl #8
    1380:	51013020 	tstpl	r1, r0, lsr #32
    1384:	306c9102 	rsbcc	r9, ip, r2, lsl #2
    1388:	91025201 	tstls	r2, r1, lsl #4
    138c:	3c00006a 	stccc	0, cr0, [r0], {106}	; 0x6a
    1390:	00001236 	andeq	r1, r0, r6, lsr r2
    1394:	0800070a 	stmdaeq	r0, {r1, r3, r8, r9, sl}
    1398:	0000c001 	andeq	ip, r0, r1
    139c:	07790100 	ldrbeq	r0, [r9, -r0, lsl #2]!
    13a0:	00000f09 	andeq	r0, r0, r9, lsl #30
    13a4:	0012483b 	andseq	r4, r2, fp, lsr r8
    13a8:	000b4b00 	andeq	r4, fp, r0, lsl #22
    13ac:	000b4900 	andeq	r4, fp, r0, lsl #18
    13b0:	12543b00 	subsne	r3, r4, #0, 22
    13b4:	0b610000 	bleq	18413bc <__Stack_Size+0x1840fbc>
    13b8:	0b5f0000 	bleq	17c13c0 <__Stack_Size+0x17c0fc0>
    13bc:	14390000 	ldrtne	r0, [r9], #-0
    13c0:	6a080007 	bvs	2013e4 <__Stack_Size+0x200fe4>
    13c4:	30000009 	andcc	r0, r0, r9
    13c8:	31015001 	tstcc	r1, r1
    13cc:	05510130 	ldrbeq	r0, [r1, #-304]	; 0xfffffed0
    13d0:	00001403 	andeq	r1, r0, r3, lsl #8
    13d4:	3c000020 	stccc	0, cr0, [r0], {32}
    13d8:	00001261 	andeq	r1, r0, r1, ror #4
    13dc:	080007a6 	stmdaeq	r0, {r1, r2, r5, r7, r8, r9, sl}
    13e0:	00011005 	andeq	r1, r1, r5
    13e4:	2cb20100 	ldfcss	f0, [r2]
    13e8:	00000f4f 	andeq	r0, r0, pc, asr #30
    13ec:	0012873b 	andseq	r8, r2, fp, lsr r7
    13f0:	000b7b00 	andeq	r7, fp, r0, lsl #22
    13f4:	000b7900 	andeq	r7, fp, r0, lsl #18
    13f8:	127b3b00 	rsbsne	r3, fp, #0, 22
    13fc:	0b7b0000 	bleq	1ec1404 <__Stack_Size+0x1ec1004>
    1400:	0b790000 	bleq	1e41408 <__Stack_Size+0x1e41008>
    1404:	6f3b0000 	svcvs	0x003b0000
    1408:	7b000012 	blvc	1458 <__Stack_Size+0x1058>
    140c:	7900000b 	stmdbvc	r0, {r0, r1, r3}
    1410:	3200000b 	andcc	r0, r0, #11
    1414:	08000738 	stmdaeq	r0, {r3, r4, r5, r8, r9, sl}
    1418:	00000a30 	andeq	r0, r0, r0, lsr sl
    141c:	12613a00 	rsbne	r3, r1, #0, 20
    1420:	07a60000 	streq	r0, [r6, r0]!
    1424:	a6010800 	strge	r0, [r1], -r0, lsl #16
    1428:	a6080007 	strge	r0, [r8], -r7
    142c:	01080007 	tsteq	r8, r7
    1430:	0f9009a6 	svceq	0x009009a6
    1434:	873b0000 	ldrhi	r0, [fp, -r0]!
    1438:	91000012 	tstls	r0, r2, lsl r0
    143c:	8f00000b 	svchi	0x0000000b
    1440:	3b00000b 	blcc	1474 <__Stack_Size+0x1074>
    1444:	0000127b 	andeq	r1, r0, fp, ror r2
    1448:	00000b91 	muleq	r0, r1, fp
    144c:	00000b8f 	andeq	r0, r0, pc, lsl #23
    1450:	00126f3b 	andseq	r6, r2, fp, lsr pc
    1454:	000b9100 	andeq	r9, fp, r0, lsl #2
    1458:	000b8f00 	andeq	r8, fp, r0, lsl #30
    145c:	613a0000 	teqvs	sl, r0
    1460:	b6000012 			; <UNDEFINED> instruction: 0xb6000012
    1464:	01080007 	tsteq	r8, r7
    1468:	080007b6 	stmdaeq	r0, {r1, r2, r4, r5, r7, r8, r9, sl}
    146c:	080007b8 	stmdaeq	r0, {r3, r4, r5, r7, r8, r9, sl}
    1470:	d109aa01 	tstle	r9, r1, lsl #20
    1474:	3b00000f 	blcc	14b8 <__Stack_Size+0x10b8>
    1478:	00001287 	andeq	r1, r0, r7, lsl #5
    147c:	00000ba7 	andeq	r0, r0, r7, lsr #23
    1480:	00000ba5 	andeq	r0, r0, r5, lsr #23
    1484:	00127b3b 	andseq	r7, r2, fp, lsr fp
    1488:	000ba700 	andeq	sl, fp, r0, lsl #14
    148c:	000ba500 	andeq	sl, fp, r0, lsl #10
    1490:	126f3b00 	rsbne	r3, pc, #0, 22
    1494:	0ba70000 	bleq	fe9c149c <BootRAM+0xd931c3d>
    1498:	0ba50000 	bleq	fe9414a0 <BootRAM+0xd8b1c41>
    149c:	39000000 	stmdbcc	r0, {}	; <UNPREDICTABLE>
    14a0:	080007c2 	stmdaeq	r0, {r1, r6, r7, r8, r9, sl}
    14a4:	00001169 	andeq	r1, r0, r9, ror #2
    14a8:	05500130 	ldrbeq	r0, [r0, #-304]	; 0xfffffed0
    14ac:	00001403 	andeq	r1, r0, r3, lsl #8
    14b0:	52013020 	andpl	r3, r1, #32
    14b4:	00007502 	andeq	r7, r0, r2, lsl #10
    14b8:	07043d00 	streq	r3, [r4, -r0, lsl #26]
    14bc:	000ff304 	andeq	pc, pc, r4, lsl #6
    14c0:	223f3e00 	eorscs	r3, pc, #0, 28
    14c4:	01000004 	tsteq	r0, r4
    14c8:	0301146a 	movweq	r1, #5226	; 0x146a
    14cc:	0000101b 	andeq	r1, r0, fp, lsl r0
    14d0:	66756240 	ldrbtvs	r6, [r5], -r0, asr #4
    14d4:	2c6a0100 	stfcse	f0, [sl], #-0
    14d8:	00000898 	muleq	r0, r8, r8
    14dc:	000c4c41 	andeq	r4, ip, r1, asr #24
    14e0:	3a6a0100 	bcc	1a818e8 <__Stack_Size+0x1a814e8>
    14e4:	0000005e 	andeq	r0, r0, lr, asr r0
    14e8:	059c3800 	ldreq	r3, [ip, #2048]	; 0x800
    14ec:	57010000 	strpl	r0, [r1, -r0]
    14f0:	0634010d 	ldrteq	r0, [r4], -sp, lsl #2
    14f4:	06900800 	ldreq	r0, [r0], r0, lsl #16
    14f8:	0bbb0800 	bleq	feec3500 <BootRAM+0xde33ca1>
    14fc:	b2010000 	andlt	r0, r1, #0
    1500:	35000010 	strcc	r0, [r0, #-16]
    1504:	000006e6 	andeq	r0, r0, r6, ror #13
    1508:	411c5701 	tstmi	ip, r1, lsl #14
    150c:	df000000 	svcle	0x00000000
    1510:	db00000b 	blle	1544 <__Stack_Size+0x1144>
    1514:	3600000b 	strcc	r0, [r0], -fp
    1518:	00000692 	muleq	r0, r2, r6
    151c:	5e0c5e01 	cdppl	14, 0, cr5, cr12, cr1, {0}
    1520:	04000000 	streq	r0, [r0], #-0
    1524:	0000000c 	andeq	r0, r0, ip
    1528:	4200000c 	andmi	r0, r0, #12
    152c:	00001261 	andeq	r1, r0, r1, ror #4
    1530:	0800066a 	stmdaeq	r0, {r1, r3, r5, r6, r9, sl}
    1534:	00009002 	andeq	r9, r0, r2
    1538:	03600100 	cmneq	r0, #0, 2
    153c:	0012873b 	andseq	r8, r2, fp, lsr r7
    1540:	000c2400 	andeq	r2, ip, r0, lsl #8
    1544:	000c2200 	andeq	r2, ip, r0, lsl #4
    1548:	127b3b00 	rsbsne	r3, fp, #0, 22
    154c:	0c390000 	ldceq	0, cr0, [r9], #-0
    1550:	0c370000 	ldceq	0, cr0, [r7], #-0
    1554:	6f3b0000 	svcvs	0x003b0000
    1558:	4e000012 	mcrmi	0, 0, r0, cr0, cr2, {0}
    155c:	4c00000c 	stcmi	0, cr0, [r0], {12}
    1560:	3900000c 	stmdbcc	r0, {r2, r3}
    1564:	08000672 	stmdaeq	r0, {r1, r4, r5, r6, r9, sl}
    1568:	00000a30 	andeq	r0, r0, r0, lsr sl
    156c:	01500130 	cmpeq	r0, r0, lsr r1
    1570:	51013030 	tstpl	r1, r0, lsr r0
    1574:	30007102 	andcc	r7, r0, r2, lsl #2
    1578:	72025201 	andvc	r5, r2, #268435456	; 0x10000000
    157c:	00000000 	andeq	r0, r0, r0
    1580:	00c60143 	sbceq	r0, r6, r3, asr #2
    1584:	39010000 	stmdbcc	r1, {}	; <UNPREDICTABLE>
    1588:	0001ec06 	andeq	lr, r1, r6, lsl #24
    158c:	00025808 	andeq	r5, r2, r8, lsl #16
    1590:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    1594:	00114101 	andseq	r4, r1, r1, lsl #2
    1598:	01f62e00 	mvnseq	r2, r0, lsl #28
    159c:	02060800 	andeq	r0, r6, #0, 16
    15a0:	10ed0800 	rscne	r0, sp, r0, lsl #16
    15a4:	62360000 	eorsvs	r0, r6, #0
    15a8:	01000001 	tsteq	r0, r1
    15ac:	0076033f 	rsbseq	r0, r6, pc, lsr r3
    15b0:	0c660000 	stcleq	0, cr0, [r6], #-0
    15b4:	0c620000 	stcleq	0, cr0, [r2], #-0
    15b8:	44000000 	strmi	r0, [r0], #-0
    15bc:	000010ff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
    15c0:	00016245 	andeq	r6, r1, r5, asr #4
    15c4:	033f0100 	teqeq	pc, #0, 2
    15c8:	00000076 	andeq	r0, r0, r6, ror r0
    15cc:	00382d00 	eorseq	r2, r8, r0, lsl #26
    15d0:	111d0000 	tstne	sp, r0
    15d4:	63370000 	teqvs	r7, #0
    15d8:	01007274 	tsteq	r0, r4, ror r2
    15dc:	00761045 	rsbseq	r1, r6, r5, asr #32
    15e0:	0c8d0000 	stceq	0, cr0, [sp], {0}
    15e4:	0c850000 	stceq	0, cr0, [r5], {0}
    15e8:	46000000 	strmi	r0, [r0], -r0
    15ec:	00001294 	muleq	r0, r4, r2
    15f0:	08000234 	stmdaeq	r0, {r2, r4, r5, r9}
    15f4:	00023401 	andeq	r3, r2, r1, lsl #8
    15f8:	00023c08 	andeq	r3, r2, r8, lsl #24
    15fc:	034b0108 	movteq	r0, #45320	; 0xb108
    1600:	0012a33b 	andseq	sl, r2, fp, lsr r3
    1604:	000cdc00 	andeq	sp, ip, r0, lsl #24
    1608:	000cda00 	andeq	sp, ip, r0, lsl #20
    160c:	47000000 	strmi	r0, [r0, -r0]
    1610:	0000035b 	andeq	r0, r0, fp, asr r3
    1614:	010d1d01 	tsteq	sp, r1, lsl #26
    1618:	080001dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8}
    161c:	080001de 	stmdaeq	r0, {r1, r2, r3, r4, r6, r7, r8}
    1620:	01007d02 	tsteq	r0, r2, lsl #26
    1624:	00001169 	andeq	r1, r0, r9, ror #2
    1628:	0006e648 	andeq	lr, r6, r8, asr #12
    162c:	2b1d0100 	blcs	741a34 <__Stack_Size+0x741634>
    1630:	00000041 	andeq	r0, r0, r1, asr #32
    1634:	49005001 	stmdbmi	r0, {r0, ip, lr}
    1638:	0006fe01 	andeq	pc, r6, r1, lsl #28
    163c:	1b1b0100 	blne	6c1a44 <__Stack_Size+0x6c1644>
    1640:	0011b801 	andseq	fp, r1, r1, lsl #16
    1644:	0001e800 	andeq	lr, r1, r0, lsl #16
    1648:	0001ec08 	andeq	lr, r1, r8, lsl #24
    164c:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    1650:	0011b801 	andseq	fp, r1, r1, lsl #16
    1654:	65724a00 	ldrbvs	r4, [r2, #-2560]!	; 0xfffff600
    1658:	1b010071 	blne	41824 <__Stack_Size+0x41424>
    165c:	0011bf3c 	andseq	fp, r1, ip, lsr pc
    1660:	000cf400 	andeq	pc, ip, r0, lsl #8
    1664:	000cf000 	andeq	pc, ip, r0
    1668:	0bc94800 	bleq	ff253670 <BootRAM+0xe1c3e11>
    166c:	1b010000 	blne	41674 <__Stack_Size+0x41274>
    1670:	00005e4a 	andeq	r5, r0, sl, asr #28
    1674:	48510100 	ldmdami	r1, {r8}^
    1678:	000006ec 	andeq	r0, r0, ip, ror #13
    167c:	5e5b1b01 	vnmlspl.f64	d17, d11, d1
    1680:	01000000 	mrseq	r0, (UNDEF: 0)
    1684:	01020052 	qaddeq	r0, r2, r2
    1688:	00013608 	andeq	r3, r1, r8, lsl #12
    168c:	1b040700 	blne	103294 <__Stack_Size+0x102e94>
    1690:	49000001 	stmdbmi	r0, {r0}
    1694:	00059201 	andeq	r9, r5, r1, lsl #4
    1698:	1b1a0100 	blne	681aa0 <__Stack_Size+0x6816a0>
    169c:	0011b801 	andseq	fp, r1, r1, lsl #16
    16a0:	0001e400 	andeq	lr, r1, r0, lsl #8
    16a4:	0001e808 	andeq	lr, r1, r8, lsl #16
    16a8:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    16ac:	00121401 	andseq	r1, r2, r1, lsl #8
    16b0:	65724a00 	ldrbvs	r4, [r2, #-2560]!	; 0xfffff600
    16b4:	1a010071 	bne	41880 <__Stack_Size+0x41480>
    16b8:	0011bf3b 	andseq	fp, r1, fp, lsr pc
    16bc:	000d1900 	andeq	r1, sp, r0, lsl #18
    16c0:	000d1500 	andeq	r1, sp, r0, lsl #10
    16c4:	0ba94800 	bleq	fea536cc <BootRAM+0xd9c3e6d>
    16c8:	1a010000 	bne	416d0 <__Stack_Size+0x412d0>
    16cc:	00121447 	andseq	r1, r2, r7, asr #8
    16d0:	48510100 	ldmdami	r1, {r8}^
    16d4:	00000c4c 	andeq	r0, r0, ip, asr #24
    16d8:	1e571a01 	vnmlsne.f32	s3, s14, s2
    16dc:	0100000a 	tsteq	r0, sl
    16e0:	04070052 	streq	r0, [r7], #-82	; 0xffffffae
    16e4:	00000feb 	andeq	r0, r0, fp, ror #31
    16e8:	00ab014b 	adceq	r0, fp, fp, asr #2
    16ec:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    16f0:	eb014b1b 	bl	54364 <__Stack_Size+0x53f64>
    16f4:	01000004 	tsteq	r0, r4
    16f8:	014c1b18 	cmpeq	ip, r8, lsl fp
    16fc:	0000051e 	andeq	r0, r0, lr, lsl r5
    1700:	011b1701 	tsteq	fp, r1, lsl #14
    1704:	0004a44d 	andeq	sl, r4, sp, asr #8
    1708:	13ba0300 			; <UNDEFINED> instruction: 0x13ba0300
    170c:	00009501 	andeq	r9, r0, r1, lsl #10
    1710:	12610300 	rsbne	r0, r1, #0, 6
    1714:	e6410000 	strb	r0, [r1], -r0
    1718:	03000006 	movweq	r0, #6
    171c:	004127ba 	strheq	r2, [r1], #-122	; 0xffffff86
    1720:	62400000 	subvs	r0, r0, #0
    1724:	03006675 	movweq	r6, #1653	; 0x675
    1728:	0a1e38ba 	beq	78fa18 <__Stack_Size+0x78f618>
    172c:	3f000000 	svccc	0x00000000
    1730:	00000393 	muleq	r0, r3, r3
    1734:	0114ad03 	tsteq	r4, r3, lsl #26
    1738:	00129403 	andseq	r9, r2, r3, lsl #8
    173c:	06e64100 	strbteq	r4, [r6], r0, lsl #2
    1740:	ad030000 	stcge	0, cr0, [r3, #-0]
    1744:	00004129 	andeq	r4, r0, r9, lsr #2
    1748:	75624000 	strbvc	r4, [r2, #-0]!
    174c:	ad030066 	stcge	0, cr0, [r3, #-408]	; 0xfffffe68
    1750:	0008983f 	andeq	r9, r8, pc, lsr r8
    1754:	0c4c4100 	stfeqe	f4, [ip], {-0}
    1758:	ad030000 	stcge	0, cr0, [r3, #-0]
    175c:	00005e4d 	andeq	r5, r0, sp, asr #28
    1760:	b34e0000 	movtlt	r0, #57344	; 0xe000
    1764:	02000003 	andeq	r0, r0, #3
    1768:	011605de 			; <UNDEFINED> instruction: 0x011605de
    176c:	0012b103 	andseq	fp, r2, r3, lsl #2
    1770:	03074f00 	movweq	r4, #32512	; 0x7f00
    1774:	de020000 	cdple	0, 0, cr0, cr2, cr0, {0}
    1778:	026e2f05 	rsbeq	r2, lr, #5, 30
    177c:	50000000 	andpl	r0, r0, r0
    1780:	0000122c 	andeq	r1, r0, ip, lsr #4
    1784:	080001de 	stmdaeq	r0, {r1, r2, r3, r4, r6, r7, r8}
    1788:	080001e0 	stmdaeq	r0, {r5, r6, r7, r8}
    178c:	01007d02 	tsteq	r0, r2, lsl #26
    1790:	ec010151 	stfs	f0, [r1], {81}	; 0x51
    1794:	ec000003 	stc	0, cr0, [r0], {3}
    1798:	03000003 	movweq	r0, #3
    179c:	07000639 	smladxeq	r0, r9, r6, r0
    17a0:	0200001c 	andeq	r0, r0, #28
    17a4:	00072600 	andeq	r2, r7, r0, lsl #12
    17a8:	18010400 	stmdane	r1, {sl}
    17ac:	0c000000 	stceq	0, cr0, [r0], {-0}
    17b0:	00000914 	andeq	r0, r0, r4, lsl r9
    17b4:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    17b8:	08000804 	stmdaeq	r0, {r2, fp}
    17bc:	08000c08 	stmdaeq	r0, {r3, sl, fp}
    17c0:	00000a0e 	andeq	r0, r0, lr, lsl #20
    17c4:	2f060102 	svccs	0x00060102
    17c8:	02000001 	andeq	r0, r0, #1
    17cc:	01cd0502 	biceq	r0, sp, r2, lsl #10
    17d0:	04020000 	streq	r0, [r2], #-0
    17d4:	00019b05 	andeq	r9, r1, r5, lsl #22
    17d8:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    17dc:	00000196 	muleq	r0, r6, r1
    17e0:	00017e03 	andeq	r7, r1, r3, lsl #28
    17e4:	182e0500 	stmdane	lr!, {r8, sl}
    17e8:	00000057 	andeq	r0, r0, r7, asr r0
    17ec:	00004104 	andeq	r4, r0, r4, lsl #2
    17f0:	00410500 	subeq	r0, r1, r0, lsl #10
    17f4:	01020000 	mrseq	r0, (UNDEF: 2)
    17f8:	00012d08 	andeq	r2, r1, r8, lsl #26
    17fc:	05a30300 	streq	r0, [r3, #768]!	; 0x300
    1800:	31050000 	mrscc	r0, (UNDEF: 5)
    1804:	00006f19 	andeq	r6, r0, r9, lsl pc
    1808:	005e0400 	subseq	r0, lr, r0, lsl #8
    180c:	02020000 	andeq	r0, r2, #0
    1810:	00010507 	andeq	r0, r1, r7, lsl #10
    1814:	01e30300 	mvneq	r0, r0, lsl #6
    1818:	34050000 	strcc	r0, [r5], #-0
    181c:	00008719 	andeq	r8, r0, r9, lsl r7
    1820:	00760400 	rsbseq	r0, r6, r0, lsl #8
    1824:	04020000 	streq	r0, [r2], #-0
    1828:	00016c07 	andeq	r6, r1, r7, lsl #24
    182c:	07080200 	streq	r0, [r8, -r0, lsl #4]
    1830:	00000167 	andeq	r0, r0, r7, ror #2
    1834:	69050406 	stmdbvs	r5, {r1, r2, sl}
    1838:	0400746e 	streq	r7, [r0], #-1134	; 0xfffffb92
    183c:	00000095 	muleq	r0, r5, r0
    1840:	71070402 	tstvc	r7, r2, lsl #8
    1844:	07000001 	streq	r0, [r0, -r1]
    1848:	091b0308 	ldmdbeq	fp, {r3, r8, r9}
    184c:	000000fd 	strdeq	r0, [r0], -sp
    1850:	0002a708 	andeq	sl, r2, r8, lsl #14
    1854:	0b1c0300 	bleq	70245c <__Stack_Size+0x70205c>
    1858:	00000041 	andeq	r0, r0, r1, asr #32
    185c:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
    1860:	000006a2 	andeq	r0, r0, r2, lsr #13
    1864:	410b1d03 	tstmi	fp, r3, lsl #26
    1868:	02000000 	andeq	r0, r0, #0
    186c:	2a080123 	bcs	201d00 <__Stack_Size+0x201900>
    1870:	03000003 	movweq	r0, #3
    1874:	005e0c1e 	subseq	r0, lr, lr, lsl ip
    1878:	23020000 	movwcs	r0, #8192	; 0x2000
    187c:	02430802 	subeq	r0, r3, #131072	; 0x20000
    1880:	1f030000 	svcne	0x00030000
    1884:	00005e0c 	andeq	r5, r0, ip, lsl #28
    1888:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    188c:	00067808 	andeq	r7, r6, r8, lsl #16
    1890:	0c200300 	stceq	3, cr0, [r0], #-0
    1894:	0000005e 	andeq	r0, r0, lr, asr r0
    1898:	00062302 	andeq	r2, r6, r2, lsl #6
    189c:	00071503 	andeq	r1, r7, r3, lsl #10
    18a0:	02210300 	eoreq	r0, r1, #0, 6
    18a4:	000000a8 	andeq	r0, r0, r8, lsr #1
    18a8:	25010509 	strcs	r0, [r1, #-1289]	; 0xfffffaf7
    18ac:	06000000 	streq	r0, [r0], -r0
    18b0:	02500158 	subseq	r0, r0, #88, 2
    18b4:	640a0000 	strvs	r0, [sl], #-0
    18b8:	72000006 	andvc	r0, r0, #6
    18bc:	0007f60a 	andeq	pc, r7, sl, lsl #12
    18c0:	310a7300 	mrscc	r7, (UNDEF: 58)
    18c4:	74000003 	strvc	r0, [r0], #-3
    18c8:	0005050a 	andeq	r0, r5, sl, lsl #10
    18cc:	4f0a7500 	svcmi	0x000a7500
    18d0:	76000007 	strvc	r0, [r0], -r7
    18d4:	0007960a 	andeq	r9, r7, sl, lsl #12
    18d8:	3d0a7b00 	vstrcc	d7, [sl, #-0]
    18dc:	7c000007 	stcvc	0, cr0, [r0], {7}
    18e0:	0003150a 	andeq	r1, r3, sl, lsl #10
    18e4:	d90a7e00 	stmdble	sl, {r9, sl, fp, ip, sp, lr}
    18e8:	7f000006 	svcvc	0x00000006
    18ec:	0004e10b 	andeq	lr, r4, fp, lsl #2
    18f0:	2d0b0000 	stccs	0, cr0, [fp, #-0]
    18f4:	01000005 	tsteq	r0, r5
    18f8:	0008410b 	andeq	r4, r8, fp, lsl #2
    18fc:	da0b0200 	ble	2c2104 <__Stack_Size+0x2c1d04>
    1900:	03000005 	movweq	r0, #5
    1904:	0002c20b 	andeq	ip, r2, fp, lsl #4
    1908:	210b0400 	tstcs	fp, r0, lsl #8
    190c:	05000003 	streq	r0, [r0, #-3]
    1910:	0002d70b 	andeq	sp, r2, fp, lsl #14
    1914:	970b0600 	strls	r0, [fp, -r0, lsl #12]
    1918:	07000006 	streq	r0, [r0, -r6]
    191c:	0004660b 	andeq	r6, r4, fp, lsl #12
    1920:	e40b0800 	str	r0, [fp], #-2048	; 0xfffff800
    1924:	09000007 	stmdbeq	r0, {r0, r1, r2}
    1928:	0005130b 	andeq	r1, r5, fp, lsl #6
    192c:	ba0b0a00 	blt	2c4134 <__Stack_Size+0x2c3d34>
    1930:	0b000004 	bleq	1948 <__Stack_Size+0x1548>
    1934:	0002880b 	andeq	r8, r2, fp, lsl #16
    1938:	560b0c00 	strpl	r0, [fp], -r0, lsl #24
    193c:	0d000005 	stceq	0, cr0, [r0, #-20]	; 0xffffffec
    1940:	0003a00b 	andeq	sl, r3, fp
    1944:	c20b0e00 	andgt	r0, fp, #0, 28
    1948:	0f000007 	svceq	0x00000007
    194c:	0004900b 	andeq	r9, r4, fp
    1950:	5e0b1000 	cdppl	0, 0, cr1, cr11, cr0, {0}
    1954:	11000002 	tstne	r0, r2
    1958:	00081f0b 	andeq	r1, r8, fp, lsl #30
    195c:	040b1200 	streq	r1, [fp], #-512	; 0xfffffe00
    1960:	13000004 	movwne	r0, #4
    1964:	00022e0b 	andeq	r2, r2, fp, lsl #28
    1968:	d40b1400 	strle	r1, [fp], #-1024	; 0xfffffc00
    196c:	15000003 	strne	r0, [r0, #-3]
    1970:	0002500b 	andeq	r5, r2, fp
    1974:	890b1600 	stmdbhi	fp, {r9, sl, ip}
    1978:	17000007 	strne	r0, [r0, -r7]
    197c:	0003710b 	andeq	r7, r3, fp, lsl #2
    1980:	b90b1800 	stmdblt	fp, {fp, ip}
    1984:	19000005 	stmdbne	r0, {r0, r2}
    1988:	0006ba0b 	andeq	fp, r6, fp, lsl #20
    198c:	800b1a00 	andhi	r1, fp, r0, lsl #20
    1990:	1b000006 	blne	19b0 <__Stack_Size+0x15b0>
    1994:	0006f40b 	andeq	pc, r6, fp, lsl #8
    1998:	b00b1c00 	andlt	r1, fp, r0, lsl #24
    199c:	1d000004 	stcne	0, cr0, [r0, #-16]
    19a0:	00027e0b 	andeq	r7, r2, fp, lsl #28
    19a4:	770b1e00 	strvc	r1, [fp, -r0, lsl #28]
    19a8:	1f000005 	svcne	0x00000005
    19ac:	0006cc0b 	andeq	ip, r6, fp, lsl #24
    19b0:	710b2000 	mrsvc	r2, (UNDEF: 11)
    19b4:	21000004 	tstcs	r0, r4
    19b8:	0002710b 	andeq	r7, r2, fp, lsl #2
    19bc:	880b2200 	stmdahi	fp, {r9, sp}
    19c0:	23000003 	movwcs	r0, #3
    19c4:	0007a70b 	andeq	sl, r7, fp, lsl #14
    19c8:	4c0b2400 	cfstrsmi	mvf2, [fp], {-0}
    19cc:	25000006 	strcs	r0, [r0, #-6]
    19d0:	00042b0b 	andeq	r2, r4, fp, lsl #22
    19d4:	350b2600 	strcc	r2, [fp, #-1536]	; 0xfffffa00
    19d8:	27000008 	strcs	r0, [r0, -r8]
    19dc:	0002fd0b 	andeq	pc, r2, fp, lsl #26
    19e0:	cb0b2800 	blgt	2cb9e8 <__Stack_Size+0x2cb5e8>
    19e4:	29000005 	stmdbcs	r0, {r0, r2}
    19e8:	0004d20b 	andeq	sp, r4, fp, lsl #4
    19ec:	03002a00 	movweq	r2, #2560	; 0xa00
    19f0:	00000418 	andeq	r0, r0, r8, lsl r4
    19f4:	09039006 	stmdbeq	r3, {r1, r2, ip, pc}
    19f8:	0c000001 	stceq	0, cr0, [r0], {1}
    19fc:	84040e04 	strhi	r0, [r4], #-3588	; 0xfffff1fc
    1a00:	00033409 	andeq	r3, r3, r9, lsl #8
    1a04:	03560800 	cmpeq	r6, #0, 16
    1a08:	86040000 	strhi	r0, [r4], -r0
    1a0c:	00034411 	andeq	r4, r3, r1, lsl r4
    1a10:	00230200 	eoreq	r0, r3, r0, lsl #4
    1a14:	0005e808 	andeq	lr, r5, r8, lsl #16
    1a18:	11870400 	orrne	r0, r7, r0, lsl #8
    1a1c:	00000349 	andeq	r0, r0, r9, asr #6
    1a20:	08202302 	stmdaeq	r0!, {r1, r8, r9, sp}
    1a24:	000007a2 	andeq	r0, r0, r2, lsr #15
    1a28:	44118804 	ldrmi	r8, [r1], #-2052	; 0xfffff7fc
    1a2c:	03000003 	movweq	r0, #3
    1a30:	08018023 	stmdaeq	r1, {r0, r1, r5, pc}
    1a34:	0000037f 	andeq	r0, r0, pc, ror r3
    1a38:	49118904 	ldmdbmi	r1, {r2, r8, fp, pc}
    1a3c:	03000003 	movweq	r0, #3
    1a40:	0801a023 	stmdaeq	r1, {r0, r1, r5, sp, pc}
    1a44:	00000805 	andeq	r0, r0, r5, lsl #16
    1a48:	44118a04 	ldrmi	r8, [r1], #-2564	; 0xfffff5fc
    1a4c:	03000003 	movweq	r0, #3
    1a50:	08028023 	stmdaeq	r2, {r0, r1, r5, pc}
    1a54:	000005fc 	strdeq	r0, [r0], -ip
    1a58:	49118b04 	ldmdbmi	r1, {r2, r8, r9, fp, pc}
    1a5c:	03000003 	movweq	r0, #3
    1a60:	0802a023 	stmdaeq	r2, {r0, r1, r5, sp, pc}
    1a64:	0000054c 	andeq	r0, r0, ip, asr #10
    1a68:	44118c04 	ldrmi	r8, [r1], #-3076	; 0xfffff3fc
    1a6c:	03000003 	movweq	r0, #3
    1a70:	08038023 	stmdaeq	r3, {r0, r1, r5, pc}
    1a74:	00000606 	andeq	r0, r0, r6, lsl #12
    1a78:	49118d04 	ldmdbmi	r1, {r2, r8, sl, fp, pc}
    1a7c:	03000003 	movweq	r0, #3
    1a80:	0803a023 	stmdaeq	r3, {r0, r1, r5, sp, pc}
    1a84:	000007b1 			; <UNDEFINED> instruction: 0x000007b1
    1a88:	44118e04 	ldrmi	r8, [r1], #-3588	; 0xfffff1fc
    1a8c:	03000003 	movweq	r0, #3
    1a90:	08048023 	stmdaeq	r4, {r0, r1, r5, pc}
    1a94:	00000610 	andeq	r0, r0, r0, lsl r6
    1a98:	59118f04 	ldmdbpl	r1, {r2, r8, r9, sl, fp, pc}
    1a9c:	03000003 	movweq	r0, #3
    1aa0:	0d04a023 	stceq	0, cr10, [r4, #-140]	; 0xffffff74
    1aa4:	04005049 	streq	r5, [r0], #-73	; 0xffffffb7
    1aa8:	03791190 	cmneq	r9, #144, 2	; 0x24
    1aac:	23030000 	movwcs	r0, #12288	; 0x3000
    1ab0:	1a080680 	bne	2034b8 <__Stack_Size+0x2030b8>
    1ab4:	04000006 	streq	r0, [r0], #-6
    1ab8:	037e1191 	cmneq	lr, #1073741860	; 0x40000024
    1abc:	23030000 	movwcs	r0, #12288	; 0x3000
    1ac0:	c60807f0 			; <UNDEFINED> instruction: 0xc60807f0
    1ac4:	04000005 	streq	r0, [r0], #-5
    1ac8:	00821192 	umulleq	r1, r2, r2, r1
    1acc:	23030000 	movwcs	r0, #12288	; 0x3000
    1ad0:	0e001c80 	cdpeq	12, 0, cr1, cr0, cr0, {4}
    1ad4:	00000082 	andeq	r0, r0, r2, lsl #1
    1ad8:	00000344 	andeq	r0, r0, r4, asr #6
    1adc:	0000a10f 	andeq	sl, r0, pc, lsl #2
    1ae0:	04000700 	streq	r0, [r0], #-1792	; 0xfffff900
    1ae4:	00000334 	andeq	r0, r0, r4, lsr r3
    1ae8:	0000760e 	andeq	r7, r0, lr, lsl #12
    1aec:	00035900 	andeq	r5, r3, r0, lsl #18
    1af0:	00a10f00 	adceq	r0, r1, r0, lsl #30
    1af4:	00170000 	andseq	r0, r7, r0
    1af8:	0000760e 	andeq	r7, r0, lr, lsl #12
    1afc:	00036900 	andeq	r6, r3, r0, lsl #18
    1b00:	00a10f00 	adceq	r0, r1, r0, lsl #30
    1b04:	00370000 	eorseq	r0, r7, r0
    1b08:	00004d0e 	andeq	r4, r0, lr, lsl #26
    1b0c:	00037900 	andeq	r7, r3, r0, lsl #18
    1b10:	00a10f00 	adceq	r0, r1, r0, lsl #30
    1b14:	00ef0000 	rsceq	r0, pc, r0
    1b18:	00036904 	andeq	r6, r3, r4, lsl #18
    1b1c:	00760e00 	rsbseq	r0, r6, r0, lsl #28
    1b20:	038f0000 	orreq	r0, pc, #0
    1b24:	a1100000 	tstge	r0, r0
    1b28:	83000000 	movwhi	r0, #0
    1b2c:	ab030002 	blge	c1b3c <__Stack_Size+0xc173c>
    1b30:	04000006 	streq	r0, [r0], #-6
    1b34:	025c0493 	subseq	r0, ip, #-1828716544	; 0x93000000
    1b38:	18110000 	ldmdane	r1, {}	; <UNPREDICTABLE>
    1b3c:	04000001 	streq	r0, [r0], #-1
    1b40:	9c1506ce 	ldcls	6, cr0, [r5], {206}	; 0xce
    1b44:	01000000 	mrseq	r0, (UNDEF: 0)
    1b48:	01a41201 			; <UNDEFINED> instruction: 0x01a41201
    1b4c:	45070000 	strmi	r0, [r7, #-0]
    1b50:	00007611 	andeq	r7, r0, r1, lsl r6
    1b54:	0e010100 	adfeqs	f0, f1, f0
    1b58:	00000052 	andeq	r0, r0, r2, asr r0
    1b5c:	000003c8 	andeq	r0, r0, r8, asr #7
    1b60:	0000a10f 	andeq	sl, r0, pc, lsl #2
    1b64:	05000f00 	streq	r0, [r0, #-3840]	; 0xfffff100
    1b68:	000003b8 			; <UNDEFINED> instruction: 0x000003b8
    1b6c:	0000f712 	andeq	pc, r0, r2, lsl r7	; <UNPREDICTABLE>
    1b70:	17460700 	strbne	r0, [r6, -r0, lsl #14]
    1b74:	000003c8 	andeq	r0, r0, r8, asr #7
    1b78:	520e0101 	andpl	r0, lr, #1073741824	; 0x40000000
    1b7c:	eb000000 	bl	1b84 <__Stack_Size+0x1784>
    1b80:	0f000003 	svceq	0x00000003
    1b84:	000000a1 	andeq	r0, r0, r1, lsr #1
    1b88:	db050007 	blle	141bac <__Stack_Size+0x1417ac>
    1b8c:	12000003 	andne	r0, r0, #3
    1b90:	000001bf 			; <UNDEFINED> instruction: 0x000001bf
    1b94:	eb174707 	bl	5d37b8 <__Stack_Size+0x5d33b8>
    1b98:	01000003 	tsteq	r0, r3
    1b9c:	061c1301 	ldreq	r1, [ip], -r1, lsl #6
    1ba0:	79090179 	stmdbvc	r9, {r0, r3, r4, r5, r6, r8}
    1ba4:	14000004 	strne	r0, [r0], #-4
    1ba8:	004c5243 	subeq	r5, ip, r3, asr #4
    1bac:	11017b06 	tstne	r1, r6, lsl #22
    1bb0:	00000082 	andeq	r0, r0, r2, lsl #1
    1bb4:	14002302 	strne	r2, [r0], #-770	; 0xfffffcfe
    1bb8:	00485243 	subeq	r5, r8, r3, asr #4
    1bbc:	11017c06 	tstne	r1, r6, lsl #24
    1bc0:	00000082 	andeq	r0, r0, r2, lsl #1
    1bc4:	14042302 	strne	r2, [r4], #-770	; 0xfffffcfe
    1bc8:	00524449 	subseq	r4, r2, r9, asr #8
    1bcc:	11017d06 	tstne	r1, r6, lsl #26
    1bd0:	00000082 	andeq	r0, r0, r2, lsl #1
    1bd4:	14082302 	strne	r2, [r8], #-770	; 0xfffffcfe
    1bd8:	0052444f 	subseq	r4, r2, pc, asr #8
    1bdc:	11017e06 	tstne	r1, r6, lsl #28
    1be0:	00000082 	andeq	r0, r0, r2, lsl #1
    1be4:	150c2302 	strne	r2, [ip, #-770]	; 0xfffffcfe
    1be8:	000000ba 	strheq	r0, [r0], -sl
    1bec:	11017f06 	tstne	r1, r6, lsl #30
    1bf0:	00000082 	andeq	r0, r0, r2, lsl #1
    1bf4:	14102302 	ldrne	r2, [r0], #-770	; 0xfffffcfe
    1bf8:	00525242 	subseq	r5, r2, r2, asr #4
    1bfc:	11018006 	tstne	r1, r6
    1c00:	00000082 	andeq	r0, r0, r2, lsl #1
    1c04:	15142302 	ldrne	r2, [r4, #-770]	; 0xfffffcfe
    1c08:	00000229 	andeq	r0, r0, r9, lsr #4
    1c0c:	11018106 	tstne	r1, r6, lsl #2
    1c10:	00000082 	andeq	r0, r0, r2, lsl #1
    1c14:	00182302 	andseq	r2, r8, r2, lsl #6
    1c18:	0000e116 	andeq	lr, r0, r6, lsl r1
    1c1c:	01820600 	orreq	r0, r2, r0, lsl #12
    1c20:	0003fe03 	andeq	pc, r3, r3, lsl #28
    1c24:	06281300 	strteq	r1, [r8], -r0, lsl #6
    1c28:	300901bb 			; <UNDEFINED> instruction: 0x300901bb
    1c2c:	14000005 	strne	r0, [r0], #-5
    1c30:	06005243 	streq	r5, [r0], -r3, asr #4
    1c34:	821101bd 	andshi	r0, r1, #1073741871	; 0x4000002f
    1c38:	02000000 	andeq	r0, r0, #0
    1c3c:	05150023 	ldreq	r0, [r5, #-35]	; 0xffffffdd
    1c40:	06000000 	streq	r0, [r0], -r0
    1c44:	821101be 	andshi	r0, r1, #-2147483601	; 0x8000002f
    1c48:	02000000 	andeq	r0, r0, #0
    1c4c:	43140423 	tstmi	r4, #587202560	; 0x23000000
    1c50:	06005249 	streq	r5, [r0], -r9, asr #4
    1c54:	821101bf 	andshi	r0, r1, #-1073741777	; 0xc000002f
    1c58:	02000000 	andeq	r0, r0, #0
    1c5c:	59150823 	ldmdbpl	r5, {r0, r1, r5, fp}
    1c60:	06000001 	streq	r0, [r0], -r1
    1c64:	821101c0 	andshi	r0, r1, #192, 2	; 0x30
    1c68:	02000000 	andeq	r0, r0, #0
    1c6c:	ee150c23 	cdp	12, 1, cr0, cr5, cr3, {1}
    1c70:	06000000 	streq	r0, [r0], -r0
    1c74:	821101c1 	andshi	r0, r1, #1073741872	; 0x40000030
    1c78:	02000000 	andeq	r0, r0, #0
    1c7c:	bf151023 	svclt	0x00151023
    1c80:	06000000 	streq	r0, [r0], -r0
    1c84:	821101c2 	andshi	r0, r1, #-2147483600	; 0x80000030
    1c88:	02000000 	andeq	r0, r0, #0
    1c8c:	44151423 	ldrmi	r1, [r5], #-1059	; 0xfffffbdd
    1c90:	06000001 	streq	r0, [r0], -r1
    1c94:	821101c3 	andshi	r0, r1, #-1073741776	; 0xc0000030
    1c98:	02000000 	andeq	r0, r0, #0
    1c9c:	51151823 	tstpl	r5, r3, lsr #16
    1ca0:	06000001 	streq	r0, [r0], -r1
    1ca4:	821101c4 	andshi	r0, r1, #196, 2	; 0x31
    1ca8:	02000000 	andeq	r0, r0, #0
    1cac:	00151c23 	andseq	r1, r5, r3, lsr #24
    1cb0:	06000000 	streq	r0, [r0], -r0
    1cb4:	821101c5 	andshi	r0, r1, #1073741873	; 0x40000031
    1cb8:	02000000 	andeq	r0, r0, #0
    1cbc:	43142023 	tstmi	r4, #35	; 0x23
    1cc0:	06005253 			; <UNDEFINED> instruction: 0x06005253
    1cc4:	821101c6 	andshi	r0, r1, #-2147483599	; 0x80000031
    1cc8:	02000000 	andeq	r0, r0, #0
    1ccc:	16002423 	strne	r2, [r0], -r3, lsr #8
    1cd0:	000001d7 	ldrdeq	r0, [r0], -r7
    1cd4:	0301c906 	movweq	ip, #6406	; 0x1906
    1cd8:	00000486 	andeq	r0, r0, r6, lsl #9
    1cdc:	2a061c13 	bcs	188d30 <__Stack_Size+0x188930>
    1ce0:	05b60902 	ldreq	r0, [r6, #2306]!	; 0x902
    1ce4:	53140000 	tstpl	r4, #0
    1ce8:	2c060052 	stccs	0, cr0, [r6], {82}	; 0x52
    1cec:	00821102 	addeq	r1, r2, r2, lsl #2
    1cf0:	23020000 	movwcs	r0, #8192	; 0x2000
    1cf4:	52441400 	subpl	r1, r4, #0, 8
    1cf8:	022d0600 	eoreq	r0, sp, #0, 12
    1cfc:	00008211 	andeq	r8, r0, r1, lsl r2
    1d00:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    1d04:	52524214 	subspl	r4, r2, #20, 4	; 0x40000001
    1d08:	022e0600 	eoreq	r0, lr, #0, 12
    1d0c:	00008211 	andeq	r8, r0, r1, lsl r2
    1d10:	08230200 	stmdaeq	r3!, {r9}
    1d14:	31524314 	cmpcc	r2, r4, lsl r3
    1d18:	022f0600 	eoreq	r0, pc, #0, 12
    1d1c:	00008211 	andeq	r8, r0, r1, lsl r2
    1d20:	0c230200 	sfmeq	f0, 4, [r3], #-0
    1d24:	32524314 	subscc	r4, r2, #20, 6	; 0x50000000
    1d28:	02300600 	eorseq	r0, r0, #0, 12
    1d2c:	00008211 	andeq	r8, r0, r1, lsl r2
    1d30:	10230200 	eorne	r0, r3, r0, lsl #4
    1d34:	33524314 	cmpcc	r2, #20, 6	; 0x50000000
    1d38:	02310600 	eorseq	r0, r1, #0, 12
    1d3c:	00008211 	andeq	r8, r0, r1, lsl r2
    1d40:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    1d44:	00097915 	andeq	r7, r9, r5, lsl r9
    1d48:	02320600 	eorseq	r0, r2, #0, 12
    1d4c:	00008211 	andeq	r8, r0, r1, lsl r2
    1d50:	18230200 	stmdane	r3!, {r9}
    1d54:	0a3d1600 	beq	f4755c <__Stack_Size+0xf4715c>
    1d58:	33060000 	movwcc	r0, #24576	; 0x6000
    1d5c:	053d0302 	ldreq	r0, [sp, #-770]!	; 0xfffffcfe
    1d60:	54130000 	ldrpl	r0, [r3], #-0
    1d64:	09023906 	stmdbeq	r2, {r1, r2, r8, fp, ip, sp}
    1d68:	0000076e 	andeq	r0, r0, lr, ror #14
    1d6c:	00044515 	andeq	r4, r4, r5, lsl r5
    1d70:	023b0600 	eorseq	r0, fp, #0, 12
    1d74:	00006a11 	andeq	r6, r0, r1, lsl sl
    1d78:	00230200 	eoreq	r0, r3, r0, lsl #4
    1d7c:	0005e815 	andeq	lr, r5, r5, lsl r8
    1d80:	023c0600 	eorseq	r0, ip, #0, 12
    1d84:	00006a11 	andeq	r6, r0, r1, lsl sl
    1d88:	02230200 	eoreq	r0, r3, #0, 4
    1d8c:	00047e15 	andeq	r7, r4, r5, lsl lr
    1d90:	023d0600 	eorseq	r0, sp, #0, 12
    1d94:	00006a11 	andeq	r6, r0, r1, lsl sl
    1d98:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    1d9c:	0005f215 	andeq	pc, r5, r5, lsl r2	; <UNPREDICTABLE>
    1da0:	023e0600 	eorseq	r0, lr, #0, 12
    1da4:	00006a11 	andeq	r6, r0, r1, lsl sl
    1da8:	06230200 	strteq	r0, [r3], -r0, lsl #4
    1dac:	0004cd15 	andeq	ip, r4, r5, lsl sp
    1db0:	023f0600 	eorseq	r0, pc, #0, 12
    1db4:	00006a11 	andeq	r6, r0, r1, lsl sl
    1db8:	08230200 	stmdaeq	r3!, {r9}
    1dbc:	0005fc15 	andeq	pc, r5, r5, lsl ip	; <UNPREDICTABLE>
    1dc0:	02400600 	subeq	r0, r0, #0, 12
    1dc4:	00006a11 	andeq	r6, r0, r1, lsl sl
    1dc8:	0a230200 	beq	8c25d0 <__Stack_Size+0x8c21d0>
    1dcc:	00050015 	andeq	r0, r5, r5, lsl r0
    1dd0:	02410600 	subeq	r0, r1, #0, 12
    1dd4:	00006a11 	andeq	r6, r0, r1, lsl sl
    1dd8:	0c230200 	sfmeq	f0, 4, [r3], #-0
    1ddc:	00060615 	andeq	r0, r6, r5, lsl r6
    1de0:	02420600 	subeq	r0, r2, #0, 12
    1de4:	00006a11 	andeq	r6, r0, r1, lsl sl
    1de8:	0e230200 	cdpeq	2, 2, cr0, cr3, cr0, {0}
    1dec:	00055115 	andeq	r5, r5, r5, lsl r1
    1df0:	02430600 	subeq	r0, r3, #0, 12
    1df4:	00006a11 	andeq	r6, r0, r1, lsl sl
    1df8:	10230200 	eorne	r0, r3, r0, lsl #4
    1dfc:	00061015 	andeq	r1, r6, r5, lsl r0
    1e00:	02440600 	subeq	r0, r4, #0, 12
    1e04:	00006a11 	andeq	r6, r0, r1, lsl sl
    1e08:	12230200 	eorne	r0, r3, #0, 4
    1e0c:	0005e315 	andeq	lr, r5, r5, lsl r3
    1e10:	02450600 	subeq	r0, r5, #0, 12
    1e14:	00006a11 	andeq	r6, r0, r1, lsl sl
    1e18:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    1e1c:	00061a15 	andeq	r1, r6, r5, lsl sl
    1e20:	02460600 	subeq	r0, r6, #0, 12
    1e24:	00006a11 	andeq	r6, r0, r1, lsl sl
    1e28:	16230200 	strtne	r0, [r3], -r0, lsl #4
    1e2c:	00068d15 	andeq	r8, r6, r5, lsl sp
    1e30:	02470600 	subeq	r0, r7, #0, 12
    1e34:	00006a11 	andeq	r6, r0, r1, lsl sl
    1e38:	18230200 	stmdane	r3!, {r9}
    1e3c:	00062415 	andeq	r2, r6, r5, lsl r4
    1e40:	02480600 	subeq	r0, r8, #0, 12
    1e44:	00006a11 	andeq	r6, r0, r1, lsl sl
    1e48:	1a230200 	bne	8c2650 <__Stack_Size+0x8c2250>
    1e4c:	00071015 	andeq	r1, r7, r5, lsl r0
    1e50:	02490600 	subeq	r0, r9, #0, 12
    1e54:	00006a11 	andeq	r6, r0, r1, lsl sl
    1e58:	1c230200 	sfmne	f0, 4, [r3], #-0
    1e5c:	00082b15 	andeq	r2, r8, r5, lsl fp
    1e60:	024a0600 	subeq	r0, sl, #0, 12
    1e64:	00077e11 	andeq	r7, r7, r1, lsl lr
    1e68:	1e230200 	cdpne	2, 2, cr0, cr3, cr0, {0}
    1e6c:	0006b515 	andeq	fp, r6, r5, lsl r5
    1e70:	024b0600 	subeq	r0, fp, #0, 12
    1e74:	00006a11 	andeq	r6, r0, r1, lsl sl
    1e78:	40230200 	eormi	r0, r3, r0, lsl #4
    1e7c:	00062e15 	andeq	r2, r6, r5, lsl lr
    1e80:	024c0600 	subeq	r0, ip, #0, 12
    1e84:	00006a11 	andeq	r6, r0, r1, lsl sl
    1e88:	42230200 	eormi	r0, r3, #0, 4
    1e8c:	00035115 	andeq	r5, r3, r5, lsl r1
    1e90:	024d0600 	subeq	r0, sp, #0, 12
    1e94:	00006a11 	andeq	r6, r0, r1, lsl sl
    1e98:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
    1e9c:	00063815 	andeq	r3, r6, r5, lsl r8
    1ea0:	024e0600 	subeq	r0, lr, #0, 12
    1ea4:	00006a11 	andeq	r6, r0, r1, lsl sl
    1ea8:	46230200 	strtmi	r0, [r3], -r0, lsl #4
    1eac:	524e4614 	subpl	r4, lr, #20, 12	; 0x1400000
    1eb0:	024f0600 	subeq	r0, pc, #0, 12
    1eb4:	00006a11 	andeq	r6, r0, r1, lsl sl
    1eb8:	48230200 	stmdami	r3!, {r9}
    1ebc:	00064215 	andeq	r4, r6, r5, lsl r2
    1ec0:	02500600 	subseq	r0, r0, #0, 12
    1ec4:	00006a11 	andeq	r6, r0, r1, lsl sl
    1ec8:	4a230200 	bmi	8c26d0 <__Stack_Size+0x8c22d0>
    1ecc:	0003ce15 	andeq	ip, r3, r5, lsl lr
    1ed0:	02510600 	subseq	r0, r1, #0, 12
    1ed4:	00006a11 	andeq	r6, r0, r1, lsl sl
    1ed8:	4c230200 	sfmmi	f0, 4, [r3], #-0
    1edc:	0003e215 	andeq	lr, r3, r5, lsl r2
    1ee0:	02520600 	subseq	r0, r2, #0, 12
    1ee4:	00006a11 	andeq	r6, r0, r1, lsl sl
    1ee8:	4e230200 	cdpmi	2, 2, cr0, cr3, cr0, {0}
    1eec:	0007d515 	andeq	sp, r7, r5, lsl r5
    1ef0:	02530600 	subseq	r0, r3, #0, 12
    1ef4:	00006a11 	andeq	r6, r0, r1, lsl sl
    1ef8:	50230200 	eorpl	r0, r3, r0, lsl #4
    1efc:	00084d15 	andeq	r4, r8, r5, lsl sp
    1f00:	02540600 	subseq	r0, r4, #0, 12
    1f04:	00006a11 	andeq	r6, r0, r1, lsl sl
    1f08:	52230200 	eorpl	r0, r3, #0, 4
    1f0c:	006a0e00 	rsbeq	r0, sl, r0, lsl #28
    1f10:	077e0000 	ldrbeq	r0, [lr, -r0]!
    1f14:	a10f0000 	mrsge	r0, CPSR
    1f18:	10000000 	andne	r0, r0, r0
    1f1c:	076e0400 	strbeq	r0, [lr, -r0, lsl #8]!
    1f20:	c2160000 	andsgt	r0, r6, #0
    1f24:	06000003 	streq	r0, [r0], -r3
    1f28:	c3030255 	movwgt	r0, #12885	; 0x3255
    1f2c:	02000005 	andeq	r0, r0, #5
    1f30:	0b280408 	bleq	a02f58 <__Stack_Size+0xa02b58>
    1f34:	cf160000 	svcgt	0x00160000
    1f38:	0800000d 	stmdaeq	r0, {r0, r2, r3}
    1f3c:	a1170165 	tstge	r7, r5, ror #2
    1f40:	03000000 	movweq	r0, #0
    1f44:	00000d79 	andeq	r0, r0, r9, ror sp
    1f48:	330e2e09 	movwcc	r2, #60937	; 0xee09
    1f4c:	03000000 	movweq	r0, #0
    1f50:	0000090c 	andeq	r0, r0, ip, lsl #18
    1f54:	330e7409 	movwcc	r7, #58377	; 0xe409
    1f58:	17000000 	strne	r0, [r0, -r0]
    1f5c:	03a50904 			; <UNDEFINED> instruction: 0x03a50904
    1f60:	000007de 	ldrdeq	r0, [r0], -lr
    1f64:	000a9a18 	andeq	r9, sl, r8, lsl sl
    1f68:	0ca70900 			; <UNDEFINED> instruction: 0x0ca70900
    1f6c:	00000797 	muleq	r0, r7, r7
    1f70:	000bae18 	andeq	sl, fp, r8, lsl lr
    1f74:	13a80900 			; <UNDEFINED> instruction: 0x13a80900
    1f78:	000007de 	ldrdeq	r0, [r0], -lr
    1f7c:	00570e00 	subseq	r0, r7, r0, lsl #28
    1f80:	07ee0000 	strbeq	r0, [lr, r0]!
    1f84:	a10f0000 	mrsge	r0, CPSR
    1f88:	03000000 	movweq	r0, #0
    1f8c:	09080700 	stmdbeq	r8, {r8, r9, sl}
    1f90:	081609a2 	ldmdaeq	r6, {r1, r5, r7, r8, fp}
    1f94:	7e080000 	cdpvc	0, 0, cr0, cr8, cr0, {0}
    1f98:	09000009 	stmdbeq	r0, {r0, r3}
    1f9c:	009507a4 	addseq	r0, r5, r4, lsr #15
    1fa0:	23020000 	movwcs	r0, #8192	; 0x2000
    1fa4:	0a4b0800 	beq	12c3fac <__Stack_Size+0x12c3bac>
    1fa8:	a9090000 	stmdbge	r9, {}	; <UNPREDICTABLE>
    1fac:	0007bc05 	andeq	fp, r7, r5, lsl #24
    1fb0:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    1fb4:	0b1d0300 	bleq	742bbc <__Stack_Size+0x7427bc>
    1fb8:	aa090000 	bge	241fc0 <__Stack_Size+0x241bc0>
    1fbc:	0007ee03 	andeq	lr, r7, r3, lsl #28
    1fc0:	03041900 	movweq	r1, #18688	; 0x4900
    1fc4:	00000af6 	strdeq	r0, [r0], -r6
    1fc8:	8719160a 	ldrhi	r1, [r9, -sl, lsl #12]
    1fcc:	03000000 	movweq	r0, #0
    1fd0:	000008c6 	andeq	r0, r0, r6, asr #17
    1fd4:	950d0c0b 	strls	r0, [sp, #-3083]	; 0xfffff3f5
    1fd8:	03000000 	movweq	r0, #0
    1fdc:	00000a91 	muleq	r0, r1, sl
    1fe0:	301b230a 	andscc	r2, fp, sl, lsl #6
    1fe4:	1a000008 	bne	200c <__Stack_Size+0x1c0c>
    1fe8:	00000b8d 	andeq	r0, r0, sp, lsl #23
    1fec:	08340a18 	ldmdaeq	r4!, {r3, r4, r9, fp}
    1ff0:	000008ae 	andeq	r0, r0, lr, lsr #17
    1ff4:	000db608 	andeq	fp, sp, r8, lsl #12
    1ff8:	13360a00 	teqne	r6, #0, 20
    1ffc:	000008ae 	andeq	r0, r0, lr, lsr #17
    2000:	0d002302 	stceq	3, cr2, [r0, #-8]
    2004:	0a006b5f 	beq	1cd88 <__Stack_Size+0x1c988>
    2008:	00950737 	addseq	r0, r5, r7, lsr r7
    200c:	23020000 	movwcs	r0, #8192	; 0x2000
    2010:	0c230804 	stceq	8, cr0, [r3], #-16
    2014:	370a0000 	strcc	r0, [sl, -r0]
    2018:	0000950b 	andeq	r9, r0, fp, lsl #10
    201c:	08230200 	stmdaeq	r3!, {r9}
    2020:	000ba208 	andeq	sl, fp, r8, lsl #4
    2024:	14370a00 	ldrtne	r0, [r7], #-2560	; 0xfffff600
    2028:	00000095 	muleq	r0, r5, r0
    202c:	080c2302 	stmdaeq	ip, {r1, r8, r9, sp}
    2030:	000009d2 	ldrdeq	r0, [r0], -r2
    2034:	951b370a 	ldrls	r3, [fp, #-1802]	; 0xfffff8f6
    2038:	02000000 	andeq	r0, r0, #0
    203c:	5f0d1023 	svcpl	0x000d1023
    2040:	380a0078 	stmdacc	sl, {r3, r4, r5, r6}
    2044:	0008b40b 	andeq	fp, r8, fp, lsl #8
    2048:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    204c:	48041b00 	stmdami	r4, {r8, r9, fp, ip}
    2050:	0e000008 	cdpeq	0, 0, cr0, cr0, cr8, {0}
    2054:	00000824 	andeq	r0, r0, r4, lsr #16
    2058:	000008c4 	andeq	r0, r0, r4, asr #17
    205c:	0000a10f 	andeq	sl, r0, pc, lsl #2
    2060:	1a000000 	bne	2068 <__Stack_Size+0x1c68>
    2064:	00000c3e 	andeq	r0, r0, lr, lsr ip
    2068:	083c0a24 	ldmdaeq	ip!, {r2, r5, r9, fp}
    206c:	00000959 	andeq	r0, r0, r9, asr r9
    2070:	0009f708 	andeq	pc, r9, r8, lsl #14
    2074:	093e0a00 	ldmdbeq	lr!, {r9, fp}
    2078:	00000095 	muleq	r0, r5, r0
    207c:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
    2080:	00000986 	andeq	r0, r0, r6, lsl #19
    2084:	95093f0a 	strls	r3, [r9, #-3850]	; 0xfffff0f6
    2088:	02000000 	andeq	r0, r0, #0
    208c:	6f080423 	svcvs	0x00080423
    2090:	0a000009 	beq	20bc <__Stack_Size+0x1cbc>
    2094:	00950940 	addseq	r0, r5, r0, asr #18
    2098:	23020000 	movwcs	r0, #8192	; 0x2000
    209c:	0a650808 	beq	19440c4 <__Stack_Size+0x1943cc4>
    20a0:	410a0000 	mrsmi	r0, (UNDEF: 10)
    20a4:	00009509 	andeq	r9, r0, r9, lsl #10
    20a8:	0c230200 	sfmeq	f0, 4, [r3], #-0
    20ac:	000b6b08 	andeq	r6, fp, r8, lsl #22
    20b0:	09420a00 	stmdbeq	r2, {r9, fp}^
    20b4:	00000095 	muleq	r0, r5, r0
    20b8:	08102302 	ldmdaeq	r0, {r1, r8, r9, sp}
    20bc:	00000b7b 	andeq	r0, r0, fp, ror fp
    20c0:	9509430a 	strls	r4, [r9, #-778]	; 0xfffffcf6
    20c4:	02000000 	andeq	r0, r0, #0
    20c8:	4d081423 	cfstrsmi	mvf1, [r8, #-140]	; 0xffffff74
    20cc:	0a000009 	beq	20f8 <__Stack_Size+0x1cf8>
    20d0:	00950944 	addseq	r0, r5, r4, asr #18
    20d4:	23020000 	movwcs	r0, #8192	; 0x2000
    20d8:	0a000818 	beq	4140 <__Stack_Size+0x3d40>
    20dc:	450a0000 	strmi	r0, [sl, #-0]
    20e0:	00009509 	andeq	r9, r0, r9, lsl #10
    20e4:	1c230200 	sfmne	f0, 4, [r3], #-0
    20e8:	000b3408 	andeq	r3, fp, r8, lsl #8
    20ec:	09460a00 	stmdbeq	r6, {r9, fp}^
    20f0:	00000095 	muleq	r0, r5, r0
    20f4:	00202302 	eoreq	r2, r0, r2, lsl #6
    20f8:	00085e1c 	andeq	r5, r8, ip, lsl lr
    20fc:	0a010800 	beq	44104 <__Stack_Size+0x43d04>
    2100:	09a7084f 	stmibeq	r7!, {r0, r1, r2, r3, r6, fp}
    2104:	3d080000 	stccc	0, cr0, [r8, #-0]
    2108:	0a00000d 	beq	2144 <__Stack_Size+0x1d44>
    210c:	09a70a50 	stmibeq	r7!, {r4, r6, r9, fp}
    2110:	23020000 	movwcs	r0, #8192	; 0x2000
    2114:	0c810800 	stceq	8, cr0, [r1], {0}
    2118:	510a0000 	mrspl	r0, (UNDEF: 10)
    211c:	0009a709 	andeq	sl, r9, r9, lsl #14
    2120:	80230300 	eorhi	r0, r3, r0, lsl #6
    2124:	0d700801 	ldcleq	8, cr0, [r0, #-4]!
    2128:	530a0000 	movwpl	r0, #40960	; 0xa000
    212c:	0008240a 	andeq	r2, r8, sl, lsl #8
    2130:	80230300 	eorhi	r0, r3, r0, lsl #6
    2134:	0da30802 	stceq	8, cr0, [r3, #8]!
    2138:	560a0000 	strpl	r0, [sl], -r0
    213c:	0008240a 	andeq	r2, r8, sl, lsl #8
    2140:	84230300 	strthi	r0, [r3], #-768	; 0xfffffd00
    2144:	220e0002 	andcs	r0, lr, #2
    2148:	b7000008 	strlt	r0, [r0, -r8]
    214c:	0f000009 	svceq	0x00000009
    2150:	000000a1 	andeq	r0, r0, r1, lsr #1
    2154:	851c001f 	ldrhi	r0, [ip, #-31]	; 0xffffffe1
    2158:	9000000b 	andls	r0, r0, fp
    215c:	08620a01 	stmdaeq	r2!, {r0, r9, fp}^
    2160:	00000a03 	andeq	r0, r0, r3, lsl #20
    2164:	000db608 	andeq	fp, sp, r8, lsl #12
    2168:	12630a00 	rsbne	r0, r3, #0, 20
    216c:	00000a03 	andeq	r0, r0, r3, lsl #20
    2170:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
    2174:	00000b5b 	andeq	r0, r0, fp, asr fp
    2178:	9506640a 	strls	r6, [r6, #-1034]	; 0xfffffbf6
    217c:	02000000 	andeq	r0, r0, #0
    2180:	28080423 	stmdacs	r8, {r0, r1, r5, sl}
    2184:	0a000009 	beq	21b0 <__Stack_Size+0x1db0>
    2188:	0a090966 	beq	244728 <__Stack_Size+0x244328>
    218c:	23020000 	movwcs	r0, #8192	; 0x2000
    2190:	085e0808 	ldmdaeq	lr, {r3, fp}^
    2194:	670a0000 	strvs	r0, [sl, -r0]
    2198:	0009591e 	andeq	r5, r9, lr, lsl r9
    219c:	88230300 	stmdahi	r3!, {r8, r9}
    21a0:	041b0001 	ldreq	r0, [fp], #-1
    21a4:	000009b7 			; <UNDEFINED> instruction: 0x000009b7
    21a8:	000a190e 	andeq	r1, sl, lr, lsl #18
    21ac:	000a1900 	andeq	r1, sl, r0, lsl #18
    21b0:	00a10f00 	adceq	r0, r1, r0, lsl #30
    21b4:	001f0000 	andseq	r0, pc, r0
    21b8:	0a1f041b 	beq	7c322c <__Stack_Size+0x7c2e2c>
    21bc:	011d0000 	tsteq	sp, r0
    21c0:	000b741a 	andeq	r7, fp, sl, lsl r4
    21c4:	7a0a0800 	bvc	2841cc <__Stack_Size+0x283dcc>
    21c8:	000a4d08 	andeq	r4, sl, r8, lsl #26
    21cc:	0ace0800 	beq	ff3841d4 <BootRAM+0xe2f4975>
    21d0:	7b0a0000 	blvc	2821d8 <__Stack_Size+0x281dd8>
    21d4:	000a4d11 	andeq	r4, sl, r1, lsl sp
    21d8:	00230200 	eoreq	r0, r3, r0, lsl #4
    21dc:	000c4b08 	andeq	r4, ip, r8, lsl #22
    21e0:	067c0a00 	ldrbteq	r0, [ip], -r0, lsl #20
    21e4:	00000095 	muleq	r0, r5, r0
    21e8:	00042302 	andeq	r2, r4, r2, lsl #6
    21ec:	0057041b 	subseq	r0, r7, fp, lsl r4
    21f0:	ca1a0000 	bgt	6821f8 <__Stack_Size+0x681df8>
    21f4:	68000009 	stmdavs	r0, {r0, r3}
    21f8:	c608ba0a 	strgt	fp, [r8], -sl, lsl #20
    21fc:	0d00000b 	stceq	0, cr0, [r0, #-44]	; 0xffffffd4
    2200:	0a00705f 	beq	1e384 <__Stack_Size+0x1df84>
    2204:	0a4d12bb 	beq	1346cf8 <__Stack_Size+0x13468f8>
    2208:	23020000 	movwcs	r0, #8192	; 0x2000
    220c:	725f0d00 	subsvc	r0, pc, #0, 26
    2210:	07bc0a00 	ldreq	r0, [ip, r0, lsl #20]!
    2214:	00000095 	muleq	r0, r5, r0
    2218:	0d042302 	stceq	3, cr2, [r4, #-8]
    221c:	0a00775f 	beq	1ffa0 <__Stack_Size+0x1fba0>
    2220:	009507bd 			; <UNDEFINED> instruction: 0x009507bd
    2224:	23020000 	movwcs	r0, #8192	; 0x2000
    2228:	08b60808 	ldmeq	r6!, {r3, fp}
    222c:	be0a0000 	cdplt	0, 0, cr0, cr10, cr0, {0}
    2230:	00002c09 	andeq	r2, r0, r9, lsl #24
    2234:	0c230200 	sfmeq	f0, 4, [r3], #-0
    2238:	000b0d08 	andeq	r0, fp, r8, lsl #26
    223c:	09bf0a00 	ldmibeq	pc!, {r9, fp}	; <UNPREDICTABLE>
    2240:	0000002c 	andeq	r0, r0, ip, lsr #32
    2244:	0d0e2302 	stceq	3, cr2, [lr, #-8]
    2248:	0066625f 	rsbeq	r6, r6, pc, asr r2
    224c:	2111c00a 	tstcs	r1, sl
    2250:	0200000a 	andeq	r0, r0, #10
    2254:	ad081023 	stcge	0, cr1, [r8, #-140]	; 0xffffff74
    2258:	0a000008 	beq	2280 <__Stack_Size+0x1e80>
    225c:	009507c1 	addseq	r0, r5, r1, asr #15
    2260:	23020000 	movwcs	r0, #8192	; 0x2000
    2264:	092d0818 	pusheq	{r3, r4, fp}
    2268:	c80a0000 	stmdagt	sl, {}	; <UNPREDICTABLE>
    226c:	0008220a 	andeq	r2, r8, sl, lsl #4
    2270:	1c230200 	sfmne	f0, 4, [r3], #-0
    2274:	000b4408 	andeq	r4, fp, r8, lsl #8
    2278:	1dca0a00 	vstrne	s1, [sl]
    227c:	00000d7c 	andeq	r0, r0, ip, ror sp
    2280:	08202302 	stmdaeq	r0!, {r1, r8, r9, sp}
    2284:	0000088d 	andeq	r0, r0, sp, lsl #17
    2288:	a71dcc0a 	ldrge	ip, [sp, -sl, lsl #24]
    228c:	0200000d 	andeq	r0, r0, #13
    2290:	e0082423 	and	r2, r8, r3, lsr #8
    2294:	0a000009 	beq	22c0 <__Stack_Size+0x1ec0>
    2298:	0dcc0dcf 	stcleq	13, cr0, [ip, #828]	; 0x33c
    229c:	23020000 	movwcs	r0, #8192	; 0x2000
    22a0:	0aa60828 	beq	fe984348 <BootRAM+0xd8f4ae9>
    22a4:	d00a0000 	andle	r0, sl, r0
    22a8:	000de709 	andeq	lr, sp, r9, lsl #14
    22ac:	2c230200 	sfmcs	f0, 4, [r3], #-0
    22b0:	62755f0d 	rsbsvs	r5, r5, #13, 30	; 0x34
    22b4:	11d30a00 	bicsne	r0, r3, r0, lsl #20
    22b8:	00000a21 	andeq	r0, r0, r1, lsr #20
    22bc:	0d302302 	ldceq	3, cr2, [r0, #-8]!
    22c0:	0070755f 	rsbseq	r7, r0, pc, asr r5
    22c4:	4d12d40a 	cfldrsmi	mvf13, [r2, #-40]	; 0xffffffd8
    22c8:	0200000a 	andeq	r0, r0, #10
    22cc:	5f0d3823 	svcpl	0x000d3823
    22d0:	0a007275 	beq	1ecac <__Stack_Size+0x1e8ac>
    22d4:	009507d5 			; <UNDEFINED> instruction: 0x009507d5
    22d8:	23020000 	movwcs	r0, #8192	; 0x2000
    22dc:	09e6083c 	stmibeq	r6!, {r2, r3, r4, r5, fp}^
    22e0:	d80a0000 	stmdale	sl, {}	; <UNPREDICTABLE>
    22e4:	000ded11 	andeq	lr, sp, r1, lsl sp
    22e8:	40230200 	eormi	r0, r3, r0, lsl #4
    22ec:	000d8008 	andeq	r8, sp, r8
    22f0:	11d90a00 	bicsne	r0, r9, r0, lsl #20
    22f4:	00000dfd 	strdeq	r0, [r0], -sp
    22f8:	0d432302 	stcleq	3, cr2, [r3, #-8]
    22fc:	00626c5f 	rsbeq	r6, r2, pc, asr ip
    2300:	2111dc0a 	tstcs	r1, sl, lsl #24
    2304:	0200000a 	andeq	r0, r0, #10
    2308:	35084423 	strcc	r4, [r8, #-1059]	; 0xfffffbdd
    230c:	0a00000c 	beq	2344 <__Stack_Size+0x1f44>
    2310:	009507df 			; <UNDEFINED> instruction: 0x009507df
    2314:	23020000 	movwcs	r0, #8192	; 0x2000
    2318:	0bc8084c 	bleq	ff204450 <BootRAM+0xe174bf1>
    231c:	e00a0000 	and	r0, sl, r0
    2320:	0007a40a 	andeq	sl, r7, sl, lsl #8
    2324:	50230200 	eorpl	r0, r3, r0, lsl #4
    2328:	000ba808 	andeq	sl, fp, r8, lsl #16
    232c:	12e30a00 	rscne	r0, r3, #0, 20
    2330:	00000be5 	andeq	r0, r0, r5, ror #23
    2334:	08542302 	ldmdaeq	r4, {r1, r8, r9, sp}^
    2338:	00000c51 	andeq	r0, r0, r1, asr ip
    233c:	3c0ce70a 	stccc	7, cr14, [ip], {10}
    2340:	02000008 	andeq	r0, r0, #8
    2344:	44085823 	strmi	r5, [r8], #-2083	; 0xfffff7dd
    2348:	0a000009 	beq	2374 <__Stack_Size+0x1f74>
    234c:	08160ee9 	ldmdaeq	r6, {r0, r3, r5, r6, r7, r9, sl, fp}
    2350:	23020000 	movwcs	r0, #8192	; 0x2000
    2354:	0d9b085c 	ldceq	8, cr0, [fp, #368]	; 0x170
    2358:	ea0a0000 	b	282360 <__Stack_Size+0x281f60>
    235c:	00009509 	andeq	r9, r0, r9, lsl #10
    2360:	64230200 	strtvs	r0, [r3], #-512	; 0xfffffe00
    2364:	95011e00 	strls	r1, [r1, #-3584]	; 0xfffff200
    2368:	e5000000 	str	r0, [r0, #-0]
    236c:	1f00000b 	svcne	0x0000000b
    2370:	00000be5 	andeq	r0, r0, r5, ror #23
    2374:	0008221f 	andeq	r2, r8, pc, lsl r2
    2378:	0d651f00 	stcleq	15, cr1, [r5, #-0]
    237c:	951f0000 	ldrls	r0, [pc, #-0]	; 2384 <__Stack_Size+0x1f84>
    2380:	00000000 	andeq	r0, r0, r0
    2384:	0bf0041b 	bleq	ffc033f8 <BootRAM+0xeb73b99>
    2388:	e5050000 	str	r0, [r5, #-0]
    238c:	2000000b 	andcs	r0, r0, fp
    2390:	00000d50 	andeq	r0, r0, r0, asr sp
    2394:	650a0428 	strvs	r0, [sl, #-1064]	; 0xfffffbd8
    2398:	0d650802 	stcleq	8, cr0, [r5, #-8]!
    239c:	d9150000 	ldmdble	r5, {}	; <UNPREDICTABLE>
    23a0:	0a000009 	beq	23cc <__Stack_Size+0x1fcc>
    23a4:	95070267 	strls	r0, [r7, #-615]	; 0xfffffd99
    23a8:	02000000 	andeq	r0, r0, #0
    23ac:	b8150023 	ldmdalt	r5, {r0, r1, r5}
    23b0:	0a00000a 	beq	23e0 <__Stack_Size+0x1fe0>
    23b4:	5f0b026c 	svcpl	0x000b026c
    23b8:	0200000e 	andeq	r0, r0, #14
    23bc:	04150423 	ldreq	r0, [r5], #-1059	; 0xfffffbdd
    23c0:	0a000009 	beq	23ec <__Stack_Size+0x1fec>
    23c4:	5f14026c 	svcpl	0x0014026c
    23c8:	0200000e 	andeq	r0, r0, #14
    23cc:	c7150823 	ldrgt	r0, [r5, -r3, lsr #16]
    23d0:	0a00000d 	beq	240c <__Stack_Size+0x200c>
    23d4:	5f1e026c 	svcpl	0x001e026c
    23d8:	0200000e 	andeq	r0, r0, #14
    23dc:	0a150c23 	beq	545470 <__Stack_Size+0x545070>
    23e0:	0a00000a 	beq	2410 <__Stack_Size+0x2010>
    23e4:	9508026e 	strls	r0, [r8, #-622]	; 0xfffffd92
    23e8:	02000000 	andeq	r0, r0, #0
    23ec:	ec151023 	ldc	0, cr1, [r5], {35}	; 0x23
    23f0:	0a000009 	beq	241c <__Stack_Size+0x201c>
    23f4:	9808026f 	stmdals	r8, {r0, r1, r2, r3, r5, r6, r9}
    23f8:	02000010 	andeq	r0, r0, #16
    23fc:	d8151423 	ldmdale	r5, {r0, r1, r5, sl, ip}
    2400:	0a000008 	beq	2428 <__Stack_Size+0x2028>
    2404:	95070272 	strls	r0, [r7, #-626]	; 0xfffffd8e
    2408:	02000000 	andeq	r0, r0, #0
    240c:	29153023 	ldmdbcs	r5, {r0, r1, r5, ip, sp}
    2410:	0a00000d 	beq	244c <__Stack_Size+0x204c>
    2414:	ae160273 	mrcge	2, 0, r0, cr6, cr3, {3}
    2418:	02000010 	andeq	r0, r0, #16
    241c:	ad153423 	cfldrsge	mvf3, [r5, #-140]	; 0xffffff74
    2420:	0a00000a 	beq	2450 <__Stack_Size+0x2050>
    2424:	95070275 	strls	r0, [r7, #-629]	; 0xfffffd8b
    2428:	02000000 	andeq	r0, r0, #0
    242c:	13153823 	tstne	r5, #2293760	; 0x230000
    2430:	0a00000b 	beq	2464 <__Stack_Size+0x2064>
    2434:	c00a0277 	andgt	r0, sl, r7, ror r2
    2438:	02000010 	andeq	r0, r0, #16
    243c:	60153c23 	andsvs	r3, r5, r3, lsr #24
    2440:	0a000009 	beq	246c <__Stack_Size+0x206c>
    2444:	ae13027a 	mrcge	2, 0, r0, cr3, cr10, {3}
    2448:	02000008 	andeq	r0, r0, #8
    244c:	9e154023 	cdpls	0, 1, cr4, cr5, cr3, {1}
    2450:	0a000009 	beq	247c <__Stack_Size+0x207c>
    2454:	9507027b 	strls	r0, [r7, #-635]	; 0xfffffd85
    2458:	02000000 	andeq	r0, r0, #0
    245c:	53154423 	tstpl	r5, #587202560	; 0x23000000
    2460:	0a00000a 	beq	2490 <__Stack_Size+0x2090>
    2464:	ae13027c 	mrcge	2, 0, r0, cr3, cr12, {3}
    2468:	02000008 	andeq	r0, r0, #8
    246c:	e6154823 	ldr	r4, [r5], -r3, lsr #16
    2470:	0a00000a 	beq	24a0 <__Stack_Size+0x20a0>
    2474:	c614027d 			; <UNDEFINED> instruction: 0xc614027d
    2478:	02000010 	andeq	r0, r0, #16
    247c:	1b154c23 	blne	555510 <__Stack_Size+0x555110>
    2480:	0a00000c 	beq	24b8 <__Stack_Size+0x20b8>
    2484:	95070280 	strls	r0, [r7, #-640]	; 0xfffffd80
    2488:	02000000 	andeq	r0, r0, #0
    248c:	8d155023 	ldchi	0, cr5, [r5, #-140]	; 0xffffff74
    2490:	0a00000c 	beq	24c8 <__Stack_Size+0x20c8>
    2494:	65090281 	strvs	r0, [r9, #-641]	; 0xfffffd7f
    2498:	0200000d 	andeq	r0, r0, #13
    249c:	ff155423 			; <UNDEFINED> instruction: 0xff155423
    24a0:	0a000008 	beq	24c8 <__Stack_Size+0x20c8>
    24a4:	730702a4 	movwvc	r0, #29348	; 0x72a4
    24a8:	02000010 	andeq	r0, r0, #16
    24ac:	85155823 	ldrhi	r5, [r5, #-2083]	; 0xfffff7dd
    24b0:	0a00000b 	beq	24e4 <__Stack_Size+0x20e4>
    24b4:	031302a8 	tsteq	r3, #168, 4	; 0x8000000a
    24b8:	0300000a 	movweq	r0, #10
    24bc:	1502c823 	strne	ip, [r2, #-2083]	; 0xfffff7dd
    24c0:	00000a88 	andeq	r0, r0, r8, lsl #21
    24c4:	1202a90a 	andne	sl, r2, #163840	; 0x28000
    24c8:	000009b7 			; <UNDEFINED> instruction: 0x000009b7
    24cc:	02cc2303 	sbceq	r2, ip, #201326592	; 0xc000000
    24d0:	000a6f15 	andeq	r6, sl, r5, lsl pc
    24d4:	02ad0a00 	adceq	r0, sp, #0, 20
    24d8:	0010d80c 	andseq	sp, r0, ip, lsl #16
    24dc:	dc230300 	stcle	3, cr0, [r3], #-0
    24e0:	0cfd1505 	cfldr64eq	mvdx1, [sp], #20
    24e4:	b20a0000 	andlt	r0, sl, #0
    24e8:	0e1a1002 	cdpeq	0, 1, cr1, cr10, cr2, {0}
    24ec:	23030000 	movwcs	r0, #12288	; 0x3000
    24f0:	9d1505e0 	cfldr32ls	mvfx0, [r5, #-896]	; 0xfffffc80
    24f4:	0a00000b 	beq	2528 <__Stack_Size+0x2128>
    24f8:	e40a02b4 	str	r0, [sl], #-692	; 0xfffffd4c
    24fc:	03000010 	movweq	r0, #16
    2500:	0005ec23 	andeq	lr, r5, r3, lsr #24
    2504:	0d6b041b 	cfstrdeq	mvd0, [fp, #-108]!	; 0xffffff94
    2508:	01020000 	mrseq	r0, (UNDEF: 2)
    250c:	00013608 	andeq	r3, r1, r8, lsl #12
    2510:	0d6b0500 	cfstr64eq	mvdx0, [fp, #-0]
    2514:	6b040000 	blvs	10251c <__Stack_Size+0x10211c>
    2518:	1b00000d 	blne	2554 <__Stack_Size+0x2154>
    251c:	000bc604 	andeq	ip, fp, r4, lsl #12
    2520:	95011e00 	strls	r1, [r1, #-3584]	; 0xfffff200
    2524:	a1000000 	mrsge	r0, (UNDEF: 0)
    2528:	1f00000d 	svcne	0x0000000d
    252c:	00000be5 	andeq	r0, r0, r5, ror #23
    2530:	0008221f 	andeq	r2, r8, pc, lsl r2
    2534:	0da11f00 	stceq	15, cr1, [r1]
    2538:	951f0000 	ldrls	r0, [pc, #-0]	; 2540 <__Stack_Size+0x2140>
    253c:	00000000 	andeq	r0, r0, r0
    2540:	0d72041b 	cfldrdeq	mvd0, [r2, #-108]!	; 0xffffff94
    2544:	041b0000 	ldreq	r0, [fp], #-0
    2548:	00000d82 	andeq	r0, r0, r2, lsl #27
    254c:	07b0011e 			; <UNDEFINED> instruction: 0x07b0011e
    2550:	0dcc0000 	stcleq	0, cr0, [ip]
    2554:	e51f0000 	ldr	r0, [pc, #-0]	; 255c <__Stack_Size+0x215c>
    2558:	1f00000b 	svcne	0x0000000b
    255c:	00000822 	andeq	r0, r0, r2, lsr #16
    2560:	0007b01f 	andeq	fp, r7, pc, lsl r0
    2564:	00951f00 	addseq	r1, r5, r0, lsl #30
    2568:	1b000000 	blne	2570 <__Stack_Size+0x2170>
    256c:	000dad04 	andeq	sl, sp, r4, lsl #26
    2570:	95011e00 	strls	r1, [r1, #-3584]	; 0xfffff200
    2574:	e7000000 	str	r0, [r0, -r0]
    2578:	1f00000d 	svcne	0x0000000d
    257c:	00000be5 	andeq	r0, r0, r5, ror #23
    2580:	0008221f 	andeq	r2, r8, pc, lsl r2
    2584:	041b0000 	ldreq	r0, [fp], #-0
    2588:	00000dd2 	ldrdeq	r0, [r0], -r2
    258c:	0000570e 	andeq	r5, r0, lr, lsl #14
    2590:	000dfd00 	andeq	pc, sp, r0, lsl #26
    2594:	00a10f00 	adceq	r0, r1, r0, lsl #30
    2598:	00020000 	andeq	r0, r2, r0
    259c:	0000570e 	andeq	r5, r0, lr, lsl #14
    25a0:	000e0d00 	andeq	r0, lr, r0, lsl #26
    25a4:	00a10f00 	adceq	r0, r1, r0, lsl #30
    25a8:	00000000 	andeq	r0, r0, r0
    25ac:	00096816 	andeq	r6, r9, r6, lsl r8
    25b0:	01240a00 			; <UNDEFINED> instruction: 0x01240a00
    25b4:	000a531a 	andeq	r5, sl, sl, lsl r3
    25b8:	0cf72100 	ldfeqe	f2, [r7]
    25bc:	0a0c0000 	beq	3025c4 <__Stack_Size+0x3021c4>
    25c0:	59080128 	stmdbpl	r8, {r3, r5, r8}
    25c4:	1500000e 	strne	r0, [r0, #-14]
    25c8:	00000db6 			; <UNDEFINED> instruction: 0x00000db6
    25cc:	11012a0a 	tstne	r1, sl, lsl #20
    25d0:	00000e59 	andeq	r0, r0, r9, asr lr
    25d4:	15002302 	strne	r2, [r0, #-770]	; 0xfffffcfe
    25d8:	00000c75 	andeq	r0, r0, r5, ror ip
    25dc:	07012b0a 	streq	r2, [r1, -sl, lsl #22]
    25e0:	00000095 	muleq	r0, r5, r0
    25e4:	15042302 	strne	r2, [r4, #-770]	; 0xfffffcfe
    25e8:	00000aa0 	andeq	r0, r0, r0, lsr #21
    25ec:	0b012c0a 	bleq	4d61c <__Stack_Size+0x4d21c>
    25f0:	00000e5f 	andeq	r0, r0, pc, asr lr
    25f4:	00082302 	andeq	r2, r8, r2, lsl #6
    25f8:	0e1a041b 	cfmvrdleq	r0, mvd10
    25fc:	041b0000 	ldreq	r0, [fp], #-0
    2600:	00000e0d 	andeq	r0, r0, sp, lsl #28
    2604:	00099621 	andeq	r9, r9, r1, lsr #12
    2608:	440a0e00 	strmi	r0, [sl], #-3584	; 0xfffff200
    260c:	0ea40801 	cdpeq	8, 10, cr0, cr4, cr1, {0}
    2610:	ab150000 	blge	542618 <__Stack_Size+0x542218>
    2614:	0a00000d 	beq	2650 <__Stack_Size+0x2250>
    2618:	a4120145 	ldrge	r0, [r2], #-325	; 0xfffffebb
    261c:	0200000e 	andeq	r0, r0, #14
    2620:	f0150023 			; <UNDEFINED> instruction: 0xf0150023
    2624:	0a00000a 	beq	2654 <__Stack_Size+0x2254>
    2628:	a4120146 	ldrge	r0, [r2], #-326	; 0xfffffeba
    262c:	0200000e 	andeq	r0, r0, #14
    2630:	c0150623 	andsgt	r0, r5, r3, lsr #12
    2634:	0a00000c 	beq	266c <__Stack_Size+0x226c>
    2638:	6f120147 	svcvs	0x00120147
    263c:	02000000 	andeq	r0, r0, #0
    2640:	0e000c23 	cdpeq	12, 0, cr0, cr0, cr3, {1}
    2644:	0000006f 	andeq	r0, r0, pc, rrx
    2648:	00000eb4 			; <UNDEFINED> instruction: 0x00000eb4
    264c:	0000a10f 	andeq	sl, r0, pc, lsl #2
    2650:	13000200 	movwne	r0, #512	; 0x200
    2654:	02850ad0 	addeq	r0, r5, #208, 20	; 0xd0000
    2658:	000ff807 	andeq	pc, pc, r7, lsl #16
    265c:	0d861500 	cfstr32eq	mvfx1, [r6]
    2660:	870a0000 	strhi	r0, [sl, -r0]
    2664:	00a11802 	adceq	r1, r1, r2, lsl #16
    2668:	23020000 	movwcs	r0, #8192	; 0x2000
    266c:	0d051500 	cfstr32eq	mvfx1, [r5, #-0]
    2670:	880a0000 	stmdahi	sl, {}	; <UNPREDICTABLE>
    2674:	0d651202 	sfmeq	f1, 2, [r5, #-8]!
    2678:	23020000 	movwcs	r0, #8192	; 0x2000
    267c:	09bd1504 	ldmibeq	sp!, {r2, r8, sl, ip}
    2680:	890a0000 	stmdbhi	sl, {}	; <UNPREDICTABLE>
    2684:	0ff81002 	svceq	0x00f81002
    2688:	23020000 	movwcs	r0, #8192	; 0x2000
    268c:	0beb1508 	bleq	ffac7ab4 <BootRAM+0xea38255>
    2690:	8a0a0000 	bhi	282698 <__Stack_Size+0x282298>
    2694:	08c41702 	stmiaeq	r4, {r1, r8, r9, sl, ip}^
    2698:	23020000 	movwcs	r0, #8192	; 0x2000
    269c:	0abf1524 	beq	fefc7b34 <BootRAM+0xdf382d5>
    26a0:	8b0a0000 	blhi	2826a8 <__Stack_Size+0x2822a8>
    26a4:	00950f02 	addseq	r0, r5, r2, lsl #30
    26a8:	23020000 	movwcs	r0, #8192	; 0x2000
    26ac:	0db11548 	cfldr32eq	mvfx1, [r1, #288]!	; 0x120
    26b0:	8c0a0000 	stchi	0, cr0, [sl], {-0}
    26b4:	008e2c02 	addeq	r2, lr, r2, lsl #24
    26b8:	23020000 	movwcs	r0, #8192	; 0x2000
    26bc:	087a1550 	ldmdaeq	sl!, {r4, r6, r8, sl, ip}^
    26c0:	8d0a0000 	stchi	0, cr0, [sl, #-0]
    26c4:	0e651a02 	vmuleq.f32	s3, s10, s4
    26c8:	23020000 	movwcs	r0, #8192	; 0x2000
    26cc:	0a581558 	beq	1607c34 <__Stack_Size+0x1607834>
    26d0:	8e0a0000 	cdphi	0, 0, cr0, cr10, cr0, {0}
    26d4:	08161602 	ldmdaeq	r6, {r1, r9, sl, ip}
    26d8:	23020000 	movwcs	r0, #8192	; 0x2000
    26dc:	0d121568 	cfldr32eq	mvfx1, [r2, #-416]	; 0xfffffe60
    26e0:	8f0a0000 	svchi	0x000a0000
    26e4:	08161602 	ldmdaeq	r6, {r1, r9, sl, ip}
    26e8:	23020000 	movwcs	r0, #8192	; 0x2000
    26ec:	086c1570 	stmdaeq	ip!, {r4, r5, r6, r8, sl, ip}^
    26f0:	900a0000 	andls	r0, sl, r0
    26f4:	08161602 	ldmdaeq	r6, {r1, r9, sl, ip}
    26f8:	23020000 	movwcs	r0, #8192	; 0x2000
    26fc:	0c2b1578 	cfstr32eq	mvfx1, [fp], #-480	; 0xfffffe20
    2700:	910a0000 	mrsls	r0, (UNDEF: 10)
    2704:	10081002 	andne	r1, r8, r2
    2708:	23030000 	movwcs	r0, #12288	; 0x3000
    270c:	94150180 	ldrls	r0, [r5], #-384	; 0xfffffe80
    2710:	0a000008 	beq	2738 <__Stack_Size+0x2338>
    2714:	18100292 	ldmdane	r0, {r1, r4, r7, r9}
    2718:	03000010 	movweq	r0, #16
    271c:	15018823 	strne	r8, [r1, #-2083]	; 0xfffff7dd
    2720:	00000c95 	muleq	r0, r5, ip
    2724:	0f02930a 	svceq	0x0002930a
    2728:	00000095 	muleq	r0, r5, r0
    272c:	01a02303 	lsleq	r2, r3, #6
    2730:	0008f115 	andeq	pc, r8, r5, lsl r1	; <UNPREDICTABLE>
    2734:	02940a00 	addseq	r0, r4, #0, 20
    2738:	00081616 	andeq	r1, r8, r6, lsl r6
    273c:	a4230300 	strtge	r0, [r3], #-768	; 0xfffffd00
    2740:	0a791501 	beq	1e47b4c <__Stack_Size+0x1e4774c>
    2744:	950a0000 	strls	r0, [sl, #-0]
    2748:	08161602 	ldmdaeq	r6, {r1, r9, sl, ip}
    274c:	23030000 	movwcs	r0, #12288	; 0x3000
    2750:	2c1501ac 	ldfcss	f0, [r5], {172}	; 0xac
    2754:	0a00000a 	beq	2784 <__Stack_Size+0x2384>
    2758:	16160296 			; <UNDEFINED> instruction: 0x16160296
    275c:	03000008 	movweq	r0, #8
    2760:	1501b423 	strne	fp, [r1, #-1059]	; 0xfffffbdd
    2764:	00000afe 	strdeq	r0, [r0], -lr
    2768:	1602970a 	strne	r9, [r2], -sl, lsl #14
    276c:	00000816 	andeq	r0, r0, r6, lsl r8
    2770:	01bc2303 			; <UNDEFINED> instruction: 0x01bc2303
    2774:	000b4a15 	andeq	r4, fp, r5, lsl sl
    2778:	02980a00 	addseq	r0, r8, #0, 20
    277c:	00081616 	andeq	r1, r8, r6, lsl r6
    2780:	c4230300 	strtgt	r0, [r3], #-768	; 0xfffffd00
    2784:	09d71501 	ldmibeq	r7, {r0, r8, sl, ip}^
    2788:	990a0000 	stmdbls	sl, {}	; <UNPREDICTABLE>
    278c:	00950802 	addseq	r0, r5, r2, lsl #16
    2790:	23030000 	movwcs	r0, #12288	; 0x3000
    2794:	0e0001cc 	adfeqdm	f0, f0, #4.0
    2798:	00000d6b 	andeq	r0, r0, fp, ror #26
    279c:	00001008 	andeq	r1, r0, r8
    27a0:	0000a10f 	andeq	sl, r0, pc, lsl #2
    27a4:	0e001900 	vmlaeq.f16	s2, s0, s0	; <UNPREDICTABLE>
    27a8:	00000d6b 	andeq	r0, r0, fp, ror #26
    27ac:	00001018 	andeq	r1, r0, r8, lsl r0
    27b0:	0000a10f 	andeq	sl, r0, pc, lsl #2
    27b4:	0e000700 	cdpeq	7, 0, cr0, cr0, cr0, {0}
    27b8:	00000d6b 	andeq	r0, r0, fp, ror #26
    27bc:	00001028 	andeq	r1, r0, r8, lsr #32
    27c0:	0000a10f 	andeq	sl, r0, pc, lsl #2
    27c4:	13001700 	movwne	r1, #1792	; 0x700
    27c8:	029e0af0 	addseq	r0, lr, #240, 20	; 0xf0000
    27cc:	00105307 	andseq	r5, r0, r7, lsl #6
    27d0:	098f1500 	stmibeq	pc, {r8, sl, ip}	; <UNPREDICTABLE>
    27d4:	a10a0000 	mrsge	r0, (UNDEF: 10)
    27d8:	10531b02 	subsne	r1, r3, r2, lsl #22
    27dc:	23020000 	movwcs	r0, #8192	; 0x2000
    27e0:	08bd1500 	popeq	{r8, sl, ip}
    27e4:	a20a0000 	andge	r0, sl, #0
    27e8:	10631802 	rsbne	r1, r3, r2, lsl #16
    27ec:	23020000 	movwcs	r0, #8192	; 0x2000
    27f0:	4d0e0078 	stcmi	0, cr0, [lr, #-480]	; 0xfffffe20
    27f4:	6300000a 	movwvs	r0, #10
    27f8:	0f000010 	svceq	0x00000010
    27fc:	000000a1 	andeq	r0, r0, r1, lsr #1
    2800:	a10e001d 	tstge	lr, sp, lsl r0
    2804:	73000000 	movwvc	r0, #0
    2808:	0f000010 	svceq	0x00000010
    280c:	000000a1 	andeq	r0, r0, r1, lsr #1
    2810:	f022001d 			; <UNDEFINED> instruction: 0xf022001d
    2814:	0302830a 	movweq	r8, #8970	; 0x230a
    2818:	00001098 	muleq	r0, r8, r0
    281c:	000d5023 	andeq	r5, sp, r3, lsr #32
    2820:	029a0a00 	addseq	r0, sl, #0, 20
    2824:	000eb40b 	andeq	fp, lr, fp, lsl #8
    2828:	0c132300 	ldceq	3, cr2, [r3], {-0}
    282c:	a30a0000 	movwge	r0, #40960	; 0xa000
    2830:	10280b02 	eorne	r0, r8, r2, lsl #22
    2834:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    2838:	00000d6b 	andeq	r0, r0, fp, ror #26
    283c:	000010a8 	andeq	r1, r0, r8, lsr #1
    2840:	0000a10f 	andeq	sl, r0, pc, lsl #2
    2844:	24001800 	strcs	r1, [r0], #-2048	; 0xfffff800
    2848:	00000dbc 			; <UNDEFINED> instruction: 0x00000dbc
    284c:	a8041b01 	stmdage	r4, {r0, r8, r9, fp, ip}
    2850:	25000010 	strcs	r0, [r0, #-16]
    2854:	0010c001 	andseq	ip, r0, r1
    2858:	0be51f00 	bleq	ff94a460 <BootRAM+0xe8bac01>
    285c:	1b000000 	blne	2864 <__Stack_Size+0x2464>
    2860:	0010b404 	andseq	fp, r0, r4, lsl #8
    2864:	ae041b00 	vmlage.f64	d1, d4, d0
    2868:	25000008 	strcs	r0, [r0, #-8]
    286c:	0010d801 	andseq	sp, r0, r1, lsl #16
    2870:	00951f00 	addseq	r1, r5, r0, lsl #30
    2874:	1b000000 	blne	287c <__Stack_Size+0x247c>
    2878:	0010de04 	andseq	sp, r0, r4, lsl #28
    287c:	cc041b00 			; <UNDEFINED> instruction: 0xcc041b00
    2880:	0e000010 	mcreq	0, 0, r0, cr0, cr0, {0}
    2884:	00000e0d 	andeq	r0, r0, sp, lsl #28
    2888:	000010f4 	strdeq	r1, [r0], -r4
    288c:	0000a10f 	andeq	sl, r0, pc, lsl #2
    2890:	11000200 	mrsne	r0, R8_usr
    2894:	00000bbc 			; <UNDEFINED> instruction: 0x00000bbc
    2898:	1703330a 	strne	r3, [r3, -sl, lsl #6]
    289c:	00000be5 	andeq	r0, r0, r5, ror #23
    28a0:	b5110101 	ldrlt	r0, [r1, #-257]	; 0xfffffeff
    28a4:	0a00000b 	beq	28d8 <__Stack_Size+0x24d8>
    28a8:	eb1d0334 	bl	743580 <__Stack_Size+0x743180>
    28ac:	0100000b 	tsteq	r0, fp
    28b0:	01020c01 	tsteq	r2, r1, lsl #24
    28b4:	48094801 	stmdami	r9, {r0, fp, lr}
    28b8:	0d000011 	stceq	0, cr0, [r0, #-68]	; 0xffffffbc
    28bc:	01007473 	tsteq	r0, r3, ror r4
    28c0:	004d1449 	subeq	r1, sp, r9, asr #8
    28c4:	23020000 	movwcs	r0, #8192	; 0x2000
    28c8:	6e650d00 	cdpvs	13, 6, cr0, cr5, cr0, {0}
    28cc:	17490100 	strbne	r0, [r9, -r0, lsl #2]
    28d0:	0000004d 	andeq	r0, r0, sp, asr #32
    28d4:	0d012302 	stceq	3, cr2, [r1, #-8]
    28d8:	00727261 	rsbseq	r7, r2, r1, ror #4
    28dc:	58144a01 	ldmdapl	r4, {r0, r9, fp, lr}
    28e0:	02000011 	andeq	r0, r0, #17
    28e4:	0e000223 	cdpeq	2, 0, cr0, cr0, cr3, {1}
    28e8:	0000004d 	andeq	r0, r0, sp, asr #32
    28ec:	00001158 	andeq	r1, r0, r8, asr r1
    28f0:	0000a10f 	andeq	sl, r0, pc, lsl #2
    28f4:	0400ff00 	streq	pc, [r0], #-3840	; 0xfffff100
    28f8:	00001148 	andeq	r1, r0, r8, asr #2
    28fc:	000d3103 	andeq	r3, sp, r3, lsl #2
    2900:	024b0100 	subeq	r0, fp, #0, 2
    2904:	00001112 	andeq	r1, r0, r2, lsl r1
    2908:	00095726 	andeq	r5, r9, r6, lsr #14
    290c:	149e0100 	ldrne	r0, [lr], #256	; 0x100
    2910:	0000115d 	andeq	r1, r0, sp, asr r1
    2914:	001f0305 	andseq	r0, pc, r5, lsl #6
    2918:	20262000 	eorcs	r2, r6, r0
    291c:	0100000d 	tsteq	r0, sp
    2920:	115d149f 			; <UNDEFINED> instruction: 0x115d149f
    2924:	03050000 	movweq	r0, #20480	; 0x5000
    2928:	20000121 	andcs	r0, r0, r1, lsr #2
    292c:	0000520e 	andeq	r5, r0, lr, lsl #4
    2930:	00119d00 	andseq	r9, r1, r0, lsl #26
    2934:	00a10f00 	adceq	r0, r1, r0, lsl #30
    2938:	00110000 	andseq	r0, r1, r0
    293c:	00118d05 	andseq	r8, r1, r5, lsl #26
    2940:	0cab2600 	stceq	6, cr2, [fp]
    2944:	1f020000 	svcne	0x00020000
    2948:	00119d16 	andseq	r9, r1, r6, lsl sp
    294c:	9e030500 	cfsh32ls	mvfx0, mvfx3, #0
    2950:	0e08000c 	cdpeq	0, 0, cr0, cr8, cr12, {0}
    2954:	00000052 	andeq	r0, r0, r2, asr r0
    2958:	000011c4 	andeq	r1, r0, r4, asr #3
    295c:	0000a10f 	andeq	sl, r0, pc, lsl #2
    2960:	05000900 	streq	r0, [r0, #-2304]	; 0xfffff700
    2964:	000011b4 			; <UNDEFINED> instruction: 0x000011b4
    2968:	000c5726 	andeq	r5, ip, r6, lsr #14
    296c:	16320200 	ldrtne	r0, [r2], -r0, lsl #4
    2970:	000011c4 	andeq	r1, r0, r4, asr #3
    2974:	0cf30305 	ldcleq	3, cr0, [r3], #20
    2978:	520e0800 	andpl	r0, lr, #0, 16
    297c:	eb000000 	bl	2984 <__Stack_Size+0x2584>
    2980:	0f000011 	svceq	0x00000011
    2984:	000000a1 	andeq	r0, r0, r1, lsr #1
    2988:	db050042 	blle	142a98 <__Stack_Size+0x142698>
    298c:	26000011 			; <UNDEFINED> instruction: 0x26000011
    2990:	000009a8 	andeq	r0, r0, r8, lsr #19
    2994:	eb164202 	bl	5931a4 <__Stack_Size+0x592da4>
    2998:	05000011 	streq	r0, [r0, #-17]	; 0xffffffef
    299c:	000cb003 	andeq	fp, ip, r3
    29a0:	0bfa1a08 	bleq	ffe891c8 <BootRAM+0xedf9969>
    29a4:	02040000 	andeq	r0, r4, #0
    29a8:	123d019f 	eorsne	r0, sp, #-1073741785	; 0xc0000027
    29ac:	93080000 	movwls	r0, #32768	; 0x8000
    29b0:	0200000d 	andeq	r0, r0, #13
    29b4:	0041019f 	umaaleq	r0, r1, pc, r1	; <UNPREDICTABLE>
    29b8:	23020000 	movwcs	r0, #8192	; 0x2000
    29bc:	0cc50800 	stcleq	8, cr0, [r5], {0}
    29c0:	9f020000 	svcls	0x00020000
    29c4:	00004101 	andeq	r4, r0, r1, lsl #2
    29c8:	01230200 			; <UNDEFINED> instruction: 0x01230200
    29cc:	000b9508 	andeq	r9, fp, r8, lsl #10
    29d0:	019f0200 	orrseq	r0, pc, r0, lsl #4
    29d4:	00001242 	andeq	r1, r0, r2, asr #4
    29d8:	00022302 	andeq	r2, r2, r2, lsl #6
    29dc:	00120205 	andseq	r0, r2, r5, lsl #4
    29e0:	005e0e00 	subseq	r0, lr, r0, lsl #28
    29e4:	12520000 	subsne	r0, r2, #0
    29e8:	a10f0000 	mrsge	r0, CPSR
    29ec:	00000000 	andeq	r0, r0, r0
    29f0:	0bfa2600 	bleq	ffe8c1f8 <BootRAM+0xedfc999>
    29f4:	9f020000 	svcls	0x00020000
    29f8:	00123d01 	andseq	r3, r2, r1, lsl #26
    29fc:	fe030500 	cdp2	5, 0, cr0, cr3, cr0, {0}
    2a00:	1a08000c 	bne	202a38 <__Stack_Size+0x202638>
    2a04:	00000cd5 	ldrdeq	r0, [r0], -r5
    2a08:	01a00216 	lsleq	r0, r6, r2
    2a0c:	0000129f 	muleq	r0, pc, r2	; <UNPREDICTABLE>
    2a10:	000d9308 	andeq	r9, sp, r8, lsl #6
    2a14:	01a00200 	lsleq	r0, r0, #4
    2a18:	00000041 	andeq	r0, r0, r1, asr #32
    2a1c:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
    2a20:	00000cc5 	andeq	r0, r0, r5, asr #25
    2a24:	4101a002 	tstmi	r1, r2
    2a28:	02000000 	andeq	r0, r0, #0
    2a2c:	95080123 	strls	r0, [r8, #-291]	; 0xfffffedd
    2a30:	0200000b 	andeq	r0, r0, #11
    2a34:	12a401a0 	adcne	r0, r4, #160, 2	; 0x28
    2a38:	23020000 	movwcs	r0, #8192	; 0x2000
    2a3c:	64050002 	strvs	r0, [r5], #-2
    2a40:	0e000012 	mcreq	0, 0, r0, cr0, cr2, {0}
    2a44:	0000005e 	andeq	r0, r0, lr, asr r0
    2a48:	000012b4 			; <UNDEFINED> instruction: 0x000012b4
    2a4c:	0000a10f 	andeq	sl, r0, pc, lsl #2
    2a50:	26000900 	strcs	r0, [r0], -r0, lsl #18
    2a54:	00000cd5 	ldrdeq	r0, [r0], -r5
    2a58:	9f01a002 	svcls	0x0001a002
    2a5c:	05000012 	streq	r0, [r0, #-18]	; 0xffffffee
    2a60:	000d0203 	andeq	r0, sp, r3, lsl #4
    2a64:	0d571a08 	vldreq	s3, [r7, #-32]	; 0xffffffe0
    2a68:	02100000 	andseq	r0, r0, #0
    2a6c:	130101a1 	movwne	r0, #4513	; 0x11a1
    2a70:	93080000 	movwls	r0, #32768	; 0x8000
    2a74:	0200000d 	andeq	r0, r0, #13
    2a78:	004101a1 	subeq	r0, r1, r1, lsr #3
    2a7c:	23020000 	movwcs	r0, #8192	; 0x2000
    2a80:	0cc50800 	stcleq	8, cr0, [r5], {0}
    2a84:	a1020000 	mrsge	r0, (UNDEF: 2)
    2a88:	00004101 	andeq	r4, r0, r1, lsl #2
    2a8c:	01230200 			; <UNDEFINED> instruction: 0x01230200
    2a90:	000b9508 	andeq	r9, fp, r8, lsl #10
    2a94:	01a10200 			; <UNDEFINED> instruction: 0x01a10200
    2a98:	00001306 	andeq	r1, r0, r6, lsl #6
    2a9c:	00022302 	andeq	r2, r2, r2, lsl #6
    2aa0:	0012c605 	andseq	ip, r2, r5, lsl #12
    2aa4:	005e0e00 	subseq	r0, lr, r0, lsl #28
    2aa8:	13160000 	tstne	r6, #0
    2aac:	a10f0000 	mrsge	r0, CPSR
    2ab0:	06000000 	streq	r0, [r0], -r0
    2ab4:	0d572600 	ldcleq	6, cr2, [r7, #-0]
    2ab8:	a1020000 	mrsge	r0, (UNDEF: 2)
    2abc:	00130101 	andseq	r0, r3, r1, lsl #2
    2ac0:	18030500 	stmdane	r3, {r8, sl}
    2ac4:	1a08000d 	bne	202b00 <__Stack_Size+0x202700>
    2ac8:	00000bd0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    2acc:	01a20204 			; <UNDEFINED> instruction: 0x01a20204
    2ad0:	00001363 	andeq	r1, r0, r3, ror #6
    2ad4:	000d9308 	andeq	r9, sp, r8, lsl #6
    2ad8:	01a20200 			; <UNDEFINED> instruction: 0x01a20200
    2adc:	00000041 	andeq	r0, r0, r1, asr #32
    2ae0:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
    2ae4:	00000cc5 	andeq	r0, r0, r5, asr #25
    2ae8:	4101a202 	tstmi	r1, r2, lsl #4
    2aec:	02000000 	andeq	r0, r0, #0
    2af0:	95080123 	strls	r0, [r8, #-291]	; 0xfffffedd
    2af4:	0200000b 	andeq	r0, r0, #11
    2af8:	124201a2 	subne	r0, r2, #-2147483608	; 0x80000028
    2afc:	23020000 	movwcs	r0, #8192	; 0x2000
    2b00:	28050002 	stmdacs	r5, {r1}
    2b04:	26000013 			; <UNDEFINED> instruction: 0x26000013
    2b08:	00000bd0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    2b0c:	6301a202 	movwvs	sl, #4610	; 0x1202
    2b10:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
    2b14:	000d2803 	andeq	r2, sp, r3, lsl #16
    2b18:	09351a08 	ldmdbeq	r5!, {r3, r9, fp, ip}
    2b1c:	02070000 	andeq	r0, r7, #0
    2b20:	13c408d4 	bicne	r0, r4, #212, 16	; 0xd40000
    2b24:	7f080000 	svcvc	0x00080000
    2b28:	02000008 	andeq	r0, r0, #8
    2b2c:	00760cd5 	ldrsbteq	r0, [r6], #-197	; 0xffffff3b
    2b30:	23020000 	movwcs	r0, #8192	; 0x2000
    2b34:	0dd60800 	ldcleq	8, cr0, [r6]
    2b38:	d6020000 	strle	r0, [r2], -r0
    2b3c:	0000410b 	andeq	r4, r0, fp, lsl #2
    2b40:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    2b44:	00085708 	andeq	r5, r8, r8, lsl #14
    2b48:	0bd70200 	bleq	ff5c3350 <BootRAM+0xe533af1>
    2b4c:	00000041 	andeq	r0, r0, r1, asr #32
    2b50:	08052302 	stmdaeq	r5, {r1, r8, r9, sp}
    2b54:	00000ca2 	andeq	r0, r0, r2, lsr #25
    2b58:	410bd802 	tstmi	fp, r2, lsl #16
    2b5c:	02000000 	andeq	r0, r0, #0
    2b60:	04000623 	streq	r0, [r0], #-1571	; 0xfffff9dd
    2b64:	0000137a 	andeq	r1, r0, sl, ror r3
    2b68:	00093927 	andeq	r3, r9, r7, lsr #18
    2b6c:	20db0200 	sbcscs	r0, fp, r0, lsl #4
    2b70:	000013c4 	andeq	r1, r0, r4, asr #7
    2b74:	02030501 	andeq	r0, r3, #4194304	; 0x400000
    2b78:	28200000 	stmdacs	r0!, {}	; <UNPREDICTABLE>
    2b7c:	00000c7c 	andeq	r0, r0, ip, ror ip
    2b80:	0f011a02 	svceq	0x00011a02
    2b84:	00000d77 	andeq	r0, r0, r7, ror sp
    2b88:	23030501 	movwcs	r0, #13569	; 0x3501
    2b8c:	29200002 	stmdbcs	r0!, {r1}
    2b90:	0000ab01 	andeq	sl, r0, r1, lsl #22
    2b94:	01290200 			; <UNDEFINED> instruction: 0x01290200
    2b98:	000b9406 	andeq	r9, fp, r6, lsl #8
    2b9c:	000c0808 	andeq	r0, ip, r8, lsl #16
    2ba0:	000d3a08 	andeq	r3, sp, r8, lsl #20
    2ba4:	154e0100 	strbne	r0, [lr, #-256]	; 0xffffff00
    2ba8:	622a0000 	eorvs	r0, sl, #0
    2bac:	02006675 	andeq	r6, r0, #122683392	; 0x7500000
    2bb0:	4e08012a 	adfmiep	f0, f0, #2.0
    2bb4:	02000015 	andeq	r0, r0, #21
    2bb8:	6c2b5091 	stcvs	0, cr5, [fp], #-580	; 0xfffffdbc
    2bbc:	02006e65 	andeq	r6, r0, #1616	; 0x650
    2bc0:	9507012b 	strls	r0, [r7, #-299]	; 0xfffffed5
    2bc4:	7a000000 	bvc	2bcc <__Stack_Size+0x27cc>
    2bc8:	7200000d 	andvc	r0, r0, #13
    2bcc:	2c00000d 	stccs	0, cr0, [r0], {13}
    2bd0:	00001aa1 	andeq	r1, r0, r1, lsr #21
    2bd4:	08000b94 	stmdaeq	r0, {r2, r4, r7, r8, r9, fp}
    2bd8:	0001c003 	andeq	ip, r1, r3
    2bdc:	012b0200 			; <UNDEFINED> instruction: 0x012b0200
    2be0:	0014540d 	andseq	r5, r4, sp, lsl #8
    2be4:	1ab42d00 	bne	fed0dfec <BootRAM+0xdc7e78d>
    2be8:	0dc50000 	stcleq	0, cr0, [r5]
    2bec:	0dc30000 	stcleq	0, cr0, [r3]
    2bf0:	2e000000 	cdpcs	0, 0, cr0, cr0, cr0, {0}
    2bf4:	00001aec 	andeq	r1, r0, ip, ror #21
    2bf8:	08000bc0 	stmdaeq	r0, {r6, r7, r8, r9, fp}
    2bfc:	000bc001 	andeq	ip, fp, r1
    2c00:	000bca08 	andeq	ip, fp, r8, lsl #20
    2c04:	01300208 	teqeq	r0, r8, lsl #4
    2c08:	0014b107 	andseq	fp, r4, r7, lsl #2
    2c0c:	1b122d00 	blne	48e014 <__Stack_Size+0x48dc14>
    2c10:	0ddf0000 	ldcleq	0, cr0, [pc]	; 2c18 <__Stack_Size+0x2818>
    2c14:	0ddd0000 	ldcleq	0, cr0, [sp]
    2c18:	062d0000 	strteq	r0, [sp], -r0
    2c1c:	f400001b 	vst4.8	{d0-d3}, [r0 :64], fp
    2c20:	f200000d 	vhadd.s8	d0, d0, d13
    2c24:	2d00000d 	stccs	0, cr0, [r0, #-52]	; 0xffffffcc
    2c28:	00001afa 	strdeq	r1, [r0], -sl
    2c2c:	00000e09 	andeq	r0, r0, r9, lsl #28
    2c30:	00000e07 	andeq	r0, r0, r7, lsl #28
    2c34:	000bca2f 	andeq	ip, fp, pc, lsr #20
    2c38:	001be008 	andseq	lr, fp, r8
    2c3c:	50013000 	andpl	r3, r1, r0
    2c40:	01303201 	teqeq	r0, r1, lsl #4
    2c44:	007d0251 	rsbseq	r0, sp, r1, asr r2
    2c48:	02520130 	subseq	r0, r2, #48, 2
    2c4c:	00000074 	andeq	r0, r0, r4, ror r0
    2c50:	001aa12e 	andseq	sl, sl, lr, lsr #2
    2c54:	000bca00 	andeq	ip, fp, r0, lsl #20
    2c58:	0bca0208 	bleq	ff283480 <BootRAM+0xe1f3c21>
    2c5c:	0bd40800 	bleq	ff504c64 <BootRAM+0xe475405>
    2c60:	34020800 	strcc	r0, [r2], #-2048	; 0xfffff800
    2c64:	14d90701 	ldrbne	r0, [r9], #1793	; 0x701
    2c68:	b42d0000 	strtlt	r0, [sp], #-0
    2c6c:	2000001a 	andcs	r0, r0, sl, lsl r0
    2c70:	1e00000e 	cdpne	0, 0, cr0, cr0, cr14, {0}
    2c74:	0000000e 	andeq	r0, r0, lr
    2c78:	001ac12e 	andseq	ip, sl, lr, lsr #2
    2c7c:	000bec00 	andeq	lr, fp, r0, lsl #24
    2c80:	0bec0108 	bleq	ffb030a8 <BootRAM+0xea73849>
    2c84:	0bf40800 	bleq	ffd04c8c <BootRAM+0xec7542d>
    2c88:	37020800 	strcc	r0, [r2, -r0, lsl #16]
    2c8c:	15230d01 	strne	r0, [r3, #-3329]!	; 0xfffff2ff
    2c90:	df2d0000 	svcle	0x002d0000
    2c94:	3a00001a 	bcc	2d04 <__Stack_Size+0x2904>
    2c98:	3800000e 	stmdacc	r0, {r1, r2, r3}
    2c9c:	2d00000e 	stccs	0, cr0, [r0, #-56]	; 0xffffffc8
    2ca0:	00001ad3 	ldrdeq	r1, [r0], -r3
    2ca4:	00000e4f 	andeq	r0, r0, pc, asr #28
    2ca8:	00000e4d 	andeq	r0, r0, sp, asr #28
    2cac:	000bf42f 	andeq	pc, fp, pc, lsr #8
    2cb0:	001bee08 	andseq	lr, fp, r8, lsl #28
    2cb4:	50013000 	andpl	r3, r1, r0
    2cb8:	01303301 	teqeq	r0, r1, lsl #6
    2cbc:	007d0251 	rsbseq	r0, sp, r1, asr r2
    2cc0:	c0310000 	eorsgt	r0, r1, r0
    2cc4:	6708000b 	strvs	r0, [r8, -fp]
    2cc8:	3d000018 	stccc	0, cr0, [r0, #-96]	; 0xffffffa0
    2ccc:	30000015 	andcc	r0, r0, r5, lsl r0
    2cd0:	7d025001 	stcvc	0, cr5, [r2, #-4]
    2cd4:	51013000 	mrspl	r3, (UNDEF: 1)
    2cd8:	00007402 	andeq	r7, r0, r2, lsl #8
    2cdc:	000bfc2f 	andeq	pc, fp, pc, lsr #24
    2ce0:	00192408 	andseq	r2, r9, r8, lsl #8
    2ce4:	50013000 	andpl	r3, r1, r0
    2ce8:	00007d02 	andeq	r7, r0, r2, lsl #26
    2cec:	0d6b0e00 	stcleq	14, cr0, [fp, #-0]
    2cf0:	155e0000 	ldrbne	r0, [lr, #-0]
    2cf4:	a10f0000 	mrsge	r0, CPSR
    2cf8:	1f000000 	svcne	0x00000000
    2cfc:	1e012900 	vmlane.f16	s4, s2, s0	; <UNPREDICTABLE>
    2d00:	02000005 	andeq	r0, r0, #5
    2d04:	0006011f 	andeq	r0, r6, pc, lsl r1
    2d08:	9408000b 	strls	r0, [r8], #-11
    2d0c:	6308000b 	movwvs	r0, #32779	; 0x800b
    2d10:	0100000e 	tsteq	r0, lr
    2d14:	0000166b 	andeq	r1, r0, fp, ror #12
    2d18:	00158c32 	andseq	r8, r5, r2, lsr ip
    2d1c:	01623300 	cmneq	r2, r0, lsl #6
    2d20:	20020000 	andcs	r0, r2, r0
    2d24:	00760301 	rsbseq	r0, r6, r1, lsl #6
    2d28:	34000000 	strcc	r0, [r0], #-0
    2d2c:	00000170 	andeq	r0, r0, r0, ror r1
    2d30:	000015ab 	andeq	r1, r0, fp, lsr #11
    2d34:	00016235 	andeq	r6, r1, r5, lsr r2
    2d38:	01200200 			; <UNDEFINED> instruction: 0x01200200
    2d3c:	00007603 	andeq	r7, r0, r3, lsl #12
    2d40:	000e9300 	andeq	r9, lr, r0, lsl #6
    2d44:	000e8f00 	andeq	r8, lr, r0, lsl #30
    2d48:	be320000 	cdplt	0, 3, cr0, cr2, cr0, {0}
    2d4c:	33000015 	movwcc	r0, #21
    2d50:	00000162 	andeq	r0, r0, r2, ror #2
    2d54:	03012002 	movweq	r2, #4098	; 0x1002
    2d58:	00000076 	andeq	r0, r0, r6, ror r0
    2d5c:	01903400 	orrseq	r3, r0, r0, lsl #8
    2d60:	15dd0000 	ldrbne	r0, [sp]
    2d64:	62350000 	eorsvs	r0, r5, #0
    2d68:	02000001 	andeq	r0, r0, #1
    2d6c:	76030120 	strvc	r0, [r3], -r0, lsr #2
    2d70:	b8000000 	stmdalt	r0, {}	; <UNPREDICTABLE>
    2d74:	b200000e 	andlt	r0, r0, #14
    2d78:	0000000e 	andeq	r0, r0, lr
    2d7c:	001b252c 	andseq	r2, fp, ip, lsr #10
    2d80:	000b5c00 	andeq	r5, fp, r0, lsl #24
    2d84:	01a80108 			; <UNDEFINED> instruction: 0x01a80108
    2d88:	20020000 	andcs	r0, r2, r0
    2d8c:	16010301 	strne	r0, [r1], -r1, lsl #6
    2d90:	342d0000 	strtcc	r0, [sp], #-0
    2d94:	e800001b 	stmda	r0, {r0, r1, r3, r4}
    2d98:	e600000e 	str	r0, [r0], -lr
    2d9c:	0000000e 	andeq	r0, r0, lr
    2da0:	000b6631 	andeq	r6, fp, r1, lsr r6
    2da4:	001bfc08 	andseq	pc, fp, r8, lsl #24
    2da8:	00162500 	andseq	r2, r6, r0, lsl #10
    2dac:	50013000 	andpl	r3, r1, r0
    2db0:	30820902 	addcc	r0, r2, r2, lsl #18
    2db4:	33015101 	movwcc	r5, #4353	; 0x1101
    2db8:	01520130 	cmpeq	r2, r0, lsr r1
    2dbc:	53013038 	movwpl	r3, #4152	; 0x1038
    2dc0:	00007402 	andeq	r7, r0, r2, lsl #8
    2dc4:	000b7231 	andeq	r7, fp, r1, lsr r2
    2dc8:	001bfc08 	andseq	pc, fp, r8, lsl #24
    2dcc:	00164a00 	andseq	r4, r6, r0, lsl #20
    2dd0:	50013000 	andpl	r3, r1, r0
    2dd4:	30810902 	addcc	r0, r1, r2, lsl #18
    2dd8:	32015101 	andcc	r5, r1, #1073741824	; 0x40000000
    2ddc:	02520130 	subseq	r0, r2, #48, 2
    2de0:	01300075 	teqeq	r0, r5, ror r0
    2de4:	00740253 	rsbseq	r0, r4, r3, asr r2
    2de8:	0b823600 	bleq	fe0905f0 <BootRAM+0xd000d91>
    2dec:	fc010800 	stc2	8, cr0, [r1], {-0}
    2df0:	3000001b 	andcc	r0, r0, fp, lsl r0
    2df4:	31015001 	tstcc	r1, r1
    2df8:	01510130 	cmpeq	r1, r0, lsr r1
    2dfc:	52013032 	andpl	r3, r1, #50	; 0x32
    2e00:	30200802 	eorcc	r0, r0, r2, lsl #16
    2e04:	30015301 	andcc	r5, r1, r1, lsl #6
    2e08:	01370000 	teqeq	r7, r0
    2e0c:	000008a0 	andeq	r0, r0, r0, lsr #17
    2e10:	06011b02 	streq	r1, [r1], -r2, lsl #22
    2e14:	000af001 	andeq	pc, sl, r1
    2e18:	000b0008 	andeq	r0, fp, r8
    2e1c:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    2e20:	00169601 	andseq	r9, r6, r1, lsl #12
    2e24:	06e63800 	strbteq	r3, [r6], r0, lsl #16
    2e28:	1b020000 	blne	82e30 <__Stack_Size+0x82a30>
    2e2c:	00411b01 	subeq	r1, r1, r1, lsl #22
    2e30:	50010000 	andpl	r0, r1, r0
    2e34:	fe013900 	vseleq.f16	s6, s2, s0
    2e38:	02000006 	andeq	r0, r0, #6
    2e3c:	6b0106ed 	blvs	449f8 <__Stack_Size+0x445f8>
    2e40:	1800000d 	stmdane	r0, {r0, r2, r3}
    2e44:	f008000a 			; <UNDEFINED> instruction: 0xf008000a
    2e48:	fd08000a 	stc2	0, cr0, [r8, #-40]	; 0xffffffd8
    2e4c:	0100000e 	tsteq	r0, lr
    2e50:	00001737 	andeq	r1, r0, r7, lsr r7
    2e54:	7165723a 	cmnvc	r5, sl, lsr r2
    2e58:	27ed0200 	strbcs	r0, [sp, r0, lsl #4]!
    2e5c:	00001737 	andeq	r1, r0, r7, lsr r7
    2e60:	00000f29 	andeq	r0, r0, r9, lsr #30
    2e64:	00000f1d 	andeq	r0, r0, sp, lsl pc
    2e68:	000bc93b 	andeq	ip, fp, fp, lsr r9
    2e6c:	35ed0200 	strbcc	r0, [sp, #512]!	; 0x200
    2e70:	0000005e 	andeq	r0, r0, lr, asr r0
    2e74:	00000f86 	andeq	r0, r0, r6, lsl #31
    2e78:	00000f7c 	andeq	r0, r0, ip, ror pc
    2e7c:	0006ec3b 	andeq	lr, r6, fp, lsr ip
    2e80:	46ed0200 	strbtmi	r0, [sp], r0, lsl #4
    2e84:	0000005e 	andeq	r0, r0, lr, asr r0
    2e88:	00000fd7 	ldrdeq	r0, [r0], -r7
    2e8c:	00000fcb 	andeq	r0, r0, fp, asr #31
    2e90:	001ac13c 	andseq	ip, sl, ip, lsr r1
    2e94:	000a3000 	andeq	r3, sl, r0
    2e98:	0a300108 	beq	c032c0 <__Stack_Size+0xc02ec0>
    2e9c:	0a3a0800 	beq	e84ea4 <__Stack_Size+0xe84aa4>
    2ea0:	f1020800 			; <UNDEFINED> instruction: 0xf1020800
    2ea4:	1ad32d07 	bne	ff4ce2c8 <BootRAM+0xe43ea69>
    2ea8:	102c0000 	eorne	r0, ip, r0
    2eac:	102a0000 	eorne	r0, sl, r0
    2eb0:	df2d0000 	svcle	0x002d0000
    2eb4:	4200001a 	andmi	r0, r0, #26
    2eb8:	40000010 	andmi	r0, r0, r0, lsl r0
    2ebc:	2f000010 	svccs	0x00000010
    2ec0:	08000a3a 	stmdaeq	r0, {r1, r3, r4, r5, r9, fp}
    2ec4:	00001bee 	andeq	r1, r0, lr, ror #23
    2ec8:	01500130 	cmpeq	r0, r0, lsr r1
    2ecc:	51013031 	tstpl	r1, r1, lsr r0
    2ed0:	00007402 	andeq	r7, r0, r2, lsl #8
    2ed4:	041b0000 	ldreq	r0, [fp], #-0
    2ed8:	000000fd 	strdeq	r0, [r0], -sp
    2edc:	0592013d 	ldreq	r0, [r2, #317]	; 0x13d
    2ee0:	e2020000 	and	r0, r2, #0
    2ee4:	0d6b0106 	stfeqe	f0, [fp, #-24]!	; 0xffffffe8
    2ee8:	09f40000 	ldmibeq	r4!, {}^	; <UNPREDICTABLE>
    2eec:	0a180800 	beq	604ef4 <__Stack_Size+0x604af4>
    2ef0:	7d020800 	stcvc	8, cr0, [r2, #-0]
    2ef4:	178c0100 	strne	r0, [ip, r0, lsl #2]
    2ef8:	723a0000 	eorsvc	r0, sl, #0
    2efc:	02007165 	andeq	r7, r0, #1073741849	; 0x40000019
    2f00:	173726e2 	ldrne	r2, [r7, -r2, ror #13]!
    2f04:	10620000 	rsbne	r0, r2, r0
    2f08:	105a0000 	subsne	r0, sl, r0
    2f0c:	a93e0000 	ldmdbge	lr!, {}	; <UNPREDICTABLE>
    2f10:	0200000b 	andeq	r0, r0, #11
    2f14:	178c32e2 	strne	r3, [ip, r2, ror #5]
    2f18:	51010000 	mrspl	r0, (UNDEF: 1)
    2f1c:	000c4c3e 	andeq	r4, ip, lr, lsr ip
    2f20:	42e20200 	rscmi	r0, r2, #0, 4
    2f24:	00001792 	muleq	r0, r2, r7
    2f28:	1b005201 	blne	17734 <__Stack_Size+0x17334>
    2f2c:	00082204 	andeq	r2, r8, r4, lsl #4
    2f30:	5e041b00 	vmlapl.f64	d1, d4, d0
    2f34:	3f000000 	svccc	0x00000000
    2f38:	0003ec01 	andeq	lr, r3, r1, lsl #24
    2f3c:	06a40200 	strteq	r0, [r4], r0, lsl #4
    2f40:	00097801 	andeq	r7, r9, r1, lsl #16
    2f44:	0009f408 	andeq	pc, r9, r8, lsl #8
    2f48:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    2f4c:	0017e301 	andseq	lr, r7, r1, lsl #6
    2f50:	03fe3b00 	mvnseq	r3, #0, 22
    2f54:	a4020000 	strge	r0, [r2], #-0
    2f58:	00005e27 	andeq	r5, r0, r7, lsr #28
    2f5c:	0010a400 	andseq	sl, r0, r0, lsl #8
    2f60:	00109c00 	andseq	r9, r0, r0, lsl #24
    2f64:	0ba93e00 	bleq	fea5276c <BootRAM+0xd9c2f0d>
    2f68:	a4020000 	strge	r0, [r2], #-0
    2f6c:	0017e33b 	andseq	lr, r7, fp, lsr r3
    2f70:	3e510100 	rdfccs	f0, f1, f0
    2f74:	00000c4c 	andeq	r0, r0, ip, asr #24
    2f78:	924ba402 	subls	sl, fp, #33554432	; 0x2000000
    2f7c:	01000017 	tsteq	r0, r7, lsl r0
    2f80:	041b0052 	ldreq	r0, [fp], #-82	; 0xffffffae
    2f84:	000017e9 	andeq	r1, r0, r9, ror #15
    2f88:	17ef041b 			; <UNDEFINED> instruction: 0x17ef041b
    2f8c:	41400000 	mrsmi	r0, (UNDEF: 64)
    2f90:	000b6001 	andeq	r6, fp, r1
    2f94:	06ba0100 	ldrteq	r0, [sl], r0, lsl #2
    2f98:	00092001 	andeq	r2, r9, r1
    2f9c:	00097808 	andeq	r7, r9, r8, lsl #16
    2fa0:	0010de08 	andseq	sp, r0, r8, lsl #28
    2fa4:	18670100 	stmdane	r7!, {r8}^
    2fa8:	733a0000 	teqvc	sl, #0
    2fac:	01007274 	tsteq	r0, r4, ror r2
    2fb0:	0d6517ba 	stcleq	7, cr1, [r5, #-744]!	; 0xfffffd18
    2fb4:	11020000 	mrsne	r0, (UNDEF: 2)
    2fb8:	10fe0000 	rscsne	r0, lr, r0
    2fbc:	6c3a0000 	ldcvs	0, cr0, [sl], #-0
    2fc0:	01006e65 	tsteq	r0, r5, ror #28
    2fc4:	004124ba 	strheq	r2, [r1], #-74	; 0xffffffb6
    2fc8:	11260000 			; <UNDEFINED> instruction: 0x11260000
    2fcc:	11200000 			; <UNDEFINED> instruction: 0x11200000
    2fd0:	a1420000 	mrsge	r0, (UNDEF: 66)
    2fd4:	4c00001a 	stcmi	0, cr0, [r0], {26}
    2fd8:	01080009 	tsteq	r8, r9
    2fdc:	00000158 	andeq	r0, r0, r8, asr r1
    2fe0:	560bbc01 	strpl	fp, [fp], -r1, lsl #24
    2fe4:	2d000018 	stccs	0, cr0, [r0, #-96]	; 0xffffffa0
    2fe8:	00001ab4 			; <UNDEFINED> instruction: 0x00001ab4
    2fec:	00001154 	andeq	r1, r0, r4, asr r1
    2ff0:	00001152 	andeq	r1, r0, r2, asr r1
    2ff4:	095e2f00 	ldmdbeq	lr, {r8, r9, sl, fp, sp}^
    2ff8:	1a370800 	bne	dc5000 <__Stack_Size+0xdc4c00>
    2ffc:	01300000 	teqeq	r0, r0
    3000:	00770250 	rsbseq	r0, r7, r0, asr r2
    3004:	01410000 	mrseq	r0, (UNDEF: 65)
    3008:	00000b3f 	andeq	r0, r0, pc, lsr fp
    300c:	0106b301 	tsteq	r6, r1, lsl #6
    3010:	080008f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, fp}
    3014:	08000920 	stmdaeq	r0, {r5, r8, fp}
    3018:	0000116c 	andeq	r1, r0, ip, ror #2
    301c:	0018de01 	andseq	sp, r8, r1, lsl #28
    3020:	0ba93b00 	bleq	fea51c28 <BootRAM+0xd9c23c9>
    3024:	b3010000 	movwlt	r0, #4096	; 0x1000
    3028:	0018de1a 	andseq	sp, r8, sl, lsl lr
    302c:	00119200 	andseq	r9, r1, r0, lsl #4
    3030:	00118c00 	andseq	r8, r1, r0, lsl #24
    3034:	656c3a00 	strbvs	r3, [ip, #-2560]!	; 0xfffff600
    3038:	b301006e 	movwlt	r0, #4206	; 0x106e
    303c:	00004128 	andeq	r4, r0, r8, lsr #2
    3040:	0011bf00 	andseq	fp, r1, r0, lsl #30
    3044:	0011bd00 	andseq	fp, r1, r0, lsl #26
    3048:	1aa14200 	bne	fe853850 <BootRAM+0xd7c3ff1>
    304c:	09020000 	stmdbeq	r2, {}	; <UNPREDICTABLE>
    3050:	40010800 	andmi	r0, r1, r0, lsl #16
    3054:	01000001 	tsteq	r0, r1
    3058:	18cd0bb5 	stmiane	sp, {r0, r2, r4, r5, r7, r8, r9, fp}^
    305c:	b42d0000 	strtlt	r0, [sp], #-0
    3060:	d400001a 	strle	r0, [r0], #-26	; 0xffffffe6
    3064:	d2000011 	andle	r0, r0, #17
    3068:	00000011 	andeq	r0, r0, r1, lsl r0
    306c:	0009142f 	andeq	r1, r9, pc, lsr #8
    3070:	001a3708 	andseq	r3, sl, r8, lsl #14
    3074:	50013000 	andpl	r3, r1, r0
    3078:	00007502 	andeq	r7, r0, r2, lsl #10
    307c:	41041b00 	tstmi	r4, r0, lsl #22
    3080:	41000000 	mrsmi	r0, (UNDEF: 0)
    3084:	000d4501 	andeq	r4, sp, r1, lsl #10
    3088:	06af0100 	strteq	r0, [pc], r0, lsl #2
    308c:	0008cc01 	andeq	ip, r8, r1, lsl #24
    3090:	0008f408 	andeq	pc, r8, r8, lsl #8
    3094:	0011ec08 	andseq	lr, r1, r8, lsl #24
    3098:	19240100 	stmdbne	r4!, {r8}
    309c:	733a0000 	teqvc	sl, #0
    30a0:	01007274 	tsteq	r0, r4, ror r2
    30a4:	0d6517af 	stcleq	7, cr1, [r5, #-700]!	; 0xfffffd44
    30a8:	12140000 	andsne	r0, r4, #0
    30ac:	120c0000 	andne	r0, ip, #0
    30b0:	e22f0000 	eor	r0, pc, #0
    30b4:	09080008 	stmdbeq	r8, {r3}
    30b8:	3000001a 	andcc	r0, r0, sl, lsl r0
    30bc:	70025001 	andvc	r5, r2, r1
    30c0:	41000000 	mrsmi	r0, (UNDEF: 0)
    30c4:	00088801 	andeq	r8, r8, r1, lsl #16
    30c8:	06ab0100 	strteq	r0, [fp], r0, lsl #2
    30cc:	0008a001 	andeq	sl, r8, r1
    30d0:	0008cc08 	andeq	ip, r8, r8, lsl #24
    30d4:	00124c08 	andseq	r4, r2, r8, lsl #24
    30d8:	197e0100 	ldmdbne	lr!, {r8}^
    30dc:	a93b0000 	ldmdbge	fp!, {}	; <UNPREDICTABLE>
    30e0:	0100000b 	tsteq	r0, fp
    30e4:	18de1bab 	ldmne	lr, {r0, r1, r3, r5, r7, r8, r9, fp, ip}^
    30e8:	12720000 	rsbsne	r0, r2, #0
    30ec:	126c0000 	rsbne	r0, ip, #0
    30f0:	6c3a0000 	ldcvs	0, cr0, [sl], #-0
    30f4:	01006e65 	tsteq	r0, r5, ror #28
    30f8:	004129ab 	subeq	r2, r1, fp, lsr #19
    30fc:	129f0000 	addsne	r0, pc, #0
    3100:	129d0000 	addsne	r0, sp, #0
    3104:	ba2f0000 	blt	bc310c <__Stack_Size+0xbc2d0c>
    3108:	09080008 	stmdbeq	r8, {r3}
    310c:	3000001a 	andcc	r0, r0, sl, lsl r0
    3110:	70025001 	andvc	r5, r2, r1
    3114:	51013000 	mrspl	r3, (UNDEF: 1)
    3118:	00007102 	andeq	r7, r0, r2, lsl #2
    311c:	d4014100 	strle	r4, [r1], #-256	; 0xffffff00
    3120:	0100000a 	tsteq	r0, sl
    3124:	560106a1 	strpl	r0, [r1], -r1, lsr #13
    3128:	a0080008 	andge	r0, r8, r8
    312c:	b2080008 	andlt	r0, r8, #8
    3130:	01000012 	tsteq	r0, r2, lsl r0
    3134:	00001a09 	andeq	r1, r0, r9, lsl #20
    3138:	00012834 	andeq	r2, r1, r4, lsr r8
    313c:	0019ce00 	andseq	ip, r9, r0, lsl #28
    3140:	01624300 	cmneq	r2, r0, lsl #6
    3144:	a3010000 	movwge	r0, #4096	; 0x1000
    3148:	0000410d 	andeq	r4, r0, sp, lsl #2
    314c:	0012ec00 	andseq	lr, r2, r0, lsl #24
    3150:	0012ea00 	andseq	lr, r2, r0, lsl #20
    3154:	086e3600 	stmdaeq	lr!, {r9, sl, ip, sp}^
    3158:	09010800 	stmdbeq	r1, {fp}
    315c:	3000001a 	andcc	r0, r0, sl, lsl r0
    3160:	70025001 	andvc	r5, r2, r1
    3164:	51013000 	mrspl	r3, (UNDEF: 1)
    3168:	00007102 	andeq	r7, r0, r2, lsl #2
    316c:	1aa14400 	bne	fe854174 <BootRAM+0xd7c4915>
    3170:	08740000 	ldmdaeq	r4!, {}^	; <UNPREDICTABLE>
    3174:	74010800 	strvc	r0, [r1], #-2048	; 0xfffff800
    3178:	7e080008 	cdpvc	0, 0, cr0, cr8, cr8, {0}
    317c:	01080008 	tsteq	r8, r8
    3180:	19f508a6 	ldmibne	r5!, {r1, r2, r5, r7, fp}^
    3184:	b42d0000 	strtlt	r0, [sp], #-0
    3188:	0100001a 	tsteq	r0, sl, lsl r0
    318c:	ff000013 			; <UNDEFINED> instruction: 0xff000013
    3190:	00000012 	andeq	r0, r0, r2, lsl r0
    3194:	00088a2f 	andeq	r8, r8, pc, lsr #20
    3198:	001a3708 	andseq	r3, sl, r8, lsl #14
    319c:	50013000 	andpl	r3, r1, r0
    31a0:	01210305 			; <UNDEFINED> instruction: 0x01210305
    31a4:	00002000 	andeq	r2, r0, r0
    31a8:	0a0f0145 	beq	3c36c4 <__Stack_Size+0x3c32c4>
    31ac:	5a010000 	bpl	431b4 <__Stack_Size+0x42db4>
    31b0:	31010106 	tstcc	r1, r6, lsl #2
    31b4:	4600001a 			; <UNDEFINED> instruction: 0x4600001a
    31b8:	00667562 	rsbeq	r7, r6, r2, ror #10
    31bc:	31225a01 			; <UNDEFINED> instruction: 0x31225a01
    31c0:	4600001a 			; <UNDEFINED> instruction: 0x4600001a
    31c4:	00746164 	rsbseq	r6, r4, r4, ror #2
    31c8:	412f5a01 			; <UNDEFINED> instruction: 0x412f5a01
    31cc:	00000000 	andeq	r0, r0, r0
    31d0:	115d041b 	cmpne	sp, fp, lsl r4
    31d4:	013d0000 	teqeq	sp, r0
    31d8:	00000a1e 	andeq	r0, r0, lr, lsl sl
    31dc:	01095101 	tsteq	r9, r1, lsl #2
    31e0:	00000041 	andeq	r0, r0, r1, asr #32
    31e4:	0800080e 	stmdaeq	r0, {r1, r2, r3, fp}
    31e8:	08000834 	stmdaeq	r0, {r2, r4, r5, fp}
    31ec:	01007d02 	tsteq	r0, r2, lsl #26
    31f0:	00001aa1 	andeq	r1, r0, r1, lsr #21
    31f4:	6675623a 			; <UNDEFINED> instruction: 0x6675623a
    31f8:	24510100 	ldrbcs	r0, [r1], #-256	; 0xffffff00
    31fc:	00001a31 	andeq	r1, r0, r1, lsr sl
    3200:	00001321 	andeq	r1, r0, r1, lsr #6
    3204:	00001319 	andeq	r1, r0, r9, lsl r3
    3208:	73657247 	cmnvc	r5, #1879048196	; 0x70000004
    320c:	0b520100 	bleq	1483614 <__Stack_Size+0x1483214>
    3210:	00000041 	andeq	r0, r0, r1, asr #32
    3214:	00001357 	andeq	r1, r0, r7, asr r3
    3218:	00001355 	andeq	r1, r0, r5, asr r3
    321c:	001aa13c 	andseq	sl, sl, ip, lsr r1
    3220:	00080e00 	andeq	r0, r8, r0, lsl #28
    3224:	080e0308 	stmdaeq	lr, {r3, r8, r9}
    3228:	08120800 	ldmdaeq	r2, {fp}
    322c:	53010800 	movwpl	r0, #6144	; 0x1800
    3230:	1ab42d06 	bne	fed0e650 <BootRAM+0xdc7edf1>
    3234:	136c0000 	cmnne	ip, #0
    3238:	136a0000 	cmnne	sl, #0
    323c:	00000000 	andeq	r0, r0, r0
    3240:	0c430148 	stfeqe	f0, [r3], {72}	; 0x48
    3244:	4d010000 	stcmi	0, cr0, [r1, #-0]
    3248:	00410109 	subeq	r0, r1, r9, lsl #2
    324c:	c1010000 	mrsgt	r0, (UNDEF: 1)
    3250:	4600001a 			; <UNDEFINED> instruction: 0x4600001a
    3254:	00667562 	rsbeq	r7, r6, r2, ror #10
    3258:	31244d01 			; <UNDEFINED> instruction: 0x31244d01
    325c:	0000001a 	andeq	r0, r0, sl, lsl r0
    3260:	0004a449 	andeq	sl, r4, r9, asr #8
    3264:	13ba0300 			; <UNDEFINED> instruction: 0x13ba0300
    3268:	00009501 	andeq	r9, r0, r1, lsl #10
    326c:	1aec0300 	bne	ffb03e74 <BootRAM+0xea74615>
    3270:	e64a0000 	strb	r0, [sl], -r0
    3274:	03000006 	movweq	r0, #6
    3278:	004127ba 	strheq	r2, [r1], #-122	; 0xffffff86
    327c:	62460000 	subvs	r0, r6, #0
    3280:	03006675 	movweq	r6, #1653	; 0x675
    3284:	179238ba 			; <UNDEFINED> instruction: 0x179238ba
    3288:	4b000000 	blmi	3290 <__Stack_Size+0x2e90>
    328c:	00000393 	muleq	r0, r3, r3
    3290:	0114ad03 	tsteq	r4, r3, lsl #26
    3294:	001b1f03 	andseq	r1, fp, r3, lsl #30
    3298:	06e64a00 	strbteq	r4, [r6], r0, lsl #20
    329c:	ad030000 	stcge	0, cr0, [r3, #-0]
    32a0:	00004129 	andeq	r4, r0, r9, lsr #2
    32a4:	75624600 	strbvc	r4, [r2, #-1536]!	; 0xfffffa00
    32a8:	ad030066 	stcge	0, cr0, [r3, #-408]	; 0xfffffe68
    32ac:	001b1f3f 	andseq	r1, fp, pc, lsr pc
    32b0:	0c4c4a00 	mcrreq	10, 0, r4, ip, cr0
    32b4:	ad030000 	stcge	0, cr0, [r3, #-0]
    32b8:	00005e4d 	andeq	r5, r0, sp, asr #28
    32bc:	041b0000 	ldreq	r0, [fp], #-0
    32c0:	00000052 	andeq	r0, r0, r2, asr r0
    32c4:	0003b34c 	andeq	fp, r3, ip, asr #6
    32c8:	05de0400 	ldrbeq	r0, [lr, #1024]	; 0x400
    32cc:	42030116 	andmi	r0, r3, #-2147483643	; 0x80000005
    32d0:	4d00001b 	stcmi	0, cr0, [r0, #-108]	; 0xffffff94
    32d4:	00000307 	andeq	r0, r0, r7, lsl #6
    32d8:	2f05de04 	svccs	0x0005de04
    32dc:	00000250 	andeq	r0, r0, r0, asr r2
    32e0:	1aa14e00 	bne	fe856ae8 <BootRAM+0xd7c7289>
    32e4:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
    32e8:	080e0800 	stmdaeq	lr, {fp}
    32ec:	7d020800 	stcvc	8, cr0, [r2, #-0]
    32f0:	1b650100 	blne	19436f8 <__Stack_Size+0x19432f8>
    32f4:	b42d0000 	strtlt	r0, [sp], #-0
    32f8:	8300001a 	movwhi	r0, #26
    32fc:	7f000013 	svcvc	0x00000013
    3300:	00000013 	andeq	r0, r0, r3, lsl r0
    3304:	001a094e 	andseq	r0, sl, lr, asr #18
    3308:	00083400 	andeq	r3, r8, r0, lsl #8
    330c:	00085608 	andeq	r5, r8, r8, lsl #12
    3310:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    3314:	001be001 	andseq	lr, fp, r1
    3318:	1a184f00 	bne	616f20 <__Stack_Size+0x616b20>
    331c:	50010000 	andpl	r0, r1, r0
    3320:	001a244f 	andseq	r2, sl, pc, asr #8
    3324:	44510100 	ldrbmi	r0, [r1], #-256	; 0xffffff00
    3328:	00001aa1 	andeq	r1, r0, r1, lsr #21
    332c:	08000834 	stmdaeq	r0, {r2, r4, r5, fp}
    3330:	00083402 	andeq	r3, r8, r2, lsl #8
    3334:	00083a08 	andeq	r3, r8, r8, lsl #20
    3338:	065b0108 	ldrbeq	r0, [fp], -r8, lsl #2
    333c:	00001baf 	andeq	r1, r0, pc, lsr #23
    3340:	001ab42d 	andseq	fp, sl, sp, lsr #8
    3344:	0013a600 	andseq	sl, r3, r0, lsl #12
    3348:	0013a400 	andseq	sl, r3, r0, lsl #8
    334c:	093c0000 	ldmdbeq	ip!, {}	; <UNPREDICTABLE>
    3350:	4000001a 	andmi	r0, r0, sl, lsl r0
    3354:	00080008 	andeq	r0, r8, r8
    3358:	08000840 	stmdaeq	r0, {r6, fp}
    335c:	08000854 	stmdaeq	r0, {r2, r4, r6, fp}
    3360:	2d065a01 	vstrcs	s10, [r6, #-4]
    3364:	00001a24 	andeq	r1, r0, r4, lsr #20
    3368:	000013bb 			; <UNDEFINED> instruction: 0x000013bb
    336c:	000013b9 			; <UNDEFINED> instruction: 0x000013b9
    3370:	001a182d 	andseq	r1, sl, sp, lsr #16
    3374:	0013d000 	andseq	sp, r3, r0
    3378:	0013ce00 	andseq	ip, r3, r0, lsl #28
    337c:	50000000 	andpl	r0, r0, r0
    3380:	03920101 	orrseq	r0, r2, #1073741824	; 0x40000000
    3384:	03920000 	orrseq	r0, r2, #0
    3388:	ac030000 	stcge	0, cr0, [r3], {-0}
    338c:	01015006 	tsteq	r1, r6
    3390:	000004a3 	andeq	r0, r0, r3, lsr #9
    3394:	000004a3 	andeq	r0, r0, r3, lsr #9
    3398:	5005b903 	andpl	fp, r5, r3, lsl #18
    339c:	06580101 	ldrbeq	r0, [r8], -r1, lsl #2
    33a0:	06580000 	ldrbeq	r0, [r8], -r0
    33a4:	25030000 	strcs	r0, [r3, #-0]
    33a8:	Address 0x00000000000033a8 is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
   c:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
  10:	00061001 	andeq	r1, r6, r1
  14:	00240200 	eoreq	r0, r4, r0, lsl #4
  18:	0b3e0b0b 	bleq	f82c4c <__Stack_Size+0xf8284c>
  1c:	00000e03 	andeq	r0, r0, r3, lsl #28
  20:	03001603 	movweq	r1, #1539	; 0x603
  24:	3b0b3a0e 	blcc	2ce864 <__Stack_Size+0x2ce464>
  28:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
  2c:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
  30:	13490026 	movtne	r0, #36902	; 0x9026
  34:	35050000 	strcc	r0, [r5, #-0]
  38:	00134900 	andseq	r4, r3, r0, lsl #18
  3c:	00240600 	eoreq	r0, r4, r0, lsl #12
  40:	0b3e0b0b 	bleq	f82c74 <__Stack_Size+0xf82874>
  44:	00000803 	andeq	r0, r0, r3, lsl #16
  48:	03003407 	movweq	r3, #1031	; 0x407
  4c:	3b0b3a0e 	blcc	2ce88c <__Stack_Size+0x2ce48c>
  50:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
  54:	3c0c3f13 	stccc	15, cr3, [ip], {19}
  58:	0800000c 	stmdaeq	r0, {r2, r3}
  5c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
  60:	0b3b0b3a 	bleq	ec2d50 <__Stack_Size+0xec2950>
  64:	13490b39 	movtne	r0, #39737	; 0x9b39
  68:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
  6c:	01090000 	mrseq	r0, (UNDEF: 9)
  70:	01134901 	tsteq	r3, r1, lsl #18
  74:	0a000013 	beq	c8 <_Minimum_Stack_Size-0x38>
  78:	13490021 	movtne	r0, #36897	; 0x9021
  7c:	00000b2f 	andeq	r0, r0, pc, lsr #22
  80:	0b01130b 	bleq	44cb4 <__Stack_Size+0x448b4>
  84:	3b0b3a0b 	blcc	2ce8b8 <__Stack_Size+0x2ce4b8>
  88:	010b3905 	tsteq	fp, r5, lsl #18
  8c:	0c000013 	stceq	0, cr0, [r0], {19}
  90:	0803000d 	stmdaeq	r3, {r0, r2, r3}
  94:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
  98:	13490b39 	movtne	r0, #39737	; 0x9b39
  9c:	00000a38 	andeq	r0, r0, r8, lsr sl
  a0:	03000d0d 	movweq	r0, #3341	; 0xd0d
  a4:	3b0b3a0e 	blcc	2ce8e4 <__Stack_Size+0x2ce4e4>
  a8:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
  ac:	000a3813 	andeq	r3, sl, r3, lsl r8
  b0:	00160e00 	andseq	r0, r6, r0, lsl #28
  b4:	0b3a0e03 	bleq	e838c8 <__Stack_Size+0xe834c8>
  b8:	0b39053b 	bleq	e415ac <__Stack_Size+0xe411ac>
  bc:	00001349 	andeq	r1, r0, r9, asr #6
  c0:	3f012e0f 	svccc	0x00012e0f
  c4:	3a0e030c 	bcc	380cfc <__Stack_Size+0x3808fc>
  c8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  cc:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
  d0:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
  d4:	97064001 	strls	r4, [r6, -r1]
  d8:	13010c42 	movwne	r0, #7234	; 0x1c42
  dc:	0b100000 	bleq	4000e4 <__Stack_Size+0x3ffce4>
  e0:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
  e4:	00130101 	andseq	r0, r3, r1, lsl #2
  e8:	00341100 	eorseq	r1, r4, r0, lsl #2
  ec:	0b3a0e03 	bleq	e83900 <__Stack_Size+0xe83500>
  f0:	0b390b3b 	bleq	e42de4 <__Stack_Size+0xe429e4>
  f4:	06021349 	streq	r1, [r2], -r9, asr #6
  f8:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
  fc:	010b1200 	mrseq	r1, R11_fiq
 100:	00001301 	andeq	r1, r0, r1, lsl #6
 104:	03003413 	movweq	r3, #1043	; 0x413
 108:	3b0b3a0e 	blcc	2ce948 <__Stack_Size+0x2ce548>
 10c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 110:	14000013 	strne	r0, [r0], #-19	; 0xffffffed
 114:	1331001d 	teqne	r1, #29
 118:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
 11c:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
 120:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
 124:	000b570b 	andeq	r5, fp, fp, lsl #14
 128:	82891500 	addhi	r1, r9, #0, 10
 12c:	01110001 	tsteq	r1, r1
 130:	00001331 	andeq	r1, r0, r1, lsr r3
 134:	3f012e16 	svccc	0x00012e16
 138:	3a0e030c 	bcc	380d70 <__Stack_Size+0x380970>
 13c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 140:	110c270b 	tstne	ip, fp, lsl #14
 144:	40011201 	andmi	r1, r1, r1, lsl #4
 148:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
 14c:	00001301 	andeq	r1, r0, r1, lsl #6
 150:	03000517 	movweq	r0, #1303	; 0x517
 154:	3b0b3a0e 	blcc	2ce994 <__Stack_Size+0x2ce594>
 158:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 15c:	b7060213 	smladlt	r6, r3, r2, r0
 160:	00000642 	andeq	r0, r0, r2, asr #12
 164:	3f002e18 	svccc	0x00002e18
 168:	3a0e030c 	bcc	380da0 <__Stack_Size+0x3809a0>
 16c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 170:	110c270b 	tstne	ip, fp, lsl #14
 174:	40011201 	andmi	r1, r1, r1, lsl #4
 178:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
 17c:	2e190000 	cdpcs	0, 1, cr0, cr9, cr0, {0}
 180:	030c3f00 	movweq	r3, #52992	; 0xcf00
 184:	3b0b3a0e 	blcc	2ce9c4 <__Stack_Size+0x2ce5c4>
 188:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 18c:	1a00000c 	bne	1c4 <_Minimum_Stack_Size+0xc4>
 190:	0c3f012e 	ldfeqs	f0, [pc], #-184	; e0 <_Minimum_Stack_Size-0x20>
 194:	0b3a0e03 	bleq	e839a8 <__Stack_Size+0xe835a8>
 198:	0b390b3b 	bleq	e42e8c <__Stack_Size+0xe42a8c>
 19c:	0b201349 	bleq	804ec8 <__Stack_Size+0x804ac8>
 1a0:	00001301 	andeq	r1, r0, r1, lsl #6
 1a4:	0300341b 	movweq	r3, #1051	; 0x41b
 1a8:	3b0b3a08 	blcc	2ce9d0 <__Stack_Size+0x2ce5d0>
 1ac:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 1b0:	1c000013 	stcne	0, cr0, [r0], {19}
 1b4:	0e03002e 	cdpeq	0, 0, cr0, cr3, cr14, {1}
 1b8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 1bc:	0b200b39 	bleq	802ea8 <__Stack_Size+0x802aa8>
 1c0:	2e1d0000 	cdpcs	0, 1, cr0, cr13, cr0, {0}
 1c4:	11133101 	tstne	r3, r1, lsl #2
 1c8:	40011201 	andmi	r1, r1, r1, lsl #4
 1cc:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
 1d0:	00001301 	andeq	r1, r0, r1, lsl #6
 1d4:	3100341e 	tstcc	r0, lr, lsl r4
 1d8:	b7060213 	smladlt	r6, r3, r2, r0
 1dc:	00000642 	andeq	r0, r0, r2, asr #12
 1e0:	3100341f 	tstcc	r0, pc, lsl r4
 1e4:	20000013 	andcs	r0, r0, r3, lsl r0
 1e8:	1331011d 	teqne	r1, #1073741831	; 0x40000007
 1ec:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
 1f0:	5806550b 	stmdapl	r6, {r0, r1, r3, r8, sl, ip, lr}
 1f4:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
 1f8:	2100000b 	tstcs	r0, fp
 1fc:	0655010b 	ldrbeq	r0, [r5], -fp, lsl #2
 200:	2e220000 	cdpcs	0, 2, cr0, cr2, cr0, {0}
 204:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
 208:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
 20c:	0b3a0e03 	bleq	e83a20 <__Stack_Size+0xe83620>
 210:	0b390b3b 	bleq	e42f04 <__Stack_Size+0xe42b04>
 214:	01000000 	mrseq	r0, (UNDEF: 0)
 218:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
 21c:	0e030b13 	vmoveq.32	d3[0], r0
 220:	01110e1b 	tsteq	r1, fp, lsl lr
 224:	06100112 			; <UNDEFINED> instruction: 0x06100112
 228:	24020000 	strcs	r0, [r2], #-0
 22c:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 230:	000e030b 	andeq	r0, lr, fp, lsl #6
 234:	00160300 	andseq	r0, r6, r0, lsl #6
 238:	0b3a0e03 	bleq	e83a4c <__Stack_Size+0xe8364c>
 23c:	0b390b3b 	bleq	e42f30 <__Stack_Size+0xe42b30>
 240:	00001349 	andeq	r1, r0, r9, asr #6
 244:	49003504 	stmdbmi	r0, {r2, r8, sl, ip, sp}
 248:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
 24c:	13490026 	movtne	r0, #36902	; 0x9026
 250:	24060000 	strcs	r0, [r6], #-0
 254:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 258:	0008030b 	andeq	r0, r8, fp, lsl #6
 25c:	000f0700 	andeq	r0, pc, r0, lsl #14
 260:	13490b0b 	movtne	r0, #39691	; 0x9b0b
 264:	15080000 	strne	r0, [r8, #-0]
 268:	010c2701 	tsteq	ip, r1, lsl #14
 26c:	09000013 	stmdbeq	r0, {r0, r1, r4}
 270:	13490005 	movtne	r0, #36869	; 0x9005
 274:	130a0000 	movwne	r0, #40960	; 0xa000
 278:	3a0b0b01 	bcc	2c2e84 <__Stack_Size+0x2c2a84>
 27c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 280:	0013010b 	andseq	r0, r3, fp, lsl #2
 284:	000d0b00 	andeq	r0, sp, r0, lsl #22
 288:	0b3a0e03 	bleq	e83a9c <__Stack_Size+0xe8369c>
 28c:	0b390b3b 	bleq	e42f80 <__Stack_Size+0xe42b80>
 290:	0a381349 	beq	e04fbc <__Stack_Size+0xe04bbc>
 294:	040c0000 	streq	r0, [ip], #-0
 298:	0b0b3e01 	bleq	2cfaa4 <__Stack_Size+0x2cf6a4>
 29c:	3a13490b 	bcc	4d26d0 <__Stack_Size+0x4d22d0>
 2a0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 2a4:	0013010b 	andseq	r0, r3, fp, lsl #2
 2a8:	00280d00 	eoreq	r0, r8, r0, lsl #26
 2ac:	0d1c0e03 	ldceq	14, cr0, [ip, #-12]
 2b0:	280e0000 	stmdacs	lr, {}	; <UNPREDICTABLE>
 2b4:	1c0e0300 	stcne	3, cr0, [lr], {-0}
 2b8:	0f00000b 	svceq	0x0000000b
 2bc:	050b0113 	streq	r0, [fp, #-275]	; 0xfffffeed
 2c0:	0b3b0b3a 	bleq	ec2fb0 <__Stack_Size+0xec2bb0>
 2c4:	13010b39 	movwne	r0, #6969	; 0x1b39
 2c8:	0d100000 	ldceq	0, cr0, [r0, #-0]
 2cc:	3a080300 	bcc	200ed4 <__Stack_Size+0x200ad4>
 2d0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 2d4:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 2d8:	1100000a 	tstne	r0, sl
 2dc:	13490101 	movtne	r0, #37121	; 0x9101
 2e0:	00001301 	andeq	r1, r0, r1, lsl #6
 2e4:	49002112 	stmdbmi	r0, {r1, r4, r8, sp}
 2e8:	000b2f13 	andeq	r2, fp, r3, lsl pc
 2ec:	00211300 	eoreq	r1, r1, r0, lsl #6
 2f0:	052f1349 	streq	r1, [pc, #-841]!	; ffffffaf <BootRAM+0xef70750>
 2f4:	34140000 	ldrcc	r0, [r4], #-0
 2f8:	3a0e0300 	bcc	380f00 <__Stack_Size+0x380b00>
 2fc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 300:	3f13490b 	svccc	0x0013490b
 304:	000c3c0c 	andeq	r3, ip, ip, lsl #24
 308:	00341500 	eorseq	r1, r4, r0, lsl #10
 30c:	0b3a0e03 	bleq	e83b20 <__Stack_Size+0xe83720>
 310:	0b390b3b 	bleq	e43004 <__Stack_Size+0xe42c04>
 314:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 1f8 <_Minimum_Stack_Size+0xf8>
 318:	00000c3c 	andeq	r0, r0, ip, lsr ip
 31c:	0b011316 	bleq	44f7c <__Stack_Size+0x44b7c>
 320:	3b0b3a0b 	blcc	2ceb54 <__Stack_Size+0x2ce754>
 324:	010b3905 	tsteq	fp, r5, lsl #18
 328:	17000013 	smladne	r0, r3, r0, r0
 32c:	0803000d 	stmdaeq	r3, {r0, r2, r3}
 330:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 334:	13490b39 	movtne	r0, #39737	; 0x9b39
 338:	00000a38 	andeq	r0, r0, r8, lsr sl
 33c:	03000d18 	movweq	r0, #3352	; 0xd18
 340:	3b0b3a0e 	blcc	2ceb80 <__Stack_Size+0x2ce780>
 344:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 348:	000a3813 	andeq	r3, sl, r3, lsl r8
 34c:	00161900 	andseq	r1, r6, r0, lsl #18
 350:	0b3a0e03 	bleq	e83b64 <__Stack_Size+0xe83764>
 354:	0b39053b 	bleq	e41848 <__Stack_Size+0xe41448>
 358:	00001349 	andeq	r1, r0, r9, asr #6
 35c:	03000d1a 	movweq	r0, #3354	; 0xd1a
 360:	3b0b3a0e 	blcc	2ceba0 <__Stack_Size+0x2ce7a0>
 364:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 368:	0d0b0b13 	vstreq	d0, [fp, #-76]	; 0xffffffb4
 36c:	380b0c0b 	stmdacc	fp, {r0, r1, r3, sl, fp}
 370:	1b00000a 	blne	3a0 <_Minimum_Stack_Size+0x2a0>
 374:	0b0b0117 	bleq	2c07d8 <__Stack_Size+0x2c03d8>
 378:	0b3b0b3a 	bleq	ec3068 <__Stack_Size+0xec2c68>
 37c:	13010b39 	movwne	r0, #6969	; 0x1b39
 380:	0d1c0000 	ldceq	0, cr0, [ip, #-0]
 384:	3a0e0300 	bcc	380f8c <__Stack_Size+0x380b8c>
 388:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 38c:	0013490b 	andseq	r4, r3, fp, lsl #18
 390:	000d1d00 	andeq	r1, sp, r0, lsl #26
 394:	00001349 	andeq	r1, r0, r9, asr #6
 398:	49000d1e 	stmdbmi	r0, {r1, r2, r3, r4, r8, sl, fp}
 39c:	000a3813 	andeq	r3, sl, r3, lsl r8
 3a0:	00341f00 	eorseq	r1, r4, r0, lsl #30
 3a4:	0b3a0e03 	bleq	e83bb8 <__Stack_Size+0xe837b8>
 3a8:	0b390b3b 	bleq	e4309c <__Stack_Size+0xe42c9c>
 3ac:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 290 <_Minimum_Stack_Size+0x190>
 3b0:	00000a02 	andeq	r0, r0, r2, lsl #20
 3b4:	03003420 	movweq	r3, #1056	; 0x420
 3b8:	3b0b3a0e 	blcc	2cebf8 <__Stack_Size+0x2ce7f8>
 3bc:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 3c0:	000a0213 	andeq	r0, sl, r3, lsl r2
 3c4:	000d2100 	andeq	r2, sp, r0, lsl #2
 3c8:	0b3a0e03 	bleq	e83bdc <__Stack_Size+0xe837dc>
 3cc:	0b39053b 	bleq	e418c0 <__Stack_Size+0xe414c0>
 3d0:	0b0b1349 	bleq	2c50fc <__Stack_Size+0x2c4cfc>
 3d4:	0b0c0b0d 	bleq	303010 <__Stack_Size+0x302c10>
 3d8:	00000a38 	andeq	r0, r0, r8, lsr sl
 3dc:	0b011722 	bleq	4606c <__Stack_Size+0x45c6c>
 3e0:	3b0b3a0b 	blcc	2cec14 <__Stack_Size+0x2ce814>
 3e4:	010b3905 	tsteq	fp, r5, lsl #18
 3e8:	23000013 	movwcs	r0, #19
 3ec:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 3f0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 3f4:	13490b39 	movtne	r0, #39737	; 0x9b39
 3f8:	2e240000 	cdpcs	0, 2, cr0, cr4, cr0, {0}
 3fc:	030c3f01 	movweq	r3, #52993	; 0xcf01
 400:	3b0b3a0e 	blcc	2cec40 <__Stack_Size+0x2ce840>
 404:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
 408:	1113490c 	tstne	r3, ip, lsl #18
 40c:	40011201 	andmi	r1, r1, r1, lsl #4
 410:	0c429706 	mcrreq	7, 0, r9, r2, cr6
 414:	00001301 	andeq	r1, r0, r1, lsl #6
 418:	03000525 	movweq	r0, #1317	; 0x525
 41c:	3b0b3a08 	blcc	2cec44 <__Stack_Size+0x2ce844>
 420:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 424:	b7060213 	smladlt	r6, r3, r2, r0
 428:	00000642 	andeq	r0, r0, r2, asr #12
 42c:	03003426 	movweq	r3, #1062	; 0x426
 430:	3b0b3a0e 	blcc	2cec70 <__Stack_Size+0x2ce870>
 434:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 438:	b7060213 	smladlt	r6, r3, r2, r0
 43c:	00000642 	andeq	r0, r0, r2, asr #12
 440:	03003427 	movweq	r3, #1063	; 0x427
 444:	3b0b3a08 	blcc	2cec6c <__Stack_Size+0x2ce86c>
 448:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 44c:	b7060213 	smladlt	r6, r3, r2, r0
 450:	00000642 	andeq	r0, r0, r2, asr #12
 454:	55010b28 	strpl	r0, [r1, #-2856]	; 0xfffff4d8
 458:	29000006 	stmdbcs	r0, {r1, r2}
 45c:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 3ac <_Minimum_Stack_Size+0x2ac>
 460:	0b3a0e03 	bleq	e83c74 <__Stack_Size+0xe83874>
 464:	0b39053b 	bleq	e41958 <__Stack_Size+0xe41558>
 468:	01110c27 	tsteq	r1, r7, lsr #24
 46c:	06400112 			; <UNDEFINED> instruction: 0x06400112
 470:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
 474:	2a000013 	bcs	4c8 <__Stack_Size+0xc8>
 478:	08030005 	stmdaeq	r3, {r0, r2}
 47c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 480:	13490b39 	movtne	r0, #39737	; 0x9b39
 484:	00000a02 	andeq	r0, r0, r2, lsl #20
 488:	0300052b 	movweq	r0, #1323	; 0x52b
 48c:	3b0b3a0e 	blcc	2ceccc <__Stack_Size+0x2ce8cc>
 490:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 494:	000a0213 	andeq	r0, sl, r3, lsl r2
 498:	012e2c00 			; <UNDEFINED> instruction: 0x012e2c00
 49c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
 4a0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 4a4:	01110b39 	tsteq	r1, r9, lsr fp
 4a8:	06400112 			; <UNDEFINED> instruction: 0x06400112
 4ac:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
 4b0:	2d000013 	stccs	0, cr0, [r0, #-76]	; 0xffffffb4
 4b4:	0655010b 	ldrbeq	r0, [r5], -fp, lsl #2
 4b8:	00001301 	andeq	r1, r0, r1, lsl #6
 4bc:	11010b2e 	tstne	r1, lr, lsr #22
 4c0:	01011201 	tsteq	r1, r1, lsl #4
 4c4:	2f000013 	svccs	0x00000013
 4c8:	01018289 	smlabbeq	r1, r9, r2, r8
 4cc:	13010111 	movwne	r0, #4369	; 0x1111
 4d0:	8a300000 	bhi	c004d8 <__Stack_Size+0xc000d8>
 4d4:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
 4d8:	0a42910a 	beq	10a4908 <__Stack_Size+0x10a4508>
 4dc:	89310000 	ldmdbhi	r1!, {}	; <UNPREDICTABLE>
 4e0:	11010182 	smlabbne	r1, r2, r1, r0
 4e4:	32000001 	andcc	r0, r0, #1
 4e8:	00018289 	andeq	r8, r1, r9, lsl #5
 4ec:	13310111 	teqne	r1, #1073741828	; 0x40000004
 4f0:	89330000 	ldmdbhi	r3!, {}	; <UNPREDICTABLE>
 4f4:	11010182 	smlabbne	r1, r2, r1, r0
 4f8:	01133101 	tsteq	r3, r1, lsl #2
 4fc:	34000013 	strcc	r0, [r0], #-19	; 0xffffffed
 500:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 450 <__Stack_Size+0x50>
 504:	0b3a0e03 	bleq	e83d18 <__Stack_Size+0xe83918>
 508:	0b390b3b 	bleq	e431fc <__Stack_Size+0xe42dfc>
 50c:	01110c27 	tsteq	r1, r7, lsr #24
 510:	06400112 			; <UNDEFINED> instruction: 0x06400112
 514:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
 518:	35000013 	strcc	r0, [r0, #-19]	; 0xffffffed
 51c:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
 520:	0b3b0b3a 	bleq	ec3210 <__Stack_Size+0xec2e10>
 524:	13490b39 	movtne	r0, #39737	; 0x9b39
 528:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
 52c:	36000006 	strcc	r0, [r0], -r6
 530:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 534:	0b3b0b3a 	bleq	ec3224 <__Stack_Size+0xec2e24>
 538:	13490b39 	movtne	r0, #39737	; 0x9b39
 53c:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
 540:	37000006 	strcc	r0, [r0, -r6]
 544:	08030034 	stmdaeq	r3, {r2, r4, r5}
 548:	0b3b0b3a 	bleq	ec3238 <__Stack_Size+0xec2e38>
 54c:	13490b39 	movtne	r0, #39737	; 0x9b39
 550:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
 554:	38000006 	stmdacc	r0, {r1, r2}
 558:	0e03012e 	adfeqsp	f0, f3, #0.5
 55c:	0b3b0b3a 	bleq	ec324c <__Stack_Size+0xec2e4c>
 560:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
 564:	01120111 	tsteq	r2, r1, lsl r1
 568:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
 56c:	0013010c 	andseq	r0, r3, ip, lsl #2
 570:	82893900 	addhi	r3, r9, #0, 18
 574:	01110101 	tsteq	r1, r1, lsl #2
 578:	00001331 	andeq	r1, r0, r1, lsr r3
 57c:	31011d3a 	tstcc	r1, sl, lsr sp
 580:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
 584:	01110b42 	tsteq	r1, r2, asr #22
 588:	0b580112 	bleq	16009d8 <__Stack_Size+0x16005d8>
 58c:	0b570b59 	bleq	15c32f8 <__Stack_Size+0x15c2ef8>
 590:	00001301 	andeq	r1, r0, r1, lsl #6
 594:	3100053b 	tstcc	r0, fp, lsr r5
 598:	b7060213 	smladlt	r6, r3, r2, r0
 59c:	00000642 	andeq	r0, r0, r2, asr #12
 5a0:	31011d3c 	tstcc	r1, ip, lsr sp
 5a4:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
 5a8:	06550b42 	ldrbeq	r0, [r5], -r2, asr #22
 5ac:	0b590b58 	bleq	1643314 <__Stack_Size+0x1642f14>
 5b0:	13010b57 	movwne	r0, #6999	; 0x1b57
 5b4:	0f3d0000 	svceq	0x003d0000
 5b8:	000b0b00 	andeq	r0, fp, r0, lsl #22
 5bc:	00263e00 	eoreq	r3, r6, r0, lsl #28
 5c0:	2e3f0000 	cdpcs	0, 3, cr0, cr15, cr0, {0}
 5c4:	3a0e0301 	bcc	3811d0 <__Stack_Size+0x380dd0>
 5c8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 5cc:	200c270b 	andcs	r2, ip, fp, lsl #14
 5d0:	0013010b 	andseq	r0, r3, fp, lsl #2
 5d4:	00054000 	andeq	r4, r5, r0
 5d8:	0b3a0803 	bleq	e825ec <__Stack_Size+0xe821ec>
 5dc:	0b390b3b 	bleq	e432d0 <__Stack_Size+0xe42ed0>
 5e0:	00001349 	andeq	r1, r0, r9, asr #6
 5e4:	03000541 	movweq	r0, #1345	; 0x541
 5e8:	3b0b3a0e 	blcc	2cee28 <__Stack_Size+0x2cea28>
 5ec:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 5f0:	42000013 	andmi	r0, r0, #19
 5f4:	1331011d 	teqne	r1, #1073741831	; 0x40000007
 5f8:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
 5fc:	5806550b 	stmdapl	r6, {r0, r1, r3, r8, sl, ip, lr}
 600:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
 604:	4300000b 	movwmi	r0, #11
 608:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 558 <__Stack_Size+0x158>
 60c:	0b3a0e03 	bleq	e83e20 <__Stack_Size+0xe83a20>
 610:	0b390b3b 	bleq	e43304 <__Stack_Size+0xe42f04>
 614:	01120111 	tsteq	r2, r1, lsl r1
 618:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
 61c:	0013010c 	andseq	r0, r3, ip, lsl #2
 620:	010b4400 	tsteq	fp, r0, lsl #8
 624:	00001301 	andeq	r1, r0, r1, lsl #6
 628:	03003445 	movweq	r3, #1093	; 0x445
 62c:	3b0b3a0e 	blcc	2cee6c <__Stack_Size+0x2cea6c>
 630:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 634:	46000013 			; <UNDEFINED> instruction: 0x46000013
 638:	1331011d 	teqne	r1, #1073741831	; 0x40000007
 63c:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
 640:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
 644:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
 648:	000b570b 	andeq	r5, fp, fp, lsl #14
 64c:	012e4700 			; <UNDEFINED> instruction: 0x012e4700
 650:	0b3a0e03 	bleq	e83e64 <__Stack_Size+0xe83a64>
 654:	0b390b3b 	bleq	e43348 <__Stack_Size+0xe42f48>
 658:	01110c27 	tsteq	r1, r7, lsr #24
 65c:	0a400112 	beq	1000aac <__Stack_Size+0x10006ac>
 660:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
 664:	48000013 	stmdami	r0, {r0, r1, r4}
 668:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
 66c:	0b3b0b3a 	bleq	ec335c <__Stack_Size+0xec2f5c>
 670:	13490b39 	movtne	r0, #39737	; 0x9b39
 674:	00000a02 	andeq	r0, r0, r2, lsl #20
 678:	3f012e49 	svccc	0x00012e49
 67c:	3a0e030c 	bcc	3812b4 <__Stack_Size+0x380eb4>
 680:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 684:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
 688:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
 68c:	970a4001 	strls	r4, [sl, -r1]
 690:	13010c42 	movwne	r0, #7234	; 0x1c42
 694:	054a0000 	strbeq	r0, [sl, #-0]
 698:	3a080300 	bcc	2012a0 <__Stack_Size+0x200ea0>
 69c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 6a0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 6a4:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
 6a8:	2e4b0000 	cdpcs	0, 4, cr0, cr11, cr0, {0}
 6ac:	030c3f00 	movweq	r3, #52992	; 0xcf00
 6b0:	3b0b3a0e 	blcc	2ceef0 <__Stack_Size+0x2ceaf0>
 6b4:	000b390b 	andeq	r3, fp, fp, lsl #18
 6b8:	002e4c00 	eoreq	r4, lr, r0, lsl #24
 6bc:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
 6c0:	0b3b0b3a 	bleq	ec33b0 <__Stack_Size+0xec2fb0>
 6c4:	0b200b39 	bleq	8033b0 <__Stack_Size+0x802fb0>
 6c8:	2e4d0000 	cdpcs	0, 4, cr0, cr13, cr0, {0}
 6cc:	3a0e0301 	bcc	3812d8 <__Stack_Size+0x380ed8>
 6d0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 6d4:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
 6d8:	010b2013 	tsteq	fp, r3, lsl r0
 6dc:	4e000013 	mcrmi	0, 0, r0, cr0, cr3, {0}
 6e0:	0e03012e 	adfeqsp	f0, f3, #0.5
 6e4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 6e8:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
 6ec:	13010b20 	movwne	r0, #6944	; 0x1b20
 6f0:	054f0000 	strbeq	r0, [pc, #-0]	; 6f8 <__Stack_Size+0x2f8>
 6f4:	3a0e0300 	bcc	3812fc <__Stack_Size+0x380efc>
 6f8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 6fc:	0013490b 	andseq	r4, r3, fp, lsl #18
 700:	002e5000 	eoreq	r5, lr, r0
 704:	01111331 	tsteq	r1, r1, lsr r3
 708:	0a400112 	beq	1000b58 <__Stack_Size+0x1000758>
 70c:	000c4297 	muleq	ip, r7, r2
 710:	002e5100 	eoreq	r5, lr, r0, lsl #2
 714:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
 718:	030e4087 	movweq	r4, #57479	; 0xe087
 71c:	3b0b3a0e 	blcc	2cef5c <__Stack_Size+0x2ceb5c>
 720:	000b390b 	andeq	r3, fp, fp, lsl #18
 724:	11010000 	mrsne	r0, (UNDEF: 1)
 728:	130e2501 	movwne	r2, #58625	; 0xe501
 72c:	1b0e030b 	blne	381360 <__Stack_Size+0x380f60>
 730:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
 734:	00061001 	andeq	r1, r6, r1
 738:	00240200 	eoreq	r0, r4, r0, lsl #4
 73c:	0b3e0b0b 	bleq	f83370 <__Stack_Size+0xf82f70>
 740:	00000e03 	andeq	r0, r0, r3, lsl #28
 744:	03001603 	movweq	r1, #1539	; 0x603
 748:	3b0b3a0e 	blcc	2cef88 <__Stack_Size+0x2ceb88>
 74c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 750:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
 754:	13490035 	movtne	r0, #36917	; 0x9035
 758:	26050000 	strcs	r0, [r5], -r0
 75c:	00134900 	andseq	r4, r3, r0, lsl #18
 760:	00240600 	eoreq	r0, r4, r0, lsl #12
 764:	0b3e0b0b 	bleq	f83398 <__Stack_Size+0xf82f98>
 768:	00000803 	andeq	r0, r0, r3, lsl #16
 76c:	0b011307 	bleq	45390 <__Stack_Size+0x44f90>
 770:	3b0b3a0b 	blcc	2cefa4 <__Stack_Size+0x2ceba4>
 774:	010b390b 	tsteq	fp, fp, lsl #18
 778:	08000013 	stmdaeq	r0, {r0, r1, r4}
 77c:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 780:	0b3b0b3a 	bleq	ec3470 <__Stack_Size+0xec3070>
 784:	13490b39 	movtne	r0, #39737	; 0x9b39
 788:	00000a38 	andeq	r0, r0, r8, lsr sl
 78c:	3e010409 	cdpcc	4, 0, cr0, cr1, cr9, {0}
 790:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
 794:	3b0b3a13 	blcc	2cefe8 <__Stack_Size+0x2cebe8>
 798:	010b390b 	tsteq	fp, fp, lsl #18
 79c:	0a000013 	beq	7f0 <__Stack_Size+0x3f0>
 7a0:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
 7a4:	00000d1c 	andeq	r0, r0, ip, lsl sp
 7a8:	0300280b 	movweq	r2, #2059	; 0x80b
 7ac:	000b1c0e 	andeq	r1, fp, lr, lsl #24
 7b0:	01130c00 	tsteq	r3, r0, lsl #24
 7b4:	0b3a050b 	bleq	e81be8 <__Stack_Size+0xe817e8>
 7b8:	0b390b3b 	bleq	e434ac <__Stack_Size+0xe430ac>
 7bc:	00001301 	andeq	r1, r0, r1, lsl #6
 7c0:	03000d0d 	movweq	r0, #3341	; 0xd0d
 7c4:	3b0b3a08 	blcc	2cefec <__Stack_Size+0x2cebec>
 7c8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 7cc:	000a3813 	andeq	r3, sl, r3, lsl r8
 7d0:	01010e00 	tsteq	r1, r0, lsl #28
 7d4:	13011349 	movwne	r1, #4937	; 0x1349
 7d8:	210f0000 	mrscs	r0, CPSR
 7dc:	2f134900 	svccs	0x00134900
 7e0:	1000000b 	andne	r0, r0, fp
 7e4:	13490021 	movtne	r0, #36897	; 0x9021
 7e8:	0000052f 	andeq	r0, r0, pc, lsr #10
 7ec:	03003411 	movweq	r3, #1041	; 0x411
 7f0:	3b0b3a0e 	blcc	2cf030 <__Stack_Size+0x2cec30>
 7f4:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 7f8:	3c0c3f13 	stccc	15, cr3, [ip], {19}
 7fc:	1200000c 	andne	r0, r0, #12
 800:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 804:	0b3b0b3a 	bleq	ec34f4 <__Stack_Size+0xec30f4>
 808:	13490b39 	movtne	r0, #39737	; 0x9b39
 80c:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
 810:	13130000 	tstne	r3, #0
 814:	3a0b0b01 	bcc	2c3420 <__Stack_Size+0x2c3020>
 818:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 81c:	0013010b 	andseq	r0, r3, fp, lsl #2
 820:	000d1400 	andeq	r1, sp, r0, lsl #8
 824:	0b3a0803 	bleq	e82838 <__Stack_Size+0xe82438>
 828:	0b39053b 	bleq	e41d1c <__Stack_Size+0xe4191c>
 82c:	0a381349 	beq	e05558 <__Stack_Size+0xe05158>
 830:	0d150000 	ldceq	0, cr0, [r5, #-0]
 834:	3a0e0300 	bcc	38143c <__Stack_Size+0x38103c>
 838:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 83c:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 840:	1600000a 	strne	r0, [r0], -sl
 844:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
 848:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 84c:	13490b39 	movtne	r0, #39737	; 0x9b39
 850:	17170000 	ldrne	r0, [r7, -r0]
 854:	3a0b0b01 	bcc	2c3460 <__Stack_Size+0x2c3060>
 858:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 85c:	0013010b 	andseq	r0, r3, fp, lsl #2
 860:	000d1800 	andeq	r1, sp, r0, lsl #16
 864:	0b3a0e03 	bleq	e84078 <__Stack_Size+0xe83c78>
 868:	0b390b3b 	bleq	e4355c <__Stack_Size+0xe4315c>
 86c:	00001349 	andeq	r1, r0, r9, asr #6
 870:	0b000f19 	bleq	44dc <__Stack_Size+0x40dc>
 874:	1a00000b 	bne	8a8 <__Stack_Size+0x4a8>
 878:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
 87c:	0b3a0b0b 	bleq	e834b0 <__Stack_Size+0xe830b0>
 880:	0b390b3b 	bleq	e43574 <__Stack_Size+0xe43174>
 884:	00001301 	andeq	r1, r0, r1, lsl #6
 888:	0b000f1b 	bleq	44fc <__Stack_Size+0x40fc>
 88c:	0013490b 	andseq	r4, r3, fp, lsl #18
 890:	01131c00 	tsteq	r3, r0, lsl #24
 894:	050b0e03 	streq	r0, [fp, #-3587]	; 0xfffff1fd
 898:	0b3b0b3a 	bleq	ec3588 <__Stack_Size+0xec3188>
 89c:	13010b39 	movwne	r0, #6969	; 0x1b39
 8a0:	151d0000 	ldrne	r0, [sp, #-0]
 8a4:	000c2700 	andeq	r2, ip, r0, lsl #14
 8a8:	01151e00 	tsteq	r5, r0, lsl #28
 8ac:	13490c27 	movtne	r0, #39975	; 0x9c27
 8b0:	00001301 	andeq	r1, r0, r1, lsl #6
 8b4:	4900051f 	stmdbmi	r0, {r0, r1, r2, r3, r4, r8, sl}
 8b8:	20000013 	andcs	r0, r0, r3, lsl r0
 8bc:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
 8c0:	0b3a050b 	bleq	e81cf4 <__Stack_Size+0xe818f4>
 8c4:	0b39053b 	bleq	e41db8 <__Stack_Size+0xe419b8>
 8c8:	00001301 	andeq	r1, r0, r1, lsl #6
 8cc:	03011321 	movweq	r1, #4897	; 0x1321
 8d0:	3a0b0b0e 	bcc	2c3510 <__Stack_Size+0x2c3110>
 8d4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 8d8:	0013010b 	andseq	r0, r3, fp, lsl #2
 8dc:	01172200 	tsteq	r7, r0, lsl #4
 8e0:	0b3a0b0b 	bleq	e83514 <__Stack_Size+0xe83114>
 8e4:	0b39053b 	bleq	e41dd8 <__Stack_Size+0xe419d8>
 8e8:	00001301 	andeq	r1, r0, r1, lsl #6
 8ec:	03000d23 	movweq	r0, #3363	; 0xd23
 8f0:	3b0b3a0e 	blcc	2cf130 <__Stack_Size+0x2ced30>
 8f4:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 8f8:	24000013 	strcs	r0, [r0], #-19	; 0xffffffed
 8fc:	0e030013 	mcreq	0, 0, r0, cr3, cr3, {0}
 900:	00000c3c 	andeq	r0, r0, ip, lsr ip
 904:	27011525 	strcs	r1, [r1, -r5, lsr #10]
 908:	0013010c 	andseq	r0, r3, ip, lsl #2
 90c:	00342600 	eorseq	r2, r4, r0, lsl #12
 910:	0b3a0e03 	bleq	e84124 <__Stack_Size+0xe83d24>
 914:	0b390b3b 	bleq	e43608 <__Stack_Size+0xe43208>
 918:	0a021349 	beq	85644 <__Stack_Size+0x85244>
 91c:	34270000 	strtcc	r0, [r7], #-0
 920:	3a0e0300 	bcc	381528 <__Stack_Size+0x381128>
 924:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 928:	3f13490b 	svccc	0x0013490b
 92c:	000a020c 	andeq	r0, sl, ip, lsl #4
 930:	00342800 	eorseq	r2, r4, r0, lsl #16
 934:	0b3a0e03 	bleq	e84148 <__Stack_Size+0xe83d48>
 938:	0b39053b 	bleq	e41e2c <__Stack_Size+0xe41a2c>
 93c:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 820 <__Stack_Size+0x420>
 940:	00000a02 	andeq	r0, r0, r2, lsl #20
 944:	3f012e29 	svccc	0x00012e29
 948:	3a0e030c 	bcc	381580 <__Stack_Size+0x381180>
 94c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 950:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
 954:	97064001 	strls	r4, [r6, -r1]
 958:	13010c42 	movwne	r0, #7234	; 0x1c42
 95c:	342a0000 	strtcc	r0, [sl], #-0
 960:	3a080300 	bcc	201568 <__Stack_Size+0x201168>
 964:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 968:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 96c:	2b00000a 	blcs	99c <__Stack_Size+0x59c>
 970:	08030034 	stmdaeq	r3, {r2, r4, r5}
 974:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 978:	13490b39 	movtne	r0, #39737	; 0x9b39
 97c:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
 980:	2c000006 	stccs	0, cr0, [r0], {6}
 984:	1331011d 	teqne	r1, #1073741831	; 0x40000007
 988:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
 98c:	5806550b 	stmdapl	r6, {r0, r1, r3, r8, sl, ip, lr}
 990:	5705590b 	strpl	r5, [r5, -fp, lsl #18]
 994:	0013010b 	andseq	r0, r3, fp, lsl #2
 998:	00052d00 	andeq	r2, r5, r0, lsl #26
 99c:	06021331 			; <UNDEFINED> instruction: 0x06021331
 9a0:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
 9a4:	011d2e00 	tsteq	sp, r0, lsl #28
 9a8:	01521331 	cmpeq	r2, r1, lsr r3
 9ac:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
 9b0:	58011201 	stmdapl	r1, {r0, r9, ip}
 9b4:	5705590b 	strpl	r5, [r5, -fp, lsl #18]
 9b8:	0013010b 	andseq	r0, r3, fp, lsl #2
 9bc:	82892f00 	addhi	r2, r9, #0, 30
 9c0:	01110101 	tsteq	r1, r1, lsl #2
 9c4:	00001331 	andeq	r1, r0, r1, lsr r3
 9c8:	01828a30 	orreq	r8, r2, r0, lsr sl
 9cc:	910a0200 	mrsls	r0, R10_fiq
 9d0:	00000a42 	andeq	r0, r0, r2, asr #20
 9d4:	01828931 	orreq	r8, r2, r1, lsr r9
 9d8:	31011101 	tstcc	r1, r1, lsl #2
 9dc:	00130113 	andseq	r0, r3, r3, lsl r1
 9e0:	010b3200 	mrseq	r3, R11_fiq
 9e4:	00001301 	andeq	r1, r0, r1, lsl #6
 9e8:	03003433 	movweq	r3, #1075	; 0x433
 9ec:	3b0b3a0e 	blcc	2cf22c <__Stack_Size+0x2cee2c>
 9f0:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 9f4:	34000013 	strcc	r0, [r0], #-19	; 0xffffffed
 9f8:	0655010b 	ldrbeq	r0, [r5], -fp, lsl #2
 9fc:	00001301 	andeq	r1, r0, r1, lsl #6
 a00:	03003435 	movweq	r3, #1077	; 0x435
 a04:	3b0b3a0e 	blcc	2cf244 <__Stack_Size+0x2cee44>
 a08:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 a0c:	b7060213 	smladlt	r6, r3, r2, r0
 a10:	00000642 	andeq	r0, r0, r2, asr #12
 a14:	01828936 	orreq	r8, r2, r6, lsr r9
 a18:	95011101 	strls	r1, [r1, #-257]	; 0xfffffeff
 a1c:	13310c42 	teqne	r1, #16896	; 0x4200
 a20:	2e370000 	cdpcs	0, 3, cr0, cr7, cr0, {0}
 a24:	030c3f01 	movweq	r3, #52993	; 0xcf01
 a28:	3b0b3a0e 	blcc	2cf268 <__Stack_Size+0x2cee68>
 a2c:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
 a30:	1201110c 	andne	r1, r1, #12, 2
 a34:	970a4001 	strls	r4, [sl, -r1]
 a38:	13010c42 	movwne	r0, #7234	; 0x1c42
 a3c:	05380000 	ldreq	r0, [r8, #-0]!
 a40:	3a0e0300 	bcc	381648 <__Stack_Size+0x381248>
 a44:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 a48:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 a4c:	3900000a 	stmdbcc	r0, {r1, r3}
 a50:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 9a0 <__Stack_Size+0x5a0>
 a54:	0b3a0e03 	bleq	e84268 <__Stack_Size+0xe83e68>
 a58:	0b390b3b 	bleq	e4374c <__Stack_Size+0xe4334c>
 a5c:	13490c27 	movtne	r0, #39975	; 0x9c27
 a60:	01120111 	tsteq	r2, r1, lsl r1
 a64:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
 a68:	0013010c 	andseq	r0, r3, ip, lsl #2
 a6c:	00053a00 	andeq	r3, r5, r0, lsl #20
 a70:	0b3a0803 	bleq	e82a84 <__Stack_Size+0xe82684>
 a74:	0b390b3b 	bleq	e43768 <__Stack_Size+0xe43368>
 a78:	06021349 	streq	r1, [r2], -r9, asr #6
 a7c:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
 a80:	00053b00 	andeq	r3, r5, r0, lsl #22
 a84:	0b3a0e03 	bleq	e84298 <__Stack_Size+0xe83e98>
 a88:	0b390b3b 	bleq	e4377c <__Stack_Size+0xe4337c>
 a8c:	06021349 	streq	r1, [r2], -r9, asr #6
 a90:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
 a94:	011d3c00 	tsteq	sp, r0, lsl #24
 a98:	01521331 	cmpeq	r2, r1, lsr r3
 a9c:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
 aa0:	58011201 	stmdapl	r1, {r0, r9, ip}
 aa4:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
 aa8:	3d00000b 	stccc	0, cr0, [r0, #-44]	; 0xffffffd4
 aac:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 9fc <__Stack_Size+0x5fc>
 ab0:	0b3a0e03 	bleq	e842c4 <__Stack_Size+0xe83ec4>
 ab4:	0b390b3b 	bleq	e437a8 <__Stack_Size+0xe433a8>
 ab8:	13490c27 	movtne	r0, #39975	; 0x9c27
 abc:	01120111 	tsteq	r2, r1, lsl r1
 ac0:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
 ac4:	0013010c 	andseq	r0, r3, ip, lsl #2
 ac8:	00053e00 	andeq	r3, r5, r0, lsl #28
 acc:	0b3a0e03 	bleq	e842e0 <__Stack_Size+0xe83ee0>
 ad0:	0b390b3b 	bleq	e437c4 <__Stack_Size+0xe433c4>
 ad4:	0a021349 	beq	85800 <__Stack_Size+0x85400>
 ad8:	2e3f0000 	cdpcs	0, 3, cr0, cr15, cr0, {0}
 adc:	030c3f01 	movweq	r3, #52993	; 0xcf01
 ae0:	3b0b3a0e 	blcc	2cf320 <__Stack_Size+0x2cef20>
 ae4:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 ae8:	1201110c 	andne	r1, r1, #12, 2
 aec:	970a4001 	strls	r4, [sl, -r1]
 af0:	13010c42 	movwne	r0, #7234	; 0x1c42
 af4:	26400000 	strbcs	r0, [r0], -r0
 af8:	41000000 	mrsmi	r0, (UNDEF: 0)
 afc:	0c3f012e 	ldfeqs	f0, [pc], #-184	; a4c <__Stack_Size+0x64c>
 b00:	0b3a0e03 	bleq	e84314 <__Stack_Size+0xe83f14>
 b04:	0b390b3b 	bleq	e437f8 <__Stack_Size+0xe433f8>
 b08:	01110c27 	tsteq	r1, r7, lsr #24
 b0c:	06400112 			; <UNDEFINED> instruction: 0x06400112
 b10:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
 b14:	42000013 	andmi	r0, r0, #19
 b18:	1331011d 	teqne	r1, #1073741831	; 0x40000007
 b1c:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
 b20:	5806550b 	stmdapl	r6, {r0, r1, r3, r8, sl, ip, lr}
 b24:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
 b28:	0013010b 	andseq	r0, r3, fp, lsl #2
 b2c:	00344300 	eorseq	r4, r4, r0, lsl #6
 b30:	0b3a0e03 	bleq	e84344 <__Stack_Size+0xe83f44>
 b34:	0b390b3b 	bleq	e43828 <__Stack_Size+0xe43428>
 b38:	06021349 	streq	r1, [r2], -r9, asr #6
 b3c:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
 b40:	011d4400 	tsteq	sp, r0, lsl #8
 b44:	01521331 	cmpeq	r2, r1, lsr r3
 b48:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
 b4c:	58011201 	stmdapl	r1, {r0, r9, ip}
 b50:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
 b54:	0013010b 	andseq	r0, r3, fp, lsl #2
 b58:	012e4500 			; <UNDEFINED> instruction: 0x012e4500
 b5c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
 b60:	0b3b0b3a 	bleq	ec3850 <__Stack_Size+0xec3450>
 b64:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
 b68:	13010b20 	movwne	r0, #6944	; 0x1b20
 b6c:	05460000 	strbeq	r0, [r6, #-0]
 b70:	3a080300 	bcc	201778 <__Stack_Size+0x201378>
 b74:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 b78:	0013490b 	andseq	r4, r3, fp, lsl #18
 b7c:	00344700 	eorseq	r4, r4, r0, lsl #14
 b80:	0b3a0803 	bleq	e82b94 <__Stack_Size+0xe82794>
 b84:	0b390b3b 	bleq	e43878 <__Stack_Size+0xe43478>
 b88:	06021349 	streq	r1, [r2], -r9, asr #6
 b8c:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
 b90:	012e4800 			; <UNDEFINED> instruction: 0x012e4800
 b94:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
 b98:	0b3b0b3a 	bleq	ec3888 <__Stack_Size+0xec3488>
 b9c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
 ba0:	0b201349 	bleq	8058cc <__Stack_Size+0x8054cc>
 ba4:	00001301 	andeq	r1, r0, r1, lsl #6
 ba8:	03012e49 	movweq	r2, #7753	; 0x1e49
 bac:	3b0b3a0e 	blcc	2cf3ec <__Stack_Size+0x2cefec>
 bb0:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 bb4:	2013490c 	andscs	r4, r3, ip, lsl #18
 bb8:	0013010b 	andseq	r0, r3, fp, lsl #2
 bbc:	00054a00 	andeq	r4, r5, r0, lsl #20
 bc0:	0b3a0e03 	bleq	e843d4 <__Stack_Size+0xe83fd4>
 bc4:	0b390b3b 	bleq	e438b8 <__Stack_Size+0xe434b8>
 bc8:	00001349 	andeq	r1, r0, r9, asr #6
 bcc:	03012e4b 	movweq	r2, #7755	; 0x1e4b
 bd0:	3b0b3a0e 	blcc	2cf410 <__Stack_Size+0x2cf010>
 bd4:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 bd8:	010b200c 	tsteq	fp, ip
 bdc:	4c000013 	stcmi	0, cr0, [r0], {19}
 be0:	0e03012e 	adfeqsp	f0, f3, #0.5
 be4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 be8:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
 bec:	13010b20 	movwne	r0, #6944	; 0x1b20
 bf0:	054d0000 	strbeq	r0, [sp, #-0]
 bf4:	3a0e0300 	bcc	3817fc <__Stack_Size+0x3813fc>
 bf8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 bfc:	0013490b 	andseq	r4, r3, fp, lsl #18
 c00:	012e4e00 			; <UNDEFINED> instruction: 0x012e4e00
 c04:	01111331 	tsteq	r1, r1, lsr r3
 c08:	0a400112 	beq	1001058 <__Stack_Size+0x1000c58>
 c0c:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
 c10:	4f000013 	svcmi	0x00000013
 c14:	13310005 	teqne	r1, #5
 c18:	00000a02 	andeq	r0, r0, r2, lsl #20
 c1c:	3f002e50 	svccc	0x00002e50
 c20:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
 c24:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
 c28:	0b3b0b3a 	bleq	ec3918 <__Stack_Size+0xec3518>
 c2c:	00000b39 	andeq	r0, r0, r9, lsr fp
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
       0:	0000025b 	andeq	r0, r0, fp, asr r2
       4:	00af0003 	adceq	r0, pc, r3
       8:	01020000 	mrseq	r0, (UNDEF: 2)
       c:	000d0efb 	strdeq	r0, [sp], -fp
      10:	01010101 	tsteq	r1, r1, lsl #2
      14:	01000000 	mrseq	r0, (UNDEF: 0)
      18:	73010000 	movwvc	r0, #4096	; 0x1000
      1c:	6c006372 	stcvs	3, cr6, [r0], {114}	; 0x72
      20:	692f6269 	stmdbvs	pc!, {r0, r3, r5, r6, r9, sp, lr}	; <UNPREDICTABLE>
      24:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
      28:	2f006564 	svccs	0x00006564
      2c:	2f727375 	svccs	0x00727375
      30:	2f62696c 	svccs	0x0062696c
      34:	2f636367 	svccs	0x00636367
      38:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
      3c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
      40:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
      44:	2e382f69 	cdpcs	15, 3, cr2, cr8, cr9, {3}
      48:	2f312e33 	svccs	0x00312e33
      4c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
      50:	00656475 	rsbeq	r6, r5, r5, ror r4
      54:	6f6c6300 	svcvs	0x006c6300
      58:	682e6b63 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
      5c:	00000100 	andeq	r0, r0, r0, lsl #2
      60:	6e69616d 	powvsez	f6, f1, #5.0
      64:	0100632e 	tsteq	r0, lr, lsr #6
      68:	6f630000 	svcvs	0x00630000
      6c:	635f6572 	cmpvs	pc, #478150656	; 0x1c800000
      70:	682e336d 	stmdavs	lr!, {r0, r2, r3, r5, r6, r8, r9, ip, sp}
      74:	00000200 	andeq	r0, r0, r0, lsl #4
      78:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
      7c:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
      80:	00000300 	andeq	r0, r0, r0, lsl #6
      84:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
      88:	735f6d65 	cmpvc	pc, #6464	; 0x1940
      8c:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
      90:	78783166 	ldmdavc	r8!, {r1, r2, r5, r6, r8, ip, sp}^
      94:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
      98:	74730000 	ldrbtvc	r0, [r3], #-0
      9c:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
      a0:	78333031 	ldmdavc	r3!, {r0, r4, r5, ip, sp}
      a4:	00682e62 	rsbeq	r2, r8, r2, ror #28
      a8:	75000002 	strvc	r0, [r0, #-2]
      ac:	6c5f6273 	lfmvs	f6, 2, [pc], {115}	; 0x73
      b0:	682e6269 	stmdavs	lr!, {r0, r3, r5, r6, r9, sp, lr}
      b4:	00000100 	andeq	r0, r0, r0, lsl #2
      b8:	00150500 	andseq	r0, r5, r0, lsl #10
      bc:	01200205 			; <UNDEFINED> instruction: 0x01200205
      c0:	0c030800 	stceq	8, cr0, [r3], {-0}
      c4:	13030501 	movwne	r0, #13569	; 0x3501
      c8:	0b051313 	bleq	144d1c <__Stack_Size+0x14491c>
      cc:	03050106 	movweq	r0, #20742	; 0x5106
      d0:	0b055906 	bleq	1564f0 <__Stack_Size+0x1560f0>
      d4:	03050106 	movweq	r0, #20742	; 0x5106
      d8:	0b054b06 	bleq	152cf8 <__Stack_Size+0x1528f8>
      dc:	03050106 	movweq	r0, #20742	; 0x5106
      e0:	0b054b06 	bleq	152d00 <__Stack_Size+0x152900>
      e4:	05051106 	streq	r1, [r5, #-262]	; 0xfffffefa
      e8:	0b053006 	bleq	14c108 <__Stack_Size+0x14bd08>
      ec:	07050106 	streq	r0, [r5, -r6, lsl #2]
      f0:	00030520 	andeq	r0, r3, r0, lsr #10
      f4:	2d020402 	cfstrscs	mvf0, [r2, #-8]
      f8:	02040200 	andeq	r0, r4, #0, 4
      fc:	23190520 	tstcs	r9, #32, 10	; 0x8000000
     100:	24030a05 	strcs	r0, [r3], #-2565	; 0xfffff5fb
     104:	2101052e 	tstcs	r1, lr, lsr #10
     108:	03060305 	movweq	r0, #25349	; 0x6305
     10c:	05132076 	ldreq	r2, [r3, #-118]	; 0xffffff8a
     110:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
     114:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
     118:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
     11c:	052f0603 	streq	r0, [pc, #-1539]!	; fffffb21 <BootRAM+0xef702c2>
     120:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
     124:	052f0603 	streq	r0, [pc, #-1539]!	; fffffb29 <BootRAM+0xef702ca>
     128:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     12c:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
     130:	0511060d 	ldreq	r0, [r1, #-1549]	; 0xfffff9f3
     134:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
     138:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
     13c:	07052013 	smladeq	r5, r3, r0, r2
     140:	2d03052e 	cfstr32cs	mvfx0, [r3, #-184]	; 0xffffff48
     144:	23190520 	tstcs	r9, #32, 10	; 0x8000000
     148:	0603052e 	streq	r0, [r3], -lr, lsr #10
     14c:	05015d03 	streq	r5, [r1, #-3331]	; 0xfffff2fd
     150:	01770308 	cmneq	r7, r8, lsl #6
     154:	0a030305 	beq	c0d70 <__Stack_Size+0xc0970>
     158:	060e0501 	streq	r0, [lr], -r1, lsl #10
     15c:	06030501 	streq	r0, [r3], -r1, lsl #10
     160:	060e0559 			; <UNDEFINED> instruction: 0x060e0559
     164:	06030501 	streq	r0, [r3], -r1, lsl #10
     168:	060e054c 	streq	r0, [lr], -ip, asr #10
     16c:	06030501 	streq	r0, [r3], -r1, lsl #10
     170:	060e054b 	streq	r0, [lr], -fp, asr #10
     174:	06030501 	streq	r0, [r3], -r1, lsl #10
     178:	0607054c 	streq	r0, [r7], -ip, asr #10
     17c:	06030501 	streq	r0, [r3], -r1, lsl #10
     180:	13151321 	tstne	r5, #-2080374784	; 0x84000000
     184:	2f141314 	svccs	0x00141314
     188:	01060705 	tsteq	r6, r5, lsl #14
     18c:	0603052e 	streq	r0, [r3], -lr, lsr #10
     190:	060d0530 			; <UNDEFINED> instruction: 0x060d0530
     194:	06030501 	streq	r0, [r3], -r1, lsl #10
     198:	060b0522 	streq	r0, [fp], -r2, lsr #10
     19c:	03052001 	movweq	r2, #20481	; 0x5001
     1a0:	0b053d06 	bleq	14f5c0 <__Stack_Size+0x14f1c0>
     1a4:	05051106 	streq	r1, [r5, #-262]	; 0xfffffefa
     1a8:	0b053006 	bleq	14c1c8 <__Stack_Size+0x14bdc8>
     1ac:	07050106 	streq	r0, [r5, -r6, lsl #2]
     1b0:	2d030520 	cfstr32cs	mvfx0, [r3, #-128]	; 0xffffff80
     1b4:	23190520 	tstcs	r9, #32, 10	; 0x8000000
     1b8:	2c050204 	sfmcs	f0, 4, [r5], {4}
     1bc:	02050006 	andeq	r0, r5, #6
     1c0:	080001ce 	stmdaeq	r0, {r1, r2, r3, r6, r7, r8}
     1c4:	05015703 	streq	r5, [r1, #-1795]	; 0xfffff8fd
     1c8:	0105012d 	tsteq	r5, sp, lsr #2
     1cc:	1a050106 	bne	1405ec <__Stack_Size+0x1401ec>
     1d0:	03052206 	movweq	r2, #20998	; 0x5206
     1d4:	00080513 	andeq	r0, r8, r3, lsl r5
     1d8:	06010402 	streq	r0, [r1], -r2, lsl #8
     1dc:	04020001 	streq	r0, [r2], #-1
     1e0:	01052e01 	tsteq	r5, r1, lsl #28
     1e4:	00100521 	andseq	r0, r0, r1, lsr #10
     1e8:	06020402 	streq	r0, [r2], -r2, lsl #8
     1ec:	0002021f 	andeq	r0, r2, pc, lsl r2
     1f0:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
     1f4:	05000f05 	streq	r0, [r0, #-3845]	; 0xfffff0fb
     1f8:	000c5002 	andeq	r5, ip, r2
     1fc:	010d0308 	tsteq	sp, r8, lsl #6
     200:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
     204:	0511060f 	ldreq	r0, [r1, #-1551]	; 0xfffff9f1
     208:	2f062103 	svccs	0x00062103
     20c:	01061005 	tsteq	r6, r5
     210:	5a060305 	bpl	180e2c <__Stack_Size+0x180a2c>
     214:	01010101 	tsteq	r1, r1, lsl #2
     218:	202e2e2e 	eorcs	r2, lr, lr, lsr #28
     21c:	01011605 	tsteq	r1, r5, lsl #12
     220:	20010101 	andcs	r0, r1, r1, lsl #2
     224:	20062e2e 	andcs	r2, r6, lr, lsr #28
     228:	29050106 	stmdbcs	r5, {r1, r2, r8}
     22c:	01010101 	tsteq	r1, r1, lsl #2
     230:	2e2e2001 	cdpcs	0, 2, cr2, cr14, cr1, {0}
     234:	01062006 	tsteq	r6, r6
     238:	2f150305 	svccs	0x00150305
     23c:	16050304 	strne	r0, [r5], -r4, lsl #6
     240:	01099e03 	tsteq	r9, r3, lsl #28
     244:	04013505 	streq	r3, [r1], #-1285	; 0xfffffafb
     248:	00030502 	andeq	r0, r3, r2, lsl #10
     24c:	03010402 	movweq	r0, #5122	; 0x1402
     250:	052076e4 	streq	r7, [r0, #-1764]!	; 0xfffff91c
     254:	04020005 	streq	r0, [r2], #-5
     258:	08021301 	stmdaeq	r2, {r0, r8, r9, ip}
     25c:	ab010100 	blge	40664 <__Stack_Size+0x40264>
     260:	03000007 	movweq	r0, #7
     264:	0000a700 	andeq	sl, r0, r0, lsl #14
     268:	fb010200 	blx	40a72 <__Stack_Size+0x40672>
     26c:	01000d0e 	tsteq	r0, lr, lsl #26
     270:	00010101 	andeq	r0, r1, r1, lsl #2
     274:	00010000 	andeq	r0, r1, r0
     278:	72730100 	rsbsvc	r0, r3, #0, 2
     27c:	696c0063 	stmdbvs	ip!, {r0, r1, r5, r6}^
     280:	6e692f62 	cdpvs	15, 6, cr2, cr9, cr2, {3}
     284:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     288:	752f0065 	strvc	r0, [pc, #-101]!	; 22b <_Minimum_Stack_Size+0x12b>
     28c:	6c2f7273 	sfmvs	f7, 4, [pc], #-460	; c8 <_Minimum_Stack_Size-0x38>
     290:	672f6269 	strvs	r6, [pc, -r9, ror #4]!
     294:	612f6363 			; <UNDEFINED> instruction: 0x612f6363
     298:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     29c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     2a0:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     2a4:	332e382f 			; <UNDEFINED> instruction: 0x332e382f
     2a8:	692f312e 	stmdbvs	pc!, {r1, r2, r3, r5, r8, ip, sp}	; <UNPREDICTABLE>
     2ac:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     2b0:	00006564 	andeq	r6, r0, r4, ror #10
     2b4:	5f627375 	svcpl	0x00627375
     2b8:	2e62696c 	vnmulcs.f16	s13, s4, s25	; <UNPREDICTABLE>
     2bc:	00010063 	andeq	r0, r1, r3, rrx
     2c0:	726f6300 	rsbvc	r6, pc, #0, 6
     2c4:	6d635f65 	stclvs	15, cr5, [r3, #-404]!	; 0xfffffe6c
     2c8:	00682e33 	rsbeq	r2, r8, r3, lsr lr
     2cc:	75000002 	strvc	r0, [r0, #-2]
     2d0:	6c5f6273 	lfmvs	f6, 2, [pc], {115}	; 0x73
     2d4:	682e6269 	stmdavs	lr!, {r0, r3, r5, r6, r9, sp, lr}
     2d8:	00000100 	andeq	r0, r0, r0, lsl #2
     2dc:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
     2e0:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
     2e4:	00000300 	andeq	r0, r0, r0, lsl #6
     2e8:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     2ec:	30316632 	eorscc	r6, r1, r2, lsr r6
     2f0:	2e627833 	mcrcs	8, 3, r7, cr2, cr3, {1}
     2f4:	00020068 	andeq	r0, r2, r8, rrx
     2f8:	73797300 	cmnvc	r9, #0, 6
     2fc:	5f6d6574 	svcpl	0x006d6574
     300:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     304:	78316632 	ldmdavc	r1!, {r1, r4, r5, r9, sl, sp, lr}
     308:	00682e78 	rsbeq	r2, r8, r8, ror lr
     30c:	00000002 	andeq	r0, r0, r2
     310:	05003105 	streq	r3, [r0, #-261]	; 0xfffffefb
     314:	0001dc02 	andeq	sp, r1, r2, lsl #24
     318:	011c0308 	tsteq	ip, r8, lsl #6
     31c:	05013205 	streq	r3, [r1, #-517]	; 0xfffffdfb
     320:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     324:	7a03062b 	bvc	c1bd8 <__Stack_Size+0xc17d8>
     328:	012c0520 			; <UNDEFINED> instruction: 0x012c0520
     32c:	01060105 	tsteq	r6, r5, lsl #2
     330:	3f065c05 	svccc	0x00065c05
     334:	05015d05 	streq	r5, [r1, #-3333]	; 0xfffff2fb
     338:	20010601 	andcs	r0, r1, r1, lsl #12
     33c:	21066305 	tstcs	r6, r5, lsl #6
     340:	05016405 	streq	r6, [r1, #-1029]	; 0xfffffbfb
     344:	20010601 	andcs	r0, r1, r1, lsl #12
     348:	03061105 	movweq	r1, #24837	; 0x6105
     34c:	0305201e 	movweq	r2, #20510	; 0x501e
     350:	06100513 			; <UNDEFINED> instruction: 0x06100513
     354:	06030501 	streq	r0, [r3], -r1, lsl #10
     358:	0101015d 	tsteq	r1, sp, asr r1
     35c:	2e2e3c01 	cdpcs	12, 2, cr3, cr14, cr1, {0}
     360:	06011320 	streq	r1, [r1], -r0, lsr #6
     364:	0524062e 	streq	r0, [r4, #-1582]!	; 0xfffff9d2
     368:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
     36c:	054b0603 	strbeq	r0, [fp, #-1539]	; 0xfffff9fd
     370:	01060107 	tsteq	r6, r7, lsl #2
     374:	05110f05 	ldreq	r0, [r1, #-3845]	; 0xfffff0fb
     378:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
     37c:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
     380:	04020003 	streq	r0, [r2], #-3
     384:	00200603 	eoreq	r0, r0, r3, lsl #12
     388:	20030402 	andcs	r0, r3, r2, lsl #8
     38c:	0f052106 	svceq	0x00052106
     390:	03050106 	movweq	r0, #20742	; 0x5106
     394:	0f052f06 	svceq	0x00052f06
     398:	03050106 	movweq	r0, #20742	; 0x5106
     39c:	0f052f06 	svceq	0x00052f06
     3a0:	03050106 	movweq	r0, #20742	; 0x5106
     3a4:	0f052f06 	svceq	0x00052f06
     3a8:	03050106 	movweq	r0, #20742	; 0x5106
     3ac:	0f052f06 	svceq	0x00052f06
     3b0:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
     3b4:	042f0603 	strteq	r0, [pc], #-1539	; 3bc <_Minimum_Stack_Size+0x2bc>
     3b8:	03160502 	tsteq	r6, #8388608	; 0x800000
     3bc:	05010b93 	streq	r0, [r1, #-2963]	; 0xfffff46d
     3c0:	27051403 	strcs	r1, [r5, -r3, lsl #8]
     3c4:	044a0106 	strbeq	r0, [sl], #-262	; 0xfffffefa
     3c8:	06030501 	streq	r0, [r3], -r1, lsl #10
     3cc:	0174ef03 	cmneq	r4, r3, lsl #30
     3d0:	06010501 	streq	r0, [r1], -r1, lsl #10
     3d4:	064f053e 			; <UNDEFINED> instruction: 0x064f053e
     3d8:	ac00e603 	stcge	6, cr14, [r0], {3}
     3dc:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
     3e0:	0511064f 	ldreq	r0, [r1, #-1615]	; 0xfffff9b1
     3e4:	09052118 	stmdbeq	r5, {r3, r4, r8, sp}
     3e8:	56180522 	ldrpl	r0, [r8], -r2, lsr #10
     3ec:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
     3f0:	05051413 	streq	r1, [r5, #-1043]	; 0xfffffbed
     3f4:	59062e06 	stmdbpl	r6, {r1, r2, r9, sl, fp, sp}
     3f8:	05200601 	streq	r0, [r0, #-1537]!	; 0xfffff9ff
     3fc:	05950603 	ldreq	r0, [r5, #1539]	; 0x603
     400:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
     404:	13210603 			; <UNDEFINED> instruction: 0x13210603
     408:	3c130614 	ldccc	6, cr0, [r3], {20}
     40c:	19052e06 	stmdbne	r5, {r1, r2, r9, sl, fp, sp}
     410:	061d0559 			; <UNDEFINED> instruction: 0x061d0559
     414:	05052e01 	streq	r2, [r5, #-3585]	; 0xfffff1ff
     418:	20770306 	rsbscs	r0, r7, r6, lsl #6
     41c:	06070501 	streq	r0, [r7], -r1, lsl #10
     420:	331205b3 	tstcc	r2, #750780416	; 0x2cc00000
     424:	30060305 	andcc	r0, r6, r5, lsl #6
     428:	01061205 	tsteq	r6, r5, lsl #4
     42c:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
     430:	4a060505 	bmi	18184c <__Stack_Size+0x18144c>
     434:	23056706 	movwcs	r6, #22278	; 0x5706
     438:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     43c:	16052106 	strne	r2, [r5], -r6, lsl #2
     440:	07050106 	streq	r0, [r5, -r6, lsl #2]
     444:	2d160521 	cfldr32cs	mvfx0, [r6, #-132]	; 0xffffff7c
     448:	2f060505 	svccs	0x00060505
     44c:	2e060705 	cdpcs	7, 0, cr0, cr6, cr5, {0}
     450:	01580621 	cmpeq	r8, r1, lsr #12
     454:	0c05013e 	stfeqs	f0, [r5], {62}	; 0x3e
     458:	2e0f0306 	cdpcs	3, 0, cr0, cr15, cr6, {0}
     45c:	051e0505 	ldreq	r0, [lr, #-1285]	; 0xfffffafb
     460:	05220603 	streq	r0, [r2, #-1539]!	; 0xfffff9fd
     464:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
     468:	19052101 	stmdbne	r5, {r0, r8, sp}
     46c:	20650306 	rsbcs	r0, r5, r6, lsl #6
     470:	01061d05 	tsteq	r6, r5, lsl #26
     474:	060e052e 	streq	r0, [lr], -lr, lsr #10
     478:	06120521 	ldreq	r0, [r2], -r1, lsr #10
     47c:	05052e01 	streq	r2, [r5, #-3585]	; 0xfffff1ff
     480:	200d0306 	andcs	r0, sp, r6, lsl #6
     484:	01062305 	tsteq	r6, r5, lsl #6
     488:	21060505 	tstcs	r6, r5, lsl #10
     48c:	13062605 	movwne	r2, #26117	; 0x6605
     490:	061f0705 	ldreq	r0, [pc], -r5, lsl #14
     494:	06260521 	strteq	r0, [r6], -r1, lsr #10
     498:	1d313915 			; <UNDEFINED> instruction: 0x1d313915
     49c:	21060705 	tstcs	r6, r5, lsl #14
     4a0:	16062705 	strne	r2, [r6], -r5, lsl #14
     4a4:	052e3305 	streq	r3, [lr, #-773]!	; 0xfffffcfb
     4a8:	07052a2e 	streq	r2, [r5, -lr, lsr #20]
     4ac:	13133006 	tstne	r3, #6
     4b0:	01063305 	tsteq	r6, r5, lsl #6
     4b4:	052e2705 	streq	r2, [lr, #-1797]!	; 0xfffff8fb
     4b8:	27053017 	smladcs	r5, r7, r0, r3
     4bc:	0605051e 			; <UNDEFINED> instruction: 0x0605051e
     4c0:	06170530 			; <UNDEFINED> instruction: 0x06170530
     4c4:	06050501 	streq	r0, [r5], -r1, lsl #10
     4c8:	2006012f 	andcs	r0, r6, pc, lsr #2
     4cc:	08065605 	stmdaeq	r6, {r0, r2, r9, sl, ip, lr}
     4d0:	13030525 	movwne	r0, #13605	; 0x3525
     4d4:	11065605 	tstne	r6, r5, lsl #12
     4d8:	05250305 	streq	r0, [r5, #-773]!	; 0xfffffcfb
     4dc:	03052c09 	movweq	r2, #23561	; 0x5c09
     4e0:	1c180530 	cfldr32ne	mvfx0, [r8], {48}	; 0x30
     4e4:	05240305 	streq	r0, [r4, #-773]!	; 0xfffffcfb
     4e8:	03054618 	movweq	r4, #22040	; 0x5618
     4ec:	14133d06 	ldrne	r3, [r3], #-3334	; 0xfffff2fa
     4f0:	03280601 			; <UNDEFINED> instruction: 0x03280601
     4f4:	91062078 	tstls	r6, r8, ror r0
     4f8:	0c05a001 	stceq	0, cr10, [r5], {1}
     4fc:	03050106 	movweq	r0, #20742	; 0x5106
     500:	14132106 	ldrne	r2, [r3], #-262	; 0xfffffefa
     504:	2f062e06 	svccs	0x00062e06
     508:	054b1905 	strbeq	r1, [fp, #-2309]	; 0xfffff6fb
     50c:	2e01061d 	mcrcs	6, 0, r0, cr1, cr13, {0}
     510:	05311205 	ldreq	r1, [r1, #-517]!	; 0xfffffdfb
     514:	05300603 	ldreq	r0, [r0, #-1539]!	; 0xfffff9fd
     518:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     51c:	06240603 	strteq	r0, [r4], -r3, lsl #12
     520:	2e05053c 	mcrcs	5, 0, r0, cr5, cr12, {1}
     524:	05210674 	streq	r0, [r1, #-1652]!	; 0xfffff98c
     528:	05130624 	ldreq	r0, [r3, #-1572]	; 0xfffff9dc
     52c:	05052d23 	streq	r2, [r5, #-3363]	; 0xfffff2dd
     530:	24052106 	strcs	r2, [r5], #-262	; 0xfffffefa
     534:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     538:	23052f06 	movwcs	r2, #24326	; 0x5f06
     53c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     540:	24052106 	strcs	r2, [r5], #-262	; 0xfffffefa
     544:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     548:	09053006 	stmdbeq	r5, {r1, r2, ip, sp}
     54c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     550:	2e052106 	adfcss	f2, f5, f6
     554:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
     558:	3c0d0305 	stccc	3, cr0, [sp], {5}
     55c:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
     560:	01061405 	tsteq	r6, r5, lsl #8
     564:	05230c05 	streq	r0, [r3, #-3077]!	; 0xfffff3fb
     568:	03052b14 	movweq	r2, #23316	; 0x5b14
     56c:	14052f06 	strne	r2, [r5], #-3846	; 0xfffff0fa
     570:	0c050106 	stfeqs	f0, [r5], {6}
     574:	1e140522 	cfmul64ne	mvdx0, mvdx4, mvdx2
     578:	30060305 	andcc	r0, r6, r5, lsl #6
     57c:	13060105 	movwne	r0, #24837	; 0x6105
     580:	03061905 	movweq	r1, #26885	; 0x6905
     584:	1d05205e 	stcne	0, cr2, [r5, #-376]	; 0xfffffe88
     588:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
     58c:	05210619 	streq	r0, [r1, #-1561]!	; 0xfffff9e7
     590:	2e01061d 	mcrcs	6, 0, r0, cr1, cr13, {0}
     594:	21060e05 	tstcs	r6, r5, lsl #28
     598:	01061205 	tsteq	r6, r5, lsl #4
     59c:	0605052e 	streq	r0, [r5], -lr, lsr #10
     5a0:	05200f03 	streq	r0, [r0, #-3843]!	; 0xfffff0fd
     5a4:	05010623 	streq	r0, [r1, #-1571]	; 0xfffff9dd
     5a8:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
     5ac:	05130607 	ldreq	r0, [r3, #-1543]	; 0xfffff9f9
     5b0:	05051f23 	streq	r1, [r5, #-3875]	; 0xfffff0dd
     5b4:	47052106 	strmi	r2, [r5, -r6, lsl #2]
     5b8:	07051306 	streq	r1, [r5, -r6, lsl #6]
     5bc:	0521061f 	streq	r0, [r1, #-1567]!	; 0xfffff9e1
     5c0:	05010647 	streq	r0, [r1, #-1607]	; 0xfffff9b9
     5c4:	07053c26 	streq	r3, [r5, -r6, lsr #24]
     5c8:	50054b06 	andpl	r4, r5, r6, lsl #22
     5cc:	49050106 	stmdbmi	r5, {r1, r2, r8}
     5d0:	66270532 			; <UNDEFINED> instruction: 0x66270532
     5d4:	68060505 	stmdavs	r6, {r0, r2, r8, sl}
     5d8:	05019f01 	streq	r9, [r1, #-3841]	; 0xfffff0ff
     5dc:	47059907 	strmi	r9, [r5, -r7, lsl #18]
     5e0:	26050106 	strcs	r0, [r5], -r6, lsl #2
     5e4:	0607053c 			; <UNDEFINED> instruction: 0x0607053c
     5e8:	5505134b 	strpl	r1, [r5, #-843]	; 0xfffffcb5
     5ec:	19050106 	stmdbne	r5, {r1, r2, r8}
     5f0:	c80c0306 	stmdagt	ip, {r1, r2, r8, r9}
     5f4:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
     5f8:	05110619 	ldreq	r0, [r1, #-1561]	; 0xfffff9e7
     5fc:	05052109 	streq	r2, [r5, #-265]	; 0xfffffef7
     600:	2f2f063c 	svccs	0x002f063c
     604:	01060f05 	tsteq	r6, r5, lsl #30
     608:	052f0e05 	streq	r0, [pc, #-3589]!	; fffff80b <BootRAM+0xef6ffac>
     60c:	05051f0f 	streq	r1, [r5, #-3855]	; 0xfffff0f1
     610:	0e052f06 	cdpeq	15, 0, cr2, cr5, cr6, {0}
     614:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     618:	10053d06 	andne	r3, r5, r6, lsl #26
     61c:	24050106 	strcs	r0, [r5], #-262	; 0xfffffefa
     620:	1e100522 	cfmul64ne	mvdx0, mvdx0, mvdx2
     624:	2f060505 	svccs	0x00060505
     628:	06010905 	streq	r0, [r1], -r5, lsl #18
     62c:	11100501 	tstne	r0, r1, lsl #10
     630:	02000705 	andeq	r0, r0, #1310720	; 0x140000
     634:	30060304 	andcc	r0, r6, r4, lsl #6
     638:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
     63c:	1f060304 	svcne	0x00060304
     640:	02002405 	andeq	r2, r0, #83886080	; 0x5000000
     644:	052f0304 	streq	r0, [pc, #-772]!	; 348 <_Minimum_Stack_Size+0x248>
     648:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
     64c:	05052e03 	streq	r2, [r5, #-3587]	; 0xfffff1fd
     650:	03040200 	movweq	r0, #16896	; 0x4200
     654:	0524062d 	streq	r0, [r4, #-1581]!	; 0xfffff9d3
     658:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
     65c:	0f053d05 	svceq	0x00053d05
     660:	0605051f 			; <UNDEFINED> instruction: 0x0605051f
     664:	0567592f 	strbeq	r5, [r7, #-2351]!	; 0xfffff6d1
     668:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     66c:	052f0605 	streq	r0, [pc, #-1541]!	; 6f <_Minimum_Stack_Size-0x91>
     670:	09053103 	stmdbeq	r5, {r0, r1, r8, ip, sp}
     674:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     678:	052f063c 	streq	r0, [pc, #-1596]!	; 44 <_Minimum_Stack_Size-0xbc>
     67c:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
     680:	05052e0d 	streq	r2, [r5, #-3597]	; 0xfffff1f3
     684:	08052f06 	stmdaeq	r5, {r1, r2, r8, r9, sl, fp, sp}
     688:	07050106 	streq	r0, [r5, -r6, lsl #2]
     68c:	052f0666 	streq	r0, [pc, #-1638]!	; 2e <_Minimum_Stack_Size-0xd2>
     690:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
     694:	4b062007 	blmi	1886b8 <__Stack_Size+0x1882b8>
     698:	84050501 	strhi	r0, [r5], #-1281	; 0xfffffaff
     69c:	01060805 	tsteq	r6, r5, lsl #16
     6a0:	06200705 	strteq	r0, [r0], -r5, lsl #14
     6a4:	0610052f 	ldreq	r0, [r0], -pc, lsr #10
     6a8:	20070501 	andcs	r0, r7, r1, lsl #10
     6ac:	06015906 	streq	r5, [r1], -r6, lsl #18
     6b0:	06030582 	streq	r0, [r3], -r2, lsl #11
     6b4:	06090516 			; <UNDEFINED> instruction: 0x06090516
     6b8:	3c050501 	cfstr32cc	mvfx0, [r5], {1}
     6bc:	052f2f06 	streq	r2, [pc, #-3846]!	; fffff7be <BootRAM+0xef6ff5f>
     6c0:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
     6c4:	05670605 	strbeq	r0, [r7, #-1541]!	; 0xfffff9fb
     6c8:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
     6cc:	054d0603 	strbeq	r0, [sp, #-1539]	; 0xfffff9fd
     6d0:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
     6d4:	2f063c05 	svccs	0x00063c05
     6d8:	01060f05 	tsteq	r6, r5, lsl #30
     6dc:	83060505 	movwhi	r0, #25861	; 0x6505
     6e0:	01060f05 	tsteq	r6, r5, lsl #30
     6e4:	054c0105 	strbeq	r0, [ip, #-261]	; 0xfffffefb
     6e8:	0f030643 	svceq	0x00030643
     6ec:	130305f2 	movwne	r0, #13810	; 0x35f2
     6f0:	11064305 	tstne	r6, r5, lsl #6
     6f4:	05260305 	streq	r0, [r6, #-773]!	; 0xfffffcfb
     6f8:	10051b33 	andne	r1, r5, r3, lsr fp
     6fc:	06030520 	streq	r0, [r3], -r0, lsr #10
     700:	063f054b 	ldrteq	r0, [pc], -fp, asr #10
     704:	1d170515 	cfldr32ne	mvfx0, [r7, #-84]	; 0xffffffac
     708:	05233805 	streq	r3, [r3, #-2053]!	; 0xfffff7fb
     70c:	0305470c 	movweq	r4, #22284	; 0x570c
     710:	05132206 	ldreq	r2, [r3, #-518]	; 0xfffffdfa
     714:	05010638 	streq	r0, [r1, #-1592]	; 0xfffff9c8
     718:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
     71c:	03050107 	movweq	r0, #20743	; 0x5107
     720:	01040200 	mrseq	r0, R12_usr
     724:	3f060106 	svccc	0x00060106
     728:	05201406 	streq	r1, [r0, #-1030]!	; 0xfffffbfa
     72c:	03053a10 	movweq	r3, #23056	; 0x5a10
     730:	06012206 	streq	r2, [r1], -r6, lsl #4
     734:	9101053c 	tstls	r1, ip, lsr r5
     738:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
     73c:	1b060304 	blne	181354 <__Stack_Size+0x180f54>
     740:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
     744:	01060304 	tsteq	r6, r4, lsl #6
     748:	03040200 	movweq	r0, #16896	; 0x4200
     74c:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
     750:	22052003 	andcs	r2, r5, #3
     754:	02050006 	andeq	r0, r5, #6
     758:	08000634 	stmdaeq	r0, {r2, r4, r5, r9, sl}
     75c:	017dff03 	cmneq	sp, r3, lsl #30	; <UNPREDICTABLE>
     760:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
     764:	05110622 	ldreq	r0, [r1, #-1570]	; 0xfffff9de
     768:	2405210b 	strcs	r2, [r5], #-267	; 0xfffffef5
     76c:	200b0520 	andcs	r0, fp, r0, lsr #10
     770:	052e2405 	streq	r2, [lr, #-1029]!	; 0xfffffbfb
     774:	3d062005 	stccc	0, cr2, [r6, #-20]	; 0xffffffec
     778:	01061005 	tsteq	r6, r5
     77c:	5b060305 	blpl	181398 <__Stack_Size+0x180f98>
     780:	01060805 	tsteq	r6, r5, lsl #16
     784:	05200505 	streq	r0, [r0, #-1285]!	; 0xfffffafb
     788:	054b0603 	strbeq	r0, [fp, #-1539]	; 0xfffff9fd
     78c:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
     790:	03052005 	movweq	r2, #20485	; 0x5005
     794:	0c052106 	stfeqs	f2, [r5], {6}
     798:	03050106 	movweq	r0, #20742	; 0x5106
     79c:	03042106 	movweq	r2, #16646	; 0x4106
     7a0:	00cf0306 	sbceq	r0, pc, r6, lsl #6
     7a4:	01045801 	tsteq	r4, r1, lsl #16
     7a8:	7fb20306 	svcvc	0x00b20306
     7ac:	05030401 	streq	r0, [r3, #-1025]	; 0xfffffbff
     7b0:	00cd0314 	sbceq	r0, sp, r4, lsl r3
     7b4:	13030501 	movwne	r0, #13569	; 0x3501
     7b8:	043c2006 	ldrteq	r2, [ip], #-6
     7bc:	b4030601 	strlt	r0, [r3], #-1537	; 0xfffff9ff
     7c0:	0505017f 	streq	r0, [r5, #-383]	; 0xfffffe81
     7c4:	0d051506 	cfstr32eq	mvfx1, [r5, #-24]	; 0xffffffe8
     7c8:	0603051d 			; <UNDEFINED> instruction: 0x0603051d
     7cc:	0d05143d 	cfstrseq	mvf1, [r5, #-244]	; 0xffffff0c
     7d0:	0b051306 	bleq	1453f0 <__Stack_Size+0x144ff0>
     7d4:	0605052b 	streq	r0, [r5], -fp, lsr #10
     7d8:	060d0531 			; <UNDEFINED> instruction: 0x060d0531
     7dc:	22010501 	andcs	r0, r1, #4194304	; 0x400000
     7e0:	03062d05 	movweq	r2, #27909	; 0x6d05
     7e4:	056601f7 	strbeq	r0, [r6, #-503]!	; 0xfffffe09
     7e8:	2d051303 	stccs	3, cr1, [r5, #-12]
     7ec:	33051106 	movwcc	r1, #20742	; 0x5106
     7f0:	20100521 	andscs	r0, r0, r1, lsr #10
     7f4:	4b060305 	blmi	181410 <__Stack_Size+0x181010>
     7f8:	10062d05 	andne	r2, r6, r5, lsl #26
     7fc:	20221105 	eorcs	r1, r2, r5, lsl #2
     800:	2f060305 	svccs	0x00060305
     804:	01060505 	tsteq	r6, r5, lsl #10
     808:	21060305 	tstcs	r6, r5, lsl #6
     80c:	063e0513 			; <UNDEFINED> instruction: 0x063e0513
     810:	1f0f0501 	svcne	0x000f0501
     814:	05213705 	streq	r3, [r1, #-1797]!	; 0xfffff8fb
     818:	05590603 	ldrbeq	r0, [r9, #-1539]	; 0xfffff9fd
     81c:	01060107 	tsteq	r6, r7, lsl #2
     820:	05202010 	streq	r2, [r0, #-16]!
     824:	04020005 	streq	r0, [r2], #-5
     828:	05310603 	ldreq	r0, [r1, #-1539]!	; 0xfffff9fd
     82c:	0402000e 	streq	r0, [r2], #-14
     830:	05010603 	streq	r0, [r1, #-1539]	; 0xfffff9fd
     834:	04020003 	streq	r0, [r2], #-3
     838:	0c052d03 	stceq	13, cr2, [r5], {3}
     83c:	03040200 	movweq	r0, #16896	; 0x4200
     840:	00030521 	andeq	r0, r3, r1, lsr #10
     844:	2d030402 	cfstrscs	mvf0, [r3, #-8]
     848:	06012306 	streq	r2, [r1], -r6, lsl #6
     84c:	91066620 	tstls	r6, r0, lsr #12
     850:	13060105 	movwne	r0, #24837	; 0x6105
     854:	03062305 	movweq	r2, #25349	; 0x6305
     858:	05207e88 	streq	r7, [r0, #-3720]!	; 0xfffff178
     85c:	05131303 	ldreq	r1, [r3, #-771]	; 0xfffffcfd
     860:	22100623 	andscs	r0, r0, #36700160	; 0x2300000
     864:	053d1605 	ldreq	r1, [sp, #-1541]!	; 0xfffff9fb
     868:	03053b23 	movweq	r3, #23331	; 0x5b23
     86c:	05142f06 	ldreq	r2, [r4, #-3846]	; 0xfffff0fa
     870:	06010605 	streq	r0, [r1], -r5, lsl #12
     874:	0607053d 			; <UNDEFINED> instruction: 0x0607053d
     878:	2f062e01 	svccs	0x00062e01
     87c:	13050304 	movwne	r0, #21252	; 0x5304
     880:	0100c103 	tsteq	r0, r3, lsl #2
     884:	04130305 	ldreq	r0, [r3], #-773	; 0xfffffcfb
     888:	06110501 	ldreq	r0, [r1], -r1, lsl #10
     88c:	017fbf03 	cmneq	pc, r3, lsl #30
     890:	0a050304 	beq	1414a8 <__Stack_Size+0x1410a8>
     894:	2000c103 	andcs	ip, r0, r3, lsl #2
     898:	01042e2e 	tsteq	r4, lr, lsr #28
     89c:	03060705 	movweq	r0, #26373	; 0x6705
     8a0:	05017fbf 	streq	r7, [r1, #-4031]	; 0xfffff041
     8a4:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
     8a8:	05210607 	streq	r0, [r1, #-1543]!	; 0xfffff9f9
     8ac:	010a0303 	tsteq	sl, r3, lsl #6
     8b0:	01061d05 	tsteq	r6, r5, lsl #26
     8b4:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
     8b8:	05300603 	ldreq	r0, [r0, #-1539]!	; 0xfffff9fd
     8bc:	06010605 	streq	r0, [r1], -r5, lsl #12
     8c0:	06070530 			; <UNDEFINED> instruction: 0x06070530
     8c4:	06050501 	streq	r0, [r5], -r1, lsl #10
     8c8:	06070521 	streq	r0, [r7], -r1, lsr #10
     8cc:	05210601 	streq	r0, [r1, #-1537]!	; 0xfffff9ff
     8d0:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
     8d4:	0b052007 	bleq	1488f8 <__Stack_Size+0x1484f8>
     8d8:	580a0306 	stmdapl	sl, {r1, r2, r8, r9}
     8dc:	14050304 	strne	r0, [r5], #-772	; 0xfffffcfc
     8e0:	05011803 	streq	r1, [r1, #-2051]	; 0xfffff7fd
     8e4:	2e061303 	cdpcs	3, 0, cr1, cr6, cr3, {0}
     8e8:	0501043c 	streq	r0, [r1, #-1084]	; 0xfffffbc4
     8ec:	4f030607 	svcmi	0x00030607
     8f0:	06090501 	streq	r0, [r9], -r1, lsl #10
     8f4:	060b0501 	streq	r0, [fp], -r1, lsl #10
     8f8:	05581003 	ldrbeq	r1, [r8, #-3]
     8fc:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
     900:	1705220b 	strne	r2, [r5, -fp, lsl #4]
     904:	060b051e 			; <UNDEFINED> instruction: 0x060b051e
     908:	05130621 	ldreq	r0, [r3, #-1569]	; 0xfffff9df
     90c:	0b053b14 	bleq	14f564 <__Stack_Size+0x14f164>
     910:	052f2f06 	streq	r2, [pc, #-3846]!	; fffffa12 <BootRAM+0xef701b3>
     914:	010f0305 	tsteq	pc, r5, lsl #6
     918:	01061405 	tsteq	r6, r5, lsl #8
     91c:	05200705 	streq	r0, [r0, #-1797]!	; 0xfffff8fb
     920:	2e4e0303 	cdpcs	3, 4, cr0, cr14, cr3, {0}
     924:	32030705 	andcc	r0, r3, #1310720	; 0x140000
     928:	06250520 	strteq	r0, [r5], -r0, lsr #10
     92c:	062a0520 	strteq	r0, [sl], -r0, lsr #10
     930:	06050501 	streq	r0, [r5], -r1, lsl #10
     934:	0314053d 	tsteq	r4, #255852544	; 0xf400000
     938:	0305014a 	movweq	r0, #20810	; 0x514a
     93c:	060d0513 			; <UNDEFINED> instruction: 0x060d0513
     940:	06030501 	streq	r0, [r3], -r1, lsl #10
     944:	060b053d 			; <UNDEFINED> instruction: 0x060b053d
     948:	06030501 	streq	r0, [r3], -r1, lsl #10
     94c:	052e062f 	streq	r0, [lr, #-1583]!	; 0xfffff9d1
     950:	00c70301 	sbceq	r0, r7, r1, lsl #6
     954:	060b0501 	streq	r0, [fp], -r1, lsl #10
     958:	042e6403 	strteq	r6, [lr], #-1027	; 0xfffffbfd
     95c:	03140503 	tsteq	r4, #12582912	; 0xc00000
     960:	03050115 	movweq	r0, #20757	; 0x5115
     964:	044a0613 	strbeq	r0, [sl], #-1555	; 0xfffff9ed
     968:	06050501 	streq	r0, [r5], -r1, lsl #10
     96c:	05016e03 	streq	r6, [r1, #-3587]	; 0xfffff1fd
     970:	2001060b 	andcs	r0, r1, fp, lsl #12
     974:	21060505 	tstcs	r6, r5, lsl #10
     978:	01060e05 	tsteq	r6, r5, lsl #28
     97c:	05210505 	streq	r0, [r1, #-1285]!	; 0xfffffafb
     980:	0505490e 	streq	r4, [r5, #-2318]	; 0xfffff6f2
     984:	2e062f06 	cdpcs	15, 0, cr2, cr6, cr6, {0}
     988:	05170620 	ldreq	r0, [r7, #-1568]	; 0xfffff9e0
     98c:	06010607 	streq	r0, [r1], -r7, lsl #12
     990:	06160521 	ldreq	r0, [r6], -r1, lsr #10
     994:	20090501 	andcs	r0, r9, r1, lsl #10
     998:	12052f06 	andne	r2, r5, #6, 30
     99c:	09050106 	stmdbeq	r5, {r1, r2, r8}
     9a0:	03042f06 	movweq	r2, #20230	; 0x4f06
     9a4:	05191405 	ldreq	r1, [r9, #-1029]	; 0xfffffbfb
     9a8:	01061303 	tsteq	r6, r3, lsl #6
     9ac:	2c050104 	stfcss	f0, [r5], {4}
     9b0:	03041606 	movweq	r1, #17926	; 0x4606
     9b4:	050d1405 	streq	r1, [sp, #-1029]	; 0xfffffbfb
     9b8:	4a061303 	bmi	1855cc <__Stack_Size+0x1851cc>
     9bc:	0d050104 	stfeqs	f0, [r5, #-16]
     9c0:	017a0306 	cmneq	sl, r6, lsl #6
     9c4:	01060f05 	tsteq	r6, r5, lsl #30
     9c8:	2f060905 	svccs	0x00060905
     9cc:	01061705 	tsteq	r6, r5, lsl #14
     9d0:	2f060905 	svccs	0x00060905
     9d4:	14050304 	strne	r0, [r5], #-772	; 0xfffffcfc
     9d8:	13030515 	movwne	r0, #13589	; 0x3515
     9dc:	01042006 	tsteq	r4, r6
     9e0:	01060505 	tsteq	r6, r5, lsl #10
     9e4:	01060905 	tsteq	r6, r5, lsl #18
     9e8:	06580705 	ldrbeq	r0, [r8], -r5, lsl #14
     9ec:	05050121 	streq	r0, [r5, #-289]	; 0xfffffedf
     9f0:	060f05ae 	streq	r0, [pc], -lr, lsr #11
     9f4:	2f070501 	svccs	0x00070501
     9f8:	051f0f05 	ldreq	r0, [pc, #-3845]	; fffffafb <BootRAM+0xef7029c>
     9fc:	0f052107 	svceq	0x00052107
     a00:	0605051f 			; <UNDEFINED> instruction: 0x0605051f
     a04:	06070521 	streq	r0, [r7], -r1, lsr #10
     a08:	000f0201 	andeq	r0, pc, r1, lsl #4
     a0c:	06a80101 	strteq	r0, [r8], r1, lsl #2
     a10:	00030000 	andeq	r0, r3, r0
     a14:	000000fc 	strdeq	r0, [r0], -ip
     a18:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
     a1c:	0101000d 	tsteq	r1, sp
     a20:	00000101 	andeq	r0, r0, r1, lsl #2
     a24:	00000100 	andeq	r0, r0, r0, lsl #2
     a28:	63727301 	cmnvs	r2, #67108864	; 0x4000000
     a2c:	62696c00 	rsbvs	r6, r9, #0, 24
     a30:	636e692f 	cmnvs	lr, #770048	; 0xbc000
     a34:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     a38:	73752f00 	cmnvc	r5, #0, 30
     a3c:	696c2f72 	stmdbvs	ip!, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
     a40:	63672f62 	cmnvs	r7, #392	; 0x188
     a44:	72612f63 	rsbvc	r2, r1, #396	; 0x18c
     a48:	6f6e2d6d 	svcvs	0x006e2d6d
     a4c:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     a50:	2f696261 	svccs	0x00696261
     a54:	2e332e38 	mrccs	14, 1, r2, cr3, cr8, {1}
     a58:	6e692f31 	mcrvs	15, 3, r2, cr9, cr1, {1}
     a5c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     a60:	752f0065 	strvc	r0, [pc, #-101]!	; a03 <__Stack_Size+0x603>
     a64:	692f7273 	stmdbvs	pc!, {r0, r1, r4, r5, r6, r9, ip, sp, lr}	; <UNPREDICTABLE>
     a68:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     a6c:	6e2f6564 	cfsh64vs	mvdx6, mvdx15, #52
     a70:	696c7765 	stmdbvs	ip!, {r0, r2, r5, r6, r8, r9, sl, ip, sp, lr}^
     a74:	79732f62 	ldmdbvc	r3!, {r1, r5, r6, r8, r9, sl, fp, sp}^
     a78:	75000073 	strvc	r0, [r0, #-115]	; 0xffffff8d
     a7c:	2e747261 	cdpcs	2, 7, cr7, cr4, cr1, {3}
     a80:	00010068 	andeq	r0, r1, r8, rrx
     a84:	62737500 	rsbsvs	r7, r3, #0, 10
     a88:	616c635f 	cmnvs	ip, pc, asr r3
     a8c:	635f7373 	cmpvs	pc, #-872415231	; 0xcc000001
     a90:	632e6364 			; <UNDEFINED> instruction: 0x632e6364
     a94:	00000100 	andeq	r0, r0, r0, lsl #2
     a98:	5f627375 	svcpl	0x00627375
     a9c:	2e62696c 	vnmulcs.f16	s13, s4, s25	; <UNPREDICTABLE>
     aa0:	00010068 	andeq	r0, r1, r8, rrx
     aa4:	726f6300 	rsbvc	r6, pc, #0, 6
     aa8:	6d635f65 	stclvs	15, cr5, [r3, #-404]!	; 0xfffffe6c
     aac:	00682e33 	rsbeq	r2, r8, r3, lsr lr
     ab0:	73000002 	movwvc	r0, #2
     ab4:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
     ab8:	00682e74 	rsbeq	r2, r8, r4, ror lr
     abc:	73000003 	movwvc	r0, #3
     ac0:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     ac4:	33303166 	teqcc	r0, #-2147483623	; 0x80000019
     ac8:	682e6278 	stmdavs	lr!, {r3, r4, r5, r6, r9, sp, lr}
     acc:	00000200 	andeq	r0, r0, r0, lsl #4
     ad0:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
     ad4:	735f6d65 	cmpvc	pc, #6464	; 0x1940
     ad8:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     adc:	78783166 	ldmdavc	r8!, {r1, r2, r5, r6, r8, ip, sp}^
     ae0:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
     ae4:	74730000 	ldrbtvc	r0, [r3], #-0
     ae8:	66656464 	strbtvs	r6, [r5], -r4, ror #8
     aec:	0300682e 	movweq	r6, #2094	; 0x82e
     af0:	745f0000 	ldrbvc	r0, [pc], #-0	; af8 <__Stack_Size+0x6f8>
     af4:	73657079 	cmnvc	r5, #121	; 0x79
     af8:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
     afc:	65720000 	ldrbvs	r0, [r2, #-0]!
     b00:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
     b04:	00040068 	andeq	r0, r4, r8, rrx
     b08:	636f6c00 	cmnvs	pc, #0, 24
     b0c:	00682e6b 	rsbeq	r2, r8, fp, ror #28
     b10:	00000004 	andeq	r0, r0, r4
     b14:	05002805 	streq	r2, [r0, #-2053]	; 0xfffff7fb
     b18:	00080402 	andeq	r0, r8, r2, lsl #8
     b1c:	00cc0308 	sbceq	r0, ip, r8, lsl #6
     b20:	13030501 	movwne	r0, #13569	; 0x3501
     b24:	01060f05 	tsteq	r6, r5, lsl #30
     b28:	05201905 	streq	r1, [r0, #-2309]!	; 0xfffff6fb
     b2c:	0105201f 	tsteq	r5, pc, lsl r0
     b30:	06280521 	strteq	r0, [r8], -r1, lsr #10
     b34:	13030530 	movwne	r0, #13616	; 0x3530
     b38:	03090513 	movweq	r0, #38163	; 0x9513
     b3c:	0305017a 	movweq	r0, #20858	; 0x517a
     b40:	060f0513 			; <UNDEFINED> instruction: 0x060f0513
     b44:	20190501 	andscs	r0, r9, r1, lsl #10
     b48:	05232805 	streq	r2, [r3, #-2053]!	; 0xfffff7fb
     b4c:	03052205 	movweq	r2, #20997	; 0x5205
     b50:	15052f06 	strne	r2, [r5, #-3846]	; 0xfffff0fa
     b54:	07050106 	streq	r0, [r5, -r6, lsl #2]
     b58:	2f060520 	svccs	0x00060520
     b5c:	051f0705 	ldreq	r0, [pc, #-1797]	; 45f <__Stack_Size+0x5f>
     b60:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
     b64:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
     b68:	053d0603 	ldreq	r0, [sp, #-1539]!	; 0xfffff9fd
     b6c:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
     b70:	053d0603 	ldreq	r0, [sp, #-1539]!	; 0xfffff9fd
     b74:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
     b78:	01051c25 	tsteq	r5, r5, lsr #24
     b7c:	06330525 	ldrteq	r0, [r3], -r5, lsr #10
     b80:	13030522 	movwne	r0, #13602	; 0x3522
     b84:	72030905 	andvc	r0, r3, #81920	; 0x14000
     b88:	13030501 	movwne	r0, #13569	; 0x3501
     b8c:	01060f05 	tsteq	r6, r5, lsl #30
     b90:	05201905 	streq	r1, [r0, #-2309]!	; 0xfffff6fb
     b94:	0505201f 	streq	r2, [r5, #-31]	; 0xffffffe1
     b98:	05200d03 	streq	r0, [r0, #-3331]!	; 0xfffff2fd
     b9c:	053b0606 	ldreq	r0, [fp, #-1542]!	; 0xfffff9fa
     ba0:	11051405 	tstne	r5, r5, lsl #8
     ba4:	16050106 	strne	r0, [r5], -r6, lsl #2
     ba8:	06050520 	streq	r0, [r5], -r0, lsr #10
     bac:	0608052f 	streq	r0, [r8], -pc, lsr #10
     bb0:	200c0501 	andcs	r0, ip, r1, lsl #10
     bb4:	3c061005 	stccc	0, cr1, [r6], {5}
     bb8:	01061805 	tsteq	r6, r5, lsl #16
     bbc:	1401053c 	strne	r0, [r1], #-1340	; 0xfffffac4
     bc0:	03061d05 	movweq	r1, #27909	; 0x6d05
     bc4:	052000c2 	streq	r0, [r0, #-194]!	; 0xffffff3e
     bc8:	1d051303 	stcne	3, cr1, [r5, #-12]
     bcc:	0d051106 	stfeqs	f1, [r5, #-24]	; 0xffffffe8
     bd0:	2e050521 	cfsh32cs	mvfx0, mvfx5, #17
     bd4:	1a052f06 	bne	14c7f4 <__Stack_Size+0x14c3f4>
     bd8:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     bdc:	2e062106 	adfcss	f2, f6, f6
     be0:	05170105 	ldreq	r0, [r7, #-261]	; 0xfffffefb
     be4:	052e2905 	streq	r2, [lr, #-2309]!	; 0xfffff6fb
     be8:	05130609 	ldreq	r0, [r3, #-1545]	; 0xfffff9f7
     bec:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
     bf0:	0505200b 	streq	r2, [r5, #-11]
     bf4:	09052f06 	stmdbeq	r5, {r1, r2, r8, r9, sl, fp, sp}
     bf8:	017fa703 	cmneq	pc, r3, lsl #14
     bfc:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
     c00:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
     c04:	07053c19 	smladeq	r5, r9, ip, r3
     c08:	2e00d803 	cdpcs	8, 0, cr13, cr0, cr3, {0}
     c0c:	02002605 	andeq	r2, r0, #5242880	; 0x500000
     c10:	2e060104 	adfcss	f0, f6, f4
     c14:	02003305 	andeq	r3, r0, #335544320	; 0x14000000
     c18:	01060104 	tsteq	r6, r4, lsl #2
     c1c:	02003105 	andeq	r3, r0, #1073741825	; 0x40000001
     c20:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
     c24:	0c052301 	stceq	3, cr2, [r5], {1}
     c28:	18051e06 	stmdane	r5, {r1, r2, r9, sl, fp, ip}
     c2c:	01050106 	tsteq	r5, r6, lsl #2
     c30:	062d054c 	strteq	r0, [sp], -ip, asr #10
     c34:	a0020500 	andge	r0, r2, r0, lsl #10
     c38:	14080008 	strne	r0, [r8], #-8
     c3c:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
     c40:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
     c44:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
     c48:	04020008 	streq	r0, [r2], #-8
     c4c:	01053c01 	tsteq	r5, r1, lsl #24
     c50:	000f052f 	andeq	r0, pc, pc, lsr #10
     c54:	06020402 	streq	r0, [r2], -r2, lsl #8
     c58:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
     c5c:	02000102 	andeq	r0, r0, #-2147483648	; 0x80000000
     c60:	01060204 	tsteq	r6, r4, lsl #4
     c64:	02040200 	andeq	r0, r4, #0, 4
     c68:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
     c6c:	053c0602 	ldreq	r0, [ip, #-1538]!	; 0xfffff9fe
     c70:	0205001b 	andeq	r0, r5, #27
     c74:	080008cc 	stmdaeq	r0, {r2, r3, r6, r7, fp}
     c78:	13030515 	movwne	r0, #13589	; 0x3515
     c7c:	11061b05 	tstne	r6, r5, lsl #22
     c80:	05211505 	streq	r1, [r1, #-1285]!	; 0xfffffafb
     c84:	0402000c 	streq	r0, [r2], #-12
     c88:	08053c01 	stmdaeq	r5, {r0, sl, fp, ip, sp}
     c8c:	01040200 	mrseq	r0, R12_usr
     c90:	2101052e 	tstcs	r1, lr, lsr #10
     c94:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
     c98:	1f060204 	svcne	0x00060204
     c9c:	02040200 	andeq	r0, r4, #0, 4
     ca0:	04020001 	streq	r0, [r2], #-1
     ca4:	00010602 	andeq	r0, r1, r2, lsl #12
     ca8:	06020402 	streq	r0, [r2], -r2, lsl #8
     cac:	002c053c 	eoreq	r0, ip, ip, lsr r5
     cb0:	08f40205 	ldmeq	r4!, {r0, r2, r9}^
     cb4:	06150800 	ldreq	r0, [r5], -r0, lsl #16
     cb8:	03052001 	movweq	r2, #20481	; 0x5001
     cbc:	0f052106 	svceq	0x00052106
     cc0:	7f9a0306 	svcvc	0x009a0306
     cc4:	08052e01 	stmdaeq	r5, {r0, r9, sl, fp, sp}
     cc8:	0100e603 	tsteq	r0, r3, lsl #12
     ccc:	05320105 	ldreq	r0, [r2, #-261]!	; 0xfffffefb
     cd0:	04020022 	streq	r0, [r2], #-34	; 0xffffffde
     cd4:	051d0601 	ldreq	r0, [sp, #-1537]	; 0xfffff9ff
     cd8:	04020009 	streq	r0, [r2], #-9
     cdc:	7f980301 	svcvc	0x00980301
     ce0:	00030501 	andeq	r0, r3, r1, lsl #10
     ce4:	13010402 	movwne	r0, #5122	; 0x1402
     ce8:	02000f05 	andeq	r0, r0, #5, 30
     cec:	01060104 	tsteq	r6, r4, lsl #2
     cf0:	02001905 	andeq	r1, r0, #81920	; 0x14000
     cf4:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
     cf8:	0402000b 	streq	r0, [r2], #-11
     cfc:	00e70301 	rsceq	r0, r7, r1, lsl #6
     d00:	000a0520 	andeq	r0, sl, r0, lsr #10
     d04:	20010402 	andcs	r0, r1, r2, lsl #8
     d08:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
     d0c:	01061105 	tsteq	r6, r5, lsl #2
     d10:	2e3c0f05 	cdpcs	15, 3, cr0, cr12, cr5, {0}
     d14:	00062805 	andeq	r2, r6, r5, lsl #16
     d18:	09200205 	stmdbeq	r0!, {r0, r2, r9}
     d1c:	05160800 	ldreq	r0, [r6, #-2048]	; 0xfffff800
     d20:	28051303 	stmdacs	r5, {r0, r1, r8, r9, ip}
     d24:	0f051106 	svceq	0x00051106
     d28:	3c7f9403 	cfldrdcc	mvd9, [pc], #-12	; d24 <__Stack_Size+0x924>
     d2c:	0308052e 	movweq	r0, #34094	; 0x852e
     d30:	2e0100ed 	cdpcs	0, 0, cr0, cr1, cr13, {7}
     d34:	26060305 	strcs	r0, [r6], -r5, lsl #6
     d38:	01060505 	tsteq	r6, r5, lsl #10
     d3c:	07052f06 	streq	r2, [r5, -r6, lsl #30]
     d40:	10050106 	andne	r0, r5, r6, lsl #2
     d44:	14052006 	strne	r2, [r5], #-6
     d48:	23051306 	movwcs	r1, #21254	; 0x5306
     d4c:	1f17053c 	svcne	0x0017053c
     d50:	05212305 	streq	r2, [r1, #-773]!	; 0xfffffcfb
     d54:	17052e32 	smladxne	r5, r2, lr, r2
     d58:	060d051f 			; <UNDEFINED> instruction: 0x060d051f
     d5c:	011c0521 	tsteq	ip, r1, lsr #10
     d60:	05012b05 	streq	r2, [r1, #-2821]	; 0xfffff4fb
     d64:	05010632 	streq	r0, [r1, #-1586]	; 0xfffff9ce
     d68:	22052201 	andcs	r2, r5, #268435456	; 0x10000000
     d6c:	01040200 	mrseq	r0, R12_usr
     d70:	20770306 	rsbscs	r0, r7, r6, lsl #6
     d74:	02000905 	andeq	r0, r0, #81920	; 0x14000
     d78:	91030104 	tstls	r3, r4, lsl #2
     d7c:	0305017f 	movweq	r0, #20863	; 0x517f
     d80:	01040200 	mrseq	r0, R12_usr
     d84:	000f0513 	andeq	r0, pc, r3, lsl r5	; <UNPREDICTABLE>
     d88:	06010402 	streq	r0, [r1], -r2, lsl #8
     d8c:	00190501 	andseq	r0, r9, r1, lsl #10
     d90:	20010402 	andcs	r0, r1, r2, lsl #8
     d94:	02000b05 	andeq	r0, r0, #5120	; 0x1400
     d98:	ee030104 	adfs	f0, f3, f4
     d9c:	0a052000 	beq	148da4 <__Stack_Size+0x1489a4>
     da0:	01040200 	mrseq	r0, R12_usr
     da4:	06050520 	streq	r0, [r5], -r0, lsr #10
     da8:	060e053d 			; <UNDEFINED> instruction: 0x060e053d
     dac:	3c0c0501 	cfstr32cc	mvfx0, [ip], {1}
     db0:	2f060505 	svccs	0x00060505
     db4:	01060705 	tsteq	r6, r5, lsl #14
     db8:	02001405 	andeq	r1, r0, #83886080	; 0x5000000
     dbc:	003c0104 	eorseq	r0, ip, r4, lsl #2
     dc0:	4a010402 	bmi	41dd0 <__Stack_Size+0x419d0>
     dc4:	50050204 	andpl	r0, r5, r4, lsl #4
     dc8:	02050006 	andeq	r0, r5, #6
     dcc:	08000978 	stmdaeq	r0, {r3, r4, r5, r6, r8, fp}
     dd0:	05016603 	streq	r6, [r1, #-1539]	; 0xfffff9fd
     dd4:	07051303 	streq	r1, [r5, -r3, lsl #6]
     dd8:	0d051408 	cfstrseq	mvf1, [r5, #-32]	; 0xffffffe0
     ddc:	07050106 	streq	r0, [r5, -r6, lsl #2]
     de0:	0d052f06 	stceq	15, cr2, [r5, #-24]	; 0xffffffe8
     de4:	20050106 	andcs	r0, r5, r6, lsl #2
     de8:	05201b03 	streq	r1, [r0, #-2819]!	; 0xfffff4fd
     dec:	05210607 	streq	r0, [r1, #-1543]!	; 0xfffff9f9
     df0:	05160601 	ldreq	r0, [r6, #-1537]	; 0xfffff9ff
     df4:	63030607 	movwvs	r0, #13831	; 0x3607
     df8:	060d0520 	streq	r0, [sp], -r0, lsr #10
     dfc:	06070501 	streq	r0, [r7], -r1, lsl #10
     e00:	060d052f 	streq	r0, [sp], -pc, lsr #10
     e04:	06070501 	streq	r0, [r7], -r1, lsl #10
     e08:	060d0531 			; <UNDEFINED> instruction: 0x060d0531
     e0c:	06070501 	streq	r0, [r7], -r1, lsl #10
     e10:	060d052f 	streq	r0, [sp], -pc, lsr #10
     e14:	06070501 	streq	r0, [r7], -r1, lsl #10
     e18:	05200631 	streq	r0, [r0, #-1585]!	; 0xfffff9cf
     e1c:	0568060b 	strbeq	r0, [r8, #-1547]!	; 0xfffff9f5
     e20:	03010611 	movweq	r0, #5649	; 0x1611
     e24:	0b052009 	bleq	148e50 <__Stack_Size+0x148a50>
     e28:	07052106 	streq	r2, [r5, -r6, lsl #2]
     e2c:	06200516 			; <UNDEFINED> instruction: 0x06200516
     e30:	060b0501 	streq	r0, [fp], -r1, lsl #10
     e34:	053c7503 	ldreq	r7, [ip, #-1283]!	; 0xfffffafd
     e38:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
     e3c:	0531060b 	ldreq	r0, [r1, #-1547]!	; 0xfffff9f5
     e40:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
     e44:	0531060b 	ldreq	r0, [r1, #-1547]!	; 0xfffff9f5
     e48:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
     e4c:	05000647 	streq	r0, [r0, #-1607]	; 0xfffff9b9
     e50:	0009f402 	andeq	pc, r9, r2, lsl #8
     e54:	01240308 			; <UNDEFINED> instruction: 0x01240308
     e58:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
     e5c:	06010605 	streq	r0, [r1], -r5, lsl #12
     e60:	06070559 			; <UNDEFINED> instruction: 0x06070559
     e64:	053d0601 	ldreq	r0, [sp, #-1537]!	; 0xfffff9ff
     e68:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     e6c:	0d05220e 	sfmeq	f2, 4, [r5, #-56]	; 0xffffffc8
     e70:	0607051e 			; <UNDEFINED> instruction: 0x0607051e
     e74:	060d0521 	streq	r0, [sp], -r1, lsr #10
     e78:	06070501 	streq	r0, [r7], -r1, lsl #10
     e7c:	060e052f 	streq	r0, [lr], -pc, lsr #10
     e80:	230a0501 	movwcs	r0, #42241	; 0xa501
     e84:	05210105 	streq	r0, [r1, #-261]!	; 0xfffffefb
     e88:	053e064e 	ldreq	r0, [lr, #-1614]!	; 0xfffff9b2
     e8c:	4e051303 	cdpmi	3, 0, cr1, cr5, cr3, {0}
     e90:	05051106 	streq	r1, [r5, #-262]	; 0xfffffefa
     e94:	05590621 	ldrbeq	r0, [r9, #-1569]	; 0xfffff9df
     e98:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
     e9c:	2f062007 	svccs	0x00062007
     ea0:	01060905 	tsteq	r6, r5, lsl #18
     ea4:	15030e05 	strne	r0, [r3, #-3589]	; 0xfffff1fb
     ea8:	03010520 	movweq	r0, #5408	; 0x1520
     eac:	07052013 	smladeq	r5, r3, r0, r2
     eb0:	20590306 	subscs	r0, r9, r6, lsl #6
     eb4:	13050304 	movwne	r0, #21252	; 0x5304
     eb8:	05014903 	streq	r4, [r1, #-2307]	; 0xfffff6fd
     ebc:	0a051303 	beq	145ad0 <__Stack_Size+0x1456d0>
     ec0:	202e0106 	eorcs	r0, lr, r6, lsl #2
     ec4:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
     ec8:	37030607 	strcc	r0, [r3, -r7, lsl #12]
     ecc:	67010101 	strvs	r0, [r1, -r1, lsl #2]
     ed0:	01061405 	tsteq	r6, r5, lsl #8
     ed4:	05200905 	streq	r0, [r0, #-2309]!	; 0xfffff6fb
     ed8:	3a052e27 	bcc	14c77c <__Stack_Size+0x14c37c>
     edc:	0627052e 	strteq	r0, [r7], -lr, lsr #10
     ee0:	3a05013c 	bcc	1413d8 <__Stack_Size+0x140fd8>
     ee4:	07050101 	streq	r0, [r5, -r1, lsl #2]
     ee8:	06140524 	ldreq	r0, [r4], -r4, lsr #10
     eec:	20090501 	andcs	r0, r9, r1, lsl #10
     ef0:	15052106 	strne	r2, [r5, #-262]	; 0xfffffefa
     ef4:	09050106 	stmdbeq	r5, {r1, r2, r8}
     ef8:	15055906 	strne	r5, [r5, #-2310]	; 0xfffff6fa
     efc:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
     f00:	1a055906 	bne	157320 <__Stack_Size+0x156f20>
     f04:	0f050106 	svceq	0x00050106
     f08:	0609052e 	streq	r0, [r9], -lr, lsr #10
     f0c:	0615052f 	ldreq	r0, [r5], -pc, lsr #10
     f10:	06090501 	streq	r0, [r9], -r1, lsl #10
     f14:	06150559 			; <UNDEFINED> instruction: 0x06150559
     f18:	06090501 	streq	r0, [r9], -r1, lsl #10
     f1c:	0615054b 	ldreq	r0, [r5], -fp, asr #10
     f20:	060d0501 	streq	r0, [sp], -r1, lsl #10
     f24:	061a0559 			; <UNDEFINED> instruction: 0x061a0559
     f28:	200f0501 	andcs	r0, pc, r1, lsl #10
     f2c:	2f060905 	svccs	0x00060905
     f30:	01061505 	tsteq	r6, r5, lsl #10
     f34:	59060905 	stmdbpl	r6, {r0, r2, r8, fp}
     f38:	01061505 	tsteq	r6, r5, lsl #10
     f3c:	4b060905 	blmi	183358 <__Stack_Size+0x182f58>
     f40:	01061505 	tsteq	r6, r5, lsl #10
     f44:	4f060b05 	svcmi	0x00060b05
     f48:	01060d05 	tsteq	r6, r5, lsl #26
     f4c:	2f060705 	svccs	0x00060705
     f50:	01060e05 	tsteq	r6, r5, lsl #28
     f54:	06090520 	streq	r0, [r9], -r0, lsr #10
     f58:	11060121 	tstne	r6, r1, lsr #2
     f5c:	0130062f 	teqeq	r0, pc, lsr #12
     f60:	052c3006 	streq	r3, [ip, #-6]!
     f64:	05220607 	streq	r0, [r2, #-1543]!	; 0xfffff9f9
     f68:	06010609 	streq	r0, [r1], -r9, lsl #12
     f6c:	0a050121 	beq	1413f8 <__Stack_Size+0x140ff8>
     f70:	2e0a0306 	cdpcs	3, 0, cr0, cr10, cr6, {0}
     f74:	03060905 	movweq	r0, #26885	; 0x6905
     f78:	05012e78 	streq	r2, [r1, #-3704]	; 0xfffff188
     f7c:	ba0c0321 	blt	301c08 <__Stack_Size+0x301808>
     f80:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
     f84:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
     f88:	16054b01 	strne	r4, [r5], -r1, lsl #22
     f8c:	03054c06 	movweq	r4, #23558	; 0x5c06
     f90:	01010113 	tsteq	r1, r3, lsl r1
     f94:	16050101 	strne	r0, [r5], -r1, lsl #2
     f98:	03051f06 	movweq	r1, #24326	; 0x5f06
     f9c:	3c200621 	stccc	6, cr0, [r0], #-132	; 0xffffff7c
     fa0:	0101202e 	tsteq	r1, lr, lsr #32
     fa4:	20010101 	andcs	r0, r1, r1, lsl #2
     fa8:	27050404 	strcs	r0, [r5, -r4, lsl #8]
     fac:	09c00306 	stmibeq	r0, {r1, r2, r8, r9}^
     fb0:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
     fb4:	76c00303 	strbvc	r0, [r0], r3, lsl #6
     fb8:	2e2e0620 	cfmadda32cs	mvax1, mvax0, mvfx14, mvfx0
     fbc:	01062006 	tsteq	r6, r6
     fc0:	1e220601 	cfmadda32ne	mvax0, mvax0, mvfx2, mvfx1
     fc4:	3c061e22 	stccc	14, cr1, [r6], {34}	; 0x22
     fc8:	01014a01 	tsteq	r1, r1, lsl #20
     fcc:	20203c58 	eorcs	r3, r0, r8, asr ip
     fd0:	1e220620 	cfmadda32ne	mvax1, mvax0, mvfx2, mvfx0
     fd4:	2e202006 	cdpcs	0, 2, cr2, cr0, cr6, {0}
     fd8:	0504042e 	streq	r0, [r4, #-1070]	; 0xfffffbd2
     fdc:	09be0316 	ldmibeq	lr!, {r1, r2, r4, r8, r9}
     fe0:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
     fe4:	01062705 	tsteq	r6, r5, lsl #14
     fe8:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
     fec:	c2030603 	andgt	r0, r3, #3145728	; 0x300000
     ff0:	673e0176 			; <UNDEFINED> instruction: 0x673e0176
     ff4:	30060105 	andcc	r0, r6, r5, lsl #2
     ff8:	052c0305 	streq	r0, [ip, #-773]!	; 0xfffffcfb
     ffc:	05000616 	streq	r0, [r0, #-1558]	; 0xfffff9ea
    1000:	000b9402 	andeq	r9, fp, r2, lsl #8
    1004:	03051608 	movweq	r1, #22024	; 0x5608
    1008:	01041313 	tsteq	r4, r3, lsl r3
    100c:	a2030905 	andge	r0, r3, #81920	; 0x14000
    1010:	0305017e 	movweq	r0, #20862	; 0x517e
    1014:	04010613 	streq	r0, [r1], #-1555	; 0xfffff9ed
    1018:	03160502 	tsteq	r6, #8388608	; 0x800000
    101c:	040101db 	streq	r0, [r1], #-475	; 0xfffffe25
    1020:	030f0501 	movweq	r0, #62721	; 0xf501
    1024:	04207ea5 	strteq	r7, [r0], #-3749	; 0xfffff15b
    1028:	03160502 	tsteq	r6, #8388608	; 0x800000
    102c:	042001db 	strteq	r0, [r0], #-475	; 0xfffffe25
    1030:	030f0501 	movweq	r0, #62721	; 0xf501
    1034:	05207ea5 	streq	r7, [r0, #-3749]!	; 0xfffff15b
    1038:	02042019 	andeq	r2, r4, #25
    103c:	dd030d05 	stcle	13, cr0, [r3, #-20]	; 0xffffffec
    1040:	03052001 	movweq	r2, #20481	; 0x5001
    1044:	05052106 	streq	r2, [r5, #-262]	; 0xfffffefa
    1048:	062e0106 	strteq	r0, [lr], -r6, lsl #2
    104c:	06090521 	streq	r0, [r9], -r1, lsr #10
    1050:	2e070501 	cfsh32cs	mvfx0, mvfx7, #1
    1054:	4b3d4b06 	blmi	f53c74 <__Stack_Size+0xf53874>
    1058:	14050304 	strne	r0, [r5], #-772	; 0xfffffcfc
    105c:	017efd03 	cmneq	lr, r3, lsl #26	; <UNPREDICTABLE>
    1060:	06130305 	ldreq	r0, [r3], -r5, lsl #6
    1064:	06020458 			; <UNDEFINED> instruction: 0x06020458
    1068:	01018603 	tsteq	r1, r3, lsl #12
    106c:	09050104 	stmdbeq	r5, {r2, r8}
    1070:	017e9903 	cmneq	lr, r3, lsl #18
    1074:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    1078:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    107c:	1f052e19 	svcne	0x00052e19
    1080:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    1084:	01e60307 	mvneq	r0, r7, lsl #6
    1088:	3c050520 	cfstr32cc	mvfx0, [r5], {32}
    108c:	09052f06 	stmdbeq	r5, {r1, r2, r8, r9, sl, fp, sp}
    1090:	07050106 	streq	r0, [r5, -r6, lsl #2]
    1094:	045a062e 	ldrbeq	r0, [sl], #-1582	; 0xfffff9d2
    1098:	03130503 	tsteq	r3, #12582912	; 0xc00000
    109c:	05017f83 	streq	r7, [r1, #-3971]	; 0xfffff07d
    10a0:	0a051303 	beq	145cb4 <__Stack_Size+0x1458b4>
    10a4:	044a0106 	strbeq	r0, [sl], #-262	; 0xfffffefa
    10a8:	06070502 	streq	r0, [r7], -r2, lsl #10
    10ac:	0100fd03 	tsteq	r0, r3, lsl #26	; <UNPREDICTABLE>
    10b0:	01052e06 	tsteq	r5, r6, lsl #28
    10b4:	00060233 	andeq	r0, r6, r3, lsr r2
    10b8:	Address 0x00000000000010b8 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	08000120 	stmdaeq	r0, {r5, r8}
  1c:	000000ac 	andeq	r0, r0, ip, lsr #1
  20:	0000000c 	andeq	r0, r0, ip
  24:	00000000 	andeq	r0, r0, r0
  28:	080001cc 	stmdaeq	r0, {r2, r3, r6, r7, r8}
  2c:	00000002 	andeq	r0, r0, r2
  30:	0000000c 	andeq	r0, r0, ip
  34:	00000000 	andeq	r0, r0, r0
  38:	080001ce 	stmdaeq	r0, {r1, r2, r3, r6, r7, r8}
  3c:	00000002 	andeq	r0, r0, r2
  40:	0000000c 	andeq	r0, r0, ip
  44:	00000000 	andeq	r0, r0, r0
  48:	080001d0 	stmdaeq	r0, {r4, r6, r7, r8}
  4c:	0000000c 	andeq	r0, r0, ip
  50:	00000014 	andeq	r0, r0, r4, lsl r0
  54:	00000000 	andeq	r0, r0, r0
  58:	08000c50 	stmdaeq	r0, {r4, r6, sl, fp}
  5c:	0000004c 	andeq	r0, r0, ip, asr #32
  60:	83080e41 	movwhi	r0, #36417	; 0x8e41
  64:	00018e02 	andeq	r8, r1, r2, lsl #28
  68:	0000000c 	andeq	r0, r0, ip
  6c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
  70:	7c020001 	stcvc	0, cr0, [r2], {1}
  74:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  78:	0000000c 	andeq	r0, r0, ip
  7c:	00000068 	andeq	r0, r0, r8, rrx
  80:	080001dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8}
  84:	00000002 	andeq	r0, r0, r2
  88:	0000000c 	andeq	r0, r0, ip
  8c:	00000068 	andeq	r0, r0, r8, rrx
  90:	080001de 	stmdaeq	r0, {r1, r2, r3, r4, r6, r7, r8}
  94:	00000002 	andeq	r0, r0, r2
  98:	0000000c 	andeq	r0, r0, ip
  9c:	00000068 	andeq	r0, r0, r8, rrx
  a0:	080001e0 	stmdaeq	r0, {r5, r6, r7, r8}
  a4:	00000002 	andeq	r0, r0, r2
  a8:	0000000c 	andeq	r0, r0, ip
  ac:	00000068 	andeq	r0, r0, r8, rrx
  b0:	080001e2 	stmdaeq	r0, {r1, r5, r6, r7, r8}
  b4:	00000002 	andeq	r0, r0, r2
  b8:	0000000c 	andeq	r0, r0, ip
  bc:	00000068 	andeq	r0, r0, r8, rrx
  c0:	080001e4 	stmdaeq	r0, {r2, r5, r6, r7, r8}
  c4:	00000004 	andeq	r0, r0, r4
  c8:	0000000c 	andeq	r0, r0, ip
  cc:	00000068 	andeq	r0, r0, r8, rrx
  d0:	080001e8 	stmdaeq	r0, {r3, r5, r6, r7, r8}
  d4:	00000004 	andeq	r0, r0, r4
  d8:	0000000c 	andeq	r0, r0, ip
  dc:	00000068 	andeq	r0, r0, r8, rrx
  e0:	080001ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8}
  e4:	0000006c 	andeq	r0, r0, ip, rrx
  e8:	0000001c 	andeq	r0, r0, ip, lsl r0
  ec:	00000068 	andeq	r0, r0, r8, rrx
  f0:	08000258 	stmdaeq	r0, {r3, r4, r6, r9}
  f4:	00000118 	andeq	r0, r0, r8, lsl r1
  f8:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
  fc:	86048505 	strhi	r8, [r4], -r5, lsl #10
 100:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 104:	00000001 	andeq	r0, r0, r1
 108:	0000001c 	andeq	r0, r0, ip, lsl r0
 10c:	00000068 	andeq	r0, r0, r8, rrx
 110:	08000370 	stmdaeq	r0, {r4, r5, r6, r8, r9}
 114:	00000148 	andeq	r0, r0, r8, asr #2
 118:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
 11c:	86048505 	strhi	r8, [r4], -r5, lsl #10
 120:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 124:	00000001 	andeq	r0, r0, r1
 128:	00000018 	andeq	r0, r0, r8, lsl r0
 12c:	00000068 	andeq	r0, r0, r8, rrx
 130:	080004b8 	stmdaeq	r0, {r3, r4, r5, r7, sl}
 134:	00000128 	andeq	r0, r0, r8, lsr #2
 138:	83100e41 	tsthi	r0, #1040	; 0x410
 13c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
 140:	00018e02 	andeq	r8, r1, r2, lsl #28
 144:	0000001c 	andeq	r0, r0, ip, lsl r0
 148:	00000068 	andeq	r0, r0, r8, rrx
 14c:	080005e0 	stmdaeq	r0, {r5, r6, r7, r8, sl}
 150:	00000054 	andeq	r0, r0, r4, asr r0
 154:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
 158:	86048505 	strhi	r8, [r4], -r5, lsl #10
 15c:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 160:	00000001 	andeq	r0, r0, r1
 164:	0000001c 	andeq	r0, r0, ip, lsl r0
 168:	00000068 	andeq	r0, r0, r8, rrx
 16c:	08000634 	stmdaeq	r0, {r2, r4, r5, r9, sl}
 170:	0000005c 	andeq	r0, r0, ip, asr r0
 174:	83180e41 	tsthi	r8, #1040	; 0x410
 178:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
 17c:	87038604 	strhi	r8, [r3, -r4, lsl #12]
 180:	00018e02 	andeq	r8, r1, r2, lsl #28
 184:	00000018 	andeq	r0, r0, r8, lsl r0
 188:	00000068 	andeq	r0, r0, r8, rrx
 18c:	08000690 	stmdaeq	r0, {r4, r7, r9, sl}
 190:	0000005a 	andeq	r0, r0, sl, asr r0
 194:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 198:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
 19c:	00000001 	andeq	r0, r0, r1
 1a0:	00000020 	andeq	r0, r0, r0, lsr #32
 1a4:	00000068 	andeq	r0, r0, r8, rrx
 1a8:	080006ea 	stmdaeq	r0, {r1, r3, r5, r6, r7, r9, sl}
 1ac:	0000011a 	andeq	r0, r0, sl, lsl r1
 1b0:	84180e41 	ldrhi	r0, [r8], #-3649	; 0xfffff1bf
 1b4:	86038504 	strhi	r8, [r3], -r4, lsl #10
 1b8:	02018e02 	andeq	r8, r1, #2, 28
 1bc:	100e0a46 	andne	r0, lr, r6, asr #20
 1c0:	00000b41 	andeq	r0, r0, r1, asr #22
 1c4:	0000000c 	andeq	r0, r0, ip
 1c8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 1cc:	7c020001 	stcvc	0, cr0, [r2], {1}
 1d0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 1d4:	0000000c 	andeq	r0, r0, ip
 1d8:	000001c4 	andeq	r0, r0, r4, asr #3
 1dc:	08000804 	stmdaeq	r0, {r2, fp}
 1e0:	0000000a 	andeq	r0, r0, sl
 1e4:	0000000c 	andeq	r0, r0, ip
 1e8:	000001c4 	andeq	r0, r0, r4, asr #3
 1ec:	0800080e 	stmdaeq	r0, {r1, r2, r3, fp}
 1f0:	00000026 	andeq	r0, r0, r6, lsr #32
 1f4:	0000000c 	andeq	r0, r0, ip
 1f8:	000001c4 	andeq	r0, r0, r4, asr #3
 1fc:	08000834 	stmdaeq	r0, {r2, r4, r5, fp}
 200:	00000022 	andeq	r0, r0, r2, lsr #32
 204:	0000001c 	andeq	r0, r0, ip, lsl r0
 208:	000001c4 	andeq	r0, r0, r4, asr #3
 20c:	08000856 	stmdaeq	r0, {r1, r2, r4, r6, fp}
 210:	0000004a 	andeq	r0, r0, sl, asr #32
 214:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
 218:	49018e02 	stmdbmi	r1, {r1, r9, sl, fp, pc}
 21c:	0ec4ce0a 	cdpeq	14, 12, cr12, cr4, cr10, {0}
 220:	000b4200 	andeq	r4, fp, r0, lsl #4
 224:	0000001c 	andeq	r0, r0, ip, lsl r0
 228:	000001c4 	andeq	r0, r0, r4, asr #3
 22c:	080008a0 	stmdaeq	r0, {r5, r7, fp}
 230:	0000002c 	andeq	r0, r0, ip, lsr #32
 234:	83180e41 	tsthi	r8, #1040	; 0x410
 238:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
 23c:	87038604 	strhi	r8, [r3, -r4, lsl #12]
 240:	00018e02 	andeq	r8, r1, r2, lsl #28
 244:	00000018 	andeq	r0, r0, r8, lsl r0
 248:	000001c4 	andeq	r0, r0, r4, asr #3
 24c:	080008cc 	stmdaeq	r0, {r2, r3, r6, r7, fp}
 250:	00000028 	andeq	r0, r0, r8, lsr #32
 254:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
 258:	86038504 	strhi	r8, [r3], -r4, lsl #10
 25c:	00018e02 	andeq	r8, r1, r2, lsl #28
 260:	00000018 	andeq	r0, r0, r8, lsl r0
 264:	000001c4 	andeq	r0, r0, r4, asr #3
 268:	080008f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, fp}
 26c:	0000002c 	andeq	r0, r0, ip, lsr #32
 270:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
 274:	86038504 	strhi	r8, [r3], -r4, lsl #10
 278:	00018e02 	andeq	r8, r1, r2, lsl #28
 27c:	0000001c 	andeq	r0, r0, ip, lsl r0
 280:	000001c4 	andeq	r0, r0, r4, asr #3
 284:	08000920 	stmdaeq	r0, {r5, r8, fp}
 288:	00000058 	andeq	r0, r0, r8, asr r0
 28c:	83180e41 	tsthi	r8, #1040	; 0x410
 290:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
 294:	87038604 	strhi	r8, [r3, -r4, lsl #12]
 298:	00018e02 	andeq	r8, r1, r2, lsl #28
 29c:	0000000c 	andeq	r0, r0, ip
 2a0:	000001c4 	andeq	r0, r0, r4, asr #3
 2a4:	08000978 	stmdaeq	r0, {r3, r4, r5, r6, r8, fp}
 2a8:	0000007c 	andeq	r0, r0, ip, ror r0
 2ac:	0000000c 	andeq	r0, r0, ip
 2b0:	000001c4 	andeq	r0, r0, r4, asr #3
 2b4:	080009f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, fp}
 2b8:	00000024 	andeq	r0, r0, r4, lsr #32
 2bc:	00000014 	andeq	r0, r0, r4, lsl r0
 2c0:	000001c4 	andeq	r0, r0, r4, asr #3
 2c4:	08000a18 	stmdaeq	r0, {r3, r4, r9, fp}
 2c8:	000000d8 	ldrdeq	r0, [r0], -r8
 2cc:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
 2d0:	00018e02 	andeq	r8, r1, r2, lsl #28
 2d4:	0000000c 	andeq	r0, r0, ip
 2d8:	000001c4 	andeq	r0, r0, r4, asr #3
 2dc:	08000af0 	stmdaeq	r0, {r4, r5, r6, r7, r9, fp}
 2e0:	00000010 	andeq	r0, r0, r0, lsl r0
 2e4:	00000020 	andeq	r0, r0, r0, lsr #32
 2e8:	000001c4 	andeq	r0, r0, r4, asr #3
 2ec:	08000b00 	stmdaeq	r0, {r8, r9, fp}
 2f0:	00000094 	muleq	r0, r4, r0
 2f4:	84100e42 	ldrhi	r0, [r0], #-3650	; 0xfffff1be
 2f8:	86038504 	strhi	r8, [r3], -r4, lsl #10
 2fc:	7b018e02 	blvc	63b0c <__Stack_Size+0x6370c>
 300:	c4c5c6ce 	strbgt	ip, [r5], #1742	; 0x6ce
 304:	0000000e 	andeq	r0, r0, lr
 308:	0000001c 	andeq	r0, r0, ip, lsl r0
 30c:	000001c4 	andeq	r0, r0, r4, asr #3
 310:	08000b94 	stmdaeq	r0, {r2, r4, r7, r8, r9, fp}
 314:	00000074 	andeq	r0, r0, r4, ror r0
 318:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 31c:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
 320:	300e4201 	andcc	r4, lr, r1, lsl #4
 324:	000c0e72 	andeq	r0, ip, r2, ror lr

Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	52434442 	subpl	r4, r3, #1107296256	; 0x42000000
   4:	47464300 	strbmi	r4, [r6, -r0, lsl #6]
   8:	4c460052 	mcrrmi	0, 5, r0, r6, cr2
   c:	5f485341 	svcpl	0x00485341
  10:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
  14:	00666544 	rsbeq	r6, r6, r4, asr #10
  18:	20554e47 	subscs	r4, r5, r7, asr #28
  1c:	20373143 	eorscs	r3, r7, r3, asr #2
  20:	2e332e38 	mrccs	14, 1, r2, cr3, cr8, {1}
  24:	30322031 	eorscc	r2, r2, r1, lsr r0
  28:	37303931 			; <UNDEFINED> instruction: 0x37303931
  2c:	28203330 	stmdacs	r0!, {r4, r5, r8, r9, ip, sp}
  30:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
  34:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
  38:	63675b20 	cmnvs	r7, #32, 22	; 0x8000
  3c:	2d382d63 	ldccs	13, cr2, [r8, #-396]!	; 0xfffffe74
  40:	6e617262 	cdpvs	2, 6, cr7, cr1, cr2, {3}
  44:	72206863 	eorvc	r6, r0, #6488064	; 0x630000
  48:	73697665 	cmnvc	r9, #105906176	; 0x6500000
  4c:	206e6f69 	rsbcs	r6, lr, r9, ror #30
  50:	30333732 	eorscc	r3, r3, r2, lsr r7
  54:	205d3732 	subscs	r3, sp, r2, lsr r7
  58:	68746d2d 	ldmdavs	r4!, {r0, r2, r3, r5, r8, sl, fp, sp, lr}^
  5c:	20626d75 	rsbcs	r6, r2, r5, ror sp
  60:	70636d2d 	rsbvc	r6, r3, sp, lsr #26
  64:	6f633d75 	svcvs	0x00633d75
  68:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
  6c:	20336d2d 	eorscs	r6, r3, sp, lsr #26
  70:	6c666d2d 	stclvs	13, cr6, [r6], #-180	; 0xffffff4c
  74:	2d74616f 	ldfcse	f6, [r4, #-444]!	; 0xfffffe44
  78:	3d696261 	sfmcc	f6, 2, [r9, #-388]!	; 0xfffffe7c
  7c:	74666f73 	strbtvc	r6, [r6], #-3955	; 0xfffff08d
  80:	616d2d20 	cmnvs	sp, r0, lsr #26
  84:	3d686372 	stclcc	3, cr6, [r8, #-456]!	; 0xfffffe38
  88:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
  8c:	206d2d37 	rsbcs	r2, sp, r7, lsr sp
  90:	7764672d 	strbvc	r6, [r4, -sp, lsr #14]!
  94:	2d667261 	sfmcs	f7, 2, [r6, #-388]!	; 0xfffffe7c
  98:	4f2d2032 	svcmi	0x002d2032
  9c:	662d2073 			; <UNDEFINED> instruction: 0x662d2073
  a0:	622d6f6e 	eorvs	r6, sp, #440	; 0x1b8
  a4:	746c6975 	strbtvc	r6, [ip], #-2421	; 0xfffff68b
  a8:	75006e69 	strvc	r6, [r0, #-3689]	; 0xfffff197
  ac:	635f6273 	cmpvs	pc, #805306375	; 0x30000007
  b0:	7373616c 	cmnvc	r3, #108, 2
  b4:	6c6f705f 	stclvs	0, cr7, [pc], #-380	; ffffff40 <BootRAM+0xef706e1>
  b8:	5342006c 	movtpl	r0, #8300	; 0x206c
  bc:	41005252 	tstmi	r0, r2, asr r2
  c0:	4e454248 	cdpmi	2, 4, cr4, cr5, cr8, {2}
  c4:	53550052 	cmppl	r5, #82	; 0x52
  c8:	65735f42 	ldrbvs	r5, [r3, #-3906]!	; 0xfffff0be
  cc:	00707574 	rsbseq	r7, r0, r4, ror r5
  d0:	52505257 	subspl	r5, r0, #1879048197	; 0x70000005
  d4:	73795300 	cmnvc	r9, #0, 6
  d8:	636f6c43 	cmnvs	pc, #17152	; 0x4300
  dc:	78614d6b 	stmdavc	r1!, {r0, r1, r3, r5, r6, r8, sl, fp, lr}^
  e0:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
  e4:	79545f4f 	ldmdbvc	r4, {r0, r1, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
  e8:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
  ec:	50410066 	subpl	r0, r1, r6, rrx
  f0:	53523142 	cmppl	r2, #-2147483632	; 0x80000010
  f4:	41005254 	tstmi	r0, r4, asr r2
  f8:	72504248 	subsvc	r4, r0, #72, 4	; 0x80000004
  fc:	54637365 	strbtpl	r7, [r3], #-869	; 0xfffffc9b
 100:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
 104:	6f687300 	svcvs	0x00687300
 108:	75207472 	strvc	r7, [r0, #-1138]!	; 0xfffffb8e
 10c:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
 110:	2064656e 	rsbcs	r6, r4, lr, ror #10
 114:	00746e69 	rsbseq	r6, r4, r9, ror #28
 118:	5f4d5449 	svcpl	0x004d5449
 11c:	75427852 	strbvc	r7, [r2, #-2130]	; 0xfffff7ae
 120:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
 124:	54504f00 	ldrbpl	r4, [r0], #-3840	; 0xfffff100
 128:	5259454b 	subspl	r4, r9, #314572800	; 0x12c00000
 12c:	736e7500 	cmnvc	lr, #0, 10
 130:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
 134:	68632064 	stmdavs	r3!, {r2, r5, r6, sp}^
 138:	52007261 	andpl	r7, r0, #268435462	; 0x10000006
 13c:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
 140:	00444556 	subeq	r4, r4, r6, asr r5
 144:	32425041 	subcc	r5, r2, #65	; 0x41
 148:	00524e45 	subseq	r4, r2, r5, asr #28
 14c:	6e69616d 	powvsez	f6, f1, #5.0
 150:	42504100 	subsmi	r4, r0, #0, 2
 154:	524e4531 	subpl	r4, lr, #205520896	; 0xc400000
 158:	42504100 	subsmi	r4, r0, #0, 2
 15c:	54535232 	ldrbpl	r5, [r3], #-562	; 0xfffffdce
 160:	65740052 	ldrbvs	r0, [r4, #-82]!	; 0xffffffae
 164:	6c00706d 	stcvs	0, cr7, [r0], {109}	; 0x6d
 168:	20676e6f 	rsbcs	r6, r7, pc, ror #28
 16c:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
 170:	736e7520 	cmnvc	lr, #32, 10	; 0x8000000
 174:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
 178:	6e692064 	cdpvs	0, 6, cr2, cr9, cr4, {3}
 17c:	69750074 	ldmdbvs	r5!, {r2, r4, r5, r6}^
 180:	5f38746e 	svcpl	0x0038746e
 184:	69740074 	ldmdbvs	r4!, {r2, r4, r5, r6}^
 188:	5300656d 	movwpl	r6, #1389	; 0x56d
 18c:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
 190:	696e496d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, fp, lr}^
 194:	6f6c0074 	svcvs	0x006c0074
 198:	6c20676e 	stcvs	7, cr6, [r0], #-440	; 0xfffffe48
 19c:	20676e6f 	rsbcs	r6, r7, pc, ror #28
 1a0:	00746e69 	rsbseq	r6, r4, r9, ror #28
 1a4:	74737953 	ldrbtvc	r7, [r3], #-2387	; 0xfffff6ad
 1a8:	6f436d65 	svcvs	0x00436d65
 1ac:	6c436572 	cfstr64vs	mvdx6, [r3], {114}	; 0x72
 1b0:	006b636f 	rsbeq	r6, fp, pc, ror #6
 1b4:	2f637273 	svccs	0x00637273
 1b8:	6e69616d 	powvsez	f6, f1, #5.0
 1bc:	4100632e 	tstmi	r0, lr, lsr #6
 1c0:	72504250 	subsvc	r4, r0, #80, 4
 1c4:	54637365 	strbtpl	r7, [r3], #-869	; 0xfffffc9b
 1c8:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
 1cc:	6f687300 	svcvs	0x00687300
 1d0:	69207472 	stmdbvs	r0!, {r1, r4, r5, r6, sl, ip, sp, lr}
 1d4:	5200746e 	andpl	r7, r0, #1845493760	; 0x6e000000
 1d8:	545f4343 	ldrbpl	r4, [pc], #-835	; 1e0 <_Minimum_Stack_Size+0xe0>
 1dc:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
 1e0:	75006665 	strvc	r6, [r0, #-1637]	; 0xfffff99b
 1e4:	33746e69 	cmncc	r4, #1680	; 0x690
 1e8:	00745f32 	rsbseq	r5, r4, r2, lsr pc
 1ec:	6e655f5f 	mcrvs	15, 3, r5, cr5, cr15, {2}
 1f0:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
 1f4:	7172695f 	cmnvc	r2, pc, asr r9
 1f8:	656c7300 	strbvs	r7, [ip, #-768]!	; 0xfffffd00
 1fc:	2f007065 	svccs	0x00007065
 200:	6964656d 	stmdbvs	r4!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}^
 204:	78652f61 	stmdavc	r5!, {r0, r5, r6, r8, r9, sl, fp, sp}^
 208:	65642f74 	strbvs	r2, [r4, #-3956]!	; 0xfffff08c
 20c:	72702f76 	rsbsvc	r2, r0, #472	; 0x1d8
 210:	612f676f 			; <UNDEFINED> instruction: 0x612f676f
 214:	752f6d72 	strvc	r6, [pc, #-3442]!	; fffff4aa <BootRAM+0xef6fc4b>
 218:	352f6273 	strcc	r6, [pc, #-627]!	; ffffffad <BootRAM+0xef7074e>
 21c:	4344432e 	movtmi	r4, #17198	; 0x432e
 220:	5f31465f 	svcpl	0x0031465f
 224:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 228:	4b434c00 	blmi	10d3230 <__Stack_Size+0x10d2e30>
 22c:	53550052 	cmppl	r5, #82	; 0x52
 230:	504c5f42 	subpl	r5, ip, r2, asr #30
 234:	4e41435f 	mcrmi	3, 2, r4, cr1, cr15, {2}
 238:	58525f31 	ldmdapl	r2, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
 23c:	52495f30 	subpl	r5, r9, #48, 30	; 0xc0
 240:	77006e51 	smlsdvc	r0, r1, lr, r6
 244:	65646e49 	strbvs	r6, [r4, #-3657]!	; 0xfffff1b7
 248:	75620078 	strbvc	r0, [r2, #-120]!	; 0xffffff88
 24c:	00363166 	eorseq	r3, r6, r6, ror #2
 250:	314e4143 	cmpcc	lr, r3, asr #2
 254:	4543535f 	strbmi	r5, [r3, #-863]	; 0xfffffca1
 258:	5152495f 	cmppl	r2, pc, asr r9
 25c:	4d44006e 	stclmi	0, cr0, [r4, #-440]	; 0xfffffe48
 260:	435f3141 	cmpmi	pc, #1073741840	; 0x40000010
 264:	6e6e6168 	powvsez	f6, f6, #0.0
 268:	5f376c65 	svcpl	0x00376c65
 26c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 270:	43324900 	teqmi	r2, #0, 18
 274:	52455f32 	subpl	r5, r5, #50, 30	; 0xc8
 278:	5152495f 	cmppl	r2, pc, asr r9
 27c:	4954006e 	ldmdbmi	r4, {r1, r2, r3, r5, r6}^
 280:	495f344d 	ldmdbmi	pc, {r0, r2, r3, r6, sl, ip, sp}^	; <UNPREDICTABLE>
 284:	006e5152 	rsbeq	r5, lr, r2, asr r1
 288:	31414d44 	cmpcc	r1, r4, asr #26
 28c:	6168435f 	cmnvs	r8, pc, asr r3
 290:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
 294:	52495f32 	subpl	r5, r9, #50, 30	; 0xc8
 298:	70006e51 	andvc	r6, r0, r1, asr lr
 29c:	645f616d 	ldrbvs	r6, [pc], #-365	; 2a4 <_Minimum_Stack_Size+0x1a4>
 2a0:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
 2a4:	6200745f 	andvs	r7, r0, #1593835520	; 0x5f000000
 2a8:	7165526d 	cmnvc	r5, sp, ror #4
 2ac:	74736575 	ldrbtvc	r6, [r3], #-1397	; 0xfffffa8b
 2b0:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
 2b4:	74657300 	strbtvc	r7, [r5], #-768	; 0xfffffd00
 2b8:	705f7075 	subsvc	r7, pc, r5, ror r0	; <UNPREDICTABLE>
 2bc:	656b6361 	strbvs	r6, [fp, #-865]!	; 0xfffffc9f
 2c0:	4c460074 	mcrrmi	0, 7, r0, r6, cr4
 2c4:	5f485341 	svcpl	0x00485341
 2c8:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 2cc:	74796200 	ldrbtvc	r6, [r9], #-512	; 0xfffffe00
 2d0:	65727365 	ldrbvs	r7, [r2, #-869]!	; 0xfffffc9b
 2d4:	45006461 	strmi	r6, [r0, #-1121]	; 0xfffffb9f
 2d8:	30495458 	subcc	r5, r9, r8, asr r4
 2dc:	5152495f 	cmppl	r2, pc, asr r9
 2e0:	5355006e 	cmppl	r5, #110	; 0x6e
 2e4:	504c5f42 	subpl	r5, ip, r2, asr #30
 2e8:	4e41435f 	mcrmi	3, 2, r4, cr1, cr15, {2}
 2ec:	58525f31 	ldmdapl	r2, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
 2f0:	52495f30 	subpl	r5, r9, #48, 30	; 0xc0
 2f4:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
 2f8:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
 2fc:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
 300:	5f353149 	svcpl	0x00353149
 304:	495f3031 	ldmdbmi	pc, {r0, r4, r5, ip, sp}^	; <UNPREDICTABLE>
 308:	006e5152 	rsbeq	r5, lr, r2, asr r1
 30c:	7473616c 	ldrbtvc	r6, [r3], #-364	; 0xfffffe94
 310:	72646461 	rsbvc	r6, r4, #1627389952	; 0x61000000
 314:	6e655000 	cdpvs	0, 6, cr5, cr5, cr0, {0}
 318:	5f565364 	svcpl	0x00565364
 31c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 320:	43435200 	movtmi	r5, #12800	; 0x3200
 324:	5152495f 	cmppl	r2, pc, asr r9
 328:	5677006e 	ldrbtpl	r0, [r7], -lr, rrx
 32c:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
 330:	6d654d00 	stclvs	13, cr4, [r5, #-0]
 334:	4d79726f 	lfmmi	f7, 2, [r9, #-444]!	; 0xfffffe44
 338:	67616e61 	strbvs	r6, [r1, -r1, ror #28]!
 33c:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 340:	52495f74 	subpl	r5, r9, #116, 30	; 0x1d0
 344:	65006e51 	strvs	r6, [r0, #-3665]	; 0xfffff1af
 348:	635f3070 	cmpvs	pc, #112	; 0x70
 34c:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
 350:	54534900 	ldrbpl	r4, [r3], #-2304	; 0xfffff700
 354:	53490052 	movtpl	r0, #36946	; 0x9052
 358:	65005245 	strvs	r5, [r0, #-581]	; 0xfffffdbb
 35c:	5f70646e 	svcpl	0x0070646e
 360:	6c6c6163 	stfvse	f6, [ip], #-396	; 0xfffffe74
 364:	6b636162 	blvs	18d88f4 <__Stack_Size+0x18d84f4>
 368:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
 36c:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
 370:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
 374:	52425f31 	subpl	r5, r2, #49, 30	; 0xc4
 378:	52495f4b 	subpl	r5, r9, #300	; 0x12c
 37c:	52006e51 	andpl	r6, r0, #1296	; 0x510
 380:	56524553 			; <UNDEFINED> instruction: 0x56524553
 384:	00314445 	eorseq	r4, r1, r5, asr #8
 388:	31495053 	qdaddcc	r5, r3, r9
 38c:	5152495f 	cmppl	r2, pc, asr r9
 390:	755f006e 	ldrbvc	r0, [pc, #-110]	; 32a <_Minimum_Stack_Size+0x22a>
 394:	655f6273 	ldrbvs	r6, [pc, #-627]	; 129 <_Minimum_Stack_Size+0x29>
 398:	72775f70 	rsbsvc	r5, r7, #112, 30	; 0x1c0
 39c:	00657469 	rsbeq	r7, r5, r9, ror #8
 3a0:	31414d44 	cmpcc	r1, r4, asr #26
 3a4:	6168435f 	cmnvs	r8, pc, asr r3
 3a8:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
 3ac:	52495f34 	subpl	r5, r9, #52, 30	; 0xd0
 3b0:	4e006e51 	mcrmi	14, 0, r6, cr0, cr1, {2}
 3b4:	5f434956 	svcpl	0x00434956
 3b8:	62616e45 	rsbvs	r6, r1, #1104	; 0x450
 3bc:	5249656c 	subpl	r6, r9, #108, 10	; 0x1b000000
 3c0:	53550051 	cmppl	r5, #81	; 0x51
 3c4:	79545f42 	ldmdbvc	r4, {r1, r6, r8, r9, sl, fp, ip, lr}^
 3c8:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
 3cc:	41440066 	cmpmi	r4, r6, rrx
 3d0:	00524444 	subseq	r4, r2, r4, asr #8
 3d4:	314e4143 	cmpcc	lr, r3, asr #2
 3d8:	3158525f 	cmpcc	r8, pc, asr r2
 3dc:	5152495f 	cmppl	r2, pc, asr r9
 3e0:	4552006e 	ldrbmi	r0, [r2, #-110]	; 0xffffff92
 3e4:	56524553 			; <UNDEFINED> instruction: 0x56524553
 3e8:	00424445 	subeq	r4, r2, r5, asr #8
 3ec:	5f627375 	svcpl	0x00627375
 3f0:	73616c63 	cmnvc	r1, #25344	; 0x6300
 3f4:	65675f73 	strbvs	r5, [r7, #-3955]!	; 0xfffff08d
 3f8:	74735f74 	ldrbtvc	r5, [r3], #-3956	; 0xfffff08c
 3fc:	65645f64 	strbvs	r5, [r4, #-3940]!	; 0xfffff09c
 400:	00726373 	rsbseq	r6, r2, r3, ror r3
 404:	5f425355 	svcpl	0x00425355
 408:	435f5048 	cmpmi	pc, #72	; 0x48
 40c:	5f314e41 	svcpl	0x00314e41
 410:	495f5854 	ldmdbmi	pc, {r2, r4, r6, fp, ip, lr}^	; <UNPREDICTABLE>
 414:	006e5152 	rsbeq	r5, lr, r2, asr r1
 418:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 41c:	7079545f 	rsbsvc	r5, r9, pc, asr r4
 420:	70650065 	rsbvc	r0, r5, r5, rrx
 424:	65735f30 	ldrbvs	r5, [r3, #-3888]!	; 0xfffff0d0
 428:	5500646e 	strpl	r6, [r0, #-1134]	; 0xfffffb92
 42c:	54524153 	ldrbpl	r4, [r2], #-339	; 0xfffffead
 430:	52495f32 	subpl	r5, r9, #50, 30	; 0xc8
 434:	63006e51 	movwvs	r6, #3665	; 0xe51
 438:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 43c:	61727567 	cmnvs	r2, r7, ror #10
 440:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 444:	30504500 	subscc	r4, r0, r0, lsl #10
 448:	53550052 	cmppl	r5, #82	; 0x52
 44c:	64415f42 	strbvs	r5, [r1], #-3906	; 0xfffff0be
 450:	65007264 	strvs	r7, [r0, #-612]	; 0xfffffd9c
 454:	6e756670 	mrcvs	6, 3, r6, cr5, cr0, {3}
 458:	756f5f63 	strbvc	r5, [pc, #-3939]!	; fffff4fd <BootRAM+0xef6fc9e>
 45c:	70650074 	rsbvc	r0, r5, r4, ror r0
 460:	75625f30 	strbvc	r5, [r2, #-3888]!	; 0xfffff0d0
 464:	58450066 	stmdapl	r5, {r1, r2, r5, r6}^
 468:	5f324954 	svcpl	0x00324954
 46c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 470:	43324900 	teqmi	r2, #0, 18
 474:	56455f32 			; <UNDEFINED> instruction: 0x56455f32
 478:	5152495f 	cmppl	r2, pc, asr r9
 47c:	5045006e 	subpl	r0, r5, lr, rrx
 480:	75005231 	strvc	r5, [r0, #-561]	; 0xfffffdcf
 484:	655f6273 	ldrbvs	r6, [pc, #-627]	; 219 <_Minimum_Stack_Size+0x119>
 488:	74616470 	strbtvc	r6, [r1], #-1136	; 0xfffffb90
 48c:	00745f61 	rsbseq	r5, r4, r1, ror #30
 490:	31414d44 	cmpcc	r1, r4, asr #26
 494:	6168435f 	cmnvs	r8, pc, asr r3
 498:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
 49c:	52495f36 	subpl	r5, r9, #54, 30	; 0xd8
 4a0:	5f006e51 	svcpl	0x00006e51
 4a4:	5f627375 	svcpl	0x00627375
 4a8:	725f7065 	subsvc	r7, pc, #101	; 0x65
 4ac:	00646165 	rsbeq	r6, r4, r5, ror #2
 4b0:	334d4954 	movtcc	r4, #55636	; 0xd954
 4b4:	5152495f 	cmppl	r2, pc, asr r9
 4b8:	4d44006e 	stclmi	0, cr0, [r4, #-440]	; 0xfffffe48
 4bc:	435f3141 	cmpmi	pc, #1073741840	; 0x40000010
 4c0:	6e6e6168 	powvsez	f6, f6, #0.0
 4c4:	5f316c65 	svcpl	0x00316c65
 4c8:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 4cc:	32504500 	subscc	r4, r0, #0, 10
 4d0:	53550052 	cmppl	r5, #82	; 0x52
 4d4:	6b615742 	blvs	18561e4 <__Stack_Size+0x1855de4>
 4d8:	5f705565 	svcpl	0x00705565
 4dc:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 4e0:	44575700 	ldrbmi	r5, [r7], #-1792	; 0xfffff900
 4e4:	52495f47 	subpl	r5, r9, #284	; 0x11c
 4e8:	75006e51 	strvc	r6, [r0, #-3665]	; 0xfffff1af
 4ec:	635f6273 	cmpvs	pc, #805306375	; 0x30000007
 4f0:	7373616c 	cmnvc	r3, #108, 2
 4f4:	7369645f 	cmnvc	r9, #1593835520	; 0x5f000000
 4f8:	6e6e6f63 	cdpvs	15, 6, cr6, cr14, cr3, {3}
 4fc:	00746365 	rsbseq	r6, r4, r5, ror #6
 500:	52335045 	eorspl	r5, r3, #69	; 0x45
 504:	73754200 	cmnvc	r5, #0, 4
 508:	6c756146 	ldfvse	f6, [r5], #-280	; 0xfffffee8
 50c:	52495f74 	subpl	r5, r9, #116, 30	; 0x1d0
 510:	45006e51 	strmi	r6, [r0, #-3665]	; 0xfffff1af
 514:	34495458 	strbcc	r5, [r9], #-1112	; 0xfffffba8
 518:	5152495f 	cmppl	r2, pc, asr r9
 51c:	7375006e 	cmnvc	r5, #110	; 0x6e
 520:	6c635f62 	stclvs	15, cr5, [r3], #-392	; 0xfffffe78
 524:	5f737361 	svcpl	0x00737361
 528:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 52c:	44565000 	ldrbmi	r5, [r6], #-0
 530:	5152495f 	cmppl	r2, pc, asr r9
 534:	7065006e 	rsbvc	r0, r5, lr, rrx
 538:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 53c:	7500745f 	strvc	r7, [r0, #-1119]	; 0xfffffba1
 540:	745f6273 	ldrbvc	r6, [pc], #-627	; 548 <__Stack_Size+0x148>
 544:	6f635f78 	svcvs	0x00635f78
 548:	00746e75 	rsbseq	r6, r4, r5, ror lr
 54c:	52504349 	subspl	r4, r0, #603979777	; 0x24000001
 550:	34504500 	ldrbcc	r4, [r0], #-1280	; 0xfffffb00
 554:	4d440052 	stclmi	0, cr0, [r4, #-328]	; 0xfffffeb8
 558:	435f3141 	cmpmi	pc, #1073741840	; 0x40000010
 55c:	6e6e6168 	powvsez	f6, f6, #0.0
 560:	5f336c65 	svcpl	0x00336c65
 564:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 568:	63727300 	cmnvs	r2, #0, 6
 56c:	6273752f 	rsbsvs	r7, r3, #197132288	; 0xbc00000
 570:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
 574:	4900632e 	stmdbmi	r0, {r1, r2, r3, r5, r8, r9, sp, lr}
 578:	5f314332 	svcpl	0x00314332
 57c:	495f5645 	ldmdbmi	pc, {r0, r2, r6, r9, sl, ip, lr}^	; <UNPREDICTABLE>
 580:	006e5152 	rsbeq	r5, lr, r2, asr r1
 584:	6e5f7872 	mrcvs	8, 2, r7, cr15, cr2, {3}
 588:	625f6d75 	subsvs	r6, pc, #7488	; 0x1d40
 58c:	6b636f6c 	blvs	18dc344 <__Stack_Size+0x18dbf44>
 590:	73750073 	cmnvc	r5, #115	; 0x73
 594:	6c635f62 	stclvs	15, cr5, [r3], #-392	; 0xfffffe78
 598:	5f737361 	svcpl	0x00737361
 59c:	5f307065 	svcpl	0x00307065
 5a0:	75006e69 	strvc	r6, [r0, #-3689]	; 0xfffff197
 5a4:	31746e69 	cmncc	r4, r9, ror #28
 5a8:	00745f36 	rsbseq	r5, r4, r6, lsr pc
 5ac:	625f7874 	subsvs	r7, pc, #116, 16	; 0x740000
 5b0:	6b636f6c 	blvs	18dc368 <__Stack_Size+0x18dbf68>
 5b4:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
 5b8:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
 5bc:	50555f31 	subspl	r5, r5, r1, lsr pc
 5c0:	5152495f 	cmppl	r2, pc, asr r9
 5c4:	5453006e 	ldrbpl	r0, [r3], #-110	; 0xffffff92
 5c8:	52005249 	andpl	r5, r0, #-1879048188	; 0x90000004
 5cc:	415f4354 	cmpmi	pc, r4, asr r3	; <UNPREDICTABLE>
 5d0:	6d72616c 	ldfvse	f6, [r2, #-432]!	; 0xfffffe50
 5d4:	5152495f 	cmppl	r2, pc, asr r9
 5d8:	5452006e 	ldrbpl	r0, [r2], #-110	; 0xffffff92
 5dc:	52495f43 	subpl	r5, r9, #268	; 0x10c
 5e0:	45006e51 	strmi	r6, [r0, #-3665]	; 0xfffff1af
 5e4:	00523550 	subseq	r3, r2, r0, asr r5
 5e8:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
 5ec:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
 5f0:	45520030 	ldrbmi	r0, [r2, #-48]	; 0xffffffd0
 5f4:	56524553 			; <UNDEFINED> instruction: 0x56524553
 5f8:	00314445 	eorseq	r4, r1, r5, asr #8
 5fc:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
 600:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
 604:	45520032 	ldrbmi	r0, [r2, #-50]	; 0xffffffce
 608:	56524553 			; <UNDEFINED> instruction: 0x56524553
 60c:	00334445 	eorseq	r4, r3, r5, asr #8
 610:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
 614:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
 618:	45520034 	ldrbmi	r0, [r2, #-52]	; 0xffffffcc
 61c:	56524553 			; <UNDEFINED> instruction: 0x56524553
 620:	00354445 	eorseq	r4, r5, r5, asr #8
 624:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
 628:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
 62c:	45520036 	ldrbmi	r0, [r2, #-54]	; 0xffffffca
 630:	56524553 			; <UNDEFINED> instruction: 0x56524553
 634:	00384445 	eorseq	r4, r8, r5, asr #8
 638:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
 63c:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
 640:	45520039 	ldrbmi	r0, [r2, #-57]	; 0xffffffc7
 644:	56524553 			; <UNDEFINED> instruction: 0x56524553
 648:	00414445 	subeq	r4, r1, r5, asr #8
 64c:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
 650:	495f3154 	ldmdbmi	pc, {r2, r4, r6, r8, ip, sp}^	; <UNPREDICTABLE>
 654:	006e5152 	rsbeq	r5, lr, r2, asr r1
 658:	5f627375 	svcpl	0x00627375
 65c:	695f7065 	ldmdbvs	pc, {r0, r2, r5, r6, ip, sp, lr}^	; <UNPREDICTABLE>
 660:	0074696e 	rsbseq	r6, r4, lr, ror #18
 664:	4d6e6f4e 	stclmi	15, cr6, [lr, #-312]!	; 0xfffffec8
 668:	616b7361 	cmnvs	fp, r1, ror #6
 66c:	49656c62 	stmdbmi	r5!, {r1, r5, r6, sl, fp, sp, lr}^
 670:	495f746e 	ldmdbmi	pc, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
 674:	006e5152 	rsbeq	r5, lr, r2, asr r1
 678:	6e654c77 	mcrvs	12, 3, r4, cr5, cr7, {3}
 67c:	00687467 	rsbeq	r7, r8, r7, ror #8
 680:	314d4954 	cmpcc	sp, r4, asr r9
 684:	5f43435f 	svcpl	0x0043435f
 688:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 68c:	36504500 	ldrbcc	r4, [r0], -r0, lsl #10
 690:	656c0052 	strbvs	r0, [ip, #-82]!	; 0xffffffae
 694:	45007466 	strmi	r7, [r0, #-1126]	; 0xfffffb9a
 698:	31495458 	cmpcc	r9, r8, asr r4
 69c:	5152495f 	cmppl	r2, pc, asr r9
 6a0:	5262006e 	rsbpl	r0, r2, #110	; 0x6e
 6a4:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0xfffffe9b
 6a8:	4e007473 	mcrmi	4, 0, r7, cr0, cr3, {3}
 6ac:	5f434956 	svcpl	0x00434956
 6b0:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
 6b4:	544e4300 	strbpl	r4, [lr], #-768	; 0xfffffd00
 6b8:	49540052 	ldmdbmi	r4, {r1, r4, r6}^
 6bc:	545f314d 	ldrbpl	r3, [pc], #-333	; 6c4 <__Stack_Size+0x2c4>
 6c0:	435f4752 	cmpmi	pc, #21495808	; 0x1480000
 6c4:	495f4d4f 	ldmdbmi	pc, {r0, r1, r2, r3, r6, r8, sl, fp, lr}^	; <UNPREDICTABLE>
 6c8:	006e5152 	rsbeq	r5, lr, r2, asr r1
 6cc:	31433249 	cmpcc	r3, r9, asr #4
 6d0:	5f52455f 	svcpl	0x0052455f
 6d4:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 6d8:	73795300 	cmnvc	r9, #0, 6
 6dc:	6b636954 	blvs	18dac34 <__Stack_Size+0x18da834>
 6e0:	5152495f 	cmppl	r2, pc, asr r9
 6e4:	7065006e 	rsbvc	r0, r5, lr, rrx
 6e8:	006d756e 	rsbeq	r7, sp, lr, ror #10
 6ec:	735f7872 	cmpvc	pc, #7471104	; 0x720000
 6f0:	00657a69 	rsbeq	r7, r5, r9, ror #20
 6f4:	324d4954 	subcc	r4, sp, #84, 18	; 0x150000
 6f8:	5152495f 	cmppl	r2, pc, asr r9
 6fc:	7375006e 	cmnvc	r5, #110	; 0x6e
 700:	6c635f62 	stclvs	15, cr5, [r3], #-392	; 0xfffffe78
 704:	5f737361 	svcpl	0x00737361
 708:	5f307065 	svcpl	0x00307065
 70c:	0074756f 	rsbseq	r7, r4, pc, ror #10
 710:	52375045 	eorspl	r5, r7, #69	; 0x45
 714:	6e6f6300 	cdpvs	3, 6, cr6, cr15, cr0, {0}
 718:	5f676966 	svcpl	0x00676966
 71c:	6b636170 	blvs	18d8ce4 <__Stack_Size+0x18d88e4>
 720:	7500745f 	strvc	r7, [r0, #-1119]	; 0xfffffba1
 724:	725f6273 	subsvc	r6, pc, #805306375	; 0x30000007
 728:	64615f78 	strbtvs	r5, [r1], #-3960	; 0xfffff088
 72c:	74007264 	strvc	r7, [r0], #-612	; 0xfffffd9c
 730:	756e5f78 	strbvc	r5, [lr, #-3960]!	; 0xfffff088
 734:	6c625f6d 	stclvs	15, cr5, [r2], #-436	; 0xfffffe4c
 738:	736b636f 	cmnvc	fp, #-1140850687	; 0xbc000001
 73c:	62654400 	rsbvs	r4, r5, #0, 8
 740:	6f4d6775 	svcvs	0x004d6775
 744:	6f74696e 	svcvs	0x0074696e
 748:	52495f72 	subpl	r5, r9, #456	; 0x1c8
 74c:	55006e51 	strpl	r6, [r0, #-3665]	; 0xfffff1af
 750:	65676173 	strbvs	r6, [r7, #-371]!	; 0xfffffe8d
 754:	6c756146 	ldfvse	f6, [r5], #-280	; 0xfffffee8
 758:	52495f74 	subpl	r5, r9, #116, 30	; 0x1d0
 75c:	72006e51 	andvc	r6, r0, #1296	; 0x510
 760:	6c625f78 	stclvs	15, cr5, [r2], #-480	; 0xfffffe20
 764:	736b636f 	cmnvc	fp, #-1140850687	; 0xbc000001
 768:	00657a69 	rsbeq	r7, r5, r9, ror #20
 76c:	75667065 	strbvc	r7, [r6, #-101]!	; 0xffffff9b
 770:	695f636e 	ldmdbvs	pc, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^	; <UNPREDICTABLE>
 774:	7375006e 	cmnvc	r5, #110	; 0x6e
 778:	70655f62 	rsbvc	r5, r5, r2, ror #30
 77c:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
 780:	6f645f74 	svcvs	0x00645f74
 784:	656c6275 	strbvs	r6, [ip, #-629]!	; 0xfffffd8b
 788:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
 78c:	355f3949 	ldrbcc	r3, [pc, #-2377]	; fffffe4b <BootRAM+0xef705ec>
 790:	5152495f 	cmppl	r2, pc, asr r9
 794:	5653006e 	ldrbpl	r0, [r3], -lr, rrx
 798:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
 79c:	5152495f 	cmppl	r2, pc, asr r9
 7a0:	4349006e 	movtmi	r0, #36974	; 0x906e
 7a4:	53005245 	movwpl	r5, #581	; 0x245
 7a8:	5f324950 	svcpl	0x00324950
 7ac:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 7b0:	42414900 	submi	r4, r1, #0, 18
 7b4:	73750052 	cmnvc	r5, #82	; 0x52
 7b8:	78745f62 	ldmdavc	r4!, {r1, r5, r6, r8, r9, sl, fp, ip, lr}^
 7bc:	6464615f 	strbtvs	r6, [r4], #-351	; 0xfffffea1
 7c0:	4d440072 	stclmi	0, cr0, [r4, #-456]	; 0xfffffe38
 7c4:	435f3141 	cmpmi	pc, #1073741840	; 0x40000010
 7c8:	6e6e6168 	powvsez	f6, f6, #0.0
 7cc:	5f356c65 	svcpl	0x00356c65
 7d0:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 7d4:	41544200 	cmpmi	r4, r0, lsl #4
 7d8:	00454c42 	subeq	r4, r5, r2, asr #24
 7dc:	745f7065 	ldrbvc	r7, [pc], #-101	; 7e4 <__Stack_Size+0x3e4>
 7e0:	00657079 	rsbeq	r7, r5, r9, ror r0
 7e4:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
 7e8:	52495f33 	subpl	r5, r9, #51, 30	; 0xcc
 7ec:	64006e51 	strvs	r6, [r0], #-3665	; 0xfffff1af
 7f0:	695f7269 	ldmdbvs	pc, {r0, r3, r5, r6, r9, ip, sp, lr}^	; <UNPREDICTABLE>
 7f4:	6148006e 	cmpvs	r8, lr, rrx
 7f8:	61466472 	hvcvs	26178	; 0x6642
 7fc:	5f746c75 	svcpl	0x00746c75
 800:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 804:	50534900 	subspl	r4, r3, r0, lsl #18
 808:	73750052 	cmnvc	r5, #82	; 0x52
 80c:	78725f62 	ldmdavc	r2!, {r1, r5, r6, r8, r9, sl, fp, ip, lr}^
 810:	756f635f 	strbvc	r6, [pc, #-863]!	; 4b9 <__Stack_Size+0xb9>
 814:	7200746e 	andvc	r7, r0, #1845493760	; 0x6e000000
 818:	756f6378 	strbvc	r6, [pc, #-888]!	; 4a8 <__Stack_Size+0xa8>
 81c:	4100746e 	tstmi	r0, lr, ror #8
 820:	5f314344 	svcpl	0x00314344
 824:	52495f32 	subpl	r5, r9, #50, 30	; 0xc8
 828:	52006e51 	andpl	r6, r0, #1296	; 0x510
 82c:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
 830:	37444556 	smlsldcc	r4, r4, r6, r5	; <UNPREDICTABLE>
 834:	41535500 	cmpmi	r3, r0, lsl #10
 838:	5f335452 	svcpl	0x00335452
 83c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 840:	4d415400 	cfstrdmi	mvd5, [r1, #-0]
 844:	5f524550 	svcpl	0x00524550
 848:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 84c:	53455200 	movtpl	r5, #20992	; 0x5200
 850:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
 854:	70004344 	andvc	r4, r0, r4, asr #6
 858:	74697261 	strbtvc	r7, [r9], #-609	; 0xfffffd9f
 85c:	6f5f0079 	svcvs	0x005f0079
 860:	78655f6e 	stmdavc	r5!, {r1, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
 864:	615f7469 	cmpvs	pc, r9, ror #8
 868:	00736772 	rsbseq	r6, r3, r2, ror r7
 86c:	7463775f 	strbtvc	r7, [r3], #-1887	; 0xfffff8a1
 870:	5f626d6f 	svcpl	0x00626d6f
 874:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
 878:	725f0065 	subsvc	r0, pc, #101	; 0x65
 87c:	62003834 	andvs	r3, r0, #52, 16	; 0x340000
 880:	72647561 	rsbvc	r7, r4, #406847488	; 0x18400000
 884:	00657461 	rsbeq	r7, r5, r1, ror #8
 888:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
 88c:	72775f31 	rsbsvc	r5, r7, #49, 30	; 0xc4
 890:	00657469 	rsbeq	r7, r5, r9, ror #8
 894:	6769735f 			; <UNDEFINED> instruction: 0x6769735f
 898:	5f6c616e 	svcpl	0x006c616e
 89c:	00667562 	rsbeq	r7, r6, r2, ror #10
 8a0:	5f627375 	svcpl	0x00627375
 8a4:	5f74756f 	svcpl	0x0074756f
 8a8:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 8ac:	626c5f00 	rsbvs	r5, ip, #0, 30
 8b0:	7a697366 	bvc	1a5d650 <__Stack_Size+0x1a5d250>
 8b4:	665f0065 	ldrbvs	r0, [pc], -r5, rrx
 8b8:	7367616c 	cmnvc	r7, #108, 2
 8bc:	6d6e5f00 	stclvs	15, cr5, [lr, #-0]
 8c0:	6f6c6c61 	svcvs	0x006c6c61
 8c4:	4c5f0063 	mrrcmi	0, 6, r0, pc, cr3	; <UNPREDICTABLE>
 8c8:	5f4b434f 	svcpl	0x004b434f
 8cc:	55434552 	strbpl	r4, [r3, #-1362]	; 0xfffffaae
 8d0:	56495352 			; <UNDEFINED> instruction: 0x56495352
 8d4:	00545f45 	subseq	r5, r4, r5, asr #30
 8d8:	736e755f 	cmnvc	lr, #398458880	; 0x17c00000
 8dc:	69636570 	stmdbvs	r3!, {r4, r5, r6, r8, sl, sp, lr}^
 8e0:	64656966 	strbtvs	r6, [r5], #-2406	; 0xfffff69a
 8e4:	636f6c5f 	cmnvs	pc, #24320	; 0x5f00
 8e8:	5f656c61 	svcpl	0x00656c61
 8ec:	6f666e69 	svcvs	0x00666e69
 8f0:	626d5f00 	rsbvs	r5, sp, #0, 30
 8f4:	6e656c72 	mcrvs	12, 3, r6, cr5, cr2, {3}
 8f8:	6174735f 	cmnvs	r4, pc, asr r3
 8fc:	5f006574 	svcpl	0x00006574
 900:	0077656e 	rsbseq	r6, r7, lr, ror #10
 904:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
 908:	0074756f 	rsbseq	r7, r4, pc, ror #10
 90c:	6f70665f 	svcvs	0x0070665f
 910:	00745f73 	rsbseq	r5, r4, r3, ror pc
 914:	2f637273 	svccs	0x00637273
 918:	5f627375 	svcpl	0x00627375
 91c:	73616c63 	cmnvc	r1, #25344	; 0x6300
 920:	64635f73 	strbtvs	r5, [r3], #-3955	; 0xfffff08d
 924:	00632e63 	rsbeq	r2, r3, r3, ror #28
 928:	736e665f 	cmnvc	lr, #99614720	; 0x5f00000
 92c:	6f635f00 	svcvs	0x00635f00
 930:	65696b6f 	strbvs	r6, [r9, #-2927]!	; 0xfffff491
 934:	63646300 	cmnvs	r4, #0, 6
 938:	6e696c5f 	mcrvs	12, 3, r6, cr9, cr15, {2}
 93c:	646f6365 	strbtvs	r6, [pc], #-869	; 944 <__Stack_Size+0x544>
 940:	00676e69 	rsbeq	r6, r7, r9, ror #28
 944:	73626d5f 	cmnvc	r2, #6080	; 0x17c0
 948:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
 94c:	745f5f00 	ldrbvc	r5, [pc], #-3840	; 954 <__Stack_Size+0x554>
 950:	64775f6d 	ldrbtvs	r5, [r7], #-3949	; 0xfffff093
 954:	75007961 	strvc	r7, [r0, #-2401]	; 0xfffff69f
 958:	31747261 	cmncc	r4, r1, ror #4
 95c:	0078725f 	rsbseq	r7, r8, pc, asr r2
 960:	7365725f 	cmnvc	r5, #-268435451	; 0xf0000005
 964:	00746c75 	rsbseq	r6, r4, r5, ror ip
 968:	49465f5f 	stmdbmi	r6, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
 96c:	5f00454c 	svcpl	0x0000454c
 970:	5f6d745f 	svcpl	0x006d745f
 974:	72756f68 	rsbsvc	r6, r5, #104, 30	; 0x1a0
 978:	50544700 	subspl	r4, r4, r0, lsl #14
 97c:	5f5f0052 	svcpl	0x005f0052
 980:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 984:	5f5f0074 	svcpl	0x005f0074
 988:	6d5f6d74 	ldclvs	13, cr6, [pc, #-464]	; 7c0 <__Stack_Size+0x3c0>
 98c:	5f006e69 	svcpl	0x00006e69
 990:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
 994:	725f0066 	subsvc	r0, pc, #102	; 0x66
 998:	34646e61 	strbtcc	r6, [r4], #-3681	; 0xfffff19f
 99c:	725f0038 	subsvc	r0, pc, #56	; 0x38
 9a0:	6c757365 	ldclvs	3, cr7, [r5], #-404	; 0xfffffe6c
 9a4:	006b5f74 	rsbeq	r5, fp, r4, ror pc
 9a8:	5f425355 	svcpl	0x00425355
 9ac:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 9b0:	65446769 	strbvs	r6, [r4, #-1897]	; 0xfffff897
 9b4:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 9b8:	726f7470 	rsbvc	r7, pc, #112, 8	; 0x70000000
 9bc:	73615f00 	cmnvc	r1, #0, 30
 9c0:	6d697463 	cfstrdvs	mvd7, [r9, #-396]!	; 0xfffffe74
 9c4:	75625f65 	strbvc	r5, [r2, #-3941]!	; 0xfffff09b
 9c8:	5f5f0066 	svcpl	0x005f0066
 9cc:	4c494673 	mcrrmi	6, 7, r4, r9, cr3
 9d0:	775f0045 	ldrbvc	r0, [pc, -r5, asr #32]
 9d4:	5f007364 	svcpl	0x00007364
 9d8:	72655f68 	rsbvc	r5, r5, #104, 30	; 0x1a0
 9dc:	006f6e72 	rsbeq	r6, pc, r2, ror lr	; <UNPREDICTABLE>
 9e0:	6565735f 	strbvs	r7, [r5, #-863]!	; 0xfffffca1
 9e4:	755f006b 	ldrbvc	r0, [pc, #-107]	; 981 <__Stack_Size+0x581>
 9e8:	00667562 	rsbeq	r7, r6, r2, ror #10
 9ec:	656d655f 	strbvs	r6, [sp, #-1375]!	; 0xfffffaa1
 9f0:	6e656772 	mcrvs	7, 3, r6, cr5, cr2, {3}
 9f4:	5f007963 	svcpl	0x00007963
 9f8:	5f6d745f 	svcpl	0x006d745f
 9fc:	00636573 	rsbeq	r6, r3, r3, ror r5
 a00:	6d745f5f 	ldclvs	15, cr5, [r4, #-380]!	; 0xfffffe84
 a04:	6164795f 	cmnvs	r4, pc, asr r9
 a08:	695f0079 	ldmdbvs	pc, {r0, r3, r4, r5, r6}^	; <UNPREDICTABLE>
 a0c:	7500636e 	strvc	r6, [r0, #-878]	; 0xfffffc92
 a10:	5f747261 	svcpl	0x00747261
 a14:	5f667562 	svcpl	0x00667562
 a18:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 a1c:	61750065 	cmnvs	r5, r5, rrx
 a20:	625f7472 	subsvs	r7, pc, #1912602624	; 0x72000000
 a24:	725f6675 	subsvc	r6, pc, #122683392	; 0x7500000
 a28:	00646165 	rsbeq	r6, r4, r5, ror #2
 a2c:	73626d5f 	cmnvc	r2, #6080	; 0x17c0
 a30:	776f7472 			; <UNDEFINED> instruction: 0x776f7472
 a34:	735f7363 	cmpvc	pc, #-1946157055	; 0x8c000001
 a38:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
 a3c:	41535500 	cmpmi	r3, r0, lsl #10
 a40:	545f5452 	ldrbpl	r5, [pc], #-1106	; a48 <__Stack_Size+0x648>
 a44:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
 a48:	5f006665 	svcpl	0x00006665
 a4c:	6c61765f 	stclvs	6, cr7, [r1], #-380	; 0xfffffe84
 a50:	5f006575 	svcpl	0x00006575
 a54:	00733570 	rsbseq	r3, r3, r0, ror r5
 a58:	6c626d5f 	stclvs	13, cr6, [r2], #-380	; 0xfffffe84
 a5c:	735f6e65 	cmpvc	pc, #1616	; 0x650
 a60:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
 a64:	745f5f00 	ldrbvc	r5, [pc], #-3840	; a6c <__Stack_Size+0x66c>
 a68:	646d5f6d 	strbtvs	r5, [sp], #-3949	; 0xfffff093
 a6c:	5f007961 	svcpl	0x00007961
 a70:	5f676973 	svcpl	0x00676973
 a74:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 a78:	626d5f00 	rsbvs	r5, sp, #0, 30
 a7c:	776f7472 			; <UNDEFINED> instruction: 0x776f7472
 a80:	74735f63 	ldrbtvc	r5, [r3], #-3939	; 0xfffff09d
 a84:	00657461 	rsbeq	r7, r5, r1, ror #8
 a88:	6574615f 	ldrbvs	r6, [r4, #-351]!	; 0xfffffea1
 a8c:	30746978 	rsbscc	r6, r4, r8, ror r9
 a90:	6c665f00 	stclvs	15, cr5, [r6], #-0
 a94:	5f6b636f 	svcpl	0x006b636f
 a98:	5f5f0074 	svcpl	0x005f0074
 a9c:	00686377 	rsbeq	r6, r8, r7, ror r3
 aa0:	626f695f 	rsbvs	r6, pc, #1556480	; 0x17c000
 aa4:	635f0073 	cmpvs	pc, #115	; 0x73
 aa8:	65736f6c 	ldrbvs	r6, [r3, #-3948]!	; 0xfffff094
 aac:	735f5f00 	cmpvc	pc, #0, 30
 ab0:	69646964 	stmdbvs	r4!, {r2, r5, r6, r8, fp, sp, lr}^
 ab4:	0074696e 	rsbseq	r6, r4, lr, ror #18
 ab8:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
 abc:	5f006e69 	svcpl	0x00006e69
 ac0:	6d6d6167 	stfvse	f6, [sp, #-412]!	; 0xfffffe64
 ac4:	69735f61 	ldmdbvs	r3!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
 ac8:	61676e67 	cmnvs	r7, r7, ror #28
 acc:	625f006d 	subsvs	r0, pc, #109	; 0x6d
 ad0:	00657361 	rsbeq	r7, r5, r1, ror #6
 ad4:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
 ad8:	495f3154 	ldmdbmi	pc, {r2, r4, r6, r8, ip, sp}^	; <UNPREDICTABLE>
 adc:	61485152 	cmpvs	r8, r2, asr r1
 ae0:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
 ae4:	665f0072 			; <UNDEFINED> instruction: 0x665f0072
 ae8:	6c656572 	cfstr64vs	mvdx6, [r5], #-456	; 0xfffffe38
 aec:	00747369 	rsbseq	r7, r4, r9, ror #6
 af0:	6c756d5f 	ldclvs	13, cr6, [r5], #-380	; 0xfffffe84
 af4:	5f5f0074 	svcpl	0x005f0074
 af8:	6e6f4c55 	mcrvs	12, 3, r4, cr15, cr5, {2}
 afc:	775f0067 	ldrbvc	r0, [pc, -r7, rrx]
 b00:	6f747263 	svcvs	0x00747263
 b04:	735f626d 	cmpvc	pc, #-805306362	; 0xd0000006
 b08:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
 b0c:	69665f00 	stmdbvs	r6!, {r8, r9, sl, fp, ip, lr}^
 b10:	5f00656c 	svcpl	0x0000656c
 b14:	656c635f 	strbvs	r6, [ip, #-863]!	; 0xfffffca1
 b18:	70756e61 	rsbsvc	r6, r5, r1, ror #28
 b1c:	626d5f00 	rsbvs	r5, sp, #0, 30
 b20:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
 b24:	00745f65 	rsbseq	r5, r4, r5, ror #30
 b28:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
 b2c:	756f6420 	strbvc	r6, [pc, #-1056]!	; 714 <__Stack_Size+0x314>
 b30:	00656c62 	rsbeq	r6, r5, r2, ror #24
 b34:	6d745f5f 	ldclvs	15, cr5, [r4, #-380]!	; 0xfffffe84
 b38:	6473695f 	ldrbtvs	r6, [r3], #-2399	; 0xfffff6a1
 b3c:	55007473 	strpl	r7, [r0, #-1139]	; 0xfffffb8d
 b40:	31545241 	cmpcc	r4, r1, asr #4
 b44:	6165725f 	cmnvs	r5, pc, asr r2
 b48:	775f0064 	ldrbvc	r0, [pc, -r4, rrx]
 b4c:	74727363 	ldrbtvc	r7, [r2], #-867	; 0xfffffc9d
 b50:	73626d6f 	cmnvc	r2, #7104	; 0x1bc0
 b54:	6174735f 	cmnvs	r4, pc, asr r3
 b58:	5f006574 	svcpl	0x00006574
 b5c:	00646e69 	rsbeq	r6, r4, r9, ror #28
 b60:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
 b64:	65675f31 	strbvs	r5, [r7, #-3889]!	; 0xfffff0cf
 b68:	5f007374 	svcpl	0x00007374
 b6c:	5f6d745f 	svcpl	0x006d745f
 b70:	006e6f6d 	rsbeq	r6, lr, sp, ror #30
 b74:	62735f5f 	rsbsvs	r5, r3, #380	; 0x17c
 b78:	5f006675 	svcpl	0x00006675
 b7c:	5f6d745f 	svcpl	0x006d745f
 b80:	72616579 	rsbvc	r6, r1, #507510784	; 0x1e400000
 b84:	74615f00 	strbtvc	r5, [r1], #-3840	; 0xfffff100
 b88:	74697865 	strbtvc	r7, [r9], #-2149	; 0xfffff79b
 b8c:	69425f00 	stmdbvs	r2, {r8, r9, sl, fp, ip, lr}^
 b90:	746e6967 	strbtvc	r6, [lr], #-2407	; 0xfffff699
 b94:	74536200 	ldrbvc	r6, [r3], #-512	; 0xfffffe00
 b98:	676e6972 			; <UNDEFINED> instruction: 0x676e6972
 b9c:	735f5f00 	cmpvc	pc, #0, 30
 ba0:	735f0066 	cmpvc	pc, #102	; 0x66
 ba4:	006e6769 	rsbeq	r6, lr, r9, ror #14
 ba8:	7461645f 	strbtvc	r6, [r1], #-1119	; 0xfffffba1
 bac:	5f5f0061 	svcpl	0x005f0061
 bb0:	62686377 	rsbvs	r6, r8, #-603979775	; 0xdc000001
 bb4:	6c675f00 	stclvs	15, cr5, [r7], #-0
 bb8:	6c61626f 	sfmvs	f6, 2, [r1], #-444	; 0xfffffe44
 bbc:	706d695f 	rsbvc	r6, sp, pc, asr r9
 bc0:	5f657275 	svcpl	0x00657275
 bc4:	00727470 	rsbseq	r7, r2, r0, ror r4
 bc8:	66666f5f 	uqsaxvs	r6, r6, pc	; <UNPREDICTABLE>
 bcc:	00746573 	rsbseq	r6, r4, r3, ror r5
 bd0:	5f425355 	svcpl	0x00425355
 bd4:	69727453 	ldmdbvs	r2!, {r0, r1, r4, r6, sl, ip, sp, lr}^
 bd8:	6553676e 	ldrbvs	r6, [r3, #-1902]	; 0xfffff892
 bdc:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
 be0:	63736544 	cmnvs	r3, #68, 10	; 0x11000000
 be4:	74706972 	ldrbtvc	r6, [r0], #-2418	; 0xfffff68e
 be8:	5f00726f 	svcpl	0x0000726f
 bec:	61636f6c 	cmnvs	r3, ip, ror #30
 bf0:	6d69746c 	cfstrdvs	mvd7, [r9, #-432]!	; 0xfffffe50
 bf4:	75625f65 	strbvc	r5, [r2, #-3941]!	; 0xfffff09b
 bf8:	53550066 	cmppl	r5, #102	; 0x66
 bfc:	74535f42 	ldrbvc	r5, [r3], #-3906	; 0xfffff0be
 c00:	676e6972 			; <UNDEFINED> instruction: 0x676e6972
 c04:	676e614c 	strbvs	r6, [lr, -ip, asr #2]!
 c08:	63736544 	cmnvs	r3, #68, 10	; 0x11000000
 c0c:	74706972 	ldrbtvc	r6, [r0], #-2418	; 0xfffff68e
 c10:	5f00726f 	svcpl	0x0000726f
 c14:	73756e75 	cmnvc	r5, #1872	; 0x750
 c18:	5f006465 	svcpl	0x00006465
 c1c:	6c747663 	ldclvs	6, cr7, [r4], #-396	; 0xfffffe74
 c20:	5f006e65 	svcpl	0x00006e65
 c24:	7778616d 	ldrbvc	r6, [r8, -sp, ror #2]!
 c28:	5f007364 	svcpl	0x00007364
 c2c:	6134366c 	teqvs	r4, ip, ror #12
 c30:	6675625f 			; <UNDEFINED> instruction: 0x6675625f
 c34:	6c625f00 	stclvs	15, cr5, [r2], #-0
 c38:	7a69736b 	bvc	1a5d9ec <__Stack_Size+0x1a5d5ec>
 c3c:	5f5f0065 	svcpl	0x005f0065
 c40:	75006d74 	strvc	r6, [r0, #-3444]	; 0xfffff28c
 c44:	5f747261 	svcpl	0x00747261
 c48:	5f667562 	svcpl	0x00667562
 c4c:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
 c50:	6f6c5f00 	svcvs	0x006c5f00
 c54:	55006b63 	strpl	r6, [r0, #-2915]	; 0xfffff49d
 c58:	445f4253 	ldrbmi	r4, [pc], #-595	; c60 <__Stack_Size+0x860>
 c5c:	63697665 	cmnvs	r9, #105906176	; 0x6500000
 c60:	61755165 	cmnvs	r5, r5, ror #2
 c64:	6966696c 	stmdbvs	r6!, {r2, r3, r5, r6, r8, fp, sp, lr}^
 c68:	65447265 	strbvs	r7, [r4, #-613]	; 0xfffffd9b
 c6c:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 c70:	726f7470 	rsbvc	r7, pc, #112, 8	; 0x70000000
 c74:	696e5f00 	stmdbvs	lr!, {r8, r9, sl, fp, ip, lr}^
 c78:	0073626f 	rsbseq	r6, r3, pc, ror #4
 c7c:	67616c66 	strbvs	r6, [r1, -r6, ror #24]!
 c80:	73645f00 	cmnvc	r4, #0, 30
 c84:	61685f6f 	cmnvs	r8, pc, ror #30
 c88:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
 c8c:	76635f00 	strbtvc	r5, [r3], -r0, lsl #30
 c90:	66756274 			; <UNDEFINED> instruction: 0x66756274
 c94:	65675f00 	strbvs	r5, [r7, #-3840]!	; 0xfffff100
 c98:	74616474 	strbtvc	r6, [r1], #-1140	; 0xfffffb8c
 c9c:	72655f65 	rsbvc	r5, r5, #404	; 0x194
 ca0:	6f770072 	svcvs	0x00770072
 ca4:	69736472 	ldmdbvs	r3!, {r1, r4, r5, r6, sl, sp, lr}^
 ca8:	5500657a 	strpl	r6, [r0, #-1402]	; 0xfffffa86
 cac:	445f4253 	ldrbmi	r4, [pc], #-595	; cb4 <__Stack_Size+0x8b4>
 cb0:	63697665 	cmnvs	r9, #105906176	; 0x6500000
 cb4:	73654465 	cmnvc	r5, #1694498816	; 0x65000000
 cb8:	70697263 	rsbvc	r7, r9, r3, ror #4
 cbc:	00726f74 	rsbseq	r6, r2, r4, ror pc
 cc0:	6464615f 	strbtvs	r6, [r4], #-351	; 0xfffffea1
 cc4:	65446200 	strbvs	r6, [r4, #-512]	; 0xfffffe00
 cc8:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 ccc:	726f7470 	rsbvc	r7, pc, #112, 8	; 0x70000000
 cd0:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
 cd4:	42535500 	subsmi	r5, r3, #0, 10
 cd8:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
 cdc:	4d676e69 	stclmi	14, cr6, [r7, #-420]!	; 0xfffffe5c
 ce0:	66756e61 	ldrbtvs	r6, [r5], -r1, ror #28
 ce4:	75746361 	ldrbvc	r6, [r4, #-865]!	; 0xfffffc9f
 ce8:	676e6972 			; <UNDEFINED> instruction: 0x676e6972
 cec:	63736544 	cmnvs	r3, #68, 10	; 0x11000000
 cf0:	74706972 	ldrbtvc	r6, [r0], #-2418	; 0xfffff68e
 cf4:	5f00726f 	svcpl	0x0000726f
 cf8:	65756c67 	ldrbvs	r6, [r5, #-3175]!	; 0xfffff399
 cfc:	735f5f00 	cmpvc	pc, #0, 30
 d00:	65756c67 	ldrbvs	r6, [r5, #-3175]!	; 0xfffff399
 d04:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
 d08:	6b6f7472 	blvs	1bdded8 <__Stack_Size+0x1bddad8>
 d0c:	73616c5f 	cmnvc	r1, #24320	; 0x5f00
 d10:	6d5f0074 	ldclvs	0, cr0, [pc, #-464]	; b48 <__Stack_Size+0x748>
 d14:	776f7462 	strbvc	r7, [pc, -r2, ror #8]!
 d18:	74735f63 	ldrbtvc	r5, [r3], #-3939	; 0xfffff09d
 d1c:	00657461 	rsbeq	r7, r5, r1, ror #8
 d20:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
 d24:	78745f31 	ldmdavc	r4!, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
 d28:	6f6c5f00 	svcvs	0x006c5f00
 d2c:	656c6163 	strbvs	r6, [ip, #-355]!	; 0xfffffe9d
 d30:	72617500 	rsbvc	r7, r1, #0, 10
 d34:	75625f74 	strbvc	r5, [r2, #-3956]!	; 0xfffff08c
 d38:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
 d3c:	6e665f00 	cdpvs	15, 6, cr5, cr6, cr0, {0}
 d40:	73677261 	cmnvc	r7, #268435462	; 0x10000006
 d44:	52415500 	subpl	r5, r1, #0, 10
 d48:	705f3154 	subsvc	r3, pc, r4, asr r1	; <UNPREDICTABLE>
 d4c:	00737475 	rsbseq	r7, r3, r5, ror r4
 d50:	6565725f 	strbvs	r7, [r5, #-607]!	; 0xfffffda1
 d54:	5500746e 	strpl	r7, [r0, #-1134]	; 0xfffffb92
 d58:	535f4253 	cmppl	pc, #805306373	; 0x30000005
 d5c:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
 d60:	6f725067 	svcvs	0x00725067
 d64:	73654464 	cmnvc	r5, #100, 8	; 0x64000000
 d68:	70697263 	rsbvc	r7, r9, r3, ror #4
 d6c:	00726f74 	rsbseq	r6, r2, r4, ror pc
 d70:	746e665f 	strbtvc	r6, [lr], #-1631	; 0xfffff9a1
 d74:	73657079 	cmnvc	r5, #121	; 0x79
 d78:	666f5f00 	strbtvs	r5, [pc], -r0, lsl #30
 d7c:	00745f66 	rsbseq	r5, r4, r6, ror #30
 d80:	75626e5f 	strbvc	r6, [r2, #-3679]!	; 0xfffff1a1
 d84:	755f0066 	ldrbvc	r0, [pc, #-102]	; d26 <__Stack_Size+0x926>
 d88:	6573756e 	ldrbvs	r7, [r3, #-1390]!	; 0xfffffa92
 d8c:	61725f64 	cmnvs	r2, r4, ror #30
 d90:	6200646e 	andvs	r6, r0, #1845493760	; 0x6e000000
 d94:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
 d98:	5f006874 	svcpl	0x00006874
 d9c:	67616c66 	strbvs	r6, [r1, -r6, ror #24]!
 da0:	5f003273 	svcpl	0x00003273
 da4:	635f7369 	cmpvs	pc, #-1543503871	; 0xa4000001
 da8:	5f006178 	svcpl	0x00006178
 dac:	64656573 	strbtvs	r6, [r5], #-1395	; 0xfffffa8d
 db0:	61725f00 	cmnvs	r2, r0, lsl #30
 db4:	6e5f646e 	cdpvs	4, 5, cr6, cr15, cr14, {3}
 db8:	00747865 	rsbseq	r7, r4, r5, ror #16
 dbc:	6f6c5f5f 	svcvs	0x006c5f5f
 dc0:	656c6163 	strbvs	r6, [ip, #-355]!	; 0xfffffe9d
 dc4:	5f00745f 	svcpl	0x0000745f
 dc8:	65647473 	strbvs	r7, [r4, #-1139]!	; 0xfffffb8d
 dcc:	77007272 	smlsdxvc	r0, r2, r2, r7
 dd0:	5f746e69 	svcpl	0x00746e69
 dd4:	74730074 	ldrbtvc	r0, [r3], #-116	; 0xffffff8c
 dd8:	6962706f 	stmdbvs	r2!, {r0, r1, r2, r3, r5, r6, ip, sp, lr}^
 ddc:	Address 0x0000000000000ddc is out of bounds.


Disassembly of section .debug_loc:

00000000 <.debug_loc>:
       0:	08000c50 	stmdaeq	r0, {r4, r6, sl, fp}
       4:	08000c52 	stmdaeq	r0, {r1, r4, r6, sl, fp}
       8:	007d0002 	rsbseq	r0, sp, r2
       c:	08000c52 	stmdaeq	r0, {r1, r4, r6, sl, fp}
      10:	08000c9c 	stmdaeq	r0, {r2, r3, r4, r7, sl, fp}
      14:	087d0002 	ldmdaeq	sp!, {r1}^
	...
      24:	08000c64 	stmdaeq	r0, {r2, r5, r6, sl, fp}
      28:	08000c70 	stmdaeq	r0, {r4, r5, r6, sl, fp}
      2c:	70520001 	subsvc	r0, r2, r1
      30:	7a08000c 	bvc	200068 <__Stack_Size+0x1ffc68>
      34:	0208000c 	andeq	r0, r8, #12
      38:	00007300 	andeq	r7, r0, r0, lsl #6
	...
      44:	70000000 	andvc	r0, r0, r0
      48:	7c08000c 	stcvc	0, cr0, [r8], {12}
      4c:	0108000c 	tsteq	r8, ip
      50:	0c7c5200 	lfmeq	f5, 2, [ip], #-0
      54:	0c860800 	stceq	8, cr0, [r6], {0}
      58:	00020800 	andeq	r0, r2, r0, lsl #16
      5c:	00000073 	andeq	r0, r0, r3, ror r0
	...
      68:	08000c7c 	stmdaeq	r0, {r2, r3, r4, r5, r6, sl, fp}
      6c:	08000c89 	stmdaeq	r0, {r0, r3, r7, sl, fp}
      70:	00520001 	subseq	r0, r2, r1
	...
      7c:	00000202 	andeq	r0, r0, r2, lsl #4
      80:	0001d000 	andeq	sp, r1, r0
      84:	0001d008 	andeq	sp, r1, r8
      88:	50000108 	andpl	r0, r0, r8, lsl #2
      8c:	080001d0 	stmdaeq	r0, {r4, r6, r7, r8}
      90:	080001d4 	stmdaeq	r0, {r2, r4, r6, r7, r8}
      94:	d4500001 	ldrble	r0, [r0], #-1
      98:	dc080001 	stcle	0, cr0, [r8], {1}
      9c:	03080001 	movweq	r0, #32769	; 0x8001
      a0:	9f017000 	svcls	0x00017000
	...
      ac:	00000001 	andeq	r0, r0, r1
      b0:	00000000 	andeq	r0, r0, r0
      b4:	013a0000 	teqeq	sl, r0
      b8:	013e0800 	teqeq	lr, r0, lsl #16
      bc:	00020800 	andeq	r0, r2, r0, lsl #16
      c0:	013e9f30 	teqeq	lr, r0, lsr pc
      c4:	01440800 	cmpeq	r4, r0, lsl #16
      c8:	00070800 	andeq	r0, r7, r0, lsl #16
      cc:	720fff0a 	andvc	pc, pc, #10, 30	; 0x28
      d0:	449f1c00 	ldrmi	r1, [pc], #3072	; d8 <_Minimum_Stack_Size-0x28>
      d4:	46080001 	strmi	r0, [r8], -r1
      d8:	07080001 	streq	r0, [r8, -r1]
      dc:	10000a00 	andne	r0, r0, r0, lsl #20
      e0:	9f1c0072 	svcls	0x001c0072
      e4:	08000146 	stmdaeq	r0, {r1, r2, r6, r8}
      e8:	0800014c 	stmdaeq	r0, {r2, r3, r6, r8}
      ec:	ff0a0007 			; <UNDEFINED> instruction: 0xff0a0007
      f0:	1c00720f 	sfmne	f7, 4, [r0], {15}
      f4:	00014c9f 	muleq	r1, pc, ip	; <UNPREDICTABLE>
      f8:	0001cc08 	andeq	ip, r1, r8, lsl #24
      fc:	0a000408 	beq	1124 <__Stack_Size+0xd24>
     100:	009f1fff 			; <UNDEFINED> instruction: 0x009f1fff
	...
     10c:	01010000 	mrseq	r0, (UNDEF: 1)
     110:	00000000 	andeq	r0, r0, r0
     114:	01000000 	mrseq	r0, (UNDEF: 0)
     118:	00000000 	andeq	r0, r0, r0
     11c:	4c000000 	stcmi	0, cr0, [r0], {-0}
     120:	50080001 	andpl	r0, r8, r1
     124:	07080001 	streq	r0, [r8, -r1]
     128:	0fff0a00 	svceq	0x00ff0a00
     12c:	9f1c0072 	svcls	0x001c0072
     130:	08000150 	stmdaeq	r0, {r4, r6, r8}
     134:	0800015c 	stmdaeq	r0, {r2, r3, r4, r6, r8}
     138:	ff0a0004 			; <UNDEFINED> instruction: 0xff0a0004
     13c:	015c9f1f 	cmpeq	ip, pc, lsl pc
     140:	01600800 	cmneq	r0, r0, lsl #16
     144:	00020800 	andeq	r0, r2, r0, lsl #16
     148:	01609f30 	cmneq	r0, r0, lsr pc
     14c:	016a0800 	cmneq	sl, r0, lsl #16
     150:	00070800 	andeq	r0, r7, r0, lsl #16
     154:	720fff0a 	andvc	pc, pc, #10, 30	; 0x28
     158:	6a9f1c00 	bvs	fe7c7160 <BootRAM+0xd737901>
     15c:	6c080001 	stcvs	0, cr0, [r8], {1}
     160:	07080001 	streq	r0, [r8, -r1]
     164:	10000a00 	andne	r0, r0, r0, lsl #20
     168:	9f1c0072 	svcls	0x001c0072
     16c:	0800016c 	stmdaeq	r0, {r2, r3, r5, r6, r8}
     170:	08000172 	stmdaeq	r0, {r1, r4, r5, r6, r8}
     174:	ff0a0007 			; <UNDEFINED> instruction: 0xff0a0007
     178:	1c00720f 	sfmne	f7, 4, [r0], {15}
     17c:	0001ac9f 	muleq	r1, pc, ip	; <UNPREDICTABLE>
     180:	0001b008 	andeq	fp, r1, r8
     184:	30000208 	andcc	r0, r0, r8, lsl #4
     188:	0001b09f 	muleq	r1, pc, r0	; <UNPREDICTABLE>
     18c:	0001b608 	andeq	fp, r1, r8, lsl #12
     190:	0a000708 	beq	1db8 <__Stack_Size+0x19b8>
     194:	00720fff 	ldrshteq	r0, [r2], #-255	; 0xffffff01
     198:	01b69f1c 			; <UNDEFINED> instruction: 0x01b69f1c
     19c:	01b80800 			; <UNDEFINED> instruction: 0x01b80800
     1a0:	00070800 	andeq	r0, r7, r0, lsl #16
     1a4:	7210000a 	andsvc	r0, r0, #10
     1a8:	b89f1c00 	ldmlt	pc, {sl, fp, ip}	; <UNPREDICTABLE>
     1ac:	cc080001 	stcgt	0, cr0, [r8], {1}
     1b0:	07080001 	streq	r0, [r8, -r1]
     1b4:	0fff0a00 	svceq	0x00ff0a00
     1b8:	9f1c0072 	svcls	0x001c0072
	...
     1c8:	01000000 	mrseq	r0, (UNDEF: 0)
     1cc:	03020201 	movweq	r0, #8705	; 0x2201
     1d0:	00050503 	andeq	r0, r5, r3, lsl #10
	...
     1dc:	0800014c 	stmdaeq	r0, {r2, r3, r6, r8}
     1e0:	08000150 	stmdaeq	r0, {r4, r6, r8}
     1e4:	04730002 	ldrbteq	r0, [r3], #-2
     1e8:	08000152 	stmdaeq	r0, {r1, r4, r6, r8}
     1ec:	08000160 	stmdaeq	r0, {r5, r6, r8}
     1f0:	60520001 	subsvs	r0, r2, r1
     1f4:	72080001 	andvc	r0, r8, #1
     1f8:	02080001 	andeq	r0, r8, #1
     1fc:	96047300 	strls	r7, [r4], -r0, lsl #6
     200:	96080001 	strls	r0, [r8], -r1
     204:	01080001 	tsteq	r8, r1
     208:	01965100 	orrseq	r5, r6, r0, lsl #2
     20c:	01960800 	orrseq	r0, r6, r0, lsl #16
     210:	00090800 	andeq	r0, r9, r0, lsl #16
     214:	ff110071 			; <UNDEFINED> instruction: 0xff110071
     218:	1a7e8bff 	bne	1fa321c <__Stack_Size+0x1fa2e1c>
     21c:	0001969f 	muleq	r1, pc, r6	; <UNPREDICTABLE>
     220:	00019608 	andeq	r9, r1, r8, lsl #12
     224:	71000d08 	tstvc	r0, r8, lsl #26
     228:	ffff1100 			; <UNDEFINED> instruction: 0xffff1100
     22c:	4d1a7e8b 	ldcmi	14, cr7, [sl, #-556]	; 0xfffffdd4
     230:	9f212440 	svcls	0x00212440
     234:	08000196 	stmdaeq	r0, {r1, r2, r4, r7, r8}
     238:	08000196 	stmdaeq	r0, {r1, r2, r4, r7, r8}
     23c:	0071000d 	rsbseq	r0, r1, sp
     240:	8bfe8f11 	blhi	fffa3e8c <BootRAM+0xef1462d>
     244:	404d1a7e 	submi	r1, sp, lr, ror sl
     248:	969f2124 	ldrls	r2, [pc], r4, lsr #2
     24c:	9a080001 	bls	200258 <__Stack_Size+0x1ffe58>
     250:	0d080001 	stceq	0, cr0, [r8, #-4]
     254:	11007100 	mrsne	r7, (UNDEF: 16)
     258:	7e8b8e8f 	cdpvc	14, 8, cr8, cr11, cr15, {4}
     25c:	24404d1a 	strbcs	r4, [r0], #-3354	; 0xfffff2e6
     260:	019a9f21 	orrseq	r9, sl, r1, lsr #30
     264:	019e0800 	orrseq	r0, lr, r0, lsl #16
     268:	00070800 	andeq	r0, r7, r0, lsl #16
     26c:	404d0072 	submi	r0, sp, r2, ror r0
     270:	9e9f2124 	fmllsep	f2, f7, f4
     274:	a6080001 	strge	r0, [r8], -r1
     278:	01080001 	tsteq	r8, r1
     27c:	01a65200 			; <UNDEFINED> instruction: 0x01a65200
     280:	01ac0800 			; <UNDEFINED> instruction: 0x01ac0800
     284:	00020800 	andeq	r0, r2, r0, lsl #16
     288:	01ac0473 			; <UNDEFINED> instruction: 0x01ac0473
     28c:	01b00800 	lslseq	r0, r0, #16
     290:	000f0800 	andeq	r0, pc, r0, lsl #16
     294:	8f110071 	svchi	0x00110071
     298:	1a7e8b80 	bne	1fa30a0 <__Stack_Size+0x1fa2ca0>
     29c:	1d04000c 	stcne	0, cr0, [r4, #-48]	; 0xffffffd0
     2a0:	009f2100 	addseq	r2, pc, r0, lsl #2
     2a4:	00000000 	andeq	r0, r0, r0
     2a8:	b4000000 	strlt	r0, [r0], #-0
     2ac:	b6000004 	strlt	r0, [r0], -r4
     2b0:	02000004 	andeq	r0, r0, #4
     2b4:	b6007d00 	strlt	r7, [r0], -r0, lsl #26
     2b8:	0e000004 	cdpeq	0, 0, cr0, cr0, cr4, {0}
     2bc:	02000005 	andeq	r0, r0, #5
     2c0:	000c7d00 	andeq	r7, ip, r0, lsl #26
	...
     2cc:	b4000000 	strlt	r0, [r0], #-0
     2d0:	c4000004 	strgt	r0, [r0], #-4
     2d4:	01000004 	tsteq	r0, r4
     2d8:	04c45000 	strbeq	r5, [r4], #0
     2dc:	050e0000 	streq	r0, [lr, #-0]
     2e0:	00040000 	andeq	r0, r4, r0
     2e4:	9f5001f3 	svcls	0x005001f3
	...
     2f4:	04b40000 	ldrteq	r0, [r4], #0
     2f8:	04dc0000 	ldrbeq	r0, [ip], #0
     2fc:	00010000 	andeq	r0, r1, r0
     300:	0004dc51 	andeq	sp, r4, r1, asr ip
     304:	0004e000 	andeq	lr, r4, r0
     308:	71000300 	mrsvc	r0, LR_irq
     30c:	04e09f02 	strbteq	r9, [r0], #3842	; 0xf02
     310:	050e0000 	streq	r0, [lr, #-0]
     314:	00040000 	andeq	r0, r4, r0
     318:	9f5101f3 	svcls	0x005101f3
	...
     328:	000004c0 	andeq	r0, r0, r0, asr #9
     32c:	000004cc 	andeq	r0, r0, ip, asr #9
     330:	cc520001 	mrrcgt	0, 0, r0, r2, cr1
     334:	ee000004 	cdp	0, 0, cr0, cr0, cr4, {0}
     338:	0b000004 	bleq	350 <_Minimum_Stack_Size+0x250>
     33c:	33007300 	movwcc	r7, #768	; 0x300
     340:	c0802324 	addgt	r2, r0, r4, lsr #6
     344:	9f048081 	svcls	0x00048081
	...
     350:	04c80000 	strbeq	r0, [r8], #0
     354:	050e0000 	streq	r0, [lr, #-0]
     358:	00010000 	andeq	r0, r1, r0
     35c:	00000050 	andeq	r0, r0, r0, asr r0
     360:	00000000 	andeq	r0, r0, r0
     364:	00000100 	andeq	r0, r0, r0, lsl #2
     368:	ca010000 	bgt	40370 <__Stack_Size+0x3ff70>
     36c:	da000004 	ble	384 <_Minimum_Stack_Size+0x284>
     370:	05000004 	streq	r0, [r0, #-4]
     374:	31017000 	mrscc	r7, (UNDEF: 1)
     378:	04da9f26 	ldrbeq	r9, [sl], #3878	; 0xf26
     37c:	04e00000 	strbteq	r0, [r0], #0
     380:	00010000 	andeq	r0, r1, r0
     384:	0004e054 	andeq	lr, r4, r4, asr r0
     388:	00050c00 	andeq	r0, r5, r0, lsl #24
     38c:	70000500 	andvc	r0, r0, r0, lsl #10
     390:	9f263101 	svcls	0x00263101
	...
     3a0:	04d80000 	ldrbeq	r0, [r8], #0
     3a4:	04e40000 	strbteq	r0, [r4], #0
     3a8:	00010000 	andeq	r0, r1, r0
     3ac:	0004e452 	andeq	lr, r4, r2, asr r4
     3b0:	0004ea00 	andeq	lr, r4, r0, lsl #20
     3b4:	72000300 	andvc	r0, r0, #0, 6
     3b8:	04ea9f7c 	strbteq	r9, [sl], #3964	; 0xf7c
     3bc:	04fa0000 	ldrbteq	r0, [sl], #0
     3c0:	00010000 	andeq	r0, r1, r0
     3c4:	00000052 	andeq	r0, r0, r2, asr r0
     3c8:	00000000 	andeq	r0, r0, r0
     3cc:	d8000200 	stmdale	r0, {r9}
     3d0:	e0000004 	and	r0, r0, r4
     3d4:	02000004 	andeq	r0, r0, #4
     3d8:	009f3000 	addseq	r3, pc, r0
     3dc:	00000000 	andeq	r0, r0, r0
     3e0:	04000000 	streq	r0, [r0], #-0
     3e4:	06000004 	streq	r0, [r0], -r4
     3e8:	02000004 	andeq	r0, r0, #4
     3ec:	06007d00 	streq	r7, [r0], -r0, lsl #26
     3f0:	58000004 	stmdapl	r0, {r2}
     3f4:	02000004 	andeq	r0, r0, #4
     3f8:	00147d00 	andseq	r7, r4, r0, lsl #26
	...
     408:	00040400 	andeq	r0, r4, r0, lsl #8
     40c:	00042a00 	andeq	r2, r4, r0, lsl #20
     410:	50000100 	andpl	r0, r0, r0, lsl #2
     414:	0000042a 	andeq	r0, r0, sl, lsr #8
     418:	0000044c 	andeq	r0, r0, ip, asr #8
     41c:	01f30004 	mvnseq	r0, r4
     420:	044c9f50 	strbeq	r9, [ip], #-3920	; 0xfffff0b0
     424:	04580000 	ldrbeq	r0, [r8], #-0
     428:	00010000 	andeq	r0, r1, r0
     42c:	00000050 	andeq	r0, r0, r0, asr r0
     430:	00000000 	andeq	r0, r0, r0
     434:	12000000 	andne	r0, r0, #0
     438:	58000004 	stmdapl	r0, {r2}
     43c:	01000004 	tsteq	r0, r4
     440:	00005400 	andeq	r5, r0, r0, lsl #8
	...
     44c:	00000420 	andeq	r0, r0, r0, lsr #8
     450:	00000458 	andeq	r0, r0, r8, asr r4
     454:	00560001 	subseq	r0, r6, r1
     458:	00000000 	andeq	r0, r0, r0
     45c:	01000000 	mrseq	r0, (UNDEF: 0)
     460:	00042000 	andeq	r2, r4, r0
     464:	00045800 	andeq	r5, r4, r0, lsl #16
     468:	51000100 	mrspl	r0, (UNDEF: 16)
	...
     474:	00020200 	andeq	r0, r2, r0, lsl #4
     478:	04220000 	strteq	r0, [r2], #-0
     47c:	04220000 	strteq	r0, [r2], #-0
     480:	00010000 	andeq	r0, r1, r0
     484:	00042253 	andeq	r2, r4, r3, asr r2
     488:	00043800 	andeq	r3, r4, r0, lsl #16
     48c:	75000800 	strvc	r0, [r0, #-2048]	; 0xfffff800
     490:	73243200 			; <UNDEFINED> instruction: 0x73243200
     494:	4c9f2200 	lfmmi	f2, 4, [pc], {0}
     498:	54000004 	strpl	r0, [r0], #-4
     49c:	08000004 	stmdaeq	r0, {r2}
     4a0:	32007500 	andcc	r7, r0, #0, 10
     4a4:	22007324 	andcs	r7, r0, #36, 6	; 0x90000000
     4a8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     4ac:	00000000 	andeq	r0, r0, r0
     4b0:	00000200 	andeq	r0, r0, r0, lsl #4
     4b4:	00042200 	andeq	r2, r4, r0, lsl #4
     4b8:	00045400 	andeq	r5, r4, r0, lsl #8
     4bc:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
     4c0:	00000454 	andeq	r0, r0, r4, asr r4
     4c4:	00000456 	andeq	r0, r0, r6, asr r4
     4c8:	01750003 	cmneq	r5, r3
     4cc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     4d0:	00000000 	andeq	r0, r0, r0
     4d4:	0002dc00 	andeq	sp, r2, r0, lsl #24
     4d8:	0002de00 	andeq	sp, r2, r0, lsl #28
     4dc:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     4e0:	0002de00 	andeq	sp, r2, r0, lsl #28
     4e4:	00040400 	andeq	r0, r4, r0, lsl #8
     4e8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     4ec:	00000010 	andeq	r0, r0, r0, lsl r0
     4f0:	00000000 	andeq	r0, r0, r0
     4f4:	00000200 	andeq	r0, r0, r0, lsl #4
     4f8:	00030400 	andeq	r0, r3, r0, lsl #8
     4fc:	00030800 	andeq	r0, r3, r0, lsl #16
     500:	30000200 	andcc	r0, r0, r0, lsl #4
     504:	0003089f 	muleq	r3, pc, r8	; <UNPREDICTABLE>
     508:	00030a00 	andeq	r0, r3, r0, lsl #20
     50c:	38000500 	stmdacc	r0, {r8, sl}
     510:	9f1c0074 	svcls	0x001c0074
	...
     51c:	03540000 	cmpeq	r4, #0
     520:	03a00000 	moveq	r0, #0
     524:	00010000 	andeq	r0, r1, r0
     528:	00000055 	andeq	r0, r0, r5, asr r0
     52c:	00000000 	andeq	r0, r0, r0
     530:	00019400 	andeq	r9, r1, r0, lsl #8
     534:	00019600 	andeq	r9, r1, r0, lsl #12
     538:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     53c:	00019600 	andeq	r9, r1, r0, lsl #12
     540:	0002dc00 	andeq	sp, r2, r0, lsl #24
     544:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     548:	00000014 	andeq	r0, r0, r4, lsl r0
     54c:	00000000 	andeq	r0, r0, r0
     550:	02020000 	andeq	r0, r2, #0
     554:	00019400 	andeq	r9, r1, r0, lsl #8
     558:	0001b000 	andeq	fp, r1, r0
     55c:	50000100 	andpl	r0, r0, r0, lsl #2
     560:	000001b0 			; <UNDEFINED> instruction: 0x000001b0
     564:	000002dc 	ldrdeq	r0, [r0], -ip
     568:	00560001 	subseq	r0, r6, r1
	...
     580:	94000000 	strls	r0, [r0], #-0
     584:	f0000001 			; <UNDEFINED> instruction: 0xf0000001
     588:	01000001 	tsteq	r0, r1
     58c:	01f05100 	mvnseq	r5, r0, lsl #2
     590:	02460000 	subeq	r0, r6, #0
     594:	00040000 	andeq	r0, r4, r0
     598:	9f5101f3 	svcls	0x005101f3
     59c:	00000246 	andeq	r0, r0, r6, asr #4
     5a0:	0000024a 	andeq	r0, r0, sl, asr #4
     5a4:	4a510001 	bmi	14405b0 <__Stack_Size+0x14401b0>
     5a8:	4c000002 	stcmi	0, cr0, [r0], {2}
     5ac:	04000002 	streq	r0, [r0], #-2
     5b0:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
     5b4:	00024c9f 	muleq	r2, pc, ip	; <UNPREDICTABLE>
     5b8:	00025000 	andeq	r5, r2, r0
     5bc:	51000100 	mrspl	r0, (UNDEF: 16)
     5c0:	00000250 	andeq	r0, r0, r0, asr r2
     5c4:	00000252 	andeq	r0, r0, r2, asr r2
     5c8:	01f30004 	mvnseq	r0, r4
     5cc:	02529f51 	subseq	r9, r2, #324	; 0x144
     5d0:	02560000 	subseq	r0, r6, #0
     5d4:	00010000 	andeq	r0, r1, r0
     5d8:	00025651 	andeq	r5, r2, r1, asr r6
     5dc:	0002dc00 	andeq	sp, r2, r0, lsl #24
     5e0:	f3000400 	vshl.u8	d0, d0, d0
     5e4:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
     5f4:	00019400 	andeq	r9, r1, r0, lsl #8
     5f8:	00023800 	andeq	r3, r2, r0, lsl #16
     5fc:	52000100 	andpl	r0, r0, #0, 2
     600:	00000238 	andeq	r0, r0, r8, lsr r2
     604:	00000246 	andeq	r0, r0, r6, asr #4
     608:	01f30004 	mvnseq	r0, r4
     60c:	02469f52 	subeq	r9, r6, #328	; 0x148
     610:	02dc0000 	sbcseq	r0, ip, #0
     614:	00010000 	andeq	r0, r1, r0
     618:	00000052 	andeq	r0, r0, r2, asr r0
	...
     624:	00019400 	andeq	r9, r1, r0, lsl #8
     628:	0001b000 	andeq	fp, r1, r0
     62c:	53000100 	movwpl	r0, #256	; 0x100
     630:	000001b0 			; <UNDEFINED> instruction: 0x000001b0
     634:	000002dc 	ldrdeq	r0, [r0], -ip
     638:	00530001 	subseq	r0, r3, r1
     63c:	00000000 	andeq	r0, r0, r0
     640:	01000000 	mrseq	r0, (UNDEF: 0)
     644:	00000000 	andeq	r0, r0, r0
     648:	b0000000 	andlt	r0, r0, r0
     64c:	12000001 	andne	r0, r0, #1
     650:	06000002 	streq	r0, [r0], -r2
     654:	09007000 	stmdbeq	r0, {ip, sp, lr}
     658:	129f1a80 	addsne	r1, pc, #128, 20	; 0x80000
     65c:	46000002 	strmi	r0, [r0], -r2
     660:	07000002 	streq	r0, [r0, -r2]
     664:	5001f300 	andpl	pc, r1, r0, lsl #6
     668:	9f1a8009 	svcls	0x001a8009
     66c:	00000246 	andeq	r0, r0, r6, asr #4
     670:	00000258 	andeq	r0, r0, r8, asr r2
     674:	00700006 	rsbseq	r0, r0, r6
     678:	9f1a8009 	svcls	0x001a8009
     67c:	00000258 	andeq	r0, r0, r8, asr r2
     680:	000002dc 	ldrdeq	r0, [r0], -ip
     684:	01f30007 	mvnseq	r0, r7
     688:	1a800950 	bne	fe002bd0 <BootRAM+0xcf73371>
     68c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     690:	00000000 	andeq	r0, r0, r0
     694:	01010000 	mrseq	r0, (UNDEF: 1)
     698:	00000202 	andeq	r0, r0, r2, lsl #4
	...
     6a4:	dc000000 	stcle	0, cr0, [r0], {-0}
     6a8:	dc000001 	stcle	0, cr0, [r0], {1}
     6ac:	01000001 	tsteq	r0, r1
     6b0:	01dc5400 	bicseq	r5, ip, r0, lsl #8
     6b4:	01dc0000 	bicseq	r0, ip, r0
     6b8:	000b0000 	andeq	r0, fp, r0
     6bc:	0f0a0074 	svceq	0x000a0074
     6c0:	800b1a0f 	andhi	r1, fp, pc, lsl #20
     6c4:	dc9f2180 	ldfles	f2, [pc], {128}	; 0x80
     6c8:	e0000001 	and	r0, r0, r1
     6cc:	11000001 	tstne	r0, r1
     6d0:	0a007400 	beq	1d6d8 <__Stack_Size+0x1d2d8>
     6d4:	761a0f00 	ldrvc	r0, [sl], -r0, lsl #30
     6d8:	1aff0800 	bne	fffc26e0 <BootRAM+0xef32e81>
     6dc:	80800b21 	addhi	r0, r0, r1, lsr #22
     6e0:	01e49f21 	mvneq	r9, r1, lsr #30
     6e4:	01f80000 	mvnseq	r0, r0
     6e8:	00070000 	andeq	r0, r7, r0
     6ec:	800b0074 	andhi	r0, fp, r4, ror r0
     6f0:	f89f2180 			; <UNDEFINED> instruction: 0xf89f2180
     6f4:	00000001 	andeq	r0, r0, r1
     6f8:	01000002 	tsteq	r0, r2
     6fc:	02005100 	andeq	r5, r0, #0, 2
     700:	021a0000 	andseq	r0, sl, #0
     704:	00020000 	andeq	r0, r2, r0
     708:	02260075 	eoreq	r0, r6, #117	; 0x75
     70c:	022a0000 	eoreq	r0, sl, #0
     710:	00010000 	andeq	r0, r1, r0
     714:	00024651 	andeq	r4, r2, r1, asr r6
     718:	00025800 	andeq	r5, r2, r0, lsl #16
     71c:	74000700 	strvc	r0, [r0], #-1792	; 0xfffff900
     720:	80800b00 	addhi	r0, r0, r0, lsl #22
     724:	02589f21 	subseq	r9, r8, #33, 30	; 0x84
     728:	025a0000 	subseq	r0, sl, #0
     72c:	00020000 	andeq	r0, r2, r0
     730:	00000075 	andeq	r0, r0, r5, ror r0
     734:	00000000 	andeq	r0, r0, r0
     738:	007c0000 	rsbseq	r0, ip, r0
     73c:	007e0000 	rsbseq	r0, lr, r0
     740:	00020000 	andeq	r0, r2, r0
     744:	007e007d 	rsbseq	r0, lr, sp, ror r0
     748:	01940000 	orrseq	r0, r4, r0
     74c:	00020000 	andeq	r0, r2, r0
     750:	0000147d 	andeq	r1, r0, sp, ror r4
     754:	00000000 	andeq	r0, r0, r0
     758:	02000000 	andeq	r0, r0, #0
     75c:	007c0002 	rsbseq	r0, ip, r2
     760:	00900000 	addseq	r0, r0, r0
     764:	00010000 	andeq	r0, r1, r0
     768:	00009050 	andeq	r9, r0, r0, asr r0
     76c:	00019400 	andeq	r9, r1, r0, lsl #8
     770:	57000100 	strpl	r0, [r0, -r0, lsl #2]
	...
     784:	0000007c 	andeq	r0, r0, ip, ror r0
     788:	0000010a 	andeq	r0, r0, sl, lsl #2
     78c:	0a510001 	beq	1440798 <__Stack_Size+0x1440398>
     790:	30000001 	andcc	r0, r0, r1
     794:	04000001 	streq	r0, [r0], #-1
     798:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
     79c:	0001309f 	muleq	r1, pc, r0	; <UNPREDICTABLE>
     7a0:	00014000 	andeq	r4, r1, r0
     7a4:	51000100 	mrspl	r0, (UNDEF: 16)
     7a8:	00000140 	andeq	r0, r0, r0, asr #2
     7ac:	00000194 	muleq	r0, r4, r1
     7b0:	01f30004 	mvnseq	r0, r4
     7b4:	00009f51 	andeq	r9, r0, r1, asr pc
	...
     7c4:	0000007c 	andeq	r0, r0, ip, ror r0
     7c8:	0000012a 	andeq	r0, r0, sl, lsr #2
     7cc:	2a520001 	bcs	14807d8 <__Stack_Size+0x14803d8>
     7d0:	2c000001 	stccs	0, cr0, [r0], {1}
     7d4:	04000001 	streq	r0, [r0], #-1
     7d8:	5201f300 	andpl	pc, r1, #0, 6
     7dc:	0001309f 	muleq	r1, pc, r0	; <UNPREDICTABLE>
     7e0:	00019400 	andeq	r9, r1, r0, lsl #8
     7e4:	52000100 	andpl	r0, r0, #0, 2
	...
     7fc:	0000007c 	andeq	r0, r0, ip, ror r0
     800:	00000090 	muleq	r0, r0, r0
     804:	90530001 	subsls	r0, r3, r1
     808:	12000000 	andne	r0, r0, #0
     80c:	01000001 	tsteq	r0, r1
     810:	01125300 	tsteq	r2, r0, lsl #6
     814:	01280000 			; <UNDEFINED> instruction: 0x01280000
     818:	00070000 	andeq	r0, r7, r0
     81c:	24320077 	ldrtcs	r0, [r2], #-119	; 0xffffff89
     820:	28220074 	stmdacs	r2!, {r2, r4, r5, r6}
     824:	30000001 	andcc	r0, r0, r1
     828:	13000001 	movwne	r0, #1
     82c:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
     830:	0001dd03 	andeq	sp, r1, r3, lsl #26
     834:	5301f308 	movwpl	pc, #4872	; 0x1308	; <UNPREDICTABLE>
     838:	01282e30 			; <UNDEFINED> instruction: 0x01282e30
     83c:	9f131600 	svcls	0x00131600
     840:	00000130 	andeq	r0, r0, r0, lsr r1
     844:	00000170 	andeq	r0, r0, r0, ror r1
     848:	70530001 	subsvc	r0, r3, r1
     84c:	94000001 	strls	r0, [r0], #-1
     850:	07000001 	streq	r0, [r0, -r1]
     854:	32007700 	andcc	r7, r0, #0, 14
     858:	22007124 	andcs	r7, r0, #36, 2
	...
     864:	00000001 	andeq	r0, r0, r1
     868:	00000000 	andeq	r0, r0, r0
     86c:	00900000 	addseq	r0, r0, r0
     870:	00a00000 	adceq	r0, r0, r0
     874:	00060000 	andeq	r0, r6, r0
     878:	80090070 	andhi	r0, r9, r0, ror r0
     87c:	00a09f1a 	adceq	r9, r0, sl, lsl pc
     880:	00ce0000 	sbceq	r0, lr, r0
     884:	00060000 	andeq	r0, r6, r0
     888:	8009007c 	andhi	r0, r9, ip, ror r0
     88c:	00ce9f1a 	sbceq	r9, lr, sl, lsl pc
     890:	00e40000 	rsceq	r0, r4, r0
     894:	00060000 	andeq	r0, r6, r0
     898:	80090070 	andhi	r0, r9, r0, ror r0
     89c:	00e49f1a 	rsceq	r9, r4, sl, lsl pc
     8a0:	01280000 			; <UNDEFINED> instruction: 0x01280000
     8a4:	00060000 	andeq	r0, r6, r0
     8a8:	8009007c 	andhi	r0, r9, ip, ror r0
     8ac:	01289f1a 			; <UNDEFINED> instruction: 0x01289f1a
     8b0:	01940000 	orrseq	r0, r4, r0
     8b4:	00070000 	andeq	r0, r7, r0
     8b8:	095001f3 	ldmdbeq	r0, {r0, r1, r4, r5, r6, r7, r8}^
     8bc:	009f1a80 	addseq	r1, pc, r0, lsl #21
	...
     8c8:	02020101 	andeq	r0, r2, #1073741824	; 0x40000000
	...
     8d4:	0000b400 	andeq	fp, r0, r0, lsl #8
     8d8:	0000b400 	andeq	fp, r0, r0, lsl #8
     8dc:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
     8e0:	000000b4 	strheq	r0, [r0], -r4
     8e4:	000000b4 	strheq	r0, [r0], -r4
     8e8:	0074000b 	rsbseq	r0, r4, fp
     8ec:	1a0f0f0a 	bne	3c451c <__Stack_Size+0x3c411c>
     8f0:	2180800b 	orrcs	r8, r0, fp
     8f4:	0000b49f 	muleq	r0, pc, r4	; <UNPREDICTABLE>
     8f8:	0000ba00 	andeq	fp, r0, r0, lsl #20
     8fc:	74001100 	strvc	r1, [r0], #-256	; 0xffffff00
     900:	0f000a00 	svceq	0x00000a00
     904:	0800771a 	stmdaeq	r0, {r1, r3, r4, r8, r9, sl, ip, sp, lr}
     908:	0b211aff 	bleq	84750c <__Stack_Size+0x84710c>
     90c:	9f218080 	svcls	0x00218080
     910:	000000be 	strheq	r0, [r0], -lr
     914:	000000cc 	andeq	r0, r0, ip, asr #1
     918:	00740007 	rsbseq	r0, r4, r7
     91c:	2180800b 	orrcs	r8, r0, fp
     920:	0000e49f 	muleq	r0, pc, r4	; <UNPREDICTABLE>
     924:	0000e800 	andeq	lr, r0, r0, lsl #16
     928:	74000700 	strvc	r0, [r0], #-1792	; 0xfffff900
     92c:	80800b00 	addhi	r0, r0, r0, lsl #22
     930:	01309f21 	teqeq	r0, r1, lsr #30
     934:	01340000 	teqeq	r4, r0
     938:	00070000 	andeq	r0, r7, r0
     93c:	800b0074 	andhi	r0, fp, r4, ror r0
     940:	369f2180 	ldrcc	r2, [pc], r0, lsl #3
     944:	3a000001 	bcc	950 <__Stack_Size+0x550>
     948:	07000001 	streq	r0, [r0, -r1]
     94c:	0b007400 	bleq	1d954 <__Stack_Size+0x1d554>
     950:	9f218080 	svcls	0x00218080
	...
     95c:	0000050e 	andeq	r0, r0, lr, lsl #10
     960:	00000510 	andeq	r0, r0, r0, lsl r5
     964:	007d0002 	rsbseq	r0, sp, r2
     968:	00000510 	andeq	r0, r0, r0, lsl r5
     96c:	0000059c 	muleq	r0, ip, r5
     970:	187d0002 	ldmdane	sp!, {r1}^
     974:	0000059c 	muleq	r0, ip, r5
     978:	0000059e 	muleq	r0, lr, r5
     97c:	107d0002 	rsbsne	r0, sp, r2
     980:	0000059e 	muleq	r0, lr, r5
     984:	00000628 	andeq	r0, r0, r8, lsr #12
     988:	187d0002 	ldmdane	sp!, {r1}^
	...
     99c:	0000050e 	andeq	r0, r0, lr, lsl #10
     9a0:	00000534 	andeq	r0, r0, r4, lsr r5
     9a4:	34500001 	ldrbcc	r0, [r0], #-1
     9a8:	5e000005 	cdppl	0, 0, cr0, cr0, cr5, {0}
     9ac:	04000005 	streq	r0, [r0], #-5
     9b0:	5001f300 	andpl	pc, r1, r0, lsl #6
     9b4:	00055e9f 	muleq	r5, pc, lr	; <UNPREDICTABLE>
     9b8:	00056800 	andeq	r6, r5, r0, lsl #16
     9bc:	50000100 	andpl	r0, r0, r0, lsl #2
     9c0:	00000568 	andeq	r0, r0, r8, ror #10
     9c4:	00000628 	andeq	r0, r0, r8, lsr #12
     9c8:	01f30004 	mvnseq	r0, r4
     9cc:	00009f50 	andeq	r9, r0, r0, asr pc
     9d0:	00000000 	andeq	r0, r0, r0
     9d4:	00010000 	andeq	r0, r1, r0
     9d8:	03000000 	movweq	r0, #0
     9dc:	053a0000 	ldreq	r0, [sl, #-0]!
     9e0:	05580000 	ldrbeq	r0, [r8, #-0]
     9e4:	00010000 	andeq	r0, r1, r0
     9e8:	00056855 	andeq	r6, r5, r5, asr r8
     9ec:	00059a00 	andeq	r9, r5, r0, lsl #20
     9f0:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
     9f4:	0000059e 	muleq	r0, lr, r5
     9f8:	000005ca 	andeq	r0, r0, sl, asr #11
     9fc:	d2550001 	subsle	r0, r5, #1
     a00:	02000005 	andeq	r0, r0, #5
     a04:	01000006 	tsteq	r0, r6
     a08:	00005500 	andeq	r5, r0, r0, lsl #10
     a0c:	00000000 	andeq	r0, r0, r0
     a10:	00010000 	andeq	r0, r1, r0
     a14:	00000520 	andeq	r0, r0, r0, lsr #10
     a18:	0000052a 	andeq	r0, r0, sl, lsr #10
     a1c:	0073000b 	rsbseq	r0, r3, fp
     a20:	1a08000a 	bne	200a50 <__Stack_Size+0x200650>
     a24:	2e302440 	cfnegscs	mvf2, mvf0
     a28:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     a38:	00030000 	andeq	r0, r3, r0
     a3c:	00054000 	andeq	r4, r5, r0
     a40:	00055800 	andeq	r5, r5, r0, lsl #16
     a44:	53000100 	movwpl	r0, #256	; 0x100
     a48:	00000568 	andeq	r0, r0, r8, ror #10
     a4c:	0000057b 	andeq	r0, r0, fp, ror r5
     a50:	9e530001 	cdpls	0, 5, cr0, cr3, cr1, {0}
     a54:	a8000005 	stmdage	r0, {r0, r2}
     a58:	01000005 	tsteq	r0, r5
     a5c:	05a85300 	streq	r5, [r8, #768]!	; 0x300
     a60:	05bb0000 	ldreq	r0, [fp, #0]!
     a64:	000b0000 	andeq	r0, fp, r0
     a68:	00001403 	andeq	r1, r0, r3, lsl #8
     a6c:	08019420 	stmdaeq	r1, {r5, sl, ip, pc}
     a70:	be9f1a7f 			; <UNDEFINED> instruction: 0xbe9f1a7f
     a74:	ca000005 	bgt	a90 <__Stack_Size+0x690>
     a78:	01000005 	tsteq	r0, r5
     a7c:	05d25300 	ldrbeq	r5, [r2, #768]	; 0x300
     a80:	05e50000 	strbeq	r0, [r5, #0]!
     a84:	00010000 	andeq	r0, r1, r0
     a88:	00000053 	andeq	r0, r0, r3, asr r0
     a8c:	00000000 	andeq	r0, r0, r0
     a90:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
     a94:	58000005 	stmdapl	r0, {r0, r2}
     a98:	02000005 	andeq	r0, r0, #5
     a9c:	009f3200 	addseq	r3, pc, r0, lsl #4
     aa0:	00000000 	andeq	r0, r0, r0
     aa4:	01000000 	mrseq	r0, (UNDEF: 0)
     aa8:	00055400 	andeq	r5, r5, r0, lsl #8
     aac:	00055800 	andeq	r5, r5, r0, lsl #16
     ab0:	03000600 	movweq	r0, #1536	; 0x600
     ab4:	08000c9c 	stmdaeq	r0, {r2, r3, r4, r7, sl, fp}
     ab8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     abc:	00000000 	andeq	r0, r0, r0
     ac0:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
     ac4:	58000005 	stmdapl	r0, {r0, r2}
     ac8:	02000005 	andeq	r0, r0, #5
     acc:	009f3000 	addseq	r3, pc, r0
     ad0:	00000000 	andeq	r0, r0, r0
     ad4:	01000000 	mrseq	r0, (UNDEF: 0)
     ad8:	00058c00 	andeq	r8, r5, r0, lsl #24
     adc:	00059900 	andeq	r9, r5, r0, lsl #18
     ae0:	91000200 	mrsls	r0, R8_usr
     ae4:	0000006a 	andeq	r0, r0, sl, rrx
     ae8:	00000000 	andeq	r0, r0, r0
     aec:	8c000100 	stfhis	f0, [r0], {-0}
     af0:	99000005 	stmdbls	r0, {r0, r2}
     af4:	02000005 	andeq	r0, r0, #5
     af8:	006c9100 	rsbeq	r9, ip, r0, lsl #2
     afc:	00000000 	andeq	r0, r0, r0
     b00:	01000000 	mrseq	r0, (UNDEF: 0)
     b04:	00059e00 	andeq	r9, r5, r0, lsl #28
     b08:	0005a600 	andeq	sl, r5, r0, lsl #12
     b0c:	31000200 	mrscc	r0, R8_usr
     b10:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     b14:	00000000 	andeq	r0, r0, r0
     b18:	9e000100 	adflss	f0, f0, f0
     b1c:	a6000005 	strge	r0, [r0], -r5
     b20:	06000005 	streq	r0, [r0], -r5
     b24:	001e0300 	andseq	r0, lr, r0, lsl #6
     b28:	009f2000 	addseq	r2, pc, r0
     b2c:	00000000 	andeq	r0, r0, r0
     b30:	01000000 	mrseq	r0, (UNDEF: 0)
     b34:	00059e00 	andeq	r9, r5, r0, lsl #28
     b38:	0005a600 	andeq	sl, r5, r0, lsl #12
     b3c:	30000200 	andcc	r0, r0, r0, lsl #4
     b40:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     b44:	00000000 	andeq	r0, r0, r0
     b48:	2e000200 	cdpcs	2, 0, cr0, cr0, cr0, {0}
     b4c:	38000005 	stmdacc	r0, {r0, r2}
     b50:	02000005 	andeq	r0, r0, #5
     b54:	009f3000 	addseq	r3, pc, r0
     b58:	00000000 	andeq	r0, r0, r0
     b5c:	02000000 	andeq	r0, r0, #0
     b60:	00052e00 	andeq	r2, r5, r0, lsl #28
     b64:	00053800 	andeq	r3, r5, r0, lsl #16
     b68:	03000600 	movweq	r0, #1536	; 0x600
     b6c:	20000014 	andcs	r0, r0, r4, lsl r0
     b70:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     b74:	00000000 	andeq	r0, r0, r0
     b78:	ca000500 	bgt	1f80 <__Stack_Size+0x1b80>
     b7c:	d2000005 	andle	r0, r0, #5
     b80:	02000005 	andeq	r0, r0, #5
     b84:	009f3000 	addseq	r3, pc, r0
     b88:	00000000 	andeq	r0, r0, r0
     b8c:	01000000 	mrseq	r0, (UNDEF: 0)
     b90:	0005ca03 	andeq	ip, r5, r3, lsl #20
     b94:	0005ca00 	andeq	ip, r5, r0, lsl #20
     b98:	30000200 	andcc	r0, r0, r0, lsl #4
     b9c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     ba0:	00000000 	andeq	r0, r0, r0
     ba4:	da000100 	ble	fac <__Stack_Size+0xbac>
     ba8:	dc000005 	stcle	0, cr0, [r0], {5}
     bac:	02000005 	andeq	r0, r0, #5
     bb0:	009f3000 	addseq	r3, pc, r0
     bb4:	00000000 	andeq	r0, r0, r0
     bb8:	58000000 	stmdapl	r0, {}	; <UNPREDICTABLE>
     bbc:	5a000004 	bpl	bd4 <__Stack_Size+0x7d4>
     bc0:	02000004 	andeq	r0, r0, #4
     bc4:	5a007d00 	bpl	1ffcc <__Stack_Size+0x1fbcc>
     bc8:	b4000004 	strlt	r0, [r0], #-4
     bcc:	02000004 	andeq	r0, r0, #4
     bd0:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
     bdc:	58000000 	stmdapl	r0, {}	; <UNPREDICTABLE>
     be0:	90000004 	andls	r0, r0, r4
     be4:	01000004 	tsteq	r0, r4
     be8:	04905000 	ldreq	r5, [r0], #0
     bec:	04b40000 	ldrteq	r0, [r4], #0
     bf0:	00040000 	andeq	r0, r4, r0
     bf4:	9f5001f3 	svcls	0x005001f3
	...
     c04:	00000484 	andeq	r0, r0, r4, lsl #9
     c08:	0000048e 	andeq	r0, r0, lr, lsl #9
     c0c:	8e570001 	cdphi	0, 5, cr0, cr7, cr1, {0}
     c10:	a8000004 	stmdage	r0, {r2}
     c14:	01000004 	tsteq	r0, r4
     c18:	00005600 	andeq	r5, r0, r0, lsl #12
     c1c:	00000000 	andeq	r0, r0, r0
     c20:	00020000 	andeq	r0, r2, r0
     c24:	0000048e 	andeq	r0, r0, lr, lsl #9
     c28:	00000496 	muleq	r0, r6, r4
     c2c:	00560001 	subseq	r0, r6, r1
     c30:	00000000 	andeq	r0, r0, r0
     c34:	02000000 	andeq	r0, r0, #0
     c38:	00048e00 	andeq	r8, r4, r0, lsl #28
     c3c:	00049600 	andeq	r9, r4, r0, lsl #12
     c40:	51000100 	mrspl	r0, (UNDEF: 16)
	...
     c4c:	048e0002 	streq	r0, [lr], #2
     c50:	04960000 	ldreq	r0, [r6], #0
     c54:	00020000 	andeq	r0, r2, r0
     c58:	00009f30 	andeq	r9, r0, r0, lsr pc
	...
     c64:	00200000 	eoreq	r0, r0, r0
     c68:	002e0000 	eoreq	r0, lr, r0
     c6c:	00010000 	andeq	r0, r1, r0
     c70:	00002e53 	andeq	r2, r0, r3, asr lr
     c74:	00003000 	andeq	r3, r0, r0
     c78:	72000200 	andvc	r0, r0, #0, 4
	...
     c84:	00000200 	andeq	r0, r0, r0, lsl #4
     c88:	00000000 	andeq	r0, r0, r0
     c8c:	00003800 	andeq	r3, r0, r0, lsl #16
     c90:	00003a00 	andeq	r3, r0, r0, lsl #20
     c94:	30000200 	andcc	r0, r0, r0, lsl #4
     c98:	00003a9f 	muleq	r0, pc, sl	; <UNPREDICTABLE>
     c9c:	00003c00 	andeq	r3, r0, r0, lsl #24
     ca0:	0c000900 			; <UNDEFINED> instruction: 0x0c000900
     ca4:	000186a0 	andeq	r8, r1, r0, lsr #13
     ca8:	9f1c0072 	svcls	0x001c0072
     cac:	0000003c 	andeq	r0, r0, ip, lsr r0
     cb0:	0000003e 	andeq	r0, r0, lr, lsr r0
     cb4:	a10c0009 	tstge	ip, r9
     cb8:	72000186 	andvc	r0, r0, #-2147483615	; 0x80000021
     cbc:	3e9f1c00 	cdpcc	12, 9, cr1, cr15, cr0, {0}
     cc0:	54000000 	strpl	r0, [r0], #-0
     cc4:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
     cc8:	86a00c00 	strthi	r0, [r0], r0, lsl #24
     ccc:	00720001 	rsbseq	r0, r2, r1
     cd0:	00009f1c 	andeq	r9, r0, ip, lsl pc
     cd4:	00000000 	andeq	r0, r0, r0
     cd8:	00010000 	andeq	r0, r1, r0
     cdc:	00000058 	andeq	r0, r0, r8, asr r0
     ce0:	00000060 	andeq	r0, r0, r0, rrx
     ce4:	9f440002 	svcls	0x00440002
	...
     cf4:	0000000c 	andeq	r0, r0, ip
     cf8:	0000000e 	andeq	r0, r0, lr
     cfc:	0e500001 	cdpeq	0, 5, cr0, cr0, cr1, {0}
     d00:	10000000 	andne	r0, r0, r0
     d04:	04000000 	streq	r0, [r0], #-0
     d08:	5001f300 	andpl	pc, r1, r0, lsl #6
     d0c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     d18:	00000800 	andeq	r0, r0, r0, lsl #16
     d1c:	00000a00 	andeq	r0, r0, r0, lsl #20
     d20:	50000100 	andpl	r0, r0, r0, lsl #2
     d24:	0000000a 	andeq	r0, r0, sl
     d28:	0000000c 	andeq	r0, r0, ip
     d2c:	01f30004 	mvnseq	r0, r4
     d30:	00009f50 	andeq	r9, r0, r0, asr pc
     d34:	00000000 	andeq	r0, r0, r0
     d38:	03900000 	orrseq	r0, r0, #0
     d3c:	03920000 	orrseq	r0, r2, #0
     d40:	00020000 	andeq	r0, r2, r0
     d44:	0392007d 	orrseq	r0, r2, #125	; 0x7d
     d48:	03960000 	orrseq	r0, r6, #0
     d4c:	00020000 	andeq	r0, r2, r0
     d50:	03960c7d 	orrseq	r0, r6, #32000	; 0x7d00
     d54:	03fa0000 	mvnseq	r0, #0
     d58:	00020000 	andeq	r0, r2, r0
     d5c:	03fa307d 	mvnseq	r3, #125	; 0x7d
     d60:	04040000 	streq	r0, [r4], #-0
     d64:	00020000 	andeq	r0, r2, r0
     d68:	00000c7d 	andeq	r0, r0, sp, ror ip
	...
     d78:	039c0000 	orrseq	r0, ip, #0
     d7c:	03a00000 	moveq	r0, #0
     d80:	00060000 	andeq	r0, r6, r0
     d84:	ff080074 			; <UNDEFINED> instruction: 0xff080074
     d88:	03a09f1a 	moveq	r9, #26, 30	; 0x68
     d8c:	03b40000 			; <UNDEFINED> instruction: 0x03b40000
     d90:	00110000 	andseq	r0, r1, r0
     d94:	00002003 	andeq	r2, r0, r3
     d98:	08019420 	stmdaeq	r1, {r5, sl, ip, pc}
     d9c:	00721aff 	ldrshteq	r1, [r2], #-175	; 0xffffff51
     da0:	1aff081c 	bne	fffc2e18 <BootRAM+0xef335b9>
     da4:	0003b49f 	muleq	r3, pc, r4	; <UNPREDICTABLE>
     da8:	0003c600 	andeq	ip, r3, r0, lsl #12
     dac:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
     db0:	000003f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     db4:	000003f4 	strdeq	r0, [r0], -r4
     db8:	00500001 	subseq	r0, r0, r1
     dbc:	00000000 	andeq	r0, r0, r0
     dc0:	03000000 	movweq	r0, #0
     dc4:	00039005 	andeq	r9, r3, r5
     dc8:	00039000 	andeq	r9, r3, r0
     dcc:	03000600 	movweq	r0, #1536	; 0x600
     dd0:	2000001f 	andcs	r0, r0, pc, lsl r0
     dd4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     dd8:	00000000 	andeq	r0, r0, r0
     ddc:	bc000100 	stflts	f0, [r0], {-0}
     de0:	c6000003 	strgt	r0, [r0], -r3
     de4:	01000003 	tsteq	r0, r3
     de8:	00005400 	andeq	r5, r0, r0, lsl #8
     dec:	00000000 	andeq	r0, r0, r0
     df0:	00010000 	andeq	r0, r1, r0
     df4:	000003bc 			; <UNDEFINED> instruction: 0x000003bc
     df8:	000003c6 	andeq	r0, r0, r6, asr #7
     dfc:	005d0001 	subseq	r0, sp, r1
     e00:	00000000 	andeq	r0, r0, r0
     e04:	01000000 	mrseq	r0, (UNDEF: 0)
     e08:	0003bc00 	andeq	fp, r3, r0, lsl #24
     e0c:	0003c600 	andeq	ip, r3, r0, lsl #12
     e10:	09000300 	stmdbeq	r0, {r8, r9}
     e14:	00009f81 	andeq	r9, r0, r1, lsl #31
     e18:	00000000 	andeq	r0, r0, r0
     e1c:	04020000 	streq	r0, [r2], #-0
     e20:	000003c6 	andeq	r0, r0, r6, asr #7
     e24:	000003c6 	andeq	r0, r0, r6, asr #7
     e28:	21030006 	tstcs	r3, r6
     e2c:	9f200001 	svcls	0x00200001
	...
     e38:	03e80001 	mvneq	r0, #1
     e3c:	03f00000 	mvnseq	r0, #0
     e40:	00010000 	andeq	r0, r1, r0
     e44:	0000005d 	andeq	r0, r0, sp, asr r0
     e48:	00000000 	andeq	r0, r0, r0
     e4c:	e8000100 	stmda	r0, {r8}
     e50:	f0000003 			; <UNDEFINED> instruction: 0xf0000003
     e54:	02000003 	andeq	r0, r0, #3
     e58:	009f3100 	addseq	r3, pc, r0, lsl #2
     e5c:	00000000 	andeq	r0, r0, r0
     e60:	fc000000 	stc2	0, cr0, [r0], {-0}
     e64:	00000002 	andeq	r0, r0, r2
     e68:	02000003 	andeq	r0, r0, #3
     e6c:	00007d00 	andeq	r7, r0, r0, lsl #26
     e70:	76000003 	strvc	r0, [r0], -r3
     e74:	02000003 	andeq	r0, r0, #3
     e78:	76107d00 	ldrvc	r7, [r0], -r0, lsl #26
     e7c:	90000003 	andls	r0, r0, r3
     e80:	02000003 	andeq	r0, r0, #3
     e84:	00007d00 	andeq	r7, r0, r0, lsl #26
	...
     e90:	02000000 	andeq	r0, r0, #0
     e94:	10000003 	andne	r0, r0, r3
     e98:	01000003 	tsteq	r0, r3
     e9c:	03105300 	tsteq	r0, #0, 6
     ea0:	031c0000 	tsteq	ip, #0
     ea4:	00020000 	andeq	r0, r2, r0
     ea8:	00000472 	andeq	r0, r0, r2, ror r4
	...
     eb8:	00000310 	andeq	r0, r0, r0, lsl r3
     ebc:	0000031e 	andeq	r0, r0, lr, lsl r3
     ec0:	1e530001 	cdpne	0, 5, cr0, cr3, cr1, {0}
     ec4:	22000003 	andcs	r0, r0, #3
     ec8:	02000003 	andeq	r0, r0, #3
     ecc:	22047200 	andcs	r7, r4, #0, 4
     ed0:	2a000003 	bcs	ee4 <__Stack_Size+0xae4>
     ed4:	05000003 	streq	r0, [r0, #-3]
     ed8:	08040c00 	stmdaeq	r4, {sl, fp}
     edc:	00004001 	andeq	r4, r0, r1
     ee0:	00000000 	andeq	r0, r0, r0
     ee4:	00010000 	andeq	r0, r1, r0
     ee8:	00000358 	andeq	r0, r0, r8, asr r3
     eec:	0000035c 	andeq	r0, r0, ip, asr r3
     ef0:	25080003 	strcs	r0, [r8, #-3]
     ef4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     ef8:	00000000 	andeq	r0, r0, r0
     efc:	00021400 	andeq	r1, r2, r0, lsl #8
     f00:	00021600 	andeq	r1, r2, r0, lsl #12
     f04:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     f08:	00021600 	andeq	r1, r2, r0, lsl #12
     f0c:	0002ec00 	andeq	lr, r2, r0, lsl #24
     f10:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     f14:	00000008 	andeq	r0, r0, r8
	...
     f28:	00021400 	andeq	r1, r2, r0, lsl #8
     f2c:	00022800 	andeq	r2, r2, r0, lsl #16
     f30:	50000100 	andpl	r0, r0, r0, lsl #2
     f34:	00000228 	andeq	r0, r0, r8, lsr #4
     f38:	0000022c 	andeq	r0, r0, ip, lsr #4
     f3c:	01f30004 	mvnseq	r0, r4
     f40:	022c9f50 	eoreq	r9, ip, #80, 30	; 0x140
     f44:	02300000 	eorseq	r0, r0, #0
     f48:	00010000 	andeq	r0, r1, r0
     f4c:	00023050 	andeq	r3, r2, r0, asr r0
     f50:	0002b000 	andeq	fp, r2, r0
     f54:	f3000400 	vshl.u8	d0, d0, d0
     f58:	b09f5001 	addslt	r5, pc, r1
     f5c:	b6000002 	strlt	r0, [r0], -r2
     f60:	01000002 	tsteq	r0, r2
     f64:	02b65000 	adcseq	r5, r6, #0
     f68:	02ec0000 	rsceq	r0, ip, #0
     f6c:	00040000 	andeq	r0, r4, r0
     f70:	9f5001f3 	svcls	0x005001f3
	...
     f84:	02140000 	andseq	r0, r4, #0
     f88:	02280000 	eoreq	r0, r8, #0
     f8c:	00010000 	andeq	r0, r1, r0
     f90:	00022851 	andeq	r2, r2, r1, asr r8
     f94:	00022c00 	andeq	r2, r2, r0, lsl #24
     f98:	f3000400 	vshl.u8	d0, d0, d0
     f9c:	2c9f5101 	ldfcss	f5, [pc], {1}
     fa0:	32000002 	andcc	r0, r0, #2
     fa4:	01000002 	tsteq	r0, r2
     fa8:	02325100 	eorseq	r5, r2, #0, 2
     fac:	02b00000 	adcseq	r0, r0, #0
     fb0:	00040000 	andeq	r0, r4, r0
     fb4:	9f5101f3 	svcls	0x005101f3
     fb8:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
     fbc:	000002ec 	andeq	r0, r0, ip, ror #5
     fc0:	00510001 	subseq	r0, r1, r1
	...
     fd4:	14000000 	strne	r0, [r0], #-0
     fd8:	28000002 	stmdacs	r0, {r1}
     fdc:	01000002 	tsteq	r0, r2
     fe0:	02285200 	eoreq	r5, r8, #0, 4
     fe4:	022c0000 	eoreq	r0, ip, #0
     fe8:	00040000 	andeq	r0, r4, r0
     fec:	9f5201f3 	svcls	0x005201f3
     ff0:	0000022c 	andeq	r0, r0, ip, lsr #4
     ff4:	00000235 	andeq	r0, r0, r5, lsr r2
     ff8:	35520001 	ldrbcc	r0, [r2, #-1]
     ffc:	b0000002 	andlt	r0, r0, r2
    1000:	04000002 	streq	r0, [r0], #-2
    1004:	5201f300 	andpl	pc, r1, #0, 6
    1008:	0002b09f 	muleq	r2, pc, r0	; <UNPREDICTABLE>
    100c:	0002c000 	andeq	ip, r2, r0
    1010:	52000100 	andpl	r0, r0, #0, 2
    1014:	000002c0 	andeq	r0, r0, r0, asr #5
    1018:	000002ec 	andeq	r0, r0, ip, ror #5
    101c:	01f30004 	mvnseq	r0, r4
    1020:	00009f52 	andeq	r9, r0, r2, asr pc
    1024:	00000000 	andeq	r0, r0, r0
    1028:	00020000 	andeq	r0, r2, r0
    102c:	0000022c 	andeq	r0, r0, ip, lsr #4
    1030:	00000236 	andeq	r0, r0, r6, lsr r2
    1034:	9f300002 	svcls	0x00300002
	...
    1040:	022c0002 	eoreq	r0, ip, #2
    1044:	02360000 	eorseq	r0, r6, #0
    1048:	00060000 	andeq	r0, r6, r0
    104c:	00000203 	andeq	r0, r0, r3, lsl #4
    1050:	00009f20 	andeq	r9, r0, r0, lsr #30
	...
    1060:	01f00000 	mvnseq	r0, r0
    1064:	02040000 	andeq	r0, r4, #0
    1068:	00010000 	andeq	r0, r1, r0
    106c:	00020450 	andeq	r0, r2, r0, asr r4
    1070:	00020c00 	andeq	r0, r2, r0, lsl #24
    1074:	f3000400 	vshl.u8	d0, d0, d0
    1078:	0c9f5001 	ldceq	0, cr5, [pc], {1}
    107c:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    1080:	01000002 	tsteq	r0, r2
    1084:	020e5000 	andeq	r5, lr, #0
    1088:	02140000 	andseq	r0, r4, #0
    108c:	00040000 	andeq	r0, r4, r0
    1090:	9f5001f3 	svcls	0x005001f3
	...
    10a4:	00000174 	andeq	r0, r0, r4, ror r1
    10a8:	0000019c 	muleq	r0, ip, r1
    10ac:	9c500001 	mrrcls	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
    10b0:	a0000001 	andge	r0, r0, r1
    10b4:	04000001 	streq	r0, [r0], #-1
    10b8:	5001f300 	andpl	pc, r1, r0, lsl #6
    10bc:	0001a09f 	muleq	r1, pc, r0	; <UNPREDICTABLE>
    10c0:	0001b200 	andeq	fp, r1, r0, lsl #4
    10c4:	50000100 	andpl	r0, r0, r0, lsl #2
    10c8:	000001b2 			; <UNDEFINED> instruction: 0x000001b2
    10cc:	000001f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    10d0:	01f30004 	mvnseq	r0, r4
    10d4:	00009f50 	andeq	r9, r0, r0, asr pc
    10d8:	00000000 	andeq	r0, r0, r0
    10dc:	011c0000 	tsteq	ip, r0
    10e0:	011e0000 	tsteq	lr, r0
    10e4:	00020000 	andeq	r0, r2, r0
    10e8:	011e007d 	tsteq	lr, sp, ror r0
    10ec:	01740000 	cmneq	r4, r0
    10f0:	00020000 	andeq	r0, r2, r0
    10f4:	0000187d 	andeq	r1, r0, sp, ror r8
	...
    1100:	011c0000 	tsteq	ip, r0
    1104:	01260000 			; <UNDEFINED> instruction: 0x01260000
    1108:	00010000 	andeq	r0, r1, r0
    110c:	00012a50 	andeq	r2, r1, r0, asr sl
    1110:	00017400 	andeq	r7, r1, r0, lsl #8
    1114:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    1124:	011c0000 	tsteq	ip, r0
    1128:	01220000 			; <UNDEFINED> instruction: 0x01220000
    112c:	00010000 	andeq	r0, r1, r0
    1130:	00012251 	andeq	r2, r1, r1, asr r2
    1134:	00012600 	andeq	r2, r1, r0, lsl #12
    1138:	f3000400 	vshl.u8	d0, d0, d0
    113c:	2a9f5101 	bcs	fe7d5548 <BootRAM+0xd745ce9>
    1140:	6c000001 	stcvs	0, cr0, [r0], {1}
    1144:	01000001 	tsteq	r0, r1
    1148:	00005400 	andeq	r5, r0, r0, lsl #8
    114c:	00000000 	andeq	r0, r0, r0
    1150:	03010000 	movweq	r0, #4096	; 0x1000
    1154:	00000148 	andeq	r0, r0, r8, asr #2
    1158:	00000148 	andeq	r0, r0, r8, asr #2
    115c:	1f030006 	svcne	0x00030006
    1160:	9f200000 	svcls	0x00200000
	...
    116c:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1170:	000000f2 	strdeq	r0, [r0], -r2
    1174:	007d0002 	rsbseq	r0, sp, r2
    1178:	000000f2 	strdeq	r0, [r0], -r2
    117c:	0000011c 	andeq	r0, r0, ip, lsl r1
    1180:	107d0002 	rsbsne	r0, sp, r2
	...
    1190:	00f00000 	rscseq	r0, r0, r0
    1194:	00f80000 	rscseq	r0, r8, r0
    1198:	00010000 	andeq	r0, r1, r0
    119c:	0000f850 	andeq	pc, r0, r0, asr r8	; <UNPREDICTABLE>
    11a0:	00011400 	andeq	r1, r1, r0, lsl #8
    11a4:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
    11a8:	00000114 	andeq	r0, r0, r4, lsl r1
    11ac:	0000011c 	andeq	r0, r0, ip, lsl r1
    11b0:	7f740003 	svcvc	0x00740003
    11b4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    11b8:	00000000 	andeq	r0, r0, r0
    11bc:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
    11c0:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
    11c4:	01000000 	mrseq	r0, (UNDEF: 0)
    11c8:	00005100 	andeq	r5, r0, r0, lsl #2
    11cc:	00000000 	andeq	r0, r0, r0
    11d0:	03010000 	movweq	r0, #4096	; 0x1000
    11d4:	000000fe 	strdeq	r0, [r0], -lr
    11d8:	000000fe 	strdeq	r0, [r0], -lr
    11dc:	1f030006 	svcne	0x00030006
    11e0:	9f200000 	svcls	0x00200000
	...
    11ec:	000000c8 	andeq	r0, r0, r8, asr #1
    11f0:	000000ca 	andeq	r0, r0, sl, asr #1
    11f4:	007d0002 	rsbseq	r0, sp, r2
    11f8:	000000ca 	andeq	r0, r0, sl, asr #1
    11fc:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1200:	107d0002 	rsbsne	r0, sp, r2
	...
    1210:	00020200 	andeq	r0, r2, r0, lsl #4
    1214:	000000c8 	andeq	r0, r0, r8, asr #1
    1218:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    121c:	d0500001 	subsle	r0, r0, r1
    1220:	d4000000 	strle	r0, [r0], #-0
    1224:	03000000 	movweq	r0, #0
    1228:	9f017400 	svcls	0x00017400
    122c:	000000d4 	ldrdeq	r0, [r0], -r4
    1230:	000000d8 	ldrdeq	r0, [r0], -r8
    1234:	d8540001 	ldmdale	r4, {r0}^
    1238:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
    123c:	03000000 	movweq	r0, #0
    1240:	9f017400 	svcls	0x00017400
	...
    124c:	0000009c 	muleq	r0, ip, r0
    1250:	0000009e 	muleq	r0, lr, r0
    1254:	007d0002 	rsbseq	r0, sp, r2
    1258:	0000009e 	muleq	r0, lr, r0
    125c:	000000c8 	andeq	r0, r0, r8, asr #1
    1260:	187d0002 	ldmdane	sp!, {r1}^
	...
    1270:	009c0000 	addseq	r0, ip, r0
    1274:	00a60000 	adceq	r0, r6, r0
    1278:	00010000 	andeq	r0, r1, r0
    127c:	0000a650 	andeq	sl, r0, r0, asr r6
    1280:	0000b000 	andeq	fp, r0, r0
    1284:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
    1288:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    128c:	000000c8 	andeq	r0, r0, r8, asr #1
    1290:	7f740003 	svcvc	0x00740003
    1294:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1298:	00000000 	andeq	r0, r0, r0
    129c:	9c000000 	stcls	0, cr0, [r0], {-0}
    12a0:	a6000000 	strge	r0, [r0], -r0
    12a4:	01000000 	mrseq	r0, (UNDEF: 0)
    12a8:	00005100 	andeq	r5, r0, r0, lsl #2
    12ac:	00000000 	andeq	r0, r0, r0
    12b0:	00520000 	subseq	r0, r2, r0
    12b4:	00540000 	subseq	r0, r4, r0
    12b8:	00020000 	andeq	r0, r2, r0
    12bc:	0054007d 	subseq	r0, r4, sp, ror r0
    12c0:	00660000 	rsbeq	r0, r6, r0
    12c4:	00020000 	andeq	r0, r2, r0
    12c8:	0066087d 	rsbeq	r0, r6, sp, ror r8
    12cc:	006a0000 	rsbeq	r0, sl, r0
    12d0:	00020000 	andeq	r0, r2, r0
    12d4:	006a007d 	rsbeq	r0, sl, sp, ror r0
    12d8:	009c0000 	addseq	r0, ip, r0
    12dc:	00020000 	andeq	r0, r2, r0
    12e0:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    12ec:	0000005e 	andeq	r0, r0, lr, asr r0
    12f0:	0000006a 	andeq	r0, r0, sl, rrx
    12f4:	00510001 	subseq	r0, r1, r1
    12f8:	00000000 	andeq	r0, r0, r0
    12fc:	01000000 	mrseq	r0, (UNDEF: 0)
    1300:	00007003 	andeq	r7, r0, r3
    1304:	00007000 	andeq	r7, r0, r0
    1308:	03000600 	movweq	r0, #1536	; 0x600
    130c:	20000121 	andcs	r0, r0, r1, lsr #2
    1310:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    1320:	00000a00 	andeq	r0, r0, r0, lsl #20
    1324:	00001a00 	andeq	r1, r0, r0, lsl #20
    1328:	50000100 	andpl	r0, r0, r0, lsl #2
    132c:	0000001a 	andeq	r0, r0, sl, lsl r0
    1330:	0000002c 	andeq	r0, r0, ip, lsr #32
    1334:	2c530001 	mrrccs	0, 0, r0, r3, cr1
    1338:	2e000000 	cdpcs	0, 0, cr0, cr0, cr0, {0}
    133c:	01000000 	mrseq	r0, (UNDEF: 0)
    1340:	002e5000 	eoreq	r5, lr, r0
    1344:	00300000 	eorseq	r0, r0, r0
    1348:	00010000 	andeq	r0, r1, r0
    134c:	00000053 	andeq	r0, r0, r3, asr r0
    1350:	00000000 	andeq	r0, r0, r0
    1354:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    1358:	2c000000 	stccs	0, cr0, [r0], {-0}
    135c:	01000000 	mrseq	r0, (UNDEF: 0)
    1360:	00005000 	andeq	r5, r0, r0
    1364:	00000000 	andeq	r0, r0, r0
    1368:	05030000 	streq	r0, [r3, #-0]
    136c:	0000000a 	andeq	r0, r0, sl
    1370:	0000000a 	andeq	r0, r0, sl
    1374:	00500001 	subseq	r0, r0, r1
	...
    1384:	04000000 	streq	r0, [r0], #-0
    1388:	01000000 	mrseq	r0, (UNDEF: 0)
    138c:	00045000 	andeq	r5, r4, r0
    1390:	000a0000 	andeq	r0, sl, r0
    1394:	00040000 	andeq	r0, r4, r0
    1398:	9f5001f3 	svcls	0x005001f3
	...
    13a4:	00300402 	eorseq	r0, r0, r2, lsl #8
    13a8:	00300000 	eorseq	r0, r0, r0
    13ac:	00010000 	andeq	r0, r1, r0
    13b0:	00000050 	andeq	r0, r0, r0, asr r0
    13b4:	00000000 	andeq	r0, r0, r0
    13b8:	3c000000 	stccc	0, cr0, [r0], {-0}
    13bc:	50000000 	andpl	r0, r0, r0
    13c0:	01000000 	mrseq	r0, (UNDEF: 0)
    13c4:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    13d0:	0000003c 	andeq	r0, r0, ip, lsr r0
    13d4:	00000050 	andeq	r0, r0, r0, asr r0
    13d8:	00500001 	subseq	r0, r0, r1
    13dc:	00000000 	andeq	r0, r0, r0
    13e0:	Address 0x00000000000013e0 is out of bounds.


Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	0800014c 	stmdaeq	r0, {r2, r3, r6, r8}
   4:	0800014e 	stmdaeq	r0, {r1, r2, r3, r6, r8}
   8:	08000150 	stmdaeq	r0, {r4, r6, r8}
   c:	08000172 	stmdaeq	r0, {r1, r4, r5, r6, r8}
  10:	08000172 	stmdaeq	r0, {r1, r4, r5, r6, r8}
  14:	080001cc 	stmdaeq	r0, {r2, r3, r6, r7, r8}
	...
  20:	08000120 	stmdaeq	r0, {r5, r8}
  24:	080001dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8}
  28:	08000c50 	stmdaeq	r0, {r4, r6, sl, fp}
  2c:	08000c9c 	stmdaeq	r0, {r2, r3, r4, r7, sl, fp}
	...
  38:	00000038 	andeq	r0, r0, r8, lsr r0
  3c:	00000038 	andeq	r0, r0, r8, lsr r0
  40:	0000003a 	andeq	r0, r0, sl, lsr r0
  44:	00000040 	andeq	r0, r0, r0, asr #32
	...
  50:	000002fe 	strdeq	r0, [r0], -lr
  54:	00000300 	andeq	r0, r0, r0, lsl #6
  58:	00000304 	andeq	r0, r0, r4, lsl #6
  5c:	00000304 	andeq	r0, r0, r4, lsl #6
  60:	00000308 	andeq	r0, r0, r8, lsl #6
  64:	00000318 	andeq	r0, r0, r8, lsl r3
	...
  70:	00000406 	andeq	r0, r0, r6, lsl #8
  74:	00000408 	andeq	r0, r0, r8, lsl #8
  78:	00000422 	andeq	r0, r0, r2, lsr #8
  7c:	00000428 	andeq	r0, r0, r8, lsr #8
  80:	0000044c 	andeq	r0, r0, ip, asr #8
  84:	00000458 	andeq	r0, r0, r8, asr r4
	...
  90:	00000484 	andeq	r0, r0, r4, lsl #9
  94:	0000048e 	andeq	r0, r0, lr, lsl #9
  98:	0000048e 	andeq	r0, r0, lr, lsl #9
  9c:	00000496 	muleq	r0, r6, r4
	...
  a8:	000004d8 	ldrdeq	r0, [r0], -r8
  ac:	000004d8 	ldrdeq	r0, [r0], -r8
  b0:	000004e0 	andeq	r0, r0, r0, ror #9
  b4:	000004ec 	andeq	r0, r0, ip, ror #9
	...
  c0:	0000052e 	andeq	r0, r0, lr, lsr #10
  c4:	0000052e 	andeq	r0, r0, lr, lsr #10
  c8:	00000530 	andeq	r0, r0, r0, lsr r5
  cc:	00000538 	andeq	r0, r0, r8, lsr r5
	...
  d8:	00000544 	andeq	r0, r0, r4, asr #10
  dc:	00000558 	andeq	r0, r0, r8, asr r5
  e0:	00000568 	andeq	r0, r0, r8, ror #10
  e4:	0000059a 	muleq	r0, sl, r5
  e8:	0000059e 	muleq	r0, lr, r5
  ec:	000005be 			; <UNDEFINED> instruction: 0x000005be
	...
  f8:	00000582 	andeq	r0, r0, r2, lsl #11
  fc:	00000584 	andeq	r0, r0, r4, lsl #11
 100:	0000058c 	andeq	r0, r0, ip, lsl #11
 104:	0000059a 	muleq	r0, sl, r5
	...
 110:	00000558 	andeq	r0, r0, r8, asr r5
 114:	0000055e 	andeq	r0, r0, lr, asr r5
 118:	000005ca 	andeq	r0, r0, sl, asr #11
 11c:	000005d2 	ldrdeq	r0, [r0], -r2
	...
 128:	0000005c 	andeq	r0, r0, ip, asr r0
 12c:	00000062 	andeq	r0, r0, r2, rrx
 130:	00000066 	andeq	r0, r0, r6, rrx
 134:	0000006a 	andeq	r0, r0, sl, rrx
	...
 140:	000000f4 	strdeq	r0, [r0], -r4
 144:	000000f8 	strdeq	r0, [r0], -r8
 148:	000000fe 	strdeq	r0, [r0], -lr
 14c:	00000102 	andeq	r0, r0, r2, lsl #2
	...
 158:	00000122 	andeq	r0, r0, r2, lsr #2
 15c:	00000126 	andeq	r0, r0, r6, lsr #2
 160:	00000148 	andeq	r0, r0, r8, asr #2
 164:	0000014c 	andeq	r0, r0, ip, asr #2
	...
 170:	000002fc 	strdeq	r0, [r0], -ip
 174:	000002fe 	strdeq	r0, [r0], -lr
 178:	00000300 	andeq	r0, r0, r0, lsl #6
 17c:	00000302 	andeq	r0, r0, r2, lsl #6
 180:	00000304 	andeq	r0, r0, r4, lsl #6
 184:	0000030e 	andeq	r0, r0, lr, lsl #6
	...
 190:	0000030e 	andeq	r0, r0, lr, lsl #6
 194:	00000310 	andeq	r0, r0, r0, lsl r3
 198:	00000312 	andeq	r0, r0, r2, lsl r3
 19c:	0000031c 	andeq	r0, r0, ip, lsl r3
	...
 1a8:	00000310 	andeq	r0, r0, r0, lsl r3
 1ac:	00000312 	andeq	r0, r0, r2, lsl r3
 1b0:	00000358 	andeq	r0, r0, r8, asr r3
 1b4:	0000035c 	andeq	r0, r0, ip, asr r3
	...
 1c0:	00000390 	muleq	r0, r0, r3
 1c4:	00000390 	muleq	r0, r0, r3
 1c8:	00000392 	muleq	r0, r2, r3
 1cc:	00000394 	muleq	r0, r4, r3
 1d0:	00000396 	muleq	r0, r6, r3
 1d4:	0000039a 	muleq	r0, sl, r3
	...
