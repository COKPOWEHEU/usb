
res/firmware.elf:     file format elf32-littlearm


Disassembly of section .isr_vector:

08000000 <g_pfnVectors>:
 8000000:	20007fff 	strdcs	r7, [r0], -pc	; <UNPREDICTABLE>
 8000004:	08000e35 	stmdaeq	r0, {r0, r2, r4, r5, r9, sl, fp}
 8000008:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 800000c:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 8000010:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 8000014:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 8000018:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
	...
 800002c:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 8000030:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 8000034:	00000000 	andeq	r0, r0, r0
 8000038:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 800003c:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 8000040:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 8000044:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 8000048:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 800004c:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 8000050:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 8000054:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 8000058:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 800005c:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 8000060:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 8000064:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 8000068:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 800006c:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 8000070:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 8000074:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 8000078:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 800007c:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 8000080:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 8000084:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 8000088:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 800008c:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 8000090:	08000641 	stmdaeq	r0, {r0, r6, r9, sl}
 8000094:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 8000098:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 800009c:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 80000a0:	00000000 	andeq	r0, r0, r0
 80000a4:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 80000a8:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 80000ac:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 80000b0:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 80000b4:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 80000b8:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 80000bc:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 80000c0:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 80000c4:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 80000c8:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 80000cc:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 80000d0:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 80000d4:	080009e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8, fp}
 80000d8:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 80000dc:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 80000e0:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 80000e4:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 80000e8:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 80000ec:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 80000f0:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 80000f4:	00000000 	andeq	r0, r0, r0
 80000f8:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 80000fc:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
	...
 8000108:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 800010c:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 8000110:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 8000114:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 8000118:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
 800011c:	00000000 	andeq	r0, r0, r0
 8000120:	08000e7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, fp}
	...
 8000138:	f108f85f 			; <UNDEFINED> instruction: 0xf108f85f

Disassembly of section .text:

0800013c <init32-0x14>:
 800013c:	08000f94 	stmdaeq	r0, {r2, r4, r7, r8, r9, sl, fp}
 8000140:	20000000 	andcs	r0, r0, r0
 8000144:	2000000c 	andcs	r0, r0, ip
 8000148:	2000000c 	andcs	r0, r0, ip
 800014c:	20000264 	andcs	r0, r0, r4, ror #4

08000150 <init32>:
#define CLOCK_FAIL_LSI -4

#define RTC_LSE 1

void init32(uint8_t reinit){
  RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 8000150:	4b21      	ldr	r3, [pc, #132]	; (80001d8 <init32+0x88>)
  PWR->CR |= PWR_CR_DBP;
 8000152:	4922      	ldr	r1, [pc, #136]	; (80001dc <init32+0x8c>)
  RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 8000154:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8000156:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800015a:	625a      	str	r2, [r3, #36]	; 0x24
  PWR->CR |= PWR_CR_DBP;
 800015c:	680a      	ldr	r2, [r1, #0]
 800015e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8000162:	600a      	str	r2, [r1, #0]
  
  if(!reinit){
    //if(RCC->CSR & RCC_CSR_RTCEN)return;
  }
  
  RCC->CSR |= RCC_CSR_RTCRST;
 8000164:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000166:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 800016a:	635a      	str	r2, [r3, #52]	; 0x34
  RCC->CSR &=~RCC_CSR_RTCRST;
 800016c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800016e:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8000172:	635a      	str	r2, [r3, #52]	; 0x34
  
#if RTC_LSE
  RCC->CSR |= RCC_CSR_LSEON; while(!(RCC->CSR & RCC_CSR_LSERDY)){}
 8000174:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000176:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800017a:	635a      	str	r2, [r3, #52]	; 0x34
 800017c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800017e:	0591      	lsls	r1, r2, #22
 8000180:	d5fc      	bpl.n	800017c <init32+0x2c>
#else
  RCC->CSR |= RCC_CSR_LSION; while(!(RCC->CSR & RCC_CSR_LSIRDY)){}
#endif
  
  RCC->CSR &=~RCC_CSR_RTCSEL;
 8000182:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000184:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 8000188:	635a      	str	r2, [r3, #52]	; 0x34
#if RTC_LSE
  RCC->CSR |= RCC_CSR_RTCSEL_LSE; // NOCLOCK / LSI / LSE / HSE
 800018a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800018c:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8000190:	635a      	str	r2, [r3, #52]	; 0x34
#else
  RCC->CSR |= RCC_CSR_RTCSEL_LSI; // NOCLOCK / LSI / LSE / HSE
#endif
  RCC->CSR |= RCC_CSR_RTCEN;
 8000192:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000194:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8000198:	635a      	str	r2, [r3, #52]	; 0x34
  
  RTC->WPR = 0xCA;
 800019a:	22ca      	movs	r2, #202	; 0xca
 800019c:	4b10      	ldr	r3, [pc, #64]	; (80001e0 <init32+0x90>)
 800019e:	625a      	str	r2, [r3, #36]	; 0x24
  RTC->WPR = 0x53;
 80001a0:	2253      	movs	r2, #83	; 0x53
 80001a2:	625a      	str	r2, [r3, #36]	; 0x24
  RTC->ISR |= RTC_ISR_INIT;
 80001a4:	68da      	ldr	r2, [r3, #12]
 80001a6:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80001aa:	60da      	str	r2, [r3, #12]
  while(!(RTC->ISR & RTC_ISR_INITF)){}
 80001ac:	68da      	ldr	r2, [r3, #12]
 80001ae:	0652      	lsls	r2, r2, #25
 80001b0:	d5fc      	bpl.n	80001ac <init32+0x5c>
  //LSE
  RTC->PRER &=~(RTC_PRER_PREDIV_A | RTC_PRER_PREDIV_S);
 80001b2:	6919      	ldr	r1, [r3, #16]
 80001b4:	4a0b      	ldr	r2, [pc, #44]	; (80001e4 <init32+0x94>)
 80001b6:	400a      	ands	r2, r1
 80001b8:	611a      	str	r2, [r3, #16]
#if RTC_LSE
  RTC->PRER |= 255;
 80001ba:	691a      	ldr	r2, [r3, #16]
 80001bc:	f042 02ff 	orr.w	r2, r2, #255	; 0xff
 80001c0:	611a      	str	r2, [r3, #16]
  RTC->PRER |= (127 << 16);
 80001c2:	691a      	ldr	r2, [r3, #16]
 80001c4:	f442 02fe 	orr.w	r2, r2, #8323072	; 0x7f0000
 80001c8:	611a      	str	r2, [r3, #16]
  //RTC->TR &=~RTC_TR_SU;
  //RTC->DR = 0;
  //RTC->DR &=~RTC_DR_DU;
  
  
  RTC->ISR &=~RTC_ISR_INIT;
 80001ca:	68da      	ldr	r2, [r3, #12]
 80001cc:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80001d0:	60da      	str	r2, [r3, #12]
  RTC->WPR = 0xFF;
 80001d2:	22ff      	movs	r2, #255	; 0xff
 80001d4:	625a      	str	r2, [r3, #36]	; 0x24
}
 80001d6:	4770      	bx	lr
 80001d8:	40023800 	andmi	r3, r2, r0, lsl #16
 80001dc:	40007000 	andmi	r7, r0, r0
 80001e0:	40002800 	andmi	r2, r0, r0, lsl #16
 80001e4:	ff808000 			; <UNDEFINED> instruction: 0xff808000

080001e8 <clock_HS>:
int8_t clock_HS(int8_t quartz){
  uint16_t i;
  uint32_t tmp;
  
  //clock by MSI
  tmp = RCC->CFGR;
 80001e8:	4b45      	ldr	r3, [pc, #276]	; (8000300 <clock_HS+0x118>)
 80001ea:	689a      	ldr	r2, [r3, #8]
  tmp &=~RCC_CFGR_SW;
 80001ec:	f022 0203 	bic.w	r2, r2, #3
  tmp |= RCC_CFGR_SW_MSI; // MSI / HSI / HSE / PLL
  RCC->CFGR = tmp;
 80001f0:	609a      	str	r2, [r3, #8]
 80001f2:	f640 72ff 	movw	r2, #4095	; 0xfff
  for(i=0;i<0x0FFF;i++){
    if((RCC->CFGR & RCC_CFGR_SWS)==RCC_CFGR_SWS_MSI){i=0x1FFF; break;}
 80001f6:	6899      	ldr	r1, [r3, #8]
 80001f8:	f011 0f0c 	tst.w	r1, #12
 80001fc:	d047      	beq.n	800028e <clock_HS+0xa6>
 80001fe:	3a01      	subs	r2, #1
 8000200:	b292      	uxth	r2, r2
  for(i=0;i<0x0FFF;i++){
 8000202:	2a00      	cmp	r2, #0
 8000204:	d1f7      	bne.n	80001f6 <clock_HS+0xe>
  }
  if(i != 0x1FFF)return CLOCK_FAIL_MSI;
 8000206:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800020a:	4770      	bx	lr
 800020c:	2000      	movs	r0, #0
    }
    if(i != 0x1FFF)return CLOCK_FAIL_HSI;
  }
  
  // configure flash
  FLASH->ACR |= FLASH_ACR_ACC64;
 800020e:	4b3d      	ldr	r3, [pc, #244]	; (8000304 <clock_HS+0x11c>)
 8000210:	681a      	ldr	r2, [r3, #0]
 8000212:	f042 0204 	orr.w	r2, r2, #4
 8000216:	601a      	str	r2, [r3, #0]
  FLASH->ACR |= FLASH_ACR_PRFTEN;
 8000218:	681a      	ldr	r2, [r3, #0]
 800021a:	f042 0202 	orr.w	r2, r2, #2
 800021e:	601a      	str	r2, [r3, #0]
  FLASH->ACR |= FLASH_ACR_LATENCY;
 8000220:	681a      	ldr	r2, [r3, #0]
 8000222:	f042 0201 	orr.w	r2, r2, #1
 8000226:	601a      	str	r2, [r3, #0]

  
  tmp = RCC->CFGR;
 8000228:	4a35      	ldr	r2, [pc, #212]	; (8000300 <clock_HS+0x118>)
 800022a:	6893      	ldr	r3, [r2, #8]
  tmp &=~ (RCC_CFGR_PLLSRC | RCC_CFGR_PLLMUL | RCC_CFGR_PLLDIV);
 800022c:	f423 037d 	bic.w	r3, r3, #16580608	; 0xfd0000
  
  if(quartz){
 8000230:	b1a8      	cbz	r0, 800025e <clock_HS+0x76>
    tmp |= RCC_CFGR_PLLSRC;  //PLL src = HSE
    tmp |= RCC_CFGR_PLLMUL12;//PLLCLK = F_HSE * 12 = 96 MHz
    tmp |= RCC_CFGR_PLLDIV3; //PLLCLK = F_HSE * 12 / 3 = 32 MHz
 8000232:	f443 0311 	orr.w	r3, r3, #9502720	; 0x910000
  tmp |= RCC_CFGR_HPRE_DIV1;
  //AHB = PLLCLK/HPRE = 32 MHz
  tmp &=~RCC_CFGR_PPRE2;
  tmp |= RCC_CFGR_PPRE2_DIV1;
  //APB2 = HCLK/PPRE2 = 32 MHz
  tmp &=~RCC_CFGR_PPRE1;
 8000236:	4934      	ldr	r1, [pc, #208]	; (8000308 <clock_HS+0x120>)
 8000238:	4019      	ands	r1, r3
  tmp |= RCC_CFGR_PPRE1_DIV1;
  //APB1 = HCLK/PPRE1 = 32 MHz
  RCC->CFGR = tmp;
 800023a:	6091      	str	r1, [r2, #8]
  
  RCC->CR |= RCC_CR_PLLON;
 800023c:	6813      	ldr	r3, [r2, #0]
 800023e:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000242:	6013      	str	r3, [r2, #0]
 8000244:	f640 73ff 	movw	r3, #4095	; 0xfff
  for(i=0;i<0x0FFF;i++){
    if(RCC->CR & RCC_CR_PLLRDY){i=0x1FFF; break;}
 8000248:	4a2d      	ldr	r2, [pc, #180]	; (8000300 <clock_HS+0x118>)
 800024a:	6811      	ldr	r1, [r2, #0]
 800024c:	0189      	lsls	r1, r1, #6
 800024e:	d40d      	bmi.n	800026c <clock_HS+0x84>
 8000250:	3b01      	subs	r3, #1
 8000252:	b29b      	uxth	r3, r3
  for(i=0;i<0x0FFF;i++){
 8000254:	2b00      	cmp	r3, #0
 8000256:	d1f8      	bne.n	800024a <clock_HS+0x62>
  }
  if(i != 0x1FFF)return CLOCK_FAIL_PLL; //can not enable PLL
 8000258:	f06f 0002 	mvn.w	r0, #2
 800025c:	4770      	bx	lr
    tmp |= RCC_CFGR_PLLDIV3; //PLLCLK = F_HSI * 6 / 3 = 32 MHz
 800025e:	f443 0308 	orr.w	r3, r3, #8912896	; 0x880000
 8000262:	e7e8      	b.n	8000236 <clock_HS+0x4e>
  tmp |= RCC_CFGR_SW_PLL; // MSI / HSI / HSE / PLL
  RCC->CFGR = tmp;
  for(i=0;i<0x0FFF;i++){
    if((RCC->CFGR & RCC_CFGR_SWS)==RCC_CFGR_SWS_PLL){i=0x1FFF; break;}
  }
  if(i != 0x1FFF)return CLOCK_FAIL_PLL;
 8000264:	3000      	adds	r0, #0
 8000266:	bf18      	it	ne
 8000268:	2001      	movne	r0, #1
  
  if(quartz)return CLOCK_HSE;
    else return CLOCK_HSI;
}
 800026a:	4770      	bx	lr
  tmp = RCC->CFGR;
 800026c:	6893      	ldr	r3, [r2, #8]
    if((RCC->CFGR & RCC_CFGR_SWS)==RCC_CFGR_SWS_PLL){i=0x1FFF; break;}
 800026e:	4924      	ldr	r1, [pc, #144]	; (8000300 <clock_HS+0x118>)
  tmp |= RCC_CFGR_SW_PLL; // MSI / HSI / HSE / PLL
 8000270:	f043 0303 	orr.w	r3, r3, #3
  RCC->CFGR = tmp;
 8000274:	6093      	str	r3, [r2, #8]
 8000276:	f640 73ff 	movw	r3, #4095	; 0xfff
    if((RCC->CFGR & RCC_CFGR_SWS)==RCC_CFGR_SWS_PLL){i=0x1FFF; break;}
 800027a:	688a      	ldr	r2, [r1, #8]
 800027c:	f002 020c 	and.w	r2, r2, #12
 8000280:	2a0c      	cmp	r2, #12
 8000282:	d0ef      	beq.n	8000264 <clock_HS+0x7c>
 8000284:	3b01      	subs	r3, #1
 8000286:	b29b      	uxth	r3, r3
  for(i=0;i<0x0FFF;i++){
 8000288:	2b00      	cmp	r3, #0
 800028a:	d1f6      	bne.n	800027a <clock_HS+0x92>
 800028c:	e7e4      	b.n	8000258 <clock_HS+0x70>
  RCC->CR &=~ RCC_CR_HSEON;
 800028e:	681a      	ldr	r2, [r3, #0]
 8000290:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8000294:	601a      	str	r2, [r3, #0]
  RCC->CR &=~ RCC_CR_HSION;
 8000296:	681a      	ldr	r2, [r3, #0]
 8000298:	f022 0201 	bic.w	r2, r2, #1
 800029c:	601a      	str	r2, [r3, #0]
  RCC->CR &=~ RCC_CR_HSEBYP;
 800029e:	681a      	ldr	r2, [r3, #0]
 80002a0:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 80002a4:	601a      	str	r2, [r3, #0]
  RCC->CR &=~ RCC_CR_PLLON;
 80002a6:	681a      	ldr	r2, [r3, #0]
 80002a8:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 80002ac:	601a      	str	r2, [r3, #0]
  RCC->CR &=~ RCC_CR_RTCPRE;
 80002ae:	681a      	ldr	r2, [r3, #0]
 80002b0:	f022 42c0 	bic.w	r2, r2, #1610612736	; 0x60000000
 80002b4:	601a      	str	r2, [r3, #0]
  RCC->CR |= RCC_CR_RTCPRE_1; //0b00=2 MHz ; 0b01=4MHz ; 0b10=8MHz ; 0b11=16MHz
 80002b6:	681a      	ldr	r2, [r3, #0]
 80002b8:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 80002bc:	601a      	str	r2, [r3, #0]
  if(quartz){
 80002be:	b168      	cbz	r0, 80002dc <clock_HS+0xf4>
    RCC->CR |= RCC_CR_HSEON;
 80002c0:	681a      	ldr	r2, [r3, #0]
 80002c2:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80002c6:	601a      	str	r2, [r3, #0]
 80002c8:	f640 73ff 	movw	r3, #4095	; 0xfff
      if(RCC->CR & RCC_CR_HSERDY){i=0x1FFF; break;}
 80002cc:	4a0c      	ldr	r2, [pc, #48]	; (8000300 <clock_HS+0x118>)
 80002ce:	6811      	ldr	r1, [r2, #0]
 80002d0:	0389      	lsls	r1, r1, #14
 80002d2:	d49c      	bmi.n	800020e <clock_HS+0x26>
 80002d4:	3b01      	subs	r3, #1
 80002d6:	b29b      	uxth	r3, r3
    for(i=0;i<0x0FFF;i++){
 80002d8:	2b00      	cmp	r3, #0
 80002da:	d1f8      	bne.n	80002ce <clock_HS+0xe6>
    RCC->CR |= RCC_CR_HSION;
 80002dc:	4a08      	ldr	r2, [pc, #32]	; (8000300 <clock_HS+0x118>)
 80002de:	6813      	ldr	r3, [r2, #0]
 80002e0:	f043 0301 	orr.w	r3, r3, #1
 80002e4:	6013      	str	r3, [r2, #0]
 80002e6:	f640 73ff 	movw	r3, #4095	; 0xfff
      if(RCC->CR & RCC_CR_HSIRDY){i=0x1FFF; break;}
 80002ea:	6811      	ldr	r1, [r2, #0]
 80002ec:	0788      	lsls	r0, r1, #30
 80002ee:	d48d      	bmi.n	800020c <clock_HS+0x24>
 80002f0:	3b01      	subs	r3, #1
 80002f2:	b29b      	uxth	r3, r3
    for(i=0;i<0x0FFF;i++){
 80002f4:	2b00      	cmp	r3, #0
 80002f6:	d1f8      	bne.n	80002ea <clock_HS+0x102>
    if(i != 0x1FFF)return CLOCK_FAIL_HSI;
 80002f8:	f06f 0001 	mvn.w	r0, #1
 80002fc:	4770      	bx	lr
 80002fe:	bf00      	nop
 8000300:	40023800 	andmi	r3, r2, r0, lsl #16
 8000304:	40023c00 	andmi	r3, r2, r0, lsl #24
 8000308:	ff9bc00f 			; <UNDEFINED> instruction: 0xff9bc00f

0800030c <clock_MS>:
void clock_MS(){
  uint16_t i;
  uint32_t tmp;
  
  //clock by MSI
  tmp = RCC->CFGR;
 800030c:	4b10      	ldr	r3, [pc, #64]	; (8000350 <clock_MS+0x44>)
 800030e:	689a      	ldr	r2, [r3, #8]
  tmp &=~RCC_CFGR_SW;
 8000310:	f022 0203 	bic.w	r2, r2, #3
  tmp |= RCC_CFGR_SW_MSI; // MSI / HSI / HSE / PLL
  RCC->CFGR = tmp;
 8000314:	609a      	str	r2, [r3, #8]
 8000316:	f640 72ff 	movw	r2, #4095	; 0xfff
  for(i=0;i<0x0FFF;i++){
    if((RCC->CFGR & RCC_CFGR_SWS)==RCC_CFGR_SWS_MSI){i=0x1FFF; break;}
 800031a:	6899      	ldr	r1, [r3, #8]
 800031c:	f011 0f0c 	tst.w	r1, #12
 8000320:	d004      	beq.n	800032c <clock_MS+0x20>
 8000322:	3a01      	subs	r2, #1
 8000324:	b292      	uxth	r2, r2
  for(i=0;i<0x0FFF;i++){
 8000326:	2a00      	cmp	r2, #0
 8000328:	d1f7      	bne.n	800031a <clock_MS+0xe>
 800032a:	4770      	bx	lr
  }
  if(i != 0x1FFF)return;;
  
  //disable HSE, PLL
  RCC->CR &=~ RCC_CR_HSEON;
 800032c:	681a      	ldr	r2, [r3, #0]
 800032e:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8000332:	601a      	str	r2, [r3, #0]
  RCC->CR &=~ RCC_CR_HSION;
 8000334:	681a      	ldr	r2, [r3, #0]
 8000336:	f022 0201 	bic.w	r2, r2, #1
 800033a:	601a      	str	r2, [r3, #0]
  RCC->CR &=~ RCC_CR_HSEBYP;
 800033c:	681a      	ldr	r2, [r3, #0]
 800033e:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8000342:	601a      	str	r2, [r3, #0]
  RCC->CR &=~ RCC_CR_PLLON;
 8000344:	681a      	ldr	r2, [r3, #0]
 8000346:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 800034a:	601a      	str	r2, [r3, #0]
}
 800034c:	4770      	bx	lr
 800034e:	bf00      	nop
 8000350:	40023800 	andmi	r3, r2, r0, lsl #16

08000354 <_init>:
 8000354:	4770      	bx	lr

08000356 <SystemInit>:
#include "hardware.h"
#include "usb_lib.h"
#include "clock.h"

void __attribute__((weak)) _init(void){}
void __attribute__((weak)) SystemInit(void){}
 8000356:	4770      	bx	lr

08000358 <sleep>:

void sleep(uint32_t time){
  while(time--)asm volatile("nop");
 8000358:	f110 30ff 	adds.w	r0, r0, #4294967295	; 0xffffffff
 800035c:	d200      	bcs.n	8000360 <sleep+0x8>
}
 800035e:	4770      	bx	lr
  while(time--)asm volatile("nop");
 8000360:	bf00      	nop
 8000362:	e7f9      	b.n	8000358 <sleep>

08000364 <endp_callback_default>:
__attribute__((weak))void usb_class_disconnect(){}
__attribute__((weak))void usb_class_poll(){}
__attribute__((weak))char usb_class_ep0_in(config_pack_t *req, void **data, uint16_t *size){return 0;}
__attribute__((weak))char usb_class_ep0_out(config_pack_t *req, uint16_t offset, uint16_t rx_size){return 0;}

static void endp_callback_default(uint8_t epnum){}
 8000364:	4770      	bx	lr
__attribute__((weak))void usb_class_init(){}
 8000366:	4770      	bx	lr

08000368 <usb_class_disconnect>:
 8000368:	4770      	bx	lr
 800036a:	4770      	bx	lr
__attribute__((weak))char usb_class_ep0_in(config_pack_t *req, void **data, uint16_t *size){return 0;}
 800036c:	2000      	movs	r0, #0
 800036e:	4770      	bx	lr
__attribute__((weak))char usb_class_ep0_out(config_pack_t *req, uint16_t offset, uint16_t rx_size){return 0;}
 8000370:	2000      	movs	r0, #0
 8000372:	4770      	bx	lr

08000374 <USB_setup>:
epfunc_t epfunc_out[STM32ENDPOINTS];

static config_pack_t setup_packet;

void USB_setup(){
  RCC->APB1ENR |= RCC_APB1ENR_USBEN;
 8000374:	4b15      	ldr	r3, [pc, #84]	; (80003cc <USB_setup+0x58>)
 8000376:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8000378:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 800037c:	625a      	str	r2, [r3, #36]	; 0x24
  RCC->APB2ENR |= RCC_APB2ENR_SYSCFGEN;
 800037e:	6a1a      	ldr	r2, [r3, #32]
 8000380:	f042 0201 	orr.w	r2, r2, #1
 8000384:	621a      	str	r2, [r3, #32]
  
  SYSCFG->PMC &=~ SYSCFG_PMC_USB_PU;
 8000386:	4a12      	ldr	r2, [pc, #72]	; (80003d0 <USB_setup+0x5c>)
 8000388:	6853      	ldr	r3, [r2, #4]
 800038a:	f023 0301 	bic.w	r3, r3, #1
 800038e:	6053      	str	r3, [r2, #4]
  USB->CNTR   = USB_CNTR_FRES; // Force USB Reset
 8000390:	2201      	movs	r2, #1
 8000392:	4b10      	ldr	r3, [pc, #64]	; (80003d4 <USB_setup+0x60>)
 8000394:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
 8000398:	4a0f      	ldr	r2, [pc, #60]	; (80003d8 <USB_setup+0x64>)
  for(uint32_t ctr = 0; ctr < 100000; ++ctr) asm volatile("nop"); // wait >1ms
 800039a:	bf00      	nop
 800039c:	3a01      	subs	r2, #1
 800039e:	d1fc      	bne.n	800039a <USB_setup+0x26>
  USB->CNTR   = 0;
 80003a0:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
  USB->BTABLE = 0;
 80003a4:	f8a3 2050 	strh.w	r2, [r3, #80]	; 0x50
  USB->DADDR  = 0;
 80003a8:	f8a3 204c 	strh.w	r2, [r3, #76]	; 0x4c
  USB->ISTR   = 0;
 80003ac:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
  USB->CNTR   = USB_CNTR_RESETM | USB_CNTR_WKUPM;
 80003b0:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
 80003b4:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
 * Enable a device specific interupt in the NVIC interrupt controller.
 * The interrupt number cannot be a negative value.
 */
static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
 80003b8:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
 80003bc:	4b07      	ldr	r3, [pc, #28]	; (80003dc <USB_setup+0x68>)
 80003be:	601a      	str	r2, [r3, #0]
  NVIC_EnableIRQ(USB_LP_IRQn);
  SYSCFG->PMC |= SYSCFG_PMC_USB_PU;
 80003c0:	4a03      	ldr	r2, [pc, #12]	; (80003d0 <USB_setup+0x5c>)
 80003c2:	6853      	ldr	r3, [r2, #4]
 80003c4:	f043 0301 	orr.w	r3, r3, #1
 80003c8:	6053      	str	r3, [r2, #4]
}
 80003ca:	4770      	bx	lr
 80003cc:	40023800 	andmi	r3, r2, r0, lsl #16
 80003d0:	40010000 	andmi	r0, r1, r0
 80003d4:	40005c00 	andmi	r5, r0, r0, lsl #24
 80003d8:	000186a0 	andeq	r8, r1, r0, lsr #13
 80003dc:	e000e100 	and	lr, r0, r0, lsl #2

080003e0 <usb_ep_init>:
    if( bytesread >= setup_packet.wLength )usb_ep_write(0, NULL, 0);
  }
}

static uint16_t lastaddr = LASTADDR_DEFAULT;
void usb_ep_init(uint8_t epnum, uint8_t ep_type, uint16_t size, epfunc_t func){
 80003e0:	b5f0      	push	{r4, r5, r6, r7, lr}
  if(func == NULL)func = endp_callback_default;
 80003e2:	4c41      	ldr	r4, [pc, #260]	; (80004e8 <usb_ep_init+0x108>)
  uint8_t dir_in = (epnum & 0x80);
  epnum &= 0x0F;
 80003e4:	f000 070f 	and.w	r7, r0, #15
 80003e8:	fa4f fc80 	sxtb.w	ip, r0
 80003ec:	00bd      	lsls	r5, r7, #2
  if(func == NULL)func = endp_callback_default;
 80003ee:	2b00      	cmp	r3, #0
 80003f0:	bf08      	it	eq
 80003f2:	4623      	moveq	r3, r4
  
  if(dir_in){
 80003f4:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 80003f8:	f1bc 0f00 	cmp.w	ip, #0
 80003fc:	f505 45b8 	add.w	r5, r5, #23552	; 0x5c00
 8000400:	da17      	bge.n	8000432 <usb_ep_init+0x52>
    ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 8000402:	8828      	ldrh	r0, [r5, #0]
 8000404:	f020 00c0 	bic.w	r0, r0, #192	; 0xc0
 8000408:	0500      	lsls	r0, r0, #20
 800040a:	0d00      	lsrs	r0, r0, #20
 800040c:	f440 4000 	orr.w	r0, r0, #32768	; 0x8000
 8000410:	f040 0080 	orr.w	r0, r0, #128	; 0x80
 8000414:	8028      	strh	r0, [r5, #0]
  }else{
    ENDP_STAT_RX(epnum, USB_EP_RX_DIS);
  }
  
  uint16_t buf = USB_EPx(epnum);
 8000416:	882c      	ldrh	r4, [r5, #0]
  buf = (buf & ~(USB_EP_DTOG_RX | USB_EP_DTOG_TX | USB_EPTX_STAT | USB_EPRX_STAT)) | USB_EP_CTR_RX | USB_EP_CTR_TX;
  buf = (buf & ~USB_EPADDR_FIELD) | epnum;
  //buf = (buf & ~USB_EP_T_FIELD) | ep_type;
  buf &=~ USB_EP_T_FIELD;
  switch(ep_type){
 8000418:	2902      	cmp	r1, #2
 800041a:	f404 6410 	and.w	r4, r4, #2304	; 0x900
 800041e:	ea44 0407 	orr.w	r4, r4, r7
 8000422:	d011      	beq.n	8000448 <usb_ep_init+0x68>
 8000424:	2903      	cmp	r1, #3
 8000426:	d035      	beq.n	8000494 <usb_ep_init+0xb4>
 8000428:	2900      	cmp	r1, #0
 800042a:	d136      	bne.n	800049a <usb_ep_init+0xba>
    case USB_ENDP_CTRL: buf |= USB_EP_CONTROL; break;
 800042c:	f444 4402 	orr.w	r4, r4, #33280	; 0x8200
 8000430:	e00c      	b.n	800044c <usb_ep_init+0x6c>
    ENDP_STAT_RX(epnum, USB_EP_RX_DIS);
 8000432:	882c      	ldrh	r4, [r5, #0]
 8000434:	f024 04f0 	bic.w	r4, r4, #240	; 0xf0
 8000438:	04a4      	lsls	r4, r4, #18
 800043a:	0ca4      	lsrs	r4, r4, #18
 800043c:	f444 4400 	orr.w	r4, r4, #32768	; 0x8000
 8000440:	f044 0480 	orr.w	r4, r4, #128	; 0x80
 8000444:	802c      	strh	r4, [r5, #0]
 8000446:	e7e6      	b.n	8000416 <usb_ep_init+0x36>
  buf &=~ USB_EP_T_FIELD;
 8000448:	f444 4400 	orr.w	r4, r4, #32768	; 0x8000
    case USB_ENDP_BULK: buf |= USB_EP_BULK; break;
    case USB_ENDP_INTR: buf |= USB_EP_INTERRUPT; break;
    default: buf |= USB_EP_ISOCHRONOUS; //в дескрипторах изохронные точки могут иметь расширенные настройки
 800044c:	f044 0480 	orr.w	r4, r4, #128	; 0x80
  }
  USB_EPx(epnum) = buf;
 8000450:	802c      	strh	r4, [r5, #0]
  
  if( dir_in ){
 8000452:	4826      	ldr	r0, [pc, #152]	; (80004ec <usb_ep_init+0x10c>)
 8000454:	013c      	lsls	r4, r7, #4
 8000456:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
 800045a:	f1bc 0f00 	cmp.w	ip, #0
 800045e:	8806      	ldrh	r6, [r0, #0]
 8000460:	f504 44c0 	add.w	r4, r4, #24576	; 0x6000
 8000464:	da1c      	bge.n	80004a0 <usb_ep_init+0xc0>
    usb_epdata[epnum].usb_tx_addr = lastaddr;
 8000466:	6026      	str	r6, [r4, #0]
    epfunc_in[epnum] = func;
 8000468:	4c21      	ldr	r4, [pc, #132]	; (80004f0 <usb_ep_init+0x110>)
    if((ep_type & 0x03) == USB_ENDP_ISO){
 800046a:	f001 0103 	and.w	r1, r1, #3
    epfunc_in[epnum] = func;
 800046e:	f844 3027 	str.w	r3, [r4, r7, lsl #2]
    if((ep_type & 0x03) == USB_ENDP_ISO){
 8000472:	f640 733f 	movw	r3, #3903	; 0xf3f
 8000476:	2901      	cmp	r1, #1
      ENDP_STAT_TX(epnum, USB_EP_TX_VALID);
 8000478:	8829      	ldrh	r1, [r5, #0]
 800047a:	ea03 0301 	and.w	r3, r3, r1
 800047e:	f483 4300 	eor.w	r3, r3, #32768	; 0x8000
 8000482:	bf0c      	ite	eq
 8000484:	f083 03b0 	eoreq.w	r3, r3, #176	; 0xb0
    }else{
      ENDP_STAT_TX(epnum, USB_EP_TX_NAK);
 8000488:	f083 03a0 	eorne.w	r3, r3, #160	; 0xa0
      usb_epdata[epnum].rx_num_blocks = size / 32 - 1;
    }
    epfunc_out[epnum] = func;
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
  }
  lastaddr += size;
 800048c:	4432      	add	r2, r6
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
 800048e:	802b      	strh	r3, [r5, #0]
  lastaddr += size;
 8000490:	8002      	strh	r2, [r0, #0]
}
 8000492:	bdf0      	pop	{r4, r5, r6, r7, pc}
    case USB_ENDP_INTR: buf |= USB_EP_INTERRUPT; break;
 8000494:	f444 4406 	orr.w	r4, r4, #34304	; 0x8600
 8000498:	e7d8      	b.n	800044c <usb_ep_init+0x6c>
    default: buf |= USB_EP_ISOCHRONOUS; //в дескрипторах изохронные точки могут иметь расширенные настройки
 800049a:	f444 4404 	orr.w	r4, r4, #33792	; 0x8400
 800049e:	e7d5      	b.n	800044c <usb_ep_init+0x6c>
    usb_epdata[epnum].usb_rx_addr = lastaddr;
 80004a0:	60a6      	str	r6, [r4, #8]
      usb_epdata[epnum].rx_blocksize = 0;
 80004a2:	89a1      	ldrh	r1, [r4, #12]
    if(size < 64){
 80004a4:	2a3f      	cmp	r2, #63	; 0x3f
      usb_epdata[epnum].rx_blocksize = 1;
 80004a6:	bf8b      	itete	hi
 80004a8:	f441 4100 	orrhi.w	r1, r1, #32768	; 0x8000
      usb_epdata[epnum].rx_blocksize = 0;
 80004ac:	f36f 31cf 	bfcls	r1, #15, #1
      usb_epdata[epnum].rx_blocksize = 1;
 80004b0:	81a1      	strhhi	r1, [r4, #12]
      usb_epdata[epnum].rx_blocksize = 0;
 80004b2:	81a1      	strhls	r1, [r4, #12]
      usb_epdata[epnum].rx_num_blocks = size / 32 - 1;
 80004b4:	f8b4 c00c 	ldrh.w	ip, [r4, #12]
 80004b8:	bf8a      	itet	hi
 80004ba:	0951      	lsrhi	r1, r2, #5
      usb_epdata[epnum].rx_num_blocks = size / 2;
 80004bc:	f3c2 0144 	ubfxls	r1, r2, #1, #5
      usb_epdata[epnum].rx_num_blocks = size / 32 - 1;
 80004c0:	f101 31ff 	addhi.w	r1, r1, #4294967295	; 0xffffffff
 80004c4:	f361 2c8e 	bfi	ip, r1, #10, #5
    epfunc_out[epnum] = func;
 80004c8:	490a      	ldr	r1, [pc, #40]	; (80004f4 <usb_ep_init+0x114>)
      usb_epdata[epnum].rx_num_blocks = size / 32 - 1;
 80004ca:	f8a4 c00c 	strh.w	ip, [r4, #12]
    epfunc_out[epnum] = func;
 80004ce:	f841 3027 	str.w	r3, [r1, r7, lsl #2]
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
 80004d2:	882b      	ldrh	r3, [r5, #0]
 80004d4:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80004d8:	049b      	lsls	r3, r3, #18
 80004da:	0c9b      	lsrs	r3, r3, #18
 80004dc:	f483 4330 	eor.w	r3, r3, #45056	; 0xb000
 80004e0:	f083 0380 	eor.w	r3, r3, #128	; 0x80
 80004e4:	e7d2      	b.n	800048c <usb_ep_init+0xac>
 80004e6:	bf00      	nop
 80004e8:	08000365 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9}
 80004ec:	20000000 	andcs	r0, r0, r0
 80004f0:	20000224 	andcs	r0, r0, r4, lsr #4
 80004f4:	20000244 	andcs	r0, r0, r4, asr #4

080004f8 <usb_ep_init_double>:

void usb_ep_init_double(uint8_t epnum, uint8_t ep_type, uint16_t size, epfunc_t func){
 80004f8:	b5f0      	push	{r4, r5, r6, r7, lr}
  if(func == NULL)func = endp_callback_default;
  uint8_t dir_in = (epnum & 0x80);
  epnum &= 0x0F;
  
  ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 80004fa:	f248 0780 	movw	r7, #32896	; 0x8080
  epnum &= 0x0F;
 80004fe:	f000 060f 	and.w	r6, r0, #15
  ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 8000502:	00b5      	lsls	r5, r6, #2
  if(func == NULL)func = endp_callback_default;
 8000504:	4c4a      	ldr	r4, [pc, #296]	; (8000630 <usb_ep_init_double+0x138>)
  ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 8000506:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 800050a:	f505 45b8 	add.w	r5, r5, #23552	; 0x5c00
  if(func == NULL)func = endp_callback_default;
 800050e:	2b00      	cmp	r3, #0
 8000510:	bf08      	it	eq
 8000512:	4623      	moveq	r3, r4
  ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 8000514:	882c      	ldrh	r4, [r5, #0]
  uint16_t buf = USB_EPx(epnum);
  buf = (buf & ~(USB_EP_DTOG_RX | USB_EP_DTOG_TX | USB_EPTX_STAT | USB_EPRX_STAT)) | USB_EP_CTR_RX | USB_EP_CTR_TX;
  buf = (buf & ~USB_EPADDR_FIELD) | epnum;
  
  buf &=~ USB_EP_T_FIELD;
  switch(ep_type){
 8000516:	2902      	cmp	r1, #2
  ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 8000518:	f024 04c0 	bic.w	r4, r4, #192	; 0xc0
 800051c:	ea4f 5404 	mov.w	r4, r4, lsl #20
 8000520:	ea4f 5414 	mov.w	r4, r4, lsr #20
 8000524:	ea44 0407 	orr.w	r4, r4, r7
 8000528:	802c      	strh	r4, [r5, #0]
  ENDP_STAT_RX(epnum, USB_EP_RX_DIS);
 800052a:	882c      	ldrh	r4, [r5, #0]
 800052c:	f024 04f0 	bic.w	r4, r4, #240	; 0xf0
 8000530:	ea4f 4484 	mov.w	r4, r4, lsl #18
 8000534:	ea4f 4494 	mov.w	r4, r4, lsr #18
 8000538:	ea47 0704 	orr.w	r7, r7, r4
 800053c:	802f      	strh	r7, [r5, #0]
  uint16_t buf = USB_EPx(epnum);
 800053e:	882c      	ldrh	r4, [r5, #0]
  buf &=~ USB_EP_T_FIELD;
 8000540:	f404 6410 	and.w	r4, r4, #2304	; 0x900
 8000544:	ea44 0406 	orr.w	r4, r4, r6
  switch(ep_type){
 8000548:	d02f      	beq.n	80005aa <usb_ep_init_double+0xb2>
 800054a:	2903      	cmp	r1, #3
 800054c:	d030      	beq.n	80005b0 <usb_ep_init_double+0xb8>
 800054e:	bb91      	cbnz	r1, 80005b6 <usb_ep_init_double+0xbe>
    case USB_ENDP_CTRL: buf |= USB_EP_CONTROL; break;
 8000550:	f444 4102 	orr.w	r1, r4, #33280	; 0x8200
 8000554:	f8df c0e4 	ldr.w	ip, [pc, #228]	; 800063c <usb_ep_init_double+0x144>
    case USB_ENDP_BULK: buf |= USB_EP_BULK | USB_EP_KIND; break;
    case USB_ENDP_INTR: buf |= USB_EP_INTERRUPT; break;
    default: buf |= USB_EP_ISOCHRONOUS; //в дескрипторах изохронные точки могут иметь расширенные настройки
 8000558:	f041 0180 	orr.w	r1, r1, #128	; 0x80
  }
  USB_EPx(epnum) = buf;
 800055c:	8029      	strh	r1, [r5, #0]
  
#define USB_EP_SWBUF_TX     USB_EP_DTOG_RX
#define USB_EP_SWBUF_RX     USB_EP_DTOG_TX
  if( dir_in ){
 800055e:	f8bc 4000 	ldrh.w	r4, [ip]
 8000562:	0131      	lsls	r1, r6, #4
 8000564:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8000568:	f010 0f80 	tst.w	r0, #128	; 0x80
 800056c:	f501 41c0 	add.w	r1, r1, #24576	; 0x6000
 8000570:	eb02 0704 	add.w	r7, r2, r4
 8000574:	4660      	mov	r0, ip
 8000576:	d021      	beq.n	80005bc <usb_ep_init_double+0xc4>
    usb_epdata[epnum].usb_tx_addr = lastaddr;
    usb_epdata[epnum].usb_tx_count = 0;
 8000578:	f04f 0c00 	mov.w	ip, #0
    usb_epdata[epnum].usb_tx_addr = lastaddr;
 800057c:	600c      	str	r4, [r1, #0]
    usb_epdata[epnum].usb_tx_count = 0;
 800057e:	f8c1 c004 	str.w	ip, [r1, #4]
    usb_epdata[epnum].usb_rx_addr = lastaddr + size;
 8000582:	608f      	str	r7, [r1, #8]
    usb_epdata[epnum].usb_rx_count = 0;
 8000584:	f8c1 c00c 	str.w	ip, [r1, #12]
    
    buf = USB_EPx(epnum);
 8000588:	8829      	ldrh	r1, [r5, #0]
    USB_EPx(epnum) = (buf ^ USB_EP_TX_VALID) & (USB_EPREG_MASK | USB_EPTX_STAT | USB_EP_DTOG_TX | USB_EP_SWBUF_TX);
 800058a:	f081 0130 	eor.w	r1, r1, #48	; 0x30
 800058e:	f421 5140 	bic.w	r1, r1, #12288	; 0x3000
 8000592:	b289      	uxth	r1, r1
      usb_epdata[epnum].rx_blocksize = usb_epdata[epnum].tx_blocksize = 1;
      if(size < 32)size = 32;
      usb_epdata[epnum].rx_num_blocks = usb_epdata[epnum].tx_num_blocks = size / 32 - 1;
    }
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
    ENDP_STAT_TX(epnum, USB_EP_TX_VALID);
 8000594:	8029      	strh	r1, [r5, #0]
  }
  epfunc_in[epnum] = func;
 8000596:	4927      	ldr	r1, [pc, #156]	; (8000634 <usb_ep_init_double+0x13c>)
  epfunc_out[epnum]= func;
    
  lastaddr += 2*size;
 8000598:	eb04 0242 	add.w	r2, r4, r2, lsl #1
  epfunc_in[epnum] = func;
 800059c:	f841 3026 	str.w	r3, [r1, r6, lsl #2]
  epfunc_out[epnum]= func;
 80005a0:	4925      	ldr	r1, [pc, #148]	; (8000638 <usb_ep_init_double+0x140>)
  lastaddr += 2*size;
 80005a2:	8002      	strh	r2, [r0, #0]
  epfunc_out[epnum]= func;
 80005a4:	f841 3026 	str.w	r3, [r1, r6, lsl #2]
}
 80005a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    case USB_ENDP_BULK: buf |= USB_EP_BULK | USB_EP_KIND; break;
 80005aa:	f444 4101 	orr.w	r1, r4, #33024	; 0x8100
 80005ae:	e7d1      	b.n	8000554 <usb_ep_init_double+0x5c>
    case USB_ENDP_INTR: buf |= USB_EP_INTERRUPT; break;
 80005b0:	f444 4106 	orr.w	r1, r4, #34304	; 0x8600
 80005b4:	e7ce      	b.n	8000554 <usb_ep_init_double+0x5c>
    default: buf |= USB_EP_ISOCHRONOUS; //в дескрипторах изохронные точки могут иметь расширенные настройки
 80005b6:	f444 4104 	orr.w	r1, r4, #33792	; 0x8400
 80005ba:	e7cb      	b.n	8000554 <usb_ep_init_double+0x5c>
    usb_epdata[epnum].usb_rx_addr = lastaddr;
 80005bc:	608c      	str	r4, [r1, #8]
    if(size < 64){
 80005be:	2a3f      	cmp	r2, #63	; 0x3f
    usb_epdata[epnum].usb_tx_addr = lastaddr + size;
 80005c0:	600f      	str	r7, [r1, #0]
      usb_epdata[epnum].rx_blocksize = usb_epdata[epnum].tx_blocksize = 0;
 80005c2:	888f      	ldrh	r7, [r1, #4]
    if(size < 64){
 80005c4:	d828      	bhi.n	8000618 <usb_ep_init_double+0x120>
      usb_epdata[epnum].rx_blocksize = usb_epdata[epnum].tx_blocksize = 0;
 80005c6:	f36f 37cf 	bfc	r7, #15, #1
 80005ca:	808f      	strh	r7, [r1, #4]
 80005cc:	898f      	ldrh	r7, [r1, #12]
 80005ce:	f36f 37cf 	bfc	r7, #15, #1
 80005d2:	818f      	strh	r7, [r1, #12]
      usb_epdata[epnum].rx_num_blocks = usb_epdata[epnum].tx_num_blocks = size / 2;
 80005d4:	f3c2 0744 	ubfx	r7, r2, #1, #5
      usb_epdata[epnum].rx_num_blocks = usb_epdata[epnum].tx_num_blocks = size / 32 - 1;
 80005d8:	f8b1 c004 	ldrh.w	ip, [r1, #4]
 80005dc:	f367 2c8e 	bfi	ip, r7, #10, #5
 80005e0:	f8a1 c004 	strh.w	ip, [r1, #4]
 80005e4:	f8b1 c00c 	ldrh.w	ip, [r1, #12]
 80005e8:	f367 2c8e 	bfi	ip, r7, #10, #5
 80005ec:	f8a1 c00c 	strh.w	ip, [r1, #12]
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
 80005f0:	8829      	ldrh	r1, [r5, #0]
 80005f2:	f021 01f0 	bic.w	r1, r1, #240	; 0xf0
 80005f6:	0489      	lsls	r1, r1, #18
 80005f8:	0c89      	lsrs	r1, r1, #18
 80005fa:	f481 4130 	eor.w	r1, r1, #45056	; 0xb000
 80005fe:	f081 0180 	eor.w	r1, r1, #128	; 0x80
 8000602:	8029      	strh	r1, [r5, #0]
    ENDP_STAT_TX(epnum, USB_EP_TX_VALID);
 8000604:	8829      	ldrh	r1, [r5, #0]
 8000606:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 800060a:	0509      	lsls	r1, r1, #20
 800060c:	0d09      	lsrs	r1, r1, #20
 800060e:	f481 4100 	eor.w	r1, r1, #32768	; 0x8000
 8000612:	f081 01b0 	eor.w	r1, r1, #176	; 0xb0
 8000616:	e7bd      	b.n	8000594 <usb_ep_init_double+0x9c>
      usb_epdata[epnum].rx_blocksize = usb_epdata[epnum].tx_blocksize = 1;
 8000618:	f447 4700 	orr.w	r7, r7, #32768	; 0x8000
 800061c:	808f      	strh	r7, [r1, #4]
 800061e:	898f      	ldrh	r7, [r1, #12]
 8000620:	f447 4700 	orr.w	r7, r7, #32768	; 0x8000
 8000624:	818f      	strh	r7, [r1, #12]
      usb_epdata[epnum].rx_num_blocks = usb_epdata[epnum].tx_num_blocks = size / 32 - 1;
 8000626:	0957      	lsrs	r7, r2, #5
 8000628:	3f01      	subs	r7, #1
 800062a:	f007 071f 	and.w	r7, r7, #31
 800062e:	e7d3      	b.n	80005d8 <usb_ep_init_double+0xe0>
 8000630:	08000365 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9}
 8000634:	20000224 	andcs	r0, r0, r4, lsr #4
 8000638:	20000244 	andcs	r0, r0, r4, asr #4
 800063c:	20000000 	andcs	r0, r0, r0

08000640 <USB_LP_IRQHandler>:

// standard IRQ handler
void USB_LP_IRQHandler(){
 8000640:	b538      	push	{r3, r4, r5, lr}
  if(USB->ISTR & USB_ISTR_RESET){
 8000642:	4c42      	ldr	r4, [pc, #264]	; (800074c <USB_LP_IRQHandler+0x10c>)
 8000644:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 8000648:	055d      	lsls	r5, r3, #21
 800064a:	d52c      	bpl.n	80006a6 <USB_LP_IRQHandler+0x66>
    usb_class_disconnect();
 800064c:	f7ff fe8c 	bl	8000368 <usb_class_disconnect>
    USB->CNTR = USB_CNTR_RESETM | USB_CNTR_CTRM | USB_CNTR_SUSPM | USB_CNTR_WKUPM;
 8000650:	f44f 431c 	mov.w	r3, #39936	; 0x9c00
    lastaddr = LASTADDR_DEFAULT;
 8000654:	2240      	movs	r2, #64	; 0x40
    USB->CNTR = USB_CNTR_RESETM | USB_CNTR_CTRM | USB_CNTR_SUSPM | USB_CNTR_WKUPM;
 8000656:	f8a4 3040 	strh.w	r3, [r4, #64]	; 0x40
    lastaddr = LASTADDR_DEFAULT;
 800065a:	4b3d      	ldr	r3, [pc, #244]	; (8000750 <USB_LP_IRQHandler+0x110>)
 800065c:	493d      	ldr	r1, [pc, #244]	; (8000754 <USB_LP_IRQHandler+0x114>)
 800065e:	801a      	strh	r2, [r3, #0]
    USB->DADDR = USB_DADDR_EF;
 8000660:	2380      	movs	r3, #128	; 0x80
    for(uint8_t i=0; i<STM32ENDPOINTS; i++){
      epfunc_in[i] = epfunc_out[i] = NULL;
 8000662:	2200      	movs	r2, #0
    USB->DADDR = USB_DADDR_EF;
 8000664:	f8a4 304c 	strh.w	r3, [r4, #76]	; 0x4c
 8000668:	2408      	movs	r4, #8
 800066a:	4b3b      	ldr	r3, [pc, #236]	; (8000758 <USB_LP_IRQHandler+0x118>)
      epfunc_in[i] = epfunc_out[i] = NULL;
 800066c:	3c01      	subs	r4, #1
    for(uint8_t i=0; i<STM32ENDPOINTS; i++){
 800066e:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
      epfunc_in[i] = epfunc_out[i] = NULL;
 8000672:	f841 2b04 	str.w	r2, [r1], #4
 8000676:	f843 2b04 	str.w	r2, [r3], #4
    for(uint8_t i=0; i<STM32ENDPOINTS; i++){
 800067a:	d1f7      	bne.n	800066c <USB_LP_IRQHandler+0x2c>
    }
    // state is default - wait for enumeration
    USB->ISTR = (uint16_t)~USB_ISTR_RESET;
 800067c:	f64f 32ff 	movw	r2, #64511	; 0xfbff
 8000680:	4b32      	ldr	r3, [pc, #200]	; (800074c <USB_LP_IRQHandler+0x10c>)
    usb_ep_init(0x00, USB_ENDP_CTRL, USB_EP0_BUFSZ, ep0_out);
 8000682:	4621      	mov	r1, r4
    USB->ISTR = (uint16_t)~USB_ISTR_RESET;
 8000684:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
    usb_ep_init(0x00, USB_ENDP_CTRL, USB_EP0_BUFSZ, ep0_out);
 8000688:	4620      	mov	r0, r4
 800068a:	4b34      	ldr	r3, [pc, #208]	; (800075c <USB_LP_IRQHandler+0x11c>)
 800068c:	2208      	movs	r2, #8
 800068e:	f7ff fea7 	bl	80003e0 <usb_ep_init>
    usb_ep_init(0x80, USB_ENDP_CTRL, USB_EP0_BUFSZ, ep0_in);
 8000692:	4b33      	ldr	r3, [pc, #204]	; (8000760 <USB_LP_IRQHandler+0x120>)
 8000694:	2208      	movs	r2, #8
 8000696:	4621      	mov	r1, r4
 8000698:	2080      	movs	r0, #128	; 0x80
 800069a:	f7ff fea1 	bl	80003e0 <usb_ep_init>
    ep0_buf = NULL;
 800069e:	4b31      	ldr	r3, [pc, #196]	; (8000764 <USB_LP_IRQHandler+0x124>)
 80006a0:	601c      	str	r4, [r3, #0]
    usb_class_init();
 80006a2:	f000 fafa 	bl	8000c9a <usb_class_init>
  }
  
  if(USB->ISTR & USB_ISTR_CTR){
 80006a6:	4b29      	ldr	r3, [pc, #164]	; (800074c <USB_LP_IRQHandler+0x10c>)
 80006a8:	f8b3 2044 	ldrh.w	r2, [r3, #68]	; 0x44
 80006ac:	0414      	lsls	r4, r2, #16
 80006ae:	d529      	bpl.n	8000704 <USB_LP_IRQHandler+0xc4>
    uint8_t epnum = USB->ISTR & USB_ISTR_EP_ID;
 80006b0:	f8b3 5044 	ldrh.w	r5, [r3, #68]	; 0x44
 80006b4:	f005 050f 	and.w	r5, r5, #15
    if(USB_EPx(epnum) & USB_EP_CTR_RX){ //OUT
 80006b8:	00ac      	lsls	r4, r5, #2
 80006ba:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
 80006be:	f504 44b8 	add.w	r4, r4, #23552	; 0x5c00
 80006c2:	8823      	ldrh	r3, [r4, #0]
 80006c4:	0418      	lsls	r0, r3, #16
 80006c6:	d50c      	bpl.n	80006e2 <USB_LP_IRQHandler+0xa2>
      epfunc_out[epnum](epnum);
 80006c8:	4b22      	ldr	r3, [pc, #136]	; (8000754 <USB_LP_IRQHandler+0x114>)
 80006ca:	4628      	mov	r0, r5
 80006cc:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 80006d0:	4798      	blx	r3
      ENDP_CTR_RX_CLR(epnum);
 80006d2:	8823      	ldrh	r3, [r4, #0]
 80006d4:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80006d8:	051b      	lsls	r3, r3, #20
 80006da:	0d1b      	lsrs	r3, r3, #20
 80006dc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80006e0:	8023      	strh	r3, [r4, #0]
    }
    if(USB_EPx(epnum) & USB_EP_CTR_TX){//IN
 80006e2:	8823      	ldrh	r3, [r4, #0]
 80006e4:	0619      	lsls	r1, r3, #24
 80006e6:	d50d      	bpl.n	8000704 <USB_LP_IRQHandler+0xc4>
      epfunc_in[epnum](epnum | 0x80);
 80006e8:	4b1b      	ldr	r3, [pc, #108]	; (8000758 <USB_LP_IRQHandler+0x118>)
 80006ea:	f045 0080 	orr.w	r0, r5, #128	; 0x80
 80006ee:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 80006f2:	4798      	blx	r3
      ENDP_CTR_TX_CLR(epnum);
 80006f4:	8823      	ldrh	r3, [r4, #0]
 80006f6:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80006fa:	051b      	lsls	r3, r3, #20
 80006fc:	0d1b      	lsrs	r3, r3, #20
 80006fe:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000702:	8023      	strh	r3, [r4, #0]
    }
  }
  
  if(USB->ISTR & USB_ISTR_SUSP){ // suspend -> still no connection, may sleep
 8000704:	4c11      	ldr	r4, [pc, #68]	; (800074c <USB_LP_IRQHandler+0x10c>)
 8000706:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 800070a:	051a      	lsls	r2, r3, #20
 800070c:	d50b      	bpl.n	8000726 <USB_LP_IRQHandler+0xe6>
    usb_class_disconnect();
 800070e:	f7ff fe2b 	bl	8000368 <usb_class_disconnect>
    USB->CNTR |= USB_CNTR_FSUSP | USB_CNTR_LP_MODE;
 8000712:	f8b4 3040 	ldrh.w	r3, [r4, #64]	; 0x40
 8000716:	f043 030c 	orr.w	r3, r3, #12
 800071a:	f8a4 3040 	strh.w	r3, [r4, #64]	; 0x40
    USB->ISTR = (uint16_t)~USB_ISTR_SUSP;
 800071e:	f24f 73ff 	movw	r3, #63487	; 0xf7ff
 8000722:	f8a4 3044 	strh.w	r3, [r4, #68]	; 0x44
  }
  
  if(USB->ISTR & USB_ISTR_WKUP){ // wakeup
 8000726:	4a09      	ldr	r2, [pc, #36]	; (800074c <USB_LP_IRQHandler+0x10c>)
 8000728:	f8b2 3044 	ldrh.w	r3, [r2, #68]	; 0x44
 800072c:	04db      	lsls	r3, r3, #19
 800072e:	d50b      	bpl.n	8000748 <USB_LP_IRQHandler+0x108>
    USB->CNTR &= ~(USB_CNTR_FSUSP | USB_CNTR_LP_MODE); // clear suspend flags
 8000730:	f8b2 3040 	ldrh.w	r3, [r2, #64]	; 0x40
 8000734:	f023 030c 	bic.w	r3, r3, #12
 8000738:	041b      	lsls	r3, r3, #16
 800073a:	0c1b      	lsrs	r3, r3, #16
 800073c:	f8a2 3040 	strh.w	r3, [r2, #64]	; 0x40
    USB->ISTR = (uint16_t)~USB_ISTR_WKUP;
 8000740:	f64e 73ff 	movw	r3, #61439	; 0xefff
 8000744:	f8a2 3044 	strh.w	r3, [r2, #68]	; 0x44
  }
}
 8000748:	bd38      	pop	{r3, r4, r5, pc}
 800074a:	bf00      	nop
 800074c:	40005c00 	andmi	r5, r0, r0, lsl #24
 8000750:	20000000 	andcs	r0, r0, r0
 8000754:	20000244 	andcs	r0, r0, r4, asr #4
 8000758:	20000224 	andcs	r0, r0, r4, lsr #4
 800075c:	08000873 	stmdaeq	r0, {r0, r1, r4, r5, r6, fp}
 8000760:	080007bd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r8, r9, sl}
 8000764:	2000000c 	andcs	r0, r0, ip

08000768 <_usb_ep_write>:
      uint32_t rx_blocksize:1;
    };
  };
}pma_descr_t;

void _usb_ep_write(uint8_t idx, const uint8_t *buf, uint16_t size){
 8000768:	b5f0      	push	{r4, r5, r6, r7, lr}
  pma_descr_t *descr = &((pma_descr_t*)usb_epdata)[idx];
  uint16_t N2 = (size + 1) >> 1;
  // the buffer is 16-bit, so we should copy data as it would be uint16_t
  uint16_t *buf16 = (uint16_t *)buf;
  uint32_t *out = (uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
  for(uint16_t i = 0; i < N2; ++i, ++out){
 800076a:	2500      	movs	r5, #0
  pma_descr_t *descr = &((pma_descr_t*)usb_epdata)[idx];
 800076c:	00c4      	lsls	r4, r0, #3
 800076e:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
 8000772:	f504 44c0 	add.w	r4, r4, #24576	; 0x6000
  uint32_t *out = (uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
 8000776:	6823      	ldr	r3, [r4, #0]
  uint16_t N2 = (size + 1) >> 1;
 8000778:	1c56      	adds	r6, r2, #1
  uint32_t *out = (uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
 800077a:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
 800077e:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
  uint16_t N2 = (size + 1) >> 1;
 8000782:	0876      	lsrs	r6, r6, #1
  uint32_t *out = (uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
 8000784:	005b      	lsls	r3, r3, #1
  for(uint16_t i = 0; i < N2; ++i, ++out){
 8000786:	b2af      	uxth	r7, r5
 8000788:	42be      	cmp	r6, r7
 800078a:	d811      	bhi.n	80007b0 <_usb_ep_write+0x48>
    *out = buf16[i];
  }
  descr->count = size;
  
  ENDP_STAT_TX((idx/2), USB_EP_TX_VALID);
 800078c:	0840      	lsrs	r0, r0, #1
 800078e:	0080      	lsls	r0, r0, #2
 8000790:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
  descr->count = size;
 8000794:	6062      	str	r2, [r4, #4]
  ENDP_STAT_TX((idx/2), USB_EP_TX_VALID);
 8000796:	f500 40b8 	add.w	r0, r0, #23552	; 0x5c00
 800079a:	8803      	ldrh	r3, [r0, #0]
 800079c:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 80007a0:	051b      	lsls	r3, r3, #20
 80007a2:	0d1b      	lsrs	r3, r3, #20
 80007a4:	f483 4300 	eor.w	r3, r3, #32768	; 0x8000
 80007a8:	f083 03b0 	eor.w	r3, r3, #176	; 0xb0
 80007ac:	8003      	strh	r3, [r0, #0]
}
 80007ae:	bdf0      	pop	{r4, r5, r6, r7, pc}
    *out = buf16[i];
 80007b0:	f831 7015 	ldrh.w	r7, [r1, r5, lsl #1]
 80007b4:	f843 7025 	str.w	r7, [r3, r5, lsl #2]
 80007b8:	3501      	adds	r5, #1
 80007ba:	e7e4      	b.n	8000786 <_usb_ep_write+0x1e>

080007bc <ep0_in>:
static void ep0_in(uint8_t epnum){
 80007bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if( (USB->DADDR & USB_DADDR_ADD) != USB_Addr ){
 80007be:	4b14      	ldr	r3, [pc, #80]	; (8000810 <ep0_in+0x54>)
 80007c0:	4c14      	ldr	r4, [pc, #80]	; (8000814 <ep0_in+0x58>)
 80007c2:	f8b3 104c 	ldrh.w	r1, [r3, #76]	; 0x4c
 80007c6:	7922      	ldrb	r2, [r4, #4]
 80007c8:	f001 017f 	and.w	r1, r1, #127	; 0x7f
 80007cc:	4291      	cmp	r1, r2
    USB->DADDR = USB_DADDR_EF | USB_Addr;
 80007ce:	bf1c      	itt	ne
 80007d0:	f042 0280 	orrne.w	r2, r2, #128	; 0x80
 80007d4:	f8a3 204c 	strhne.w	r2, [r3, #76]	; 0x4c
  if( (USB_EPx(0) & USB_EPTX_STAT) == USB_EP_TX_VALID )return;
 80007d8:	881b      	ldrh	r3, [r3, #0]
 80007da:	f003 0330 	and.w	r3, r3, #48	; 0x30
 80007de:	2b30      	cmp	r3, #48	; 0x30
 80007e0:	d014      	beq.n	800080c <ep0_in+0x50>
  if(ep0_buf == NULL)return;
 80007e2:	6825      	ldr	r5, [r4, #0]
 80007e4:	b195      	cbz	r5, 800080c <ep0_in+0x50>
  uint16_t left = ep0_count;
 80007e6:	88e7      	ldrh	r7, [r4, #6]

#define ENDP_TOG(num, tog) do{USB_EPx(num) = ((USB_EPx(num) & ~(USB_EP_DTOG_RX | USB_EP_DTOG_TX | USB_EPRX_STAT | USB_EPTX_STAT)) | USB_EP_CTR_RX | USB_EP_CTR_TX) | tog; }while(0)

void _usb_ep_write(uint8_t idx, const uint8_t *buf, uint16_t size);
static inline void usb_ep_write(uint8_t epnum, const uint8_t *buf, uint16_t size){
  _usb_ep_write((epnum & 0x0F)*2, buf, size);
 80007e8:	4629      	mov	r1, r5
 80007ea:	2f08      	cmp	r7, #8
 80007ec:	463e      	mov	r6, r7
 80007ee:	bf28      	it	cs
 80007f0:	2608      	movcs	r6, #8
 80007f2:	2000      	movs	r0, #0
 80007f4:	4632      	mov	r2, r6
 80007f6:	f7ff ffb7 	bl	8000768 <_usb_ep_write>
  if(left < USB_EP0_BUFSZ){
 80007fa:	2f07      	cmp	r7, #7
  ep0_count -= left;
 80007fc:	eba7 0306 	sub.w	r3, r7, r6
 8000800:	80e3      	strh	r3, [r4, #6]
    ep0_buf = NULL;
 8000802:	bf93      	iteet	ls
 8000804:	2300      	movls	r3, #0
  ep0_buf += left;
 8000806:	19ad      	addhi	r5, r5, r6
 8000808:	6025      	strhi	r5, [r4, #0]
    ep0_buf = NULL;
 800080a:	6023      	strls	r3, [r4, #0]
}
 800080c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800080e:	bf00      	nop
 8000810:	40005c00 	andmi	r5, r0, r0, lsl #24
 8000814:	2000000c 	andcs	r0, r0, ip

08000818 <_usb_ep_read>:

int _usb_ep_read(uint8_t idx, uint16_t *buf){
 8000818:	b530      	push	{r4, r5, lr}
  pma_descr_t *descr = &((pma_descr_t*)usb_epdata)[idx];
 800081a:	00c2      	lsls	r2, r0, #3
 800081c:	f102 4280 	add.w	r2, r2, #1073741824	; 0x40000000
 8000820:	f502 42c0 	add.w	r2, r2, #24576	; 0x6000
int _usb_ep_read(uint8_t idx, uint16_t *buf){
 8000824:	4603      	mov	r3, r0
  int sz = descr->rx_count;
 8000826:	6850      	ldr	r0, [r2, #4]
 8000828:	f3c0 0009 	ubfx	r0, r0, #0, #10
  if(!sz) return 0;
 800082c:	b300      	cbz	r0, 8000870 <_usb_ep_read+0x58>
  int n = (sz + 1) >> 1;
  uint32_t *in = (uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
 800082e:	6812      	ldr	r2, [r2, #0]
  int n = (sz + 1) >> 1;
 8000830:	1c44      	adds	r4, r0, #1
  uint32_t *in = (uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
 8000832:	f102 5200 	add.w	r2, r2, #536870912	; 0x20000000
 8000836:	f502 5240 	add.w	r2, r2, #12288	; 0x3000
 800083a:	0052      	lsls	r2, r2, #1
  int n = (sz + 1) >> 1;
 800083c:	1064      	asrs	r4, r4, #1
 800083e:	3902      	subs	r1, #2
 8000840:	eb02 0484 	add.w	r4, r2, r4, lsl #2
  for(int i = 0; i < n; ++i, ++in)
    buf[i] = *(uint16_t*)in;
 8000844:	f832 5b04 	ldrh.w	r5, [r2], #4
  for(int i = 0; i < n; ++i, ++in)
 8000848:	42a2      	cmp	r2, r4
    buf[i] = *(uint16_t*)in;
 800084a:	f821 5f02 	strh.w	r5, [r1, #2]!
  for(int i = 0; i < n; ++i, ++in)
 800084e:	d1f9      	bne.n	8000844 <_usb_ep_read+0x2c>
  
  ENDP_STAT_RX((idx/2), USB_EP_RX_VALID);
 8000850:	085b      	lsrs	r3, r3, #1
 8000852:	009b      	lsls	r3, r3, #2
 8000854:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8000858:	f503 43b8 	add.w	r3, r3, #23552	; 0x5c00
 800085c:	881a      	ldrh	r2, [r3, #0]
 800085e:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 8000862:	0492      	lsls	r2, r2, #18
 8000864:	0c92      	lsrs	r2, r2, #18
 8000866:	f482 4230 	eor.w	r2, r2, #45056	; 0xb000
 800086a:	f082 0280 	eor.w	r2, r2, #128	; 0x80
 800086e:	801a      	strh	r2, [r3, #0]
  return sz;
}
 8000870:	bd30      	pop	{r4, r5, pc}

08000872 <ep0_out>:
static void ep0_out(uint8_t epnum){
 8000872:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint16_t rxcount = usb_epdata[0].rx_count;
 8000874:	4b3f      	ldr	r3, [pc, #252]	; (8000974 <ep0_out+0x102>)
 8000876:	4c40      	ldr	r4, [pc, #256]	; (8000978 <ep0_out+0x106>)
 8000878:	68dd      	ldr	r5, [r3, #12]
  uint8_t setup = !!(USB_EPx(0) & USB_EP_SETUP);
 800087a:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 800087e:	881b      	ldrh	r3, [r3, #0]
  uint16_t rxcount = usb_epdata[0].rx_count;
 8000880:	f3c5 0509 	ubfx	r5, r5, #0, #10
  if( setup ){
 8000884:	f413 6600 	ands.w	r6, r3, #2048	; 0x800
 8000888:	d009      	beq.n	800089e <ep0_out+0x2c>
    if( setup_packet.bmRequestType & 0x80 ){ //предыдущий пакет=IN, этот точно будет запросом
 800088a:	f994 3008 	ldrsb.w	r3, [r4, #8]
 800088e:	2b00      	cmp	r3, #0
 8000890:	da17      	bge.n	80008c2 <ep0_out+0x50>
      bytesread = 0;
 8000892:	2500      	movs	r5, #0
  _usb_ep_write(idx, buf, size);
}

int _usb_ep_read(uint8_t idx, uint16_t *buf);
static inline int usb_ep_read(uint8_t epnum, uint16_t *buf){
  return _usb_ep_read((epnum & 0x0F)*2 + 1, buf);
 8000894:	4939      	ldr	r1, [pc, #228]	; (800097c <ep0_out+0x10a>)
 8000896:	2001      	movs	r0, #1
 8000898:	f7ff ffbe 	bl	8000818 <_usb_ep_read>
 800089c:	8225      	strh	r5, [r4, #16]
  uint8_t req = setup_packet.bmRequestType & 0x7F;
 800089e:	7a22      	ldrb	r2, [r4, #8]
 80008a0:	f002 037f 	and.w	r3, r2, #127	; 0x7f
  if(setup_packet.bmRequestType & 0x80){
 80008a4:	0612      	lsls	r2, r2, #24
 80008a6:	d53c      	bpl.n	8000922 <ep0_out+0xb0>
    if( !setup )return; //какой-то костыль. Иначе вызывается два раза
 80008a8:	b34e      	cbz	r6, 80008fe <ep0_out+0x8c>
    if(req == (USB_REQ_STANDARD | USB_REQ_DEVICE)){
 80008aa:	bb73      	cbnz	r3, 800090a <ep0_out+0x98>
      switch(setup_packet.bRequest){
 80008ac:	7a60      	ldrb	r0, [r4, #9]
 80008ae:	2806      	cmp	r0, #6
 80008b0:	d00c      	beq.n	80008cc <ep0_out+0x5a>
 80008b2:	2808      	cmp	r0, #8
 80008b4:	d025      	beq.n	8000902 <ep0_out+0x90>
 80008b6:	bb40      	cbnz	r0, 800090a <ep0_out+0x98>
  _usb_ep_write((epnum & 0x0F)*2, buf, size);
 80008b8:	2202      	movs	r2, #2
 80008ba:	4931      	ldr	r1, [pc, #196]	; (8000980 <ep0_out+0x10e>)
 80008bc:	f7ff ff54 	bl	8000768 <_usb_ep_write>
 80008c0:	e01d      	b.n	80008fe <ep0_out+0x8c>
      if( bytesread >= setup_packet.wLength ){
 80008c2:	89e2      	ldrh	r2, [r4, #14]
 80008c4:	8a23      	ldrh	r3, [r4, #16]
 80008c6:	429a      	cmp	r2, r3
 80008c8:	d8e9      	bhi.n	800089e <ep0_out+0x2c>
 80008ca:	e7e2      	b.n	8000892 <ep0_out+0x20>
          const void *data = ZLPP;
 80008cc:	2201      	movs	r2, #1
          usb_class_get_std_descr(setup_packet.wValue, &data, &size);
 80008ce:	a901      	add	r1, sp, #4
          const void *data = ZLPP;
 80008d0:	9201      	str	r2, [sp, #4]
          usb_class_get_std_descr(setup_packet.wValue, &data, &size);
 80008d2:	8960      	ldrh	r0, [r4, #10]
 80008d4:	f10d 0202 	add.w	r2, sp, #2
          uint16_t size = 0;
 80008d8:	f8ad 3002 	strh.w	r3, [sp, #2]
          usb_class_get_std_descr(setup_packet.wValue, &data, &size);
 80008dc:	f000 f914 	bl	8000b08 <usb_class_get_std_descr>
    if(setup_packet.wLength < size) size = setup_packet.wLength;
 80008e0:	89e3      	ldrh	r3, [r4, #14]
 80008e2:	f8bd 2002 	ldrh.w	r2, [sp, #2]
  ep0_in(0x80);
 80008e6:	2080      	movs	r0, #128	; 0x80
    if(setup_packet.wLength < size) size = setup_packet.wLength;
 80008e8:	429a      	cmp	r2, r3
 80008ea:	bf88      	it	hi
 80008ec:	f8ad 3002 	strhhi.w	r3, [sp, #2]
  ep0_count = size;
 80008f0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80008f4:	80e3      	strh	r3, [r4, #6]
  ep0_buf = buf;
 80008f6:	9b01      	ldr	r3, [sp, #4]
 80008f8:	6023      	str	r3, [r4, #0]
  ep0_in(0x80);
 80008fa:	f7ff ff5f 	bl	80007bc <ep0_in>
}
 80008fe:	b002      	add	sp, #8
 8000900:	bd70      	pop	{r4, r5, r6, pc}
 8000902:	2201      	movs	r2, #1
 8000904:	491f      	ldr	r1, [pc, #124]	; (8000984 <ep0_out+0x112>)
 8000906:	4618      	mov	r0, r3
 8000908:	e7d8      	b.n	80008bc <ep0_out+0x4a>
    void *data = ZLPP;
 800090a:	2301      	movs	r3, #1
 800090c:	9301      	str	r3, [sp, #4]
    uint16_t size = 0;
 800090e:	2300      	movs	r3, #0
    usb_class_ep0_in( &setup_packet, &data, &size );
 8000910:	f10d 0202 	add.w	r2, sp, #2
 8000914:	a901      	add	r1, sp, #4
 8000916:	4819      	ldr	r0, [pc, #100]	; (800097c <ep0_out+0x10a>)
    uint16_t size = 0;
 8000918:	f8ad 3002 	strh.w	r3, [sp, #2]
    usb_class_ep0_in( &setup_packet, &data, &size );
 800091c:	f000 f932 	bl	8000b84 <usb_class_ep0_in>
 8000920:	e7de      	b.n	80008e0 <ep0_out+0x6e>
    if(req == (USB_REQ_STANDARD | USB_REQ_DEVICE)){
 8000922:	b96b      	cbnz	r3, 8000940 <ep0_out+0xce>
      if(setup_packet.bRequest == SET_ADDRESS){
 8000924:	7a62      	ldrb	r2, [r4, #9]
 8000926:	2a05      	cmp	r2, #5
 8000928:	d105      	bne.n	8000936 <ep0_out+0xc4>
        USB_Addr = setup_packet.wValue;
 800092a:	8962      	ldrh	r2, [r4, #10]
 800092c:	7122      	strb	r2, [r4, #4]
 800092e:	2200      	movs	r2, #0
 8000930:	4611      	mov	r1, r2
 8000932:	4610      	mov	r0, r2
 8000934:	e7c2      	b.n	80008bc <ep0_out+0x4a>
      }else if(setup_packet.bRequest == SET_CONFIGURATION){
 8000936:	2a09      	cmp	r2, #9
 8000938:	d102      	bne.n	8000940 <ep0_out+0xce>
        configuration = setup_packet.wValue;
 800093a:	8962      	ldrh	r2, [r4, #10]
 800093c:	74a2      	strb	r2, [r4, #18]
 800093e:	e7f6      	b.n	800092e <ep0_out+0xbc>
    if(!usb_class_ep0_out( &setup_packet, bytesread, rxcount )){
 8000940:	462a      	mov	r2, r5
 8000942:	8a21      	ldrh	r1, [r4, #16]
 8000944:	480d      	ldr	r0, [pc, #52]	; (800097c <ep0_out+0x10a>)
 8000946:	f000 f92f 	bl	8000ba8 <usb_class_ep0_out>
 800094a:	b950      	cbnz	r0, 8000962 <ep0_out+0xf0>
      ENDP_STAT_RX(0, USB_EP_RX_VALID);
 800094c:	4a0e      	ldr	r2, [pc, #56]	; (8000988 <ep0_out+0x116>)
 800094e:	8813      	ldrh	r3, [r2, #0]
 8000950:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8000954:	049b      	lsls	r3, r3, #18
 8000956:	0c9b      	lsrs	r3, r3, #18
 8000958:	f483 4330 	eor.w	r3, r3, #45056	; 0xb000
 800095c:	f083 0380 	eor.w	r3, r3, #128	; 0x80
 8000960:	8013      	strh	r3, [r2, #0]
    bytesread += rxcount;
 8000962:	8a23      	ldrh	r3, [r4, #16]
 8000964:	441d      	add	r5, r3
    if( bytesread >= setup_packet.wLength )usb_ep_write(0, NULL, 0);
 8000966:	89e3      	ldrh	r3, [r4, #14]
    bytesread += rxcount;
 8000968:	b2ad      	uxth	r5, r5
    if( bytesread >= setup_packet.wLength )usb_ep_write(0, NULL, 0);
 800096a:	42ab      	cmp	r3, r5
    bytesread += rxcount;
 800096c:	8225      	strh	r5, [r4, #16]
    if( bytesread >= setup_packet.wLength )usb_ep_write(0, NULL, 0);
 800096e:	d8c6      	bhi.n	80008fe <ep0_out+0x8c>
 8000970:	e7dd      	b.n	800092e <ep0_out+0xbc>
 8000972:	bf00      	nop
 8000974:	40006000 	andmi	r6, r0, r0
 8000978:	2000000c 	andcs	r0, r0, ip
 800097c:	20000014 	andcs	r0, r0, r4, lsl r0
 8000980:	08000f04 	stmdaeq	r0, {r2, r8, r9, sl, fp}
 8000984:	2000001e 	andcs	r0, r0, lr, lsl r0
 8000988:	40005c00 	andmi	r5, r0, r0, lsl #24

0800098c <ctl_callback>:
    }
  }
  return 0;
}

void ctl_callback(uint8_t epnum){}
 800098c:	4770      	bx	lr

0800098e <data_in_callback>:
 800098e:	4770      	bx	lr

08000990 <data_out_callback>:
 8000990:	4770      	bx	lr

08000992 <uart_buf_size>:
  volatile uint8_t st,en;
  volatile uint8_t arr[UART_SIZE];
}uart_buffer;

uint8_t uart_buf_size(uart_buffer *buf){
  return ((buf->st - buf->en) & UART_MASK);
 8000992:	7803      	ldrb	r3, [r0, #0]
 8000994:	7840      	ldrb	r0, [r0, #1]
 8000996:	1a18      	subs	r0, r3, r0
}
 8000998:	b2c0      	uxtb	r0, r0
 800099a:	4770      	bx	lr

0800099c <uart_buf_read>:
  return ((buf->st - buf->en) & UART_MASK);
 800099c:	7801      	ldrb	r1, [r0, #0]
 800099e:	7842      	ldrb	r2, [r0, #1]

uint8_t uart_buf_read(uart_buffer *buf){
 80009a0:	4603      	mov	r3, r0
  uint8_t res;
  if(uart_buf_size(buf) == 0)return 0;
 80009a2:	4291      	cmp	r1, r2
 80009a4:	d00b      	beq.n	80009be <uart_buf_read+0x22>
  res = buf->arr[buf->st];
 80009a6:	7802      	ldrb	r2, [r0, #0]
 80009a8:	4402      	add	r2, r0
 80009aa:	7890      	ldrb	r0, [r2, #2]
  buf->st++;
 80009ac:	781a      	ldrb	r2, [r3, #0]
  res = buf->arr[buf->st];
 80009ae:	b2c0      	uxtb	r0, r0
  buf->st++;
 80009b0:	3201      	adds	r2, #1
 80009b2:	b2d2      	uxtb	r2, r2
 80009b4:	701a      	strb	r2, [r3, #0]
  buf->st &= UART_MASK;
 80009b6:	781a      	ldrb	r2, [r3, #0]
 80009b8:	b2d2      	uxtb	r2, r2
 80009ba:	701a      	strb	r2, [r3, #0]
  return res;
 80009bc:	4770      	bx	lr
  if(uart_buf_size(buf) == 0)return 0;
 80009be:	2000      	movs	r0, #0
}
 80009c0:	4770      	bx	lr

080009c2 <uart_buf_write>:
  return ((buf->st - buf->en) & UART_MASK);
 80009c2:	7803      	ldrb	r3, [r0, #0]
 80009c4:	7842      	ldrb	r2, [r0, #1]
 80009c6:	1a9b      	subs	r3, r3, r2

void uart_buf_write(uart_buffer *buf, uint8_t dat){
  if(uart_buf_size(buf)!=1){
 80009c8:	b2db      	uxtb	r3, r3
 80009ca:	2b01      	cmp	r3, #1
 80009cc:	d009      	beq.n	80009e2 <uart_buf_write+0x20>
    buf->arr[buf->en]=dat;
 80009ce:	7843      	ldrb	r3, [r0, #1]
 80009d0:	4403      	add	r3, r0
 80009d2:	7099      	strb	r1, [r3, #2]
    buf->en++; buf->en &= UART_MASK;
 80009d4:	7843      	ldrb	r3, [r0, #1]
 80009d6:	3301      	adds	r3, #1
 80009d8:	b2db      	uxtb	r3, r3
 80009da:	7043      	strb	r3, [r0, #1]
 80009dc:	7843      	ldrb	r3, [r0, #1]
 80009de:	b2db      	uxtb	r3, r3
 80009e0:	7043      	strb	r3, [r0, #1]
  }
}
 80009e2:	4770      	bx	lr

080009e4 <USART1_IRQHandler>:
///////////////////////////////////////////////////////////////////////////////////////////////
#ifdef UART1_EN
static uart_buffer uart1_rx;
static uart_buffer uart1_tx;

void USART1_IRQHandler(void){
 80009e4:	b510      	push	{r4, lr}
  if( USART1->SR & USART_SR_RXNE ){
 80009e6:	4c10      	ldr	r4, [pc, #64]	; (8000a28 <USART1_IRQHandler+0x44>)
 80009e8:	6823      	ldr	r3, [r4, #0]
 80009ea:	069a      	lsls	r2, r3, #26
 80009ec:	d506      	bpl.n	80009fc <USART1_IRQHandler+0x18>
    uint8_t temp = USART1->DR;
 80009ee:	6861      	ldr	r1, [r4, #4]
    uart_buf_write(&uart1_rx, temp);
 80009f0:	480e      	ldr	r0, [pc, #56]	; (8000a2c <USART1_IRQHandler+0x48>)
 80009f2:	b2c9      	uxtb	r1, r1
  }else if( USART1->SR & USART_SR_TXE ){
    if(uart_buf_size(&uart1_tx) != 0)USART1->DR = uart_buf_read(&uart1_tx);
      else USART1->CR1 &=~ USART_CR1_TXEIE;
  }
}
 80009f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    uart_buf_write(&uart1_rx, temp);
 80009f8:	f7ff bfe3 	b.w	80009c2 <uart_buf_write>
  }else if( USART1->SR & USART_SR_TXE ){
 80009fc:	6823      	ldr	r3, [r4, #0]
 80009fe:	061b      	lsls	r3, r3, #24
 8000a00:	d50b      	bpl.n	8000a1a <USART1_IRQHandler+0x36>
  return ((buf->st - buf->en) & UART_MASK);
 8000a02:	480a      	ldr	r0, [pc, #40]	; (8000a2c <USART1_IRQHandler+0x48>)
 8000a04:	f890 2102 	ldrb.w	r2, [r0, #258]	; 0x102
 8000a08:	f890 3103 	ldrb.w	r3, [r0, #259]	; 0x103
    if(uart_buf_size(&uart1_tx) != 0)USART1->DR = uart_buf_read(&uart1_tx);
 8000a0c:	429a      	cmp	r2, r3
 8000a0e:	d005      	beq.n	8000a1c <USART1_IRQHandler+0x38>
 8000a10:	f500 7081 	add.w	r0, r0, #258	; 0x102
 8000a14:	f7ff ffc2 	bl	800099c <uart_buf_read>
 8000a18:	6060      	str	r0, [r4, #4]
}
 8000a1a:	bd10      	pop	{r4, pc}
      else USART1->CR1 &=~ USART_CR1_TXEIE;
 8000a1c:	68e3      	ldr	r3, [r4, #12]
 8000a1e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000a22:	60e3      	str	r3, [r4, #12]
}
 8000a24:	e7f9      	b.n	8000a1a <USART1_IRQHandler+0x36>
 8000a26:	bf00      	nop
 8000a28:	40013800 	andmi	r3, r1, r0, lsl #16
 8000a2c:	2000001f 	andcs	r0, r0, pc, lsl r0

08000a30 <UART1_write>:

void UART1_write(uint8_t *data, uint8_t len){
 8000a30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a32:	4604      	mov	r4, r0
  while(len--)UART_putc(1, *(data++));
 8000a34:	4f07      	ldr	r7, [pc, #28]	; (8000a54 <UART1_write+0x24>)
 8000a36:	4d08      	ldr	r5, [pc, #32]	; (8000a58 <UART1_write+0x28>)
 8000a38:	1846      	adds	r6, r0, r1
 8000a3a:	42b4      	cmp	r4, r6
 8000a3c:	d100      	bne.n	8000a40 <UART1_write+0x10>
}
 8000a3e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  while(len--)UART_putc(1, *(data++));
 8000a40:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000a44:	4638      	mov	r0, r7
 8000a46:	f7ff ffbc 	bl	80009c2 <uart_buf_write>
 8000a4a:	68eb      	ldr	r3, [r5, #12]
 8000a4c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000a50:	60eb      	str	r3, [r5, #12]
 8000a52:	e7f2      	b.n	8000a3a <UART1_write+0xa>
 8000a54:	20000121 	andcs	r0, r0, r1, lsr #2
 8000a58:	40013800 	andmi	r3, r1, r0, lsl #16

08000a5c <UART1_puts>:

void UART1_puts(char *str){
 8000a5c:	b570      	push	{r4, r5, r6, lr}
  while(str[0] != 0)UART_putc(1, *(str++));
 8000a5e:	4e07      	ldr	r6, [pc, #28]	; (8000a7c <UART1_puts+0x20>)
 8000a60:	4d07      	ldr	r5, [pc, #28]	; (8000a80 <UART1_puts+0x24>)
 8000a62:	1e44      	subs	r4, r0, #1
 8000a64:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8000a68:	b901      	cbnz	r1, 8000a6c <UART1_puts+0x10>
}
 8000a6a:	bd70      	pop	{r4, r5, r6, pc}
  while(str[0] != 0)UART_putc(1, *(str++));
 8000a6c:	4630      	mov	r0, r6
 8000a6e:	f7ff ffa8 	bl	80009c2 <uart_buf_write>
 8000a72:	68eb      	ldr	r3, [r5, #12]
 8000a74:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000a78:	60eb      	str	r3, [r5, #12]
 8000a7a:	e7f3      	b.n	8000a64 <UART1_puts+0x8>
 8000a7c:	20000121 	andcs	r0, r0, r1, lsr #2
 8000a80:	40013800 	andmi	r3, r1, r0, lsl #16

08000a84 <UART1_read>:

void UART1_read(uint8_t *data, uint8_t len){
 8000a84:	b570      	push	{r4, r5, r6, lr}
 8000a86:	4604      	mov	r4, r0
  return ((buf->st - buf->en) & UART_MASK);
 8000a88:	4d08      	ldr	r5, [pc, #32]	; (8000aac <UART1_read+0x28>)
 8000a8a:	1846      	adds	r6, r0, r1
  while(len--){
 8000a8c:	42b4      	cmp	r4, r6
 8000a8e:	d100      	bne.n	8000a92 <UART1_read+0xe>
    while(UART_rx_count(1) == 0){}
    *(data++) = UART_getc(1);
  }
}
 8000a90:	bd70      	pop	{r4, r5, r6, pc}
  return ((buf->st - buf->en) & UART_MASK);
 8000a92:	782a      	ldrb	r2, [r5, #0]
 8000a94:	786b      	ldrb	r3, [r5, #1]
    while(UART_rx_count(1) == 0){}
 8000a96:	1a9b      	subs	r3, r3, r2
 8000a98:	f013 0fff 	tst.w	r3, #255	; 0xff
 8000a9c:	d0f9      	beq.n	8000a92 <UART1_read+0xe>
    *(data++) = UART_getc(1);
 8000a9e:	4628      	mov	r0, r5
 8000aa0:	f7ff ff7c 	bl	800099c <uart_buf_read>
 8000aa4:	f804 0b01 	strb.w	r0, [r4], #1
 8000aa8:	e7f0      	b.n	8000a8c <UART1_read+0x8>
 8000aaa:	bf00      	nop
 8000aac:	2000001f 	andcs	r0, r0, pc, lsl r0

08000ab0 <UART1_gets>:

void UART1_gets(char *str, uint8_t len){
 8000ab0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000ab2:	4606      	mov	r6, r0
 8000ab4:	3901      	subs	r1, #1
  return ((buf->st - buf->en) & UART_MASK);
 8000ab6:	4f13      	ldr	r7, [pc, #76]	; (8000b04 <UART1_gets+0x54>)
 8000ab8:	b2cc      	uxtb	r4, r1
  while(len--){
 8000aba:	2cff      	cmp	r4, #255	; 0xff
 8000abc:	4635      	mov	r5, r6
 8000abe:	d10d      	bne.n	8000adc <UART1_gets+0x2c>
    while(UART_rx_count(1) == 0){}
    str[0] = UART_getc(1);
    if(str[0] == 0 || str[0] == 13)break;
    str++;
  }
  if(str[0] != 0){
 8000ac0:	782b      	ldrb	r3, [r5, #0]
 8000ac2:	b153      	cbz	r3, 8000ada <UART1_gets+0x2a>
    if(len < 3)str[0] = 0;
 8000ac4:	2c02      	cmp	r4, #2
      else{ str[0] = 0x0A; str[1] = 0x0D; str[2] = 0; }
 8000ac6:	bf83      	ittte	hi
 8000ac8:	230a      	movhi	r3, #10
 8000aca:	702b      	strbhi	r3, [r5, #0]
 8000acc:	230d      	movhi	r3, #13
    if(len < 3)str[0] = 0;
 8000ace:	2300      	movls	r3, #0
      else{ str[0] = 0x0A; str[1] = 0x0D; str[2] = 0; }
 8000ad0:	bf85      	ittet	hi
 8000ad2:	706b      	strbhi	r3, [r5, #1]
 8000ad4:	2300      	movhi	r3, #0
    if(len < 3)str[0] = 0;
 8000ad6:	702b      	strbls	r3, [r5, #0]
      else{ str[0] = 0x0A; str[1] = 0x0D; str[2] = 0; }
 8000ad8:	70ab      	strbhi	r3, [r5, #2]
  }
}
 8000ada:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  return ((buf->st - buf->en) & UART_MASK);
 8000adc:	783a      	ldrb	r2, [r7, #0]
 8000ade:	787b      	ldrb	r3, [r7, #1]
    while(UART_rx_count(1) == 0){}
 8000ae0:	1a9b      	subs	r3, r3, r2
 8000ae2:	f013 0fff 	tst.w	r3, #255	; 0xff
 8000ae6:	d0f9      	beq.n	8000adc <UART1_gets+0x2c>
    str[0] = UART_getc(1);
 8000ae8:	4638      	mov	r0, r7
 8000aea:	f7ff ff57 	bl	800099c <uart_buf_read>
 8000aee:	f806 0b01 	strb.w	r0, [r6], #1
    if(str[0] == 0 || str[0] == 13)break;
 8000af2:	2800      	cmp	r0, #0
 8000af4:	d0e4      	beq.n	8000ac0 <UART1_gets+0x10>
 8000af6:	1e63      	subs	r3, r4, #1
 8000af8:	280d      	cmp	r0, #13
 8000afa:	b2db      	uxtb	r3, r3
 8000afc:	d0e0      	beq.n	8000ac0 <UART1_gets+0x10>
 8000afe:	461c      	mov	r4, r3
 8000b00:	e7db      	b.n	8000aba <UART1_gets+0xa>
 8000b02:	bf00      	nop
 8000b04:	2000001f 	andcs	r0, r0, pc, lsl r0

08000b08 <usb_class_get_std_descr>:
  switch(descr & 0xFF00){
 8000b08:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8000b0c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000b10:	d010      	beq.n	8000b34 <usb_class_get_std_descr+0x2c>
 8000b12:	d803      	bhi.n	8000b1c <usb_class_get_std_descr+0x14>
 8000b14:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8000b18:	d007      	beq.n	8000b2a <usb_class_get_std_descr+0x22>
 8000b1a:	4770      	bx	lr
 8000b1c:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8000b20:	d010      	beq.n	8000b44 <usb_class_get_std_descr+0x3c>
 8000b22:	f5b3 6fc0 	cmp.w	r3, #1536	; 0x600
 8000b26:	d009      	beq.n	8000b3c <usb_class_get_std_descr+0x34>
 8000b28:	4770      	bx	lr
      *data = &USB_DeviceDescriptor;
 8000b2a:	4b0f      	ldr	r3, [pc, #60]	; (8000b68 <usb_class_get_std_descr+0x60>)
 8000b2c:	600b      	str	r3, [r1, #0]
      *size = sizeof(USB_DeviceDescriptor);
 8000b2e:	2312      	movs	r3, #18
      *size = ((uint8_t*)*data)[0]; //data->bLength
 8000b30:	8013      	strh	r3, [r2, #0]
}
 8000b32:	4770      	bx	lr
      *data = &USB_ConfigDescriptor;
 8000b34:	4b0d      	ldr	r3, [pc, #52]	; (8000b6c <usb_class_get_std_descr+0x64>)
 8000b36:	600b      	str	r3, [r1, #0]
      *size = sizeof(USB_ConfigDescriptor);
 8000b38:	2343      	movs	r3, #67	; 0x43
 8000b3a:	e7f9      	b.n	8000b30 <usb_class_get_std_descr+0x28>
      *data = &USB_DeviceQualifierDescriptor;
 8000b3c:	4b0c      	ldr	r3, [pc, #48]	; (8000b70 <usb_class_get_std_descr+0x68>)
 8000b3e:	600b      	str	r3, [r1, #0]
      *size = USB_DeviceQualifierDescriptor[0];
 8000b40:	230a      	movs	r3, #10
 8000b42:	e7f5      	b.n	8000b30 <usb_class_get_std_descr+0x28>
      switch(descr & 0xFF){
 8000b44:	b2c0      	uxtb	r0, r0
 8000b46:	2803      	cmp	r0, #3
 8000b48:	d8f3      	bhi.n	8000b32 <usb_class_get_std_descr+0x2a>
 8000b4a:	e8df f000 	tbb	[pc, r0]
 8000b4e:	0b090702 	bleq	824275e <__exidx_end+0x2417ca>
          *data = &USB_StringLangDescriptor;
 8000b52:	4b08      	ldr	r3, [pc, #32]	; (8000b74 <usb_class_get_std_descr+0x6c>)
          *data = &USB_StringSerialDescriptor;
 8000b54:	600b      	str	r3, [r1, #0]
      *size = ((uint8_t*)*data)[0]; //data->bLength
 8000b56:	680b      	ldr	r3, [r1, #0]
 8000b58:	781b      	ldrb	r3, [r3, #0]
 8000b5a:	e7e9      	b.n	8000b30 <usb_class_get_std_descr+0x28>
          *data = &USB_StringManufacturingDescriptor;
 8000b5c:	4b06      	ldr	r3, [pc, #24]	; (8000b78 <usb_class_get_std_descr+0x70>)
 8000b5e:	e7f9      	b.n	8000b54 <usb_class_get_std_descr+0x4c>
          *data = &USB_StringProdDescriptor;
 8000b60:	4b06      	ldr	r3, [pc, #24]	; (8000b7c <usb_class_get_std_descr+0x74>)
 8000b62:	e7f7      	b.n	8000b54 <usb_class_get_std_descr+0x4c>
          *data = &USB_StringSerialDescriptor;
 8000b64:	4b06      	ldr	r3, [pc, #24]	; (8000b80 <usb_class_get_std_descr+0x78>)
 8000b66:	e7f5      	b.n	8000b54 <usb_class_get_std_descr+0x4c>
 8000b68:	08000f06 	stmdaeq	r0, {r1, r2, r8, r9, sl, fp}
 8000b6c:	08000f18 	stmdaeq	r0, {r3, r4, r8, r9, sl, fp}
 8000b70:	08000f5b 	stmdaeq	r0, {r0, r1, r3, r4, r6, r8, r9, sl, fp}
 8000b74:	08000f66 	stmdaeq	r0, {r1, r2, r5, r6, r8, r9, sl, fp}
 8000b78:	08000f6a 	stmdaeq	r0, {r1, r3, r5, r6, r8, r9, sl, fp}
 8000b7c:	08000f80 	stmdaeq	r0, {r7, r8, r9, sl, fp}
 8000b80:	08000f90 	stmdaeq	r0, {r4, r7, r8, r9, sl, fp}

08000b84 <usb_class_ep0_in>:
  if( (req->bmRequestType & 0x7F) == (USB_REQ_CLASS | USB_REQ_INTERFACE) ){
 8000b84:	7803      	ldrb	r3, [r0, #0]
 8000b86:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8000b8a:	2b21      	cmp	r3, #33	; 0x21
 8000b8c:	d108      	bne.n	8000ba0 <usb_class_ep0_in+0x1c>
    if( req->bRequest == CDC_GET_LINE_CODING ){
 8000b8e:	7843      	ldrb	r3, [r0, #1]
 8000b90:	2b21      	cmp	r3, #33	; 0x21
 8000b92:	d105      	bne.n	8000ba0 <usb_class_ep0_in+0x1c>
      *data = (void*)&linecoding;
 8000b94:	4b03      	ldr	r3, [pc, #12]	; (8000ba4 <usb_class_ep0_in+0x20>)
      return 1;
 8000b96:	2001      	movs	r0, #1
      *data = (void*)&linecoding;
 8000b98:	600b      	str	r3, [r1, #0]
      *size = sizeof(linecoding);
 8000b9a:	2307      	movs	r3, #7
 8000b9c:	8013      	strh	r3, [r2, #0]
      return 1;
 8000b9e:	4770      	bx	lr
  return 0;
 8000ba0:	2000      	movs	r0, #0
}
 8000ba2:	4770      	bx	lr
 8000ba4:	20000002 	andcs	r0, r0, r2

08000ba8 <usb_class_ep0_out>:
char usb_class_ep0_out(config_pack_t *req, uint16_t offset, uint16_t rx_size){
 8000ba8:	b510      	push	{r4, lr}
  if( (req->bmRequestType & 0x7F) == (USB_REQ_CLASS | USB_REQ_INTERFACE) ){
 8000baa:	7803      	ldrb	r3, [r0, #0]
 8000bac:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8000bb0:	2b21      	cmp	r3, #33	; 0x21
 8000bb2:	d14d      	bne.n	8000c50 <usb_class_ep0_out+0xa8>
    if( req->bRequest == CDC_SET_LINE_CODING ){
 8000bb4:	7843      	ldrb	r3, [r0, #1]
 8000bb6:	2b20      	cmp	r3, #32
 8000bb8:	d14a      	bne.n	8000c50 <usb_class_ep0_out+0xa8>
      if(rx_size == 0)return 1;
 8000bba:	b90a      	cbnz	r2, 8000bc0 <usb_class_ep0_out+0x18>
      return 1;
 8000bbc:	2001      	movs	r0, #1
 8000bbe:	e036      	b.n	8000c2e <usb_class_ep0_out+0x86>
  return _usb_ep_read((epnum & 0x0F)*2 + 1, buf);
 8000bc0:	4c24      	ldr	r4, [pc, #144]	; (8000c54 <usb_class_ep0_out+0xac>)
 8000bc2:	2001      	movs	r0, #1
 8000bc4:	4621      	mov	r1, r4
 8000bc6:	f7ff fe27 	bl	8000818 <_usb_ep_read>
      UART_speed( USART, 32000000 / linecoding.baudrate );
 8000bca:	4a23      	ldr	r2, [pc, #140]	; (8000c58 <usb_class_ep0_out+0xb0>)
 8000bcc:	6a13      	ldr	r3, [r2, #32]
 8000bce:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000bd2:	6213      	str	r3, [r2, #32]
 8000bd4:	6822      	ldr	r2, [r4, #0]
 8000bd6:	4b21      	ldr	r3, [pc, #132]	; (8000c5c <usb_class_ep0_out+0xb4>)
 8000bd8:	fbb3 f3f2 	udiv	r3, r3, r2
 8000bdc:	4a20      	ldr	r2, [pc, #128]	; (8000c60 <usb_class_ep0_out+0xb8>)
 8000bde:	6093      	str	r3, [r2, #8]
      if(linecoding.baudrate == 57600)GPO_ON(GLED); else GPO_OFF(GLED);
 8000be0:	6823      	ldr	r3, [r4, #0]
 8000be2:	f5b3 4f61 	cmp.w	r3, #57600	; 0xe100
 8000be6:	bf0c      	ite	eq
 8000be8:	f44f 7200 	moveq.w	r2, #512	; 0x200
 8000bec:	f04f 7200 	movne.w	r2, #33554432	; 0x2000000
 8000bf0:	4b1c      	ldr	r3, [pc, #112]	; (8000c64 <usb_class_ep0_out+0xbc>)
 8000bf2:	619a      	str	r2, [r3, #24]
      if(linecoding.parity == 0){ //none
 8000bf4:	7963      	ldrb	r3, [r4, #5]
 8000bf6:	b94b      	cbnz	r3, 8000c0c <usb_class_ep0_out+0x64>
        USART1->CR1 &=~USART_CR1_PCE;
 8000bf8:	4b19      	ldr	r3, [pc, #100]	; (8000c60 <usb_class_ep0_out+0xb8>)
 8000bfa:	68da      	ldr	r2, [r3, #12]
 8000bfc:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8000c00:	60da      	str	r2, [r3, #12]
        USART1->CR1 &=~USART_CR1_M;
 8000c02:	68da      	ldr	r2, [r3, #12]
 8000c04:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
        USART1->CR1 &=~USART_CR1_PS;
 8000c08:	60da      	str	r2, [r3, #12]
 8000c0a:	e7d7      	b.n	8000bbc <usb_class_ep0_out+0x14>
      }else if(linecoding.parity == 1){ //odd
 8000c0c:	7960      	ldrb	r0, [r4, #5]
 8000c0e:	b2c0      	uxtb	r0, r0
 8000c10:	2801      	cmp	r0, #1
 8000c12:	d10d      	bne.n	8000c30 <usb_class_ep0_out+0x88>
        USART1->CR1 |= USART_CR1_M;
 8000c14:	4b12      	ldr	r3, [pc, #72]	; (8000c60 <usb_class_ep0_out+0xb8>)
 8000c16:	68da      	ldr	r2, [r3, #12]
 8000c18:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8000c1c:	60da      	str	r2, [r3, #12]
        USART1->CR1 |= USART_CR1_PCE;
 8000c1e:	68da      	ldr	r2, [r3, #12]
 8000c20:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8000c24:	60da      	str	r2, [r3, #12]
        USART1->CR1 |= USART_CR1_PS;
 8000c26:	68da      	ldr	r2, [r3, #12]
 8000c28:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8000c2c:	60da      	str	r2, [r3, #12]
}
 8000c2e:	bd10      	pop	{r4, pc}
      }else if(linecoding.parity == 2){ //even
 8000c30:	7963      	ldrb	r3, [r4, #5]
 8000c32:	2b02      	cmp	r3, #2
 8000c34:	d1c2      	bne.n	8000bbc <usb_class_ep0_out+0x14>
        USART1->CR1 |= USART_CR1_M;
 8000c36:	4b0a      	ldr	r3, [pc, #40]	; (8000c60 <usb_class_ep0_out+0xb8>)
 8000c38:	68da      	ldr	r2, [r3, #12]
 8000c3a:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8000c3e:	60da      	str	r2, [r3, #12]
        USART1->CR1 |= USART_CR1_PCE;
 8000c40:	68da      	ldr	r2, [r3, #12]
 8000c42:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8000c46:	60da      	str	r2, [r3, #12]
        USART1->CR1 &=~USART_CR1_PS;
 8000c48:	68da      	ldr	r2, [r3, #12]
 8000c4a:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8000c4e:	e7db      	b.n	8000c08 <usb_class_ep0_out+0x60>
  return 0;
 8000c50:	2000      	movs	r0, #0
 8000c52:	e7ec      	b.n	8000c2e <usb_class_ep0_out+0x86>
 8000c54:	20000002 	andcs	r0, r0, r2
 8000c58:	40023800 	andmi	r3, r2, r0, lsl #16
 8000c5c:	01e84800 	mvneq	r4, r0, lsl #16
 8000c60:	40013800 	andmi	r3, r1, r0, lsl #16
 8000c64:	40020400 	andmi	r0, r2, r0, lsl #8

08000c68 <fmtu8>:

void data_out_callback(uint8_t epnum){}

void fmtu8(uint8_t x, char *buf){
  buf[0] = x/100 + '0';
 8000c68:	2264      	movs	r2, #100	; 0x64
 8000c6a:	fbb0 f2f2 	udiv	r2, r0, r2
 8000c6e:	3230      	adds	r2, #48	; 0x30
 8000c70:	700a      	strb	r2, [r1, #0]
  buf[1] = (x/10)%10 + '0';
 8000c72:	220a      	movs	r2, #10
 8000c74:	fbb0 f3f2 	udiv	r3, r0, r2
void fmtu8(uint8_t x, char *buf){
 8000c78:	b510      	push	{r4, lr}
  buf[1] = (x/10)%10 + '0';
 8000c7a:	fbb3 f4f2 	udiv	r4, r3, r2
 8000c7e:	fb04 3412 	mls	r4, r4, r2, r3
  buf[2] = x % 10 + '0';
 8000c82:	fb02 0313 	mls	r3, r2, r3, r0
 8000c86:	3330      	adds	r3, #48	; 0x30
 8000c88:	708b      	strb	r3, [r1, #2]
  buf[3] = '\n';
  buf[4] = '\r';
 8000c8a:	230d      	movs	r3, #13
 8000c8c:	710b      	strb	r3, [r1, #4]
  buf[5] = 0;
 8000c8e:	2300      	movs	r3, #0
  buf[1] = (x/10)%10 + '0';
 8000c90:	3430      	adds	r4, #48	; 0x30
 8000c92:	704c      	strb	r4, [r1, #1]
  buf[3] = '\n';
 8000c94:	70ca      	strb	r2, [r1, #3]
  buf[5] = 0;
 8000c96:	714b      	strb	r3, [r1, #5]
}
 8000c98:	bd10      	pop	{r4, pc}

08000c9a <usb_class_init>:

void data_in_callback(uint8_t epnum){}

void usb_class_init(){
  UART_init( USART, 32000000/9600 );
 8000c9a:	4b28      	ldr	r3, [pc, #160]	; (8000d3c <usb_class_init+0xa2>)
void usb_class_init(){
 8000c9c:	b510      	push	{r4, lr}
  UART_init( USART, 32000000/9600 );
 8000c9e:	681a      	ldr	r2, [r3, #0]
  //UART_puts( USART, "test\r\n" );
  usb_ep_init( ENDP_CTL_NUM | 0x80, USB_ENDP_INTR, ENDP_CTL_SIZE, ctl_callback );
 8000ca0:	2103      	movs	r1, #3
  UART_init( USART, 32000000/9600 );
 8000ca2:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
 8000ca6:	f442 1200 	orr.w	r2, r2, #2097152	; 0x200000
 8000caa:	601a      	str	r2, [r3, #0]
 8000cac:	689a      	ldr	r2, [r3, #8]
  usb_ep_init( ENDP_CTL_NUM | 0x80, USB_ENDP_INTR, ENDP_CTL_SIZE, ctl_callback );
 8000cae:	2082      	movs	r0, #130	; 0x82
  UART_init( USART, 32000000/9600 );
 8000cb0:	f442 1240 	orr.w	r2, r2, #3145728	; 0x300000
 8000cb4:	609a      	str	r2, [r3, #8]
 8000cb6:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8000cb8:	f422 6270 	bic.w	r2, r2, #3840	; 0xf00
 8000cbc:	f442 62e0 	orr.w	r2, r2, #1792	; 0x700
 8000cc0:	625a      	str	r2, [r3, #36]	; 0x24
 8000cc2:	681a      	ldr	r2, [r3, #0]
 8000cc4:	f422 2240 	bic.w	r2, r2, #786432	; 0xc0000
 8000cc8:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 8000ccc:	601a      	str	r2, [r3, #0]
 8000cce:	689a      	ldr	r2, [r3, #8]
 8000cd0:	f442 2240 	orr.w	r2, r2, #786432	; 0xc0000
 8000cd4:	609a      	str	r2, [r3, #8]
 8000cd6:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8000cd8:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 8000cdc:	f042 0270 	orr.w	r2, r2, #112	; 0x70
 8000ce0:	625a      	str	r2, [r3, #36]	; 0x24
 8000ce2:	4a17      	ldr	r2, [pc, #92]	; (8000d40 <usb_class_init+0xa6>)
 8000ce4:	6a13      	ldr	r3, [r2, #32]
 8000ce6:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000cea:	6213      	str	r3, [r2, #32]
 8000cec:	f640 5305 	movw	r3, #3333	; 0xd05
 8000cf0:	f5a2 3280 	sub.w	r2, r2, #65536	; 0x10000
 8000cf4:	6093      	str	r3, [r2, #8]
 8000cf6:	f242 032c 	movw	r3, #8236	; 0x202c
 8000cfa:	60d3      	str	r3, [r2, #12]
 8000cfc:	2300      	movs	r3, #0
 8000cfe:	6113      	str	r3, [r2, #16]
 8000d00:	6153      	str	r3, [r2, #20]
 8000d02:	6193      	str	r3, [r2, #24]
 8000d04:	4a0f      	ldr	r2, [pc, #60]	; (8000d44 <usb_class_init+0xaa>)
 8000d06:	7013      	strb	r3, [r2, #0]
 8000d08:	7053      	strb	r3, [r2, #1]
 8000d0a:	f882 3102 	strb.w	r3, [r2, #258]	; 0x102
 8000d0e:	f882 3103 	strb.w	r3, [r2, #259]	; 0x103
 8000d12:	2220      	movs	r2, #32
 8000d14:	4b0c      	ldr	r3, [pc, #48]	; (8000d48 <usb_class_init+0xae>)
 8000d16:	605a      	str	r2, [r3, #4]
  usb_ep_init( ENDP_CTL_NUM | 0x80, USB_ENDP_INTR, ENDP_CTL_SIZE, ctl_callback );
 8000d18:	4b0c      	ldr	r3, [pc, #48]	; (8000d4c <usb_class_init+0xb2>)
 8000d1a:	2208      	movs	r2, #8
 8000d1c:	f7ff fb60 	bl	80003e0 <usb_ep_init>
  
  usb_ep_init( ENDP_DATA_IN | 0x80, USB_ENDP_BULK, ENDP_DATA_SIZE, data_in_callback );
 8000d20:	4b0b      	ldr	r3, [pc, #44]	; (8000d50 <usb_class_init+0xb6>)
 8000d22:	2240      	movs	r2, #64	; 0x40
 8000d24:	2102      	movs	r1, #2
 8000d26:	2081      	movs	r0, #129	; 0x81
 8000d28:	f7ff fb5a 	bl	80003e0 <usb_ep_init>
  usb_ep_init( ENDP_DATA_OUT, USB_ENDP_BULK, ENDP_DATA_SIZE, data_out_callback );
  
}
 8000d2c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  usb_ep_init( ENDP_DATA_OUT, USB_ENDP_BULK, ENDP_DATA_SIZE, data_out_callback );
 8000d30:	4b08      	ldr	r3, [pc, #32]	; (8000d54 <usb_class_init+0xba>)
 8000d32:	2240      	movs	r2, #64	; 0x40
 8000d34:	2102      	movs	r1, #2
 8000d36:	2001      	movs	r0, #1
 8000d38:	f7ff bb52 	b.w	80003e0 <usb_ep_init>
 8000d3c:	40020000 	andmi	r0, r2, r0
 8000d40:	40023800 	andmi	r3, r2, r0, lsl #16
 8000d44:	2000001f 	andcs	r0, r0, pc, lsl r0
 8000d48:	e000e100 	and	lr, r0, r0, lsl #2
 8000d4c:	0800098d 	stmdaeq	r0, {r0, r2, r3, r7, r8, fp}
 8000d50:	0800098f 	stmdaeq	r0, {r0, r1, r2, r3, r7, r8, fp}
 8000d54:	08000991 	stmdaeq	r0, {r0, r4, r7, r8, fp}

08000d58 <usb_class_poll>:

void usb_class_poll(){
 8000d58:	b530      	push	{r4, r5, lr}
  return ((buf->st - buf->en) & UART_MASK);
 8000d5a:	4d21      	ldr	r5, [pc, #132]	; (8000de0 <usb_class_poll+0x88>)
 8000d5c:	b091      	sub	sp, #68	; 0x44
 8000d5e:	782a      	ldrb	r2, [r5, #0]
 8000d60:	786c      	ldrb	r4, [r5, #1]
  char buf[ENDP_DATA_SIZE];
  int len = UART_rx_count(USART);
 8000d62:	1aa4      	subs	r4, r4, r2
  if( len > 0 ){
 8000d64:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
 8000d68:	d011      	beq.n	8000d8e <usb_class_poll+0x36>
    if( usb_ep_ready( ENDP_DATA_IN | 0x80 ) ){
 8000d6a:	4b1e      	ldr	r3, [pc, #120]	; (8000de4 <usb_class_poll+0x8c>)
 8000d6c:	881b      	ldrh	r3, [r3, #0]
 8000d6e:	f003 0330 	and.w	r3, r3, #48	; 0x30
 8000d72:	2b30      	cmp	r3, #48	; 0x30
 8000d74:	d00b      	beq.n	8000d8e <usb_class_poll+0x36>
      if( len > ENDP_DATA_SIZE )len = ENDP_DATA_SIZE;
 8000d76:	2c40      	cmp	r4, #64	; 0x40
 8000d78:	bfa8      	it	ge
 8000d7a:	2440      	movge	r4, #64	; 0x40
      UART_read( USART, buf, len );
 8000d7c:	4668      	mov	r0, sp
 8000d7e:	4621      	mov	r1, r4
 8000d80:	f7ff fe80 	bl	8000a84 <UART1_read>
  _usb_ep_write((epnum & 0x0F)*2, buf, size);
 8000d84:	4622      	mov	r2, r4
 8000d86:	4669      	mov	r1, sp
 8000d88:	2002      	movs	r0, #2
 8000d8a:	f7ff fced 	bl	8000768 <_usb_ep_write>
 8000d8e:	782b      	ldrb	r3, [r5, #0]
 8000d90:	786a      	ldrb	r2, [r5, #1]
 8000d92:	1a9b      	subs	r3, r3, r2
      usb_ep_write( ENDP_DATA_IN | 0x80, buf, len );
    }
  }
  
  if( UART_tx_count(USART) > (ENDP_DATA_SIZE + 10) ){
 8000d94:	b2db      	uxtb	r3, r3
 8000d96:	f1c3 03ff 	rsb	r3, r3, #255	; 0xff
 8000d9a:	2b4a      	cmp	r3, #74	; 0x4a
 8000d9c:	dd0e      	ble.n	8000dbc <usb_class_poll+0x64>
    if( usb_ep_ready( ENDP_DATA_OUT ) ){
 8000d9e:	4b11      	ldr	r3, [pc, #68]	; (8000de4 <usb_class_poll+0x8c>)
 8000da0:	881b      	ldrh	r3, [r3, #0]
 8000da2:	f403 5340 	and.w	r3, r3, #12288	; 0x3000
 8000da6:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8000daa:	d107      	bne.n	8000dbc <usb_class_poll+0x64>
  return _usb_ep_read((epnum & 0x0F)*2 + 1, buf);
 8000dac:	4669      	mov	r1, sp
 8000dae:	2003      	movs	r0, #3
 8000db0:	f7ff fd32 	bl	8000818 <_usb_ep_read>
      len = usb_ep_read( ENDP_DATA_OUT, buf );
      UART_write( USART, buf, len );
 8000db4:	b2c1      	uxtb	r1, r0
 8000db6:	4668      	mov	r0, sp
 8000db8:	f7ff fe3a 	bl	8000a30 <UART1_write>
void usb_class_poll(){
 8000dbc:	f24c 3351 	movw	r3, #50001	; 0xc351
 8000dc0:	e000      	b.n	8000dc4 <usb_class_poll+0x6c>
  while(time--)asm volatile("nop");
 8000dc2:	bf00      	nop
 8000dc4:	3b01      	subs	r3, #1
 8000dc6:	d1fc      	bne.n	8000dc2 <usb_class_poll+0x6a>
    }
  }
  sleep(50000);
  GPO_T(RLED);
 8000dc8:	4b07      	ldr	r3, [pc, #28]	; (8000de8 <usb_class_poll+0x90>)
 8000dca:	695a      	ldr	r2, [r3, #20]
 8000dcc:	05d2      	lsls	r2, r2, #23
 8000dce:	bf4c      	ite	mi
 8000dd0:	f04f 7280 	movmi.w	r2, #16777216	; 0x1000000
 8000dd4:	f44f 7280 	movpl.w	r2, #256	; 0x100
 8000dd8:	619a      	str	r2, [r3, #24]
}
 8000dda:	b011      	add	sp, #68	; 0x44
 8000ddc:	bd30      	pop	{r4, r5, pc}
 8000dde:	bf00      	nop
 8000de0:	2000001f 	andcs	r0, r0, pc, lsl r0
 8000de4:	40005c04 	andmi	r5, r0, r4, lsl #24
 8000de8:	40020400 	andmi	r0, r2, r0, lsl #8

08000dec <__libc_init_array>:
 8000dec:	b570      	push	{r4, r5, r6, lr}
 8000dee:	4e0d      	ldr	r6, [pc, #52]	; (8000e24 <__libc_init_array+0x38>)
 8000df0:	4d0d      	ldr	r5, [pc, #52]	; (8000e28 <__libc_init_array+0x3c>)
 8000df2:	1b76      	subs	r6, r6, r5
 8000df4:	10b6      	asrs	r6, r6, #2
 8000df6:	d006      	beq.n	8000e06 <__libc_init_array+0x1a>
 8000df8:	2400      	movs	r4, #0
 8000dfa:	3401      	adds	r4, #1
 8000dfc:	f855 3b04 	ldr.w	r3, [r5], #4
 8000e00:	4798      	blx	r3
 8000e02:	42a6      	cmp	r6, r4
 8000e04:	d1f9      	bne.n	8000dfa <__libc_init_array+0xe>
 8000e06:	4e09      	ldr	r6, [pc, #36]	; (8000e2c <__libc_init_array+0x40>)
 8000e08:	4d09      	ldr	r5, [pc, #36]	; (8000e30 <__libc_init_array+0x44>)
 8000e0a:	f7ff faa3 	bl	8000354 <_init>
 8000e0e:	1b76      	subs	r6, r6, r5
 8000e10:	10b6      	asrs	r6, r6, #2
 8000e12:	d006      	beq.n	8000e22 <__libc_init_array+0x36>
 8000e14:	2400      	movs	r4, #0
 8000e16:	3401      	adds	r4, #1
 8000e18:	f855 3b04 	ldr.w	r3, [r5], #4
 8000e1c:	4798      	blx	r3
 8000e1e:	42a6      	cmp	r6, r4
 8000e20:	d1f9      	bne.n	8000e16 <__libc_init_array+0x2a>
 8000e22:	bd70      	pop	{r4, r5, r6, pc}
 8000e24:	08000f94 	stmdaeq	r0, {r2, r4, r7, r8, r9, sl, fp}
 8000e28:	08000f94 	stmdaeq	r0, {r2, r4, r7, r8, r9, sl, fp}
 8000e2c:	08000f94 	stmdaeq	r0, {r2, r4, r7, r8, r9, sl, fp}
 8000e30:	08000f94 	stmdaeq	r0, {r2, r4, r7, r8, r9, sl, fp}

08000e34 <Reset_Handler>:
 8000e34:	2100      	movs	r1, #0
 8000e36:	e003      	b.n	8000e40 <LoopCopyDataInit>

08000e38 <CopyDataInit>:
 8000e38:	4b0b      	ldr	r3, [pc, #44]	; (8000e68 <LoopFillZerobss+0x14>)
 8000e3a:	585b      	ldr	r3, [r3, r1]
 8000e3c:	5043      	str	r3, [r0, r1]
 8000e3e:	3104      	adds	r1, #4

08000e40 <LoopCopyDataInit>:
 8000e40:	480a      	ldr	r0, [pc, #40]	; (8000e6c <LoopFillZerobss+0x18>)
 8000e42:	4b0b      	ldr	r3, [pc, #44]	; (8000e70 <LoopFillZerobss+0x1c>)
 8000e44:	1842      	adds	r2, r0, r1
 8000e46:	429a      	cmp	r2, r3
 8000e48:	d3f6      	bcc.n	8000e38 <CopyDataInit>
 8000e4a:	4a0a      	ldr	r2, [pc, #40]	; (8000e74 <LoopFillZerobss+0x20>)
 8000e4c:	e002      	b.n	8000e54 <LoopFillZerobss>

08000e4e <FillZerobss>:
 8000e4e:	2300      	movs	r3, #0
 8000e50:	f842 3b04 	str.w	r3, [r2], #4

08000e54 <LoopFillZerobss>:
 8000e54:	4b08      	ldr	r3, [pc, #32]	; (8000e78 <LoopFillZerobss+0x24>)
 8000e56:	429a      	cmp	r2, r3
 8000e58:	d3f9      	bcc.n	8000e4e <FillZerobss>
 8000e5a:	f7ff fa7c 	bl	8000356 <SystemInit>
 8000e5e:	f7ff ffc5 	bl	8000dec <__libc_init_array>
 8000e62:	f000 f80d 	bl	8000e80 <main>
 8000e66:	4770      	bx	lr
 8000e68:	08000f94 	stmdaeq	r0, {r2, r4, r7, r8, r9, sl, fp}
 8000e6c:	20000000 	andcs	r0, r0, r0
 8000e70:	2000000c 	andcs	r0, r0, ip
 8000e74:	2000000c 	andcs	r0, r0, ip
 8000e78:	20000264 	andcs	r0, r0, r4, ror #4

08000e7c <ADC1_IRQHandler>:
 8000e7c:	e7fe      	b.n	8000e7c <ADC1_IRQHandler>
	...

08000e80 <main>:

int main(void){
 8000e80:	b510      	push	{r4, lr}
  clock_HS(1);
 8000e82:	2001      	movs	r0, #1
 8000e84:	f7ff f9b0 	bl	80001e8 <clock_HS>
  RCC->AHBENR |= RCC_AHBENR_GPIOAEN | RCC_AHBENR_GPIOBEN | RCC_AHBENR_GPIOCEN | RCC_AHBENR_GPIODEN;
 8000e88:	4a1a      	ldr	r2, [pc, #104]	; (8000ef4 <main+0x74>)
 8000e8a:	69d3      	ldr	r3, [r2, #28]
 8000e8c:	f043 030f 	orr.w	r3, r3, #15
 8000e90:	61d3      	str	r3, [r2, #28]
  GPIO_config(GLED); GPIO_config(RLED);
 8000e92:	4b19      	ldr	r3, [pc, #100]	; (8000ef8 <main+0x78>)
 8000e94:	681a      	ldr	r2, [r3, #0]
 8000e96:	f422 2240 	bic.w	r2, r2, #786432	; 0xc0000
 8000e9a:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 8000e9e:	601a      	str	r2, [r3, #0]
 8000ea0:	689a      	ldr	r2, [r3, #8]
 8000ea2:	f442 2240 	orr.w	r2, r2, #786432	; 0xc0000
 8000ea6:	609a      	str	r2, [r3, #8]
 8000ea8:	681a      	ldr	r2, [r3, #0]
 8000eaa:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 8000eae:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8000eb2:	601a      	str	r2, [r3, #0]
 8000eb4:	689a      	ldr	r2, [r3, #8]
 8000eb6:	f442 3240 	orr.w	r2, r2, #196608	; 0x30000
 8000eba:	609a      	str	r2, [r3, #8]
  GPIO_config(LBTN); GPIO_config(JBTN);
 8000ebc:	4a0f      	ldr	r2, [pc, #60]	; (8000efc <main+0x7c>)
 8000ebe:	6811      	ldr	r1, [r2, #0]
 8000ec0:	f021 6140 	bic.w	r1, r1, #201326592	; 0xc000000
 8000ec4:	6011      	str	r1, [r2, #0]
 8000ec6:	6891      	ldr	r1, [r2, #8]
 8000ec8:	f041 6140 	orr.w	r1, r1, #201326592	; 0xc000000
 8000ecc:	6091      	str	r1, [r2, #8]
 8000ece:	681a      	ldr	r2, [r3, #0]
 8000ed0:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
 8000ed4:	601a      	str	r2, [r3, #0]
 8000ed6:	689a      	ldr	r2, [r3, #8]
 8000ed8:	f442 6240 	orr.w	r2, r2, #3072	; 0xc00
 8000edc:	609a      	str	r2, [r3, #8]
  
  USB_setup();
 8000ede:	f7ff fa49 	bl	8000374 <USB_setup>
static __INLINE void __enable_irq()               { __ASM volatile ("cpsie i"); }
 8000ee2:	b662      	cpsie	i
  __enable_irq();
  while (1){
    usb_class_poll();
    sleep(100000);
 8000ee4:	4c06      	ldr	r4, [pc, #24]	; (8000f00 <main+0x80>)
    usb_class_poll();
 8000ee6:	f7ff ff37 	bl	8000d58 <usb_class_poll>
    sleep(100000);
 8000eea:	4620      	mov	r0, r4
 8000eec:	f7ff fa34 	bl	8000358 <sleep>
 8000ef0:	e7f9      	b.n	8000ee6 <main+0x66>
 8000ef2:	bf00      	nop
 8000ef4:	40023800 	andmi	r3, r2, r0, lsl #16
 8000ef8:	40020400 	andmi	r0, r2, r0, lsl #8
 8000efc:	40020800 	andmi	r0, r2, r0, lsl #16
 8000f00:	000186a0 	andeq	r8, r1, r0, lsr #13

Disassembly of section .rodata:

08000f04 <USB_DeviceDescriptor-0x2>:
	...

08000f06 <USB_DeviceDescriptor>:
static const uint8_t USB_DeviceDescriptor[] = {
 8000f06:	01100112 	tsteq	r0, r2, lsl r1
 8000f0a:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
 8000f0e:	05df16c0 	ldrbeq	r1, [pc, #1728]	; 80015d6 <__exidx_end+0x642>
 8000f12:	02010001 	andeq	r0, r1, #1
 8000f16:	 	andeq	r0, r9, #-1073741824	; 0xc0000000

08000f18 <USB_ConfigDescriptor>:
static const uint8_t USB_ConfigDescriptor[] = {
 8000f18:	00430209 	subeq	r0, r3, r9, lsl #4
 8000f1c:	80000102 	andhi	r0, r0, r2, lsl #2
 8000f20:	00040932 	andeq	r0, r4, r2, lsr r9
 8000f24:	02020100 	andeq	r0, r2, #0, 2
 8000f28:	24050000 	strcs	r0, [r5], #-0
 8000f2c:	05011000 	streq	r1, [r1, #-0]
 8000f30:	01000124 	tsteq	r0, r4, lsr #2
 8000f34:	02022404 	andeq	r2, r2, #4, 8	; 0x4000000
 8000f38:	00062405 	andeq	r2, r6, r5, lsl #8
 8000f3c:	82050701 	andhi	r0, r5, #262144	; 0x40000
 8000f40:	64000803 	strvs	r0, [r0], #-2051	; 0xfffff7fd
 8000f44:	00010409 	andeq	r0, r1, r9, lsl #8
 8000f48:	00000a02 	andeq	r0, r0, r2, lsl #20
 8000f4c:	01050700 	tsteq	r5, r0, lsl #14
 8000f50:	00004002 	andeq	r4, r0, r2
 8000f54:	02810507 	addeq	r0, r1, #29360128	; 0x1c00000
 8000f58:	 	beq	8001060 <__exidx_end+0xcc>

08000f5b <USB_DeviceQualifierDescriptor>:
static const uint8_t USB_DeviceQualifierDescriptor[] = {
 8000f5b:	0200060a 	andeq	r0, r0, #10485760	; 0xa00000
 8000f5f:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
 8000f63:	 	streq	r0, [r0], #-1

08000f66 <USB_StringLangDescriptor>:
USB_STRING(USB_StringLangDescriptor, u"\x0409"); //lang US
 8000f66:	04090304 	streq	r0, [r9], #-772	; 0xfffffcfc

08000f6a <USB_StringManufacturingDescriptor>:
USB_STRING(USB_StringManufacturingDescriptor, u"COKPOWEHEU"); //Vendor
 8000f6a:	00430316 	subeq	r0, r3, r6, lsl r3
 8000f6e:	004b004f 	subeq	r0, fp, pc, asr #32
 8000f72:	004f0050 	subeq	r0, pc, r0, asr r0	; <UNPREDICTABLE>
 8000f76:	00450057 	subeq	r0, r5, r7, asr r0
 8000f7a:	00450048 	subeq	r0, r5, r8, asr #32
 8000f7e:	 	tsteq	r0, #85	; 0x55

08000f80 <USB_StringProdDescriptor>:
USB_STRING(USB_StringProdDescriptor, u"USB CDC"); //Product
 8000f80:	00550310 	subseq	r0, r5, r0, lsl r3
 8000f84:	00420053 	subeq	r0, r2, r3, asr r0
 8000f88:	00430020 	subeq	r0, r3, r0, lsr #32
 8000f8c:	00430044 	subeq	r0, r3, r4, asr #32

08000f90 <USB_StringSerialDescriptor>:
USB_STRING(USB_StringSerialDescriptor, u"1"); //Serial (BCD)
 8000f90:	00310304 	eorseq	r0, r1, r4, lsl #6

Disassembly of section .data:

20000000 <lastaddr>:
20000000:	 	strcs	r0, [r0, #64]	; 0x40

20000002 <linecoding>:
volatile struct cdc_linecoding linecoding = {
20000002:	00002580 	andeq	r2, r0, r0, lsl #11
20000006:	00080000 	andeq	r0, r8, r0
	...

Disassembly of section .bss:

2000000c <ep0_buf>:
2000000c:	00000000 	andeq	r0, r0, r0

20000010 <USB_Addr>:
	...

20000012 <ep0_count>:
	...

20000014 <setup_packet>:
	...

2000001c <bytesread.4444>:
	...

2000001e <configuration>:
	...

2000001f <uart1_rx>:
	...

20000121 <uart1_tx>:
	...

20000224 <epfunc_in>:
	...

20000244 <epfunc_out>:
	...

Disassembly of section ._user_heap_stack:

20000264 <._user_heap_stack>:
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002e41 	andeq	r2, r0, r1, asr #28
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000024 	andeq	r0, r0, r4, lsr #32
  10:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
  14:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
  18:	0600334d 	streq	r3, [r0], -sp, asr #6
  1c:	094d070a 	stmdbeq	sp, {r1, r3, r8, r9, sl}^
  20:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  24:	17011501 	strne	r1, [r1, -r1, lsl #10]
  28:	1a011803 	bne	4603c <_Min_Stack_Size+0x45c3c>
  2c:	Address 0x000000000000002c is out of bounds.


Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	00000928 	andeq	r0, r0, r8, lsr #18
       4:	00000002 	andeq	r0, r0, r2
       8:	01040000 	mrseq	r0, (UNDEF: 4)
       c:	0000034a 	andeq	r0, r0, sl, asr #6
      10:	0000120c 	andeq	r1, r0, ip, lsl #4
      14:	00026400 	andeq	r6, r2, r0, lsl #8
	...
      28:	06010200 	streq	r0, [r1], -r0, lsl #4
      2c:	00000258 	andeq	r0, r0, r8, asr r2
      30:	00031c03 	andeq	r1, r3, r3, lsl #24
      34:	17220400 	strne	r0, [r2, -r0, lsl #8]!
      38:	00000029 	andeq	r0, r0, r9, lsr #32
      3c:	9b050202 	blls	14084c <_Min_Stack_Size+0x14044c>
      40:	02000002 	andeq	r0, r0, #2
      44:	00820504 	addeq	r0, r2, r4, lsl #10
      48:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
      4c:	00007d05 	andeq	r7, r0, r5, lsl #26
      50:	031b0300 	tsteq	fp, #0, 6
      54:	2e040000 	cdpcs	0, 0, cr0, cr4, cr0, {0}
      58:	00005d18 	andeq	r5, r0, r8, lsl sp
      5c:	08010200 	stmdaeq	r1, {r9}
      60:	00000256 	andeq	r0, r0, r6, asr r2
      64:	0000ff03 	andeq	pc, r0, r3, lsl #30
      68:	19310400 	ldmdbne	r1!, {sl}
      6c:	00000070 	andeq	r0, r0, r0, ror r0
      70:	7e070202 	cdpvc	2, 0, cr0, cr7, cr2, {0}
      74:	03000001 	movweq	r0, #1
      78:	000002d5 	ldrdeq	r0, [r0], -r5
      7c:	88193404 	ldmdahi	r9, {r2, sl, ip, sp}
      80:	04000000 	streq	r0, [r0], #-0
      84:	00000077 	andeq	r0, r0, r7, ror r0
      88:	4d070402 	cfstrsmi	mvf0, [r7, #-8]
      8c:	02000000 	andeq	r0, r0, #0
      90:	00480708 	subeq	r0, r8, r8, lsl #14
      94:	04050000 	streq	r0, [r5], #-0
      98:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
      9c:	00960400 	addseq	r0, r6, r0, lsl #8
      a0:	04020000 	streq	r0, [r2], #-0
      a4:	00005207 	andeq	r5, r0, r7, lsl #4
      a8:	028e0600 	addeq	r0, lr, #0, 12
      ac:	ce030000 	cdpgt	0, 0, cr0, cr3, cr0, {0}
      b0:	009d1506 	addseq	r1, sp, r6, lsl #10
      b4:	01010000 	mrseq	r0, (UNDEF: 1)
      b8:	00013a07 	andeq	r3, r1, r7, lsl #20
      bc:	114c0500 	cmpne	ip, r0, lsl #10
      c0:	00000077 	andeq	r0, r0, r7, ror r0
      c4:	84080101 	strhi	r0, [r8], #-257	; 0xfffffeff
      c8:	09012506 	stmdbeq	r1, {r1, r2, r8, sl, sp}
      cc:	00000181 	andeq	r0, r0, r1, lsl #3
      d0:	52434109 	subpl	r4, r3, #1073741826	; 0x40000002
      d4:	01270600 			; <UNDEFINED> instruction: 0x01270600
      d8:	00008311 	andeq	r8, r0, r1, lsl r3
      dc:	00230200 	eoreq	r0, r3, r0, lsl #4
      e0:	00009e0a 	andeq	r9, r0, sl, lsl #28
      e4:	01280600 			; <UNDEFINED> instruction: 0x01280600
      e8:	00008311 	andeq	r8, r0, r1, lsl r3
      ec:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
      f0:	00010f0a 	andeq	r0, r1, sl, lsl #30
      f4:	01290600 			; <UNDEFINED> instruction: 0x01290600
      f8:	00008311 	andeq	r8, r0, r1, lsl r3
      fc:	08230200 	stmdaeq	r3!, {r9}
     100:	0003230a 	andeq	r2, r3, sl, lsl #6
     104:	012a0600 			; <UNDEFINED> instruction: 0x012a0600
     108:	00008311 	andeq	r8, r0, r1, lsl r3
     10c:	0c230200 	sfmeq	f0, 4, [r3], #-0
     110:	00005f0a 	andeq	r5, r0, sl, lsl #30
     114:	012b0600 			; <UNDEFINED> instruction: 0x012b0600
     118:	00008311 	andeq	r8, r0, r1, lsl r3
     11c:	10230200 	eorne	r0, r3, r0, lsl #4
     120:	0000e80a 	andeq	lr, r0, sl, lsl #16
     124:	012c0600 			; <UNDEFINED> instruction: 0x012c0600
     128:	00008311 	andeq	r8, r0, r1, lsl r3
     12c:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     130:	00525309 	subseq	r5, r2, r9, lsl #6
     134:	11012d06 	tstne	r1, r6, lsl #26
     138:	00000083 	andeq	r0, r0, r3, lsl #1
     13c:	09182302 	ldmdbeq	r8, {r1, r8, r9, sp}
     140:	0052424f 	subseq	r4, r2, pc, asr #4
     144:	11012e06 	tstne	r1, r6, lsl #28
     148:	00000083 	andeq	r0, r0, r3, lsl #1
     14c:	0a1c2302 	beq	708d5c <_Min_Stack_Size+0x70895c>
     150:	000001f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     154:	11012f06 	tstne	r1, r6, lsl #30
     158:	00000083 	andeq	r0, r0, r3, lsl #1
     15c:	0a202302 	beq	808d6c <_Min_Stack_Size+0x80896c>
     160:	000002ab 	andeq	r0, r0, fp, lsr #5
     164:	0e013006 	cdpeq	0, 0, cr3, cr1, cr6, {0}
     168:	00000181 	andeq	r0, r0, r1, lsl #3
     16c:	0a242302 	beq	908d7c <_Min_Stack_Size+0x90897c>
     170:	000001f6 	strdeq	r0, [r0], -r6
     174:	11013106 	tstne	r1, r6, lsl #2
     178:	00000083 	andeq	r0, r0, r3, lsl #1
     17c:	01802303 	orreq	r2, r0, r3, lsl #6
     180:	00770b00 	rsbseq	r0, r7, r0, lsl #22
     184:	01910000 	orrseq	r0, r1, r0
     188:	a20c0000 	andge	r0, ip, #0
     18c:	16000000 	strne	r0, [r0], -r0
     190:	00900d00 	addseq	r0, r0, r0, lsl #26
     194:	32060000 	andcc	r0, r6, #0
     198:	00c60301 	sbceq	r0, r6, r1, lsl #6
     19c:	2c080000 	stccs	0, cr0, [r8], {-0}
     1a0:	09014f06 	stmdbeq	r1, {r1, r2, r8, r9, sl, fp, lr}
     1a4:	00000249 	andeq	r0, r0, r9, asr #4
     1a8:	0000420a 	andeq	r4, r0, sl, lsl #4
     1ac:	01510600 	cmpeq	r1, r0, lsl #12
     1b0:	00008311 	andeq	r8, r0, r1, lsl r3
     1b4:	00230200 	eoreq	r0, r3, r0, lsl #4
     1b8:	0000290a 	andeq	r2, r0, sl, lsl #18
     1bc:	01520600 	cmpeq	r2, r0, lsl #12
     1c0:	00008311 	andeq	r8, r0, r1, lsl r3
     1c4:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     1c8:	0001160a 	andeq	r1, r1, sl, lsl #12
     1cc:	01530600 	cmpeq	r3, r0, lsl #12
     1d0:	00008311 	andeq	r8, r0, r1, lsl r3
     1d4:	08230200 	stmdaeq	r3!, {r9}
     1d8:	0000070a 	andeq	r0, r0, sl, lsl #14
     1dc:	01540600 	cmpeq	r4, r0, lsl #12
     1e0:	00008311 	andeq	r8, r0, r1, lsl r3
     1e4:	0c230200 	sfmeq	f0, 4, [r3], #-0
     1e8:	52444909 	subpl	r4, r4, #147456	; 0x24000
     1ec:	01550600 	cmpeq	r5, r0, lsl #12
     1f0:	00008311 	andeq	r8, r0, r1, lsl r3
     1f4:	10230200 	eorne	r0, r3, r0, lsl #4
     1f8:	52444f09 	subpl	r4, r4, #9, 30	; 0x24
     1fc:	01560600 	cmpeq	r6, r0, lsl #12
     200:	00008311 	andeq	r8, r0, r1, lsl r3
     204:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     208:	00008b0a 	andeq	r8, r0, sl, lsl #22
     20c:	01570600 	cmpeq	r7, r0, lsl #12
     210:	00008311 	andeq	r8, r0, r1, lsl r3
     214:	18230200 	stmdane	r3!, {r9}
     218:	00000d0a 	andeq	r0, r0, sl, lsl #26
     21c:	01580600 	cmpeq	r8, r0, lsl #12
     220:	00008311 	andeq	r8, r0, r1, lsl r3
     224:	1c230200 	sfmne	f0, 4, [r3], #-0
     228:	52464109 	subpl	r4, r6, #1073741826	; 0x40000002
     22c:	01590600 	cmpeq	r9, r0, lsl #12
     230:	00025911 	andeq	r5, r2, r1, lsl r9
     234:	20230200 	eorcs	r0, r3, r0, lsl #4
     238:	52524209 	subspl	r4, r2, #-1879048192	; 0x90000000
     23c:	015a0600 	cmpeq	sl, r0, lsl #12
     240:	00008311 	andeq	r8, r0, r1, lsl r3
     244:	28230200 	stmdacs	r3!, {r9}
     248:	00830b00 	addeq	r0, r3, r0, lsl #22
     24c:	02590000 	subseq	r0, r9, #0
     250:	a20c0000 	andge	r0, ip, #0
     254:	01000000 	mrseq	r0, (UNDEF: 0)
     258:	02490400 	subeq	r0, r9, #0, 8
     25c:	570d0000 	strpl	r0, [sp, -r0]
     260:	06000001 	streq	r0, [r0], -r1
     264:	9e03015b 	mcrls	1, 0, r0, cr3, cr11, {2}
     268:	08000001 	stmdaeq	r0, {r0}
     26c:	01890608 	orreq	r0, r9, r8, lsl #12
     270:	00029509 	andeq	r9, r2, r9, lsl #10
     274:	52430900 	subpl	r0, r3, #0, 18
     278:	018b0600 	orreq	r0, fp, r0, lsl #12
     27c:	00008311 	andeq	r8, r0, r1, lsl r3
     280:	00230200 	eoreq	r0, r3, r0, lsl #4
     284:	52534309 	subspl	r4, r3, #603979776	; 0x24000000
     288:	018c0600 	orreq	r0, ip, r0, lsl #12
     28c:	00008311 	andeq	r8, r0, r1, lsl r3
     290:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     294:	01c40d00 	biceq	r0, r4, r0, lsl #26
     298:	8d060000 	stchi	0, cr0, [r6, #-0]
     29c:	026b0301 	rsbeq	r0, fp, #67108864	; 0x4000000
     2a0:	38080000 	stmdacc	r8, {}	; <UNPREDICTABLE>
     2a4:	09019306 	stmdbeq	r1, {r1, r2, r8, r9, ip, pc}
     2a8:	0000038c 	andeq	r0, r0, ip, lsl #7
     2ac:	00524309 	subseq	r4, r2, r9, lsl #6
     2b0:	11019506 	tstne	r1, r6, lsl #10
     2b4:	00000083 	andeq	r0, r0, r3, lsl #1
     2b8:	0a002302 	beq	8ec8 <_Min_Stack_Size+0x8ac8>
     2bc:	0000030f 	andeq	r0, r0, pc, lsl #6
     2c0:	11019606 	tstne	r1, r6, lsl #12
     2c4:	00000083 	andeq	r0, r0, r3, lsl #1
     2c8:	0a042302 	beq	108ed8 <_Min_Stack_Size+0x108ad8>
     2cc:	000002ca 	andeq	r0, r0, sl, asr #5
     2d0:	11019706 	tstne	r1, r6, lsl #14
     2d4:	00000083 	andeq	r0, r0, r3, lsl #1
     2d8:	09082302 	stmdbeq	r8, {r1, r8, r9, sp}
     2dc:	00524943 	subseq	r4, r2, r3, asr #18
     2e0:	11019806 	tstne	r1, r6, lsl #16
     2e4:	00000083 	andeq	r0, r0, r3, lsl #1
     2e8:	0a0c2302 	beq	308ef8 <_Min_Stack_Size+0x308af8>
     2ec:	00000203 	andeq	r0, r0, r3, lsl #4
     2f0:	11019906 	tstne	r1, r6, lsl #18
     2f4:	00000083 	andeq	r0, r0, r3, lsl #1
     2f8:	0a102302 	beq	408f08 <_Min_Stack_Size+0x408b08>
     2fc:	000000c0 	andeq	r0, r0, r0, asr #1
     300:	11019a06 	tstne	r1, r6, lsl #20
     304:	00000083 	andeq	r0, r0, r3, lsl #1
     308:	0a142302 	beq	508f18 <_Min_Stack_Size+0x508b18>
     30c:	00000210 	andeq	r0, r0, r0, lsl r2
     310:	11019b06 	tstne	r1, r6, lsl #22
     314:	00000083 	andeq	r0, r0, r3, lsl #1
     318:	0a182302 	beq	608f28 <_Min_Stack_Size+0x608b28>
     31c:	000003dd 	ldrdeq	r0, [r0], -sp
     320:	11019c06 	tstne	r1, r6, lsl #24
     324:	00000083 	andeq	r0, r0, r3, lsl #1
     328:	0a1c2302 	beq	708f38 <_Min_Stack_Size+0x708b38>
     32c:	000002bb 			; <UNDEFINED> instruction: 0x000002bb
     330:	11019d06 	tstne	r1, r6, lsl #26
     334:	00000083 	andeq	r0, r0, r3, lsl #1
     338:	0a202302 	beq	808f48 <_Min_Stack_Size+0x808b48>
     33c:	000002f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     340:	11019e06 	tstne	r1, r6, lsl #28
     344:	00000083 	andeq	r0, r0, r3, lsl #1
     348:	0a242302 	beq	908f58 <_Min_Stack_Size+0x908b58>
     34c:	000000d8 	ldrdeq	r0, [r0], -r8
     350:	11019f06 	tstne	r1, r6, lsl #30
     354:	00000083 	andeq	r0, r0, r3, lsl #1
     358:	0a282302 	beq	a08f68 <_Min_Stack_Size+0xa08b68>
     35c:	000001ba 			; <UNDEFINED> instruction: 0x000001ba
     360:	1101a006 	tstne	r1, r6
     364:	00000083 	andeq	r0, r0, r3, lsl #1
     368:	0a2c2302 	beq	b08f78 <_Min_Stack_Size+0xb08b78>
     36c:	00000197 	muleq	r0, r7, r1
     370:	1101a106 	tstne	r1, r6, lsl #2
     374:	00000083 	andeq	r0, r0, r3, lsl #1
     378:	09302302 	ldmdbeq	r0!, {r1, r8, r9, sp}
     37c:	00525343 	subseq	r5, r2, r3, asr #6
     380:	1101a206 	tstne	r1, r6, lsl #4
     384:	00000083 	andeq	r0, r0, r3, lsl #1
     388:	00342302 	eorseq	r2, r4, r2, lsl #6
     38c:	0001640d 	andeq	r6, r1, sp, lsl #8
     390:	01a30600 			; <UNDEFINED> instruction: 0x01a30600
     394:	0002a203 	andeq	sl, r2, r3, lsl #4
     398:	06d00800 	ldrbeq	r0, [r0], r0, lsl #16
     39c:	f50901c0 			; <UNDEFINED> instruction: 0xf50901c0
     3a0:	09000006 	stmdbeq	r0, {r1, r2}
     3a4:	06005254 			; <UNDEFINED> instruction: 0x06005254
     3a8:	831101c2 	tsthi	r1, #-2147483600	; 0x80000030
     3ac:	02000000 	andeq	r0, r0, #0
     3b0:	44090023 	strmi	r0, [r9], #-35	; 0xffffffdd
     3b4:	c3060052 	movwgt	r0, #24658	; 0x6052
     3b8:	00831101 	addeq	r1, r3, r1, lsl #2
     3bc:	23020000 	movwcs	r0, #8192	; 0x2000
     3c0:	52430904 	subpl	r0, r3, #4, 18	; 0x10000
     3c4:	01c40600 	biceq	r0, r4, r0, lsl #12
     3c8:	00008311 	andeq	r8, r0, r1, lsl r3
     3cc:	08230200 	stmdaeq	r3!, {r9}
     3d0:	52534909 	subspl	r4, r3, #147456	; 0x24000
     3d4:	01c50600 	biceq	r0, r5, r0, lsl #12
     3d8:	00008311 	andeq	r8, r0, r1, lsl r3
     3dc:	0c230200 	sfmeq	f0, 4, [r3], #-0
     3e0:	00003d0a 	andeq	r3, r0, sl, lsl #26
     3e4:	01c60600 	biceq	r0, r6, r0, lsl #12
     3e8:	00008311 	andeq	r8, r0, r1, lsl r3
     3ec:	10230200 	eorne	r0, r3, r0, lsl #4
     3f0:	0002de0a 	andeq	sp, r2, sl, lsl #28
     3f4:	01c70600 	biceq	r0, r7, r0, lsl #12
     3f8:	00008311 	andeq	r8, r0, r1, lsl r3
     3fc:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     400:	0000000a 	andeq	r0, r0, sl
     404:	01c80600 	biceq	r0, r8, r0, lsl #12
     408:	00008311 	andeq	r8, r0, r1, lsl r3
     40c:	18230200 	stmdane	r3!, {r9}
     410:	0002260a 	andeq	r2, r2, sl, lsl #12
     414:	01c90600 	biceq	r0, r9, r0, lsl #12
     418:	00008311 	andeq	r8, r0, r1, lsl r3
     41c:	1c230200 	sfmne	f0, 4, [r3], #-0
     420:	0002c30a 	andeq	ip, r2, sl, lsl #6
     424:	01ca0600 	biceq	r0, sl, r0, lsl #12
     428:	00008311 	andeq	r8, r0, r1, lsl r3
     42c:	20230200 	eorcs	r0, r3, r0, lsl #4
     430:	52505709 	subspl	r5, r0, #2359296	; 0x240000
     434:	01cb0600 	biceq	r0, fp, r0, lsl #12
     438:	00008311 	andeq	r8, r0, r1, lsl r3
     43c:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
     440:	52535309 	subspl	r5, r3, #603979776	; 0x24000000
     444:	01cc0600 	biceq	r0, ip, r0, lsl #12
     448:	00008311 	andeq	r8, r0, r1, lsl r3
     44c:	28230200 	stmdacs	r3!, {r9}
     450:	0003080a 	andeq	r0, r3, sl, lsl #16
     454:	01cd0600 	biceq	r0, sp, r0, lsl #12
     458:	00008311 	andeq	r8, r0, r1, lsl r3
     45c:	2c230200 	sfmcs	f0, 4, [r3], #-0
     460:	0001a10a 	andeq	sl, r1, sl, lsl #2
     464:	01ce0600 	biceq	r0, lr, r0, lsl #12
     468:	00008311 	andeq	r8, r0, r1, lsl r3
     46c:	30230200 	eorcc	r0, r3, r0, lsl #4
     470:	00001d0a 	andeq	r1, r0, sl, lsl #26
     474:	01cf0600 	biceq	r0, pc, r0, lsl #12
     478:	00008311 	andeq	r8, r0, r1, lsl r3
     47c:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
     480:	0000b30a 	andeq	fp, r0, sl, lsl #6
     484:	01d00600 	bicseq	r0, r0, r0, lsl #12
     488:	00008311 	andeq	r8, r0, r1, lsl r3
     48c:	38230200 	stmdacc	r3!, {r9}
     490:	0001dd0a 	andeq	sp, r1, sl, lsl #26
     494:	01d10600 	bicseq	r0, r1, r0, lsl #12
     498:	00008311 	andeq	r8, r0, r1, lsl r3
     49c:	3c230200 	sfmcc	f0, 4, [r3], #-0
     4a0:	0001a60a 	andeq	sl, r1, sl, lsl #12
     4a4:	01d20600 	bicseq	r0, r2, r0, lsl #12
     4a8:	00008311 	andeq	r8, r0, r1, lsl r3
     4ac:	40230200 	eormi	r0, r3, r0, lsl #4
     4b0:	0001310a 	andeq	r3, r1, sl, lsl #2
     4b4:	01d30600 	bicseq	r0, r3, r0, lsl #12
     4b8:	00008311 	andeq	r8, r0, r1, lsl r3
     4bc:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
     4c0:	0000cf0a 	andeq	ip, r0, sl, lsl #30
     4c4:	01d40600 	bicseq	r0, r4, r0, lsl #12
     4c8:	00008311 	andeq	r8, r0, r1, lsl r3
     4cc:	48230200 	stmdami	r3!, {r9}
     4d0:	00023a0a 	andeq	r3, r2, sl, lsl #20
     4d4:	01d50600 	bicseq	r0, r5, r0, lsl #12
     4d8:	0000770c 	andeq	r7, r0, ip, lsl #14
     4dc:	4c230200 	sfmmi	f0, 4, [r3], #-0
     4e0:	0002a50a 	andeq	sl, r2, sl, lsl #10
     4e4:	01d60600 	bicseq	r0, r6, r0, lsl #12
     4e8:	00008311 	andeq	r8, r0, r1, lsl r3
     4ec:	50230200 	eorpl	r0, r3, r0, lsl #4
     4f0:	0002ea0a 	andeq	lr, r2, sl, lsl #20
     4f4:	01d70600 	bicseq	r0, r7, r0, lsl #12
     4f8:	00008311 	andeq	r8, r0, r1, lsl r3
     4fc:	54230200 	strtpl	r0, [r3], #-512	; 0xfffffe00
     500:	0003310a 	andeq	r3, r3, sl, lsl #2
     504:	01d80600 	bicseq	r0, r8, r0, lsl #12
     508:	00008311 	andeq	r8, r0, r1, lsl r3
     50c:	58230200 	stmdapl	r3!, {r9}
     510:	0000370a 	andeq	r3, r0, sl, lsl #14
     514:	01d90600 	bicseq	r0, r9, r0, lsl #12
     518:	00008311 	andeq	r8, r0, r1, lsl r3
     51c:	5c230200 	sfmpl	f0, 4, [r3], #-0
     520:	0000c90a 	andeq	ip, r0, sl, lsl #18
     524:	01da0600 	bicseq	r0, sl, r0, lsl #12
     528:	00008311 	andeq	r8, r0, r1, lsl r3
     52c:	60230200 	eorvs	r0, r3, r0, lsl #4
     530:	00014a0a 	andeq	r4, r1, sl, lsl #20
     534:	01db0600 	bicseq	r0, fp, r0, lsl #12
     538:	00008311 	andeq	r8, r0, r1, lsl r3
     53c:	64230200 	strtvs	r0, [r3], #-512	; 0xfffffe00
     540:	0001d00a 	andeq	sp, r1, sl
     544:	01dc0600 	bicseq	r0, ip, r0, lsl #12
     548:	00008311 	andeq	r8, r0, r1, lsl r3
     54c:	68230200 	stmdavs	r3!, {r9}
     550:	00022d0a 	andeq	r2, r2, sl, lsl #26
     554:	01dd0600 	bicseq	r0, sp, r0, lsl #12
     558:	00008311 	andeq	r8, r0, r1, lsl r3
     55c:	6c230200 	sfmvs	f0, 4, [r3], #-0
     560:	0002cf0a 	andeq	ip, r2, sl, lsl #30
     564:	01de0600 	bicseq	r0, lr, r0, lsl #12
     568:	00008311 	andeq	r8, r0, r1, lsl r3
     56c:	70230200 	eorvc	r0, r3, r0, lsl #4
     570:	0003150a 	andeq	r1, r3, sl, lsl #10
     574:	01df0600 	bicseq	r0, pc, r0, lsl #12
     578:	00008311 	andeq	r8, r0, r1, lsl r3
     57c:	74230200 	strtvc	r0, [r3], #-512	; 0xfffffe00
     580:	0001ac0a 	andeq	sl, r1, sl, lsl #24
     584:	01e00600 	mvneq	r0, r0, lsl #12
     588:	00008311 	andeq	r8, r0, r1, lsl r3
     58c:	78230200 	stmdavc	r3!, {r9}
     590:	0001fc0a 	andeq	pc, r1, sl, lsl #24
     594:	01e10600 	mvneq	r0, r0, lsl #12
     598:	00008311 	andeq	r8, r0, r1, lsl r3
     59c:	7c230200 	sfmvc	f0, 4, [r3], #-0
     5a0:	0002b40a 	andeq	fp, r2, sl, lsl #8
     5a4:	01e20600 	mvneq	r0, r0, lsl #12
     5a8:	00008311 	andeq	r8, r0, r1, lsl r3
     5ac:	80230300 	eorhi	r0, r3, r0, lsl #6
     5b0:	02f80a01 	rscseq	r0, r8, #4096	; 0x1000
     5b4:	e3060000 	movw	r0, #24576	; 0x6000
     5b8:	00831101 	addeq	r1, r3, r1, lsl #2
     5bc:	23030000 	movwcs	r0, #12288	; 0x3000
     5c0:	3e0a0184 	adfcc<illegal precision>	f0, f2, f4
     5c4:	06000003 	streq	r0, [r0], -r3
     5c8:	831101e4 	tsthi	r1, #228, 2	; 0x39
     5cc:	03000000 	movweq	r0, #0
     5d0:	0a018823 	beq	62664 <_Min_Stack_Size+0x62264>
     5d4:	00000170 	andeq	r0, r0, r0, ror r1
     5d8:	1101e506 	tstne	r1, r6, lsl #10
     5dc:	00000083 	andeq	r0, r0, r3, lsl #1
     5e0:	018c2303 	orreq	r2, ip, r3, lsl #6
     5e4:	0000e10a 	andeq	lr, r0, sl, lsl #2
     5e8:	01e60600 	mvneq	r0, r0, lsl #12
     5ec:	00008311 	andeq	r8, r0, r1, lsl r3
     5f0:	90230300 	eorls	r0, r3, r0, lsl #6
     5f4:	01500a01 	cmpeq	r0, r1, lsl #20
     5f8:	e7060000 	str	r0, [r6, -r0]
     5fc:	00831101 	addeq	r1, r3, r1, lsl #2
     600:	23030000 	movwcs	r0, #12288	; 0x3000
     604:	d60a0194 			; <UNDEFINED> instruction: 0xd60a0194
     608:	06000001 	streq	r0, [r0], -r1
     60c:	831101e8 	tsthi	r1, #232, 2	; 0x3a
     610:	03000000 	movweq	r0, #0
     614:	0a019823 	beq	666a8 <_Min_Stack_Size+0x662a8>
     618:	00000233 	andeq	r0, r0, r3, lsr r2
     61c:	1101e906 	tstne	r1, r6, lsl #18
     620:	00000083 	andeq	r0, r0, r3, lsl #1
     624:	019c2303 	orrseq	r2, ip, r3, lsl #6
     628:	0001080a 	andeq	r0, r1, sl, lsl #16
     62c:	01ea0600 	mvneq	r0, r0, lsl #12
     630:	00008311 	andeq	r8, r0, r1, lsl r3
     634:	a0230300 	eorge	r0, r3, r0, lsl #6
     638:	01770a01 	cmneq	r7, r1, lsl #20
     63c:	eb060000 	bl	180644 <_Min_Stack_Size+0x180244>
     640:	00831101 	addeq	r1, r3, r1, lsl #2
     644:	23030000 	movwcs	r0, #12288	; 0x3000
     648:	e90a01a4 	stmdb	sl, {r2, r5, r7, r8}
     64c:	06000001 	streq	r0, [r0], -r1
     650:	831101ec 	tsthi	r1, #236, 2	; 0x3b
     654:	03000000 	movweq	r0, #0
     658:	0a01a823 	beq	6a6ec <_Min_Stack_Size+0x6a2ec>
     65c:	0000024f 	andeq	r0, r0, pc, asr #4
     660:	1101ed06 	tstne	r1, r6, lsl #26
     664:	00000083 	andeq	r0, r0, r3, lsl #1
     668:	01ac2303 			; <UNDEFINED> instruction: 0x01ac2303
     66c:	0002e30a 	andeq	lr, r2, sl, lsl #6
     670:	01ee0600 	mvneq	r0, r0, lsl #12
     674:	00008311 	andeq	r8, r0, r1, lsl r3
     678:	b0230300 	eorlt	r0, r3, r0, lsl #6
     67c:	032a0a01 			; <UNDEFINED> instruction: 0x032a0a01
     680:	ef060000 	svc	0x00060000
     684:	00831101 	addeq	r1, r3, r1, lsl #2
     688:	23030000 	movwcs	r0, #12288	; 0x3000
     68c:	220a01b4 	andcs	r0, sl, #180, 2	; 0x2d
     690:	06000000 	streq	r0, [r0], -r0
     694:	831101f0 	tsthi	r1, #240, 2	; 0x3c
     698:	03000000 	movweq	r0, #0
     69c:	0a01b823 	beq	6e730 <_Min_Stack_Size+0x6e330>
     6a0:	000000ac 	andeq	r0, r0, ip, lsr #1
     6a4:	1101f106 	tstne	r1, r6, lsl #2	; <UNPREDICTABLE>
     6a8:	00000083 	andeq	r0, r0, r3, lsl #1
     6ac:	01bc2303 			; <UNDEFINED> instruction: 0x01bc2303
     6b0:	0001250a 	andeq	r2, r1, sl, lsl #10
     6b4:	01f20600 	mvnseq	r0, r0, lsl #12
     6b8:	00008311 	andeq	r8, r0, r1, lsl r3
     6bc:	c0230300 	eorgt	r0, r3, r0, lsl #6
     6c0:	01b30a01 			; <UNDEFINED> instruction: 0x01b30a01
     6c4:	f3060000 	vhadd.u8	d0, d6, d0
     6c8:	00831101 	addeq	r1, r3, r1, lsl #2
     6cc:	23030000 	movwcs	r0, #12288	; 0x3000
     6d0:	300a01c4 	andcc	r0, sl, r4, asr #3
     6d4:	06000000 	streq	r0, [r0], -r0
     6d8:	831101f4 	tsthi	r1, #244, 2	; 0x3d
     6dc:	03000000 	movweq	r0, #0
     6e0:	0a01c823 	beq	72774 <_Min_Stack_Size+0x72374>
     6e4:	000000b9 	strheq	r0, [r0], -r9
     6e8:	1101f506 	tstne	r1, r6, lsl #10	; <UNPREDICTABLE>
     6ec:	00000083 	andeq	r0, r0, r3, lsl #1
     6f0:	01cc2303 	biceq	r2, ip, r3, lsl #6
     6f4:	00670d00 	rsbeq	r0, r7, r0, lsl #26
     6f8:	f6060000 			; <UNDEFINED> instruction: 0xf6060000
     6fc:	03990301 	orrseq	r0, r9, #67108864	; 0x4000000
     700:	010e0000 	mrseq	r0, (UNDEF: 14)
     704:	00000345 	andeq	r0, r0, r5, asr #6
     708:	01050e02 	tsteq	r5, r2, lsl #28
     70c:	00000096 	muleq	r0, r6, r0
     710:	08000e80 	stmdaeq	r0, {r7, r9, sl, fp}
     714:	08000f04 	stmdaeq	r0, {r2, r8, r9, sl, fp}
     718:	00000000 	andeq	r0, r0, r0
     71c:	0007f401 	andeq	pc, r7, r1, lsl #8
     720:	0e920f00 	cdpeq	15, 9, cr0, cr2, cr0, {0}
     724:	0ea80800 	cdpeq	8, 10, cr0, cr8, cr0, {0}
     728:	07430800 	strbeq	r0, [r3, -r0, lsl #16]
     72c:	2c100000 	ldccs	0, cr0, [r0], {-0}
     730:	02000001 	andeq	r0, r0, #1
     734:	00770311 	rsbseq	r0, r7, r1, lsl r3
     738:	00280000 	eoreq	r0, r8, r0
     73c:	00200000 	eoreq	r0, r0, r0
     740:	0f000000 	svceq	0x00000000
     744:	08000ea8 	stmdaeq	r0, {r3, r5, r7, r9, sl, fp}
     748:	08000ebc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9, sl, fp}
     74c:	00000765 	andeq	r0, r0, r5, ror #14
     750:	00012c10 	andeq	r2, r1, r0, lsl ip
     754:	16110200 	ldrne	r0, [r1], -r0, lsl #4
     758:	00000077 	andeq	r0, r0, r7, ror r0
     75c:	0000006c 	andeq	r0, r0, ip, rrx
     760:	00000064 	andeq	r0, r0, r4, rrx
     764:	0ebc0f00 	cdpeq	15, 11, cr0, cr12, cr0, {0}
     768:	0ece0800 	cdpeq	8, 12, cr0, cr14, cr0, {0}
     76c:	07870800 	streq	r0, [r7, r0, lsl #16]
     770:	2c100000 	ldccs	0, cr0, [r0], {-0}
     774:	02000001 	andeq	r0, r0, #1
     778:	00770312 	rsbseq	r0, r7, r2, lsl r3
     77c:	00ae0000 	adceq	r0, lr, r0
     780:	00a80000 	adceq	r0, r8, r0
     784:	0f000000 	svceq	0x00000000
     788:	08000ece 	stmdaeq	r0, {r1, r2, r3, r6, r7, r9, sl, fp}
     78c:	08000ede 	stmdaeq	r0, {r1, r2, r3, r4, r6, r7, r9, sl, fp}
     790:	000007a9 	andeq	r0, r0, r9, lsr #15
     794:	00012c10 	andeq	r2, r1, r0, lsl ip
     798:	16120200 	ldrne	r0, [r2], -r0, lsl #4
     79c:	00000077 	andeq	r0, r0, r7, ror r0
     7a0:	000000e6 	andeq	r0, r0, r6, ror #1
     7a4:	000000e0 	andeq	r0, r0, r0, ror #1
     7a8:	09051100 	stmdbeq	r5, {r8, ip}
     7ac:	0ee20000 	cdpeq	0, 14, cr0, cr2, cr0, {0}
     7b0:	e2010800 	and	r0, r1, #0, 16
     7b4:	e408000e 	str	r0, [r8], #-14
     7b8:	0208000e 	andeq	r0, r8, #14
     7bc:	88120315 	ldmdahi	r2, {r0, r2, r4, r8, r9}
     7c0:	8308000e 	movwhi	r0, #32782	; 0x800e
     7c4:	d1000008 	tstle	r0, r8
     7c8:	13000007 	movwne	r0, #7
     7cc:	31015001 	tstcc	r1, r1
     7d0:	0ee21400 	cdpeq	4, 14, cr1, cr2, cr0, {0}
     7d4:	090f0800 	stmdbeq	pc, {fp}	; <UNPREDICTABLE>
     7d8:	ea140000 	b	5007e0 <_Min_Stack_Size+0x5003e0>
     7dc:	1d08000e 	stcne	0, cr0, [r8, #-56]	; 0xffffffc8
     7e0:	15000009 	strne	r0, [r0, #-9]
     7e4:	08000ef0 	stmdaeq	r0, {r4, r5, r6, r7, r9, sl, fp}
     7e8:	000007f4 	strdeq	r0, [r0], -r4
     7ec:	02500113 	subseq	r0, r0, #-1073741820	; 0xc0000004
     7f0:	00000074 	andeq	r0, r0, r4, ror r0
     7f4:	01910116 	orrseq	r0, r1, r6, lsl r1
     7f8:	0a020000 	beq	80800 <_Min_Stack_Size+0x80400>
     7fc:	03580106 	cmpeq	r8, #-2147483647	; 0x80000001
     800:	03640800 	cmneq	r4, #0, 16
     804:	7d020800 	stcvc	8, cr0, [r2, #-0]
     808:	08230100 	stmdaeq	r3!, {r8}
     80c:	0b170000 	bleq	5c0814 <_Min_Stack_Size+0x5c0414>
     810:	02000002 	andeq	r0, r0, #2
     814:	0077150a 	rsbseq	r1, r7, sl, lsl #10
     818:	011b0000 	tsteq	fp, r0
     81c:	01150000 	tsteq	r5, r0
     820:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
     824:	00024401 	andeq	r4, r2, r1, lsl #8
     828:	1c080200 	sfmne	f0, 4, [r8], {-0}
     82c:	00035601 	andeq	r5, r3, r1, lsl #12
     830:	00035808 	andeq	r5, r3, r8, lsl #16
     834:	007d0208 	rsbseq	r0, sp, r8, lsl #4
     838:	69011901 	stmdbvs	r1, {r0, r8, fp, ip}
     83c:	02000008 	andeq	r0, r0, #8
     840:	1a011c07 	bne	47864 <_Min_Stack_Size+0x47464>
     844:	0002ff01 	andeq	pc, r2, r1, lsl #30
     848:	06a40100 	strteq	r0, [r4], r0, lsl #2
     84c:	0800030c 	stmdaeq	r0, {r2, r3, r8, r9}
     850:	08000354 	stmdaeq	r0, {r2, r4, r6, r8, r9}
     854:	01007d02 	tsteq	r0, r2, lsl #26
     858:	00000883 	andeq	r0, r0, r3, lsl #17
     85c:	0100691b 	tsteq	r0, fp, lsl r9
     860:	00640ca5 	rsbeq	r0, r4, r5, lsr #25
     864:	014e0000 	mrseq	r0, (UNDEF: 78)
     868:	01460000 	mrseq	r0, (UNDEF: 70)
     86c:	741b0000 	ldrvc	r0, [fp], #-0
     870:	0100706d 	tsteq	r0, sp, rrx
     874:	00770ca6 	rsbseq	r0, r7, r6, lsr #25
     878:	01960000 	orrseq	r0, r6, r0
     87c:	01920000 	orrseq	r0, r2, r0
     880:	1c000000 	stcne	0, cr0, [r0], {-0}
     884:	0000a301 	andeq	sl, r0, r1, lsl #6
     888:	084c0100 	stmdaeq	ip, {r8}^
     88c:	00003001 	andeq	r3, r0, r1
     890:	0001e800 	andeq	lr, r1, r0, lsl #16
     894:	00030c08 	andeq	r0, r3, r8, lsl #24
     898:	007d0208 	rsbseq	r0, sp, r8, lsl #4
     89c:	0008dc01 	andeq	sp, r8, r1, lsl #24
     8a0:	01e21700 	mvneq	r1, r0, lsl #14
     8a4:	4c010000 	stcmi	0, cr0, [r1], {-0}
     8a8:	00003018 	andeq	r3, r0, r8, lsl r0
     8ac:	0001bd00 	andeq	fp, r1, r0, lsl #26
     8b0:	0001b500 	andeq	fp, r1, r0, lsl #10
     8b4:	00691b00 	rsbeq	r1, r9, r0, lsl #22
     8b8:	640c4d01 	strvs	r4, [ip], #-3329	; 0xfffff2ff
     8bc:	1b000000 	blne	8c4 <_Min_Stack_Size+0x4c4>
     8c0:	f7000002 			; <UNDEFINED> instruction: 0xf7000002
     8c4:	1b000001 	blne	8d0 <_Min_Stack_Size+0x4d0>
     8c8:	00706d74 	rsbseq	r6, r0, r4, ror sp
     8cc:	770c4e01 	strvc	r4, [ip, -r1, lsl #28]
     8d0:	5a000000 	bpl	8d8 <_Min_Stack_Size+0x4d8>
     8d4:	36000003 	strcc	r0, [r0], -r3
     8d8:	00000003 	andeq	r0, r0, r3
     8dc:	011e0116 	tsteq	lr, r6, lsl r1
     8e0:	1c010000 	stcne	0, cr0, [r1], {-0}
     8e4:	01500106 	cmpeq	r0, r6, lsl #2
     8e8:	01e80800 	mvneq	r0, r0, lsl #16
     8ec:	7d020800 	stcvc	8, cr0, [r2, #-0]
     8f0:	09050100 	stmdbeq	r5, {r8}
     8f4:	371d0000 	ldrcc	r0, [sp, -r0]
     8f8:	01000003 	tsteq	r0, r3
     8fc:	0051151c 	subseq	r1, r1, ip, lsl r5
     900:	50010000 	andpl	r0, r1, r0
     904:	02191e00 	andseq	r1, r9, #0, 28
     908:	b4030000 	strlt	r0, [r3], #-0
     90c:	1f031604 	svcne	0x00031604
     910:	00730101 	rsbseq	r0, r3, r1, lsl #2
     914:	00730000 	rsbseq	r0, r3, r0
     918:	24070000 	strcs	r0, [r7], #-0
     91c:	01011f06 	tsteq	r1, r6, lsl #30
     920:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     924:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     928:	00064207 	andeq	r4, r6, r7, lsl #4
     92c:	00001298 	muleq	r0, r8, r2
     930:	02170002 	andseq	r0, r7, #2
     934:	01040000 	mrseq	r0, (UNDEF: 4)
     938:	0000034a 	andeq	r0, r0, sl, asr #6
     93c:	0007840c 	andeq	r8, r7, ip, lsl #8
     940:	00026400 	andeq	r6, r2, r0, lsl #8
     944:	00036400 	andeq	r6, r3, r0, lsl #8
     948:	00098c08 	andeq	r8, r9, r8, lsl #24
     94c:	00043308 	andeq	r3, r4, r8, lsl #6
     950:	06010200 	streq	r0, [r1], -r0, lsl #4
     954:	00000258 	andeq	r0, r0, r8, asr r2
     958:	9b050202 	blls	141168 <_Min_Stack_Size+0x140d68>
     95c:	02000002 	andeq	r0, r0, #2
     960:	00820504 	addeq	r0, r2, r4, lsl #10
     964:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
     968:	00007d05 	andeq	r7, r0, r5, lsl #26
     96c:	031b0300 	tsteq	fp, #0, 6
     970:	2e040000 	cdpcs	0, 0, cr0, cr4, cr0, {0}
     974:	00005718 	andeq	r5, r0, r8, lsl r7
     978:	00410400 	subeq	r0, r1, r0, lsl #8
     97c:	41050000 	mrsmi	r0, (UNDEF: 5)
     980:	02000000 	andeq	r0, r0, #0
     984:	02560801 	subseq	r0, r6, #65536	; 0x10000
     988:	ff030000 			; <UNDEFINED> instruction: 0xff030000
     98c:	04000000 	streq	r0, [r0], #-0
     990:	006f1931 	rsbeq	r1, pc, r1, lsr r9	; <UNPREDICTABLE>
     994:	5e040000 	cdppl	0, 0, cr0, cr4, cr0, {0}
     998:	02000000 	andeq	r0, r0, #0
     99c:	017e0702 	cmneq	lr, r2, lsl #14
     9a0:	d5030000 	strle	r0, [r3, #-0]
     9a4:	04000002 	streq	r0, [r0], #-2
     9a8:	00871934 	addeq	r1, r7, r4, lsr r9
     9ac:	76040000 	strvc	r0, [r4], -r0
     9b0:	02000000 	andeq	r0, r0, #0
     9b4:	004d0704 	subeq	r0, sp, r4, lsl #14
     9b8:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
     9bc:	00004807 	andeq	r4, r0, r7, lsl #16
     9c0:	05040600 	streq	r0, [r4, #-1536]	; 0xfffffa00
     9c4:	00746e69 	rsbseq	r6, r4, r9, ror #28
     9c8:	00009504 	andeq	r9, r0, r4, lsl #10
     9cc:	07040200 	streq	r0, [r4, -r0, lsl #4]
     9d0:	00000052 	andeq	r0, r0, r2, asr r0
     9d4:	00073903 	andeq	r3, r7, r3, lsl #18
     9d8:	0f1a0300 	svceq	0x001a0300
     9dc:	000000b4 	strheq	r0, [r0], -r4
     9e0:	00ba0407 	adcseq	r0, sl, r7, lsl #8
     9e4:	01080000 	mrseq	r0, (UNDEF: 8)
     9e8:	000000c6 	andeq	r0, r0, r6, asr #1
     9ec:	00004109 	andeq	r4, r0, r9, lsl #2
     9f0:	080a0000 	stmdaeq	sl, {}	; <UNPREDICTABLE>
     9f4:	1b091b03 	blne	247608 <_Min_Stack_Size+0x247208>
     9f8:	0b000001 	bleq	a04 <_Min_Stack_Size+0x604>
     9fc:	00000467 	andeq	r0, r0, r7, ror #8
     a00:	410b1c03 	tstmi	fp, r3, lsl #24
     a04:	02000000 	andeq	r0, r0, #0
     a08:	a00b0023 	andge	r0, fp, r3, lsr #32
     a0c:	03000008 	movweq	r0, #8
     a10:	00410b1d 	subeq	r0, r1, sp, lsl fp
     a14:	23020000 	movwcs	r0, #8192	; 0x2000
     a18:	04d60b01 	ldrbeq	r0, [r6], #2817	; 0xb01
     a1c:	1e030000 	cdpne	0, 0, cr0, cr3, cr0, {0}
     a20:	00005e0c 	andeq	r5, r0, ip, lsl #28
     a24:	02230200 	eoreq	r0, r3, #0, 4
     a28:	0003ef0b 	andeq	lr, r3, fp, lsl #30
     a2c:	0c1f0300 	ldceq	3, cr0, [pc], {-0}
     a30:	0000005e 	andeq	r0, r0, lr, asr r0
     a34:	0b042302 	bleq	109644 <_Min_Stack_Size+0x109244>
     a38:	00000883 	andeq	r0, r0, r3, lsl #17
     a3c:	5e0c2003 	cdppl	0, 0, cr2, cr12, cr3, {0}
     a40:	02000000 	andeq	r0, r0, #0
     a44:	03000623 	movweq	r0, #1571	; 0x623
     a48:	0000090c 	andeq	r0, r0, ip, lsl #18
     a4c:	c6022103 	strgt	r2, [r2], -r3, lsl #2
     a50:	0c000000 	stceq	0, cr0, [r0], {-0}
     a54:	00250105 	eoreq	r0, r5, r5, lsl #2
     a58:	58050000 	stmdapl	r5, {}	; <UNPREDICTABLE>
     a5c:	00029e01 	andeq	r9, r2, r1, lsl #28
     a60:	086f0d00 	stmdaeq	pc!, {r8, sl, fp}^	; <UNPREDICTABLE>
     a64:	0d720000 	ldcleq	0, cr0, [r2, #-0]
     a68:	000004dd 	ldrdeq	r0, [r0], -sp
     a6c:	07170d74 			; <UNDEFINED> instruction: 0x07170d74
     a70:	0d750000 	ldcleq	0, cr0, [r5, #-0]
     a74:	00000952 	andeq	r0, r0, r2, asr r9
     a78:	04350d76 	ldrteq	r0, [r5], #-3446	; 0xfffff28a
     a7c:	0d7b0000 	ldcleq	0, cr0, [fp, #-0]
     a80:	00000940 	andeq	r0, r0, r0, asr #18
     a84:	04ba0d7c 	ldrteq	r0, [sl], #3452	; 0xd7c
     a88:	0d7e0000 	ldcleq	0, cr0, [lr, #-0]
     a8c:	000008d8 	ldrdeq	r0, [r0], -r8
     a90:	06f30e7f 			; <UNDEFINED> instruction: 0x06f30e7f
     a94:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
     a98:	00000730 	andeq	r0, r0, r0, lsr r7
     a9c:	05020e01 	streq	r0, [r2, #-3585]	; 0xfffff1ff
     aa0:	0e020000 	cdpeq	0, 0, cr0, cr2, cr0, {0}
     aa4:	00000607 	andeq	r0, r0, r7, lsl #12
     aa8:	04820e03 	streq	r0, [r2], #3587	; 0xe03
     aac:	0e040000 	cdpeq	0, 0, cr0, cr4, cr0, {0}
     ab0:	000004cd 	andeq	r0, r0, sp, asr #9
     ab4:	04970e05 	ldreq	r0, [r7], #3589	; 0xe05
     ab8:	0e060000 	cdpeq	0, 0, cr0, cr6, cr0, {0}
     abc:	00000895 	muleq	r0, r5, r8
     ac0:	06310e07 	ldrteq	r0, [r1], -r7, lsl #28
     ac4:	0e080000 	cdpeq	0, 0, cr0, cr8, cr0, {0}
     ac8:	000009e7 	andeq	r0, r0, r7, ror #19
     acc:	07250e09 	streq	r0, [r5, -r9, lsl #28]!
     ad0:	0e0a0000 	cdpeq	0, 0, cr0, cr10, cr0, {0}
     ad4:	000006ba 			; <UNDEFINED> instruction: 0x000006ba
     ad8:	04480e0b 	strbeq	r0, [r8], #-3595	; 0xfffff1f5
     adc:	0e0c0000 	cdpeq	0, 0, cr0, cr12, cr0, {0}
     ae0:	00000771 	andeq	r0, r0, r1, ror r7
     ae4:	056d0e0d 	strbeq	r0, [sp, #-3597]!	; 0xfffff1f3
     ae8:	0e0e0000 	cdpeq	0, 0, cr0, cr14, cr0, {0}
     aec:	000009bc 			; <UNDEFINED> instruction: 0x000009bc
     af0:	067d0e0f 	ldrbteq	r0, [sp], -pc, lsl #28
     af4:	0e100000 	cdpeq	0, 1, cr0, cr0, cr0, {0}
     af8:	00000415 	andeq	r0, r0, r5, lsl r4
     afc:	063c0e11 			; <UNDEFINED> instruction: 0x063c0e11
     b00:	0e120000 	cdpeq	0, 1, cr0, cr2, cr0, {0}
     b04:	00000934 	andeq	r0, r0, r4, lsr r9
     b08:	0a480e13 	beq	120435c <_Min_Stack_Size+0x1203f5c>
     b0c:	0e140000 	cdpeq	0, 1, cr0, cr4, cr0, {0}
     b10:	000009d6 	ldrdeq	r0, [r0], -r6
     b14:	058f0e15 	streq	r0, [pc, #3605]	; 1931 <_Min_Stack_Size+0x1531>
     b18:	0e160000 	cdpeq	0, 1, cr0, cr6, cr0, {0}
     b1c:	0000098c 	andeq	r0, r0, ip, lsl #19
     b20:	040b0e17 	streq	r0, [fp], #-3607	; 0xfffff1e9
     b24:	0e190000 	cdpeq	0, 1, cr0, cr9, cr0, {0}
     b28:	000006e8 	andeq	r0, r0, r8, ror #13
     b2c:	03e40e1a 	mvneq	r0, #416	; 0x1a0
     b30:	0e1b0000 	cdpeq	0, 1, cr0, cr11, cr0, {0}
     b34:	000008eb 	andeq	r0, r0, fp, ror #17
     b38:	06b00e1c 	ssateq	r0, #17, ip, lsl #28
     b3c:	0e1d0000 	cdpeq	0, 1, cr0, cr13, cr0, {0}
     b40:	0000043e 	andeq	r0, r0, lr, lsr r4
     b44:	07920e1e 			; <UNDEFINED> instruction: 0x07920e1e
     b48:	0e1f0000 	cdpeq	0, 1, cr0, cr15, cr0, {0}
     b4c:	000008cb 	andeq	r0, r0, fp, asr #17
     b50:	06460e20 	strbeq	r0, [r6], -r0, lsr #28
     b54:	0e210000 	cdpeq	0, 2, cr0, cr1, cr0, {0}
     b58:	00000428 	andeq	r0, r0, r8, lsr #8
     b5c:	054b0e22 	strbeq	r0, [fp, #-3618]	; 0xfffff1de
     b60:	0e230000 	cdpeq	0, 2, cr0, cr3, cr0, {0}
     b64:	000009a3 	andeq	r0, r0, r3, lsr #19
     b68:	08570e24 	ldmdaeq	r7, {r2, r5, r9, sl, fp}^
     b6c:	0e250000 	cdpeq	0, 2, cr0, cr5, cr0, {0}
     b70:	000005e8 	andeq	r0, r0, r8, ror #11
     b74:	0a320e26 	beq	c84414 <_Min_Stack_Size+0xc84014>
     b78:	0e270000 	cdpeq	0, 2, cr0, cr7, cr0, {0}
     b7c:	000004a2 	andeq	r0, r0, r2, lsr #9
     b80:	07d00e28 	ldrbeq	r0, [r0, r8, lsr #28]
     b84:	0e290000 	cdpeq	0, 2, cr0, cr9, cr0, {0}
     b88:	00000832 	andeq	r0, r0, r2, lsr r8
     b8c:	05630e2a 	strbeq	r0, [r3, #-3626]!	; 0xfffff1d6
     b90:	0e2b0000 	cdpeq	0, 2, cr0, cr11, cr0, {0}
     b94:	000009b2 			; <UNDEFINED> instruction: 0x000009b2
     b98:	07670e2c 	strbeq	r0, [r7, -ip, lsr #28]!
     b9c:	0e2e0000 	cdpeq	0, 2, cr0, cr14, cr0, {0}
     ba0:	00000658 	andeq	r0, r0, r8, asr r6
     ba4:	06900e2f 	ldreq	r0, [r0], pc, lsr #28
     ba8:	0e320000 	cdpeq	0, 3, cr0, cr2, cr0, {0}
     bac:	00000a1f 	andeq	r0, r0, pc, lsl sl
     bb0:	07540e33 	smmlareq	r4, r3, lr, r0
     bb4:	0e340000 	cdpeq	0, 3, cr0, cr4, cr0, {0}
     bb8:	0000052f 	andeq	r0, r0, pc, lsr #10
     bbc:	08b80e35 	ldmeq	r8!, {r0, r2, r4, r5, r9, sl, fp}
     bc0:	0e360000 	cdpeq	0, 3, cr0, cr6, cr0, {0}
     bc4:	0000066f 	andeq	r0, r0, pc, ror #12
     bc8:	d5030038 	strle	r0, [r3, #-56]	; 0xffffffc8
     bcc:	05000005 	streq	r0, [r0, #-5]
     bd0:	01270398 			; <UNDEFINED> instruction: 0x01270398
     bd4:	040f0000 	streq	r0, [pc], #-0	; bdc <_Min_Stack_Size+0x7dc>
     bd8:	0984020e 	stmibeq	r4, {r1, r2, r3, r9}
     bdc:	00000382 	andeq	r0, r0, r2, lsl #7
     be0:	0005140b 	andeq	r1, r5, fp, lsl #8
     be4:	11860200 	orrne	r0, r6, r0, lsl #4
     be8:	00000392 	muleq	r0, r2, r3
     bec:	0b002302 	bleq	97fc <_Min_Stack_Size+0x93fc>
     bf0:	000007ec 	andeq	r0, r0, ip, ror #15
     bf4:	97118702 	ldrls	r8, [r1, -r2, lsl #14]
     bf8:	02000003 	andeq	r0, r0, #3
     bfc:	9e0b2023 	cdpls	0, 0, cr2, cr11, cr3, {1}
     c00:	02000009 	andeq	r0, r0, #9
     c04:	03921188 	orrseq	r1, r2, #136, 2	; 0x22
     c08:	23030000 	movwcs	r0, #12288	; 0x3000
     c0c:	420b0180 	andmi	r0, fp, #128, 2
     c10:	02000005 	andeq	r0, r0, #5
     c14:	03971189 	orrseq	r1, r7, #1073741858	; 0x40000022
     c18:	23030000 	movwcs	r0, #12288	; 0x3000
     c1c:	050b01a0 	streq	r0, [fp, #-416]	; 0xfffffe60
     c20:	0200000a 	andeq	r0, r0, #10
     c24:	0392118a 	orrseq	r1, r2, #-2147483614	; 0x80000022
     c28:	23030000 	movwcs	r0, #12288	; 0x3000
     c2c:	000b0280 	andeq	r0, fp, r0, lsl #5
     c30:	02000008 	andeq	r0, r0, #8
     c34:	0397118b 	orrseq	r1, r7, #-1073741790	; 0xc0000022
     c38:	23030000 	movwcs	r0, #12288	; 0x3000
     c3c:	4f0b02a0 	svcmi	0x000b02a0
     c40:	02000007 	andeq	r0, r0, #7
     c44:	0392118c 	orrseq	r1, r2, #140, 2	; 0x23
     c48:	23030000 	movwcs	r0, #12288	; 0x3000
     c4c:	0a0b0380 	beq	2c1a54 <_Min_Stack_Size+0x2c1654>
     c50:	02000008 	andeq	r0, r0, #8
     c54:	0397118d 	orrseq	r1, r7, #1073741859	; 0x40000023
     c58:	23030000 	movwcs	r0, #12288	; 0x3000
     c5c:	ad0b03a0 	stcge	3, cr0, [fp, #-640]	; 0xfffffd80
     c60:	02000009 	andeq	r0, r0, #9
     c64:	0392118e 	orrseq	r1, r2, #-2147483613	; 0x80000023
     c68:	23030000 	movwcs	r0, #12288	; 0x3000
     c6c:	140b0480 	strne	r0, [fp], #-1152	; 0xfffffb80
     c70:	02000008 	andeq	r0, r0, #8
     c74:	03a7118f 			; <UNDEFINED> instruction: 0x03a7118f
     c78:	23030000 	movwcs	r0, #12288	; 0x3000
     c7c:	491004a0 	ldmdbmi	r0, {r5, r7, sl}
     c80:	90020050 	andls	r0, r2, r0, asr r0
     c84:	0003c711 	andeq	ip, r3, r1, lsl r7
     c88:	80230300 	eorhi	r0, r3, r0, lsl #6
     c8c:	081e0b06 	ldmdaeq	lr, {r1, r2, r8, r9, fp}
     c90:	91020000 	mrsls	r0, (UNDEF: 2)
     c94:	0003cc11 	andeq	ip, r3, r1, lsl ip
     c98:	f0230300 			; <UNDEFINED> instruction: 0xf0230300
     c9c:	07cb0b07 	strbeq	r0, [fp, r7, lsl #22]
     ca0:	92020000 	andls	r0, r2, #0
     ca4:	00008211 	andeq	r8, r0, r1, lsl r2
     ca8:	80230300 	eorhi	r0, r3, r0, lsl #6
     cac:	8211001c 	andshi	r0, r1, #28
     cb0:	92000000 	andls	r0, r0, #0
     cb4:	12000003 	andne	r0, r0, #3
     cb8:	000000a1 	andeq	r0, r0, r1, lsr #1
     cbc:	82040007 	andhi	r0, r4, #7
     cc0:	11000003 	tstne	r0, r3
     cc4:	00000076 	andeq	r0, r0, r6, ror r0
     cc8:	000003a7 	andeq	r0, r0, r7, lsr #7
     ccc:	0000a112 	andeq	sl, r0, r2, lsl r1
     cd0:	11001700 	tstne	r0, r0, lsl #14
     cd4:	00000076 	andeq	r0, r0, r6, ror r0
     cd8:	000003b7 			; <UNDEFINED> instruction: 0x000003b7
     cdc:	0000a112 	andeq	sl, r0, r2, lsl r1
     ce0:	11003700 	tstne	r0, r0, lsl #14
     ce4:	0000004d 	andeq	r0, r0, sp, asr #32
     ce8:	000003c7 	andeq	r0, r0, r7, asr #7
     cec:	0000a112 	andeq	sl, r0, r2, lsl r1
     cf0:	0400ef00 	streq	lr, [r0], #-3840	; 0xfffff100
     cf4:	000003b7 			; <UNDEFINED> instruction: 0x000003b7
     cf8:	00007611 	andeq	r7, r0, r1, lsl r6
     cfc:	0003dd00 	andeq	sp, r3, r0, lsl #26
     d00:	00a11300 	adceq	r1, r1, r0, lsl #6
     d04:	02830000 	addeq	r0, r3, #0
     d08:	08a90300 	stmiaeq	r9!, {r8, r9}
     d0c:	93020000 	movwls	r0, #8192	; 0x2000
     d10:	0002aa04 	andeq	sl, r2, r4, lsl #20
     d14:	028e1400 	addeq	r1, lr, #0, 8
     d18:	ce020000 	cdpgt	0, 0, cr0, cr2, cr0, {0}
     d1c:	009c1506 	addseq	r1, ip, r6, lsl #10
     d20:	01010000 	mrseq	r0, (UNDEF: 1)
     d24:	00013a15 	andeq	r3, r1, r5, lsl sl
     d28:	114c0600 	cmpne	ip, r0, lsl #12
     d2c:	00000076 	andeq	r0, r0, r6, ror r0
     d30:	18160101 	ldmdane	r6, {r0, r8}
     d34:	09016105 	stmdbeq	r1, {r0, r2, r8, sp, lr}
     d38:	00000441 	andeq	r0, r0, r1, asr #8
     d3c:	0004c617 	andeq	ip, r4, r7, lsl r6
     d40:	01630500 	cmneq	r3, r0, lsl #10
     d44:	00008211 	andeq	r8, r0, r1, lsl r2
     d48:	00230200 	eoreq	r0, r3, r0, lsl #4
     d4c:	434d5018 	movtmi	r5, #53272	; 0xd018
     d50:	01640500 	cmneq	r4, r0, lsl #10
     d54:	00008211 	andeq	r8, r0, r1, lsl r2
     d58:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     d5c:	0006dc17 	andeq	sp, r6, r7, lsl ip
     d60:	01650500 	cmneq	r5, r0, lsl #10
     d64:	00045111 	andeq	r5, r4, r1, lsl r1
     d68:	08230200 	stmdaeq	r3!, {r9}
     d6c:	00821100 	addeq	r1, r2, r0, lsl #2
     d70:	04510000 	ldrbeq	r0, [r1], #-0
     d74:	a1120000 	tstge	r2, r0
     d78:	03000000 	movweq	r0, #0
     d7c:	04410400 	strbeq	r0, [r1], #-1024	; 0xfffffc00
     d80:	f6190000 			; <UNDEFINED> instruction: 0xf6190000
     d84:	05000003 	streq	r0, [r0, #-3]
     d88:	06030166 	streq	r0, [r3], -r6, ror #2
     d8c:	16000004 	strne	r0, [r0], -r4
     d90:	01930538 	orrseq	r0, r3, r8, lsr r5
     d94:	00054d09 	andeq	r4, r5, r9, lsl #26
     d98:	52431800 	subpl	r1, r3, #0, 16
     d9c:	01950500 	orrseq	r0, r5, r0, lsl #10
     da0:	00008211 	andeq	r8, r0, r1, lsl r2
     da4:	00230200 	eoreq	r0, r3, r0, lsl #4
     da8:	00030f17 	andeq	r0, r3, r7, lsl pc
     dac:	01960500 	orrseq	r0, r6, r0, lsl #10
     db0:	00008211 	andeq	r8, r0, r1, lsl r2
     db4:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     db8:	0002ca17 	andeq	ip, r2, r7, lsl sl
     dbc:	01970500 	orrseq	r0, r7, r0, lsl #10
     dc0:	00008211 	andeq	r8, r0, r1, lsl r2
     dc4:	08230200 	stmdaeq	r3!, {r9}
     dc8:	52494318 	subpl	r4, r9, #24, 6	; 0x60000000
     dcc:	01980500 	orrseq	r0, r8, r0, lsl #10
     dd0:	00008211 	andeq	r8, r0, r1, lsl r2
     dd4:	0c230200 	sfmeq	f0, 4, [r3], #-0
     dd8:	00020317 	andeq	r0, r2, r7, lsl r3
     ddc:	01990500 	orrseq	r0, r9, r0, lsl #10
     de0:	00008211 	andeq	r8, r0, r1, lsl r2
     de4:	10230200 	eorne	r0, r3, r0, lsl #4
     de8:	0000c017 	andeq	ip, r0, r7, lsl r0
     dec:	019a0500 	orrseq	r0, sl, r0, lsl #10
     df0:	00008211 	andeq	r8, r0, r1, lsl r2
     df4:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     df8:	00021017 	andeq	r1, r2, r7, lsl r0
     dfc:	019b0500 	orrseq	r0, fp, r0, lsl #10
     e00:	00008211 	andeq	r8, r0, r1, lsl r2
     e04:	18230200 	stmdane	r3!, {r9}
     e08:	0003dd17 	andeq	sp, r3, r7, lsl sp
     e0c:	019c0500 	orrseq	r0, ip, r0, lsl #10
     e10:	00008211 	andeq	r8, r0, r1, lsl r2
     e14:	1c230200 	sfmne	f0, 4, [r3], #-0
     e18:	0002bb17 	andeq	fp, r2, r7, lsl fp
     e1c:	019d0500 	orrseq	r0, sp, r0, lsl #10
     e20:	00008211 	andeq	r8, r0, r1, lsl r2
     e24:	20230200 	eorcs	r0, r3, r0, lsl #4
     e28:	0002f017 	andeq	pc, r2, r7, lsl r0	; <UNPREDICTABLE>
     e2c:	019e0500 	orrseq	r0, lr, r0, lsl #10
     e30:	00008211 	andeq	r8, r0, r1, lsl r2
     e34:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
     e38:	0000d817 	andeq	sp, r0, r7, lsl r8
     e3c:	019f0500 	orrseq	r0, pc, r0, lsl #10
     e40:	00008211 	andeq	r8, r0, r1, lsl r2
     e44:	28230200 	stmdacs	r3!, {r9}
     e48:	0001ba17 	andeq	fp, r1, r7, lsl sl
     e4c:	01a00500 	lsleq	r0, r0, #10
     e50:	00008211 	andeq	r8, r0, r1, lsl r2
     e54:	2c230200 	sfmcs	f0, 4, [r3], #-0
     e58:	00019717 	andeq	r9, r1, r7, lsl r7
     e5c:	01a10500 			; <UNDEFINED> instruction: 0x01a10500
     e60:	00008211 	andeq	r8, r0, r1, lsl r2
     e64:	30230200 	eorcc	r0, r3, r0, lsl #4
     e68:	52534318 	subspl	r4, r3, #24, 6	; 0x60000000
     e6c:	01a20500 			; <UNDEFINED> instruction: 0x01a20500
     e70:	00008211 	andeq	r8, r0, r1, lsl r2
     e74:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
     e78:	01641900 	cmneq	r4, r0, lsl #18
     e7c:	a3050000 	movwge	r0, #20480	; 0x5000
     e80:	04630301 	strbteq	r0, [r3], #-769	; 0xfffffcff
     e84:	54160000 	ldrpl	r0, [r6], #-0
     e88:	09023705 	stmdbeq	r2, {r0, r2, r8, r9, sl, ip, sp}
     e8c:	00000705 	andeq	r0, r0, r5, lsl #14
     e90:	00060217 	andeq	r0, r6, r7, lsl r2
     e94:	02390500 	eorseq	r0, r9, #0, 10
     e98:	00006a11 	andeq	r6, r0, r1, lsl sl
     e9c:	00230200 	eoreq	r0, r3, r0, lsl #4
     ea0:	0007ec17 	andeq	lr, r7, r7, lsl ip
     ea4:	023a0500 	eorseq	r0, sl, #0, 10
     ea8:	00006a11 	andeq	r6, r0, r1, lsl sl
     eac:	02230200 	eoreq	r0, r3, #0, 4
     eb0:	00065317 	andeq	r5, r6, r7, lsl r3
     eb4:	023b0500 	eorseq	r0, fp, #0, 10
     eb8:	00006a11 	andeq	r6, r0, r1, lsl sl
     ebc:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     ec0:	0007f617 	andeq	pc, r7, r7, lsl r6	; <UNPREDICTABLE>
     ec4:	023c0500 	eorseq	r0, ip, #0, 10
     ec8:	00006a11 	andeq	r6, r0, r1, lsl sl
     ecc:	06230200 	strteq	r0, [r3], -r0, lsl #4
     ed0:	0006e317 	andeq	lr, r6, r7, lsl r3
     ed4:	023d0500 	eorseq	r0, sp, #0, 10
     ed8:	00006a11 	andeq	r6, r0, r1, lsl sl
     edc:	08230200 	stmdaeq	r3!, {r9}
     ee0:	00080017 	andeq	r0, r8, r7, lsl r0
     ee4:	023e0500 	eorseq	r0, lr, #0, 10
     ee8:	00006a11 	andeq	r6, r0, r1, lsl sl
     eec:	0a230200 	beq	8c16f4 <_Min_Stack_Size+0x8c12f4>
     ef0:	00071217 	andeq	r1, r7, r7, lsl r2
     ef4:	023f0500 	eorseq	r0, pc, #0, 10
     ef8:	00006a11 	andeq	r6, r0, r1, lsl sl
     efc:	0c230200 	sfmeq	f0, 4, [r3], #-0
     f00:	00080a17 	andeq	r0, r8, r7, lsl sl
     f04:	02400500 	subeq	r0, r0, #0, 10
     f08:	00006a11 	andeq	r6, r0, r1, lsl sl
     f0c:	0e230200 	cdpeq	2, 2, cr0, cr3, cr0, {0}
     f10:	00099917 	andeq	r9, r9, r7, lsl r9
     f14:	02410500 	subeq	r0, r1, #0, 10
     f18:	00006a11 	andeq	r6, r0, r1, lsl sl
     f1c:	10230200 	eorne	r0, r3, r0, lsl #4
     f20:	00081417 	andeq	r1, r8, r7, lsl r4
     f24:	02420500 	subeq	r0, r2, #0, 10
     f28:	00006a11 	andeq	r6, r0, r1, lsl sl
     f2c:	12230200 	eorne	r0, r3, #0, 4
     f30:	0007e717 	andeq	lr, r7, r7, lsl r7
     f34:	02430500 	subeq	r0, r3, #0, 10
     f38:	00006a11 	andeq	r6, r0, r1, lsl sl
     f3c:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     f40:	00081e17 	andeq	r1, r8, r7, lsl lr
     f44:	02440500 	subeq	r0, r4, #0, 10
     f48:	00006a11 	andeq	r6, r0, r1, lsl sl
     f4c:	16230200 	strtne	r0, [r3], -r0, lsl #4
     f50:	00088b17 	andeq	r8, r8, r7, lsl fp
     f54:	02450500 	subeq	r0, r5, #0, 10
     f58:	00006a11 	andeq	r6, r0, r1, lsl sl
     f5c:	18230200 	stmdane	r3!, {r9}
     f60:	00082817 	andeq	r2, r8, r7, lsl r8
     f64:	02460500 	subeq	r0, r6, #0, 10
     f68:	00006a11 	andeq	r6, r0, r1, lsl sl
     f6c:	1a230200 	bne	8c1774 <_Min_Stack_Size+0x8c1374>
     f70:	00090717 	andeq	r0, r9, r7, lsl r7
     f74:	02470500 	subeq	r0, r7, #0, 10
     f78:	00006a11 	andeq	r6, r0, r1, lsl sl
     f7c:	1c230200 	sfmne	f0, 4, [r3], #-0
     f80:	00023a17 	andeq	r3, r2, r7, lsl sl
     f84:	02480500 	subeq	r0, r8, #0, 10
     f88:	00071511 	andeq	r1, r7, r1, lsl r5
     f8c:	1e230200 	cdpne	2, 2, cr0, cr3, cr0, {0}
     f90:	0008b317 	andeq	fp, r8, r7, lsl r3
     f94:	02490500 	subeq	r0, r9, #0, 10
     f98:	00006a11 	andeq	r6, r0, r1, lsl sl
     f9c:	40230200 	eormi	r0, r3, r0, lsl #4
     fa0:	000a3e17 	andeq	r3, sl, r7, lsl lr
     fa4:	024a0500 	subeq	r0, sl, #0, 10
     fa8:	00006a11 	andeq	r6, r0, r1, lsl sl
     fac:	42230200 	eormi	r0, r3, #0, 4
     fb0:	0004fd17 	andeq	pc, r4, r7, lsl sp	; <UNPREDICTABLE>
     fb4:	024b0500 	subeq	r0, fp, #0, 10
     fb8:	00006a11 	andeq	r6, r0, r1, lsl sl
     fbc:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
     fc0:	00084317 	andeq	r4, r8, r7, lsl r3
     fc4:	024c0500 	subeq	r0, ip, #0, 10
     fc8:	00006a11 	andeq	r6, r0, r1, lsl sl
     fcc:	46230200 	strtmi	r0, [r3], -r0, lsl #4
     fd0:	524e4618 	subpl	r4, lr, #24, 12	; 0x1800000
     fd4:	024d0500 	subeq	r0, sp, #0, 10
     fd8:	00006a11 	andeq	r6, r0, r1, lsl sl
     fdc:	48230200 	stmdami	r3!, {r9}
     fe0:	00084d17 	andeq	r4, r8, r7, lsl sp
     fe4:	024e0500 	subeq	r0, lr, #0, 10
     fe8:	00006a11 	andeq	r6, r0, r1, lsl sl
     fec:	4a230200 	bmi	8c17f4 <_Min_Stack_Size+0x8c13f4>
     ff0:	0005a517 	andeq	sl, r5, r7, lsl r5
     ff4:	024f0500 	subeq	r0, pc, #0, 10
     ff8:	00006a11 	andeq	r6, r0, r1, lsl sl
     ffc:	4c230200 	sfmmi	f0, 4, [r3], #-0
    1000:	000a5417 	andeq	r5, sl, r7, lsl r4
    1004:	02500500 	subseq	r0, r0, #0, 10
    1008:	00006a11 	andeq	r6, r0, r1, lsl sl
    100c:	4e230200 	cdpmi	2, 2, cr0, cr3, cr0, {0}
    1010:	0009cf17 	andeq	ip, r9, r7, lsl pc
    1014:	02510500 	subseq	r0, r1, #0, 10
    1018:	00006a11 	andeq	r6, r0, r1, lsl sl
    101c:	50230200 	eorpl	r0, r3, r0, lsl #4
    1020:	000a5e17 	andeq	r5, sl, r7, lsl lr
    1024:	02520500 	subseq	r0, r2, #0, 10
    1028:	00006a11 	andeq	r6, r0, r1, lsl sl
    102c:	52230200 	eorpl	r0, r3, #0, 4
    1030:	006a1100 	rsbeq	r1, sl, r0, lsl #2
    1034:	07150000 	ldreq	r0, [r5, -r0]
    1038:	a1120000 	tstge	r2, r0
    103c:	10000000 	andne	r0, r0, r0
    1040:	07050400 	streq	r0, [r5, -r0, lsl #8]
    1044:	99190000 	ldmdbls	r9, {}	; <UNPREDICTABLE>
    1048:	05000005 	streq	r0, [r0, #-5]
    104c:	5a030253 	bpl	c19a0 <_Min_Stack_Size+0xc15a0>
    1050:	0a000005 	beq	106c <_Min_Stack_Size+0xc6c>
    1054:	07230104 	streq	r0, [r3, -r4, lsl #2]!
    1058:	00000767 	andeq	r0, r0, r7, ror #14
    105c:	0007461a 	andeq	r4, r7, sl, lsl r6
    1060:	12240100 	eorne	r0, r4, #0, 2
    1064:	00000076 	andeq	r0, r0, r6, ror r0
    1068:	02160a04 	andseq	r0, r6, #4, 20	; 0x4000
    106c:	261a0023 	ldrcs	r0, [sl], -r3, lsr #32
    1070:	01000009 	tsteq	r0, r9
    1074:	00761225 	rsbseq	r1, r6, r5, lsr #4
    1078:	05040000 	streq	r0, [r4, #-0]
    107c:	00230211 	eoreq	r0, r3, r1, lsl r2
    1080:	0007be1a 	andeq	fp, r7, sl, lsl lr
    1084:	12260100 	eorne	r0, r6, #0, 2
    1088:	00000076 	andeq	r0, r0, r6, ror r0
    108c:	02100104 	andseq	r0, r0, #4, 2
    1090:	1b000023 	blne	1124 <_Min_Stack_Size+0xd24>
    1094:	0e210104 	sufeqs	f0, f1, f4
    1098:	00000782 	andeq	r0, r0, r2, lsl #15
    109c:	0007421c 	andeq	r4, r7, ip, lsl r2
    10a0:	10220100 	eorne	r0, r2, r0, lsl #2
    10a4:	00000076 	andeq	r0, r0, r6, ror r0
    10a8:	0007271d 	andeq	r2, r7, sp, lsl r7
    10ac:	67040000 	strvs	r0, [r4, -r0]
    10b0:	0a000007 	beq	10d4 <_Min_Stack_Size+0xcd4>
    10b4:	072c0104 	streq	r0, [ip, -r4, lsl #2]!
    10b8:	000007c7 	andeq	r0, r0, r7, asr #15
    10bc:	000a0e1a 	andeq	r0, sl, sl, lsl lr
    10c0:	122d0100 	eorne	r0, sp, #0, 2
    10c4:	00000076 	andeq	r0, r0, r6, ror r0
    10c8:	02160a04 	andseq	r0, r6, #4, 20	; 0x4000
    10cc:	9f1a0023 	svcls	0x001a0023
    10d0:	01000007 	tsteq	r0, r7
    10d4:	0076122e 	rsbseq	r1, r6, lr, lsr #4
    10d8:	05040000 	streq	r0, [r4, #-0]
    10dc:	00230211 	eoreq	r0, r3, r1, lsl r2
    10e0:	0009621a 	andeq	r6, r9, sl, lsl r2
    10e4:	122f0100 	eorne	r0, pc, #0, 2
    10e8:	00000076 	andeq	r0, r0, r6, ror r0
    10ec:	02100104 	andseq	r0, r0, #4, 2
    10f0:	1b000023 	blne	1184 <_Min_Stack_Size+0xd84>
    10f4:	0e2a0104 	sufeqe	f0, f2, f4
    10f8:	000007e2 	andeq	r0, r0, r2, ror #15
    10fc:	000a0a1c 	andeq	r0, sl, ip, lsl sl
    1100:	102b0100 	eorne	r0, fp, r0, lsl #2
    1104:	00000076 	andeq	r0, r0, r6, ror r0
    1108:	0007871d 	andeq	r8, r7, sp, lsl r7
    110c:	c7040000 	strgt	r0, [r4, -r0]
    1110:	0a000007 	beq	1134 <_Min_Stack_Size+0xd34>
    1114:	091f0110 	ldmdbeq	pc, {r4, r8}	; <UNPREDICTABLE>
    1118:	0000081f 	andeq	r0, r0, pc, lsl r8
    111c:	0009f90b 	andeq	pc, r9, fp, lsl #18
    1120:	17200100 	strne	r0, [r0, -r0, lsl #2]!
    1124:	00000082 	andeq	r0, r0, r2, lsl #1
    1128:	1e002302 	cdpne	3, 0, cr2, cr0, cr2, {0}
    112c:	00000782 	andeq	r0, r0, r2, lsl #15
    1130:	0b042302 	bleq	109d40 <_Min_Stack_Size+0x109940>
    1134:	0000091a 	andeq	r0, r0, sl, lsl r9
    1138:	82172901 	andshi	r2, r7, #16384	; 0x4000
    113c:	02000000 	andeq	r0, r0, #0
    1140:	e21e0823 	ands	r0, lr, #2293760	; 0x230000
    1144:	02000007 	andeq	r0, r0, #7
    1148:	03000c23 	movweq	r0, #3107	; 0xc23
    114c:	00000662 	andeq	r0, r0, r2, ror #12
    1150:	e7023201 	str	r3, [r2, -r1, lsl #4]
    1154:	11000007 	tstne	r0, r7
    1158:	000000a8 	andeq	r0, r0, r8, lsr #1
    115c:	0000083b 	andeq	r0, r0, fp, lsr r8
    1160:	0000a112 	andeq	sl, r0, r2, lsl r1
    1164:	1f000700 	svcne	0x00000700
    1168:	0000096f 	andeq	r0, r0, pc, ror #18
    116c:	2b0a3401 	blcs	28e178 <_Min_Stack_Size+0x28dd78>
    1170:	01000008 	tsteq	r0, r8
    1174:	02240305 	eoreq	r0, r4, #335544320	; 0x14000000
    1178:	1e1f2000 	cdpne	0, 1, cr2, cr15, cr0, {0}
    117c:	01000006 	tsteq	r0, r6
    1180:	082b0a35 	stmdaeq	fp!, {r0, r2, r4, r5, r9, fp}
    1184:	05010000 	streq	r0, [r1, #-0]
    1188:	00024403 	andeq	r4, r2, r3, lsl #8
    118c:	04752020 	ldrbteq	r2, [r5], #-32	; 0xffffffe0
    1190:	37010000 	strcc	r0, [r1, -r0]
    1194:	00011b16 	andeq	r1, r1, r6, lsl fp
    1198:	14030500 	strne	r0, [r3], #-1280	; 0xfffffb00
    119c:	20200000 	eorcs	r0, r0, r0
    11a0:	00000615 	andeq	r0, r0, r5, lsl r6
    11a4:	41104901 	tstmi	r0, r1, lsl #18
    11a8:	05000000 	streq	r0, [r0, #-0]
    11ac:	00001003 	andeq	r1, r0, r3
    11b0:	06292020 	strteq	r2, [r9], -r0, lsr #32
    11b4:	4a010000 	bmi	411bc <_Min_Stack_Size+0x40dbc>
    11b8:	00089717 	andeq	r9, r8, r7, lsl r7
    11bc:	0c030500 	cfstr32eq	mvfx0, [r3], {-0}
    11c0:	07200000 	streq	r0, [r0, -r0]!
    11c4:	00005204 	andeq	r5, r0, r4, lsl #4
    11c8:	04f32000 	ldrbteq	r2, [r3], #0
    11cc:	4b010000 	blmi	411d4 <_Min_Stack_Size+0x40dd4>
    11d0:	00005e11 	andeq	r5, r0, r1, lsl lr
    11d4:	12030500 	andne	r0, r3, #0, 10
    11d8:	20200000 	eorcs	r0, r0, r0
    11dc:	000005f4 	strdeq	r0, [r0], -r4
    11e0:	41106601 	tstmi	r0, r1, lsl #12
    11e4:	05000000 	streq	r0, [r0, #-0]
    11e8:	00001e03 	andeq	r1, r0, r3, lsl #28
    11ec:	04b12020 	ldrteq	r2, [r1], #32
    11f0:	ac010000 	stcge	0, cr0, [r1], {-0}
    11f4:	00005e11 	andeq	r5, r0, r1, lsl lr
    11f8:	00030500 	andeq	r0, r3, r0, lsl #10
    11fc:	16200000 	strtne	r0, [r0], -r0
    1200:	013f0104 	teqeq	pc, r4, lsl #2
    1204:	00091705 	andeq	r1, r9, r5, lsl #14
    1208:	0a0e2100 	beq	389610 <_Min_Stack_Size+0x389210>
    120c:	40010000 	andmi	r0, r1, r0
    1210:	00761001 	rsbseq	r1, r6, r1
    1214:	0a040000 	beq	10121c <_Min_Stack_Size+0x100e1c>
    1218:	00230216 	eoreq	r0, r3, r6, lsl r2
    121c:	00079f21 	andeq	r9, r7, r1, lsr #30
    1220:	01410100 	mrseq	r0, (UNDEF: 81)
    1224:	00007610 	andeq	r7, r0, r0, lsl r6
    1228:	11050400 	tstne	r5, r0, lsl #8
    122c:	21002302 	tstcs	r0, r2, lsl #6
    1230:	00000962 	andeq	r0, r0, r2, ror #18
    1234:	10014201 	andne	r4, r1, r1, lsl #4
    1238:	00000076 	andeq	r0, r0, r6, ror r0
    123c:	02100104 	andseq	r0, r0, #4, 2
    1240:	22000023 	andcs	r0, r0, #35	; 0x23
    1244:	013d0104 	teqeq	sp, r4, lsl #2
    1248:	0009340c 	andeq	r3, r9, ip, lsl #8
    124c:	04f72300 	ldrbteq	r2, [r7], #768	; 0x300
    1250:	3e010000 	cdpcc	0, 0, cr0, cr1, cr0, {0}
    1254:	00760e01 	rsbseq	r0, r6, r1, lsl #28
    1258:	d31d0000 	tstle	sp, #0
    125c:	00000008 	andeq	r0, r0, r8
    1260:	00091704 	andeq	r1, r9, r4, lsl #14
    1264:	01081600 	tsteq	r8, r0, lsl #12
    1268:	5c09013b 	stfpls	f0, [r9], {59}	; 0x3b
    126c:	17000009 	strne	r0, [r0, -r9]
    1270:	00000921 	andeq	r0, r0, r1, lsr #18
    1274:	15013c01 	strne	r3, [r1, #-3073]	; 0xfffff3ff
    1278:	00000082 	andeq	r0, r0, r2, lsl #1
    127c:	1e002302 	cdpne	3, 0, cr2, cr0, cr2, {0}
    1280:	00000934 	andeq	r0, r0, r4, lsr r9
    1284:	00042302 	andeq	r2, r4, r2, lsl #6
    1288:	00045b19 	andeq	r5, r4, r9, lsl fp
    128c:	01450100 	mrseq	r0, (UNDEF: 85)
    1290:	00093902 	andeq	r3, r9, r2, lsl #18
    1294:	a3012400 	movwge	r2, #5120	; 0x1400
    1298:	01000006 	tsteq	r0, r6
    129c:	01050155 	tsteq	r5, r5, asr r1
    12a0:	00000095 	muleq	r0, r5, r0
    12a4:	08000818 	stmdaeq	r0, {r3, r4, fp}
    12a8:	08000872 	stmdaeq	r0, {r1, r4, r5, r6, fp}
    12ac:	0000044f 	andeq	r0, r0, pc, asr #8
    12b0:	000a1d01 	andeq	r1, sl, r1, lsl #26
    12b4:	64692500 	strbtvs	r2, [r9], #-1280	; 0xfffffb00
    12b8:	55010078 	strpl	r0, [r1, #-120]	; 0xffffff88
    12bc:	00411a01 	subeq	r1, r1, r1, lsl #20
    12c0:	04730000 	ldrbteq	r0, [r3], #-0
    12c4:	046f0000 	strbteq	r0, [pc], #-0	; 12cc <_Min_Stack_Size+0xecc>
    12c8:	62250000 	eorvs	r0, r5, #0
    12cc:	01006675 	tsteq	r0, r5, ror r6
    12d0:	1d290155 	stfnes	f0, [r9, #-340]!	; 0xfffffeac
    12d4:	9a00000a 	bls	1304 <_Min_Stack_Size+0xf04>
    12d8:	94000004 	strls	r0, [r0], #-4
    12dc:	26000004 	strcs	r0, [r0], -r4
    12e0:	000005cf 	andeq	r0, r0, pc, asr #11
    12e4:	10015601 	andne	r5, r1, r1, lsl #12
    12e8:	00000a23 	andeq	r0, r0, r3, lsr #20
    12ec:	000004cc 	andeq	r0, r0, ip, asr #9
    12f0:	000004c8 	andeq	r0, r0, r8, asr #9
    12f4:	007a7327 	rsbseq	r7, sl, r7, lsr #6
    12f8:	07015701 	streq	r5, [r1, -r1, lsl #14]
    12fc:	00000095 	muleq	r0, r5, r0
    1300:	000004f6 	strdeq	r0, [r0], -r6
    1304:	000004f4 	strdeq	r0, [r0], -r4
    1308:	01006e27 	tsteq	r0, r7, lsr #28
    130c:	95070159 	strls	r0, [r7, #-345]	; 0xfffffea7
    1310:	0f000000 	svceq	0x00000000
    1314:	09000005 	stmdbeq	r0, {r0, r2}
    1318:	27000005 	strcs	r0, [r0, -r5]
    131c:	01006e69 	tsteq	r0, r9, ror #28
    1320:	290d015a 	stmdbcs	sp, {r1, r3, r4, r6, r8}
    1324:	4600000a 	strmi	r0, [r0], -sl
    1328:	40000005 	andmi	r0, r0, r5
    132c:	28000005 	stmdacs	r0, {r0, r2}
    1330:	00000088 	andeq	r0, r0, r8, lsl #1
    1334:	01006927 	tsteq	r0, r7, lsr #18
    1338:	950b015b 	strls	r0, [fp, #-347]	; 0xfffffea5
    133c:	73000000 	movwvc	r0, #0
    1340:	71000005 	tstvc	r0, r5
    1344:	00000005 	andeq	r0, r0, r5
    1348:	5e040700 	cdppl	7, 0, cr0, cr4, cr0, {0}
    134c:	07000000 	streq	r0, [r0, -r0]
    1350:	00095c04 	andeq	r5, r9, r4, lsl #24
    1354:	76040700 	strvc	r0, [r4], -r0, lsl #14
    1358:	29000000 	stmdbcs	r0, {}	; <UNPREDICTABLE>
    135c:	00055501 	andeq	r5, r5, r1, lsl #10
    1360:	01470100 	mrseq	r0, (UNDEF: 87)
    1364:	07680106 	strbeq	r0, [r8, -r6, lsl #2]!
    1368:	07bc0800 	ldreq	r0, [ip, r0, lsl #16]!
    136c:	05870800 	streq	r0, [r7, #2048]	; 0x800
    1370:	eb010000 	bl	41378 <_Min_Stack_Size+0x40f78>
    1374:	2500000a 	strcs	r0, [r0, #-10]
    1378:	00786469 	rsbseq	r6, r8, r9, ror #8
    137c:	1c014701 	stcne	7, cr4, [r1], {1}
    1380:	00000041 	andeq	r0, r0, r1, asr #32
    1384:	000005ad 	andeq	r0, r0, sp, lsr #11
    1388:	000005a7 	andeq	r0, r0, r7, lsr #11
    138c:	6675622a 	ldrbtvs	r6, [r5], -sl, lsr #4
    1390:	01470100 	mrseq	r0, (UNDEF: 87)
    1394:	00089730 	andeq	r9, r8, r0, lsr r7
    1398:	2b510100 	blcs	14417a0 <_Min_Stack_Size+0x14413a0>
    139c:	00000e60 	andeq	r0, r0, r0, ror #28
    13a0:	3e014701 	cdpcc	7, 0, cr4, cr1, cr1, {0}
    13a4:	0000005e 	andeq	r0, r0, lr, asr r0
    13a8:	cf265201 	svcgt	0x00265201
    13ac:	01000005 	tsteq	r0, r5
    13b0:	23100148 	tstcs	r0, #72, 2
    13b4:	db00000a 	blle	13e4 <_Min_Stack_Size+0xfe4>
    13b8:	d9000005 	stmdble	r0, {r0, r2}
    13bc:	27000005 	strcs	r0, [r0, -r5]
    13c0:	0100324e 	tsteq	r0, lr, asr #4
    13c4:	5e0c0149 	adfplem	f0, f4, #1.0
    13c8:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
    13cc:	ee000005 	cdp	0, 0, cr0, cr0, cr5, {0}
    13d0:	26000005 	strcs	r0, [r0], -r5
    13d4:	00000405 	andeq	r0, r0, r5, lsl #8
    13d8:	0d014b01 	vstreq	d4, [r1, #-4]
    13dc:	00000a1d 	andeq	r0, r0, sp, lsl sl
    13e0:	00000605 	andeq	r0, r0, r5, lsl #12
    13e4:	00000603 	andeq	r0, r0, r3, lsl #12
    13e8:	74756f27 	ldrbtvc	r6, [r5], #-3879	; 0xfffff0d9
    13ec:	014c0100 	mrseq	r0, (UNDEF: 92)
    13f0:	000a290d 	andeq	r2, sl, sp, lsl #18
    13f4:	00061e00 	andeq	r1, r6, r0, lsl #28
    13f8:	00061800 	andeq	r1, r6, r0, lsl #16
    13fc:	00502800 	subseq	r2, r0, r0, lsl #16
    1400:	69270000 	stmdbvs	r7!, {}	; <UNPREDICTABLE>
    1404:	014d0100 	mrseq	r0, (UNDEF: 93)
    1408:	00005e10 	andeq	r5, r0, r0, lsl lr
    140c:	00065900 	andeq	r5, r6, r0, lsl #18
    1410:	00065500 	andeq	r5, r6, r0, lsl #10
    1414:	2c000000 	stccs	0, cr0, [r0], {-0}
    1418:	0005ab01 	andeq	sl, r5, r1, lsl #22
    141c:	01110100 	tsteq	r1, r0, lsl #2
    1420:	00064006 	andeq	r4, r6, r6
    1424:	00076808 	andeq	r6, r7, r8, lsl #16
    1428:	00067908 	andeq	r7, r6, r8, lsl #18
    142c:	0bd10100 	bleq	ff441834 <BootRAM+0xe3b1fd5>
    1430:	302d0000 	eorcc	r0, sp, r0
    1434:	23000000 	movwcs	r0, #0
    1438:	2700000b 	strcs	r0, [r0, -fp]
    143c:	17010069 	strne	r0, [r1, -r9, rrx]
    1440:	00411101 	subeq	r1, r1, r1, lsl #2
    1444:	069d0000 	ldreq	r0, [sp], r0
    1448:	06990000 	ldreq	r0, [r9], r0
    144c:	2e000000 	cdpcs	0, 0, cr0, cr0, cr0, {0}
    1450:	080006b0 	stmdaeq	r0, {r4, r5, r7, r9, sl}
    1454:	08000704 	stmdaeq	r0, {r2, r8, r9, sl}
    1458:	00000b65 	andeq	r0, r0, r5, ror #22
    145c:	0008e526 	andeq	lr, r8, r6, lsr #10
    1460:	01230100 			; <UNDEFINED> instruction: 0x01230100
    1464:	0000410d 	andeq	r4, r0, sp, lsl #2
    1468:	0006c200 	andeq	ip, r6, r0, lsl #4
    146c:	0006c000 	andeq	ip, r6, r0
    1470:	06d22f00 	ldrbeq	r2, [r2], r0, lsl #30
    1474:	0b550800 	bleq	154347c <_Min_Stack_Size+0x154307c>
    1478:	01300000 	teqeq	r0, r0
    147c:	00750250 	rsbseq	r0, r5, r0, asr r2
    1480:	06f43100 	ldrbteq	r3, [r4], r0, lsl #2
    1484:	01300800 	teqeq	r0, r0, lsl #16
    1488:	00750550 	rsbseq	r0, r5, r0, asr r5
    148c:	00218008 	eoreq	r8, r1, r8
    1490:	06503200 	ldrbeq	r3, [r0], -r0, lsl #4
    1494:	11ee0800 	mvnne	r0, r0, lsl #16
    1498:	92330000 	eorsls	r0, r3, #0
    149c:	65080006 	strvs	r0, [r8, #-6]
    14a0:	9600000c 	strls	r0, [r0], -ip
    14a4:	3000000b 	andcc	r0, r0, fp
    14a8:	74025001 	strvc	r5, [r2], #-1
    14ac:	51013000 	mrspl	r3, (UNDEF: 1)
    14b0:	30007402 	andcc	r7, r0, r2, lsl #8
    14b4:	38015201 	stmdacc	r1, {r0, r9, ip, lr}
    14b8:	05530130 	ldrbeq	r0, [r3, #-304]	; 0xfffffed0
    14bc:	00087303 	andeq	r7, r8, r3, lsl #6
    14c0:	9e330008 	cdpls	0, 3, cr0, cr3, cr8, {0}
    14c4:	65080006 	strvs	r0, [r8, #-6]
    14c8:	be00000c 	cdplt	0, 0, cr0, cr0, cr12, {0}
    14cc:	3000000b 	andcc	r0, r0, fp
    14d0:	09025001 	stmdbeq	r2, {r0, ip, lr}
    14d4:	51013080 	smlabbpl	r1, r0, r0, r3
    14d8:	30007402 	andcc	r7, r0, r2, lsl #8
    14dc:	38015201 	stmdacc	r1, {r0, r9, ip, lr}
    14e0:	05530130 	ldrbeq	r0, [r3, #-304]	; 0xfffffed0
    14e4:	0007bd03 	andeq	fp, r7, r3, lsl #26
    14e8:	a6320008 	ldrtge	r0, [r2], -r8
    14ec:	f7080006 			; <UNDEFINED> instruction: 0xf7080006
    14f0:	32000011 	andcc	r0, r0, #17
    14f4:	08000712 	stmdaeq	r0, {r1, r4, r8, r9, sl}
    14f8:	000011ee 	andeq	r1, r0, lr, ror #3
    14fc:	79013400 	stmdbvc	r1, {sl, ip, sp}
    1500:	01000009 	tsteq	r0, r9
    1504:	f80106dd 			; <UNDEFINED> instruction: 0xf80106dd
    1508:	40080004 	andmi	r0, r8, r4
    150c:	d5080006 	strle	r0, [r8, #-6]
    1510:	01000006 	tsteq	r0, r6
    1514:	00000c65 	andeq	r0, r0, r5, ror #24
    1518:	0008e535 	andeq	lr, r8, r5, lsr r5
    151c:	21dd0100 	bicscs	r0, sp, r0, lsl #2
    1520:	00000041 	andeq	r0, r0, r1, asr #32
    1524:	000006f9 	strdeq	r0, [r0], -r9
    1528:	000006f5 	strdeq	r0, [r0], -r5
    152c:	0009df35 	andeq	sp, r9, r5, lsr pc
    1530:	30dd0100 	sbcscc	r0, sp, r0, lsl #2
    1534:	00000041 	andeq	r0, r0, r1, asr #32
    1538:	00000727 	andeq	r0, r0, r7, lsr #14
    153c:	00000717 	andeq	r0, r0, r7, lsl r7
    1540:	000e6035 	andeq	r6, lr, r5, lsr r0
    1544:	42dd0100 	sbcsmi	r0, sp, #0, 2
    1548:	0000005e 	andeq	r0, r0, lr, asr r0
    154c:	00000799 	muleq	r0, r9, r7
    1550:	00000793 	muleq	r0, r3, r7
    1554:	000c9635 	andeq	r9, ip, r5, lsr r6
    1558:	51dd0100 	bicspl	r0, sp, r0, lsl #2
    155c:	000000a8 	andeq	r0, r0, r8, lsr #1
    1560:	000007c9 	andeq	r0, r0, r9, asr #15
    1564:	000007c5 	andeq	r0, r0, r5, asr #15
    1568:	0009f236 	andeq	pc, r9, r6, lsr r2	; <UNPREDICTABLE>
    156c:	0bdf0100 	bleq	ff7c1974 <BootRAM+0xe732115>
    1570:	00000041 	andeq	r0, r0, r1, asr #32
    1574:	000007ef 	andeq	r0, r0, pc, ror #15
    1578:	000007e7 	andeq	r0, r0, r7, ror #15
    157c:	66756237 			; <UNDEFINED> instruction: 0x66756237
    1580:	0ce50100 	stfeqe	f0, [r5]
    1584:	0000005e 	andeq	r0, r0, lr, asr r0
    1588:	0000084b 	andeq	r0, r0, fp, asr #16
    158c:	00000839 	andeq	r0, r0, r9, lsr r8
    1590:	63013400 	movwvs	r3, #5120	; 0x1400
    1594:	01000008 	tsteq	r0, r8
    1598:	e00106ad 	and	r0, r1, sp, lsr #13
    159c:	f8080003 			; <UNDEFINED> instruction: 0xf8080003
    15a0:	de080004 	cdple	0, 0, cr0, cr8, cr4, {0}
    15a4:	01000008 	tsteq	r0, r8
    15a8:	00000cf9 	strdeq	r0, [r0], -r9
    15ac:	0008e535 	andeq	lr, r8, r5, lsr r5
    15b0:	1aad0100 	bne	feb419b8 <BootRAM+0xdab2159>
    15b4:	00000041 	andeq	r0, r0, r1, asr #32
    15b8:	00000902 	andeq	r0, r0, r2, lsl #18
    15bc:	000008fe 	strdeq	r0, [r0], -lr
    15c0:	0009df35 	andeq	sp, r9, r5, lsr pc
    15c4:	29ad0100 	stmibcs	sp!, {r8}
    15c8:	00000041 	andeq	r0, r0, r1, asr #32
    15cc:	00000928 	andeq	r0, r0, r8, lsr #18
    15d0:	00000920 	andeq	r0, r0, r0, lsr #18
    15d4:	000e6035 	andeq	r6, lr, r5, lsr r0
    15d8:	3bad0100 	blcc	feb419e0 <BootRAM+0xdab2181>
    15dc:	0000005e 	andeq	r0, r0, lr, asr r0
    15e0:	00000968 	andeq	r0, r0, r8, ror #18
    15e4:	00000962 	andeq	r0, r0, r2, ror #18
    15e8:	000c9635 	andeq	r9, ip, r5, lsr r6
    15ec:	4aad0100 	bmi	feb419f4 <BootRAM+0xdab2195>
    15f0:	000000a8 	andeq	r0, r0, r8, lsr #1
    15f4:	000009a0 	andeq	r0, r0, r0, lsr #19
    15f8:	00000994 	muleq	r0, r4, r9
    15fc:	0009f236 	andeq	pc, r9, r6, lsr r2	; <UNPREDICTABLE>
    1600:	0baf0100 	bleq	febc1a08 <BootRAM+0xdb321a9>
    1604:	00000041 	andeq	r0, r0, r1, asr #32
    1608:	00000a12 	andeq	r0, r0, r2, lsl sl
    160c:	00000a08 	andeq	r0, r0, r8, lsl #20
    1610:	66756237 			; <UNDEFINED> instruction: 0x66756237
    1614:	0cb80100 	ldfeqs	f0, [r8]
    1618:	0000005e 	andeq	r0, r0, lr, asr r0
    161c:	00000a79 	andeq	r0, r0, r9, ror sl
    1620:	00000a6b 	andeq	r0, r0, fp, ror #20
    1624:	08ff3800 	ldmeq	pc!, {fp, ip, sp}^	; <UNPREDICTABLE>
    1628:	68010000 	stmdavs	r1, {}	; <UNPREDICTABLE>
    162c:	0872010d 	ldmdaeq	r2!, {r0, r2, r3, r8}^
    1630:	098c0800 	stmibeq	ip, {fp}
    1634:	0b000800 	bleq	363c <_Min_Stack_Size+0x323c>
    1638:	ea010000 	b	41640 <_Min_Stack_Size+0x41240>
    163c:	3500000f 	strcc	r0, [r0, #-15]
    1640:	000008e5 	andeq	r0, r0, r5, ror #17
    1644:	411d6801 	tstmi	sp, r1, lsl #16
    1648:	40000000 	andmi	r0, r0, r0
    164c:	3800000b 	stmdacc	r0, {r0, r1, r3}
    1650:	2000000b 	andcs	r0, r0, fp
    1654:	0000048d 	andeq	r0, r0, sp, lsl #9
    1658:	5e136901 	vnmlspl.f16	s12, s6, s2	; <UNPREDICTABLE>
    165c:	05000000 	streq	r0, [r0, #-0]
    1660:	00001c03 	andeq	r1, r0, r3, lsl #24
    1664:	0a173620 	beq	5ceeec <_Min_Stack_Size+0x5ceaec>
    1668:	6a010000 	bvs	41670 <_Min_Stack_Size+0x41270>
    166c:	00005e0c 	andeq	r5, r0, ip, lsl #28
    1670:	000b8200 	andeq	r8, fp, r0, lsl #4
    1674:	000b7a00 	andeq	r7, fp, r0, lsl #20
    1678:	00773600 	rsbseq	r3, r7, r0, lsl #12
    167c:	6b010000 	blvs	41684 <_Min_Stack_Size+0x41284>
    1680:	0000410b 	andeq	r4, r0, fp, lsl #2
    1684:	000bb800 	andeq	fp, fp, r0, lsl #16
    1688:	000bb600 	andeq	fp, fp, r0, lsl #12
    168c:	65723700 	ldrbvs	r3, [r2, #-1792]!	; 0xfffff900
    1690:	7b010071 	blvc	4185c <_Min_Stack_Size+0x4145c>
    1694:	0000410b 	andeq	r4, r0, fp, lsl #2
    1698:	000be100 	andeq	lr, fp, r0, lsl #2
    169c:	000bd500 	andeq	sp, fp, r0, lsl #10
    16a0:	00b82d00 	adcseq	r2, r8, r0, lsl #26
    16a4:	0ec00000 	cdpeq	0, 12, cr0, cr0, cr0, {0}
    16a8:	c2200000 	eorgt	r0, r0, #0
    16ac:	0100000d 	tsteq	r0, sp
    16b0:	0fea0b92 	svceq	0x00ea0b92
    16b4:	91020000 	mrsls	r0, (UNDEF: 2)
    16b8:	0e60206c 	cdpeq	0, 6, cr2, cr0, cr12, {3}
    16bc:	93010000 	movwls	r0, #4096	; 0x1000
    16c0:	00005e0e 	andeq	r5, r0, lr, lsl #28
    16c4:	6a910200 	bvs	fe441ecc <BootRAM+0xd3b266d>
    16c8:	0008cc2e 	andeq	ip, r8, lr, lsr #24
    16cc:	0008e008 	andeq	lr, r8, r8
    16d0:	000dde08 	andeq	sp, sp, r8, lsl #28
    16d4:	0dc22000 	stcleq	0, cr2, [r2]
    16d8:	83010000 	movwhi	r0, #4096	; 0x1000
    16dc:	000fec17 	andeq	lr, pc, r7, lsl ip	; <UNPREDICTABLE>
    16e0:	6c910200 	lfmvs	f0, 4, [r1], {0}
    16e4:	000e6020 	andeq	r6, lr, r0, lsr #32
    16e8:	14840100 	strne	r0, [r4], #256	; 0x100
    16ec:	0000005e 	andeq	r0, r0, lr, asr r0
    16f0:	396a9102 	stmdbcc	sl!, {r1, r8, ip, pc}^
    16f4:	080008e0 	stmdaeq	r0, {r5, r6, r7, fp}
    16f8:	0000128d 	andeq	r1, r0, sp, lsl #5
    16fc:	02510130 	subseq	r0, r1, #48, 2
    1700:	01306c91 	teqeq	r0, r1	; <illegal shifter operand>
    1704:	6a910252 	bvs	fe442054 <BootRAM+0xd3b27f5>
    1708:	2c3a0000 	ldccs	0, cr0, [sl], #-0
    170c:	b8000012 	stmdalt	r0, {r1, r4}
    1710:	01080008 	tsteq	r8, r8
    1714:	080008b8 	stmdaeq	r0, {r3, r4, r5, r7, fp}
    1718:	080008bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, fp}
    171c:	1f0b8b01 	svcne	0x000b8b01
    1720:	3b00000e 	blcc	1760 <_Min_Stack_Size+0x1360>
    1724:	00001252 	andeq	r1, r0, r2, asr r2
    1728:	00000c37 	andeq	r0, r0, r7, lsr ip
    172c:	00000c35 	andeq	r0, r0, r5, lsr ip
    1730:	0012463b 	andseq	r4, r2, fp, lsr r6
    1734:	000c4d00 	andeq	r4, ip, r0, lsl #26
    1738:	000c4b00 	andeq	r4, ip, r0, lsl #22
    173c:	123a3b00 	eorsne	r3, sl, #0, 22
    1740:	0c670000 	stcleq	0, cr0, [r7], #-0
    1744:	0c650000 	stcleq	0, cr0, [r5], #-0
    1748:	3c000000 	stccc	0, cr0, [r0], {-0}
    174c:	00000ff3 	strdeq	r0, [r0], -r3
    1750:	080008f0 	stmdaeq	r0, {r4, r5, r6, r7, fp}
    1754:	0000d801 	andeq	sp, r0, r1, lsl #16
    1758:	05960100 	ldreq	r0, [r6, #256]	; 0x100
    175c:	00000e5f 	andeq	r0, r0, pc, asr lr
    1760:	00100d3b 	andseq	r0, r0, fp, lsr sp
    1764:	000c7d00 	andeq	r7, ip, r0, lsl #26
    1768:	000c7b00 	andeq	r7, ip, r0, lsl #22
    176c:	10013b00 	andne	r3, r1, r0, lsl #22
    1770:	0c930000 	ldceq	0, cr0, [r3], {0}
    1774:	0c910000 	ldceq	0, cr0, [r1], {0}
    1778:	fe390000 	cdp2	0, 3, cr0, cr9, cr0, {0}
    177c:	1a080008 	bne	2017a4 <_Min_Stack_Size+0x2013a4>
    1780:	30000010 	andcc	r0, r0, r0, lsl r0
    1784:	09025001 	stmdbeq	r2, {r0, ip, lr}
    1788:	3a000080 	bcc	1990 <_Min_Stack_Size+0x1590>
    178c:	0000122c 	andeq	r1, r0, ip, lsr #4
    1790:	08000902 	stmdaeq	r0, {r1, r8, fp}
    1794:	00090201 	andeq	r0, r9, r1, lsl #4
    1798:	00090a08 	andeq	r0, r9, r8, lsl #20
    179c:	0b8e0108 	bleq	fe381bc4 <BootRAM+0xd2f2365>
    17a0:	00000ea0 	andeq	r0, r0, r0, lsr #29
    17a4:	0012523b 	andseq	r5, r2, fp, lsr r2
    17a8:	000ca900 	andeq	sl, ip, r0, lsl #18
    17ac:	000ca700 	andeq	sl, ip, r0, lsl #14
    17b0:	12463b00 	subne	r3, r6, #0, 22
    17b4:	0cbf0000 	ldceq	0, cr0, [pc]	; 17bc <_Min_Stack_Size+0x13bc>
    17b8:	0cbd0000 	ldceq	0, cr0, [sp]
    17bc:	3a3b0000 	bcc	ec17c4 <_Min_Stack_Size+0xec13c4>
    17c0:	d9000012 	stmdble	r0, {r1, r4}
    17c4:	d700000c 	strle	r0, [r0, -ip]
    17c8:	0000000c 	andeq	r0, r0, ip
    17cc:	00092039 	andeq	r2, r9, r9, lsr r0
    17d0:	00119008 	andseq	r9, r1, r8
    17d4:	50013000 	andpl	r3, r1, r0
    17d8:	00140305 	andseq	r0, r4, r5, lsl #6
    17dc:	01302000 	teqeq	r0, r0
    17e0:	6c910251 	lfmvs	f0, 4, [r1], {81}	; 0x51
    17e4:	02520130 	subseq	r0, r2, #48, 2
    17e8:	00006a91 	muleq	r0, r1, sl
    17ec:	0012013c 	andseq	r0, r2, ip, lsr r1
    17f0:	00089200 	andeq	r9, r8, r0, lsl #4
    17f4:	00a00108 	adceq	r0, r0, r8, lsl #2
    17f8:	6f010000 	svcvs	0x00010000
    17fc:	000f0807 	andeq	r0, pc, r7, lsl #16
    1800:	12133b00 	andsne	r3, r3, #0, 22
    1804:	0cef0000 	stcleq	0, cr0, [pc]	; 180c <_Min_Stack_Size+0x140c>
    1808:	0ced0000 	stcleq	0, cr0, [sp]
    180c:	1f3b0000 	svcne	0x003b0000
    1810:	05000012 	streq	r0, [r0, #-18]	; 0xffffffee
    1814:	0300000d 	movweq	r0, #13
    1818:	3900000d 	stmdbcc	r0, {r0, r2, r3}
    181c:	0800089c 	stmdaeq	r0, {r2, r3, r4, r7, fp}
    1820:	00000969 	andeq	r0, r0, r9, ror #18
    1824:	01500130 	cmpeq	r0, r0, lsr r1
    1828:	51013031 	tstpl	r1, r1, lsr r0
    182c:	00140305 	andseq	r0, r4, r5, lsl #6
    1830:	00002000 	andeq	r2, r0, r0
    1834:	00122c3c 	andseq	r2, r2, ip, lsr ip
    1838:	00092e00 	andeq	r2, r9, r0, lsl #28
    183c:	00f00508 	rscseq	r0, r0, r8, lsl #10
    1840:	a8010000 	stmdage	r1, {}	; <UNPREDICTABLE>
    1844:	000f4e2c 	andeq	r4, pc, ip, lsr #28
    1848:	12523b00 	subsne	r3, r2, #0, 22
    184c:	0d1f0000 	ldceq	0, cr0, [pc, #-0]	; 1854 <_Min_Stack_Size+0x1454>
    1850:	0d1d0000 	ldceq	0, cr0, [sp, #-0]
    1854:	463b0000 	ldrtmi	r0, [fp], -r0
    1858:	1f000012 	svcne	0x00000012
    185c:	1d00000d 	stcne	0, cr0, [r0, #-52]	; 0xffffffcc
    1860:	3b00000d 	blcc	189c <_Min_Stack_Size+0x149c>
    1864:	0000123a 	andeq	r1, r0, sl, lsr r2
    1868:	00000d1f 	andeq	r0, r0, pc, lsl sp
    186c:	00000d1d 	andeq	r0, r0, sp, lsl sp
    1870:	0008c032 	andeq	ip, r8, r2, lsr r0
    1874:	000a2f08 	andeq	r2, sl, r8, lsl #30
    1878:	2c3a0000 	ldccs	0, cr0, [sl], #-0
    187c:	2e000012 	mcrcs	0, 0, r0, cr0, cr2, {0}
    1880:	01080009 	tsteq	r8, r9
    1884:	0800092e 	stmdaeq	r0, {r1, r2, r3, r5, r8, fp}
    1888:	0800092e 	stmdaeq	r0, {r1, r2, r3, r5, r8, fp}
    188c:	8f099c01 	svchi	0x00099c01
    1890:	3b00000f 	blcc	18d4 <_Min_Stack_Size+0x14d4>
    1894:	00001252 	andeq	r1, r0, r2, asr r2
    1898:	00000d35 	andeq	r0, r0, r5, lsr sp
    189c:	00000d33 	andeq	r0, r0, r3, lsr sp
    18a0:	0012463b 	andseq	r4, r2, fp, lsr r6
    18a4:	000d3500 	andeq	r3, sp, r0, lsl #10
    18a8:	000d3300 	andeq	r3, sp, r0, lsl #6
    18ac:	123a3b00 	eorsne	r3, sl, #0, 22
    18b0:	0d350000 	ldceq	0, cr0, [r5, #-0]
    18b4:	0d330000 	ldceq	0, cr0, [r3, #-0]
    18b8:	3a000000 	bcc	18c0 <_Min_Stack_Size+0x14c0>
    18bc:	0000122c 	andeq	r1, r0, ip, lsr #4
    18c0:	0800093e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r8, fp}
    18c4:	00093e01 	andeq	r3, r9, r1, lsl #28
    18c8:	00094008 	andeq	r4, r9, r8
    18cc:	09a00108 	stmibeq	r0!, {r3, r8}
    18d0:	00000fd0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    18d4:	0012523b 	andseq	r5, r2, fp, lsr r2
    18d8:	000d4b00 	andeq	r4, sp, r0, lsl #22
    18dc:	000d4900 	andeq	r4, sp, r0, lsl #18
    18e0:	12463b00 	subne	r3, r6, #0, 22
    18e4:	0d4b0000 	stcleq	0, cr0, [fp, #-0]
    18e8:	0d490000 	stcleq	0, cr0, [r9, #-0]
    18ec:	3a3b0000 	bcc	ec18f4 <_Min_Stack_Size+0xec14f4>
    18f0:	4b000012 	blmi	1940 <_Min_Stack_Size+0x1540>
    18f4:	4900000d 	stmdbmi	r0, {r0, r2, r3}
    18f8:	0000000d 	andeq	r0, r0, sp
    18fc:	00094a39 	andeq	r4, r9, r9, lsr sl
    1900:	00113408 	andseq	r3, r1, r8, lsl #8
    1904:	50013000 	andpl	r3, r1, r0
    1908:	00140305 	andseq	r0, r4, r5, lsl #6
    190c:	01302000 	teqeq	r0, r0
    1910:	00750252 	rsbseq	r0, r5, r2, asr r2
    1914:	043d0000 	ldrteq	r0, [sp], #-0
    1918:	0ff20407 	svceq	0x00f20407
    191c:	3f3e0000 	svccc	0x003e0000
    1920:	000005df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    1924:	01146001 	tsteq	r4, r1
    1928:	00101a03 	andseq	r1, r0, r3, lsl #20
    192c:	75624000 	strbvc	r4, [r2, #-0]!
    1930:	60010066 	andvs	r0, r1, r6, rrx
    1934:	0008972c 	andeq	r9, r8, ip, lsr #14
    1938:	0e604100 	poweqs	f4, f0, f0
    193c:	60010000 	andvs	r0, r1, r0
    1940:	00005e3a 	andeq	r5, r0, sl, lsr lr
    1944:	b7380000 	ldrlt	r0, [r8, -r0]!
    1948:	01000007 	tsteq	r0, r7
    194c:	bc010d4d 	stclt	13, cr0, [r1], {77}	; 0x4d
    1950:	18080007 	stmdane	r8, {r0, r1, r2}
    1954:	5f080008 	svcpl	0x00080008
    1958:	0100000d 	tsteq	r0, sp
    195c:	000010b1 	strheq	r1, [r0], -r1	; <UNPREDICTABLE>
    1960:	0008e535 	andeq	lr, r8, r5, lsr r5
    1964:	1c4d0100 	stfnee	f0, [sp], {-0}
    1968:	00000041 	andeq	r0, r0, r1, asr #32
    196c:	00000d83 	andeq	r0, r0, r3, lsl #27
    1970:	00000d7f 	andeq	r0, r0, pc, ror sp
    1974:	00089036 	andeq	r9, r8, r6, lsr r0
    1978:	0c540100 	ldfeqe	f0, [r4], {-0}
    197c:	0000005e 	andeq	r0, r0, lr, asr r0
    1980:	00000da8 	andeq	r0, r0, r8, lsr #27
    1984:	00000da4 	andeq	r0, r0, r4, lsr #27
    1988:	00122c42 	andseq	r2, r2, r2, asr #24
    198c:	0007f200 	andeq	pc, r7, r0, lsl #4
    1990:	00700208 	rsbseq	r0, r0, r8, lsl #4
    1994:	56010000 	strpl	r0, [r1], -r0
    1998:	12523b03 	subsne	r3, r2, #3072	; 0xc00
    199c:	0dc80000 	stcleq	0, cr0, [r8]
    19a0:	0dc60000 	stcleq	0, cr0, [r6]
    19a4:	463b0000 	ldrtmi	r0, [fp], -r0
    19a8:	dd000012 	stcle	0, cr0, [r0, #-72]	; 0xffffffb8
    19ac:	db00000d 	blle	19e8 <_Min_Stack_Size+0x15e8>
    19b0:	3b00000d 	blcc	19ec <_Min_Stack_Size+0x15ec>
    19b4:	0000123a 	andeq	r1, r0, sl, lsr r2
    19b8:	00000df2 	strdeq	r0, [r0], -r2
    19bc:	00000df0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    19c0:	0007fa39 	andeq	pc, r7, r9, lsr sl	; <UNPREDICTABLE>
    19c4:	000a2f08 	andeq	r2, sl, r8, lsl #30
    19c8:	50013000 	andpl	r3, r1, r0
    19cc:	01303001 	teqeq	r0, r1
    19d0:	00710251 	rsbseq	r0, r1, r1, asr r2
    19d4:	02520130 	subseq	r0, r2, #48, 2
    19d8:	00000072 	andeq	r0, r0, r2, ror r0
    19dc:	73014300 	movwvc	r4, #4864	; 0x1300
    19e0:	01000000 	mrseq	r0, (UNDEF: 0)
    19e4:	03740639 	cmneq	r4, #59768832	; 0x3900000
    19e8:	03e00800 	mvneq	r0, #0, 16
    19ec:	7d020800 	stcvc	8, cr0, [r2, #-0]
    19f0:	110c0100 	mrsne	r0, (UNDEF: 28)
    19f4:	182d0000 	stmdane	sp!, {}	; <UNPREDICTABLE>
    19f8:	e8000000 	stmda	r0, {}	; <UNPREDICTABLE>
    19fc:	37000010 	smladcc	r0, r0, r0, r0
    1a00:	00727463 	rsbseq	r7, r2, r3, ror #8
    1a04:	76103f01 	ldrvc	r3, [r0], -r1, lsl #30
    1a08:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    1a0c:	0600000e 	streq	r0, [r0], -lr
    1a10:	0000000e 	andeq	r0, r0, lr
    1a14:	00125f44 	andseq	r5, r2, r4, asr #30
    1a18:	0003b800 	andeq	fp, r3, r0, lsl #16
    1a1c:	03b80108 			; <UNDEFINED> instruction: 0x03b80108
    1a20:	03c00800 	biceq	r0, r0, #0, 16
    1a24:	45010800 	strmi	r0, [r1, #-2048]	; 0xfffff800
    1a28:	126e3b03 	rsbne	r3, lr, #3072	; 0xc00
    1a2c:	0e5d0000 	cdpeq	0, 5, cr0, cr13, cr0, {0}
    1a30:	0e5b0000 	cdpeq	0, 5, cr0, cr11, cr0, {0}
    1a34:	00000000 	andeq	r0, r0, r0
    1a38:	00051945 	andeq	r1, r5, r5, asr #18
    1a3c:	0d1d0100 	ldfeqs	f0, [sp, #-0]
    1a40:	00036401 	andeq	r6, r3, r1, lsl #8
    1a44:	00036608 	andeq	r6, r3, r8, lsl #12
    1a48:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    1a4c:	00113401 	andseq	r3, r1, r1, lsl #8
    1a50:	08e54600 	stmiaeq	r5!, {r9, sl, lr}^
    1a54:	1d010000 	stcne	0, cr0, [r1, #-0]
    1a58:	0000412b 	andeq	r4, r0, fp, lsr #2
    1a5c:	00500100 	subseq	r0, r0, r0, lsl #2
    1a60:	08f50147 	ldmeq	r5!, {r0, r1, r2, r6, r8}^
    1a64:	1b010000 	blne	41a6c <_Min_Stack_Size+0x4166c>
    1a68:	1183011b 	orrne	r0, r3, fp, lsl r1
    1a6c:	03700000 	cmneq	r0, #0
    1a70:	03740800 	cmneq	r4, #0, 16
    1a74:	7d020800 	stcvc	8, cr0, [r2, #-0]
    1a78:	11830100 	orrne	r0, r3, r0, lsl #2
    1a7c:	72480000 	subvc	r0, r8, #0
    1a80:	01007165 	tsteq	r0, r5, ror #2
    1a84:	118a3c1b 	orrne	r3, sl, fp, lsl ip
    1a88:	0e750000 	cdpeq	0, 7, cr0, cr5, cr0, {0}
    1a8c:	0e710000 	cdpeq	0, 7, cr0, cr1, cr0, {0}
    1a90:	f0460000 			; <UNDEFINED> instruction: 0xf0460000
    1a94:	0100000d 	tsteq	r0, sp
    1a98:	005e4a1b 	subseq	r4, lr, fp, lsl sl
    1a9c:	51010000 	mrspl	r0, (UNDEF: 1)
    1aa0:	0007df46 	andeq	sp, r7, r6, asr #30
    1aa4:	5b1b0100 	blpl	6c1eac <_Min_Stack_Size+0x6c1aac>
    1aa8:	0000005e 	andeq	r0, r0, lr, asr r0
    1aac:	02005201 	andeq	r5, r0, #268435456	; 0x10000000
    1ab0:	025f0801 	subseq	r0, pc, #65536	; 0x10000
    1ab4:	04070000 	streq	r0, [r7], #-0
    1ab8:	0000011b 	andeq	r0, r0, fp, lsl r1
    1abc:	07ad0147 	streq	r0, [sp, r7, asr #2]!
    1ac0:	1a010000 	bne	41ac8 <_Min_Stack_Size+0x416c8>
    1ac4:	1183011b 	orrne	r0, r3, fp, lsl r1
    1ac8:	036c0000 	cmneq	ip, #0
    1acc:	03700800 	cmneq	r0, #0, 16
    1ad0:	7d020800 	stcvc	8, cr0, [r2, #-0]
    1ad4:	11df0100 	bicsne	r0, pc, r0, lsl #2
    1ad8:	72480000 	subvc	r0, r8, #0
    1adc:	01007165 	tsteq	r0, r5, ror #2
    1ae0:	118a3b1a 	orrne	r3, sl, sl, lsl fp
    1ae4:	0e9a0000 	cdpeq	0, 9, cr0, cr10, cr0, {0}
    1ae8:	0e960000 	cdpeq	0, 9, cr0, cr6, cr0, {0}
    1aec:	c2460000 	subgt	r0, r6, #0
    1af0:	0100000d 	tsteq	r0, sp
    1af4:	11df471a 	bicsne	r4, pc, sl, lsl r7	; <UNPREDICTABLE>
    1af8:	51010000 	mrspl	r0, (UNDEF: 1)
    1afc:	000e6046 	andeq	r6, lr, r6, asr #32
    1b00:	571a0100 	ldrpl	r0, [sl, -r0, lsl #2]
    1b04:	00000a1d 	andeq	r0, r0, sp, lsl sl
    1b08:	07005201 	streq	r5, [r0, -r1, lsl #4]
    1b0c:	000fea04 	andeq	lr, pc, r4, lsl #20
    1b10:	f0014900 			; <UNDEFINED> instruction: 0xf0014900
    1b14:	01000000 	mrseq	r0, (UNDEF: 0)
    1b18:	01491b19 	cmpeq	r9, r9, lsl fp
    1b1c:	000006fd 	strdeq	r0, [r0], -sp
    1b20:	4a1b1801 	bmi	6c7b2c <_Min_Stack_Size+0x6c772c>
    1b24:	0006cd01 	andeq	ip, r6, r1, lsl #26
    1b28:	1b170100 	blne	5c1f30 <_Min_Stack_Size+0x5c1b30>
    1b2c:	06a44b01 	strteq	r4, [r4], r1, lsl #22
    1b30:	ba030000 	blt	c1b38 <_Min_Stack_Size+0xc1738>
    1b34:	00950113 	addseq	r0, r5, r3, lsl r1
    1b38:	2c030000 	stccs	0, cr0, [r3], {-0}
    1b3c:	41000012 	tstmi	r0, r2, lsl r0
    1b40:	000008e5 	andeq	r0, r0, r5, ror #17
    1b44:	4127ba03 			; <UNDEFINED> instruction: 0x4127ba03
    1b48:	40000000 	andmi	r0, r0, r0
    1b4c:	00667562 	rsbeq	r7, r6, r2, ror #10
    1b50:	1d38ba03 	vldmdbne	r8!, {s22-s24}
    1b54:	0000000a 	andeq	r0, r0, sl
    1b58:	0005563f 	andeq	r5, r5, pc, lsr r6
    1b5c:	14ad0300 	strtne	r0, [sp], #768	; 0x300
    1b60:	125f0301 	subsne	r0, pc, #67108864	; 0x4000000
    1b64:	e5410000 	strb	r0, [r1, #-0]
    1b68:	03000008 	movweq	r0, #8
    1b6c:	004129ad 	subeq	r2, r1, sp, lsr #19
    1b70:	62400000 	subvs	r0, r0, #0
    1b74:	03006675 	movweq	r6, #1653	; 0x675
    1b78:	08973fad 	ldmeq	r7, {r0, r2, r3, r5, r7, r8, r9, sl, fp, ip, sp}
    1b7c:	60410000 	subvs	r0, r1, r0
    1b80:	0300000e 	movweq	r0, #14
    1b84:	005e4dad 	subseq	r4, lr, sp, lsr #27
    1b88:	4c000000 	stcmi	0, cr0, [r0], {-0}
    1b8c:	00000580 	andeq	r0, r0, r0, lsl #11
    1b90:	1605de02 	strne	sp, [r5], -r2, lsl #28
    1b94:	127c0301 	rsbsne	r0, ip, #67108864	; 0x4000000
    1b98:	ee4d0000 	cdp	0, 4, cr0, cr13, cr0, {0}
    1b9c:	02000006 	andeq	r0, r0, #6
    1ba0:	9e2f05de 	mcrls	5, 1, r0, cr15, cr14, {6}
    1ba4:	00000002 	andeq	r0, r0, r2
    1ba8:	0011f74e 	andseq	pc, r1, lr, asr #14
    1bac:	00036600 	andeq	r6, r3, r0, lsl #12
    1bb0:	00036808 	andeq	r6, r3, r8, lsl #16
    1bb4:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    1bb8:	01014f01 	tsteq	r1, r1, lsl #30
    1bbc:	000005bd 			; <UNDEFINED> instruction: 0x000005bd
    1bc0:	000005bd 			; <UNDEFINED> instruction: 0x000005bd
    1bc4:	00063903 	andeq	r3, r6, r3, lsl #18
    1bc8:	00001d0b 	andeq	r1, r0, fp, lsl #26
    1bcc:	07100002 	ldreq	r0, [r0, -r2]
    1bd0:	01040000 	mrseq	r0, (UNDEF: 4)
    1bd4:	0000034a 	andeq	r0, r0, sl, asr #6
    1bd8:	000b360c 	andeq	r3, fp, ip, lsl #12
    1bdc:	00026400 	andeq	r6, r2, r0, lsl #8
    1be0:	00098c00 	andeq	r8, r9, r0, lsl #24
    1be4:	000dec08 	andeq	lr, sp, r8, lsl #24
    1be8:	000bee08 	andeq	lr, fp, r8, lsl #28
    1bec:	06010200 	streq	r0, [r1], -r0, lsl #4
    1bf0:	00000258 	andeq	r0, r0, r8, asr r2
    1bf4:	9b050202 	blls	142404 <_Min_Stack_Size+0x142004>
    1bf8:	02000002 	andeq	r0, r0, #2
    1bfc:	00820504 	addeq	r0, r2, r4, lsl #10
    1c00:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    1c04:	00007d05 	andeq	r7, r0, r5, lsl #26
    1c08:	031b0300 	tsteq	fp, #0, 6
    1c0c:	2e050000 	cdpcs	0, 0, cr0, cr5, cr0, {0}
    1c10:	00005718 	andeq	r5, r0, r8, lsl r7
    1c14:	00410400 	subeq	r0, r1, r0, lsl #8
    1c18:	41050000 	mrsmi	r0, (UNDEF: 5)
    1c1c:	02000000 	andeq	r0, r0, #0
    1c20:	02560801 	subseq	r0, r6, #65536	; 0x10000
    1c24:	ff030000 			; <UNDEFINED> instruction: 0xff030000
    1c28:	05000000 	streq	r0, [r0, #-0]
    1c2c:	006f1931 	rsbeq	r1, pc, r1, lsr r9	; <UNPREDICTABLE>
    1c30:	5e040000 	cdppl	0, 0, cr0, cr4, cr0, {0}
    1c34:	02000000 	andeq	r0, r0, #0
    1c38:	017e0702 	cmneq	lr, r2, lsl #14
    1c3c:	d5030000 	strle	r0, [r3, #-0]
    1c40:	05000002 	streq	r0, [r0, #-2]
    1c44:	00871934 	addeq	r1, r7, r4, lsr r9
    1c48:	76040000 	strvc	r0, [r4], -r0
    1c4c:	02000000 	andeq	r0, r0, #0
    1c50:	004d0704 	subeq	r0, sp, r4, lsl #14
    1c54:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    1c58:	00004807 	andeq	r4, r0, r7, lsl #16
    1c5c:	05040600 	streq	r0, [r4, #-1536]	; 0xfffffa00
    1c60:	00746e69 	rsbseq	r6, r4, r9, ror #28
    1c64:	00009504 	andeq	r9, r0, r4, lsl #10
    1c68:	07040200 	streq	r0, [r4, -r0, lsl #4]
    1c6c:	00000052 	andeq	r0, r0, r2, asr r0
    1c70:	1b030807 	blne	c3c94 <_Min_Stack_Size+0xc3894>
    1c74:	0000fd09 	andeq	pc, r0, r9, lsl #26
    1c78:	04670800 	strbteq	r0, [r7], #-2048	; 0xfffff800
    1c7c:	1c030000 	stcne	0, cr0, [r3], {-0}
    1c80:	0000410b 	andeq	r4, r0, fp, lsl #2
    1c84:	00230200 	eoreq	r0, r3, r0, lsl #4
    1c88:	0008a008 	andeq	sl, r8, r8
    1c8c:	0b1d0300 	bleq	742894 <_Min_Stack_Size+0x742494>
    1c90:	00000041 	andeq	r0, r0, r1, asr #32
    1c94:	08012302 	stmdaeq	r1, {r1, r8, r9, sp}
    1c98:	000004d6 	ldrdeq	r0, [r0], -r6
    1c9c:	5e0c1e03 	cdppl	14, 0, cr1, cr12, cr3, {0}
    1ca0:	02000000 	andeq	r0, r0, #0
    1ca4:	ef080223 	svc	0x00080223
    1ca8:	03000003 	movweq	r0, #3
    1cac:	005e0c1f 	subseq	r0, lr, pc, lsl ip
    1cb0:	23020000 	movwcs	r0, #8192	; 0x2000
    1cb4:	08830804 	stmeq	r3, {r2, fp}
    1cb8:	20030000 	andcs	r0, r3, r0
    1cbc:	00005e0c 	andeq	r5, r0, ip, lsl #28
    1cc0:	06230200 	strteq	r0, [r3], -r0, lsl #4
    1cc4:	090c0300 	stmdbeq	ip, {r8, r9}
    1cc8:	21030000 	mrscs	r0, (UNDEF: 3)
    1ccc:	0000a802 	andeq	sl, r0, r2, lsl #16
    1cd0:	01050900 	tsteq	r5, r0, lsl #18
    1cd4:	00000025 	andeq	r0, r0, r5, lsr #32
    1cd8:	80015806 	andhi	r5, r1, r6, lsl #16
    1cdc:	0a000002 	beq	1cec <_Min_Stack_Size+0x18ec>
    1ce0:	0000086f 	andeq	r0, r0, pc, ror #16
    1ce4:	04dd0a72 	ldrbeq	r0, [sp], #2674	; 0xa72
    1ce8:	0a740000 	beq	1d01cf0 <_Min_Stack_Size+0x1d018f0>
    1cec:	00000717 	andeq	r0, r0, r7, lsl r7
    1cf0:	09520a75 	ldmdbeq	r2, {r0, r2, r4, r5, r6, r9, fp}^
    1cf4:	0a760000 	beq	1d81cfc <_Min_Stack_Size+0x1d818fc>
    1cf8:	00000435 	andeq	r0, r0, r5, lsr r4
    1cfc:	09400a7b 	stmdbeq	r0, {r0, r1, r3, r4, r5, r6, r9, fp}^
    1d00:	0a7c0000 	beq	1f01d08 <_Min_Stack_Size+0x1f01908>
    1d04:	000004ba 			; <UNDEFINED> instruction: 0x000004ba
    1d08:	08d80a7e 	ldmeq	r8, {r1, r2, r3, r4, r5, r6, r9, fp}^
    1d0c:	0b7f0000 	bleq	1fc1d14 <_Min_Stack_Size+0x1fc1914>
    1d10:	000006f3 	strdeq	r0, [r0], -r3
    1d14:	07300b00 	ldreq	r0, [r0, -r0, lsl #22]!
    1d18:	0b010000 	bleq	41d20 <_Min_Stack_Size+0x41920>
    1d1c:	00000502 	andeq	r0, r0, r2, lsl #10
    1d20:	06070b02 	streq	r0, [r7], -r2, lsl #22
    1d24:	0b030000 	bleq	c1d2c <_Min_Stack_Size+0xc192c>
    1d28:	00000482 	andeq	r0, r0, r2, lsl #9
    1d2c:	04cd0b04 	strbeq	r0, [sp], #2820	; 0xb04
    1d30:	0b050000 	bleq	141d38 <_Min_Stack_Size+0x141938>
    1d34:	00000497 	muleq	r0, r7, r4
    1d38:	08950b06 	ldmeq	r5, {r1, r2, r8, r9, fp}
    1d3c:	0b070000 	bleq	1c1d44 <_Min_Stack_Size+0x1c1944>
    1d40:	00000631 	andeq	r0, r0, r1, lsr r6
    1d44:	09e70b08 	stmibeq	r7!, {r3, r8, r9, fp}^
    1d48:	0b090000 	bleq	241d50 <_Min_Stack_Size+0x241950>
    1d4c:	00000725 	andeq	r0, r0, r5, lsr #14
    1d50:	06ba0b0a 	ldrteq	r0, [sl], sl, lsl #22
    1d54:	0b0b0000 	bleq	2c1d5c <_Min_Stack_Size+0x2c195c>
    1d58:	00000448 	andeq	r0, r0, r8, asr #8
    1d5c:	07710b0c 	ldrbeq	r0, [r1, -ip, lsl #22]!
    1d60:	0b0d0000 	bleq	341d68 <_Min_Stack_Size+0x341968>
    1d64:	0000056d 	andeq	r0, r0, sp, ror #10
    1d68:	09bc0b0e 	ldmibeq	ip!, {r1, r2, r3, r8, r9, fp}
    1d6c:	0b0f0000 	bleq	3c1d74 <_Min_Stack_Size+0x3c1974>
    1d70:	0000067d 	andeq	r0, r0, sp, ror r6
    1d74:	04150b10 	ldreq	r0, [r5], #-2832	; 0xfffff4f0
    1d78:	0b110000 	bleq	441d80 <_Min_Stack_Size+0x441980>
    1d7c:	0000063c 	andeq	r0, r0, ip, lsr r6
    1d80:	09340b12 	ldmdbeq	r4!, {r1, r4, r8, r9, fp}
    1d84:	0b130000 	bleq	4c1d8c <_Min_Stack_Size+0x4c198c>
    1d88:	00000a48 	andeq	r0, r0, r8, asr #20
    1d8c:	09d60b14 	ldmibeq	r6, {r2, r4, r8, r9, fp}^
    1d90:	0b150000 	bleq	541d98 <_Min_Stack_Size+0x541998>
    1d94:	0000058f 	andeq	r0, r0, pc, lsl #11
    1d98:	098c0b16 	stmibeq	ip, {r1, r2, r4, r8, r9, fp}
    1d9c:	0b170000 	bleq	5c1da4 <_Min_Stack_Size+0x5c19a4>
    1da0:	0000040b 	andeq	r0, r0, fp, lsl #8
    1da4:	06e80b19 	usateq	r0, #8, r9, lsl #22
    1da8:	0b1a0000 	bleq	681db0 <_Min_Stack_Size+0x6819b0>
    1dac:	000003e4 	andeq	r0, r0, r4, ror #7
    1db0:	08eb0b1b 	stmiaeq	fp!, {r0, r1, r3, r4, r8, r9, fp}^
    1db4:	0b1c0000 	bleq	701dbc <_Min_Stack_Size+0x7019bc>
    1db8:	000006b0 			; <UNDEFINED> instruction: 0x000006b0
    1dbc:	043e0b1d 	ldrteq	r0, [lr], #-2845	; 0xfffff4e3
    1dc0:	0b1e0000 	bleq	781dc8 <_Min_Stack_Size+0x7819c8>
    1dc4:	00000792 	muleq	r0, r2, r7
    1dc8:	08cb0b1f 	stmiaeq	fp, {r0, r1, r2, r3, r4, r8, r9, fp}^
    1dcc:	0b200000 	bleq	801dd4 <_Min_Stack_Size+0x8019d4>
    1dd0:	00000646 	andeq	r0, r0, r6, asr #12
    1dd4:	04280b21 	strteq	r0, [r8], #-2849	; 0xfffff4df
    1dd8:	0b220000 	bleq	881de0 <_Min_Stack_Size+0x8819e0>
    1ddc:	0000054b 	andeq	r0, r0, fp, asr #10
    1de0:	09a30b23 	stmibeq	r3!, {r0, r1, r5, r8, r9, fp}
    1de4:	0b240000 	bleq	901dec <_Min_Stack_Size+0x9019ec>
    1de8:	00000857 	andeq	r0, r0, r7, asr r8
    1dec:	05e80b25 	strbeq	r0, [r8, #2853]!	; 0xb25
    1df0:	0b260000 	bleq	981df8 <_Min_Stack_Size+0x9819f8>
    1df4:	00000a32 	andeq	r0, r0, r2, lsr sl
    1df8:	04a20b27 	strteq	r0, [r2], #2855	; 0xb27
    1dfc:	0b280000 	bleq	a01e04 <_Min_Stack_Size+0xa01a04>
    1e00:	000007d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1e04:	08320b29 	ldmdaeq	r2!, {r0, r3, r5, r8, r9, fp}
    1e08:	0b2a0000 	bleq	a81e10 <_Min_Stack_Size+0xa81a10>
    1e0c:	00000563 	andeq	r0, r0, r3, ror #10
    1e10:	09b20b2b 	ldmibeq	r2!, {r0, r1, r3, r5, r8, r9, fp}
    1e14:	0b2c0000 	bleq	b01e1c <_Min_Stack_Size+0xb01a1c>
    1e18:	00000767 	andeq	r0, r0, r7, ror #14
    1e1c:	06580b2e 	ldrbeq	r0, [r8], -lr, lsr #22
    1e20:	0b2f0000 	bleq	bc1e28 <_Min_Stack_Size+0xbc1a28>
    1e24:	00000690 	muleq	r0, r0, r6
    1e28:	0a1f0b32 	beq	7c4af8 <_Min_Stack_Size+0x7c46f8>
    1e2c:	0b330000 	bleq	cc1e34 <_Min_Stack_Size+0xcc1a34>
    1e30:	00000754 	andeq	r0, r0, r4, asr r7
    1e34:	052f0b34 	streq	r0, [pc, #-2868]!	; 1308 <_Min_Stack_Size+0xf08>
    1e38:	0b350000 	bleq	d41e40 <_Min_Stack_Size+0xd41a40>
    1e3c:	000008b8 			; <UNDEFINED> instruction: 0x000008b8
    1e40:	066f0b36 			; <UNDEFINED> instruction: 0x066f0b36
    1e44:	00380000 	eorseq	r0, r8, r0
    1e48:	0005d503 	andeq	sp, r5, r3, lsl #10
    1e4c:	03980600 	orrseq	r0, r8, #0, 12
    1e50:	00000109 	andeq	r0, r0, r9, lsl #2
    1e54:	040e040c 	streq	r0, [lr], #-1036	; 0xfffffbf4
    1e58:	03640984 	cmneq	r4, #132, 18	; 0x210000
    1e5c:	14080000 	strne	r0, [r8], #-0
    1e60:	04000005 	streq	r0, [r0], #-5
    1e64:	03741186 	cmneq	r4, #-2147483615	; 0x80000021
    1e68:	23020000 	movwcs	r0, #8192	; 0x2000
    1e6c:	07ec0800 	strbeq	r0, [ip, r0, lsl #16]!
    1e70:	87040000 	strhi	r0, [r4, -r0]
    1e74:	00037911 	andeq	r7, r3, r1, lsl r9
    1e78:	20230200 	eorcs	r0, r3, r0, lsl #4
    1e7c:	00099e08 	andeq	r9, r9, r8, lsl #28
    1e80:	11880400 	orrne	r0, r8, r0, lsl #8
    1e84:	00000374 	andeq	r0, r0, r4, ror r3
    1e88:	01802303 	orreq	r2, r0, r3, lsl #6
    1e8c:	00054208 	andeq	r4, r5, r8, lsl #4
    1e90:	11890400 	orrne	r0, r9, r0, lsl #8
    1e94:	00000379 	andeq	r0, r0, r9, ror r3
    1e98:	01a02303 	lsleq	r2, r3, #6
    1e9c:	000a0508 	andeq	r0, sl, r8, lsl #10
    1ea0:	118a0400 	orrne	r0, sl, r0, lsl #8
    1ea4:	00000374 	andeq	r0, r0, r4, ror r3
    1ea8:	02802303 	addeq	r2, r0, #201326592	; 0xc000000
    1eac:	00080008 	andeq	r0, r8, r8
    1eb0:	118b0400 	orrne	r0, fp, r0, lsl #8
    1eb4:	00000379 	andeq	r0, r0, r9, ror r3
    1eb8:	02a02303 	adceq	r2, r0, #201326592	; 0xc000000
    1ebc:	00074f08 	andeq	r4, r7, r8, lsl #30
    1ec0:	118c0400 	orrne	r0, ip, r0, lsl #8
    1ec4:	00000374 	andeq	r0, r0, r4, ror r3
    1ec8:	03802303 	orreq	r2, r0, #201326592	; 0xc000000
    1ecc:	00080a08 	andeq	r0, r8, r8, lsl #20
    1ed0:	118d0400 	orrne	r0, sp, r0, lsl #8
    1ed4:	00000379 	andeq	r0, r0, r9, ror r3
    1ed8:	03a02303 	moveq	r2, #201326592	; 0xc000000
    1edc:	0009ad08 	andeq	sl, r9, r8, lsl #26
    1ee0:	118e0400 	orrne	r0, lr, r0, lsl #8
    1ee4:	00000374 	andeq	r0, r0, r4, ror r3
    1ee8:	04802303 	streq	r2, [r0], #771	; 0x303
    1eec:	00081408 	andeq	r1, r8, r8, lsl #8
    1ef0:	118f0400 	orrne	r0, pc, r0, lsl #8
    1ef4:	00000389 	andeq	r0, r0, r9, lsl #7
    1ef8:	04a02303 	strteq	r2, [r0], #771	; 0x303
    1efc:	0050490d 	subseq	r4, r0, sp, lsl #18
    1f00:	a9119004 	ldmdbge	r1, {r2, ip, pc}
    1f04:	03000003 	movweq	r0, #3
    1f08:	08068023 	stmdaeq	r6, {r0, r1, r5, pc}
    1f0c:	0000081e 	andeq	r0, r0, lr, lsl r8
    1f10:	ae119104 	mnfges	f1, f4
    1f14:	03000003 	movweq	r0, #3
    1f18:	0807f023 	stmdaeq	r7, {r0, r1, r5, ip, sp, lr, pc}
    1f1c:	000007cb 	andeq	r0, r0, fp, asr #15
    1f20:	82119204 	andshi	r9, r1, #4, 4	; 0x40000000
    1f24:	03000000 	movweq	r0, #0
    1f28:	001c8023 	andseq	r8, ip, r3, lsr #32
    1f2c:	0000820e 	andeq	r8, r0, lr, lsl #4
    1f30:	00037400 	andeq	r7, r3, r0, lsl #8
    1f34:	00a10f00 	adceq	r0, r1, r0, lsl #30
    1f38:	00070000 	andeq	r0, r7, r0
    1f3c:	00036404 	andeq	r6, r3, r4, lsl #8
    1f40:	00760e00 	rsbseq	r0, r6, r0, lsl #28
    1f44:	03890000 	orreq	r0, r9, #0
    1f48:	a10f0000 	mrsge	r0, CPSR
    1f4c:	17000000 	strne	r0, [r0, -r0]
    1f50:	00760e00 	rsbseq	r0, r6, r0, lsl #28
    1f54:	03990000 	orrseq	r0, r9, #0
    1f58:	a10f0000 	mrsge	r0, CPSR
    1f5c:	37000000 	strcc	r0, [r0, -r0]
    1f60:	004d0e00 	subeq	r0, sp, r0, lsl #28
    1f64:	03a90000 			; <UNDEFINED> instruction: 0x03a90000
    1f68:	a10f0000 	mrsge	r0, CPSR
    1f6c:	ef000000 	svc	0x00000000
    1f70:	03990400 	orrseq	r0, r9, #0, 8
    1f74:	760e0000 	strvc	r0, [lr], -r0
    1f78:	bf000000 	svclt	0x00000000
    1f7c:	10000003 	andne	r0, r0, r3
    1f80:	000000a1 	andeq	r0, r0, r1, lsr #1
    1f84:	03000283 	movweq	r0, #643	; 0x283
    1f88:	000008a9 	andeq	r0, r0, r9, lsr #17
    1f8c:	8c049304 	stchi	3, cr9, [r4], {4}
    1f90:	11000002 	tstne	r0, r2
    1f94:	0000028e 	andeq	r0, r0, lr, lsl #5
    1f98:	1506ce04 	strne	ip, [r6, #-3588]	; 0xfffff1fc
    1f9c:	0000009c 	muleq	r0, ip, r0
    1fa0:	3a120101 	bcc	4823ac <_Min_Stack_Size+0x481fac>
    1fa4:	07000001 	streq	r0, [r0, -r1]
    1fa8:	0076114c 	rsbseq	r1, r6, ip, asr #2
    1fac:	01010000 	mrseq	r0, (UNDEF: 1)
    1fb0:	4f062c13 	svcmi	0x00062c13
    1fb4:	04930901 	ldreq	r0, [r3], #2305	; 0x901
    1fb8:	42140000 	andsmi	r0, r4, #0
    1fbc:	06000000 	streq	r0, [r0], -r0
    1fc0:	82110151 	andshi	r0, r1, #1073741844	; 0x40000014
    1fc4:	02000000 	andeq	r0, r0, #0
    1fc8:	29140023 	ldmdbcs	r4, {r0, r1, r5}
    1fcc:	06000000 	streq	r0, [r0], -r0
    1fd0:	82110152 	andshi	r0, r1, #-2147483628	; 0x80000014
    1fd4:	02000000 	andeq	r0, r0, #0
    1fd8:	16140423 	ldrne	r0, [r4], -r3, lsr #8
    1fdc:	06000001 	streq	r0, [r0], -r1
    1fe0:	82110153 	andshi	r0, r1, #-1073741804	; 0xc0000014
    1fe4:	02000000 	andeq	r0, r0, #0
    1fe8:	07140823 	ldreq	r0, [r4, -r3, lsr #16]
    1fec:	06000000 	streq	r0, [r0], -r0
    1ff0:	82110154 	andshi	r0, r1, #84, 2
    1ff4:	02000000 	andeq	r0, r0, #0
    1ff8:	49150c23 	ldmdbmi	r5, {r0, r1, r5, sl, fp}
    1ffc:	06005244 	streq	r5, [r0], -r4, asr #4
    2000:	82110155 	andshi	r0, r1, #1073741845	; 0x40000015
    2004:	02000000 	andeq	r0, r0, #0
    2008:	4f151023 	svcmi	0x00151023
    200c:	06005244 	streq	r5, [r0], -r4, asr #4
    2010:	82110156 	andshi	r0, r1, #-2147483627	; 0x80000015
    2014:	02000000 	andeq	r0, r0, #0
    2018:	8b141423 	blhi	5070ac <_Min_Stack_Size+0x506cac>
    201c:	06000000 	streq	r0, [r0], -r0
    2020:	82110157 	andshi	r0, r1, #-1073741803	; 0xc0000015
    2024:	02000000 	andeq	r0, r0, #0
    2028:	0d141823 	ldceq	8, cr1, [r4, #-140]	; 0xffffff74
    202c:	06000000 	streq	r0, [r0], -r0
    2030:	82110158 	andshi	r0, r1, #88, 2
    2034:	02000000 	andeq	r0, r0, #0
    2038:	41151c23 	tstmi	r5, r3, lsr #24
    203c:	06005246 	streq	r5, [r0], -r6, asr #4
    2040:	a3110159 	tstge	r1, #1073741846	; 0x40000016
    2044:	02000004 	andeq	r0, r0, #4
    2048:	42152023 	andsmi	r2, r5, #35	; 0x23
    204c:	06005252 			; <UNDEFINED> instruction: 0x06005252
    2050:	8211015a 	andshi	r0, r1, #-2147483626	; 0x80000016
    2054:	02000000 	andeq	r0, r0, #0
    2058:	0e002823 	cdpeq	8, 0, cr2, cr0, cr3, {1}
    205c:	00000082 	andeq	r0, r0, r2, lsl #1
    2060:	000004a3 	andeq	r0, r0, r3, lsr #9
    2064:	0000a10f 	andeq	sl, r0, pc, lsl #2
    2068:	04000100 	streq	r0, [r0], #-256	; 0xffffff00
    206c:	00000493 	muleq	r0, r3, r4
    2070:	00015716 	andeq	r5, r1, r6, lsl r7
    2074:	015b0600 	cmpeq	fp, r0, lsl #12
    2078:	0003e803 	andeq	lr, r3, r3, lsl #16
    207c:	06381300 	ldrteq	r1, [r8], -r0, lsl #6
    2080:	9f090193 	svcls	0x00090193
    2084:	15000005 	strne	r0, [r0, #-5]
    2088:	06005243 	streq	r5, [r0], -r3, asr #4
    208c:	82110195 	andshi	r0, r1, #1073741861	; 0x40000025
    2090:	02000000 	andeq	r0, r0, #0
    2094:	0f140023 	svceq	0x00140023
    2098:	06000003 	streq	r0, [r0], -r3
    209c:	82110196 	andshi	r0, r1, #-2147483611	; 0x80000025
    20a0:	02000000 	andeq	r0, r0, #0
    20a4:	ca140423 	bgt	503138 <_Min_Stack_Size+0x502d38>
    20a8:	06000002 	streq	r0, [r0], -r2
    20ac:	82110197 	andshi	r0, r1, #-1073741787	; 0xc0000025
    20b0:	02000000 	andeq	r0, r0, #0
    20b4:	43150823 	tstmi	r5, #2293760	; 0x230000
    20b8:	06005249 	streq	r5, [r0], -r9, asr #4
    20bc:	82110198 	andshi	r0, r1, #152, 2	; 0x26
    20c0:	02000000 	andeq	r0, r0, #0
    20c4:	03140c23 	tsteq	r4, #8960	; 0x2300
    20c8:	06000002 	streq	r0, [r0], -r2
    20cc:	82110199 	andshi	r0, r1, #1073741862	; 0x40000026
    20d0:	02000000 	andeq	r0, r0, #0
    20d4:	c0141023 	andsgt	r1, r4, r3, lsr #32
    20d8:	06000000 	streq	r0, [r0], -r0
    20dc:	8211019a 	andshi	r0, r1, #-2147483610	; 0x80000026
    20e0:	02000000 	andeq	r0, r0, #0
    20e4:	10141423 	andsne	r1, r4, r3, lsr #8
    20e8:	06000002 	streq	r0, [r0], -r2
    20ec:	8211019b 	andshi	r0, r1, #-1073741786	; 0xc0000026
    20f0:	02000000 	andeq	r0, r0, #0
    20f4:	dd141823 	ldcle	8, cr1, [r4, #-140]	; 0xffffff74
    20f8:	06000003 	streq	r0, [r0], -r3
    20fc:	8211019c 	andshi	r0, r1, #156, 2	; 0x27
    2100:	02000000 	andeq	r0, r0, #0
    2104:	bb141c23 	bllt	509198 <_Min_Stack_Size+0x508d98>
    2108:	06000002 	streq	r0, [r0], -r2
    210c:	8211019d 	andshi	r0, r1, #1073741863	; 0x40000027
    2110:	02000000 	andeq	r0, r0, #0
    2114:	f0142023 			; <UNDEFINED> instruction: 0xf0142023
    2118:	06000002 	streq	r0, [r0], -r2
    211c:	8211019e 	andshi	r0, r1, #-2147483609	; 0x80000027
    2120:	02000000 	andeq	r0, r0, #0
    2124:	d8142423 	ldmdale	r4, {r0, r1, r5, sl, sp}
    2128:	06000000 	streq	r0, [r0], -r0
    212c:	8211019f 	andshi	r0, r1, #-1073741785	; 0xc0000027
    2130:	02000000 	andeq	r0, r0, #0
    2134:	ba142823 	blt	50c1c8 <_Min_Stack_Size+0x50bdc8>
    2138:	06000001 	streq	r0, [r0], -r1
    213c:	821101a0 	andshi	r0, r1, #160, 2	; 0x28
    2140:	02000000 	andeq	r0, r0, #0
    2144:	97142c23 	ldrls	r2, [r4, -r3, lsr #24]
    2148:	06000001 	streq	r0, [r0], -r1
    214c:	821101a1 	andshi	r0, r1, #1073741864	; 0x40000028
    2150:	02000000 	andeq	r0, r0, #0
    2154:	43153023 	tstmi	r5, #35	; 0x23
    2158:	06005253 			; <UNDEFINED> instruction: 0x06005253
    215c:	821101a2 	andshi	r0, r1, #-2147483608	; 0x80000028
    2160:	02000000 	andeq	r0, r0, #0
    2164:	16003423 	strne	r3, [r0], -r3, lsr #8
    2168:	00000164 	andeq	r0, r0, r4, ror #2
    216c:	0301a306 	movweq	sl, #4870	; 0x1306
    2170:	000004b5 			; <UNDEFINED> instruction: 0x000004b5
    2174:	28061c13 	stmdacs	r6, {r0, r1, r4, sl, fp, ip}
    2178:	06250902 	strteq	r0, [r5], -r2, lsl #18
    217c:	53150000 	tstpl	r5, #0
    2180:	2a060052 	bcs	1822d0 <_Min_Stack_Size+0x181ed0>
    2184:	00821102 	addeq	r1, r2, r2, lsl #2
    2188:	23020000 	movwcs	r0, #8192	; 0x2000
    218c:	52441500 	subpl	r1, r4, #0, 10
    2190:	022b0600 	eoreq	r0, fp, #0, 12
    2194:	00008211 	andeq	r8, r0, r1, lsl r2
    2198:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    219c:	52524215 	subspl	r4, r2, #1342177281	; 0x50000001
    21a0:	022c0600 	eoreq	r0, ip, #0, 12
    21a4:	00008211 	andeq	r8, r0, r1, lsl r2
    21a8:	08230200 	stmdaeq	r3!, {r9}
    21ac:	31524315 	cmpcc	r2, r5, lsl r3
    21b0:	022d0600 	eoreq	r0, sp, #0, 12
    21b4:	00008211 	andeq	r8, r0, r1, lsl r2
    21b8:	0c230200 	sfmeq	f0, 4, [r3], #-0
    21bc:	32524315 	subscc	r4, r2, #1409286144	; 0x54000000
    21c0:	022e0600 	eoreq	r0, lr, #0, 12
    21c4:	00008211 	andeq	r8, r0, r1, lsl r2
    21c8:	10230200 	eorne	r0, r3, r0, lsl #4
    21cc:	33524315 	cmpcc	r2, #1409286144	; 0x54000000
    21d0:	022f0600 	eoreq	r0, pc, #0, 12
    21d4:	00008211 	andeq	r8, r0, r1, lsl r2
    21d8:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    21dc:	000b9b14 	andeq	r9, fp, r4, lsl fp
    21e0:	02300600 	eorseq	r0, r0, #0, 12
    21e4:	00008211 	andeq	r8, r0, r1, lsl r2
    21e8:	18230200 	stmdane	r3!, {r9}
    21ec:	0c5f1600 	mrrceq	6, 0, r1, pc, cr0	; <UNPREDICTABLE>
    21f0:	31060000 	mrscc	r0, (UNDEF: 6)
    21f4:	05ac0302 	streq	r0, [ip, #770]!	; 0x302
    21f8:	54130000 	ldrpl	r0, [r3], #-0
    21fc:	09023706 	stmdbeq	r2, {r1, r2, r8, r9, sl, ip, sp}
    2200:	000007dd 	ldrdeq	r0, [r0], -sp
    2204:	00060214 	andeq	r0, r6, r4, lsl r2
    2208:	02390600 	eorseq	r0, r9, #0, 12
    220c:	00006a11 	andeq	r6, r0, r1, lsl sl
    2210:	00230200 	eoreq	r0, r3, r0, lsl #4
    2214:	0007ec14 	andeq	lr, r7, r4, lsl ip
    2218:	023a0600 	eorseq	r0, sl, #0, 12
    221c:	00006a11 	andeq	r6, r0, r1, lsl sl
    2220:	02230200 	eoreq	r0, r3, #0, 4
    2224:	00065314 	andeq	r5, r6, r4, lsl r3
    2228:	023b0600 	eorseq	r0, fp, #0, 12
    222c:	00006a11 	andeq	r6, r0, r1, lsl sl
    2230:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    2234:	0007f614 	andeq	pc, r7, r4, lsl r6	; <UNPREDICTABLE>
    2238:	023c0600 	eorseq	r0, ip, #0, 12
    223c:	00006a11 	andeq	r6, r0, r1, lsl sl
    2240:	06230200 	strteq	r0, [r3], -r0, lsl #4
    2244:	0006e314 	andeq	lr, r6, r4, lsl r3
    2248:	023d0600 	eorseq	r0, sp, #0, 12
    224c:	00006a11 	andeq	r6, r0, r1, lsl sl
    2250:	08230200 	stmdaeq	r3!, {r9}
    2254:	00080014 	andeq	r0, r8, r4, lsl r0
    2258:	023e0600 	eorseq	r0, lr, #0, 12
    225c:	00006a11 	andeq	r6, r0, r1, lsl sl
    2260:	0a230200 	beq	8c2a68 <_Min_Stack_Size+0x8c2668>
    2264:	00071214 	andeq	r1, r7, r4, lsl r2
    2268:	023f0600 	eorseq	r0, pc, #0, 12
    226c:	00006a11 	andeq	r6, r0, r1, lsl sl
    2270:	0c230200 	sfmeq	f0, 4, [r3], #-0
    2274:	00080a14 	andeq	r0, r8, r4, lsl sl
    2278:	02400600 	subeq	r0, r0, #0, 12
    227c:	00006a11 	andeq	r6, r0, r1, lsl sl
    2280:	0e230200 	cdpeq	2, 2, cr0, cr3, cr0, {0}
    2284:	00099914 	andeq	r9, r9, r4, lsl r9
    2288:	02410600 	subeq	r0, r1, #0, 12
    228c:	00006a11 	andeq	r6, r0, r1, lsl sl
    2290:	10230200 	eorne	r0, r3, r0, lsl #4
    2294:	00081414 	andeq	r1, r8, r4, lsl r4
    2298:	02420600 	subeq	r0, r2, #0, 12
    229c:	00006a11 	andeq	r6, r0, r1, lsl sl
    22a0:	12230200 	eorne	r0, r3, #0, 4
    22a4:	0007e714 	andeq	lr, r7, r4, lsl r7
    22a8:	02430600 	subeq	r0, r3, #0, 12
    22ac:	00006a11 	andeq	r6, r0, r1, lsl sl
    22b0:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    22b4:	00081e14 	andeq	r1, r8, r4, lsl lr
    22b8:	02440600 	subeq	r0, r4, #0, 12
    22bc:	00006a11 	andeq	r6, r0, r1, lsl sl
    22c0:	16230200 	strtne	r0, [r3], -r0, lsl #4
    22c4:	00088b14 	andeq	r8, r8, r4, lsl fp
    22c8:	02450600 	subeq	r0, r5, #0, 12
    22cc:	00006a11 	andeq	r6, r0, r1, lsl sl
    22d0:	18230200 	stmdane	r3!, {r9}
    22d4:	00082814 	andeq	r2, r8, r4, lsl r8
    22d8:	02460600 	subeq	r0, r6, #0, 12
    22dc:	00006a11 	andeq	r6, r0, r1, lsl sl
    22e0:	1a230200 	bne	8c2ae8 <_Min_Stack_Size+0x8c26e8>
    22e4:	00090714 	andeq	r0, r9, r4, lsl r7
    22e8:	02470600 	subeq	r0, r7, #0, 12
    22ec:	00006a11 	andeq	r6, r0, r1, lsl sl
    22f0:	1c230200 	sfmne	f0, 4, [r3], #-0
    22f4:	00023a14 	andeq	r3, r2, r4, lsl sl
    22f8:	02480600 	subeq	r0, r8, #0, 12
    22fc:	0007ed11 	andeq	lr, r7, r1, lsl sp
    2300:	1e230200 	cdpne	2, 2, cr0, cr3, cr0, {0}
    2304:	0008b314 	andeq	fp, r8, r4, lsl r3
    2308:	02490600 	subeq	r0, r9, #0, 12
    230c:	00006a11 	andeq	r6, r0, r1, lsl sl
    2310:	40230200 	eormi	r0, r3, r0, lsl #4
    2314:	000a3e14 	andeq	r3, sl, r4, lsl lr
    2318:	024a0600 	subeq	r0, sl, #0, 12
    231c:	00006a11 	andeq	r6, r0, r1, lsl sl
    2320:	42230200 	eormi	r0, r3, #0, 4
    2324:	0004fd14 	andeq	pc, r4, r4, lsl sp	; <UNPREDICTABLE>
    2328:	024b0600 	subeq	r0, fp, #0, 12
    232c:	00006a11 	andeq	r6, r0, r1, lsl sl
    2330:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
    2334:	00084314 	andeq	r4, r8, r4, lsl r3
    2338:	024c0600 	subeq	r0, ip, #0, 12
    233c:	00006a11 	andeq	r6, r0, r1, lsl sl
    2340:	46230200 	strtmi	r0, [r3], -r0, lsl #4
    2344:	524e4615 	subpl	r4, lr, #22020096	; 0x1500000
    2348:	024d0600 	subeq	r0, sp, #0, 12
    234c:	00006a11 	andeq	r6, r0, r1, lsl sl
    2350:	48230200 	stmdami	r3!, {r9}
    2354:	00084d14 	andeq	r4, r8, r4, lsl sp
    2358:	024e0600 	subeq	r0, lr, #0, 12
    235c:	00006a11 	andeq	r6, r0, r1, lsl sl
    2360:	4a230200 	bmi	8c2b68 <_Min_Stack_Size+0x8c2768>
    2364:	0005a514 	andeq	sl, r5, r4, lsl r5
    2368:	024f0600 	subeq	r0, pc, #0, 12
    236c:	00006a11 	andeq	r6, r0, r1, lsl sl
    2370:	4c230200 	sfmmi	f0, 4, [r3], #-0
    2374:	000a5414 	andeq	r5, sl, r4, lsl r4
    2378:	02500600 	subseq	r0, r0, #0, 12
    237c:	00006a11 	andeq	r6, r0, r1, lsl sl
    2380:	4e230200 	cdpmi	2, 2, cr0, cr3, cr0, {0}
    2384:	0009cf14 	andeq	ip, r9, r4, lsl pc
    2388:	02510600 	subseq	r0, r1, #0, 12
    238c:	00006a11 	andeq	r6, r0, r1, lsl sl
    2390:	50230200 	eorpl	r0, r3, r0, lsl #4
    2394:	000a5e14 	andeq	r5, sl, r4, lsl lr
    2398:	02520600 	subseq	r0, r2, #0, 12
    239c:	00006a11 	andeq	r6, r0, r1, lsl sl
    23a0:	52230200 	eorpl	r0, r3, #0, 4
    23a4:	006a0e00 	rsbeq	r0, sl, r0, lsl #28
    23a8:	07ed0000 	strbeq	r0, [sp, r0]!
    23ac:	a10f0000 	mrsge	r0, CPSR
    23b0:	10000000 	andne	r0, r0, r0
    23b4:	07dd0400 	ldrbeq	r0, [sp, r0, lsl #8]
    23b8:	99160000 	ldmdbls	r6, {}	; <UNPREDICTABLE>
    23bc:	06000005 	streq	r0, [r0], -r5
    23c0:	32030253 	andcc	r0, r3, #805306373	; 0x30000005
    23c4:	02000006 	andeq	r0, r0, #6
    23c8:	0d810408 	cfstrseq	mvf0, [r1, #32]
    23cc:	04160000 	ldreq	r0, [r6], #-0
    23d0:	08000010 	stmdaeq	r0, {r4}
    23d4:	a1170165 	tstge	r7, r5, ror #2
    23d8:	03000000 	movweq	r0, #0
    23dc:	00000ab9 			; <UNDEFINED> instruction: 0x00000ab9
    23e0:	330e2e09 	movwcc	r2, #60937	; 0xee09
    23e4:	03000000 	movweq	r0, #0
    23e8:	00000b2e 	andeq	r0, r0, lr, lsr #22
    23ec:	330e7409 	movwcc	r7, #58377	; 0xe409
    23f0:	17000000 	strne	r0, [r0, -r0]
    23f4:	03a50904 			; <UNDEFINED> instruction: 0x03a50904
    23f8:	0000084d 	andeq	r0, r0, sp, asr #16
    23fc:	000cb318 	andeq	fp, ip, r8, lsl r3
    2400:	0ca70900 			; <UNDEFINED> instruction: 0x0ca70900
    2404:	00000806 	andeq	r0, r0, r6, lsl #16
    2408:	000dc718 	andeq	ip, sp, r8, lsl r7
    240c:	13a80900 			; <UNDEFINED> instruction: 0x13a80900
    2410:	0000084d 	andeq	r0, r0, sp, asr #16
    2414:	00570e00 	subseq	r0, r7, r0, lsl #28
    2418:	085d0000 	ldmdaeq	sp, {}^	; <UNPREDICTABLE>
    241c:	a10f0000 	mrsge	r0, CPSR
    2420:	03000000 	movweq	r0, #0
    2424:	09080700 	stmdbeq	r8, {r8, r9, sl}
    2428:	088509a2 	stmeq	r5, {r1, r5, r7, r8, fp}
    242c:	a0080000 	andge	r0, r8, r0
    2430:	0900000b 	stmdbeq	r0, {r0, r1, r3}
    2434:	009507a4 	addseq	r0, r5, r4, lsr #15
    2438:	23020000 	movwcs	r0, #8192	; 0x2000
    243c:	0c6d0800 	stcleq	8, cr0, [sp], #-0
    2440:	a9090000 	stmdbge	r9, {}	; <UNPREDICTABLE>
    2444:	00082b05 	andeq	r2, r8, r5, lsl #22
    2448:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    244c:	0d360300 	ldceq	3, cr0, [r6, #-0]
    2450:	aa090000 	bge	242458 <_Min_Stack_Size+0x242058>
    2454:	00085d03 	andeq	r5, r8, r3, lsl #26
    2458:	03041900 	movweq	r1, #18688	; 0x4900
    245c:	00000d0f 	andeq	r0, r0, pc, lsl #26
    2460:	8719160a 	ldrhi	r1, [r9, -sl, lsl #12]
    2464:	03000000 	movweq	r0, #0
    2468:	00000ae8 	andeq	r0, r0, r8, ror #21
    246c:	950d0c0b 	strls	r0, [sp, #-3083]	; 0xfffff3f5
    2470:	03000000 	movweq	r0, #0
    2474:	00000caa 	andeq	r0, r0, sl, lsr #25
    2478:	9f1b230a 	svcls	0x001b230a
    247c:	1a000008 	bne	24a4 <_Min_Stack_Size+0x20a4>
    2480:	00000da6 	andeq	r0, r0, r6, lsr #27
    2484:	08340a18 	ldmdaeq	r4!, {r3, r4, r9, fp}
    2488:	0000091d 	andeq	r0, r0, sp, lsl r9
    248c:	000fe208 	andeq	lr, pc, r8, lsl #4
    2490:	13360a00 	teqne	r6, #0, 20
    2494:	0000091d 	andeq	r0, r0, sp, lsl r9
    2498:	0d002302 	stceq	3, cr2, [r0, #-8]
    249c:	0a006b5f 	beq	1d220 <_Min_Stack_Size+0x1ce20>
    24a0:	00950737 	addseq	r0, r5, r7, lsr r7
    24a4:	23020000 	movwcs	r0, #8192	; 0x2000
    24a8:	0e370804 	cdpeq	8, 3, cr0, cr7, cr4, {0}
    24ac:	370a0000 	strcc	r0, [sl, -r0]
    24b0:	0000950b 	andeq	r9, r0, fp, lsl #10
    24b4:	08230200 	stmdaeq	r3!, {r9}
    24b8:	000dbb08 	andeq	fp, sp, r8, lsl #22
    24bc:	14370a00 	ldrtne	r0, [r7], #-2560	; 0xfffff600
    24c0:	00000095 	muleq	r0, r5, r0
    24c4:	080c2302 	stmdaeq	ip, {r1, r8, r9, sp}
    24c8:	00000bf4 	strdeq	r0, [r0], -r4
    24cc:	951b370a 	ldrls	r3, [fp, #-1802]	; 0xfffff8f6
    24d0:	02000000 	andeq	r0, r0, #0
    24d4:	5f0d1023 	svcpl	0x000d1023
    24d8:	380a0078 	stmdacc	sl, {r3, r4, r5, r6}
    24dc:	0009230b 	andeq	r2, r9, fp, lsl #6
    24e0:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    24e4:	b7041b00 	strlt	r1, [r4, -r0, lsl #22]
    24e8:	0e000008 	cdpeq	0, 0, cr0, cr0, cr8, {0}
    24ec:	00000893 	muleq	r0, r3, r8
    24f0:	00000933 	andeq	r0, r0, r3, lsr r9
    24f4:	0000a10f 	andeq	sl, r0, pc, lsl #2
    24f8:	1a000000 	bne	2500 <_Min_Stack_Size+0x2100>
    24fc:	00000e52 	andeq	r0, r0, r2, asr lr
    2500:	083c0a24 	ldmdaeq	ip!, {r2, r5, r9, fp}
    2504:	000009c8 	andeq	r0, r0, r8, asr #19
    2508:	000c1908 	andeq	r1, ip, r8, lsl #18
    250c:	093e0a00 	ldmdbeq	lr!, {r9, fp}
    2510:	00000095 	muleq	r0, r5, r0
    2514:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
    2518:	00000ba8 	andeq	r0, r0, r8, lsr #23
    251c:	95093f0a 	strls	r3, [r9, #-3850]	; 0xfffff0f6
    2520:	02000000 	andeq	r0, r0, #0
    2524:	91080423 	tstls	r8, r3, lsr #8
    2528:	0a00000b 	beq	255c <_Min_Stack_Size+0x215c>
    252c:	00950940 	addseq	r0, r5, r0, asr #18
    2530:	23020000 	movwcs	r0, #8192	; 0x2000
    2534:	0c870808 	stceq	8, cr0, [r7], {8}
    2538:	410a0000 	mrsmi	r0, (UNDEF: 10)
    253c:	00009509 	andeq	r9, r0, r9, lsl #10
    2540:	0c230200 	sfmeq	f0, 4, [r3], #-0
    2544:	000d7808 	andeq	r7, sp, r8, lsl #16
    2548:	09420a00 	stmdbeq	r2, {r9, fp}^
    254c:	00000095 	muleq	r0, r5, r0
    2550:	08102302 	ldmdaeq	r0, {r1, r8, r9, sp}
    2554:	00000d94 	muleq	r0, r4, sp
    2558:	9509430a 	strls	r4, [r9, #-778]	; 0xfffffcf6
    255c:	02000000 	andeq	r0, r0, #0
    2560:	6f081423 	svcvs	0x00081423
    2564:	0a00000b 	beq	2598 <_Min_Stack_Size+0x2198>
    2568:	00950944 	addseq	r0, r5, r4, asr #18
    256c:	23020000 	movwcs	r0, #8192	; 0x2000
    2570:	0c220818 	stceq	8, cr0, [r2], #-96	; 0xffffffa0
    2574:	450a0000 	strmi	r0, [sl, #-0]
    2578:	00009509 	andeq	r9, r0, r9, lsl #10
    257c:	1c230200 	sfmne	f0, 4, [r3], #-0
    2580:	000d4108 	andeq	r4, sp, r8, lsl #2
    2584:	09460a00 	stmdbeq	r6, {r9, fp}^
    2588:	00000095 	muleq	r0, r5, r0
    258c:	00202302 	eoreq	r2, r0, r2, lsl #6
    2590:	000de11c 	andeq	lr, sp, ip, lsl r1
    2594:	0a010800 	beq	4459c <_Min_Stack_Size+0x4419c>
    2598:	0a16084f 	beq	5846dc <_Min_Stack_Size+0x5842dc>
    259c:	70080000 	andvc	r0, r8, r0
    25a0:	0a00000f 	beq	25e4 <_Min_Stack_Size+0x21e4>
    25a4:	0a160a50 	beq	584eec <_Min_Stack_Size+0x584aec>
    25a8:	23020000 	movwcs	r0, #8192	; 0x2000
    25ac:	0ea30800 	cdpeq	8, 10, cr0, cr3, cr0, {0}
    25b0:	510a0000 	mrspl	r0, (UNDEF: 10)
    25b4:	000a1609 	andeq	r1, sl, r9, lsl #12
    25b8:	80230300 	eorhi	r0, r3, r0, lsl #6
    25bc:	0fa30801 	svceq	0x00a30801
    25c0:	530a0000 	movwpl	r0, #40960	; 0xa000
    25c4:	0008930a 	andeq	r9, r8, sl, lsl #6
    25c8:	80230300 	eorhi	r0, r3, r0, lsl #6
    25cc:	0fcf0802 	svceq	0x00cf0802
    25d0:	560a0000 	strpl	r0, [sl], -r0
    25d4:	0008930a 	andeq	r9, r8, sl, lsl #6
    25d8:	84230300 	strthi	r0, [r3], #-768	; 0xfffffd00
    25dc:	910e0002 	tstls	lr, r2
    25e0:	26000008 	strcs	r0, [r0], -r8
    25e4:	0f00000a 	svceq	0x0000000a
    25e8:	000000a1 	andeq	r0, r0, r1, lsr #1
    25ec:	9e1c001f 	mrcls	0, 0, r0, cr12, cr15, {0}
    25f0:	9000000d 	andls	r0, r0, sp
    25f4:	08620a01 	stmdaeq	r2!, {r0, r9, fp}^
    25f8:	00000a72 	andeq	r0, r0, r2, ror sl
    25fc:	000fe208 	andeq	lr, pc, r8, lsl #4
    2600:	12630a00 	rsbne	r0, r3, #0, 20
    2604:	00000a72 	andeq	r0, r0, r2, ror sl
    2608:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
    260c:	00000d68 	andeq	r0, r0, r8, ror #26
    2610:	9506640a 	strls	r6, [r6, #-1034]	; 0xfffffbf6
    2614:	02000000 	andeq	r0, r0, #0
    2618:	4a080423 	bmi	2036ac <_Min_Stack_Size+0x2032ac>
    261c:	0a00000b 	beq	2650 <_Min_Stack_Size+0x2250>
    2620:	0a780966 	beq	1e04bc0 <_Min_Stack_Size+0x1e047c0>
    2624:	23020000 	movwcs	r0, #8192	; 0x2000
    2628:	0de10808 	stcleq	8, cr0, [r1, #32]!
    262c:	670a0000 	strvs	r0, [sl, -r0]
    2630:	0009c81e 	andeq	ip, r9, lr, lsl r8
    2634:	88230300 	stmdahi	r3!, {r8, r9}
    2638:	041b0001 	ldreq	r0, [fp], #-1
    263c:	00000a26 	andeq	r0, r0, r6, lsr #20
    2640:	000a880e 	andeq	r8, sl, lr, lsl #16
    2644:	000a8800 	andeq	r8, sl, r0, lsl #16
    2648:	00a10f00 	adceq	r0, r1, r0, lsl #30
    264c:	001f0000 	andseq	r0, pc, r0
    2650:	0a8e041b 	beq	fe3836c4 <BootRAM+0xd2f3e65>
    2654:	011d0000 	tsteq	sp, r0
    2658:	000d8d1a 	andeq	r8, sp, sl, lsl sp
    265c:	7a0a0800 	bvc	284664 <_Min_Stack_Size+0x284264>
    2660:	000abc08 	andeq	fp, sl, r8, lsl #24
    2664:	0ce70800 	stcleq	8, cr0, [r7]
    2668:	7b0a0000 	blvc	282670 <_Min_Stack_Size+0x282270>
    266c:	000abc11 	andeq	fp, sl, r1, lsl ip
    2670:	00230200 	eoreq	r0, r3, r0, lsl #4
    2674:	000e5f08 	andeq	r5, lr, r8, lsl #30
    2678:	067c0a00 	ldrbteq	r0, [ip], -r0, lsl #20
    267c:	00000095 	muleq	r0, r5, r0
    2680:	00042302 	andeq	r2, r4, r2, lsl #6
    2684:	0057041b 	subseq	r0, r7, fp, lsl r4
    2688:	ec1a0000 	ldc	0, cr0, [sl], {-0}
    268c:	6800000b 	stmdavs	r0, {r0, r1, r3}
    2690:	3508ba0a 	strcc	fp, [r8, #-2570]	; 0xfffff5f6
    2694:	0d00000c 	stceq	0, cr0, [r0, #-48]	; 0xffffffd0
    2698:	0a00705f 	beq	1e81c <_Min_Stack_Size+0x1e41c>
    269c:	0abc12bb 	beq	fef07190 <BootRAM+0xde77931>
    26a0:	23020000 	movwcs	r0, #8192	; 0x2000
    26a4:	725f0d00 	subsvc	r0, pc, #0, 26
    26a8:	07bc0a00 	ldreq	r0, [ip, r0, lsl #20]!
    26ac:	00000095 	muleq	r0, r5, r0
    26b0:	0d042302 	stceq	3, cr2, [r4, #-8]
    26b4:	0a00775f 	beq	20438 <_Min_Stack_Size+0x20038>
    26b8:	009507bd 			; <UNDEFINED> instruction: 0x009507bd
    26bc:	23020000 	movwcs	r0, #8192	; 0x2000
    26c0:	0ab20808 	beq	fec846e8 <BootRAM+0xdbf4e89>
    26c4:	be0a0000 	cdplt	0, 0, cr0, cr10, cr0, {0}
    26c8:	00002c09 	andeq	r2, r0, r9, lsl #24
    26cc:	0c230200 	sfmeq	f0, 4, [r3], #-0
    26d0:	000d2608 	andeq	r2, sp, r8, lsl #12
    26d4:	09bf0a00 	ldmibeq	pc!, {r9, fp}	; <UNPREDICTABLE>
    26d8:	0000002c 	andeq	r0, r0, ip, lsr #32
    26dc:	0d0e2302 	stceq	3, cr2, [lr, #-8]
    26e0:	0066625f 	rsbeq	r6, r6, pc, asr r2
    26e4:	9011c00a 	andsls	ip, r1, sl
    26e8:	0200000a 	andeq	r0, r0, #10
    26ec:	a9081023 	stmdbge	r8, {r0, r1, r5, ip}
    26f0:	0a00000a 	beq	2720 <_Min_Stack_Size+0x2320>
    26f4:	009507c1 	addseq	r0, r5, r1, asr #15
    26f8:	23020000 	movwcs	r0, #8192	; 0x2000
    26fc:	0b4f0818 	bleq	13c4764 <_Min_Stack_Size+0x13c4364>
    2700:	c80a0000 	stmdagt	sl, {}	; <UNPREDICTABLE>
    2704:	0008910a 	andeq	r9, r8, sl, lsl #2
    2708:	1c230200 	sfmne	f0, 4, [r3], #-0
    270c:	000d5108 	andeq	r5, sp, r8, lsl #2
    2710:	1dca0a00 	vstrne	s1, [sl]
    2714:	00000de6 	andeq	r0, r0, r6, ror #27
    2718:	08202302 	stmdaeq	r0!, {r1, r8, r9, sp}
    271c:	00000a96 	muleq	r0, r6, sl
    2720:	111dcc0a 	tstne	sp, sl, lsl #24
    2724:	0200000e 	andeq	r0, r0, #14
    2728:	02082423 	andeq	r2, r8, #587202560	; 0x23000000
    272c:	0a00000c 	beq	2764 <_Min_Stack_Size+0x2364>
    2730:	0e360dcf 	cdpeq	13, 3, cr0, cr6, cr15, {6}
    2734:	23020000 	movwcs	r0, #8192	; 0x2000
    2738:	0cbf0828 	ldceq	8, cr0, [pc], #160	; 27e0 <_Min_Stack_Size+0x23e0>
    273c:	d00a0000 	andle	r0, sl, r0
    2740:	000e5109 	andeq	r5, lr, r9, lsl #2
    2744:	2c230200 	sfmcs	f0, 4, [r3], #-0
    2748:	62755f0d 	rsbsvs	r5, r5, #13, 30	; 0x34
    274c:	11d30a00 	bicsne	r0, r3, r0, lsl #20
    2750:	00000a90 	muleq	r0, r0, sl
    2754:	0d302302 	ldceq	3, cr2, [r0, #-8]!
    2758:	0070755f 	rsbseq	r7, r0, pc, asr r5
    275c:	bc12d40a 	cfldrslt	mvf13, [r2], {10}
    2760:	0200000a 	andeq	r0, r0, #10
    2764:	5f0d3823 	svcpl	0x000d3823
    2768:	0a007275 	beq	1f144 <_Min_Stack_Size+0x1ed44>
    276c:	009507d5 			; <UNDEFINED> instruction: 0x009507d5
    2770:	23020000 	movwcs	r0, #8192	; 0x2000
    2774:	0c08083c 	stceq	8, cr0, [r8], {60}	; 0x3c
    2778:	d80a0000 	stmdale	sl, {}	; <UNPREDICTABLE>
    277c:	000e5711 	andeq	r5, lr, r1, lsl r7
    2780:	40230200 	eormi	r0, r3, r0, lsl #4
    2784:	000fac08 	andeq	sl, pc, r8, lsl #24
    2788:	11d90a00 	bicsne	r0, r9, r0, lsl #20
    278c:	00000e67 	andeq	r0, r0, r7, ror #28
    2790:	0d432302 	stcleq	3, cr2, [r3, #-8]
    2794:	00626c5f 	rsbeq	r6, r2, pc, asr ip
    2798:	9011dc0a 	andsls	sp, r1, sl, lsl #24
    279c:	0200000a 	andeq	r0, r0, #10
    27a0:	49084423 	stmdbmi	r8, {r0, r1, r5, sl, lr}
    27a4:	0a00000e 	beq	27e4 <_Min_Stack_Size+0x23e4>
    27a8:	009507df 			; <UNDEFINED> instruction: 0x009507df
    27ac:	23020000 	movwcs	r0, #8192	; 0x2000
    27b0:	0def084c 	stcleq	8, cr0, [pc, #304]!	; 28e8 <_Min_Stack_Size+0x24e8>
    27b4:	e00a0000 	and	r0, sl, r0
    27b8:	0008130a 	andeq	r1, r8, sl, lsl #6
    27bc:	50230200 	eorpl	r0, r3, r0, lsl #4
    27c0:	000dc108 	andeq	ip, sp, r8, lsl #2
    27c4:	12e30a00 	rscne	r0, r3, #0, 20
    27c8:	00000c54 	andeq	r0, r0, r4, asr ip
    27cc:	08542302 	ldmdaeq	r4, {r1, r8, r9, sp}^
    27d0:	00000e21 	andeq	r0, r0, r1, lsr #28
    27d4:	ab0ce70a 	blge	33c404 <_Min_Stack_Size+0x33c004>
    27d8:	02000008 	andeq	r0, r0, #8
    27dc:	66085823 	strvs	r5, [r8], -r3, lsr #16
    27e0:	0a00000b 	beq	2814 <_Min_Stack_Size+0x2414>
    27e4:	08850ee9 	stmeq	r5, {r0, r3, r5, r6, r7, r9, sl, fp}
    27e8:	23020000 	movwcs	r0, #8192	; 0x2000
    27ec:	0fc7085c 	svceq	0x00c7085c
    27f0:	ea0a0000 	b	2827f8 <_Min_Stack_Size+0x2823f8>
    27f4:	00009509 	andeq	r9, r0, r9, lsl #10
    27f8:	64230200 	strtvs	r0, [r3], #-512	; 0xfffffe00
    27fc:	95011e00 	strls	r1, [r1, #-3584]	; 0xfffff200
    2800:	54000000 	strpl	r0, [r0], #-0
    2804:	1f00000c 	svcne	0x0000000c
    2808:	00000c54 	andeq	r0, r0, r4, asr ip
    280c:	0008911f 	andeq	r9, r8, pc, lsl r1
    2810:	0dd41f00 	ldcleq	15, cr1, [r4]
    2814:	951f0000 	ldrls	r0, [pc, #-0]	; 281c <_Min_Stack_Size+0x241c>
    2818:	00000000 	andeq	r0, r0, r0
    281c:	0c5f041b 	cfldrdeq	mvd0, [pc], {27}
    2820:	54050000 	strpl	r0, [r5], #-0
    2824:	2000000c 	andcs	r0, r0, ip
    2828:	00000f83 	andeq	r0, r0, r3, lsl #31
    282c:	650a0428 	strvs	r0, [sl, #-1064]	; 0xfffffbd8
    2830:	0dd40802 	ldcleq	8, cr0, [r4, #8]
    2834:	fb140000 	blx	50283e <_Min_Stack_Size+0x50243e>
    2838:	0a00000b 	beq	286c <_Min_Stack_Size+0x246c>
    283c:	95070267 	strls	r0, [r7, #-615]	; 0xfffffd99
    2840:	02000000 	andeq	r0, r0, #0
    2844:	d1140023 	tstle	r4, r3, lsr #32
    2848:	0a00000c 	beq	2880 <_Min_Stack_Size+0x2480>
    284c:	c90b026c 	stmdbgt	fp, {r2, r3, r5, r6, r9}
    2850:	0200000e 	andeq	r0, r0, #14
    2854:	26140423 	ldrcs	r0, [r4], -r3, lsr #8
    2858:	0a00000b 	beq	288c <_Min_Stack_Size+0x248c>
    285c:	c914026c 	ldmdbgt	r4, {r2, r3, r5, r6, r9}
    2860:	0200000e 	andeq	r0, r0, #14
    2864:	fc140823 	ldc2	8, cr0, [r4], {35}	; 0x23
    2868:	0a00000f 	beq	28ac <_Min_Stack_Size+0x24ac>
    286c:	c91e026c 	ldmdbgt	lr, {r2, r3, r5, r6, r9}
    2870:	0200000e 	andeq	r0, r0, #14
    2874:	2c140c23 	ldccs	12, cr0, [r4], {35}	; 0x23
    2878:	0a00000c 	beq	28b0 <_Min_Stack_Size+0x24b0>
    287c:	9508026e 	strls	r0, [r8, #-622]	; 0xfffffd92
    2880:	02000000 	andeq	r0, r0, #0
    2884:	0e141023 	cdpeq	0, 1, cr1, cr4, cr3, {1}
    2888:	0a00000c 	beq	28c0 <_Min_Stack_Size+0x24c0>
    288c:	0208026f 	andeq	r0, r8, #-268435450	; 0xf0000006
    2890:	02000011 	andeq	r0, r0, #17
    2894:	fa141423 	blx	507928 <_Min_Stack_Size+0x507528>
    2898:	0a00000a 	beq	28c8 <_Min_Stack_Size+0x24c8>
    289c:	95070272 	strls	r0, [r7, #-626]	; 0xfffffd8e
    28a0:	02000000 	andeq	r0, r0, #0
    28a4:	5c143023 	ldcpl	0, cr3, [r4], {35}	; 0x23
    28a8:	0a00000f 	beq	28ec <_Min_Stack_Size+0x24ec>
    28ac:	18160273 	ldmdane	r6, {r0, r1, r4, r5, r6, r9}
    28b0:	02000011 	andeq	r0, r0, #17
    28b4:	c6143423 	ldrgt	r3, [r4], -r3, lsr #8
    28b8:	0a00000c 	beq	28f0 <_Min_Stack_Size+0x24f0>
    28bc:	95070275 	strls	r0, [r7, #-629]	; 0xfffffd8b
    28c0:	02000000 	andeq	r0, r0, #0
    28c4:	2c143823 	ldccs	8, cr3, [r4], {35}	; 0x23
    28c8:	0a00000d 	beq	2904 <_Min_Stack_Size+0x2504>
    28cc:	2a0a0277 	bcs	2832b0 <_Min_Stack_Size+0x282eb0>
    28d0:	02000011 	andeq	r0, r0, #17
    28d4:	82143c23 	andshi	r3, r4, #8960	; 0x2300
    28d8:	0a00000b 	beq	290c <_Min_Stack_Size+0x250c>
    28dc:	1d13027a 	lfmne	f0, 4, [r3, #-488]	; 0xfffffe18
    28e0:	02000009 	andeq	r0, r0, #9
    28e4:	c0144023 	andsgt	r4, r4, r3, lsr #32
    28e8:	0a00000b 	beq	291c <_Min_Stack_Size+0x251c>
    28ec:	9507027b 	strls	r0, [r7, #-635]	; 0xfffffd85
    28f0:	02000000 	andeq	r0, r0, #0
    28f4:	75144423 	ldrvc	r4, [r4, #-1059]	; 0xfffffbdd
    28f8:	0a00000c 	beq	2930 <_Min_Stack_Size+0x2530>
    28fc:	1d13027c 	lfmne	f0, 4, [r3, #-496]	; 0xfffffe10
    2900:	02000009 	andeq	r0, r0, #9
    2904:	ff144823 			; <UNDEFINED> instruction: 0xff144823
    2908:	0a00000c 	beq	2940 <_Min_Stack_Size+0x2540>
    290c:	3014027d 	andscc	r0, r4, sp, ror r2
    2910:	02000011 	andeq	r0, r0, #17
    2914:	2f144c23 	svccs	0x00144c23
    2918:	0a00000e 	beq	2958 <_Min_Stack_Size+0x2558>
    291c:	95070280 	strls	r0, [r7, #-640]	; 0xfffffd80
    2920:	02000000 	andeq	r0, r0, #0
    2924:	af145023 	svcge	0x00145023
    2928:	0a00000e 	beq	2968 <_Min_Stack_Size+0x2568>
    292c:	d4090281 	strle	r0, [r9], #-641	; 0xfffffd7f
    2930:	0200000d 	andeq	r0, r0, #13
    2934:	21145423 	tstcs	r4, r3, lsr #8
    2938:	0a00000b 	beq	296c <_Min_Stack_Size+0x256c>
    293c:	dd0702a4 	sfmle	f0, 4, [r7, #-656]	; 0xfffffd70
    2940:	02000010 	andeq	r0, r0, #16
    2944:	9e145823 	cdpls	8, 1, cr5, cr4, cr3, {1}
    2948:	0a00000d 	beq	2984 <_Min_Stack_Size+0x2584>
    294c:	721302a8 	andsvc	r0, r3, #168, 4	; 0x8000000a
    2950:	0300000a 	movweq	r0, #10
    2954:	1402c823 	strne	ip, [r2], #-2083	; 0xfffff7dd
    2958:	00000fe8 	andeq	r0, r0, r8, ror #31
    295c:	1202a90a 	andne	sl, r2, #163840	; 0x28000
    2960:	00000a26 	andeq	r0, r0, r6, lsr #20
    2964:	02cc2303 	sbceq	r2, ip, #201326592	; 0xc000000
    2968:	000c9114 	andeq	r9, ip, r4, lsl r1
    296c:	02ad0a00 	adceq	r0, sp, #0, 20
    2970:	0011420c 	andseq	r4, r1, ip, lsl #4
    2974:	dc230300 	stcle	3, cr0, [r3], #-0
    2978:	0f301405 	svceq	0x00301405
    297c:	b20a0000 	andlt	r0, sl, #0
    2980:	0e841002 	cdpeq	0, 8, cr1, cr4, cr2, {0}
    2984:	23030000 	movwcs	r0, #12288	; 0x3000
    2988:	b61405e0 	ldrlt	r0, [r4], -r0, ror #11
    298c:	0a00000d 	beq	29c8 <_Min_Stack_Size+0x25c8>
    2990:	4e0a02b4 	mcrmi	2, 0, r0, cr10, cr4, {5}
    2994:	03000011 	movweq	r0, #17
    2998:	0005ec23 	andeq	lr, r5, r3, lsr #24
    299c:	0dda041b 	cfldrdeq	mvd0, [sl, #108]	; 0x6c
    29a0:	01020000 	mrseq	r0, (UNDEF: 2)
    29a4:	00025f08 	andeq	r5, r2, r8, lsl #30
    29a8:	0dda0500 	cfldr64eq	mvdx0, [sl]
    29ac:	041b0000 	ldreq	r0, [fp], #-0
    29b0:	00000c35 	andeq	r0, r0, r5, lsr ip
    29b4:	0095011e 	addseq	r0, r5, lr, lsl r1
    29b8:	0e0b0000 	cdpeq	0, 0, cr0, cr11, cr0, {0}
    29bc:	541f0000 	ldrpl	r0, [pc], #-0	; 29c4 <_Min_Stack_Size+0x25c4>
    29c0:	1f00000c 	svcne	0x0000000c
    29c4:	00000891 	muleq	r0, r1, r8
    29c8:	000e0b1f 	andeq	r0, lr, pc, lsl fp
    29cc:	00951f00 	addseq	r1, r5, r0, lsl #30
    29d0:	1b000000 	blne	29d8 <_Min_Stack_Size+0x25d8>
    29d4:	000de104 	andeq	lr, sp, r4, lsl #2
    29d8:	ec041b00 			; <UNDEFINED> instruction: 0xec041b00
    29dc:	1e00000d 	cdpne	0, 0, cr0, cr0, cr13, {0}
    29e0:	00081f01 	andeq	r1, r8, r1, lsl #30
    29e4:	000e3600 	andeq	r3, lr, r0, lsl #12
    29e8:	0c541f00 	mrrceq	15, 0, r1, r4, cr0
    29ec:	911f0000 	tstls	pc, r0
    29f0:	1f000008 	svcne	0x00000008
    29f4:	0000081f 	andeq	r0, r0, pc, lsl r8
    29f8:	0000951f 	andeq	r9, r0, pc, lsl r5
    29fc:	041b0000 	ldreq	r0, [fp], #-0
    2a00:	00000e17 	andeq	r0, r0, r7, lsl lr
    2a04:	0095011e 	addseq	r0, r5, lr, lsl r1
    2a08:	0e510000 	cdpeq	0, 5, cr0, cr1, cr0, {0}
    2a0c:	541f0000 	ldrpl	r0, [pc], #-0	; 2a14 <_Min_Stack_Size+0x2614>
    2a10:	1f00000c 	svcne	0x0000000c
    2a14:	00000891 	muleq	r0, r1, r8
    2a18:	3c041b00 			; <UNDEFINED> instruction: 0x3c041b00
    2a1c:	0e00000e 	cdpeq	0, 0, cr0, cr0, cr14, {0}
    2a20:	00000057 	andeq	r0, r0, r7, asr r0
    2a24:	00000e67 	andeq	r0, r0, r7, ror #28
    2a28:	0000a10f 	andeq	sl, r0, pc, lsl #2
    2a2c:	0e000200 	cdpeq	2, 0, cr0, cr0, cr0, {0}
    2a30:	00000057 	andeq	r0, r0, r7, asr r0
    2a34:	00000e77 	andeq	r0, r0, r7, ror lr
    2a38:	0000a10f 	andeq	sl, r0, pc, lsl #2
    2a3c:	16000000 	strne	r0, [r0], -r0
    2a40:	00000b8a 	andeq	r0, r0, sl, lsl #23
    2a44:	1a01240a 	bne	4ba74 <_Min_Stack_Size+0x4b674>
    2a48:	00000ac2 	andeq	r0, r0, r2, asr #21
    2a4c:	000f2a21 	andeq	r2, pc, r1, lsr #20
    2a50:	280a0c00 	stmdacs	sl, {sl, fp}
    2a54:	0ec30801 	cdpeq	8, 12, cr0, cr3, cr1, {0}
    2a58:	e2140000 	ands	r0, r4, #0
    2a5c:	0a00000f 	beq	2aa0 <_Min_Stack_Size+0x26a0>
    2a60:	c311012a 	tstgt	r1, #-2147483638	; 0x8000000a
    2a64:	0200000e 	andeq	r0, r0, #14
    2a68:	9c140023 	ldcls	0, cr0, [r4], {35}	; 0x23
    2a6c:	0a00000e 	beq	2aac <_Min_Stack_Size+0x26ac>
    2a70:	9507012b 	strls	r0, [r7, #-299]	; 0xfffffed5
    2a74:	02000000 	andeq	r0, r0, #0
    2a78:	b9140423 	ldmdblt	r4, {r0, r1, r5, sl}
    2a7c:	0a00000c 	beq	2ab4 <_Min_Stack_Size+0x26b4>
    2a80:	c90b012c 	stmdbgt	fp, {r2, r3, r5, r8}
    2a84:	0200000e 	andeq	r0, r0, #14
    2a88:	1b000823 	blne	4b1c <_Min_Stack_Size+0x471c>
    2a8c:	000e8404 	andeq	r8, lr, r4, lsl #8
    2a90:	77041b00 	strvc	r1, [r4, -r0, lsl #22]
    2a94:	2100000e 	tstcs	r0, lr
    2a98:	00000bb8 			; <UNDEFINED> instruction: 0x00000bb8
    2a9c:	01440a0e 	cmpeq	r4, lr, lsl #20
    2aa0:	000f0e08 	andeq	r0, pc, r8, lsl #28
    2aa4:	0fd71400 	svceq	0x00d71400
    2aa8:	450a0000 	strmi	r0, [sl, #-0]
    2aac:	0f0e1201 	svceq	0x000e1201
    2ab0:	23020000 	movwcs	r0, #8192	; 0x2000
    2ab4:	0d091400 	cfstrseq	mvf1, [r9, #-0]
    2ab8:	460a0000 	strmi	r0, [sl], -r0
    2abc:	0f0e1201 	svceq	0x000e1201
    2ac0:	23020000 	movwcs	r0, #8192	; 0x2000
    2ac4:	0ee21406 	cdpeq	4, 14, cr1, cr2, cr6, {0}
    2ac8:	470a0000 	strmi	r0, [sl, -r0]
    2acc:	006f1201 	rsbeq	r1, pc, r1, lsl #4
    2ad0:	23020000 	movwcs	r0, #8192	; 0x2000
    2ad4:	6f0e000c 	svcvs	0x000e000c
    2ad8:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    2adc:	0f00000f 	svceq	0x0000000f
    2ae0:	000000a1 	andeq	r0, r0, r1, lsr #1
    2ae4:	d0130002 	andsle	r0, r3, r2
    2ae8:	0702850a 	streq	r8, [r2, -sl, lsl #10]
    2aec:	00001062 	andeq	r1, r0, r2, rrx
    2af0:	000fb214 	andeq	fp, pc, r4, lsl r2	; <UNPREDICTABLE>
    2af4:	02870a00 	addeq	r0, r7, #0, 20
    2af8:	0000a118 	andeq	sl, r0, r8, lsl r1
    2afc:	00230200 	eoreq	r0, r3, r0, lsl #4
    2b00:	000f3814 	andeq	r3, pc, r4, lsl r8	; <UNPREDICTABLE>
    2b04:	02880a00 	addeq	r0, r8, #0, 20
    2b08:	000dd412 	andeq	sp, sp, r2, lsl r4
    2b0c:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    2b10:	000bdf14 	andeq	sp, fp, r4, lsl pc
    2b14:	02890a00 	addeq	r0, r9, #0, 20
    2b18:	00106210 	andseq	r6, r0, r0, lsl r2
    2b1c:	08230200 	stmdaeq	r3!, {r9}
    2b20:	000e1214 	andeq	r1, lr, r4, lsl r2
    2b24:	028a0a00 	addeq	r0, sl, #0, 20
    2b28:	00093317 	andeq	r3, r9, r7, lsl r3
    2b2c:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    2b30:	000cd814 	andeq	sp, ip, r4, lsl r8
    2b34:	028b0a00 	addeq	r0, fp, #0, 20
    2b38:	0000950f 	andeq	r9, r0, pc, lsl #10
    2b3c:	48230200 	stmdami	r3!, {r9}
    2b40:	000fdd14 	andeq	sp, pc, r4, lsl sp	; <UNPREDICTABLE>
    2b44:	028c0a00 	addeq	r0, ip, #0, 20
    2b48:	00008e2c 	andeq	r8, r0, ip, lsr #28
    2b4c:	50230200 	eorpl	r0, r3, r0, lsl #4
    2b50:	000a8314 	andeq	r8, sl, r4, lsl r3
    2b54:	028d0a00 	addeq	r0, sp, #0, 20
    2b58:	000ecf1a 	andeq	ip, lr, sl, lsl pc
    2b5c:	58230200 	stmdapl	r3!, {r9}
    2b60:	000c7a14 	andeq	r7, ip, r4, lsl sl
    2b64:	028e0a00 	addeq	r0, lr, #0, 20
    2b68:	00088516 	andeq	r8, r8, r6, lsl r5
    2b6c:	68230200 	stmdavs	r3!, {r9}
    2b70:	000f4514 	andeq	r4, pc, r4, lsl r5	; <UNPREDICTABLE>
    2b74:	028f0a00 	addeq	r0, pc, #0, 20
    2b78:	00088516 	andeq	r8, r8, r6, lsl r5
    2b7c:	70230200 	eorvc	r0, r3, r0, lsl #4
    2b80:	000a7514 	andeq	r7, sl, r4, lsl r5
    2b84:	02900a00 	addseq	r0, r0, #0, 20
    2b88:	00088516 	andeq	r8, r8, r6, lsl r5
    2b8c:	78230200 	stmdavc	r3!, {r9}
    2b90:	000e3f14 	andeq	r3, lr, r4, lsl pc
    2b94:	02910a00 	addseq	r0, r1, #0, 20
    2b98:	00107210 	andseq	r7, r0, r0, lsl r2
    2b9c:	80230300 	eorhi	r0, r3, r0, lsl #6
    2ba0:	0a9d1401 	beq	fe747bac <BootRAM+0xd6b834d>
    2ba4:	920a0000 	andls	r0, sl, #0
    2ba8:	10821002 	addne	r1, r2, r2
    2bac:	23030000 	movwcs	r0, #12288	; 0x3000
    2bb0:	b7140188 	ldrlt	r0, [r4, -r8, lsl #3]
    2bb4:	0a00000e 	beq	2bf4 <_Min_Stack_Size+0x27f4>
    2bb8:	950f0293 	strls	r0, [pc, #-659]	; 292d <_Min_Stack_Size+0x252d>
    2bbc:	03000000 	movweq	r0, #0
    2bc0:	1401a023 	strne	sl, [r1], #-35	; 0xffffffdd
    2bc4:	00000b13 	andeq	r0, r0, r3, lsl fp
    2bc8:	1602940a 	strne	r9, [r2], -sl, lsl #8
    2bcc:	00000885 	andeq	r0, r0, r5, lsl #17
    2bd0:	01a42303 			; <UNDEFINED> instruction: 0x01a42303
    2bd4:	000c9b14 	andeq	r9, ip, r4, lsl fp
    2bd8:	02950a00 	addseq	r0, r5, #0, 20
    2bdc:	00088516 	andeq	r8, r8, r6, lsl r5
    2be0:	ac230300 	stcge	3, cr0, [r3], #-0
    2be4:	0c4e1401 	cfstrdeq	mvd1, [lr], {1}
    2be8:	960a0000 	strls	r0, [sl], -r0
    2bec:	08851602 	stmeq	r5, {r1, r9, sl, ip}
    2bf0:	23030000 	movwcs	r0, #12288	; 0x3000
    2bf4:	171401b4 			; <UNDEFINED> instruction: 0x171401b4
    2bf8:	0a00000d 	beq	2c34 <_Min_Stack_Size+0x2834>
    2bfc:	85160297 	ldrhi	r0, [r6, #-663]	; 0xfffffd69
    2c00:	03000008 	movweq	r0, #8
    2c04:	1401bc23 	strne	fp, [r1], #-3107	; 0xfffff3dd
    2c08:	00000d57 	andeq	r0, r0, r7, asr sp
    2c0c:	1602980a 	strne	r9, [r2], -sl, lsl #16
    2c10:	00000885 	andeq	r0, r0, r5, lsl #17
    2c14:	01c42303 	biceq	r2, r4, r3, lsl #6
    2c18:	000bf914 	andeq	pc, fp, r4, lsl r9	; <UNPREDICTABLE>
    2c1c:	02990a00 	addseq	r0, r9, #0, 20
    2c20:	00009508 	andeq	r9, r0, r8, lsl #10
    2c24:	cc230300 	stcgt	3, cr0, [r3], #-0
    2c28:	da0e0001 	ble	382c34 <_Min_Stack_Size+0x382834>
    2c2c:	7200000d 	andvc	r0, r0, #13
    2c30:	0f000010 	svceq	0x00000010
    2c34:	000000a1 	andeq	r0, r0, r1, lsr #1
    2c38:	da0e0019 	ble	382ca4 <_Min_Stack_Size+0x3828a4>
    2c3c:	8200000d 	andhi	r0, r0, #13
    2c40:	0f000010 	svceq	0x00000010
    2c44:	000000a1 	andeq	r0, r0, r1, lsr #1
    2c48:	da0e0007 	ble	382c6c <_Min_Stack_Size+0x38286c>
    2c4c:	9200000d 	andls	r0, r0, #13
    2c50:	0f000010 	svceq	0x00000010
    2c54:	000000a1 	andeq	r0, r0, r1, lsr #1
    2c58:	f0130017 			; <UNDEFINED> instruction: 0xf0130017
    2c5c:	07029e0a 	streq	r9, [r2, -sl, lsl #28]
    2c60:	000010bd 	strheq	r1, [r0], -sp
    2c64:	000bb114 	andeq	fp, fp, r4, lsl r1
    2c68:	02a10a00 	adceq	r0, r1, #0, 20
    2c6c:	0010bd1b 	andseq	fp, r0, fp, lsl sp
    2c70:	00230200 	eoreq	r0, r3, r0, lsl #4
    2c74:	000ac014 	andeq	ip, sl, r4, lsl r0
    2c78:	02a20a00 	adceq	r0, r2, #0, 20
    2c7c:	0010cd18 	andseq	ip, r0, r8, lsl sp
    2c80:	78230200 	stmdavc	r3!, {r9}
    2c84:	0abc0e00 	beq	fef0648c <BootRAM+0xde76c2d>
    2c88:	10cd0000 	sbcne	r0, sp, r0
    2c8c:	a10f0000 	mrsge	r0, CPSR
    2c90:	1d000000 	stcne	0, cr0, [r0, #-0]
    2c94:	00a10e00 	adceq	r0, r1, r0, lsl #28
    2c98:	10dd0000 	sbcsne	r0, sp, r0
    2c9c:	a10f0000 	mrsge	r0, CPSR
    2ca0:	1d000000 	stcne	0, cr0, [r0, #-0]
    2ca4:	0af02200 	beq	ffc0b4ac <BootRAM+0xeb7bc4d>
    2ca8:	02030283 	andeq	r0, r3, #805306376	; 0x30000008
    2cac:	23000011 	movwcs	r0, #17
    2cb0:	00000f83 	andeq	r0, r0, r3, lsl #31
    2cb4:	0b029a0a 	bleq	a94e4 <_Min_Stack_Size+0xa90e4>
    2cb8:	00000f1e 	andeq	r0, r0, lr, lsl pc
    2cbc:	000e2723 	andeq	r2, lr, r3, lsr #14
    2cc0:	02a30a00 	adceq	r0, r3, #0, 20
    2cc4:	0010920b 	andseq	r9, r0, fp, lsl #4
    2cc8:	da0e0000 	ble	382cd0 <_Min_Stack_Size+0x3828d0>
    2ccc:	1200000d 	andne	r0, r0, #13
    2cd0:	0f000011 	svceq	0x00000011
    2cd4:	000000a1 	andeq	r0, r0, r1, lsr #1
    2cd8:	f1240018 			; <UNDEFINED> instruction: 0xf1240018
    2cdc:	0100000f 	tsteq	r0, pc
    2ce0:	1112041b 	tstne	r2, fp, lsl r4
    2ce4:	01250000 			; <UNDEFINED> instruction: 0x01250000
    2ce8:	0000112a 	andeq	r1, r0, sl, lsr #2
    2cec:	000c541f 	andeq	r5, ip, pc, lsl r4
    2cf0:	041b0000 	ldreq	r0, [fp], #-0
    2cf4:	0000111e 	andeq	r1, r0, lr, lsl r1
    2cf8:	091d041b 	ldmdbeq	sp, {r0, r1, r3, r4, sl}
    2cfc:	01250000 			; <UNDEFINED> instruction: 0x01250000
    2d00:	00001142 	andeq	r1, r0, r2, asr #2
    2d04:	0000951f 	andeq	r9, r0, pc, lsl r5
    2d08:	041b0000 	ldreq	r0, [fp], #-0
    2d0c:	00001148 	andeq	r1, r0, r8, asr #2
    2d10:	1136041b 	teqne	r6, fp, lsl r4
    2d14:	770e0000 	strvc	r0, [lr, -r0]
    2d18:	5e00000e 	cdppl	0, 0, cr0, cr0, cr14, {0}
    2d1c:	0f000011 	svceq	0x00000011
    2d20:	000000a1 	andeq	r0, r0, r1, lsr #1
    2d24:	d5110002 	ldrle	r0, [r1, #-2]
    2d28:	0a00000d 	beq	2d64 <_Min_Stack_Size+0x2964>
    2d2c:	54170333 	ldrpl	r0, [r7], #-819	; 0xfffffccd
    2d30:	0100000c 	tsteq	r0, ip
    2d34:	0dce1101 	stfeqe	f1, [lr, #4]
    2d38:	340a0000 	strcc	r0, [sl], #-0
    2d3c:	0c5a1d03 	mrrceq	13, 0, r1, sl, cr3
    2d40:	01010000 	mrseq	r0, (UNDEF: 1)
    2d44:	0201020c 	andeq	r0, r1, #12, 4	; 0xc0000000
    2d48:	11b2093a 			; <UNDEFINED> instruction: 0x11b2093a
    2d4c:	730d0000 	movwvc	r0, #53248	; 0xd000
    2d50:	3b020074 	blcc	82f28 <_Min_Stack_Size+0x82b28>
    2d54:	00004d14 	andeq	r4, r0, r4, lsl sp
    2d58:	00230200 	eoreq	r0, r3, r0, lsl #4
    2d5c:	006e650d 	rsbeq	r6, lr, sp, lsl #10
    2d60:	4d173b02 	vldrmi	d3, [r7, #-8]
    2d64:	02000000 	andeq	r0, r0, #0
    2d68:	610d0123 	tstvs	sp, r3, lsr #2
    2d6c:	02007272 	andeq	r7, r0, #536870919	; 0x20000007
    2d70:	11c2143c 	bicne	r1, r2, ip, lsr r4
    2d74:	23020000 	movwcs	r0, #8192	; 0x2000
    2d78:	4d0e0002 	stcmi	0, cr0, [lr, #-8]
    2d7c:	c2000000 	andgt	r0, r0, #0
    2d80:	0f000011 	svceq	0x00000011
    2d84:	000000a1 	andeq	r0, r0, r1, lsr #1
    2d88:	b20400ff 	andlt	r0, r4, #255	; 0xff
    2d8c:	03000011 	movweq	r0, #17
    2d90:	00000f64 	andeq	r0, r0, r4, ror #30
    2d94:	7c023d02 	stcvc	13, cr3, [r2], {2}
    2d98:	26000011 			; <UNDEFINED> instruction: 0x26000011
    2d9c:	00000b79 	andeq	r0, r0, r9, ror fp
    2da0:	c7148a02 	ldrgt	r8, [r4, -r2, lsl #20]
    2da4:	05000011 	streq	r0, [r0, #-17]	; 0xffffffef
    2da8:	00001f03 	andeq	r1, r0, r3, lsl #30
    2dac:	0f532620 	svceq	0x00532620
    2db0:	8b020000 	blhi	82db8 <_Min_Stack_Size+0x829b8>
    2db4:	0011c714 	andseq	ip, r1, r4, lsl r7
    2db8:	21030500 	tstcs	r3, r0, lsl #10
    2dbc:	0e200001 	cdpeq	0, 2, cr0, cr0, cr1, {0}
    2dc0:	00000052 	andeq	r0, r0, r2, asr r0
    2dc4:	00001207 	andeq	r1, r0, r7, lsl #4
    2dc8:	0000a10f 	andeq	sl, r0, pc, lsl #2
    2dcc:	05001100 	streq	r1, [r0, #-256]	; 0xffffff00
    2dd0:	000011f7 	strdeq	r1, [r0], -r7
    2dd4:	000ecd26 	andeq	ip, lr, r6, lsr #26
    2dd8:	161d0100 	ldrne	r0, [sp], -r0, lsl #2
    2ddc:	00001207 	andeq	r1, r0, r7, lsl #4
    2de0:	0f060305 	svceq	0x00060305
    2de4:	520e0800 	andpl	r0, lr, #0, 16
    2de8:	2e000000 	cdpcs	0, 0, cr0, cr0, cr0, {0}
    2dec:	0f000012 	svceq	0x00000012
    2df0:	000000a1 	andeq	r0, r0, r1, lsr #1
    2df4:	1e050009 	cdpne	0, 0, cr0, cr5, cr9, {0}
    2df8:	26000012 			; <UNDEFINED> instruction: 0x26000012
    2dfc:	00000e65 	andeq	r0, r0, r5, ror #28
    2e00:	2e163001 	cdpcs	0, 1, cr3, cr6, cr1, {0}
    2e04:	05000012 	streq	r0, [r0, #-18]	; 0xffffffee
    2e08:	000f5b03 	andeq	r5, pc, r3, lsl #22
    2e0c:	00520e08 	subseq	r0, r2, r8, lsl #28
    2e10:	12550000 	subsne	r0, r5, #0
    2e14:	a10f0000 	mrsge	r0, CPSR
    2e18:	42000000 	andmi	r0, r0, #0
    2e1c:	12450500 	subne	r0, r5, #0, 10
    2e20:	ca260000 	bgt	982e28 <_Min_Stack_Size+0x982a28>
    2e24:	0100000b 	tsteq	r0, fp
    2e28:	12551640 	subsne	r1, r5, #64, 12	; 0x4000000
    2e2c:	03050000 	movweq	r0, #20480	; 0x5000
    2e30:	08000f18 	stmdaeq	r0, {r3, r4, r8, r9, sl, fp}
    2e34:	000e831a 	andeq	r8, lr, sl, lsl r3
    2e38:	9d010400 	cfstrsls	mvf0, [r1, #-0]
    2e3c:	0012a701 	andseq	sl, r2, r1, lsl #14
    2e40:	0fbf0800 	svceq	0x00bf0800
    2e44:	9d010000 	stcls	0, cr0, [r1, #-0]
    2e48:	00004101 	andeq	r4, r0, r1, lsl #2
    2e4c:	00230200 	eoreq	r0, r3, r0, lsl #4
    2e50:	000ef808 	andeq	pc, lr, r8, lsl #16
    2e54:	019d0100 	orrseq	r0, sp, r0, lsl #2
    2e58:	00000041 	andeq	r0, r0, r1, asr #32
    2e5c:	08012302 	stmdaeq	r1, {r1, r8, r9, sp}
    2e60:	00000dae 	andeq	r0, r0, lr, lsr #27
    2e64:	ac019d01 	stcge	13, cr9, [r1], {1}
    2e68:	02000012 	andeq	r0, r0, #18
    2e6c:	05000223 	streq	r0, [r0, #-547]	; 0xfffffddd
    2e70:	0000126c 	andeq	r1, r0, ip, ror #4
    2e74:	00005e0e 	andeq	r5, r0, lr, lsl #28
    2e78:	0012bc00 	andseq	fp, r2, r0, lsl #24
    2e7c:	00a10f00 	adceq	r0, r1, r0, lsl #30
    2e80:	00000000 	andeq	r0, r0, r0
    2e84:	000e8326 	andeq	r8, lr, r6, lsr #6
    2e88:	019d0100 	orrseq	r0, sp, r0, lsl #2
    2e8c:	000012a7 	andeq	r1, r0, r7, lsr #5
    2e90:	0f660305 	svceq	0x00660305
    2e94:	081a0800 	ldmdaeq	sl, {fp}
    2e98:	1600000f 	strne	r0, [r0], -pc
    2e9c:	09019e01 	stmdbeq	r1, {r0, r9, sl, fp, ip, pc}
    2ea0:	08000013 	stmdaeq	r0, {r0, r1, r4}
    2ea4:	00000fbf 			; <UNDEFINED> instruction: 0x00000fbf
    2ea8:	41019e01 	tstmi	r1, r1, lsl #28
    2eac:	02000000 	andeq	r0, r0, #0
    2eb0:	f8080023 			; <UNDEFINED> instruction: 0xf8080023
    2eb4:	0100000e 	tsteq	r0, lr
    2eb8:	0041019e 	umaaleq	r0, r1, lr, r1
    2ebc:	23020000 	movwcs	r0, #8192	; 0x2000
    2ec0:	0dae0801 	stceq	8, cr0, [lr, #4]!
    2ec4:	9e010000 	cdpls	0, 0, cr0, cr1, cr0, {0}
    2ec8:	00130e01 	andseq	r0, r3, r1, lsl #28
    2ecc:	02230200 	eoreq	r0, r3, #0, 4
    2ed0:	12ce0500 	sbcne	r0, lr, #0, 10
    2ed4:	5e0e0000 	cdppl	0, 0, cr0, cr14, cr0, {0}
    2ed8:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    2edc:	0f000013 	svceq	0x00000013
    2ee0:	000000a1 	andeq	r0, r0, r1, lsr #1
    2ee4:	08260009 	stmdaeq	r6!, {r0, r3}
    2ee8:	0100000f 	tsteq	r0, pc
    2eec:	1309019e 	movwne	r0, #37278	; 0x919e
    2ef0:	03050000 	movweq	r0, #20480	; 0x5000
    2ef4:	08000f6a 	stmdaeq	r0, {r1, r3, r5, r6, r8, r9, sl, fp}
    2ef8:	000f8a1a 	andeq	r8, pc, sl, lsl sl	; <UNPREDICTABLE>
    2efc:	9f011000 	svcls	0x00011000
    2f00:	00136b01 	andseq	r6, r3, r1, lsl #22
    2f04:	0fbf0800 	svceq	0x00bf0800
    2f08:	9f010000 	svcls	0x00010000
    2f0c:	00004101 	andeq	r4, r0, r1, lsl #2
    2f10:	00230200 	eoreq	r0, r3, r0, lsl #4
    2f14:	000ef808 	andeq	pc, lr, r8, lsl #16
    2f18:	019f0100 	orrseq	r0, pc, r0, lsl #2
    2f1c:	00000041 	andeq	r0, r0, r1, asr #32
    2f20:	08012302 	stmdaeq	r1, {r1, r8, r9, sp}
    2f24:	00000dae 	andeq	r0, r0, lr, lsr #27
    2f28:	70019f01 	andvc	r9, r1, r1, lsl #30
    2f2c:	02000013 	andeq	r0, r0, #19
    2f30:	05000223 	streq	r0, [r0, #-547]	; 0xfffffddd
    2f34:	00001330 	andeq	r1, r0, r0, lsr r3
    2f38:	00005e0e 	andeq	r5, r0, lr, lsl #28
    2f3c:	00138000 	andseq	r8, r3, r0
    2f40:	00a10f00 	adceq	r0, r1, r0, lsl #30
    2f44:	00060000 	andeq	r0, r6, r0
    2f48:	000f8a26 	andeq	r8, pc, r6, lsr #20
    2f4c:	019f0100 	orrseq	r0, pc, r0, lsl #2
    2f50:	0000136b 	andeq	r1, r0, fp, ror #6
    2f54:	0f800305 	svceq	0x00800305
    2f58:	f71a0800 			; <UNDEFINED> instruction: 0xf71a0800
    2f5c:	0400000d 	streq	r0, [r0], #-13
    2f60:	cd01a001 	stcgt	0, cr10, [r1, #-4]
    2f64:	08000013 	stmdaeq	r0, {r0, r1, r4}
    2f68:	00000fbf 			; <UNDEFINED> instruction: 0x00000fbf
    2f6c:	4101a001 	tstmi	r1, r1
    2f70:	02000000 	andeq	r0, r0, #0
    2f74:	f8080023 			; <UNDEFINED> instruction: 0xf8080023
    2f78:	0100000e 	tsteq	r0, lr
    2f7c:	004101a0 	subeq	r0, r1, r0, lsr #3
    2f80:	23020000 	movwcs	r0, #8192	; 0x2000
    2f84:	0dae0801 	stceq	8, cr0, [lr, #4]!
    2f88:	a0010000 	andge	r0, r1, r0
    2f8c:	0012ac01 	andseq	sl, r2, r1, lsl #24
    2f90:	02230200 	eoreq	r0, r3, #0, 4
    2f94:	13920500 	orrsne	r0, r2, #0, 10
    2f98:	f7260000 			; <UNDEFINED> instruction: 0xf7260000
    2f9c:	0100000d 	tsteq	r0, sp
    2fa0:	13cd01a0 	bicne	r0, sp, #160, 2	; 0x28
    2fa4:	03050000 	movweq	r0, #20480	; 0x5000
    2fa8:	08000f90 	stmdaeq	r0, {r4, r7, r8, r9, sl, fp}
    2fac:	000b571a 	andeq	r5, fp, sl, lsl r7
    2fb0:	d7010700 	strle	r0, [r1, -r0, lsl #14]
    2fb4:	00142e08 	andseq	r2, r4, r8, lsl #28
    2fb8:	0a880800 	beq	fe204fc0 <BootRAM+0xd175761>
    2fbc:	d8010000 	stmdale	r1, {}	; <UNPREDICTABLE>
    2fc0:	0000760c 	andeq	r7, r0, ip, lsl #12
    2fc4:	00230200 	eoreq	r0, r3, r0, lsl #4
    2fc8:	00100b08 	andseq	r0, r0, r8, lsl #22
    2fcc:	0bd90100 	bleq	ff6433d4 <BootRAM+0xe5b3b75>
    2fd0:	00000041 	andeq	r0, r0, r1, asr #32
    2fd4:	08042302 	stmdaeq	r4, {r1, r8, r9, sp}
    2fd8:	00000a68 	andeq	r0, r0, r8, ror #20
    2fdc:	410bda01 	tstmi	fp, r1, lsl #20
    2fe0:	02000000 	andeq	r0, r0, #0
    2fe4:	c4080523 	strgt	r0, [r8], #-1315	; 0xfffffadd
    2fe8:	0100000e 	tsteq	r0, lr
    2fec:	00410bdb 	ldrdeq	r0, [r1], #-187	; 0xffffff45
    2ff0:	23020000 	movwcs	r0, #8192	; 0x2000
    2ff4:	e4040006 	str	r0, [r4], #-6
    2ff8:	27000013 	smladcs	r0, r3, r0, r0
    2ffc:	00000b5b 	andeq	r0, r0, fp, asr fp
    3000:	2e20de01 	cdpcs	14, 2, cr13, cr0, cr1, {0}
    3004:	01000014 	tsteq	r0, r4, lsl r0
    3008:	00020305 	andeq	r0, r2, r5, lsl #6
    300c:	01282000 			; <UNDEFINED> instruction: 0x01282000
    3010:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    3014:	06013001 	streq	r3, [r1], -r1
    3018:	08000d58 	stmdaeq	r0, {r3, r4, r6, r8, sl, fp}
    301c:	08000dec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, sl, fp}
    3020:	00000ebb 			; <UNDEFINED> instruction: 0x00000ebb
    3024:	0015c801 	andseq	ip, r5, r1, lsl #16
    3028:	75622900 	strbvc	r2, [r2, #-2304]!	; 0xfffff700
    302c:	31010066 	tstcc	r1, r6, rrx
    3030:	15c80801 	strbne	r0, [r8, #2049]	; 0x801
    3034:	91030000 	mrsls	r0, (UNDEF: 3)
    3038:	6c2a7fb0 	stcvs	15, cr7, [sl], #-704	; 0xfffffd40
    303c:	01006e65 	tsteq	r0, r5, ror #28
    3040:	95070132 	strls	r0, [r7, #-306]	; 0xfffffece
    3044:	fc000000 	stc2	0, cr0, [r0], {-0}
    3048:	f400000e 	vst4.8	{d0-d3}, [r0], lr
    304c:	2b00000e 	blcs	308c <_Min_Stack_Size+0x2c8c>
    3050:	00001b88 	andeq	r1, r0, r8, lsl #23
    3054:	08000d58 	stmdaeq	r0, {r3, r4, r6, r8, sl, fp}
    3058:	00017803 	andeq	r7, r1, r3, lsl #16
    305c:	01320100 	teqeq	r2, r0, lsl #2
    3060:	0014ab0d 	andseq	sl, r4, sp, lsl #22
    3064:	1b9b2c00 	blne	fe6ce06c <BootRAM+0xd63e80d>
    3068:	0f470000 	svceq	0x00470000
    306c:	0f450000 	svceq	0x00450000
    3070:	2d000000 	stccs	0, cr0, [r0, #-0]
    3074:	00001bd3 	ldrdeq	r1, [r0], -r3
    3078:	08000d84 	stmdaeq	r0, {r2, r7, r8, sl, fp}
    307c:	000d8401 	andeq	r8, sp, r1, lsl #8
    3080:	000d8e08 	andeq	r8, sp, r8, lsl #28
    3084:	01370108 	teqeq	r7, r8, lsl #2
    3088:	00150807 	andseq	r0, r5, r7, lsl #16
    308c:	1bf92c00 	blne	ffe4e094 <BootRAM+0xedbe835>
    3090:	0f610000 	svceq	0x00610000
    3094:	0f5f0000 	svceq	0x005f0000
    3098:	ed2c0000 	stc	0, cr0, [ip, #-0]
    309c:	7600001b 			; <UNDEFINED> instruction: 0x7600001b
    30a0:	7400000f 	strvc	r0, [r0], #-15
    30a4:	2c00000f 	stccs	0, cr0, [r0], {15}
    30a8:	00001be1 	andeq	r1, r0, r1, ror #23
    30ac:	00000f8b 	andeq	r0, r0, fp, lsl #31
    30b0:	00000f89 	andeq	r0, r0, r9, lsl #31
    30b4:	000d8e2e 	andeq	r8, sp, lr, lsr #28
    30b8:	001ce408 	andseq	lr, ip, r8, lsl #8
    30bc:	50012f00 	andpl	r2, r1, r0, lsl #30
    30c0:	012f3201 			; <UNDEFINED> instruction: 0x012f3201
    30c4:	007d0251 	rsbseq	r0, sp, r1, asr r2
    30c8:	0252012f 	subseq	r0, r2, #-1073741813	; 0xc000000b
    30cc:	00000074 	andeq	r0, r0, r4, ror r0
    30d0:	001b882d 	andseq	r8, fp, sp, lsr #16
    30d4:	000d8e00 	andeq	r8, sp, r0, lsl #28
    30d8:	0d8e0208 	sfmeq	f0, 4, [lr, #32]
    30dc:	0d940800 	ldceq	8, cr0, [r4]
    30e0:	3b010800 	blcc	450e8 <_Min_Stack_Size+0x44ce8>
    30e4:	15300701 	ldrne	r0, [r0, #-1793]!	; 0xfffff8ff
    30e8:	9b2c0000 	blls	b030f0 <_Min_Stack_Size+0xb02cf0>
    30ec:	a200001b 	andge	r0, r0, #27
    30f0:	a000000f 	andge	r0, r0, pc
    30f4:	0000000f 	andeq	r0, r0, pc
    30f8:	001ba82d 	andseq	sl, fp, sp, lsr #16
    30fc:	000dac00 	andeq	sl, sp, r0, lsl #24
    3100:	0dac0108 	stfeqs	f0, [ip, #32]!
    3104:	0db40800 	ldceq	8, cr0, [r4]
    3108:	3d010800 	stccc	8, cr0, [r1, #-0]
    310c:	157a0d01 	ldrbne	r0, [sl, #-3329]!	; 0xfffff2ff
    3110:	c62c0000 	strtgt	r0, [ip], -r0
    3114:	bc00001b 	stclt	0, cr0, [r0], {27}
    3118:	ba00000f 	blt	315c <_Min_Stack_Size+0x2d5c>
    311c:	2c00000f 	stccs	0, cr0, [r0], {15}
    3120:	00001bba 			; <UNDEFINED> instruction: 0x00001bba
    3124:	00000fd1 	ldrdeq	r0, [r0], -r1
    3128:	00000fcf 	andeq	r0, r0, pc, asr #31
    312c:	000db42e 	andeq	fp, sp, lr, lsr #8
    3130:	001cf208 	andseq	pc, ip, r8, lsl #4
    3134:	50012f00 	andpl	r2, r1, r0, lsl #30
    3138:	012f3301 			; <UNDEFINED> instruction: 0x012f3301
    313c:	007d0251 	rsbseq	r0, sp, r1, asr r2
    3140:	64300000 	ldrtvs	r0, [r0], #-0
    3144:	c2000018 	andgt	r0, r0, #24
    3148:	c808000d 	stmdagt	r8, {r0, r2, r3}
    314c:	0108000d 	tsteq	r8, sp
    3150:	9d030141 	stflss	f0, [r3, #-260]	; 0xfffffefc
    3154:	2c000015 	stccs	0, cr0, [r0], {21}
    3158:	00001872 	andeq	r1, r0, r2, ror r8
    315c:	00000fe9 	andeq	r0, r0, r9, ror #31
    3160:	00000fe5 	andeq	r0, r0, r5, ror #31
    3164:	0d843100 	stfeqs	f3, [r4]
    3168:	194e0800 	stmdbne	lr, {fp}^
    316c:	15b70000 	ldrne	r0, [r7, #0]!
    3170:	012f0000 			; <UNDEFINED> instruction: 0x012f0000
    3174:	007d0250 	rsbseq	r0, sp, r0, asr r2
    3178:	0251012f 	subseq	r0, r1, #-1073741813	; 0xc000000b
    317c:	2e000074 	mcrcs	0, 0, r0, cr0, cr4, {3}
    3180:	08000dbc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, sl, fp}
    3184:	00001a0b 	andeq	r1, r0, fp, lsl #20
    3188:	0250012f 	subseq	r0, r0, #-1073741813	; 0xc000000b
    318c:	0000007d 	andeq	r0, r0, sp, ror r0
    3190:	000dda0e 	andeq	sp, sp, lr, lsl #20
    3194:	0015d800 	andseq	sp, r5, r0, lsl #16
    3198:	00a10f00 	adceq	r0, r1, r0, lsl #30
    319c:	003f0000 	eorseq	r0, pc, r0
    31a0:	06cd0128 	strbeq	r0, [sp], r8, lsr #2
    31a4:	26010000 	strcs	r0, [r1], -r0
    31a8:	0c9a0601 	ldceq	6, cr0, [sl], {1}
    31ac:	0d580800 	ldcleq	8, cr0, [r8, #-0]
    31b0:	100b0800 	andne	r0, fp, r0, lsl #16
    31b4:	d1010000 	mrsle	r0, (UNDEF: 1)
    31b8:	32000016 	andcc	r0, r0, #22
    31bc:	00000150 	andeq	r0, r0, r0, asr r1
    31c0:	00001612 	andeq	r1, r0, r2, lsl r6
    31c4:	00012c33 	andeq	r2, r1, r3, lsr ip
    31c8:	01270100 			; <UNDEFINED> instruction: 0x01270100
    31cc:	00007603 	andeq	r7, r0, r3, lsl #12
    31d0:	00103f00 	andseq	r3, r0, r0, lsl #30
    31d4:	00103700 	andseq	r3, r0, r0, lsl #14
    31d8:	c2340000 	eorsgt	r0, r4, #0
    31dc:	e208000c 	and	r0, r8, #12
    31e0:	3508000c 	strcc	r0, [r8, #-12]
    31e4:	33000016 	movwcc	r0, #22
    31e8:	0000012c 	andeq	r0, r0, ip, lsr #2
    31ec:	03012701 	movweq	r2, #5889	; 0x1701
    31f0:	00000076 	andeq	r0, r0, r6, ror r0
    31f4:	00001086 	andeq	r1, r0, r6, lsl #1
    31f8:	0000107c 	andeq	r1, r0, ip, ror r0
    31fc:	1c0c2d00 	stcne	13, cr2, [ip], {-0}
    3200:	0d120000 	ldceq	0, cr0, [r2, #-0]
    3204:	12010800 	andne	r0, r1, #0, 16
    3208:	1808000d 	stmdane	r8, {r0, r2, r3}
    320c:	0108000d 	tsteq	r8, sp
    3210:	5d030127 	stfpls	f0, [r3, #-156]	; 0xffffff64
    3214:	2c000016 	stccs	0, cr0, [r0], {22}
    3218:	00001c1b 	andeq	r1, r0, fp, lsl ip
    321c:	000010d3 	ldrdeq	r1, [r0], -r3
    3220:	000010d1 	ldrdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    3224:	0d203100 	stfeqs	f3, [r0, #-0]
    3228:	1d000800 	stcne	8, cr0, [r0, #-0]
    322c:	16840000 	strne	r0, [r4], r0
    3230:	012f0000 			; <UNDEFINED> instruction: 0x012f0000
    3234:	82090250 	andhi	r0, r9, #80, 4
    3238:	0151012f 	cmpeq	r1, pc, lsr #2
    323c:	52012f33 	andpl	r2, r1, #51, 30	; 0xcc
    3240:	012f3801 			; <UNDEFINED> instruction: 0x012f3801
    3244:	8d030553 	cfstr32hi	mvfx0, [r3, #-332]	; 0xfffffeb4
    3248:	00080009 	andeq	r0, r8, r9
    324c:	000d2c31 	andeq	r2, sp, r1, lsr ip
    3250:	001d0008 	andseq	r0, sp, r8
    3254:	0016ac00 	andseq	sl, r6, r0, lsl #24
    3258:	50012f00 	andpl	r2, r1, r0, lsl #30
    325c:	2f810902 	svccs	0x00810902
    3260:	32015101 	andcc	r5, r1, #1073741824	; 0x40000000
    3264:	0252012f 	subseq	r0, r2, #-1073741813	; 0xc000000b
    3268:	012f4008 			; <UNDEFINED> instruction: 0x012f4008
    326c:	8f030553 	svchi	0x00030553
    3270:	00080009 	andeq	r0, r8, r9
    3274:	000d3c35 	andeq	r3, sp, r5, lsr ip
    3278:	1d000108 	stfnes	f0, [r0, #-32]	; 0xffffffe0
    327c:	012f0000 			; <UNDEFINED> instruction: 0x012f0000
    3280:	2f310150 	svccs	0x00310150
    3284:	32015101 	andcc	r5, r1, #1073741824	; 0x40000000
    3288:	0252012f 	subseq	r0, r2, #-1073741813	; 0xc000000b
    328c:	012f4008 			; <UNDEFINED> instruction: 0x012f4008
    3290:	91030553 	tstls	r3, r3, asr r5
    3294:	00080009 	andeq	r0, r8, r9
    3298:	e7013600 	str	r3, [r1, -r0, lsl #12]
    329c:	0100000e 	tsteq	r0, lr
    32a0:	01060124 	tsteq	r6, r4, lsr #2
    32a4:	000016ee 	andeq	r1, r0, lr, ror #13
    32a8:	0008e537 	andeq	lr, r8, r7, lsr r5
    32ac:	01240100 			; <UNDEFINED> instruction: 0x01240100
    32b0:	0000411f 	andeq	r4, r0, pc, lsl r1
    32b4:	01380000 	teqeq	r8, r0
    32b8:	00000a6f 	andeq	r0, r0, pc, ror #20
    32bc:	06011b01 	streq	r1, [r1], -r1, lsl #22
    32c0:	000c6801 	andeq	r6, ip, r1, lsl #16
    32c4:	000c9a08 	andeq	r9, ip, r8, lsl #20
    32c8:	0010e808 	andseq	lr, r0, r8, lsl #16
    32cc:	17270100 	strne	r0, [r7, -r0, lsl #2]!
    32d0:	78390000 	ldmdavc	r9!, {}	; <UNPREDICTABLE>
    32d4:	011b0100 	tsteq	fp, r0, lsl #2
    32d8:	00004114 	andeq	r4, r0, r4, lsl r1
    32dc:	39500100 	ldmdbcc	r0, {r8}^
    32e0:	00667562 	rsbeq	r7, r6, r2, ror #10
    32e4:	1d011b01 	vstrne	d1, [r1, #-4]
    32e8:	00000dd4 	ldrdeq	r0, [r0], -r4
    32ec:	36005101 	strcc	r5, [r0], -r1, lsl #2
    32f0:	000ac901 	andeq	ip, sl, r1, lsl #18
    32f4:	01190100 	tsteq	r9, r0, lsl #2
    32f8:	17440106 	strbne	r0, [r4, -r6, lsl #2]
    32fc:	e5370000 	ldr	r0, [r7, #-0]!
    3300:	01000008 	tsteq	r0, r8
    3304:	41200119 			; <UNDEFINED> instruction: 0x41200119
    3308:	00000000 	andeq	r0, r0, r0
    330c:	0adb013a 	beq	ff6c37fc <BootRAM+0xe633f9d>
    3310:	17010000 	strne	r0, [r1, -r0]
    3314:	01010601 	tsteq	r1, r1, lsl #12
    3318:	00001762 	andeq	r1, r0, r2, ror #14
    331c:	0008e537 	andeq	lr, r8, r7, lsr r5
    3320:	01170100 	tsteq	r7, r0, lsl #2
    3324:	0000411b 	andeq	r4, r0, fp, lsl r1
    3328:	013b0000 	teqeq	fp, r0
    332c:	000008f5 	strdeq	r0, [r0], -r5
    3330:	0106f001 	tsteq	r6, r1	; <UNPREDICTABLE>
    3334:	00000dda 	ldrdeq	r0, [r0], -sl
    3338:	08000ba8 	stmdaeq	r0, {r3, r5, r7, r8, r9, fp}
    333c:	08000c68 	stmdaeq	r0, {r3, r5, r6, sl, fp}
    3340:	00001108 	andeq	r1, r0, r8, lsl #2
    3344:	00180301 	andseq	r0, r8, r1, lsl #6
    3348:	65723c00 	ldrbvs	r3, [r2, #-3072]!	; 0xfffff400
    334c:	f0010071 			; <UNDEFINED> instruction: 0xf0010071
    3350:	00180327 	andseq	r0, r8, r7, lsr #6
    3354:	00113400 	andseq	r3, r1, r0, lsl #8
    3358:	00112800 	andseq	r2, r1, r0, lsl #16
    335c:	0df03d00 	ldcleq	13, cr3, [r0]
    3360:	f0010000 			; <UNDEFINED> instruction: 0xf0010000
    3364:	00005e35 	andeq	r5, r0, r5, lsr lr
    3368:	00119100 	andseq	r9, r1, r0, lsl #2
    336c:	00118700 	andseq	r8, r1, r0, lsl #14
    3370:	07df3d00 	ldrbeq	r3, [pc, r0, lsl #26]
    3374:	f0010000 			; <UNDEFINED> instruction: 0xf0010000
    3378:	00005e46 	andeq	r5, r0, r6, asr #28
    337c:	0011e000 	andseq	lr, r1, r0
    3380:	0011d600 	andseq	sp, r1, r0, lsl #12
    3384:	1ba83e00 	blne	fea12b8c <BootRAM+0xd98332d>
    3388:	0bc00000 	bleq	ff003390 <BootRAM+0xdf73b31>
    338c:	c0010800 	andgt	r0, r1, r0, lsl #16
    3390:	ca08000b 	bgt	2033c4 <_Min_Stack_Size+0x202fc4>
    3394:	0108000b 	tsteq	r8, fp
    3398:	ba2c07f4 	blt	b05370 <_Min_Stack_Size+0xb04f70>
    339c:	2700001b 	smladcs	r0, fp, r0, r0
    33a0:	25000012 	strcs	r0, [r0, #-18]	; 0xffffffee
    33a4:	2c000012 	stccs	0, cr0, [r0], {18}
    33a8:	00001bc6 	andeq	r1, r0, r6, asr #23
    33ac:	0000123d 	andeq	r1, r0, sp, lsr r2
    33b0:	0000123b 	andeq	r1, r0, fp, lsr r2
    33b4:	000bca2e 	andeq	ip, fp, lr, lsr #20
    33b8:	001cf208 	andseq	pc, ip, r8, lsl #4
    33bc:	50012f00 	andpl	r2, r1, r0, lsl #30
    33c0:	012f3101 			; <UNDEFINED> instruction: 0x012f3101
    33c4:	00740251 	rsbseq	r0, r4, r1, asr r2
    33c8:	1b000000 	blne	33d0 <_Min_Stack_Size+0x2fd0>
    33cc:	0000fd04 	andeq	pc, r0, r4, lsl #26
    33d0:	ad013f00 	stcge	15, cr3, [r1, #-0]
    33d4:	01000007 	tsteq	r0, r7
    33d8:	da0106e5 	ble	44f74 <_Min_Stack_Size+0x44b74>
    33dc:	8400000d 	strhi	r0, [r0], #-13
    33e0:	a808000b 	stmdage	r8, {r0, r1, r3}
    33e4:	0208000b 	andeq	r0, r8, #11
    33e8:	5801007d 	stmdapl	r1, {r0, r2, r3, r4, r5, r6}
    33ec:	3c000018 	stccc	0, cr0, [r0], {24}
    33f0:	00716572 	rsbseq	r6, r1, r2, ror r5
    33f4:	0326e501 			; <UNDEFINED> instruction: 0x0326e501
    33f8:	5d000018 	stcpl	0, cr0, [r0, #-96]	; 0xffffffa0
    33fc:	55000012 	strpl	r0, [r0, #-18]	; 0xffffffee
    3400:	40000012 	andmi	r0, r0, r2, lsl r0
    3404:	00000dc2 	andeq	r0, r0, r2, asr #27
    3408:	5832e501 	ldmdapl	r2!, {r0, r8, sl, sp, lr, pc}
    340c:	01000018 	tsteq	r0, r8, lsl r0
    3410:	0e604051 	mcreq	0, 3, r4, cr0, cr1, {2}
    3414:	e5010000 	str	r0, [r1, #-0]
    3418:	00185e42 	andseq	r5, r8, r2, asr #28
    341c:	00520100 	subseq	r0, r2, r0, lsl #2
    3420:	0891041b 	ldmeq	r1, {r0, r1, r3, r4, sl}
    3424:	041b0000 	ldreq	r0, [fp], #-0
    3428:	0000005e 	andeq	r0, r0, lr, asr r0
    342c:	00019141 	andeq	r9, r1, r1, asr #2
    3430:	0dc80100 	stfeqe	f0, [r8]
    3434:	187f0101 	ldmdane	pc!, {r0, r8}^	; <UNPREDICTABLE>
    3438:	0b420000 	bleq	1083440 <_Min_Stack_Size+0x1083040>
    343c:	01000002 	tsteq	r0, r2
    3440:	00761cc8 	rsbseq	r1, r6, r8, asr #25
    3444:	43000000 	movwmi	r0, #0
    3448:	0005bd01 	andeq	fp, r5, r1, lsl #26
    344c:	06a20100 	strteq	r0, [r2], r0, lsl #2
    3450:	000b0801 	andeq	r0, fp, r1, lsl #16
    3454:	000b8408 	andeq	r8, fp, r8, lsl #8
    3458:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    345c:	0018ca01 	andseq	ip, r8, r1, lsl #20
    3460:	05cf3d00 	strbeq	r3, [pc, #3328]	; 4168 <_Min_Stack_Size+0x3d68>
    3464:	a2010000 	andge	r0, r1, #0
    3468:	00005e27 	andeq	r5, r0, r7, lsr #28
    346c:	00129f00 	andseq	r9, r2, r0, lsl #30
    3470:	00129700 	andseq	r9, r2, r0, lsl #14
    3474:	0dc24000 	stcleq	0, cr4, [r2]
    3478:	a2010000 	andge	r0, r1, #0
    347c:	0018ca3b 	andseq	ip, r8, fp, lsr sl
    3480:	40510100 	subsmi	r0, r1, r0, lsl #2
    3484:	00000e60 	andeq	r0, r0, r0, ror #28
    3488:	5e4ba201 	cdppl	2, 4, cr10, cr11, cr1, {0}
    348c:	01000018 	tsteq	r0, r8, lsl r0
    3490:	041b0052 	ldreq	r0, [fp], #-82	; 0xffffffae
    3494:	000018d0 	ldrdeq	r1, [r0], -r0
    3498:	18d6041b 	ldmne	r6, {r0, r1, r3, r4, sl}^
    349c:	45440000 	strbmi	r0, [r4, #-0]
    34a0:	000d6d01 	andeq	r6, sp, r1, lsl #26
    34a4:	06a60200 	strteq	r0, [r6], r0, lsl #4
    34a8:	000ab001 	andeq	fp, sl, r1
    34ac:	000b0808 	andeq	r0, fp, r8, lsl #16
    34b0:	0012d908 	andseq	sp, r2, r8, lsl #18
    34b4:	194e0100 	stmdbne	lr, {r8}^
    34b8:	733c0000 	teqvc	ip, #0
    34bc:	02007274 	andeq	r7, r0, #116, 4	; 0x40000007
    34c0:	0dd417a6 	ldcleq	7, cr1, [r4, #664]	; 0x298
    34c4:	12fd0000 	rscsne	r0, sp, #0
    34c8:	12f90000 	rscsne	r0, r9, #0
    34cc:	6c3c0000 	ldcvs	0, cr0, [ip], #-0
    34d0:	02006e65 	andeq	r6, r0, #1616	; 0x650
    34d4:	004124a6 	subeq	r2, r1, r6, lsr #9
    34d8:	13210000 			; <UNDEFINED> instruction: 0x13210000
    34dc:	131b0000 	tstne	fp, #0
    34e0:	88460000 	stmdahi	r6, {}^	; <UNPREDICTABLE>
    34e4:	dc00001b 	stcle	0, cr0, [r0], {27}
    34e8:	0108000a 	tsteq	r8, sl
    34ec:	00000138 	andeq	r0, r0, r8, lsr r1
    34f0:	3d0ba802 	stccc	8, cr10, [fp, #-8]
    34f4:	2c000019 	stccs	0, cr0, [r0], {25}
    34f8:	00001b9b 	muleq	r0, fp, fp
    34fc:	0000134f 	andeq	r1, r0, pc, asr #6
    3500:	0000134d 	andeq	r1, r0, sp, asr #6
    3504:	0aee2e00 	beq	ffb8ed0c <BootRAM+0xeaff4ad>
    3508:	1b1e0800 	blne	785510 <_Min_Stack_Size+0x785110>
    350c:	012f0000 			; <UNDEFINED> instruction: 0x012f0000
    3510:	00770250 	rsbseq	r0, r7, r0, asr r2
    3514:	01450000 	mrseq	r0, (UNDEF: 69)
    3518:	00000d4c 	andeq	r0, r0, ip, asr #26
    351c:	01069f02 	tsteq	r6, r2, lsl #30
    3520:	08000a84 	stmdaeq	r0, {r2, r7, r9, fp}
    3524:	08000ab0 	stmdaeq	r0, {r4, r5, r7, r9, fp}
    3528:	00001367 	andeq	r1, r0, r7, ror #6
    352c:	0019c501 	andseq	ip, r9, r1, lsl #10
    3530:	0dc23d00 	stcleq	13, cr3, [r2]
    3534:	9f020000 	svcls	0x00020000
    3538:	0019c51a 	andseq	ip, r9, sl, lsl r5
    353c:	00138d00 	andseq	r8, r3, r0, lsl #26
    3540:	00138700 	andseq	r8, r3, r0, lsl #14
    3544:	656c3c00 	strbvs	r3, [ip, #-3072]!	; 0xfffff400
    3548:	9f02006e 	svcls	0x0002006e
    354c:	00004128 	andeq	r4, r0, r8, lsr #2
    3550:	0013ba00 	andseq	fp, r3, r0, lsl #20
    3554:	0013b800 	andseq	fp, r3, r0, lsl #16
    3558:	1b884600 	blne	fe214d60 <BootRAM+0xd185501>
    355c:	0a920000 	beq	fe483564 <BootRAM+0xd3f3d05>
    3560:	20010800 	andcs	r0, r1, r0, lsl #16
    3564:	02000001 	andeq	r0, r0, #1
    3568:	19b40ba1 	ldmibne	r4!, {r0, r5, r7, r8, r9, fp}
    356c:	9b2c0000 	blls	b03574 <_Min_Stack_Size+0xb03174>
    3570:	cf00001b 	svcgt	0x0000001b
    3574:	cd000013 	stcgt	0, cr0, [r0, #-76]	; 0xffffffb4
    3578:	00000013 	andeq	r0, r0, r3, lsl r0
    357c:	000aa42e 	andeq	sl, sl, lr, lsr #8
    3580:	001b1e08 	andseq	r1, fp, r8, lsl #28
    3584:	50012f00 	andpl	r2, r1, r0, lsl #30
    3588:	00007502 	andeq	r7, r0, r2, lsl #10
    358c:	41041b00 	tstmi	r4, r0, lsl #22
    3590:	45000000 	strmi	r0, [r0, #-0]
    3594:	000f7801 	andeq	r7, pc, r1, lsl #16
    3598:	069b0200 	ldreq	r0, [fp], r0, lsl #4
    359c:	000a5c01 	andeq	r5, sl, r1, lsl #24
    35a0:	000a8408 	andeq	r8, sl, r8, lsl #8
    35a4:	0013e708 	andseq	lr, r3, r8, lsl #14
    35a8:	1a0b0100 	bne	2c39b0 <_Min_Stack_Size+0x2c35b0>
    35ac:	733c0000 	teqvc	ip, #0
    35b0:	02007274 	andeq	r7, r0, #116, 4	; 0x40000007
    35b4:	0dd4179b 	ldcleq	7, cr1, [r4, #620]	; 0x26c
    35b8:	140f0000 	strne	r0, [pc], #-0	; 35c0 <_Min_Stack_Size+0x31c0>
    35bc:	14070000 	strne	r0, [r7], #-0
    35c0:	722e0000 	eorvc	r0, lr, #0
    35c4:	f008000a 			; <UNDEFINED> instruction: 0xf008000a
    35c8:	2f00001a 	svccs	0x0000001a
    35cc:	70025001 	andvc	r5, r2, r1
    35d0:	45000000 	strmi	r0, [r0, #-0]
    35d4:	000a9101 	andeq	r9, sl, r1, lsl #2
    35d8:	06970200 	ldreq	r0, [r7], r0, lsl #4
    35dc:	000a3001 	andeq	r3, sl, r1
    35e0:	000a5c08 	andeq	r5, sl, r8, lsl #24
    35e4:	00144708 	andseq	r4, r4, r8, lsl #14
    35e8:	1a650100 	bne	19439f0 <_Min_Stack_Size+0x19435f0>
    35ec:	c23d0000 	eorsgt	r0, sp, #0
    35f0:	0200000d 	andeq	r0, r0, #13
    35f4:	19c51b97 	stmibne	r5, {r0, r1, r2, r4, r7, r8, r9, fp, ip}^
    35f8:	146d0000 	strbtne	r0, [sp], #-0
    35fc:	14670000 	strbtne	r0, [r7], #-0
    3600:	6c3c0000 	ldcvs	0, cr0, [ip], #-0
    3604:	02006e65 	andeq	r6, r0, #1616	; 0x650
    3608:	00412997 	umaaleq	r2, r1, r7, r9
    360c:	149a0000 	ldrne	r0, [sl], #0
    3610:	14980000 	ldrne	r0, [r8], #0
    3614:	4a2e0000 	bmi	b8361c <_Min_Stack_Size+0xb8321c>
    3618:	f008000a 			; <UNDEFINED> instruction: 0xf008000a
    361c:	2f00001a 	svccs	0x0000001a
    3620:	70025001 	andvc	r5, r2, r1
    3624:	51012f00 	tstpl	r1, r0, lsl #30
    3628:	00007102 	andeq	r7, r0, r2, lsl #2
    362c:	ed014500 	cfstr32	mvfx4, [r1, #-0]
    3630:	0200000c 	andeq	r0, r0, #12
    3634:	e401068d 	str	r0, [r1], #-1677	; 0xfffff973
    3638:	30080009 	andcc	r0, r8, r9
    363c:	ad08000a 	stcge	0, cr0, [r8, #-40]	; 0xffffffd8
    3640:	01000014 	tsteq	r0, r4, lsl r0
    3644:	00001af0 	strdeq	r1, [r0], -r0
    3648:	00010832 	andeq	r0, r1, r2, lsr r8
    364c:	001ab500 	andseq	fp, sl, r0, lsl #10
    3650:	012c4700 			; <UNDEFINED> instruction: 0x012c4700
    3654:	8f020000 	svchi	0x00020000
    3658:	0000410d 	andeq	r4, r0, sp, lsl #2
    365c:	0014e700 	andseq	lr, r4, r0, lsl #14
    3660:	0014e500 	andseq	lr, r4, r0, lsl #10
    3664:	09fc3500 	ldmibeq	ip!, {r8, sl, ip, sp}^
    3668:	f0010800 			; <UNDEFINED> instruction: 0xf0010800
    366c:	2f00001a 	svccs	0x0000001a
    3670:	70025001 	andvc	r5, r2, r1
    3674:	51012f00 	tstpl	r1, r0, lsl #30
    3678:	00007102 	andeq	r7, r0, r2, lsl #2
    367c:	1b884800 	blne	fe215684 <BootRAM+0xd185e25>
    3680:	0a020000 	beq	83688 <_Min_Stack_Size+0x83288>
    3684:	02010800 	andeq	r0, r1, #0, 16
    3688:	0c08000a 	stceq	0, cr0, [r8], {10}
    368c:	0208000a 	andeq	r0, r8, #10
    3690:	1adc0892 	bne	ff7058e0 <BootRAM+0xe676081>
    3694:	9b2c0000 	blls	b0369c <_Min_Stack_Size+0xb0329c>
    3698:	fc00001b 	stc2	0, cr0, [r0], {27}
    369c:	fa000014 	blx	36f4 <_Min_Stack_Size+0x32f4>
    36a0:	00000014 	andeq	r0, r0, r4, lsl r0
    36a4:	000a182e 	andeq	r1, sl, lr, lsr #16
    36a8:	001b1e08 	andseq	r1, fp, r8, lsl #28
    36ac:	50012f00 	andpl	r2, r1, r0, lsl #30
    36b0:	01210305 			; <UNDEFINED> instruction: 0x01210305
    36b4:	00002000 	andeq	r2, r0, r0
    36b8:	0c310149 	ldfeqs	f0, [r1], #-292	; 0xfffffedc
    36bc:	4c020000 	stcmi	0, cr0, [r2], {-0}
    36c0:	18010106 	stmdane	r1, {r1, r2, r8}
    36c4:	4a00001b 	bmi	3738 <_Min_Stack_Size+0x3338>
    36c8:	00667562 	rsbeq	r7, r6, r2, ror #10
    36cc:	18224c02 	stmdane	r2!, {r1, sl, fp, lr}
    36d0:	4a00001b 	bmi	3744 <_Min_Stack_Size+0x3344>
    36d4:	00746164 	rsbseq	r6, r4, r4, ror #2
    36d8:	412f4c02 			; <UNDEFINED> instruction: 0x412f4c02
    36dc:	00000000 	andeq	r0, r0, r0
    36e0:	11c7041b 	bicne	r0, r7, fp, lsl r4
    36e4:	013f0000 	teqeq	pc, r0
    36e8:	00000c40 	andeq	r0, r0, r0, asr #24
    36ec:	01094302 	tsteq	r9, r2, lsl #6
    36f0:	00000041 	andeq	r0, r0, r1, asr #32
    36f4:	0800099c 	stmdaeq	r0, {r2, r3, r4, r7, r8, fp}
    36f8:	080009c2 	stmdaeq	r0, {r1, r6, r7, r8, fp}
    36fc:	01007d02 	tsteq	r0, r2, lsl #26
    3700:	00001b88 	andeq	r1, r0, r8, lsl #23
    3704:	6675623c 			; <UNDEFINED> instruction: 0x6675623c
    3708:	24430200 	strbcs	r0, [r3], #-512	; 0xfffffe00
    370c:	00001b18 	andeq	r1, r0, r8, lsl fp
    3710:	0000151c 	andeq	r1, r0, ip, lsl r5
    3714:	00001514 	andeq	r1, r0, r4, lsl r5
    3718:	7365724b 	cmnvc	r5, #-1342177276	; 0xb0000004
    371c:	0b440200 	bleq	1103f24 <_Min_Stack_Size+0x1103b24>
    3720:	00000041 	andeq	r0, r0, r1, asr #32
    3724:	00001552 	andeq	r1, r0, r2, asr r5
    3728:	00001550 	andeq	r1, r0, r0, asr r5
    372c:	001b883e 	andseq	r8, fp, lr, lsr r8
    3730:	00099c00 	andeq	r9, r9, r0, lsl #24
    3734:	099c0308 	ldmibeq	ip, {r3, r8, r9}
    3738:	09a00800 	stmibeq	r0!, {fp}
    373c:	45020800 	strmi	r0, [r2, #-2048]	; 0xfffff800
    3740:	1b9b2c06 	blne	fe6ce760 <BootRAM+0xd63ef01>
    3744:	15670000 	strbne	r0, [r7, #-0]!
    3748:	15650000 	strbne	r0, [r5, #-0]!
    374c:	00000000 	andeq	r0, r0, r0
    3750:	0e57014c 	rdfeqsm	f0, f7, #4.0
    3754:	3f020000 	svccc	0x00020000
    3758:	00410109 	subeq	r0, r1, r9, lsl #2
    375c:	a8010000 	stmdage	r1, {}	; <UNPREDICTABLE>
    3760:	4a00001b 	bmi	37d4 <_Min_Stack_Size+0x33d4>
    3764:	00667562 	rsbeq	r7, r6, r2, ror #10
    3768:	18243f02 	stmdane	r4!, {r1, r8, r9, sl, fp, ip, sp}
    376c:	0000001b 	andeq	r0, r0, fp, lsl r0
    3770:	0006a44d 	andeq	sl, r6, sp, asr #8
    3774:	13ba0300 			; <UNDEFINED> instruction: 0x13ba0300
    3778:	00009501 	andeq	r9, r0, r1, lsl #10
    377c:	1bd30300 	blne	ff4c4384 <BootRAM+0xe434b25>
    3780:	e5420000 	strb	r0, [r2, #-0]
    3784:	03000008 	movweq	r0, #8
    3788:	004127ba 	strheq	r2, [r1], #-122	; 0xffffff86
    378c:	624a0000 	subvs	r0, sl, #0
    3790:	03006675 	movweq	r6, #1653	; 0x675
    3794:	185e38ba 	ldmdane	lr, {r1, r3, r4, r5, r7, fp, ip, sp}^
    3798:	41000000 	mrsmi	r0, (UNDEF: 0)
    379c:	00000556 	andeq	r0, r0, r6, asr r5
    37a0:	0114ad03 	tsteq	r4, r3, lsl #26
    37a4:	001c0603 	andseq	r0, ip, r3, lsl #12
    37a8:	08e54200 	stmiaeq	r5!, {r9, lr}^
    37ac:	ad030000 	stcge	0, cr0, [r3, #-0]
    37b0:	00004129 	andeq	r4, r0, r9, lsr #2
    37b4:	75624a00 	strbvc	r4, [r2, #-2560]!	; 0xfffff600
    37b8:	ad030066 	stcge	0, cr0, [r3, #-408]	; 0xfffffe68
    37bc:	001c063f 	andseq	r0, ip, pc, lsr r6
    37c0:	0e604200 	cdpeq	2, 6, cr4, cr0, cr0, {0}
    37c4:	ad030000 	stcge	0, cr0, [r3, #-0]
    37c8:	00005e4d 	andeq	r5, r0, sp, asr #28
    37cc:	041b0000 	ldreq	r0, [fp], #-0
    37d0:	00000052 	andeq	r0, r0, r2, asr r0
    37d4:	0005804e 	andeq	r8, r5, lr, asr #32
    37d8:	05de0400 	ldrbeq	r0, [lr, #1024]	; 0x400
    37dc:	29030116 	stmdbcs	r3, {r1, r2, r4, r8}
    37e0:	3700001c 	smladcc	r0, ip, r0, r0
    37e4:	000006ee 	andeq	r0, r0, lr, ror #13
    37e8:	2f05de04 	svccs	0x0005de04
    37ec:	00000280 	andeq	r0, r0, r0, lsl #5
    37f0:	17444f00 	strbne	r4, [r4, -r0, lsl #30]
    37f4:	098c0000 	stmibeq	ip, {}	; <UNPREDICTABLE>
    37f8:	098e0800 	stmibeq	lr, {fp}
    37fc:	7d020800 	stcvc	8, cr0, [r2, #-0]
    3800:	1c460100 	stfnee	f0, [r6], {-0}
    3804:	54500000 	ldrbpl	r0, [r0], #-0
    3808:	01000017 	tsteq	r0, r7, lsl r0
    380c:	884f0050 	stmdahi	pc, {r4, r6}^	; <UNPREDICTABLE>
    3810:	9200001b 	andls	r0, r0, #27
    3814:	9c080009 	stcls	0, cr0, [r8], {9}
    3818:	02080009 	andeq	r0, r8, #9
    381c:	6901007d 	stmdbvs	r1, {r0, r2, r3, r4, r5, r6}
    3820:	2c00001c 	stccs	0, cr0, [r0], {28}
    3824:	00001b9b 	muleq	r0, fp, fp
    3828:	0000157e 	andeq	r1, r0, lr, ror r5
    382c:	0000157a 	andeq	r1, r0, sl, ror r5
    3830:	1af04f00 	bne	ffc17438 <BootRAM+0xeb87bd9>
    3834:	09c20000 	stmibeq	r2, {}^	; <UNPREDICTABLE>
    3838:	09e40800 	stmibeq	r4!, {fp}^
    383c:	7d020800 	stcvc	8, cr0, [r2, #-0]
    3840:	1ce40100 	stfnee	f0, [r4]
    3844:	ff500000 			; <UNDEFINED> instruction: 0xff500000
    3848:	0100001a 	tsteq	r0, sl, lsl r0
    384c:	1b0b5050 	blne	2d7994 <_Min_Stack_Size+0x2d7594>
    3850:	51010000 	mrspl	r0, (UNDEF: 1)
    3854:	001b8848 	andseq	r8, fp, r8, asr #16
    3858:	0009c200 	andeq	ip, r9, r0, lsl #4
    385c:	09c20208 	stmibeq	r2, {r3, r9}^
    3860:	09c80800 	stmibeq	r8, {fp}^
    3864:	4d020800 	stcmi	8, cr0, [r2, #-0]
    3868:	001cb306 	andseq	fp, ip, r6, lsl #6
    386c:	1b9b2c00 	blne	fe6ce874 <BootRAM+0xd63f015>
    3870:	15a10000 	strne	r0, [r1, #0]!
    3874:	159f0000 	ldrne	r0, [pc]	; 387c <_Min_Stack_Size+0x347c>
    3878:	3e000000 	cdpcc	0, 0, cr0, cr0, cr0, {0}
    387c:	00001af0 	strdeq	r1, [r0], -r0
    3880:	080009ce 	stmdaeq	r0, {r1, r2, r3, r6, r7, r8, fp}
    3884:	0009ce00 	andeq	ip, r9, r0, lsl #28
    3888:	0009e208 	andeq	lr, r9, r8, lsl #4
    388c:	064c0208 	strbeq	r0, [ip], -r8, lsl #4
    3890:	001b0b2c 	andseq	r0, fp, ip, lsr #22
    3894:	0015b600 	andseq	fp, r5, r0, lsl #12
    3898:	0015b400 	andseq	fp, r5, r0, lsl #8
    389c:	1aff2c00 	bne	fffce8a4 <BootRAM+0xef3f045>
    38a0:	15cb0000 	strbne	r0, [fp]
    38a4:	15c90000 	strbne	r0, [r9]
    38a8:	00000000 	andeq	r0, r0, r0
    38ac:	55010151 	strpl	r0, [r1, #-337]	; 0xfffffeaf
    38b0:	55000005 	strpl	r0, [r0, #-5]
    38b4:	03000005 	movweq	r0, #5
    38b8:	015106ac 	cmpeq	r1, ip, lsr #13
    38bc:	0006a301 	andeq	sl, r6, r1, lsl #6
    38c0:	0006a300 	andeq	sl, r6, r0, lsl #6
    38c4:	05b90300 	ldreq	r0, [r9, #768]!	; 0x300
    38c8:	63010151 	movwvs	r0, #4433	; 0x1151
    38cc:	63000008 	movwvs	r0, #8
    38d0:	03000008 	movweq	r0, #8
    38d4:	16000625 	strne	r0, [r0], -r5, lsr #12
    38d8:	04000001 	streq	r0, [r0], #-1
    38dc:	000c3800 	andeq	r3, ip, r0, lsl #16
    38e0:	b2010400 	andlt	r0, r1, #0, 8
    38e4:	0c000010 	stceq	0, cr0, [r0], {16}
    38e8:	00001164 	andeq	r1, r0, r4, ror #2
    38ec:	00001040 	andeq	r1, r0, r0, asr #32
    38f0:	08000dec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, sl, fp}
    38f4:	00000048 	andeq	r0, r0, r8, asr #32
    38f8:	000012c8 	andeq	r1, r0, r8, asr #5
    38fc:	58060102 	stmdapl	r6, {r1, r8}
    3900:	02000002 	andeq	r0, r0, #2
    3904:	02560801 	subseq	r0, r6, #65536	; 0x10000
    3908:	02020000 	andeq	r0, r2, #0
    390c:	00029b05 	andeq	r9, r2, r5, lsl #22
    3910:	07020200 	streq	r0, [r2, -r0, lsl #4]
    3914:	0000017e 	andeq	r0, r0, lr, ror r1
    3918:	82050402 	andhi	r0, r5, #33554432	; 0x2000000
    391c:	02000000 	andeq	r0, r0, #0
    3920:	004d0704 	subeq	r0, sp, r4, lsl #14
    3924:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    3928:	00007d05 	andeq	r7, r0, r5, lsl #26
    392c:	07080200 	streq	r0, [r8, -r0, lsl #4]
    3930:	00000048 	andeq	r0, r0, r8, asr #32
    3934:	69050403 	stmdbvs	r5, {r0, r1, sl}
    3938:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    393c:	00520704 	subseq	r0, r2, r4, lsl #14
    3940:	27040000 	strcs	r0, [r4, -r0]
    3944:	02000010 	andeq	r0, r0, #16
    3948:	006417d8 	ldrdeq	r1, [r4], #-120	; 0xffffff88	; <UNPREDICTABLE>
    394c:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    3950:	000d8104 	andeq	r8, sp, r4, lsl #2
    3954:	08010200 	stmdaeq	r1, {r9}
    3958:	0000025f 	andeq	r0, r0, pc, asr r2
    395c:	00009005 	andeq	r9, r0, r5
    3960:	00009000 	andeq	r9, r0, r0
    3964:	07000600 	streq	r0, [r0, -r0, lsl #12]
    3968:	00009604 	andeq	r9, r0, r4, lsl #12
    396c:	9c090800 	stcls	8, cr0, [r9], {-0}
    3970:	01000010 	tsteq	r0, r0, lsl r0
    3974:	00850f13 	addeq	r0, r5, r3, lsl pc
    3978:	3f090000 	svccc	0x00090000
    397c:	01000011 	tsteq	r0, r1, lsl r0
    3980:	00850f14 	addeq	r0, r5, r4, lsl pc
    3984:	14090000 	strne	r0, [r9], #-0
    3988:	01000010 	tsteq	r0, r0, lsl r0
    398c:	00850f15 	addeq	r0, r5, r5, lsl pc
    3990:	53090000 	movwpl	r0, #36864	; 0x9000
    3994:	01000011 	tsteq	r0, r1, lsl r0
    3998:	00850f16 	addeq	r0, r5, r6, lsl pc
    399c:	2e0a0000 	cdpcs	0, 0, cr0, cr10, cr0, {0}
    39a0:	01000010 	tsteq	r0, r0, lsl r0
    39a4:	0dec011e 	stfeqe	f0, [ip, #120]!	; 0x78
    39a8:	00480800 	subeq	r0, r8, r0, lsl #16
    39ac:	9c010000 	stcls	0, cr0, [r1], {-0}
    39b0:	0000010d 	andeq	r0, r0, sp, lsl #2
    39b4:	0004f70b 	andeq	pc, r4, fp, lsl #14
    39b8:	0a200100 	beq	803dc0 <_Min_Stack_Size+0x8039c0>
    39bc:	0000006b 	andeq	r0, r0, fp, rrx
    39c0:	000015e6 	andeq	r1, r0, r6, ror #11
    39c4:	000015de 	ldrdeq	r1, [r0], -lr
    39c8:	0100690c 	tsteq	r0, ip, lsl #18
    39cc:	006b0a21 	rsbeq	r0, fp, r1, lsr #20
    39d0:	16320000 	ldrtne	r0, [r2], -r0
    39d4:	16220000 	strtne	r0, [r2], -r0
    39d8:	0e0d0000 	cdpeq	0, 0, cr0, cr13, cr0, {0}
    39dc:	0d08000e 	stceq	0, cr0, [r8, #-56]	; 0xffffffc8
    39e0:	00000001 	andeq	r0, r0, r1
    39e4:	0008690e 	andeq	r6, r8, lr, lsl #18
    39e8:	00086900 	andeq	r6, r8, r0, lsl #18
    39ec:	0d190100 	ldfeqs	f0, [r9, #-0]
	...

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
   c:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
  10:	00061001 	andeq	r1, r6, r1
  14:	00240200 	eoreq	r0, r4, r0, lsl #4
  18:	0b3e0b0b 	bleq	f82c4c <_Min_Stack_Size+0xf8284c>
  1c:	00000e03 	andeq	r0, r0, r3, lsl #28
  20:	03001603 	movweq	r1, #1539	; 0x603
  24:	3b0b3a0e 	blcc	2ce864 <_Min_Stack_Size+0x2ce464>
  28:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
  2c:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
  30:	13490035 	movtne	r0, #36917	; 0x9035
  34:	24050000 	strcs	r0, [r5], #-0
  38:	3e0b0b00 	vmlacc.f64	d0, d11, d0
  3c:	0008030b 	andeq	r0, r8, fp, lsl #6
  40:	00340600 	eorseq	r0, r4, r0, lsl #12
  44:	0b3a0e03 	bleq	e83858 <_Min_Stack_Size+0xe83458>
  48:	0b39053b 	bleq	e4153c <_Min_Stack_Size+0xe4113c>
  4c:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; ffffff30 <BootRAM+0xef706d1>
  50:	00000c3c 	andeq	r0, r0, ip, lsr ip
  54:	03003407 	movweq	r3, #1031	; 0x407
  58:	3b0b3a0e 	blcc	2ce898 <_Min_Stack_Size+0x2ce498>
  5c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
  60:	3c0c3f13 	stccc	15, cr3, [ip], {19}
  64:	0800000c 	stmdaeq	r0, {r2, r3}
  68:	0b0b0113 	bleq	2c04bc <_Min_Stack_Size+0x2c00bc>
  6c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
  70:	13010b39 	movwne	r0, #6969	; 0x1b39
  74:	0d090000 	stceq	0, cr0, [r9, #-0]
  78:	3a080300 	bcc	200c80 <_Min_Stack_Size+0x200880>
  7c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
  80:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
  84:	0a00000a 	beq	b4 <_Min_Heap_Size+0xb4>
  88:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
  8c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
  90:	13490b39 	movtne	r0, #39737	; 0x9b39
  94:	00000a38 	andeq	r0, r0, r8, lsr sl
  98:	4901010b 	stmdbmi	r1, {r0, r1, r3, r8}
  9c:	00130113 	andseq	r0, r3, r3, lsl r1
  a0:	00210c00 	eoreq	r0, r1, r0, lsl #24
  a4:	0b2f1349 	bleq	bc4dd0 <_Min_Stack_Size+0xbc49d0>
  a8:	160d0000 	strne	r0, [sp], -r0
  ac:	3a0e0300 	bcc	380cb4 <_Min_Stack_Size+0x3808b4>
  b0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
  b4:	0013490b 	andseq	r4, r3, fp, lsl #18
  b8:	012e0e00 			; <UNDEFINED> instruction: 0x012e0e00
  bc:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
  c0:	0b3b0b3a 	bleq	ec2db0 <_Min_Stack_Size+0xec29b0>
  c4:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
  c8:	01111349 	tsteq	r1, r9, asr #6
  cc:	06400112 			; <UNDEFINED> instruction: 0x06400112
  d0:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
  d4:	0f000013 	svceq	0x00000013
  d8:	0111010b 	tsteq	r1, fp, lsl #2
  dc:	13010112 	movwne	r0, #4370	; 0x1112
  e0:	34100000 	ldrcc	r0, [r0], #-0
  e4:	3a0e0300 	bcc	380cec <_Min_Stack_Size+0x3808ec>
  e8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  ec:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
  f0:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
  f4:	1d110000 	ldcne	0, cr0, [r1, #-0]
  f8:	52133100 	andspl	r3, r3, #0, 2
  fc:	0b42b801 	bleq	10ae108 <_Min_Stack_Size+0x10add08>
 100:	01120111 	tsteq	r2, r1, lsl r1
 104:	0b590b58 	bleq	1642e6c <_Min_Stack_Size+0x1642a6c>
 108:	00000b57 	andeq	r0, r0, r7, asr fp
 10c:	01828912 	orreq	r8, r2, r2, lsl r9
 110:	31011101 	tstcc	r1, r1, lsl #2
 114:	00130113 	andseq	r0, r3, r3, lsl r1
 118:	828a1300 	addhi	r1, sl, #0, 6
 11c:	0a020001 	beq	80128 <_Min_Stack_Size+0x7fd28>
 120:	000a4291 	muleq	sl, r1, r2
 124:	82891400 	addhi	r1, r9, #0, 8
 128:	01110001 	tsteq	r1, r1
 12c:	00001331 	andeq	r1, r0, r1, lsr r3
 130:	01828915 	orreq	r8, r2, r5, lsl r9
 134:	31011101 	tstcc	r1, r1, lsl #2
 138:	16000013 			; <UNDEFINED> instruction: 0x16000013
 13c:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 8c <_Min_Heap_Size+0x8c>
 140:	0b3a0e03 	bleq	e83954 <_Min_Stack_Size+0xe83554>
 144:	0b390b3b 	bleq	e42e38 <_Min_Stack_Size+0xe42a38>
 148:	01110c27 	tsteq	r1, r7, lsr #24
 14c:	0a400112 	beq	100059c <_Min_Stack_Size+0x100019c>
 150:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
 154:	17000013 	smladne	r0, r3, r0, r0
 158:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
 15c:	0b3b0b3a 	bleq	ec2e4c <_Min_Stack_Size+0xec2a4c>
 160:	13490b39 	movtne	r0, #39737	; 0x9b39
 164:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
 168:	18000006 	stmdane	r0, {r1, r2}
 16c:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; bc <_Min_Heap_Size+0xbc>
 170:	0b3a0e03 	bleq	e83984 <_Min_Stack_Size+0xe83584>
 174:	0b390b3b 	bleq	e42e68 <_Min_Stack_Size+0xe42a68>
 178:	01110c27 	tsteq	r1, r7, lsr #24
 17c:	0a400112 	beq	10005cc <_Min_Stack_Size+0x10001cc>
 180:	000c4297 	muleq	ip, r7, r2
 184:	002e1900 	eoreq	r1, lr, r0, lsl #18
 188:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
 18c:	0b3b0b3a 	bleq	ec2e7c <_Min_Stack_Size+0xec2a7c>
 190:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
 194:	2e1a0000 	cdpcs	0, 1, cr0, cr10, cr0, {0}
 198:	030c3f01 	movweq	r3, #52993	; 0xcf01
 19c:	3b0b3a0e 	blcc	2ce9dc <_Min_Stack_Size+0x2ce5dc>
 1a0:	110b390b 	tstne	fp, fp, lsl #18
 1a4:	40011201 	andmi	r1, r1, r1, lsl #4
 1a8:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
 1ac:	00001301 	andeq	r1, r0, r1, lsl #6
 1b0:	0300341b 	movweq	r3, #1051	; 0x41b
 1b4:	3b0b3a08 	blcc	2ce9dc <_Min_Stack_Size+0x2ce5dc>
 1b8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 1bc:	b7060213 	smladlt	r6, r3, r2, r0
 1c0:	00000642 	andeq	r0, r0, r2, asr #12
 1c4:	3f012e1c 	svccc	0x00012e1c
 1c8:	3a0e030c 	bcc	380e00 <_Min_Stack_Size+0x380a00>
 1cc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 1d0:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
 1d4:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
 1d8:	970a4001 	strls	r4, [sl, -r1]
 1dc:	13010c42 	movwne	r0, #7234	; 0x1c42
 1e0:	051d0000 	ldreq	r0, [sp, #-0]
 1e4:	3a0e0300 	bcc	380dec <_Min_Stack_Size+0x3809ec>
 1e8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 1ec:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 1f0:	1e00000a 	cdpne	0, 0, cr0, cr0, cr10, {0}
 1f4:	0e03002e 	cdpeq	0, 0, cr0, cr3, cr14, {1}
 1f8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 1fc:	0b200b39 	bleq	802ee8 <_Min_Stack_Size+0x802ae8>
 200:	2e1f0000 	cdpcs	0, 1, cr0, cr15, cr0, {0}
 204:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
 208:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
 20c:	0b3a0e03 	bleq	e83a20 <_Min_Stack_Size+0xe83620>
 210:	0b390b3b 	bleq	e42f04 <_Min_Stack_Size+0xe42b04>
 214:	01000000 	mrseq	r0, (UNDEF: 0)
 218:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
 21c:	0e030b13 	vmoveq.32	d3[0], r0
 220:	01110e1b 	tsteq	r1, fp, lsl lr
 224:	06100112 			; <UNDEFINED> instruction: 0x06100112
 228:	24020000 	strcs	r0, [r2], #-0
 22c:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 230:	000e030b 	andeq	r0, lr, fp, lsl #6
 234:	00160300 	andseq	r0, r6, r0, lsl #6
 238:	0b3a0e03 	bleq	e83a4c <_Min_Stack_Size+0xe8364c>
 23c:	0b390b3b 	bleq	e42f30 <_Min_Stack_Size+0xe42b30>
 240:	00001349 	andeq	r1, r0, r9, asr #6
 244:	49003504 	stmdbmi	r0, {r2, r8, sl, ip, sp}
 248:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
 24c:	13490026 	movtne	r0, #36902	; 0x9026
 250:	24060000 	strcs	r0, [r6], #-0
 254:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 258:	0008030b 	andeq	r0, r8, fp, lsl #6
 25c:	000f0700 	andeq	r0, pc, r0, lsl #14
 260:	13490b0b 	movtne	r0, #39691	; 0x9b0b
 264:	15080000 	strne	r0, [r8, #-0]
 268:	010c2701 	tsteq	ip, r1, lsl #14
 26c:	09000013 	stmdbeq	r0, {r0, r1, r4}
 270:	13490005 	movtne	r0, #36869	; 0x9005
 274:	130a0000 	movwne	r0, #40960	; 0xa000
 278:	3a0b0b01 	bcc	2c2e84 <_Min_Stack_Size+0x2c2a84>
 27c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 280:	0013010b 	andseq	r0, r3, fp, lsl #2
 284:	000d0b00 	andeq	r0, sp, r0, lsl #22
 288:	0b3a0e03 	bleq	e83a9c <_Min_Stack_Size+0xe8369c>
 28c:	0b390b3b 	bleq	e42f80 <_Min_Stack_Size+0xe42b80>
 290:	0a381349 	beq	e04fbc <_Min_Stack_Size+0xe04bbc>
 294:	040c0000 	streq	r0, [ip], #-0
 298:	0b0b3e01 	bleq	2cfaa4 <_Min_Stack_Size+0x2cf6a4>
 29c:	3a13490b 	bcc	4d26d0 <_Min_Stack_Size+0x4d22d0>
 2a0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 2a4:	0013010b 	andseq	r0, r3, fp, lsl #2
 2a8:	00280d00 	eoreq	r0, r8, r0, lsl #26
 2ac:	0d1c0e03 	ldceq	14, cr0, [ip, #-12]
 2b0:	280e0000 	stmdacs	lr, {}	; <UNPREDICTABLE>
 2b4:	1c0e0300 	stcne	3, cr0, [lr], {-0}
 2b8:	0f00000b 	svceq	0x0000000b
 2bc:	050b0113 	streq	r0, [fp, #-275]	; 0xfffffeed
 2c0:	0b3b0b3a 	bleq	ec2fb0 <_Min_Stack_Size+0xec2bb0>
 2c4:	13010b39 	movwne	r0, #6969	; 0x1b39
 2c8:	0d100000 	ldceq	0, cr0, [r0, #-0]
 2cc:	3a080300 	bcc	200ed4 <_Min_Stack_Size+0x200ad4>
 2d0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 2d4:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 2d8:	1100000a 	tstne	r0, sl
 2dc:	13490101 	movtne	r0, #37121	; 0x9101
 2e0:	00001301 	andeq	r1, r0, r1, lsl #6
 2e4:	49002112 	stmdbmi	r0, {r1, r4, r8, sp}
 2e8:	000b2f13 	andeq	r2, fp, r3, lsl pc
 2ec:	00211300 	eoreq	r1, r1, r0, lsl #6
 2f0:	052f1349 	streq	r1, [pc, #-841]!	; ffffffaf <BootRAM+0xef70750>
 2f4:	34140000 	ldrcc	r0, [r4], #-0
 2f8:	3a0e0300 	bcc	380f00 <_Min_Stack_Size+0x380b00>
 2fc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 300:	3f13490b 	svccc	0x0013490b
 304:	000c3c0c 	andeq	r3, ip, ip, lsl #24
 308:	00341500 	eorseq	r1, r4, r0, lsl #10
 30c:	0b3a0e03 	bleq	e83b20 <_Min_Stack_Size+0xe83720>
 310:	0b390b3b 	bleq	e43004 <_Min_Stack_Size+0xe42c04>
 314:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 1f8 <_Min_Heap_Size+0x1f8>
 318:	00000c3c 	andeq	r0, r0, ip, lsr ip
 31c:	0b011316 	bleq	44f7c <_Min_Stack_Size+0x44b7c>
 320:	3b0b3a0b 	blcc	2ceb54 <_Min_Stack_Size+0x2ce754>
 324:	010b3905 	tsteq	fp, r5, lsl #18
 328:	17000013 	smladne	r0, r3, r0, r0
 32c:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 330:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 334:	13490b39 	movtne	r0, #39737	; 0x9b39
 338:	00000a38 	andeq	r0, r0, r8, lsr sl
 33c:	03000d18 	movweq	r0, #3352	; 0xd18
 340:	3b0b3a08 	blcc	2ceb68 <_Min_Stack_Size+0x2ce768>
 344:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 348:	000a3813 	andeq	r3, sl, r3, lsl r8
 34c:	00161900 	andseq	r1, r6, r0, lsl #18
 350:	0b3a0e03 	bleq	e83b64 <_Min_Stack_Size+0xe83764>
 354:	0b39053b 	bleq	e41848 <_Min_Stack_Size+0xe41448>
 358:	00001349 	andeq	r1, r0, r9, asr #6
 35c:	03000d1a 	movweq	r0, #3354	; 0xd1a
 360:	3b0b3a0e 	blcc	2ceba0 <_Min_Stack_Size+0x2ce7a0>
 364:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 368:	0d0b0b13 	vstreq	d0, [fp, #-76]	; 0xffffffb4
 36c:	380b0c0b 	stmdacc	fp, {r0, r1, r3, sl, fp}
 370:	1b00000a 	blne	3a0 <_Min_Heap_Size+0x3a0>
 374:	0b0b0117 	bleq	2c07d8 <_Min_Stack_Size+0x2c03d8>
 378:	0b3b0b3a 	bleq	ec3068 <_Min_Stack_Size+0xec2c68>
 37c:	13010b39 	movwne	r0, #6969	; 0x1b39
 380:	0d1c0000 	ldceq	0, cr0, [ip, #-0]
 384:	3a0e0300 	bcc	380f8c <_Min_Stack_Size+0x380b8c>
 388:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 38c:	0013490b 	andseq	r4, r3, fp, lsl #18
 390:	000d1d00 	andeq	r1, sp, r0, lsl #26
 394:	00001349 	andeq	r1, r0, r9, asr #6
 398:	49000d1e 	stmdbmi	r0, {r1, r2, r3, r4, r8, sl, fp}
 39c:	000a3813 	andeq	r3, sl, r3, lsl r8
 3a0:	00341f00 	eorseq	r1, r4, r0, lsl #30
 3a4:	0b3a0e03 	bleq	e83bb8 <_Min_Stack_Size+0xe837b8>
 3a8:	0b390b3b 	bleq	e4309c <_Min_Stack_Size+0xe42c9c>
 3ac:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 290 <_Min_Heap_Size+0x290>
 3b0:	00000a02 	andeq	r0, r0, r2, lsl #20
 3b4:	03003420 	movweq	r3, #1056	; 0x420
 3b8:	3b0b3a0e 	blcc	2cebf8 <_Min_Stack_Size+0x2ce7f8>
 3bc:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 3c0:	000a0213 	andeq	r0, sl, r3, lsl r2
 3c4:	000d2100 	andeq	r2, sp, r0, lsl #2
 3c8:	0b3a0e03 	bleq	e83bdc <_Min_Stack_Size+0xe837dc>
 3cc:	0b39053b 	bleq	e418c0 <_Min_Stack_Size+0xe414c0>
 3d0:	0b0b1349 	bleq	2c50fc <_Min_Stack_Size+0x2c4cfc>
 3d4:	0b0c0b0d 	bleq	303010 <_Min_Stack_Size+0x302c10>
 3d8:	00000a38 	andeq	r0, r0, r8, lsr sl
 3dc:	0b011722 	bleq	4606c <_Min_Stack_Size+0x45c6c>
 3e0:	3b0b3a0b 	blcc	2cec14 <_Min_Stack_Size+0x2ce814>
 3e4:	010b3905 	tsteq	fp, r5, lsl #18
 3e8:	23000013 	movwcs	r0, #19
 3ec:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 3f0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 3f4:	13490b39 	movtne	r0, #39737	; 0x9b39
 3f8:	2e240000 	cdpcs	0, 2, cr0, cr4, cr0, {0}
 3fc:	030c3f01 	movweq	r3, #52993	; 0xcf01
 400:	3b0b3a0e 	blcc	2cec40 <_Min_Stack_Size+0x2ce840>
 404:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
 408:	1113490c 	tstne	r3, ip, lsl #18
 40c:	40011201 	andmi	r1, r1, r1, lsl #4
 410:	0c429706 	mcrreq	7, 0, r9, r2, cr6
 414:	00001301 	andeq	r1, r0, r1, lsl #6
 418:	03000525 	movweq	r0, #1317	; 0x525
 41c:	3b0b3a08 	blcc	2cec44 <_Min_Stack_Size+0x2ce844>
 420:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 424:	b7060213 	smladlt	r6, r3, r2, r0
 428:	00000642 	andeq	r0, r0, r2, asr #12
 42c:	03003426 	movweq	r3, #1062	; 0x426
 430:	3b0b3a0e 	blcc	2cec70 <_Min_Stack_Size+0x2ce870>
 434:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 438:	b7060213 	smladlt	r6, r3, r2, r0
 43c:	00000642 	andeq	r0, r0, r2, asr #12
 440:	03003427 	movweq	r3, #1063	; 0x427
 444:	3b0b3a08 	blcc	2cec6c <_Min_Stack_Size+0x2ce86c>
 448:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 44c:	b7060213 	smladlt	r6, r3, r2, r0
 450:	00000642 	andeq	r0, r0, r2, asr #12
 454:	55010b28 	strpl	r0, [r1, #-2856]	; 0xfffff4d8
 458:	29000006 	stmdbcs	r0, {r1, r2}
 45c:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 3ac <_Min_Heap_Size+0x3ac>
 460:	0b3a0e03 	bleq	e83c74 <_Min_Stack_Size+0xe83874>
 464:	0b39053b 	bleq	e41958 <_Min_Stack_Size+0xe41558>
 468:	01110c27 	tsteq	r1, r7, lsr #24
 46c:	06400112 			; <UNDEFINED> instruction: 0x06400112
 470:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
 474:	2a000013 	bcs	4c8 <_Min_Stack_Size+0xc8>
 478:	08030005 	stmdaeq	r3, {r0, r2}
 47c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 480:	13490b39 	movtne	r0, #39737	; 0x9b39
 484:	00000a02 	andeq	r0, r0, r2, lsl #20
 488:	0300052b 	movweq	r0, #1323	; 0x52b
 48c:	3b0b3a0e 	blcc	2ceccc <_Min_Stack_Size+0x2ce8cc>
 490:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 494:	000a0213 	andeq	r0, sl, r3, lsl r2
 498:	012e2c00 			; <UNDEFINED> instruction: 0x012e2c00
 49c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
 4a0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 4a4:	01110b39 	tsteq	r1, r9, lsr fp
 4a8:	06400112 			; <UNDEFINED> instruction: 0x06400112
 4ac:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
 4b0:	2d000013 	stccs	0, cr0, [r0, #-76]	; 0xffffffb4
 4b4:	0655010b 	ldrbeq	r0, [r5], -fp, lsl #2
 4b8:	00001301 	andeq	r1, r0, r1, lsl #6
 4bc:	11010b2e 	tstne	r1, lr, lsr #22
 4c0:	01011201 	tsteq	r1, r1, lsl #4
 4c4:	2f000013 	svccs	0x00000013
 4c8:	01018289 	smlabbeq	r1, r9, r2, r8
 4cc:	13010111 	movwne	r0, #4369	; 0x1111
 4d0:	8a300000 	bhi	c004d8 <_Min_Stack_Size+0xc000d8>
 4d4:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
 4d8:	0a42910a 	beq	10a4908 <_Min_Stack_Size+0x10a4508>
 4dc:	89310000 	ldmdbhi	r1!, {}	; <UNPREDICTABLE>
 4e0:	11010182 	smlabbne	r1, r2, r1, r0
 4e4:	32000001 	andcc	r0, r0, #1
 4e8:	00018289 	andeq	r8, r1, r9, lsl #5
 4ec:	13310111 	teqne	r1, #1073741828	; 0x40000004
 4f0:	89330000 	ldmdbhi	r3!, {}	; <UNPREDICTABLE>
 4f4:	11010182 	smlabbne	r1, r2, r1, r0
 4f8:	01133101 	tsteq	r3, r1, lsl #2
 4fc:	34000013 	strcc	r0, [r0], #-19	; 0xffffffed
 500:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 450 <_Min_Stack_Size+0x50>
 504:	0b3a0e03 	bleq	e83d18 <_Min_Stack_Size+0xe83918>
 508:	0b390b3b 	bleq	e431fc <_Min_Stack_Size+0xe42dfc>
 50c:	01110c27 	tsteq	r1, r7, lsr #24
 510:	06400112 			; <UNDEFINED> instruction: 0x06400112
 514:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
 518:	35000013 	strcc	r0, [r0, #-19]	; 0xffffffed
 51c:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
 520:	0b3b0b3a 	bleq	ec3210 <_Min_Stack_Size+0xec2e10>
 524:	13490b39 	movtne	r0, #39737	; 0x9b39
 528:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
 52c:	36000006 	strcc	r0, [r0], -r6
 530:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 534:	0b3b0b3a 	bleq	ec3224 <_Min_Stack_Size+0xec2e24>
 538:	13490b39 	movtne	r0, #39737	; 0x9b39
 53c:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
 540:	37000006 	strcc	r0, [r0, -r6]
 544:	08030034 	stmdaeq	r3, {r2, r4, r5}
 548:	0b3b0b3a 	bleq	ec3238 <_Min_Stack_Size+0xec2e38>
 54c:	13490b39 	movtne	r0, #39737	; 0x9b39
 550:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
 554:	38000006 	stmdacc	r0, {r1, r2}
 558:	0e03012e 	adfeqsp	f0, f3, #0.5
 55c:	0b3b0b3a 	bleq	ec324c <_Min_Stack_Size+0xec2e4c>
 560:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
 564:	01120111 	tsteq	r2, r1, lsl r1
 568:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
 56c:	0013010c 	andseq	r0, r3, ip, lsl #2
 570:	82893900 	addhi	r3, r9, #0, 18
 574:	01110101 	tsteq	r1, r1, lsl #2
 578:	00001331 	andeq	r1, r0, r1, lsr r3
 57c:	31011d3a 	tstcc	r1, sl, lsr sp
 580:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
 584:	01110b42 	tsteq	r1, r2, asr #22
 588:	0b580112 	bleq	16009d8 <_Min_Stack_Size+0x16005d8>
 58c:	0b570b59 	bleq	15c32f8 <_Min_Stack_Size+0x15c2ef8>
 590:	00001301 	andeq	r1, r0, r1, lsl #6
 594:	3100053b 	tstcc	r0, fp, lsr r5
 598:	b7060213 	smladlt	r6, r3, r2, r0
 59c:	00000642 	andeq	r0, r0, r2, asr #12
 5a0:	31011d3c 	tstcc	r1, ip, lsr sp
 5a4:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
 5a8:	06550b42 	ldrbeq	r0, [r5], -r2, asr #22
 5ac:	0b590b58 	bleq	1643314 <_Min_Stack_Size+0x1642f14>
 5b0:	13010b57 	movwne	r0, #6999	; 0x1b57
 5b4:	0f3d0000 	svceq	0x003d0000
 5b8:	000b0b00 	andeq	r0, fp, r0, lsl #22
 5bc:	00263e00 	eoreq	r3, r6, r0, lsl #28
 5c0:	2e3f0000 	cdpcs	0, 3, cr0, cr15, cr0, {0}
 5c4:	3a0e0301 	bcc	3811d0 <_Min_Stack_Size+0x380dd0>
 5c8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 5cc:	200c270b 	andcs	r2, ip, fp, lsl #14
 5d0:	0013010b 	andseq	r0, r3, fp, lsl #2
 5d4:	00054000 	andeq	r4, r5, r0
 5d8:	0b3a0803 	bleq	e825ec <_Min_Stack_Size+0xe821ec>
 5dc:	0b390b3b 	bleq	e432d0 <_Min_Stack_Size+0xe42ed0>
 5e0:	00001349 	andeq	r1, r0, r9, asr #6
 5e4:	03000541 	movweq	r0, #1345	; 0x541
 5e8:	3b0b3a0e 	blcc	2cee28 <_Min_Stack_Size+0x2cea28>
 5ec:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 5f0:	42000013 	andmi	r0, r0, #19
 5f4:	1331011d 	teqne	r1, #1073741831	; 0x40000007
 5f8:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
 5fc:	5806550b 	stmdapl	r6, {r0, r1, r3, r8, sl, ip, lr}
 600:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
 604:	4300000b 	movwmi	r0, #11
 608:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 558 <_Min_Stack_Size+0x158>
 60c:	0b3a0e03 	bleq	e83e20 <_Min_Stack_Size+0xe83a20>
 610:	0b390b3b 	bleq	e43304 <_Min_Stack_Size+0xe42f04>
 614:	01120111 	tsteq	r2, r1, lsl r1
 618:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
 61c:	0013010c 	andseq	r0, r3, ip, lsl #2
 620:	011d4400 	tsteq	sp, r0, lsl #8
 624:	01521331 	cmpeq	r2, r1, lsr r3
 628:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
 62c:	58011201 	stmdapl	r1, {r0, r9, ip}
 630:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
 634:	4500000b 	strmi	r0, [r0, #-11]
 638:	0e03012e 	adfeqsp	f0, f3, #0.5
 63c:	0b3b0b3a 	bleq	ec332c <_Min_Stack_Size+0xec2f2c>
 640:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
 644:	01120111 	tsteq	r2, r1, lsl r1
 648:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
 64c:	0013010c 	andseq	r0, r3, ip, lsl #2
 650:	00054600 	andeq	r4, r5, r0, lsl #12
 654:	0b3a0e03 	bleq	e83e68 <_Min_Stack_Size+0xe83a68>
 658:	0b390b3b 	bleq	e4334c <_Min_Stack_Size+0xe42f4c>
 65c:	0a021349 	beq	85388 <_Min_Stack_Size+0x84f88>
 660:	2e470000 	cdpcs	0, 4, cr0, cr7, cr0, {0}
 664:	030c3f01 	movweq	r3, #52993	; 0xcf01
 668:	3b0b3a0e 	blcc	2ceea8 <_Min_Stack_Size+0x2ceaa8>
 66c:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 670:	1113490c 	tstne	r3, ip, lsl #18
 674:	40011201 	andmi	r1, r1, r1, lsl #4
 678:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
 67c:	00001301 	andeq	r1, r0, r1, lsl #6
 680:	03000548 	movweq	r0, #1352	; 0x548
 684:	3b0b3a08 	blcc	2ceeac <_Min_Stack_Size+0x2ceaac>
 688:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 68c:	b7060213 	smladlt	r6, r3, r2, r0
 690:	00000642 	andeq	r0, r0, r2, asr #12
 694:	3f002e49 	svccc	0x00002e49
 698:	3a0e030c 	bcc	3812d0 <_Min_Stack_Size+0x380ed0>
 69c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 6a0:	4a00000b 	bmi	6d4 <_Min_Stack_Size+0x2d4>
 6a4:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 5f4 <_Min_Stack_Size+0x1f4>
 6a8:	0b3a0e03 	bleq	e83ebc <_Min_Stack_Size+0xe83abc>
 6ac:	0b390b3b 	bleq	e433a0 <_Min_Stack_Size+0xe42fa0>
 6b0:	00000b20 	andeq	r0, r0, r0, lsr #22
 6b4:	03012e4b 	movweq	r2, #7755	; 0x1e4b
 6b8:	3b0b3a0e 	blcc	2ceef8 <_Min_Stack_Size+0x2ceaf8>
 6bc:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 6c0:	2013490c 	andscs	r4, r3, ip, lsl #18
 6c4:	0013010b 	andseq	r0, r3, fp, lsl #2
 6c8:	012e4c00 			; <UNDEFINED> instruction: 0x012e4c00
 6cc:	0b3a0e03 	bleq	e83ee0 <_Min_Stack_Size+0xe83ae0>
 6d0:	0b39053b 	bleq	e41bc4 <_Min_Stack_Size+0xe417c4>
 6d4:	0b200c27 	bleq	803778 <_Min_Stack_Size+0x803378>
 6d8:	00001301 	andeq	r1, r0, r1, lsl #6
 6dc:	0300054d 	movweq	r0, #1357	; 0x54d
 6e0:	3b0b3a0e 	blcc	2cef20 <_Min_Stack_Size+0x2ceb20>
 6e4:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 6e8:	4e000013 	mcrmi	0, 0, r0, cr0, cr3, {0}
 6ec:	1331002e 	teqne	r1, #46	; 0x2e
 6f0:	01120111 	tsteq	r2, r1, lsl r1
 6f4:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
 6f8:	4f00000c 	svcmi	0x0000000c
 6fc:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 64c <_Min_Stack_Size+0x24c>
 700:	40870c3c 	addmi	r0, r7, ip, lsr ip
 704:	3a0e030e 	bcc	381344 <_Min_Stack_Size+0x380f44>
 708:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 70c:	0000000b 	andeq	r0, r0, fp
 710:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
 714:	030b130e 	movweq	r1, #45838	; 0xb30e
 718:	110e1b0e 	tstne	lr, lr, lsl #22
 71c:	10011201 	andne	r1, r1, r1, lsl #4
 720:	02000006 	andeq	r0, r0, #6
 724:	0b0b0024 	bleq	2c07bc <_Min_Stack_Size+0x2c03bc>
 728:	0e030b3e 	vmoveq.16	d3[0], r0
 72c:	16030000 	strne	r0, [r3], -r0
 730:	3a0e0300 	bcc	381338 <_Min_Stack_Size+0x380f38>
 734:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 738:	0013490b 	andseq	r4, r3, fp, lsl #18
 73c:	00350400 	eorseq	r0, r5, r0, lsl #8
 740:	00001349 	andeq	r1, r0, r9, asr #6
 744:	49002605 	stmdbmi	r0, {r0, r2, r9, sl, sp}
 748:	06000013 			; <UNDEFINED> instruction: 0x06000013
 74c:	0b0b0024 	bleq	2c07e4 <_Min_Stack_Size+0x2c03e4>
 750:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
 754:	13070000 	movwne	r0, #28672	; 0x7000
 758:	3a0b0b01 	bcc	2c3364 <_Min_Stack_Size+0x2c2f64>
 75c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 760:	0013010b 	andseq	r0, r3, fp, lsl #2
 764:	000d0800 	andeq	r0, sp, r0, lsl #16
 768:	0b3a0e03 	bleq	e83f7c <_Min_Stack_Size+0xe83b7c>
 76c:	0b390b3b 	bleq	e43460 <_Min_Stack_Size+0xe43060>
 770:	0a381349 	beq	e0549c <_Min_Stack_Size+0xe0509c>
 774:	04090000 	streq	r0, [r9], #-0
 778:	0b0b3e01 	bleq	2cff84 <_Min_Stack_Size+0x2cfb84>
 77c:	3a13490b 	bcc	4d2bb0 <_Min_Stack_Size+0x4d27b0>
 780:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 784:	0013010b 	andseq	r0, r3, fp, lsl #2
 788:	00280a00 	eoreq	r0, r8, r0, lsl #20
 78c:	0d1c0e03 	ldceq	14, cr0, [ip, #-12]
 790:	280b0000 	stmdacs	fp, {}	; <UNPREDICTABLE>
 794:	1c0e0300 	stcne	3, cr0, [lr], {-0}
 798:	0c00000b 	stceq	0, cr0, [r0], {11}
 79c:	050b0113 	streq	r0, [fp, #-275]	; 0xfffffeed
 7a0:	0b3b0b3a 	bleq	ec3490 <_Min_Stack_Size+0xec3090>
 7a4:	13010b39 	movwne	r0, #6969	; 0x1b39
 7a8:	0d0d0000 	stceq	0, cr0, [sp, #-0]
 7ac:	3a080300 	bcc	2013b4 <_Min_Stack_Size+0x200fb4>
 7b0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 7b4:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 7b8:	0e00000a 	cdpeq	0, 0, cr0, cr0, cr10, {0}
 7bc:	13490101 	movtne	r0, #37121	; 0x9101
 7c0:	00001301 	andeq	r1, r0, r1, lsl #6
 7c4:	4900210f 	stmdbmi	r0, {r0, r1, r2, r3, r8, sp}
 7c8:	000b2f13 	andeq	r2, fp, r3, lsl pc
 7cc:	00211000 	eoreq	r1, r1, r0
 7d0:	052f1349 	streq	r1, [pc, #-841]!	; 48f <_Min_Stack_Size+0x8f>
 7d4:	34110000 	ldrcc	r0, [r1], #-0
 7d8:	3a0e0300 	bcc	3813e0 <_Min_Stack_Size+0x380fe0>
 7dc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 7e0:	3f13490b 	svccc	0x0013490b
 7e4:	000c3c0c 	andeq	r3, ip, ip, lsl #24
 7e8:	00341200 	eorseq	r1, r4, r0, lsl #4
 7ec:	0b3a0e03 	bleq	e84000 <_Min_Stack_Size+0xe83c00>
 7f0:	0b390b3b 	bleq	e434e4 <_Min_Stack_Size+0xe430e4>
 7f4:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 6d8 <_Min_Stack_Size+0x2d8>
 7f8:	00000c3c 	andeq	r0, r0, ip, lsr ip
 7fc:	0b011313 	bleq	45450 <_Min_Stack_Size+0x45050>
 800:	3b0b3a0b 	blcc	2cf034 <_Min_Stack_Size+0x2cec34>
 804:	010b3905 	tsteq	fp, r5, lsl #18
 808:	14000013 	strne	r0, [r0], #-19	; 0xffffffed
 80c:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 810:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 814:	13490b39 	movtne	r0, #39737	; 0x9b39
 818:	00000a38 	andeq	r0, r0, r8, lsr sl
 81c:	03000d15 	movweq	r0, #3349	; 0xd15
 820:	3b0b3a08 	blcc	2cf048 <_Min_Stack_Size+0x2cec48>
 824:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 828:	000a3813 	andeq	r3, sl, r3, lsl r8
 82c:	00161600 	andseq	r1, r6, r0, lsl #12
 830:	0b3a0e03 	bleq	e84044 <_Min_Stack_Size+0xe83c44>
 834:	0b39053b 	bleq	e41d28 <_Min_Stack_Size+0xe41928>
 838:	00001349 	andeq	r1, r0, r9, asr #6
 83c:	0b011717 	bleq	464a0 <_Min_Stack_Size+0x460a0>
 840:	3b0b3a0b 	blcc	2cf074 <_Min_Stack_Size+0x2cec74>
 844:	010b390b 	tsteq	fp, fp, lsl #18
 848:	18000013 	stmdane	r0, {r0, r1, r4}
 84c:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 850:	0b3b0b3a 	bleq	ec3540 <_Min_Stack_Size+0xec3140>
 854:	13490b39 	movtne	r0, #39737	; 0x9b39
 858:	0f190000 	svceq	0x00190000
 85c:	000b0b00 	andeq	r0, fp, r0, lsl #22
 860:	01131a00 	tsteq	r3, r0, lsl #20
 864:	0b0b0e03 	bleq	2c4078 <_Min_Stack_Size+0x2c3c78>
 868:	0b3b0b3a 	bleq	ec3558 <_Min_Stack_Size+0xec3158>
 86c:	13010b39 	movwne	r0, #6969	; 0x1b39
 870:	0f1b0000 	svceq	0x001b0000
 874:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
 878:	1c000013 	stcne	0, cr0, [r0], {19}
 87c:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
 880:	0b3a050b 	bleq	e81cb4 <_Min_Stack_Size+0xe818b4>
 884:	0b390b3b 	bleq	e43578 <_Min_Stack_Size+0xe43178>
 888:	00001301 	andeq	r1, r0, r1, lsl #6
 88c:	2700151d 	smladcs	r0, sp, r5, r1
 890:	1e00000c 	cdpne	0, 0, cr0, cr0, cr12, {0}
 894:	0c270115 	stfeqs	f0, [r7], #-84	; 0xffffffac
 898:	13011349 	movwne	r1, #4937	; 0x1349
 89c:	051f0000 	ldreq	r0, [pc, #-0]	; 8a4 <_Min_Stack_Size+0x4a4>
 8a0:	00134900 	andseq	r4, r3, r0, lsl #18
 8a4:	01132000 	tsteq	r3, r0
 8a8:	050b0e03 	streq	r0, [fp, #-3587]	; 0xfffff1fd
 8ac:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 8b0:	13010b39 	movwne	r0, #6969	; 0x1b39
 8b4:	13210000 			; <UNDEFINED> instruction: 0x13210000
 8b8:	0b0e0301 	bleq	3814c4 <_Min_Stack_Size+0x3810c4>
 8bc:	3b0b3a0b 	blcc	2cf0f0 <_Min_Stack_Size+0x2cecf0>
 8c0:	010b3905 	tsteq	fp, r5, lsl #18
 8c4:	22000013 	andcs	r0, r0, #19
 8c8:	0b0b0117 	bleq	2c0d2c <_Min_Stack_Size+0x2c092c>
 8cc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 8d0:	13010b39 	movwne	r0, #6969	; 0x1b39
 8d4:	0d230000 	stceq	0, cr0, [r3, #-0]
 8d8:	3a0e0300 	bcc	3814e0 <_Min_Stack_Size+0x3810e0>
 8dc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 8e0:	0013490b 	andseq	r4, r3, fp, lsl #18
 8e4:	00132400 	andseq	r2, r3, r0, lsl #8
 8e8:	0c3c0e03 	ldceq	14, cr0, [ip], #-12
 8ec:	15250000 	strne	r0, [r5, #-0]!
 8f0:	010c2701 	tsteq	ip, r1, lsl #14
 8f4:	26000013 			; <UNDEFINED> instruction: 0x26000013
 8f8:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 8fc:	0b3b0b3a 	bleq	ec35ec <_Min_Stack_Size+0xec31ec>
 900:	13490b39 	movtne	r0, #39737	; 0x9b39
 904:	00000a02 	andeq	r0, r0, r2, lsl #20
 908:	03003427 	movweq	r3, #1063	; 0x427
 90c:	3b0b3a0e 	blcc	2cf14c <_Min_Stack_Size+0x2ced4c>
 910:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 914:	020c3f13 	andeq	r3, ip, #19, 30	; 0x4c
 918:	2800000a 	stmdacs	r0, {r1, r3}
 91c:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 86c <_Min_Stack_Size+0x46c>
 920:	0b3a0e03 	bleq	e84134 <_Min_Stack_Size+0xe83d34>
 924:	0b39053b 	bleq	e41e18 <_Min_Stack_Size+0xe41a18>
 928:	01120111 	tsteq	r2, r1, lsl r1
 92c:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
 930:	0013010c 	andseq	r0, r3, ip, lsl #2
 934:	00342900 	eorseq	r2, r4, r0, lsl #18
 938:	0b3a0803 	bleq	e8294c <_Min_Stack_Size+0xe8254c>
 93c:	0b39053b 	bleq	e41e30 <_Min_Stack_Size+0xe41a30>
 940:	0a021349 	beq	8566c <_Min_Stack_Size+0x8526c>
 944:	342a0000 	strtcc	r0, [sl], #-0
 948:	3a080300 	bcc	201550 <_Min_Stack_Size+0x201150>
 94c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 950:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 954:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
 958:	1d2b0000 	stcne	0, cr0, [fp, #-0]
 95c:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
 960:	0b42b801 	bleq	10ae96c <_Min_Stack_Size+0x10ae56c>
 964:	0b580655 	bleq	16022c0 <_Min_Stack_Size+0x1601ec0>
 968:	0b570559 	bleq	15c1ed4 <_Min_Stack_Size+0x15c1ad4>
 96c:	00001301 	andeq	r1, r0, r1, lsl #6
 970:	3100052c 	tstcc	r0, ip, lsr #10
 974:	b7060213 	smladlt	r6, r3, r2, r0
 978:	00000642 	andeq	r0, r0, r2, asr #12
 97c:	31011d2d 	tstcc	r1, sp, lsr #26
 980:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
 984:	01110b42 	tsteq	r1, r2, asr #22
 988:	0b580112 	bleq	1600dd8 <_Min_Stack_Size+0x16009d8>
 98c:	0b570559 	bleq	15c1ef8 <_Min_Stack_Size+0x15c1af8>
 990:	00001301 	andeq	r1, r0, r1, lsl #6
 994:	0182892e 	orreq	r8, r2, lr, lsr #18
 998:	31011101 	tstcc	r1, r1, lsl #2
 99c:	2f000013 	svccs	0x00000013
 9a0:	0001828a 	andeq	r8, r1, sl, lsl #5
 9a4:	42910a02 	addsmi	r0, r1, #8192	; 0x2000
 9a8:	3000000a 	andcc	r0, r0, sl
 9ac:	1331011d 	teqne	r1, #1073741831	; 0x40000007
 9b0:	01120111 	tsteq	r2, r1, lsl r1
 9b4:	05590b58 	ldrbeq	r0, [r9, #-2904]	; 0xfffff4a8
 9b8:	13010b57 	movwne	r0, #6999	; 0x1b57
 9bc:	89310000 	ldmdbhi	r1!, {}	; <UNPREDICTABLE>
 9c0:	11010182 	smlabbne	r1, r2, r1, r0
 9c4:	01133101 	tsteq	r3, r1, lsl #2
 9c8:	32000013 	andcc	r0, r0, #19
 9cc:	0655010b 	ldrbeq	r0, [r5], -fp, lsl #2
 9d0:	00001301 	andeq	r1, r0, r1, lsl #6
 9d4:	03003433 	movweq	r3, #1075	; 0x433
 9d8:	3b0b3a0e 	blcc	2cf218 <_Min_Stack_Size+0x2cee18>
 9dc:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 9e0:	b7060213 	smladlt	r6, r3, r2, r0
 9e4:	00000642 	andeq	r0, r0, r2, asr #12
 9e8:	11010b34 	tstne	r1, r4, lsr fp
 9ec:	01011201 	tsteq	r1, r1, lsl #4
 9f0:	35000013 	strcc	r0, [r0, #-19]	; 0xffffffed
 9f4:	01018289 	smlabbeq	r1, r9, r2, r8
 9f8:	42950111 	addsmi	r0, r5, #1073741828	; 0x40000004
 9fc:	0013310c 	andseq	r3, r3, ip, lsl #2
 a00:	012e3600 			; <UNDEFINED> instruction: 0x012e3600
 a04:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
 a08:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 a0c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
 a10:	00001301 	andeq	r1, r0, r1, lsl #6
 a14:	03000537 	movweq	r0, #1335	; 0x537
 a18:	3b0b3a0e 	blcc	2cf258 <_Min_Stack_Size+0x2cee58>
 a1c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 a20:	38000013 	stmdacc	r0, {r0, r1, r4}
 a24:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 974 <_Min_Stack_Size+0x574>
 a28:	0b3a0e03 	bleq	e8423c <_Min_Stack_Size+0xe83e3c>
 a2c:	0b39053b 	bleq	e41f20 <_Min_Stack_Size+0xe41b20>
 a30:	01110c27 	tsteq	r1, r7, lsr #24
 a34:	06400112 			; <UNDEFINED> instruction: 0x06400112
 a38:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
 a3c:	39000013 	stmdbcc	r0, {r0, r1, r4}
 a40:	08030005 	stmdaeq	r3, {r0, r2}
 a44:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 a48:	13490b39 	movtne	r0, #39737	; 0x9b39
 a4c:	00000a02 	andeq	r0, r0, r2, lsl #20
 a50:	3f012e3a 	svccc	0x00012e3a
 a54:	3a0e030c 	bcc	38168c <_Min_Stack_Size+0x38128c>
 a58:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 a5c:	200c270b 	andcs	r2, ip, fp, lsl #14
 a60:	0013010b 	andseq	r0, r3, fp, lsl #2
 a64:	012e3b00 			; <UNDEFINED> instruction: 0x012e3b00
 a68:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
 a6c:	0b3b0b3a 	bleq	ec375c <_Min_Stack_Size+0xec335c>
 a70:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
 a74:	01111349 	tsteq	r1, r9, asr #6
 a78:	06400112 			; <UNDEFINED> instruction: 0x06400112
 a7c:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
 a80:	3c000013 	stccc	0, cr0, [r0], {19}
 a84:	08030005 	stmdaeq	r3, {r0, r2}
 a88:	0b3b0b3a 	bleq	ec3778 <_Min_Stack_Size+0xec3378>
 a8c:	13490b39 	movtne	r0, #39737	; 0x9b39
 a90:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
 a94:	3d000006 	stccc	0, cr0, [r0, #-24]	; 0xffffffe8
 a98:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
 a9c:	0b3b0b3a 	bleq	ec378c <_Min_Stack_Size+0xec338c>
 aa0:	13490b39 	movtne	r0, #39737	; 0x9b39
 aa4:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
 aa8:	3e000006 	cdpcc	0, 0, cr0, cr0, cr6, {0}
 aac:	1331011d 	teqne	r1, #1073741831	; 0x40000007
 ab0:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
 ab4:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
 ab8:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
 abc:	000b570b 	andeq	r5, fp, fp, lsl #14
 ac0:	012e3f00 			; <UNDEFINED> instruction: 0x012e3f00
 ac4:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
 ac8:	0b3b0b3a 	bleq	ec37b8 <_Min_Stack_Size+0xec33b8>
 acc:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
 ad0:	01111349 	tsteq	r1, r9, asr #6
 ad4:	0a400112 	beq	1000f24 <_Min_Stack_Size+0x1000b24>
 ad8:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
 adc:	40000013 	andmi	r0, r0, r3, lsl r0
 ae0:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
 ae4:	0b3b0b3a 	bleq	ec37d4 <_Min_Stack_Size+0xec33d4>
 ae8:	13490b39 	movtne	r0, #39737	; 0x9b39
 aec:	00000a02 	andeq	r0, r0, r2, lsl #20
 af0:	03012e41 	movweq	r2, #7745	; 0x1e41
 af4:	3b0b3a0e 	blcc	2cf334 <_Min_Stack_Size+0x2cef34>
 af8:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 afc:	010b200c 	tsteq	fp, ip
 b00:	42000013 	andmi	r0, r0, #19
 b04:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
 b08:	0b3b0b3a 	bleq	ec37f8 <_Min_Stack_Size+0xec33f8>
 b0c:	13490b39 	movtne	r0, #39737	; 0x9b39
 b10:	2e430000 	cdpcs	0, 4, cr0, cr3, cr0, {0}
 b14:	030c3f01 	movweq	r3, #52993	; 0xcf01
 b18:	3b0b3a0e 	blcc	2cf358 <_Min_Stack_Size+0x2cef58>
 b1c:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 b20:	1201110c 	andne	r1, r1, #12, 2
 b24:	970a4001 	strls	r4, [sl, -r1]
 b28:	13010c42 	movwne	r0, #7234	; 0x1c42
 b2c:	26440000 	strbcs	r0, [r4], -r0
 b30:	45000000 	strmi	r0, [r0, #-0]
 b34:	0c3f012e 	ldfeqs	f0, [pc], #-184	; a84 <_Min_Stack_Size+0x684>
 b38:	0b3a0e03 	bleq	e8434c <_Min_Stack_Size+0xe83f4c>
 b3c:	0b390b3b 	bleq	e43830 <_Min_Stack_Size+0xe43430>
 b40:	01110c27 	tsteq	r1, r7, lsr #24
 b44:	06400112 			; <UNDEFINED> instruction: 0x06400112
 b48:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
 b4c:	46000013 			; <UNDEFINED> instruction: 0x46000013
 b50:	1331011d 	teqne	r1, #1073741831	; 0x40000007
 b54:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
 b58:	5806550b 	stmdapl	r6, {r0, r1, r3, r8, sl, ip, lr}
 b5c:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
 b60:	0013010b 	andseq	r0, r3, fp, lsl #2
 b64:	00344700 	eorseq	r4, r4, r0, lsl #14
 b68:	0b3a0e03 	bleq	e8437c <_Min_Stack_Size+0xe83f7c>
 b6c:	0b390b3b 	bleq	e43860 <_Min_Stack_Size+0xe43460>
 b70:	06021349 	streq	r1, [r2], -r9, asr #6
 b74:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
 b78:	011d4800 	tsteq	sp, r0, lsl #16
 b7c:	01521331 	cmpeq	r2, r1, lsr r3
 b80:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
 b84:	58011201 	stmdapl	r1, {r0, r9, ip}
 b88:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
 b8c:	0013010b 	andseq	r0, r3, fp, lsl #2
 b90:	012e4900 			; <UNDEFINED> instruction: 0x012e4900
 b94:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
 b98:	0b3b0b3a 	bleq	ec3888 <_Min_Stack_Size+0xec3488>
 b9c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
 ba0:	13010b20 	movwne	r0, #6944	; 0x1b20
 ba4:	054a0000 	strbeq	r0, [sl, #-0]
 ba8:	3a080300 	bcc	2017b0 <_Min_Stack_Size+0x2013b0>
 bac:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 bb0:	0013490b 	andseq	r4, r3, fp, lsl #18
 bb4:	00344b00 	eorseq	r4, r4, r0, lsl #22
 bb8:	0b3a0803 	bleq	e82bcc <_Min_Stack_Size+0xe827cc>
 bbc:	0b390b3b 	bleq	e438b0 <_Min_Stack_Size+0xe434b0>
 bc0:	06021349 	streq	r1, [r2], -r9, asr #6
 bc4:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
 bc8:	012e4c00 			; <UNDEFINED> instruction: 0x012e4c00
 bcc:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
 bd0:	0b3b0b3a 	bleq	ec38c0 <_Min_Stack_Size+0xec34c0>
 bd4:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
 bd8:	0b201349 	bleq	805904 <_Min_Stack_Size+0x805504>
 bdc:	00001301 	andeq	r1, r0, r1, lsl #6
 be0:	03012e4d 	movweq	r2, #7757	; 0x1e4d
 be4:	3b0b3a0e 	blcc	2cf424 <_Min_Stack_Size+0x2cf024>
 be8:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 bec:	2013490c 	andscs	r4, r3, ip, lsl #18
 bf0:	0013010b 	andseq	r0, r3, fp, lsl #2
 bf4:	012e4e00 			; <UNDEFINED> instruction: 0x012e4e00
 bf8:	0b3a0e03 	bleq	e8440c <_Min_Stack_Size+0xe8400c>
 bfc:	0b39053b 	bleq	e420f0 <_Min_Stack_Size+0xe41cf0>
 c00:	0b200c27 	bleq	803ca4 <_Min_Stack_Size+0x8038a4>
 c04:	00001301 	andeq	r1, r0, r1, lsl #6
 c08:	31012e4f 	tstcc	r1, pc, asr #28
 c0c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
 c10:	970a4001 	strls	r4, [sl, -r1]
 c14:	13010c42 	movwne	r0, #7234	; 0x1c42
 c18:	05500000 	ldrbeq	r0, [r0, #-0]
 c1c:	02133100 	andseq	r3, r3, #0, 2
 c20:	5100000a 	tstpl	r0, sl
 c24:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; b74 <_Min_Stack_Size+0x774>
 c28:	40870c3c 	addmi	r0, r7, ip, lsr ip
 c2c:	3a0e030e 	bcc	38186c <_Min_Stack_Size+0x38146c>
 c30:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 c34:	0000000b 	andeq	r0, r0, fp
 c38:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
 c3c:	030b130e 	movweq	r1, #45838	; 0xb30e
 c40:	110e1b0e 	tstne	lr, lr, lsl #22
 c44:	10061201 	andne	r1, r6, r1, lsl #4
 c48:	02000017 	andeq	r0, r0, #23
 c4c:	0b0b0024 	bleq	2c0ce4 <_Min_Stack_Size+0x2c08e4>
 c50:	0e030b3e 	vmoveq.16	d3[0], r0
 c54:	24030000 	strcs	r0, [r3], #-0
 c58:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 c5c:	0008030b 	andeq	r0, r8, fp, lsl #6
 c60:	00160400 	andseq	r0, r6, r0, lsl #8
 c64:	0b3a0e03 	bleq	e84478 <_Min_Stack_Size+0xe84078>
 c68:	0b390b3b 	bleq	e4395c <_Min_Stack_Size+0xe4355c>
 c6c:	00001349 	andeq	r1, r0, r9, asr #6
 c70:	49010105 	stmdbmi	r1, {r0, r2, r8}
 c74:	00130113 	andseq	r0, r3, r3, lsl r1
 c78:	00210600 	eoreq	r0, r1, r0, lsl #12
 c7c:	0f070000 	svceq	0x00070000
 c80:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
 c84:	08000013 	stmdaeq	r0, {r0, r1, r4}
 c88:	19270015 	stmdbne	r7!, {r0, r2, r4}
 c8c:	34090000 	strcc	r0, [r9], #-0
 c90:	3a0e0300 	bcc	381898 <_Min_Stack_Size+0x381498>
 c94:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 c98:	3f13490b 	svccc	0x0013490b
 c9c:	00193c19 	andseq	r3, r9, r9, lsl ip
 ca0:	012e0a00 			; <UNDEFINED> instruction: 0x012e0a00
 ca4:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 ca8:	0b3b0b3a 	bleq	ec3998 <_Min_Stack_Size+0xec3598>
 cac:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
 cb0:	06120111 			; <UNDEFINED> instruction: 0x06120111
 cb4:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
 cb8:	00130119 	andseq	r0, r3, r9, lsl r1
 cbc:	00340b00 	eorseq	r0, r4, r0, lsl #22
 cc0:	0b3a0e03 	bleq	e844d4 <_Min_Stack_Size+0xe840d4>
 cc4:	0b390b3b 	bleq	e439b8 <_Min_Stack_Size+0xe435b8>
 cc8:	17021349 	strne	r1, [r2, -r9, asr #6]
 ccc:	001742b7 			; <UNDEFINED> instruction: 0x001742b7
 cd0:	00340c00 	eorseq	r0, r4, r0, lsl #24
 cd4:	0b3a0803 	bleq	e82ce8 <_Min_Stack_Size+0xe828e8>
 cd8:	0b390b3b 	bleq	e439cc <_Min_Stack_Size+0xe435cc>
 cdc:	17021349 	strne	r1, [r2, -r9, asr #6]
 ce0:	001742b7 			; <UNDEFINED> instruction: 0x001742b7
 ce4:	82890d00 	addhi	r0, r9, #0, 26
 ce8:	01110001 	tsteq	r1, r1
 cec:	00001331 	andeq	r1, r0, r1, lsr r3
 cf0:	3f002e0e 	svccc	0x00002e0e
 cf4:	6e193c19 	mrcvs	12, 0, r3, cr9, cr9, {0}
 cf8:	3a0e030e 	bcc	381938 <_Min_Stack_Size+0x381538>
 cfc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 d00:	0000000b 	andeq	r0, r0, fp

Disassembly of section .debug_loc:

00000000 <.debug_loc>:
       0:	08000e80 	stmdaeq	r0, {r7, r9, sl, fp}
       4:	08000e82 	stmdaeq	r0, {r1, r7, r9, sl, fp}
       8:	007d0002 	rsbseq	r0, sp, r2
       c:	08000e82 	stmdaeq	r0, {r1, r7, r9, sl, fp}
      10:	08000f04 	stmdaeq	r0, {r2, r8, r9, sl, fp}
      14:	087d0002 	ldmdaeq	sp!, {r1}^
	...
      20:	00010100 	andeq	r0, r1, r0, lsl #2
      24:	00000000 	andeq	r0, r0, r0
      28:	08000e96 	stmdaeq	r0, {r1, r2, r4, r7, r9, sl, fp}
      2c:	08000ea2 	stmdaeq	r0, {r1, r5, r7, r9, sl, fp}
      30:	a2520001 	subsge	r0, r2, #1
      34:	a608000e 	strge	r0, [r8], -lr
      38:	0808000e 	stmdaeq	r8, {r1, r2, r3}
      3c:	11007200 	mrsne	r7, R8_usr
      40:	1a4fffff 	bne	1400044 <_Min_Stack_Size+0x13ffc44>
      44:	000ea69f 	muleq	lr, pc, r6	; <UNPREDICTABLE>
      48:	000eaa08 	andeq	sl, lr, r8, lsl #20
      4c:	52000108 	andpl	r0, r0, #8, 2
      50:	08000eaa 	stmdaeq	r0, {r1, r3, r5, r7, r9, sl, fp}
      54:	08000eb4 	stmdaeq	r0, {r2, r4, r5, r7, r9, sl, fp}
      58:	08730002 	ldmdaeq	r3!, {r1}^
	...
      64:	00010100 	andeq	r0, r1, r0, lsl #2
      68:	00000000 	andeq	r0, r0, r0
      6c:	08000eaa 	stmdaeq	r0, {r1, r3, r5, r7, r9, sl, fp}
      70:	08000eb6 	stmdaeq	r0, {r1, r2, r4, r5, r7, r9, sl, fp}
      74:	b6520001 	ldrblt	r0, [r2], -r1
      78:	ba08000e 	blt	2000b8 <_Min_Stack_Size+0x1ffcb8>
      7c:	0808000e 	stmdaeq	r8, {r1, r2, r3}
      80:	11007200 	mrsne	r7, R8_usr
      84:	1a73ffff 	bne	1d00088 <_Min_Stack_Size+0x1cffc88>
      88:	000eba9f 	muleq	lr, pc, sl	; <UNPREDICTABLE>
      8c:	000ebe08 	andeq	fp, lr, r8, lsl #28
      90:	52000108 	andpl	r0, r0, #8, 2
      94:	08000ebe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r7, r9, sl, fp}
      98:	08000ec6 	stmdaeq	r0, {r1, r2, r6, r7, r9, sl, fp}
      9c:	08730002 	ldmdaeq	r3!, {r1}^
	...
      a8:	00010100 	andeq	r0, r1, r0, lsl #2
      ac:	0ec00000 	cdpeq	0, 12, cr0, cr0, cr0, {0}
      b0:	0ec80800 	cdpeq	8, 12, cr0, cr8, cr0, {0}
      b4:	00010800 	andeq	r0, r1, r0, lsl #16
      b8:	000ec851 	andeq	ip, lr, r1, asr r8
      bc:	000ecc08 	andeq	ip, lr, r8, lsl #24
      c0:	71000a08 	tstvc	r0, r8, lsl #20
      c4:	ffff1100 			; <UNDEFINED> instruction: 0xffff1100
      c8:	1a7f9fff 	bne	1fe80cc <_Min_Stack_Size+0x1fe7ccc>
      cc:	000ecc9f 	muleq	lr, pc, ip	; <UNPREDICTABLE>
      d0:	000ee108 	andeq	lr, lr, r8, lsl #2
      d4:	51000108 	tstpl	r0, r8, lsl #2
	...
      e0:	00010100 	andeq	r0, r1, r0, lsl #2
      e4:	0ed00000 	cdpeq	0, 13, cr0, cr0, cr0, {0}
      e8:	0ed80800 	cdpeq	8, 13, cr0, cr8, cr0, {0}
      ec:	00010800 	andeq	r0, r1, r0, lsl #16
      f0:	000ed852 	andeq	sp, lr, r2, asr r8
      f4:	000edc08 	andeq	sp, lr, r8, lsl #24
      f8:	72000708 	andvc	r0, r0, #8, 14	; 0x200000
      fc:	f3ff0b00 	vtbl.8	d16, {d15-d18}, d0
     100:	0edc9f1a 	mrceq	15, 6, r9, cr12, cr10, {0}
     104:	0ee10800 	cdpeq	8, 14, cr0, cr1, cr0, {0}
     108:	00010800 	andeq	r0, r1, r0, lsl #16
     10c:	00000052 	andeq	r0, r0, r2, asr r0
     110:	00000000 	andeq	r0, r0, r0
     114:	02020000 	andeq	r0, r2, #0
     118:	58000000 	stmdapl	r0, {}	; <UNPREDICTABLE>
     11c:	58080003 	stmdapl	r8, {r0, r1}
     120:	01080003 	tsteq	r8, r3
     124:	03585000 	cmpeq	r8, #0
     128:	035c0800 	cmpeq	ip, #0, 16
     12c:	00010800 	andeq	r0, r1, r0, lsl #16
     130:	00035c50 	andeq	r5, r3, r0, asr ip
     134:	00036408 	andeq	r6, r3, r8, lsl #8
     138:	70000308 	andvc	r0, r0, r8, lsl #6
     13c:	00009f01 	andeq	r9, r0, r1, lsl #30
     140:	00000000 	andeq	r0, r0, r0
     144:	00010000 	andeq	r0, r1, r0
     148:	00000000 	andeq	r0, r0, r0
     14c:	03160000 	tsteq	r6, #0
     150:	031a0800 	tsteq	sl, #0, 16
     154:	00020800 	andeq	r0, r2, r0, lsl #16
     158:	031a9f30 	tsteq	sl, #48, 30	; 0xc0
     15c:	03220800 			; <UNDEFINED> instruction: 0x03220800
     160:	00070800 	andeq	r0, r7, r0, lsl #16
     164:	720fff0a 	andvc	pc, pc, #10, 30	; 0x28
     168:	229f1c00 	addscs	r1, pc, #0, 24
     16c:	24080003 	strcs	r0, [r8], #-3
     170:	07080003 	streq	r0, [r8, -r3]
     174:	10000a00 	andne	r0, r0, r0, lsl #20
     178:	9f1c0072 	svcls	0x001c0072
     17c:	0800032c 	stmdaeq	r0, {r2, r3, r5, r8, r9}
     180:	08000354 	stmdaeq	r0, {r2, r4, r6, r8, r9}
     184:	ff0a0004 			; <UNDEFINED> instruction: 0xff0a0004
     188:	00009f1f 	andeq	r9, r0, pc, lsl pc
	...
     194:	03100000 	tsteq	r0, #0
     198:	031a0800 	tsteq	sl, #0, 16
     19c:	00010800 	andeq	r0, r1, r0, lsl #16
     1a0:	00031a52 	andeq	r1, r3, r2, asr sl
     1a4:	00033408 	andeq	r3, r3, r8, lsl #8
     1a8:	73000208 	movwvc	r0, #520	; 0x208
     1ac:	00000008 	andeq	r0, r0, r8
	...
     1bc:	0001e800 	andeq	lr, r1, r0, lsl #16
     1c0:	00020a08 	andeq	r0, r2, r8, lsl #20
     1c4:	50000108 	andpl	r0, r0, r8, lsl #2
     1c8:	0800020a 	stmdaeq	r0, {r1, r3, r9}
     1cc:	0800028e 	stmdaeq	r0, {r1, r2, r3, r7, r9}
     1d0:	01f30004 	mvnseq	r0, r4
     1d4:	028e9f50 	addeq	r9, lr, #80, 30	; 0x140
     1d8:	02ea0800 	rsceq	r0, sl, #0, 16
     1dc:	00010800 	andeq	r0, r1, r0, lsl #16
     1e0:	0002ea50 	andeq	lr, r2, r0, asr sl
     1e4:	00030c08 	andeq	r0, r3, r8, lsl #24
     1e8:	f3000408 	vshl.u8	d0, d8, d0
     1ec:	009f5001 	addseq	r5, pc, r1
     1f0:	00000000 	andeq	r0, r0, r0
     1f4:	01000000 	mrseq	r0, (UNDEF: 0)
     1f8:	00000000 	andeq	r0, r0, r0
     1fc:	01000000 	mrseq	r0, (UNDEF: 0)
     200:	00000000 	andeq	r0, r0, r0
     204:	01010000 	mrseq	r0, (UNDEF: 1)
     208:	00000000 	andeq	r0, r0, r0
     20c:	01010000 	mrseq	r0, (UNDEF: 1)
     210:	00000000 	andeq	r0, r0, r0
     214:	00000100 	andeq	r0, r0, r0, lsl #2
     218:	f2000000 	vhadd.s8	d0, d0, d0
     21c:	f6080001 			; <UNDEFINED> instruction: 0xf6080001
     220:	02080001 	andeq	r0, r8, #1
     224:	f69f3000 			; <UNDEFINED> instruction: 0xf69f3000
     228:	fe080001 	cdp2	0, 0, cr0, cr8, cr1, {0}
     22c:	07080001 	streq	r0, [r8, -r1]
     230:	0fff0a00 	svceq	0x00ff0a00
     234:	9f1c0072 	svcls	0x001c0072
     238:	080001fe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, r8}
     23c:	08000200 	stmdaeq	r0, {r9}
     240:	000a0007 	andeq	r0, sl, r7
     244:	1c007210 	sfmne	f7, 4, [r0], {16}
     248:	00020c9f 	muleq	r2, pc, ip	; <UNPREDICTABLE>
     24c:	00020e08 	andeq	r0, r2, r8, lsl #28
     250:	0a000708 	beq	1e78 <_Min_Stack_Size+0x1a78>
     254:	00730fff 	ldrshteq	r0, [r3], #-255	; 0xffffff01
     258:	02449f1c 	subeq	r9, r4, #28, 30	; 0x70
     25c:	024a0800 	subeq	r0, sl, #0, 16
     260:	00020800 	andeq	r0, r2, r0, lsl #16
     264:	024a9f30 	subeq	r9, sl, #48, 30	; 0xc0
     268:	02500800 	subseq	r0, r0, #0, 16
     26c:	00070800 	andeq	r0, r7, r0, lsl #16
     270:	730fff0a 	movwvc	pc, #65290	; 0xff0a	; <UNPREDICTABLE>
     274:	509f1c00 	addspl	r1, pc, r0, lsl #24
     278:	52080002 	andpl	r0, r8, #2
     27c:	07080002 	streq	r0, [r8, -r2]
     280:	10000a00 	andne	r0, r0, r0, lsl #20
     284:	9f1c0073 	svcls	0x001c0073
     288:	08000264 	stmdaeq	r0, {r2, r5, r6, r9}
     28c:	08000276 	stmdaeq	r0, {r1, r2, r4, r5, r6, r9}
     290:	ff0a0004 			; <UNDEFINED> instruction: 0xff0a0004
     294:	02769f1f 	rsbseq	r9, r6, #31, 30	; 0x7c
     298:	027a0800 	rsbseq	r0, sl, #0, 16
     29c:	00020800 	andeq	r0, r2, r0, lsl #16
     2a0:	027a9f30 	rsbseq	r9, sl, #48, 30	; 0xc0
     2a4:	02840800 	addeq	r0, r4, #0, 16
     2a8:	00070800 	andeq	r0, r7, r0, lsl #16
     2ac:	730fff0a 	movwvc	pc, #65290	; 0xff0a	; <UNPREDICTABLE>
     2b0:	849f1c00 	ldrhi	r1, [pc], #3072	; 2b8 <_Min_Heap_Size+0x2b8>
     2b4:	86080002 	strhi	r0, [r8], -r2
     2b8:	07080002 	streq	r0, [r8, -r2]
     2bc:	10000a00 	andne	r0, r0, r0, lsl #20
     2c0:	9f1c0073 	svcls	0x001c0073
     2c4:	0800028e 	stmdaeq	r0, {r1, r2, r3, r7, r9}
     2c8:	080002c8 	stmdaeq	r0, {r3, r6, r7, r9}
     2cc:	ff0a0004 			; <UNDEFINED> instruction: 0xff0a0004
     2d0:	02c89f1f 	sbceq	r9, r8, #31, 30	; 0x7c
     2d4:	02ce0800 	sbceq	r0, lr, #0, 16
     2d8:	00020800 	andeq	r0, r2, r0, lsl #16
     2dc:	02ce9f30 	sbceq	r9, lr, #48, 30	; 0xc0
     2e0:	02d40800 	sbcseq	r0, r4, #0, 16
     2e4:	00070800 	andeq	r0, r7, r0, lsl #16
     2e8:	730fff0a 	movwvc	pc, #65290	; 0xff0a	; <UNPREDICTABLE>
     2ec:	d49f1c00 	ldrle	r1, [pc], #3072	; 2f4 <_Min_Heap_Size+0x2f4>
     2f0:	d6080002 	strle	r0, [r8], -r2
     2f4:	07080002 	streq	r0, [r8, -r2]
     2f8:	10000a00 	andne	r0, r0, r0, lsl #20
     2fc:	9f1c0073 	svcls	0x001c0073
     300:	080002e6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r9}
     304:	080002ea 	stmdaeq	r0, {r1, r3, r5, r6, r7, r9}
     308:	9f300002 	svcls	0x00300002
     30c:	080002ea 	stmdaeq	r0, {r1, r3, r5, r6, r7, r9}
     310:	080002f0 	stmdaeq	r0, {r4, r5, r6, r7, r9}
     314:	ff0a0007 			; <UNDEFINED> instruction: 0xff0a0007
     318:	1c00730f 	stcne	3, cr7, [r0], {15}
     31c:	0002f09f 	muleq	r2, pc, r0	; <UNPREDICTABLE>
     320:	0002f208 	andeq	pc, r2, r8, lsl #4
     324:	0a000708 	beq	1f4c <_Min_Stack_Size+0x1b4c>
     328:	00731000 	rsbseq	r1, r3, r0
     32c:	00009f1c 	andeq	r9, r0, ip, lsl pc
	...
     338:	01000000 	mrseq	r0, (UNDEF: 0)
     33c:	00020201 	andeq	r0, r2, r1, lsl #4
     340:	03010100 	movweq	r0, #4352	; 0x1100
     344:	00000003 	andeq	r0, r0, r3
     348:	00010100 	andeq	r0, r1, r0, lsl #2
     34c:	00000000 	andeq	r0, r0, r0
     350:	00010100 	andeq	r0, r1, r0, lsl #2
     354:	00000000 	andeq	r0, r0, r0
     358:	01ec0000 	mvneq	r0, r0
     35c:	01f60800 	mvnseq	r0, r0, lsl #16
     360:	00010800 	andeq	r0, r1, r0, lsl #16
     364:	0001f652 	andeq	pc, r1, r2, asr r6	; <UNPREDICTABLE>
     368:	00020c08 	andeq	r0, r2, r8, lsl #24
     36c:	73000208 	movwvc	r0, #520	; 0x208
     370:	00022c08 	andeq	r2, r2, r8, lsl #24
     374:	00023208 	andeq	r3, r2, r8, lsl #4
     378:	53000108 	movwpl	r0, #264	; 0x108
     37c:	08000232 	stmdaeq	r0, {r1, r4, r5, r9}
     380:	08000232 	stmdaeq	r0, {r1, r4, r5, r9}
     384:	00730007 	rsbseq	r0, r3, r7
     388:	21243c40 			; <UNDEFINED> instruction: 0x21243c40
     38c:	0002329f 	muleq	r2, pc, r2	; <UNPREDICTABLE>
     390:	00023608 	andeq	r3, r2, r8, lsl #12
     394:	73000708 	movwvc	r0, #1800	; 0x708
     398:	24404100 	strbcs	r4, [r0], #-256	; 0xffffff00
     39c:	02369f21 	eorseq	r9, r6, #33, 30	; 0x84
     3a0:	02360800 	eorseq	r0, r6, #0, 16
     3a4:	00010800 	andeq	r0, r1, r0, lsl #16
     3a8:	00023653 	andeq	r3, r2, r3, asr r6
     3ac:	00023608 	andeq	r3, r2, r8, lsl #12
     3b0:	73000708 	movwvc	r0, #1800	; 0x708
     3b4:	ff0f0b00 			; <UNDEFINED> instruction: 0xff0f0b00
     3b8:	02369f1a 	eorseq	r9, r6, #26, 30	; 0x68
     3bc:	023a0800 	eorseq	r0, sl, #0, 16
     3c0:	00070800 	andeq	r0, r7, r0, lsl #16
     3c4:	0f0b0073 	svceq	0x000b0073
     3c8:	3a9f1ac7 	bcc	fe7c6eec <BootRAM+0xd73768d>
     3cc:	4a080002 	bmi	2003dc <_Min_Stack_Size+0x1fffdc>
     3d0:	01080002 	tsteq	r8, r2
     3d4:	025e5100 	subseq	r5, lr, #0, 2
     3d8:	025e0800 	subseq	r0, lr, #0, 16
     3dc:	00010800 	andeq	r0, r1, r0, lsl #16
     3e0:	00025e53 	andeq	r5, r2, r3, asr lr
     3e4:	00026208 	andeq	r6, r2, r8, lsl #4
     3e8:	73000708 	movwvc	r0, #1800	; 0x708
     3ec:	243f4000 	ldrtcs	r4, [pc], #-0	; 3f4 <_Min_Heap_Size+0x3f4>
     3f0:	02629f21 	rsbeq	r9, r2, #33, 30	; 0x84
     3f4:	02640800 	rsbeq	r0, r4, #0, 16
     3f8:	00010800 	andeq	r0, r1, r0, lsl #16
     3fc:	00026453 	andeq	r6, r2, r3, asr r4
     400:	00026c08 	andeq	r6, r2, r8, lsl #24
     404:	71000208 	tstvc	r0, r8, lsl #4
     408:	00026e08 	andeq	r6, r2, r8, lsl #28
     40c:	00026e08 	andeq	r6, r2, r8, lsl #28
     410:	53000108 	movwpl	r0, #264	; 0x108
     414:	0800026e 	stmdaeq	r0, {r1, r2, r3, r5, r6, r9}
     418:	08000274 	stmdaeq	r0, {r2, r4, r5, r6, r9}
     41c:	00730006 	rsbseq	r0, r3, r6
     420:	9f1afc09 	svcls	0x001afc09
     424:	08000274 	stmdaeq	r0, {r2, r4, r5, r6, r9}
     428:	0800027a 	stmdaeq	r0, {r1, r3, r4, r5, r6, r9}
     42c:	7a530001 	bvc	14c0438 <_Min_Stack_Size+0x14c0038>
     430:	8e080002 	cdphi	0, 0, cr0, cr8, cr2, {0}
     434:	02080002 	andeq	r0, r8, #2
     438:	8e087100 	adfhie	f7, f0, f0
     43c:	96080002 	strls	r0, [r8], -r2
     440:	02080002 	andeq	r0, r8, #2
     444:	00087300 	andeq	r7, r8, r0, lsl #6
     448:	00000000 	andeq	r0, r0, r0
     44c:	b4000000 	strlt	r0, [r0], #-0
     450:	b6000004 	strlt	r0, [r0], -r4
     454:	02000004 	andeq	r0, r0, #4
     458:	b6007d00 	strlt	r7, [r0], -r0, lsl #26
     45c:	0e000004 	cdpeq	0, 0, cr0, cr0, cr4, {0}
     460:	02000005 	andeq	r0, r0, #5
     464:	000c7d00 	andeq	r7, ip, r0, lsl #26
	...
     470:	b4000000 	strlt	r0, [r0], #-0
     474:	c4000004 	strgt	r0, [r0], #-4
     478:	01000004 	tsteq	r0, r4
     47c:	04c45000 	strbeq	r5, [r4], #0
     480:	050e0000 	streq	r0, [lr, #-0]
     484:	00040000 	andeq	r0, r4, r0
     488:	9f5001f3 	svcls	0x005001f3
	...
     498:	04b40000 	ldrteq	r0, [r4], #0
     49c:	04dc0000 	ldrbeq	r0, [ip], #0
     4a0:	00010000 	andeq	r0, r1, r0
     4a4:	0004dc51 	andeq	sp, r4, r1, asr ip
     4a8:	0004e000 	andeq	lr, r4, r0
     4ac:	71000300 	mrsvc	r0, LR_irq
     4b0:	04e09f02 	strbteq	r9, [r0], #3842	; 0xf02
     4b4:	050e0000 	streq	r0, [lr, #-0]
     4b8:	00040000 	andeq	r0, r4, r0
     4bc:	9f5101f3 	svcls	0x005101f3
	...
     4cc:	000004c0 	andeq	r0, r0, r0, asr #9
     4d0:	000004cc 	andeq	r0, r0, ip, asr #9
     4d4:	cc520001 	mrrcgt	0, 0, r0, r2, cr1
     4d8:	ee000004 	cdp	0, 0, cr0, cr0, cr4, {0}
     4dc:	0b000004 	bleq	4f4 <_Min_Stack_Size+0xf4>
     4e0:	33007300 	movwcc	r7, #768	; 0x300
     4e4:	c0802324 	addgt	r2, r0, r4, lsr #6
     4e8:	9f048081 	svcls	0x00048081
	...
     4f4:	04c80000 	strbeq	r0, [r8], #0
     4f8:	050e0000 	streq	r0, [lr, #-0]
     4fc:	00010000 	andeq	r0, r1, r0
     500:	00000050 	andeq	r0, r0, r0, asr r0
     504:	00000000 	andeq	r0, r0, r0
     508:	00000100 	andeq	r0, r0, r0, lsl #2
     50c:	ca010000 	bgt	40514 <_Min_Stack_Size+0x40114>
     510:	da000004 	ble	528 <_Min_Stack_Size+0x128>
     514:	05000004 	streq	r0, [r0, #-4]
     518:	31017000 	mrscc	r7, (UNDEF: 1)
     51c:	04da9f26 	ldrbeq	r9, [sl], #3878	; 0xf26
     520:	04e00000 	strbteq	r0, [r0], #0
     524:	00010000 	andeq	r0, r1, r0
     528:	0004e054 	andeq	lr, r4, r4, asr r0
     52c:	00050c00 	andeq	r0, r5, r0, lsl #24
     530:	70000500 	andvc	r0, r0, r0, lsl #10
     534:	9f263101 	svcls	0x00263101
	...
     544:	04d80000 	ldrbeq	r0, [r8], #0
     548:	04e40000 	strbteq	r0, [r4], #0
     54c:	00010000 	andeq	r0, r1, r0
     550:	0004e452 	andeq	lr, r4, r2, asr r4
     554:	0004ea00 	andeq	lr, r4, r0, lsl #20
     558:	72000300 	andvc	r0, r0, #0, 6
     55c:	04ea9f7c 	strbteq	r9, [sl], #3964	; 0xf7c
     560:	04fa0000 	ldrbteq	r0, [sl], #0
     564:	00010000 	andeq	r0, r1, r0
     568:	00000052 	andeq	r0, r0, r2, asr r0
     56c:	00000000 	andeq	r0, r0, r0
     570:	d8000200 	stmdale	r0, {r9}
     574:	e0000004 	and	r0, r0, r4
     578:	02000004 	andeq	r0, r0, #4
     57c:	009f3000 	addseq	r3, pc, r0
     580:	00000000 	andeq	r0, r0, r0
     584:	04000000 	streq	r0, [r0], #-0
     588:	06000004 	streq	r0, [r0], -r4
     58c:	02000004 	andeq	r0, r0, #4
     590:	06007d00 	streq	r7, [r0], -r0, lsl #26
     594:	58000004 	stmdapl	r0, {r2}
     598:	02000004 	andeq	r0, r0, #4
     59c:	00147d00 	andseq	r7, r4, r0, lsl #26
	...
     5ac:	00040400 	andeq	r0, r4, r0, lsl #8
     5b0:	00042a00 	andeq	r2, r4, r0, lsl #20
     5b4:	50000100 	andpl	r0, r0, r0, lsl #2
     5b8:	0000042a 	andeq	r0, r0, sl, lsr #8
     5bc:	0000044c 	andeq	r0, r0, ip, asr #8
     5c0:	01f30004 	mvnseq	r0, r4
     5c4:	044c9f50 	strbeq	r9, [ip], #-3920	; 0xfffff0b0
     5c8:	04580000 	ldrbeq	r0, [r8], #-0
     5cc:	00010000 	andeq	r0, r1, r0
     5d0:	00000050 	andeq	r0, r0, r0, asr r0
     5d4:	00000000 	andeq	r0, r0, r0
     5d8:	12000000 	andne	r0, r0, #0
     5dc:	58000004 	stmdapl	r0, {r2}
     5e0:	01000004 	tsteq	r0, r4
     5e4:	00005400 	andeq	r5, r0, r0, lsl #8
	...
     5f0:	00000420 	andeq	r0, r0, r0, lsr #8
     5f4:	00000458 	andeq	r0, r0, r8, asr r4
     5f8:	00560001 	subseq	r0, r6, r1
     5fc:	00000000 	andeq	r0, r0, r0
     600:	01000000 	mrseq	r0, (UNDEF: 0)
     604:	00042000 	andeq	r2, r4, r0
     608:	00045800 	andeq	r5, r4, r0, lsl #16
     60c:	51000100 	mrspl	r0, (UNDEF: 16)
	...
     618:	00020200 	andeq	r0, r2, r0, lsl #4
     61c:	04220000 	strteq	r0, [r2], #-0
     620:	04220000 	strteq	r0, [r2], #-0
     624:	00010000 	andeq	r0, r1, r0
     628:	00042253 	andeq	r2, r4, r3, asr r2
     62c:	00043800 	andeq	r3, r4, r0, lsl #16
     630:	75000800 	strvc	r0, [r0, #-2048]	; 0xfffff800
     634:	73243200 			; <UNDEFINED> instruction: 0x73243200
     638:	4c9f2200 	lfmmi	f2, 4, [pc], {0}
     63c:	54000004 	strpl	r0, [r0], #-4
     640:	08000004 	stmdaeq	r0, {r2}
     644:	32007500 	andcc	r7, r0, #0, 10
     648:	22007324 	andcs	r7, r0, #36, 6	; 0x90000000
     64c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     650:	00000000 	andeq	r0, r0, r0
     654:	00000200 	andeq	r0, r0, r0, lsl #4
     658:	00042200 	andeq	r2, r4, r0, lsl #4
     65c:	00045400 	andeq	r5, r4, r0, lsl #8
     660:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
     664:	00000454 	andeq	r0, r0, r4, asr r4
     668:	00000456 	andeq	r0, r0, r6, asr r4
     66c:	01750003 	cmneq	r5, r3
     670:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     674:	00000000 	andeq	r0, r0, r0
     678:	0002dc00 	andeq	sp, r2, r0, lsl #24
     67c:	0002de00 	andeq	sp, r2, r0, lsl #28
     680:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     684:	0002de00 	andeq	sp, r2, r0, lsl #28
     688:	00040400 	andeq	r0, r4, r0, lsl #8
     68c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     690:	00000010 	andeq	r0, r0, r0, lsl r0
     694:	00000000 	andeq	r0, r0, r0
     698:	00000200 	andeq	r0, r0, r0, lsl #4
     69c:	00030400 	andeq	r0, r3, r0, lsl #8
     6a0:	00030800 	andeq	r0, r3, r0, lsl #16
     6a4:	30000200 	andcc	r0, r0, r0, lsl #4
     6a8:	0003089f 	muleq	r3, pc, r8	; <UNPREDICTABLE>
     6ac:	00030a00 	andeq	r0, r3, r0, lsl #20
     6b0:	38000500 	stmdacc	r0, {r8, sl}
     6b4:	9f1c0074 	svcls	0x001c0074
	...
     6c0:	03540000 	cmpeq	r4, #0
     6c4:	03a00000 	moveq	r0, #0
     6c8:	00010000 	andeq	r0, r1, r0
     6cc:	00000055 	andeq	r0, r0, r5, asr r0
     6d0:	00000000 	andeq	r0, r0, r0
     6d4:	00019400 	andeq	r9, r1, r0, lsl #8
     6d8:	00019600 	andeq	r9, r1, r0, lsl #12
     6dc:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     6e0:	00019600 	andeq	r9, r1, r0, lsl #12
     6e4:	0002dc00 	andeq	sp, r2, r0, lsl #24
     6e8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     6ec:	00000014 	andeq	r0, r0, r4, lsl r0
     6f0:	00000000 	andeq	r0, r0, r0
     6f4:	02020000 	andeq	r0, r2, #0
     6f8:	00019400 	andeq	r9, r1, r0, lsl #8
     6fc:	0001b000 	andeq	fp, r1, r0
     700:	50000100 	andpl	r0, r0, r0, lsl #2
     704:	000001b0 			; <UNDEFINED> instruction: 0x000001b0
     708:	000002dc 	ldrdeq	r0, [r0], -ip
     70c:	00560001 	subseq	r0, r6, r1
	...
     724:	94000000 	strls	r0, [r0], #-0
     728:	f0000001 			; <UNDEFINED> instruction: 0xf0000001
     72c:	01000001 	tsteq	r0, r1
     730:	01f05100 	mvnseq	r5, r0, lsl #2
     734:	02460000 	subeq	r0, r6, #0
     738:	00040000 	andeq	r0, r4, r0
     73c:	9f5101f3 	svcls	0x005101f3
     740:	00000246 	andeq	r0, r0, r6, asr #4
     744:	0000024a 	andeq	r0, r0, sl, asr #4
     748:	4a510001 	bmi	1440754 <_Min_Stack_Size+0x1440354>
     74c:	4c000002 	stcmi	0, cr0, [r0], {2}
     750:	04000002 	streq	r0, [r0], #-2
     754:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
     758:	00024c9f 	muleq	r2, pc, ip	; <UNPREDICTABLE>
     75c:	00025000 	andeq	r5, r2, r0
     760:	51000100 	mrspl	r0, (UNDEF: 16)
     764:	00000250 	andeq	r0, r0, r0, asr r2
     768:	00000252 	andeq	r0, r0, r2, asr r2
     76c:	01f30004 	mvnseq	r0, r4
     770:	02529f51 	subseq	r9, r2, #324	; 0x144
     774:	02560000 	subseq	r0, r6, #0
     778:	00010000 	andeq	r0, r1, r0
     77c:	00025651 	andeq	r5, r2, r1, asr r6
     780:	0002dc00 	andeq	sp, r2, r0, lsl #24
     784:	f3000400 	vshl.u8	d0, d0, d0
     788:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
     798:	00019400 	andeq	r9, r1, r0, lsl #8
     79c:	00023800 	andeq	r3, r2, r0, lsl #16
     7a0:	52000100 	andpl	r0, r0, #0, 2
     7a4:	00000238 	andeq	r0, r0, r8, lsr r2
     7a8:	00000246 	andeq	r0, r0, r6, asr #4
     7ac:	01f30004 	mvnseq	r0, r4
     7b0:	02469f52 	subeq	r9, r6, #328	; 0x148
     7b4:	02dc0000 	sbcseq	r0, ip, #0
     7b8:	00010000 	andeq	r0, r1, r0
     7bc:	00000052 	andeq	r0, r0, r2, asr r0
	...
     7c8:	00019400 	andeq	r9, r1, r0, lsl #8
     7cc:	0001b000 	andeq	fp, r1, r0
     7d0:	53000100 	movwpl	r0, #256	; 0x100
     7d4:	000001b0 			; <UNDEFINED> instruction: 0x000001b0
     7d8:	000002dc 	ldrdeq	r0, [r0], -ip
     7dc:	00530001 	subseq	r0, r3, r1
     7e0:	00000000 	andeq	r0, r0, r0
     7e4:	01000000 	mrseq	r0, (UNDEF: 0)
     7e8:	00000000 	andeq	r0, r0, r0
     7ec:	b0000000 	andlt	r0, r0, r0
     7f0:	12000001 	andne	r0, r0, #1
     7f4:	06000002 	streq	r0, [r0], -r2
     7f8:	09007000 	stmdbeq	r0, {ip, sp, lr}
     7fc:	129f1a80 	addsne	r1, pc, #128, 20	; 0x80000
     800:	46000002 	strmi	r0, [r0], -r2
     804:	07000002 	streq	r0, [r0, -r2]
     808:	5001f300 	andpl	pc, r1, r0, lsl #6
     80c:	9f1a8009 	svcls	0x001a8009
     810:	00000246 	andeq	r0, r0, r6, asr #4
     814:	00000258 	andeq	r0, r0, r8, asr r2
     818:	00700006 	rsbseq	r0, r0, r6
     81c:	9f1a8009 	svcls	0x001a8009
     820:	00000258 	andeq	r0, r0, r8, asr r2
     824:	000002dc 	ldrdeq	r0, [r0], -ip
     828:	01f30007 	mvnseq	r0, r7
     82c:	1a800950 	bne	fe002d74 <BootRAM+0xcf73515>
     830:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     834:	00000000 	andeq	r0, r0, r0
     838:	01010000 	mrseq	r0, (UNDEF: 1)
     83c:	00000202 	andeq	r0, r0, r2, lsl #4
	...
     848:	dc000000 	stcle	0, cr0, [r0], {-0}
     84c:	dc000001 	stcle	0, cr0, [r0], {1}
     850:	01000001 	tsteq	r0, r1
     854:	01dc5400 	bicseq	r5, ip, r0, lsl #8
     858:	01dc0000 	bicseq	r0, ip, r0
     85c:	000b0000 	andeq	r0, fp, r0
     860:	0f0a0074 	svceq	0x000a0074
     864:	800b1a0f 	andhi	r1, fp, pc, lsl #20
     868:	dc9f2180 	ldfles	f2, [pc], {128}	; 0x80
     86c:	e0000001 	and	r0, r0, r1
     870:	11000001 	tstne	r0, r1
     874:	0a007400 	beq	1d87c <_Min_Stack_Size+0x1d47c>
     878:	761a0f00 	ldrvc	r0, [sl], -r0, lsl #30
     87c:	1aff0800 	bne	fffc2884 <BootRAM+0xef33025>
     880:	80800b21 	addhi	r0, r0, r1, lsr #22
     884:	01e49f21 	mvneq	r9, r1, lsr #30
     888:	01f80000 	mvnseq	r0, r0
     88c:	00070000 	andeq	r0, r7, r0
     890:	800b0074 	andhi	r0, fp, r4, ror r0
     894:	f89f2180 			; <UNDEFINED> instruction: 0xf89f2180
     898:	00000001 	andeq	r0, r0, r1
     89c:	01000002 	tsteq	r0, r2
     8a0:	02005100 	andeq	r5, r0, #0, 2
     8a4:	021a0000 	andseq	r0, sl, #0
     8a8:	00020000 	andeq	r0, r2, r0
     8ac:	02260075 	eoreq	r0, r6, #117	; 0x75
     8b0:	022a0000 	eoreq	r0, sl, #0
     8b4:	00010000 	andeq	r0, r1, r0
     8b8:	00024651 	andeq	r4, r2, r1, asr r6
     8bc:	00025800 	andeq	r5, r2, r0, lsl #16
     8c0:	74000700 	strvc	r0, [r0], #-1792	; 0xfffff900
     8c4:	80800b00 	addhi	r0, r0, r0, lsl #22
     8c8:	02589f21 	subseq	r9, r8, #33, 30	; 0x84
     8cc:	025a0000 	subseq	r0, sl, #0
     8d0:	00020000 	andeq	r0, r2, r0
     8d4:	00000075 	andeq	r0, r0, r5, ror r0
     8d8:	00000000 	andeq	r0, r0, r0
     8dc:	007c0000 	rsbseq	r0, ip, r0
     8e0:	007e0000 	rsbseq	r0, lr, r0
     8e4:	00020000 	andeq	r0, r2, r0
     8e8:	007e007d 	rsbseq	r0, lr, sp, ror r0
     8ec:	01940000 	orrseq	r0, r4, r0
     8f0:	00020000 	andeq	r0, r2, r0
     8f4:	0000147d 	andeq	r1, r0, sp, ror r4
     8f8:	00000000 	andeq	r0, r0, r0
     8fc:	02000000 	andeq	r0, r0, #0
     900:	007c0002 	rsbseq	r0, ip, r2
     904:	00900000 	addseq	r0, r0, r0
     908:	00010000 	andeq	r0, r1, r0
     90c:	00009050 	andeq	r9, r0, r0, asr r0
     910:	00019400 	andeq	r9, r1, r0, lsl #8
     914:	57000100 	strpl	r0, [r0, -r0, lsl #2]
	...
     928:	0000007c 	andeq	r0, r0, ip, ror r0
     92c:	0000010a 	andeq	r0, r0, sl, lsl #2
     930:	0a510001 	beq	144093c <_Min_Stack_Size+0x144053c>
     934:	30000001 	andcc	r0, r0, r1
     938:	04000001 	streq	r0, [r0], #-1
     93c:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
     940:	0001309f 	muleq	r1, pc, r0	; <UNPREDICTABLE>
     944:	00014000 	andeq	r4, r1, r0
     948:	51000100 	mrspl	r0, (UNDEF: 16)
     94c:	00000140 	andeq	r0, r0, r0, asr #2
     950:	00000194 	muleq	r0, r4, r1
     954:	01f30004 	mvnseq	r0, r4
     958:	00009f51 	andeq	r9, r0, r1, asr pc
	...
     968:	0000007c 	andeq	r0, r0, ip, ror r0
     96c:	0000012a 	andeq	r0, r0, sl, lsr #2
     970:	2a520001 	bcs	148097c <_Min_Stack_Size+0x148057c>
     974:	2c000001 	stccs	0, cr0, [r0], {1}
     978:	04000001 	streq	r0, [r0], #-1
     97c:	5201f300 	andpl	pc, r1, #0, 6
     980:	0001309f 	muleq	r1, pc, r0	; <UNPREDICTABLE>
     984:	00019400 	andeq	r9, r1, r0, lsl #8
     988:	52000100 	andpl	r0, r0, #0, 2
	...
     9a0:	0000007c 	andeq	r0, r0, ip, ror r0
     9a4:	00000090 	muleq	r0, r0, r0
     9a8:	90530001 	subsls	r0, r3, r1
     9ac:	12000000 	andne	r0, r0, #0
     9b0:	01000001 	tsteq	r0, r1
     9b4:	01125300 	tsteq	r2, r0, lsl #6
     9b8:	01280000 			; <UNDEFINED> instruction: 0x01280000
     9bc:	00070000 	andeq	r0, r7, r0
     9c0:	24320077 	ldrtcs	r0, [r2], #-119	; 0xffffff89
     9c4:	28220074 	stmdacs	r2!, {r2, r4, r5, r6}
     9c8:	30000001 	andcc	r0, r0, r1
     9cc:	13000001 	movwne	r0, #1
     9d0:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
     9d4:	00036503 	andeq	r6, r3, r3, lsl #10
     9d8:	5301f308 	movwpl	pc, #4872	; 0x1308	; <UNPREDICTABLE>
     9dc:	01282e30 			; <UNDEFINED> instruction: 0x01282e30
     9e0:	9f131600 	svcls	0x00131600
     9e4:	00000130 	andeq	r0, r0, r0, lsr r1
     9e8:	00000170 	andeq	r0, r0, r0, ror r1
     9ec:	70530001 	subsvc	r0, r3, r1
     9f0:	94000001 	strls	r0, [r0], #-1
     9f4:	07000001 	streq	r0, [r0, -r1]
     9f8:	32007700 	andcc	r7, r0, #0, 14
     9fc:	22007124 	andcs	r7, r0, #36, 2
	...
     a08:	00000001 	andeq	r0, r0, r1
     a0c:	00000000 	andeq	r0, r0, r0
     a10:	00900000 	addseq	r0, r0, r0
     a14:	00a00000 	adceq	r0, r0, r0
     a18:	00060000 	andeq	r0, r6, r0
     a1c:	80090070 	andhi	r0, r9, r0, ror r0
     a20:	00a09f1a 	adceq	r9, r0, sl, lsl pc
     a24:	00ce0000 	sbceq	r0, lr, r0
     a28:	00060000 	andeq	r0, r6, r0
     a2c:	8009007c 	andhi	r0, r9, ip, ror r0
     a30:	00ce9f1a 	sbceq	r9, lr, sl, lsl pc
     a34:	00e40000 	rsceq	r0, r4, r0
     a38:	00060000 	andeq	r0, r6, r0
     a3c:	80090070 	andhi	r0, r9, r0, ror r0
     a40:	00e49f1a 	rsceq	r9, r4, sl, lsl pc
     a44:	01280000 			; <UNDEFINED> instruction: 0x01280000
     a48:	00060000 	andeq	r0, r6, r0
     a4c:	8009007c 	andhi	r0, r9, ip, ror r0
     a50:	01289f1a 			; <UNDEFINED> instruction: 0x01289f1a
     a54:	01940000 	orrseq	r0, r4, r0
     a58:	00070000 	andeq	r0, r7, r0
     a5c:	095001f3 	ldmdbeq	r0, {r0, r1, r4, r5, r6, r7, r8}^
     a60:	009f1a80 	addseq	r1, pc, r0, lsl #21
	...
     a6c:	02020101 	andeq	r0, r2, #1073741824	; 0x40000000
	...
     a78:	0000b400 	andeq	fp, r0, r0, lsl #8
     a7c:	0000b400 	andeq	fp, r0, r0, lsl #8
     a80:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
     a84:	000000b4 	strheq	r0, [r0], -r4
     a88:	000000b4 	strheq	r0, [r0], -r4
     a8c:	0074000b 	rsbseq	r0, r4, fp
     a90:	1a0f0f0a 	bne	3c46c0 <_Min_Stack_Size+0x3c42c0>
     a94:	2180800b 	orrcs	r8, r0, fp
     a98:	0000b49f 	muleq	r0, pc, r4	; <UNPREDICTABLE>
     a9c:	0000ba00 	andeq	fp, r0, r0, lsl #20
     aa0:	74001100 	strvc	r1, [r0], #-256	; 0xffffff00
     aa4:	0f000a00 	svceq	0x00000a00
     aa8:	0800771a 	stmdaeq	r0, {r1, r3, r4, r8, r9, sl, ip, sp, lr}
     aac:	0b211aff 	bleq	8476b0 <_Min_Stack_Size+0x8472b0>
     ab0:	9f218080 	svcls	0x00218080
     ab4:	000000be 	strheq	r0, [r0], -lr
     ab8:	000000cc 	andeq	r0, r0, ip, asr #1
     abc:	00740007 	rsbseq	r0, r4, r7
     ac0:	2180800b 	orrcs	r8, r0, fp
     ac4:	0000e49f 	muleq	r0, pc, r4	; <UNPREDICTABLE>
     ac8:	0000e800 	andeq	lr, r0, r0, lsl #16
     acc:	74000700 	strvc	r0, [r0], #-1792	; 0xfffff900
     ad0:	80800b00 	addhi	r0, r0, r0, lsl #22
     ad4:	01309f21 	teqeq	r0, r1, lsr #30
     ad8:	01340000 	teqeq	r4, r0
     adc:	00070000 	andeq	r0, r7, r0
     ae0:	800b0074 	andhi	r0, fp, r4, ror r0
     ae4:	369f2180 	ldrcc	r2, [pc], r0, lsl #3
     ae8:	3a000001 	bcc	af4 <_Min_Stack_Size+0x6f4>
     aec:	07000001 	streq	r0, [r0, -r1]
     af0:	0b007400 	bleq	1daf8 <_Min_Stack_Size+0x1d6f8>
     af4:	9f218080 	svcls	0x00218080
	...
     b00:	0000050e 	andeq	r0, r0, lr, lsl #10
     b04:	00000510 	andeq	r0, r0, r0, lsl r5
     b08:	007d0002 	rsbseq	r0, sp, r2
     b0c:	00000510 	andeq	r0, r0, r0, lsl r5
     b10:	0000059c 	muleq	r0, ip, r5
     b14:	187d0002 	ldmdane	sp!, {r1}^
     b18:	0000059c 	muleq	r0, ip, r5
     b1c:	0000059e 	muleq	r0, lr, r5
     b20:	107d0002 	rsbsne	r0, sp, r2
     b24:	0000059e 	muleq	r0, lr, r5
     b28:	00000628 	andeq	r0, r0, r8, lsr #12
     b2c:	187d0002 	ldmdane	sp!, {r1}^
	...
     b40:	0000050e 	andeq	r0, r0, lr, lsl #10
     b44:	00000534 	andeq	r0, r0, r4, lsr r5
     b48:	34500001 	ldrbcc	r0, [r0], #-1
     b4c:	5e000005 	cdppl	0, 0, cr0, cr0, cr5, {0}
     b50:	04000005 	streq	r0, [r0], #-5
     b54:	5001f300 	andpl	pc, r1, r0, lsl #6
     b58:	00055e9f 	muleq	r5, pc, lr	; <UNPREDICTABLE>
     b5c:	00056800 	andeq	r6, r5, r0, lsl #16
     b60:	50000100 	andpl	r0, r0, r0, lsl #2
     b64:	00000568 	andeq	r0, r0, r8, ror #10
     b68:	00000628 	andeq	r0, r0, r8, lsr #12
     b6c:	01f30004 	mvnseq	r0, r4
     b70:	00009f50 	andeq	r9, r0, r0, asr pc
     b74:	00000000 	andeq	r0, r0, r0
     b78:	00010000 	andeq	r0, r1, r0
     b7c:	03000000 	movweq	r0, #0
     b80:	053a0000 	ldreq	r0, [sl, #-0]!
     b84:	05580000 	ldrbeq	r0, [r8, #-0]
     b88:	00010000 	andeq	r0, r1, r0
     b8c:	00056855 	andeq	r6, r5, r5, asr r8
     b90:	00059a00 	andeq	r9, r5, r0, lsl #20
     b94:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
     b98:	0000059e 	muleq	r0, lr, r5
     b9c:	000005ca 	andeq	r0, r0, sl, asr #11
     ba0:	d2550001 	subsle	r0, r5, #1
     ba4:	02000005 	andeq	r0, r0, #5
     ba8:	01000006 	tsteq	r0, r6
     bac:	00005500 	andeq	r5, r0, r0, lsl #10
     bb0:	00000000 	andeq	r0, r0, r0
     bb4:	00010000 	andeq	r0, r1, r0
     bb8:	00000520 	andeq	r0, r0, r0, lsr #10
     bbc:	0000052a 	andeq	r0, r0, sl, lsr #10
     bc0:	0073000b 	rsbseq	r0, r3, fp
     bc4:	1a08000a 	bne	200bf4 <_Min_Stack_Size+0x2007f4>
     bc8:	2e302440 	cfnegscs	mvf2, mvf0
     bcc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     bdc:	00030000 	andeq	r0, r3, r0
     be0:	00054000 	andeq	r4, r5, r0
     be4:	00055800 	andeq	r5, r5, r0, lsl #16
     be8:	53000100 	movwpl	r0, #256	; 0x100
     bec:	00000568 	andeq	r0, r0, r8, ror #10
     bf0:	0000057b 	andeq	r0, r0, fp, ror r5
     bf4:	9e530001 	cdpls	0, 5, cr0, cr3, cr1, {0}
     bf8:	a8000005 	stmdage	r0, {r0, r2}
     bfc:	01000005 	tsteq	r0, r5
     c00:	05a85300 	streq	r5, [r8, #768]!	; 0x300
     c04:	05bb0000 	ldreq	r0, [fp, #0]!
     c08:	000b0000 	andeq	r0, fp, r0
     c0c:	00001403 	andeq	r1, r0, r3, lsl #8
     c10:	08019420 	stmdaeq	r1, {r5, sl, ip, pc}
     c14:	be9f1a7f 			; <UNDEFINED> instruction: 0xbe9f1a7f
     c18:	ca000005 	bgt	c34 <_Min_Stack_Size+0x834>
     c1c:	01000005 	tsteq	r0, r5
     c20:	05d25300 	ldrbeq	r5, [r2, #768]	; 0x300
     c24:	05e50000 	strbeq	r0, [r5, #0]!
     c28:	00010000 	andeq	r0, r1, r0
     c2c:	00000053 	andeq	r0, r0, r3, asr r0
     c30:	00000000 	andeq	r0, r0, r0
     c34:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
     c38:	58000005 	stmdapl	r0, {r0, r2}
     c3c:	02000005 	andeq	r0, r0, #5
     c40:	009f3200 	addseq	r3, pc, r0, lsl #4
     c44:	00000000 	andeq	r0, r0, r0
     c48:	01000000 	mrseq	r0, (UNDEF: 0)
     c4c:	00055400 	andeq	r5, r5, r0, lsl #8
     c50:	00055800 	andeq	r5, r5, r0, lsl #16
     c54:	03000600 	movweq	r0, #1536	; 0x600
     c58:	08000f04 	stmdaeq	r0, {r2, r8, r9, sl, fp}
     c5c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     c60:	00000000 	andeq	r0, r0, r0
     c64:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
     c68:	58000005 	stmdapl	r0, {r0, r2}
     c6c:	02000005 	andeq	r0, r0, #5
     c70:	009f3000 	addseq	r3, pc, r0
     c74:	00000000 	andeq	r0, r0, r0
     c78:	01000000 	mrseq	r0, (UNDEF: 0)
     c7c:	00058c00 	andeq	r8, r5, r0, lsl #24
     c80:	00059900 	andeq	r9, r5, r0, lsl #18
     c84:	91000200 	mrsls	r0, R8_usr
     c88:	0000006a 	andeq	r0, r0, sl, rrx
     c8c:	00000000 	andeq	r0, r0, r0
     c90:	8c000100 	stfhis	f0, [r0], {-0}
     c94:	99000005 	stmdbls	r0, {r0, r2}
     c98:	02000005 	andeq	r0, r0, #5
     c9c:	006c9100 	rsbeq	r9, ip, r0, lsl #2
     ca0:	00000000 	andeq	r0, r0, r0
     ca4:	01000000 	mrseq	r0, (UNDEF: 0)
     ca8:	00059e00 	andeq	r9, r5, r0, lsl #28
     cac:	0005a600 	andeq	sl, r5, r0, lsl #12
     cb0:	31000200 	mrscc	r0, R8_usr
     cb4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     cb8:	00000000 	andeq	r0, r0, r0
     cbc:	9e000100 	adflss	f0, f0, f0
     cc0:	a6000005 	strge	r0, [r0], -r5
     cc4:	06000005 	streq	r0, [r0], -r5
     cc8:	001e0300 	andseq	r0, lr, r0, lsl #6
     ccc:	009f2000 	addseq	r2, pc, r0
     cd0:	00000000 	andeq	r0, r0, r0
     cd4:	01000000 	mrseq	r0, (UNDEF: 0)
     cd8:	00059e00 	andeq	r9, r5, r0, lsl #28
     cdc:	0005a600 	andeq	sl, r5, r0, lsl #12
     ce0:	30000200 	andcc	r0, r0, r0, lsl #4
     ce4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     ce8:	00000000 	andeq	r0, r0, r0
     cec:	2e000200 	cdpcs	2, 0, cr0, cr0, cr0, {0}
     cf0:	38000005 	stmdacc	r0, {r0, r2}
     cf4:	02000005 	andeq	r0, r0, #5
     cf8:	009f3000 	addseq	r3, pc, r0
     cfc:	00000000 	andeq	r0, r0, r0
     d00:	02000000 	andeq	r0, r0, #0
     d04:	00052e00 	andeq	r2, r5, r0, lsl #28
     d08:	00053800 	andeq	r3, r5, r0, lsl #16
     d0c:	03000600 	movweq	r0, #1536	; 0x600
     d10:	20000014 	andcs	r0, r0, r4, lsl r0
     d14:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     d18:	00000000 	andeq	r0, r0, r0
     d1c:	ca000500 	bgt	2124 <_Min_Stack_Size+0x1d24>
     d20:	d2000005 	andle	r0, r0, #5
     d24:	02000005 	andeq	r0, r0, #5
     d28:	009f3000 	addseq	r3, pc, r0
     d2c:	00000000 	andeq	r0, r0, r0
     d30:	01000000 	mrseq	r0, (UNDEF: 0)
     d34:	0005ca03 	andeq	ip, r5, r3, lsl #20
     d38:	0005ca00 	andeq	ip, r5, r0, lsl #20
     d3c:	30000200 	andcc	r0, r0, r0, lsl #4
     d40:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     d44:	00000000 	andeq	r0, r0, r0
     d48:	da000100 	ble	1150 <_Min_Stack_Size+0xd50>
     d4c:	dc000005 	stcle	0, cr0, [r0], {5}
     d50:	02000005 	andeq	r0, r0, #5
     d54:	009f3000 	addseq	r3, pc, r0
     d58:	00000000 	andeq	r0, r0, r0
     d5c:	58000000 	stmdapl	r0, {}	; <UNPREDICTABLE>
     d60:	5a000004 	bpl	d78 <_Min_Stack_Size+0x978>
     d64:	02000004 	andeq	r0, r0, #4
     d68:	5a007d00 	bpl	20170 <_Min_Stack_Size+0x1fd70>
     d6c:	b4000004 	strlt	r0, [r0], #-4
     d70:	02000004 	andeq	r0, r0, #4
     d74:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
     d80:	58000000 	stmdapl	r0, {}	; <UNPREDICTABLE>
     d84:	90000004 	andls	r0, r0, r4
     d88:	01000004 	tsteq	r0, r4
     d8c:	04905000 	ldreq	r5, [r0], #0
     d90:	04b40000 	ldrteq	r0, [r4], #0
     d94:	00040000 	andeq	r0, r4, r0
     d98:	9f5001f3 	svcls	0x005001f3
	...
     da8:	00000484 	andeq	r0, r0, r4, lsl #9
     dac:	0000048e 	andeq	r0, r0, lr, lsl #9
     db0:	8e570001 	cdphi	0, 5, cr0, cr7, cr1, {0}
     db4:	a8000004 	stmdage	r0, {r2}
     db8:	01000004 	tsteq	r0, r4
     dbc:	00005600 	andeq	r5, r0, r0, lsl #12
     dc0:	00000000 	andeq	r0, r0, r0
     dc4:	00020000 	andeq	r0, r2, r0
     dc8:	0000048e 	andeq	r0, r0, lr, lsl #9
     dcc:	00000496 	muleq	r0, r6, r4
     dd0:	00560001 	subseq	r0, r6, r1
     dd4:	00000000 	andeq	r0, r0, r0
     dd8:	02000000 	andeq	r0, r0, #0
     ddc:	00048e00 	andeq	r8, r4, r0, lsl #28
     de0:	00049600 	andeq	r9, r4, r0, lsl #12
     de4:	51000100 	mrspl	r0, (UNDEF: 16)
	...
     df0:	048e0002 	streq	r0, [lr], #2
     df4:	04960000 	ldreq	r0, [r6], #0
     df8:	00020000 	andeq	r0, r2, r0
     dfc:	00009f30 	andeq	r9, r0, r0, lsr pc
     e00:	00000000 	andeq	r0, r0, r0
     e04:	00020000 	andeq	r0, r2, r0
     e08:	00000000 	andeq	r0, r0, r0
     e0c:	00340000 	eorseq	r0, r4, r0
     e10:	00360000 	eorseq	r0, r6, r0
     e14:	00020000 	andeq	r0, r2, r0
     e18:	00369f30 	eorseq	r9, r6, r0, lsr pc
     e1c:	00380000 	eorseq	r0, r8, r0
     e20:	00090000 	andeq	r0, r9, r0
     e24:	0186a00c 	orreq	sl, r6, ip
     e28:	1c007200 	sfmne	f7, 4, [r0], {-0}
     e2c:	0000389f 	muleq	r0, pc, r8	; <UNPREDICTABLE>
     e30:	00003a00 	andeq	r3, r0, r0, lsl #20
     e34:	0c000900 			; <UNDEFINED> instruction: 0x0c000900
     e38:	000186a1 	andeq	r8, r1, r1, lsr #13
     e3c:	9f1c0072 	svcls	0x001c0072
     e40:	0000003a 	andeq	r0, r0, sl, lsr r0
     e44:	00000050 	andeq	r0, r0, r0, asr r0
     e48:	a00c0009 	andge	r0, ip, r9
     e4c:	72000186 	andvc	r0, r0, #-2147483615	; 0x80000021
     e50:	009f1c00 	addseq	r1, pc, r0, lsl #24
     e54:	00000000 	andeq	r0, r0, r0
     e58:	01000000 	mrseq	r0, (UNDEF: 0)
     e5c:	00005400 	andeq	r5, r0, r0, lsl #8
     e60:	00005c00 	andeq	r5, r0, r0, lsl #24
     e64:	44000200 	strmi	r0, [r0], #-512	; 0xfffffe00
     e68:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     e74:	00000c00 	andeq	r0, r0, r0, lsl #24
     e78:	00000e00 	andeq	r0, r0, r0, lsl #28
     e7c:	50000100 	andpl	r0, r0, r0, lsl #2
     e80:	0000000e 	andeq	r0, r0, lr
     e84:	00000010 	andeq	r0, r0, r0, lsl r0
     e88:	01f30004 	mvnseq	r0, r4
     e8c:	00009f50 	andeq	r9, r0, r0, asr pc
	...
     e98:	00080000 	andeq	r0, r8, r0
     e9c:	000a0000 	andeq	r0, sl, r0
     ea0:	00010000 	andeq	r0, r1, r0
     ea4:	00000a50 	andeq	r0, r0, r0, asr sl
     ea8:	00000c00 	andeq	r0, r0, r0, lsl #24
     eac:	f3000400 	vshl.u8	d0, d0, d0
     eb0:	009f5001 	addseq	r5, pc, r1
     eb4:	00000000 	andeq	r0, r0, r0
     eb8:	cc000000 	stcgt	0, cr0, [r0], {-0}
     ebc:	ce000003 	cdpgt	0, 0, cr0, cr0, cr3, {0}
     ec0:	02000003 	andeq	r0, r0, #3
     ec4:	ce007d00 	cdpgt	13, 0, cr7, cr0, cr0, {0}
     ec8:	d2000003 	andle	r0, r0, #3
     ecc:	02000003 	andeq	r0, r0, #3
     ed0:	d20c7d00 	andle	r7, ip, #0, 26
     ed4:	50000003 	andpl	r0, r0, r3
     ed8:	03000004 	movweq	r0, #4
     edc:	00d07d00 	sbcseq	r7, r0, r0, lsl #26
     ee0:	00000450 	andeq	r0, r0, r0, asr r4
     ee4:	00000460 	andeq	r0, r0, r0, ror #8
     ee8:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
	...
     efc:	000003d8 	ldrdeq	r0, [r0], -r8
     f00:	000003dc 	ldrdeq	r0, [r0], -ip
     f04:	00740006 	rsbseq	r0, r4, r6
     f08:	9f1aff08 	svcls	0x001aff08
     f0c:	000003dc 	ldrdeq	r0, [r0], -ip
     f10:	000003f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     f14:	20030011 	andcs	r0, r3, r1, lsl r0
     f18:	94200000 	strtls	r0, [r0], #-0
     f1c:	1aff0801 	bne	fffc2f28 <BootRAM+0xef336c9>
     f20:	081c0072 	ldmdaeq	ip, {r1, r4, r5, r6}
     f24:	f09f1aff 			; <UNDEFINED> instruction: 0xf09f1aff
     f28:	02000003 	andeq	r0, r0, #3
     f2c:	01000004 	tsteq	r0, r4
     f30:	04285400 	strteq	r5, [r8], #-1024	; 0xfffffc00
     f34:	042c0000 	strteq	r0, [ip], #-0
     f38:	00010000 	andeq	r0, r1, r0
     f3c:	00000050 	andeq	r0, r0, r0, asr r0
     f40:	00000000 	andeq	r0, r0, r0
     f44:	cc050300 	stcgt	3, cr0, [r5], {-0}
     f48:	cc000003 	stcgt	0, cr0, [r0], {3}
     f4c:	06000003 	streq	r0, [r0], -r3
     f50:	001f0300 	andseq	r0, pc, r0, lsl #6
     f54:	009f2000 	addseq	r2, pc, r0
     f58:	00000000 	andeq	r0, r0, r0
     f5c:	01000000 	mrseq	r0, (UNDEF: 0)
     f60:	0003f800 	andeq	pc, r3, r0, lsl #16
     f64:	00040200 	andeq	r0, r4, r0, lsl #4
     f68:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
     f74:	03f80001 	mvnseq	r0, #1
     f78:	04020000 	streq	r0, [r2], #-0
     f7c:	00010000 	andeq	r0, r1, r0
     f80:	0000005d 	andeq	r0, r0, sp, asr r0
     f84:	00000000 	andeq	r0, r0, r0
     f88:	f8000100 			; <UNDEFINED> instruction: 0xf8000100
     f8c:	02000003 	andeq	r0, r0, #3
     f90:	03000004 	movweq	r0, #4
     f94:	9f810900 	svcls	0x00810900
	...
     fa0:	04020402 	streq	r0, [r2], #-1026	; 0xfffffbfe
     fa4:	04020000 	streq	r0, [r2], #-0
     fa8:	00060000 	andeq	r0, r6, r0
     fac:	00001f03 	andeq	r1, r0, r3, lsl #30
     fb0:	00009f20 	andeq	r9, r0, r0, lsr #30
     fb4:	00000000 	andeq	r0, r0, r0
     fb8:	00010000 	andeq	r0, r1, r0
     fbc:	00000420 	andeq	r0, r0, r0, lsr #8
     fc0:	00000428 	andeq	r0, r0, r8, lsr #8
     fc4:	005d0001 	subseq	r0, sp, r1
     fc8:	00000000 	andeq	r0, r0, r0
     fcc:	01000000 	mrseq	r0, (UNDEF: 0)
     fd0:	00042000 	andeq	r2, r4, r0
     fd4:	00042800 	andeq	r2, r4, r0, lsl #16
     fd8:	31000200 	mrscc	r0, R8_usr
     fdc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     fe8:	00043600 	andeq	r3, r4, r0, lsl #12
     fec:	00043a00 	andeq	r3, r4, r0, lsl #20
     ff0:	73000300 	movwvc	r0, #768	; 0x300
     ff4:	043a9f7e 	ldrteq	r9, [sl], #-3966	; 0xfffff082
     ff8:	043c0000 	ldrteq	r0, [ip], #-0
     ffc:	00030000 	andeq	r0, r3, r0
    1000:	009f7f73 	addseq	r7, pc, r3, ror pc	; <UNPREDICTABLE>
    1004:	00000000 	andeq	r0, r0, r0
    1008:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    100c:	12000003 	andne	r0, r0, #3
    1010:	02000003 	andeq	r0, r0, #3
    1014:	12007d00 	andne	r7, r0, #0, 26
    1018:	a4000003 	strge	r0, [r0], #-3
    101c:	02000003 	andeq	r0, r0, #3
    1020:	a4087d00 	strge	r7, [r8], #-3328	; 0xfffff300
    1024:	cc000003 	stcgt	0, cr0, [r0], {3}
    1028:	02000003 	andeq	r0, r0, #3
    102c:	00007d00 	andeq	r7, r0, r0, lsl #26
	...
    1038:	00000101 	andeq	r0, r0, r1, lsl #2
    103c:	14000000 	strne	r0, [r0], #-0
    1040:	22000003 	andcs	r0, r0, #3
    1044:	01000003 	tsteq	r0, r3
    1048:	03225200 			; <UNDEFINED> instruction: 0x03225200
    104c:	03280000 			; <UNDEFINED> instruction: 0x03280000
    1050:	00090000 	andeq	r0, r9, r0
    1054:	ff110072 			; <UNDEFINED> instruction: 0xff110072
    1058:	1a7ebfff 	bne	1fb105c <_Min_Stack_Size+0x1fb0c5c>
    105c:	0003289f 	muleq	r3, pc, r8	; <UNPREDICTABLE>
    1060:	00033800 	andeq	r3, r3, r0, lsl #16
    1064:	52000100 	andpl	r0, r0, #0, 2
    1068:	00000338 	andeq	r0, r0, r8, lsr r3
    106c:	00000342 	andeq	r0, r0, r2, asr #6
    1070:	24730002 	ldrbtcs	r0, [r3], #-2
	...
    107c:	00010100 	andeq	r0, r1, r0, lsl #2
    1080:	00000000 	andeq	r0, r0, r0
    1084:	03380000 	teqeq	r8, #0
    1088:	03440000 	movteq	r0, #16384	; 0x4000
    108c:	00010000 	andeq	r0, r1, r0
    1090:	00034452 	andeq	r4, r3, r2, asr r4
    1094:	00034800 	andeq	r4, r3, r0, lsl #16
    1098:	72000800 	andvc	r0, r0, #0, 16
    109c:	ffff1100 			; <UNDEFINED> instruction: 0xffff1100
    10a0:	489f1a4f 	ldmmi	pc, {r0, r1, r2, r3, r6, r9, fp, ip}	; <UNPREDICTABLE>
    10a4:	58000003 	stmdapl	r0, {r0, r1}
    10a8:	01000003 	tsteq	r0, r3
    10ac:	03585200 	cmpeq	r8, #0, 4
    10b0:	035a0000 	cmpeq	sl, #0
    10b4:	00020000 	andeq	r0, r2, r0
    10b8:	035a2473 	cmpeq	sl, #1929379840	; 0x73000000
    10bc:	03600000 	cmneq	r0, #0
    10c0:	00050000 	andeq	r0, r5, r0
    10c4:	0200240c 	andeq	r2, r0, #12, 8	; 0xc000000
    10c8:	00000040 	andeq	r0, r0, r0, asr #32
    10cc:	00000000 	andeq	r0, r0, r0
    10d0:	86000100 	strhi	r0, [r0], -r0, lsl #2
    10d4:	8c000003 	stchi	0, cr0, [r0], {3}
    10d8:	03000003 	movweq	r0, #3
    10dc:	9f250800 	svcls	0x00250800
	...
    10e8:	000002dc 	ldrdeq	r0, [r0], -ip
    10ec:	000002ee 	andeq	r0, r0, lr, ror #5
    10f0:	007d0002 	rsbseq	r0, sp, r2
    10f4:	000002ee 	andeq	r0, r0, lr, ror #5
    10f8:	0000030e 	andeq	r0, r0, lr, lsl #6
    10fc:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    1108:	0000021c 	andeq	r0, r0, ip, lsl r2
    110c:	0000021e 	andeq	r0, r0, lr, lsl r2
    1110:	007d0002 	rsbseq	r0, sp, r2
    1114:	0000021e 	andeq	r0, r0, lr, lsl r2
    1118:	000002dc 	ldrdeq	r0, [r0], -ip
    111c:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    1134:	0000021c 	andeq	r0, r0, ip, lsl r2
    1138:	00000230 	andeq	r0, r0, r0, lsr r2
    113c:	30500001 	subscc	r0, r0, r1
    1140:	34000002 	strcc	r0, [r0], #-2
    1144:	04000002 	streq	r0, [r0], #-2
    1148:	5001f300 	andpl	pc, r1, r0, lsl #6
    114c:	0002349f 	muleq	r2, pc, r4	; <UNPREDICTABLE>
    1150:	00023800 	andeq	r3, r2, r0, lsl #16
    1154:	50000100 	andpl	r0, r0, r0, lsl #2
    1158:	00000238 	andeq	r0, r0, r8, lsr r2
    115c:	000002c4 	andeq	r0, r0, r4, asr #5
    1160:	01f30004 	mvnseq	r0, r4
    1164:	02c49f50 	sbceq	r9, r4, #80, 30	; 0x140
    1168:	02c60000 	sbceq	r0, r6, #0
    116c:	00010000 	andeq	r0, r1, r0
    1170:	0002c650 	andeq	ip, r2, r0, asr r6
    1174:	0002dc00 	andeq	sp, r2, r0, lsl #24
    1178:	f3000400 	vshl.u8	d0, d0, d0
    117c:	009f5001 	addseq	r5, pc, r1
	...
    1190:	00021c00 	andeq	r1, r2, r0, lsl #24
    1194:	00023000 	andeq	r3, r2, r0
    1198:	51000100 	mrspl	r0, (UNDEF: 16)
    119c:	00000230 	andeq	r0, r0, r0, lsr r2
    11a0:	00000234 	andeq	r0, r0, r4, lsr r2
    11a4:	01f30004 	mvnseq	r0, r4
    11a8:	02349f51 	eorseq	r9, r4, #324	; 0x144
    11ac:	023a0000 	eorseq	r0, sl, #0
    11b0:	00010000 	andeq	r0, r1, r0
    11b4:	00023a51 	andeq	r3, r2, r1, asr sl
    11b8:	0002c400 	andeq	ip, r2, r0, lsl #8
    11bc:	f3000400 	vshl.u8	d0, d0, d0
    11c0:	c49f5101 	ldrgt	r5, [pc], #257	; 11c8 <_Min_Stack_Size+0xdc8>
    11c4:	dc000002 	stcle	0, cr0, [r0], {2}
    11c8:	01000002 	tsteq	r0, r2
    11cc:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    11e0:	0000021c 	andeq	r0, r0, ip, lsl r2
    11e4:	00000230 	andeq	r0, r0, r0, lsr r2
    11e8:	30520001 	subscc	r0, r2, r1
    11ec:	34000002 	strcc	r0, [r0], #-2
    11f0:	04000002 	streq	r0, [r0], #-2
    11f4:	5201f300 	andpl	pc, r1, #0, 6
    11f8:	0002349f 	muleq	r2, pc, r4	; <UNPREDICTABLE>
    11fc:	00023d00 	andeq	r3, r2, r0, lsl #26
    1200:	52000100 	andpl	r0, r0, #0, 2
    1204:	0000023d 	andeq	r0, r0, sp, lsr r2
    1208:	000002c4 	andeq	r0, r0, r4, asr #5
    120c:	01f30004 	mvnseq	r0, r4
    1210:	02c49f52 	sbceq	r9, r4, #328	; 0x148
    1214:	02dc0000 	sbcseq	r0, ip, #0
    1218:	00010000 	andeq	r0, r1, r0
    121c:	00000052 	andeq	r0, r0, r2, asr r0
    1220:	00000000 	andeq	r0, r0, r0
    1224:	34000200 	strcc	r0, [r0], #-512	; 0xfffffe00
    1228:	3e000002 	cdpcc	0, 0, cr0, cr0, cr2, {0}
    122c:	02000002 	andeq	r0, r0, #2
    1230:	009f3000 	addseq	r3, pc, r0
    1234:	00000000 	andeq	r0, r0, r0
    1238:	02000000 	andeq	r0, r0, #0
    123c:	00023400 	andeq	r3, r2, r0, lsl #8
    1240:	00023e00 	andeq	r3, r2, r0, lsl #28
    1244:	03000600 	movweq	r0, #1536	; 0x600
    1248:	20000002 	andcs	r0, r0, r2
    124c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    125c:	0001f800 	andeq	pc, r1, r0, lsl #16
    1260:	00020c00 	andeq	r0, r2, r0, lsl #24
    1264:	50000100 	andpl	r0, r0, r0, lsl #2
    1268:	0000020c 	andeq	r0, r0, ip, lsl #4
    126c:	00000214 	andeq	r0, r0, r4, lsl r2
    1270:	01f30004 	mvnseq	r0, r4
    1274:	02149f50 	andseq	r9, r4, #80, 30	; 0x140
    1278:	02160000 	andseq	r0, r6, #0
    127c:	00010000 	andeq	r0, r1, r0
    1280:	00021650 	andeq	r1, r2, r0, asr r6
    1284:	00021c00 	andeq	r1, r2, r0, lsl #24
    1288:	f3000400 	vshl.u8	d0, d0, d0
    128c:	009f5001 	addseq	r5, pc, r1
	...
    129c:	7c000000 	stcvc	0, cr0, [r0], {-0}
    12a0:	a4000001 	strge	r0, [r0], #-1
    12a4:	01000001 	tsteq	r0, r1
    12a8:	01a45000 			; <UNDEFINED> instruction: 0x01a45000
    12ac:	01a80000 			; <UNDEFINED> instruction: 0x01a80000
    12b0:	00040000 	andeq	r0, r4, r0
    12b4:	9f5001f3 	svcls	0x005001f3
    12b8:	000001a8 	andeq	r0, r0, r8, lsr #3
    12bc:	000001ba 			; <UNDEFINED> instruction: 0x000001ba
    12c0:	ba500001 	blt	14012cc <_Min_Stack_Size+0x1400ecc>
    12c4:	f8000001 			; <UNDEFINED> instruction: 0xf8000001
    12c8:	04000001 	streq	r0, [r0], #-1
    12cc:	5001f300 	andpl	pc, r1, r0, lsl #6
    12d0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    12d4:	00000000 	andeq	r0, r0, r0
    12d8:	00012400 	andeq	r2, r1, r0, lsl #8
    12dc:	00012600 	andeq	r2, r1, r0, lsl #12
    12e0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    12e4:	00012600 	andeq	r2, r1, r0, lsl #12
    12e8:	00017c00 	andeq	r7, r1, r0, lsl #24
    12ec:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    12f0:	00000018 	andeq	r0, r0, r8, lsl r0
	...
    12fc:	00012400 	andeq	r2, r1, r0, lsl #8
    1300:	00012e00 	andeq	r2, r1, r0, lsl #28
    1304:	50000100 	andpl	r0, r0, r0, lsl #2
    1308:	00000132 	andeq	r0, r0, r2, lsr r1
    130c:	0000017c 	andeq	r0, r0, ip, ror r1
    1310:	00550001 	subseq	r0, r5, r1
	...
    1320:	00012400 	andeq	r2, r1, r0, lsl #8
    1324:	00012a00 	andeq	r2, r1, r0, lsl #20
    1328:	51000100 	mrspl	r0, (UNDEF: 16)
    132c:	0000012a 	andeq	r0, r0, sl, lsr #2
    1330:	0000012e 	andeq	r0, r0, lr, lsr #2
    1334:	01f30004 	mvnseq	r0, r4
    1338:	01329f51 	teqeq	r2, r1, asr pc
    133c:	01740000 	cmneq	r4, r0
    1340:	00010000 	andeq	r0, r1, r0
    1344:	00000054 	andeq	r0, r0, r4, asr r0
    1348:	00000000 	andeq	r0, r0, r0
    134c:	50030100 	andpl	r0, r3, r0, lsl #2
    1350:	50000001 	andpl	r0, r0, r1
    1354:	06000001 	streq	r0, [r0], -r1
    1358:	001f0300 	andseq	r0, pc, r0, lsl #6
    135c:	009f2000 	addseq	r2, pc, r0
    1360:	00000000 	andeq	r0, r0, r0
    1364:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
    1368:	fa000000 	blx	1370 <_Min_Stack_Size+0xf70>
    136c:	02000000 	andeq	r0, r0, #0
    1370:	fa007d00 	blx	20778 <_Min_Stack_Size+0x20378>
    1374:	24000000 	strcs	r0, [r0], #-0
    1378:	02000001 	andeq	r0, r0, #1
    137c:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    138c:	0000f800 	andeq	pc, r0, r0, lsl #16
    1390:	00010000 	andeq	r0, r1, r0
    1394:	50000100 	andpl	r0, r0, r0, lsl #2
    1398:	00000100 	andeq	r0, r0, r0, lsl #2
    139c:	0000011c 	andeq	r0, r0, ip, lsl r1
    13a0:	1c540001 	mrrcne	0, 0, r0, r4, cr1
    13a4:	24000001 	strcs	r0, [r0], #-1
    13a8:	03000001 	movweq	r0, #1
    13ac:	9f7f7400 	svcls	0x007f7400
	...
    13b8:	00f80000 	rscseq	r0, r8, r0
    13bc:	01000000 	mrseq	r0, (UNDEF: 0)
    13c0:	00010000 	andeq	r0, r1, r0
    13c4:	00000051 	andeq	r0, r0, r1, asr r0
    13c8:	00000000 	andeq	r0, r0, r0
    13cc:	06030100 	streq	r0, [r3], -r0, lsl #2
    13d0:	06000001 	streq	r0, [r0], -r1
    13d4:	06000001 	streq	r0, [r0], -r1
    13d8:	001f0300 	andseq	r0, pc, r0, lsl #6
    13dc:	009f2000 	addseq	r2, pc, r0
    13e0:	00000000 	andeq	r0, r0, r0
    13e4:	d0000000 	andle	r0, r0, r0
    13e8:	d2000000 	andle	r0, r0, #0
    13ec:	02000000 	andeq	r0, r0, #0
    13f0:	d2007d00 	andle	r7, r0, #0, 26
    13f4:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
    13f8:	02000000 	andeq	r0, r0, #0
    13fc:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    140c:	d0000202 	andle	r0, r0, r2, lsl #4
    1410:	d8000000 	stmdale	r0, {}	; <UNPREDICTABLE>
    1414:	01000000 	mrseq	r0, (UNDEF: 0)
    1418:	00d85000 	sbcseq	r5, r8, r0
    141c:	00dc0000 	sbcseq	r0, ip, r0
    1420:	00030000 	andeq	r0, r3, r0
    1424:	dc9f0174 	ldfles	f0, [pc], {116}	; 0x74
    1428:	e0000000 	and	r0, r0, r0
    142c:	01000000 	mrseq	r0, (UNDEF: 0)
    1430:	00e05400 	rsceq	r5, r0, r0, lsl #8
    1434:	00f80000 	rscseq	r0, r8, r0
    1438:	00030000 	andeq	r0, r3, r0
    143c:	009f0174 	addseq	r0, pc, r4, ror r1	; <UNPREDICTABLE>
    1440:	00000000 	andeq	r0, r0, r0
    1444:	a4000000 	strge	r0, [r0], #-0
    1448:	a6000000 	strge	r0, [r0], -r0
    144c:	02000000 	andeq	r0, r0, #0
    1450:	a6007d00 	strge	r7, [r0], -r0, lsl #26
    1454:	d0000000 	andle	r0, r0, r0
    1458:	02000000 	andeq	r0, r0, #0
    145c:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
    146c:	0000a400 	andeq	sl, r0, r0, lsl #8
    1470:	0000ae00 	andeq	sl, r0, r0, lsl #28
    1474:	50000100 	andpl	r0, r0, r0, lsl #2
    1478:	000000ae 	andeq	r0, r0, lr, lsr #1
    147c:	000000b8 	strheq	r0, [r0], -r8
    1480:	b8540001 	ldmdalt	r4, {r0}^
    1484:	d0000000 	andle	r0, r0, r0
    1488:	03000000 	movweq	r0, #0
    148c:	9f7f7400 	svcls	0x007f7400
	...
    1498:	00a40000 	adceq	r0, r4, r0
    149c:	00ae0000 	adceq	r0, lr, r0
    14a0:	00010000 	andeq	r0, r1, r0
    14a4:	00000051 	andeq	r0, r0, r1, asr r0
    14a8:	00000000 	andeq	r0, r0, r0
    14ac:	00005800 	andeq	r5, r0, r0, lsl #16
    14b0:	00005a00 	andeq	r5, r0, r0, lsl #20
    14b4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    14b8:	00005a00 	andeq	r5, r0, r0, lsl #20
    14bc:	00006c00 	andeq	r6, r0, r0, lsl #24
    14c0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    14c4:	00006c08 	andeq	r6, r0, r8, lsl #24
    14c8:	00007000 	andeq	r7, r0, r0
    14cc:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    14d0:	00007000 	andeq	r7, r0, r0
    14d4:	0000a400 	andeq	sl, r0, r0, lsl #8
    14d8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    14dc:	00000008 	andeq	r0, r0, r8
    14e0:	00000000 	andeq	r0, r0, r0
    14e4:	64000000 	strvs	r0, [r0], #-0
    14e8:	70000000 	andvc	r0, r0, r0
    14ec:	01000000 	mrseq	r0, (UNDEF: 0)
    14f0:	00005100 	andeq	r5, r0, r0, lsl #2
    14f4:	00000000 	andeq	r0, r0, r0
    14f8:	03010000 	movweq	r0, #4096	; 0x1000
    14fc:	00000076 	andeq	r0, r0, r6, ror r0
    1500:	00000076 	andeq	r0, r0, r6, ror r0
    1504:	21030006 	tstcs	r3, r6
    1508:	9f200001 	svcls	0x00200001
	...
    151c:	00000010 	andeq	r0, r0, r0, lsl r0
    1520:	00000020 	andeq	r0, r0, r0, lsr #32
    1524:	20500001 	subscs	r0, r0, r1
    1528:	32000000 	andcc	r0, r0, #0
    152c:	01000000 	mrseq	r0, (UNDEF: 0)
    1530:	00325300 	eorseq	r5, r2, r0, lsl #6
    1534:	00340000 	eorseq	r0, r4, r0
    1538:	00010000 	andeq	r0, r1, r0
    153c:	00003450 	andeq	r3, r0, r0, asr r4
    1540:	00003600 	andeq	r3, r0, r0, lsl #12
    1544:	53000100 	movwpl	r0, #256	; 0x100
	...
    1550:	00240000 	eoreq	r0, r4, r0
    1554:	00320000 	eorseq	r0, r2, r0
    1558:	00010000 	andeq	r0, r1, r0
    155c:	00000050 	andeq	r0, r0, r0, asr r0
    1560:	00000000 	andeq	r0, r0, r0
    1564:	10050300 	andne	r0, r5, r0, lsl #6
    1568:	10000000 	andne	r0, r0, r0
    156c:	01000000 	mrseq	r0, (UNDEF: 0)
    1570:	00005000 	andeq	r5, r0, r0
	...
    157c:	00060000 	andeq	r0, r6, r0
    1580:	000a0000 	andeq	r0, sl, r0
    1584:	00010000 	andeq	r0, r1, r0
    1588:	00000a50 	andeq	r0, r0, r0, asr sl
    158c:	00001000 	andeq	r1, r0, r0
    1590:	f3000400 	vshl.u8	d0, d0, d0
    1594:	009f5001 	addseq	r5, pc, r1
    1598:	00000000 	andeq	r0, r0, r0
    159c:	02000000 	andeq	r0, r0, #0
    15a0:	00003604 	andeq	r3, r0, r4, lsl #12
    15a4:	00003600 	andeq	r3, r0, r0, lsl #12
    15a8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    15b4:	00420000 	subeq	r0, r2, r0
    15b8:	00560000 	subseq	r0, r6, r0
    15bc:	00010000 	andeq	r0, r1, r0
    15c0:	00000051 	andeq	r0, r0, r1, asr r0
    15c4:	00000000 	andeq	r0, r0, r0
    15c8:	42000000 	andmi	r0, r0, #0
    15cc:	56000000 	strpl	r0, [r0], -r0
    15d0:	01000000 	mrseq	r0, (UNDEF: 0)
    15d4:	00005000 	andeq	r5, r0, r0
	...
    15e4:	00080000 	andeq	r0, r8, r0
    15e8:	000a0000 	andeq	r0, sl, r0
    15ec:	00050000 	andeq	r0, r5, r0
    15f0:	26320076 			; <UNDEFINED> instruction: 0x26320076
    15f4:	00000a9f 	muleq	r0, pc, sl	; <UNPREDICTABLE>
    15f8:	00001c00 	andeq	r1, r0, r0, lsl #24
    15fc:	56000100 	strpl	r0, [r0], -r0, lsl #2
    1600:	00000024 	andeq	r0, r0, r4, lsr #32
    1604:	00000026 	andeq	r0, r0, r6, lsr #32
    1608:	00760005 	rsbseq	r0, r6, r5
    160c:	269f2632 			; <UNDEFINED> instruction: 0x269f2632
    1610:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    1614:	01000000 	mrseq	r0, (UNDEF: 0)
    1618:	00005600 	andeq	r5, r0, r0, lsl #12
    161c:	00000000 	andeq	r0, r0, r0
    1620:	00010000 	andeq	r0, r1, r0
    1624:	00000000 	andeq	r0, r0, r0
    1628:	00010000 	andeq	r0, r1, r0
    162c:	00000000 	andeq	r0, r0, r0
    1630:	00080000 	andeq	r0, r8, r0
    1634:	000e0000 	andeq	r0, lr, r0
    1638:	00020000 	andeq	r0, r2, r0
    163c:	000e9f30 	andeq	r9, lr, r0, lsr pc
    1640:	00100000 	andseq	r0, r0, r0
    1644:	00010000 	andeq	r0, r1, r0
    1648:	00001054 	andeq	r1, r0, r4, asr r0
    164c:	00001600 	andeq	r1, r0, r0, lsl #12
    1650:	74000300 	strvc	r0, [r0], #-768	; 0xfffffd00
    1654:	00169f7f 	andseq	r9, r6, pc, ror pc
    1658:	001a0000 	andseq	r0, sl, r0
    165c:	00010000 	andeq	r0, r1, r0
    1660:	00002454 	andeq	r2, r0, r4, asr r4
    1664:	00002a00 	andeq	r2, r0, r0, lsl #20
    1668:	30000200 	andcc	r0, r0, r0, lsl #4
    166c:	00002a9f 	muleq	r0, pc, sl	; <UNPREDICTABLE>
    1670:	00002c00 	andeq	r2, r0, r0, lsl #24
    1674:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
    1678:	0000002c 	andeq	r0, r0, ip, lsr #32
    167c:	00000032 	andeq	r0, r0, r2, lsr r0
    1680:	7f740003 	svcvc	0x00740003
    1684:	0000329f 	muleq	r0, pc, r2	; <UNPREDICTABLE>
    1688:	00003600 	andeq	r3, r0, r0, lsl #12
    168c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	08000150 	stmdaeq	r0, {r4, r6, r8}
  14:	00000214 	andeq	r0, r0, r4, lsl r2
  18:	08000e80 	stmdaeq	r0, {r7, r9, sl, fp}
  1c:	00000084 	andeq	r0, r0, r4, lsl #1
	...
  28:	0000001c 	andeq	r0, r0, ip, lsl r0
  2c:	092c0002 	stmdbeq	ip!, {r1}
  30:	00040000 	andeq	r0, r4, r0
  34:	00000000 	andeq	r0, r0, r0
  38:	08000364 	stmdaeq	r0, {r2, r5, r6, r8, r9}
  3c:	00000628 	andeq	r0, r0, r8, lsr #12
	...
  48:	0000001c 	andeq	r0, r0, ip, lsl r0
  4c:	1bc80002 	blne	ff20005c <BootRAM+0xe1707fd>
  50:	00040000 	andeq	r0, r4, r0
  54:	00000000 	andeq	r0, r0, r0
  58:	0800098c 	stmdaeq	r0, {r2, r3, r7, r8, fp}
  5c:	00000460 	andeq	r0, r0, r0, ror #8
	...
  68:	0000001c 	andeq	r0, r0, ip, lsl r0
  6c:	38d70002 	ldmcc	r7, {r1}^
  70:	00040000 	andeq	r0, r4, r0
  74:	00000000 	andeq	r0, r0, r0
  78:	08000dec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, sl, fp}
  7c:	00000048 	andeq	r0, r0, r8, asr #32
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	08000150 	stmdaeq	r0, {r4, r6, r8}
   4:	08000364 	stmdaeq	r0, {r2, r5, r6, r8, r9}
   8:	08000e80 	stmdaeq	r0, {r7, r9, sl, fp}
   c:	08000f04 	stmdaeq	r0, {r2, r8, r9, sl, fp}
	...
  18:	00000034 	andeq	r0, r0, r4, lsr r0
  1c:	00000034 	andeq	r0, r0, r4, lsr r0
  20:	00000036 	andeq	r0, r0, r6, lsr r0
  24:	0000003c 	andeq	r0, r0, ip, lsr r0
	...
  30:	000002fe 	strdeq	r0, [r0], -lr
  34:	00000300 	andeq	r0, r0, r0, lsl #6
  38:	00000304 	andeq	r0, r0, r4, lsl #6
  3c:	00000304 	andeq	r0, r0, r4, lsl #6
  40:	00000308 	andeq	r0, r0, r8, lsl #6
  44:	00000318 	andeq	r0, r0, r8, lsl r3
	...
  50:	00000406 	andeq	r0, r0, r6, lsl #8
  54:	00000408 	andeq	r0, r0, r8, lsl #8
  58:	00000422 	andeq	r0, r0, r2, lsr #8
  5c:	00000428 	andeq	r0, r0, r8, lsr #8
  60:	0000044c 	andeq	r0, r0, ip, asr #8
  64:	00000458 	andeq	r0, r0, r8, asr r4
	...
  70:	00000484 	andeq	r0, r0, r4, lsl #9
  74:	0000048e 	andeq	r0, r0, lr, lsl #9
  78:	0000048e 	andeq	r0, r0, lr, lsl #9
  7c:	00000496 	muleq	r0, r6, r4
	...
  88:	000004d8 	ldrdeq	r0, [r0], -r8
  8c:	000004d8 	ldrdeq	r0, [r0], -r8
  90:	000004e0 	andeq	r0, r0, r0, ror #9
  94:	000004ec 	andeq	r0, r0, ip, ror #9
	...
  a0:	0000052e 	andeq	r0, r0, lr, lsr #10
  a4:	0000052e 	andeq	r0, r0, lr, lsr #10
  a8:	00000530 	andeq	r0, r0, r0, lsr r5
  ac:	00000538 	andeq	r0, r0, r8, lsr r5
	...
  b8:	00000544 	andeq	r0, r0, r4, asr #10
  bc:	00000558 	andeq	r0, r0, r8, asr r5
  c0:	00000568 	andeq	r0, r0, r8, ror #10
  c4:	0000059a 	muleq	r0, sl, r5
  c8:	0000059e 	muleq	r0, lr, r5
  cc:	000005be 			; <UNDEFINED> instruction: 0x000005be
	...
  d8:	00000582 	andeq	r0, r0, r2, lsl #11
  dc:	00000584 	andeq	r0, r0, r4, lsl #11
  e0:	0000058c 	andeq	r0, r0, ip, lsl #11
  e4:	0000059a 	muleq	r0, sl, r5
	...
  f0:	00000558 	andeq	r0, r0, r8, asr r5
  f4:	0000055e 	andeq	r0, r0, lr, asr r5
  f8:	000005ca 	andeq	r0, r0, sl, asr #11
  fc:	000005d2 	ldrdeq	r0, [r0], -r2
	...
 108:	00000062 	andeq	r0, r0, r2, rrx
 10c:	00000068 	andeq	r0, r0, r8, rrx
 110:	0000006c 	andeq	r0, r0, ip, rrx
 114:	00000070 	andeq	r0, r0, r0, ror r0
	...
 120:	000000fc 	strdeq	r0, [r0], -ip
 124:	00000100 	andeq	r0, r0, r0, lsl #2
 128:	00000106 	andeq	r0, r0, r6, lsl #2
 12c:	0000010a 	andeq	r0, r0, sl, lsl #2
	...
 138:	0000012a 	andeq	r0, r0, sl, lsr #2
 13c:	0000012e 	andeq	r0, r0, lr, lsr #2
 140:	00000150 	andeq	r0, r0, r0, asr r1
 144:	00000154 	andeq	r0, r0, r4, asr r1
	...
 150:	0000030e 	andeq	r0, r0, lr, lsl #6
 154:	00000310 	andeq	r0, r0, r0, lsl r3
 158:	00000312 	andeq	r0, r0, r2, lsl r3
 15c:	00000314 	andeq	r0, r0, r4, lsl r3
 160:	00000316 	andeq	r0, r0, r6, lsl r3
 164:	00000322 	andeq	r0, r0, r2, lsr #6
 168:	00000324 	andeq	r0, r0, r4, lsr #6
 16c:	00000336 	andeq	r0, r0, r6, lsr r3
	...
 178:	000003cc 	andeq	r0, r0, ip, asr #7
 17c:	000003cc 	andeq	r0, r0, ip, asr #7
 180:	000003ce 	andeq	r0, r0, lr, asr #7
 184:	000003d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 188:	000003d2 	ldrdeq	r0, [r0], -r2
 18c:	000003d6 	ldrdeq	r0, [r0], -r6
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
       0:	0000042f 	andeq	r0, r0, pc, lsr #8
       4:	00af0003 	adceq	r0, pc, r3
       8:	01020000 	mrseq	r0, (UNDEF: 2)
       c:	000d0efb 	strdeq	r0, [sp], -fp
      10:	01010101 	tsteq	r1, r1, lsl #2
      14:	01000000 	mrseq	r0, (UNDEF: 0)
      18:	73010000 	movwvc	r0, #4096	; 0x1000
      1c:	6c006372 	stcvs	3, cr6, [r0], {114}	; 0x72
      20:	692f6269 	stmdbvs	pc!, {r0, r3, r5, r6, r9, sp, lr}	; <UNPREDICTABLE>
      24:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
      28:	2f006564 	svccs	0x00006564
      2c:	2f727375 	svccs	0x00727375
      30:	2f62696c 	svccs	0x0062696c
      34:	2f636367 	svccs	0x00636367
      38:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
      3c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
      40:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
      44:	2e382f69 	cdpcs	15, 3, cr2, cr8, cr9, {3}
      48:	2f312e33 	svccs	0x00312e33
      4c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
      50:	00656475 	rsbeq	r6, r5, r5, ror r4
      54:	6f6c6300 	svcvs	0x006c6300
      58:	682e6b63 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
      5c:	00000100 	andeq	r0, r0, r0, lsl #2
      60:	6e69616d 	powvsez	f6, f1, #5.0
      64:	0100632e 	tsteq	r0, lr, lsr #6
      68:	6f630000 	svcvs	0x00630000
      6c:	635f6572 	cmpvs	pc, #478150656	; 0x1c800000
      70:	682e336d 	stmdavs	lr!, {r0, r2, r3, r5, r6, r8, r9, ip, sp}
      74:	00000200 	andeq	r0, r0, r0, lsl #4
      78:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
      7c:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
      80:	00000300 	andeq	r0, r0, r0, lsl #6
      84:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
      88:	735f6d65 	cmpvc	pc, #6464	; 0x1940
      8c:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
      90:	7878316c 	ldmdavc	r8!, {r2, r3, r5, r6, r8, ip, sp}^
      94:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
      98:	74730000 	ldrbtvc	r0, [r3], #-0
      9c:	6c32336d 	ldcvs	3, cr3, [r2], #-436	; 0xfffffe4c
      a0:	78313531 	ldmdavc	r1!, {r0, r4, r5, r8, sl, ip, sp}
      a4:	00682e63 	rsbeq	r2, r8, r3, ror #28
      a8:	75000002 	strvc	r0, [r0, #-2]
      ac:	6c5f6273 	lfmvs	f6, 2, [pc], {115}	; 0x73
      b0:	682e6269 	stmdavs	lr!, {r0, r3, r5, r6, r9, sp, lr}
      b4:	00000100 	andeq	r0, r0, r0, lsl #2
      b8:	001c0500 	andseq	r0, ip, r0, lsl #10
      bc:	01500205 	cmpeq	r0, r5, lsl #4
      c0:	1b030800 	blne	c20c8 <_Min_Stack_Size+0xc1cc8>
      c4:	13030501 	movwne	r0, #13569	; 0x3501
      c8:	01061005 	tsteq	r6, r5
      cc:	05210b05 	streq	r0, [r1, #-2821]!	; 0xfffff4fb
      d0:	03051f10 	movweq	r1, #24336	; 0x5f10
      d4:	0b054b06 	bleq	152cf4 <_Min_Stack_Size+0x1528f4>
      d8:	03050106 	movweq	r0, #20742	; 0x5106
      dc:	14144c06 	ldrne	r4, [r4], #-3078	; 0xfffff3fa
      e0:	01060c05 	tsteq	r6, r5, lsl #24
      e4:	4b060305 	blmi	180d00 <_Min_Stack_Size+0x180900>
      e8:	01060c05 	tsteq	r6, r5, lsl #24
      ec:	4d060305 	stcmi	3, cr0, [r6, #-20]	; 0xffffffec
      f0:	01060c05 	tsteq	r6, r5, lsl #24
      f4:	4a061e05 	bmi	187910 <_Min_Stack_Size+0x187510>
      f8:	02004205 	andeq	r4, r0, #1342177280	; 0x50000000
      fc:	05010204 	streq	r0, [r1, #-516]	; 0xfffffdfc
     100:	04020029 	streq	r0, [r2], #-41	; 0xffffffd7
     104:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
     108:	04020023 	streq	r0, [r2], #-35	; 0xffffffdd
     10c:	03052002 	movweq	r2, #20482	; 0x5002
     110:	0c053306 	stceq	3, cr3, [r5], {6}
     114:	03050106 	movweq	r0, #20742	; 0x5106
     118:	0c054c06 	stceq	12, cr4, [r5], {6}
     11c:	03050106 	movweq	r0, #20742	; 0x5106
     120:	0c054e06 	stceq	14, cr4, [r5], {6}
     124:	03050106 	movweq	r0, #20742	; 0x5106
     128:	0c054c06 	stceq	12, cr4, [r5], {6}
     12c:	03050106 	movweq	r0, #20742	; 0x5106
     130:	0c053d06 	stceq	13, cr3, [r5], {6}
     134:	03050106 	movweq	r0, #20742	; 0x5106
     138:	0c052f06 	stceq	15, cr2, [r5], {6}
     13c:	03050106 	movweq	r0, #20742	; 0x5106
     140:	26054b06 	strcs	r4, [r5], -r6, lsl #22
     144:	01040200 	mrseq	r0, R12_usr
     148:	000e0501 	andeq	r0, lr, r1, lsl #10
     14c:	06010402 	streq	r0, [r1], -r2, lsl #8
     150:	00080501 	andeq	r0, r8, r1, lsl #10
     154:	20010402 	andcs	r0, r1, r2, lsl #8
     158:	30060305 	andcc	r0, r6, r5, lsl #6
     15c:	01060d05 	tsteq	r6, r5, lsl #26
     160:	4c060305 	stcmi	3, cr0, [r6], {5}
     164:	01060d05 	tsteq	r6, r5, lsl #26
     168:	4b060305 	blmi	180d84 <_Min_Stack_Size+0x180984>
     16c:	01060d05 	tsteq	r6, r5, lsl #26
     170:	03060305 	movweq	r0, #25349	; 0x6305
     174:	0c054a0b 			; <UNDEFINED> instruction: 0x0c054a0b
     178:	03050106 	movweq	r0, #20742	; 0x5106
     17c:	0c054b06 			; <UNDEFINED> instruction: 0x0c054b06
     180:	01050106 	tsteq	r5, r6, lsl #2
     184:	061f052f 	ldreq	r0, [pc], -pc, lsr #10
     188:	13030592 	movwne	r0, #13714	; 0x3592
     18c:	07051513 	smladeq	r5, r3, r5, r1
     190:	03050106 	movweq	r0, #20742	; 0x5106
     194:	07052f06 	streq	r2, [r5, -r6, lsl #30]
     198:	03050106 	movweq	r0, #20742	; 0x5106
     19c:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
     1a0:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     1a4:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
     1a8:	0511060d 	ldreq	r0, [r1, #-1549]	; 0xfffff9f3
     1ac:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
     1b0:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
     1b4:	203c2007 	eorscs	r2, ip, r7
     1b8:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
     1bc:	051f0204 	ldreq	r0, [pc, #-516]	; ffffffc0 <BootRAM+0xef70761>
     1c0:	202e3119 	eorcs	r3, lr, r9, lsl r1
     1c4:	03060305 	movweq	r0, #25349	; 0x6305
     1c8:	0e05201d 	mcreq	0, 0, r2, cr5, cr13, {0}
     1cc:	03050106 	movweq	r0, #20742	; 0x5106
     1d0:	0e055906 	vmlaeq.f16	s10, s10, s12	; <UNPREDICTABLE>
     1d4:	03050106 	movweq	r0, #20742	; 0x5106
     1d8:	0e054b06 	vmlaeq.f64	d4, d5, d6
     1dc:	03050106 	movweq	r0, #20742	; 0x5106
     1e0:	07054d06 	streq	r4, [r5, -r6, lsl #26]
     1e4:	03050106 	movweq	r0, #20742	; 0x5106
     1e8:	07052f06 	streq	r2, [r5, -r6, lsl #30]
     1ec:	03050106 	movweq	r0, #20742	; 0x5106
     1f0:	05053006 	streq	r3, [r5, #-6]
     1f4:	21060106 	tstcs	r6, r6, lsl #2
     1f8:	09051313 	stmdbeq	r5, {r0, r1, r4, r8, r9, ip}
     1fc:	03050106 	movweq	r0, #20742	; 0x5106
     200:	14133406 	ldrne	r3, [r3], #-1030	; 0xfffffbfa
     204:	07051413 	smladeq	r5, r3, r4, r1
     208:	03050106 	movweq	r0, #20742	; 0x5106
     20c:	05142f06 	ldreq	r2, [r4, #-3846]	; 0xfffff0fa
     210:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     214:	05220603 	streq	r0, [r2, #-1539]!	; 0xfffff9fd
     218:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
     21c:	054b0603 	strbeq	r0, [fp, #-1539]	; 0xfffff9fd
     220:	3011060b 	andscc	r0, r1, fp, lsl #12
     224:	20060505 	andcs	r0, r6, r5, lsl #10
     228:	01060b05 	tsteq	r6, r5, lsl #22
     22c:	2e200705 	cdpcs	7, 2, cr0, cr0, cr5, {0}
     230:	00030520 	andeq	r0, r3, r0, lsr #10
     234:	1f020402 	svcne	0x00020402
     238:	05311905 	ldreq	r1, [r1, #-2309]!	; 0xfffff6fb
     23c:	6d030605 	stcvs	6, cr0, [r3, #-20]	; 0xffffffec
     240:	0905133c 	stmdbeq	r5, {r2, r3, r4, r5, r8, r9, ip}
     244:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
     248:	1b030603 	blne	c1a5c <_Min_Stack_Size+0xc165c>
     24c:	19051420 	stmdbne	r5, {r5, sl, ip}
     250:	01051006 	tsteq	r5, r6
     254:	06030540 	streq	r0, [r3], -r0, asr #10
     258:	14207303 	strtne	r7, [r0], #-771	; 0xfffffcfd
     25c:	01060705 	tsteq	r6, r5, lsl #14
     260:	21060305 	tstcs	r6, r5, lsl #6
     264:	060c0513 			; <UNDEFINED> instruction: 0x060c0513
     268:	1d070515 	cfstr32ne	mvfx0, [r7, #-84]	; 0xffffffac
     26c:	2f060305 	svccs	0x00060305
     270:	01060d05 	tsteq	r6, r5, lsl #26
     274:	21060305 	tstcs	r6, r5, lsl #6
     278:	11060d05 	tstne	r6, r5, lsl #26
     27c:	30060505 	andcc	r0, r6, r5, lsl #10
     280:	01060c05 	tsteq	r6, r5, lsl #24
     284:	05201305 	streq	r1, [r0, #-773]!	; 0xfffffcfb
     288:	202e2e07 	eorcs	r2, lr, r7, lsl #28
     28c:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
     290:	061f0204 	ldreq	r0, [pc], -r4, lsl #4
     294:	3c7fbd03 	ldclcc	13, cr11, [pc], #-12	; 290 <_Min_Heap_Size+0x290>
     298:	060b0515 			; <UNDEFINED> instruction: 0x060b0515
     29c:	06030501 	streq	r0, [r3], -r1, lsl #10
     2a0:	060b054b 	streq	r0, [fp], -fp, asr #10
     2a4:	06030501 	streq	r0, [r3], -r1, lsl #10
     2a8:	060b054b 	streq	r0, [fp], -fp, asr #10
     2ac:	06030501 	streq	r0, [r3], -r1, lsl #10
     2b0:	060b054b 	streq	r0, [fp], -fp, asr #10
     2b4:	06030501 	streq	r0, [r3], -r1, lsl #10
     2b8:	060b054b 	streq	r0, [fp], -fp, asr #10
     2bc:	06030501 	streq	r0, [r3], -r1, lsl #10
     2c0:	060b054b 	streq	r0, [fp], -fp, asr #10
     2c4:	06030501 	streq	r0, [r3], -r1, lsl #10
     2c8:	0605054d 	streq	r0, [r5], -sp, asr #10
     2cc:	05210601 	streq	r0, [r1, #-1537]!	; 0xfffff9ff
     2d0:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     2d4:	054b0605 	strbeq	r0, [fp, #-1541]	; 0xfffff9fb
     2d8:	3011060d 	andscc	r0, r1, sp, lsl #12
     2dc:	20060705 	andcs	r0, r6, r5, lsl #14
     2e0:	01060d05 	tsteq	r6, r5, lsl #26
     2e4:	2e200905 	vmulcs.f16	s0, s0, s10	; <UNPREDICTABLE>
     2e8:	00050520 	andeq	r0, r5, r0, lsr #10
     2ec:	1f020402 	svcne	0x00020402
     2f0:	0d053606 	stceq	6, cr3, [r5, #-24]	; 0xffffffe8
     2f4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     2f8:	0d055906 	vstreq.16	s10, [r5, #-12]	; <UNPREDICTABLE>
     2fc:	07051106 	streq	r1, [r5, -r6, lsl #2]
     300:	0d053006 	stceq	0, cr3, [r5, #-24]	; 0xffffffe8
     304:	09050106 	stmdbeq	r5, {r1, r2, r8}
     308:	05202e20 	streq	r2, [r0, #-3616]!	; 0xfffff1e0
     30c:	04020005 	streq	r0, [r2], #-5
     310:	1b051f02 	blne	147f20 <_Min_Stack_Size+0x147b20>
     314:	06100531 			; <UNDEFINED> instruction: 0x06100531
     318:	059e3303 	ldreq	r3, [lr, #771]	; 0x303
     31c:	15131303 	ldrne	r1, [r3, #-771]	; 0xfffffcfd
     320:	01060705 	tsteq	r6, r5, lsl #14
     324:	2f060305 	svccs	0x00060305
     328:	01060705 	tsteq	r6, r5, lsl #14
     32c:	2f060305 	svccs	0x00060305
     330:	060d0513 			; <UNDEFINED> instruction: 0x060d0513
     334:	06030501 	streq	r0, [r3], -r1, lsl #10
     338:	060d0521 	streq	r0, [sp], -r1, lsr #10
     33c:	06050511 			; <UNDEFINED> instruction: 0x06050511
     340:	060c0530 			; <UNDEFINED> instruction: 0x060c0530
     344:	20070501 	andcs	r0, r7, r1, lsl #10
     348:	0305203c 	movweq	r2, #20540	; 0x503c
     34c:	02040200 	andeq	r0, r4, #0, 4
     350:	053f061f 	ldreq	r0, [pc, #-1567]!	; fffffd39 <BootRAM+0xef704da>
     354:	03050119 	movweq	r0, #20761	; 0x5119
     358:	060b0515 			; <UNDEFINED> instruction: 0x060b0515
     35c:	06030501 	streq	r0, [r3], -r1, lsl #10
     360:	060b054b 	streq	r0, [fp], -fp, asr #10
     364:	06030501 	streq	r0, [r3], -r1, lsl #10
     368:	060b054b 	streq	r0, [fp], -fp, asr #10
     36c:	06030501 	streq	r0, [r3], -r1, lsl #10
     370:	060b054b 	streq	r0, [fp], -fp, asr #10
     374:	4b010501 	blmi	41780 <_Min_Stack_Size+0x41380>
     378:	2c050204 	sfmcs	f0, 4, [r5], {4}
     37c:	7ed10306 	cdpvc	3, 13, cr0, cr1, cr6, {0}
     380:	012d0558 			; <UNDEFINED> instruction: 0x012d0558
     384:	01060105 	tsteq	r6, r5, lsl #2
     388:	22061a05 	andcs	r1, r6, #20480	; 0x5000
     38c:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
     390:	04020008 	streq	r0, [r2], #-8
     394:	00010601 	andeq	r0, r1, r1, lsl #12
     398:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
     39c:	05210105 	streq	r0, [r1, #-261]!	; 0xfffffefb
     3a0:	04020010 	streq	r0, [r2], #-16
     3a4:	021f0602 	andseq	r0, pc, #2097152	; 0x200000
     3a8:	01010002 	tsteq	r1, r2
     3ac:	0f050204 	svceq	0x00050204
     3b0:	80020500 	andhi	r0, r2, r0, lsl #10
     3b4:	0308000e 	movweq	r0, #32782	; 0x800e
     3b8:	0305010d 	movweq	r0, #20749	; 0x510d
     3bc:	060f0513 			; <UNDEFINED> instruction: 0x060f0513
     3c0:	21030511 	tstcs	r3, r1, lsl r5
     3c4:	0f053d06 	svceq	0x00053d06
     3c8:	03050106 	movweq	r0, #20742	; 0x5106
     3cc:	2e015906 	vmlacs.f16	s10, s2, s12	; <UNPREDICTABLE>
     3d0:	20202e2e 	eorcs	r2, r0, lr, lsr #28
     3d4:	01202e01 			; <UNDEFINED> instruction: 0x01202e01
     3d8:	01011605 	tsteq	r1, r5, lsl #12
     3dc:	202e2e20 	eorcs	r2, lr, r0, lsr #28
     3e0:	202e0120 	eorcs	r0, lr, r0, lsr #2
     3e4:	13030501 	movwne	r0, #13569	; 0x3501
     3e8:	06200601 	strteq	r0, [r0], -r1, lsl #12
     3ec:	20012e20 	andcs	r2, r1, r0, lsr #28
     3f0:	202e0120 	eorcs	r0, lr, r0, lsr #2
     3f4:	01160501 	tsteq	r6, r1, lsl #10
     3f8:	012e2001 			; <UNDEFINED> instruction: 0x012e2001
     3fc:	2e012020 	cdpcs	0, 0, cr2, cr1, cr0, {1}
     400:	03050120 	movweq	r0, #20768	; 0x5120
     404:	03042f14 	movweq	r2, #20244	; 0x4f14
     408:	9f031605 	svcls	0x00031605
     40c:	35050109 	strcc	r0, [r5, #-265]	; 0xfffffef7
     410:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
     414:	e4030605 	str	r0, [r3], #-1541	; 0xfffff9fb
     418:	03052076 	movweq	r2, #20598	; 0x5076
     41c:	01040200 	mrseq	r0, R12_usr
     420:	05051e06 	streq	r1, [r5, #-3590]	; 0xfffff1fa
     424:	01040200 	mrseq	r0, R12_usr
     428:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
     42c:	0d022f01 	stceq	15, cr2, [r2, #-4]
     430:	b7010100 	strlt	r0, [r1, -r0, lsl #2]
     434:	03000007 	movweq	r0, #7
     438:	0000a700 	andeq	sl, r0, r0, lsl #14
     43c:	fb010200 	blx	40c46 <_Min_Stack_Size+0x40846>
     440:	01000d0e 	tsteq	r0, lr, lsl #26
     444:	00010101 	andeq	r0, r1, r1, lsl #2
     448:	00010000 	andeq	r0, r1, r0
     44c:	72730100 	rsbsvc	r0, r3, #0, 2
     450:	696c0063 	stmdbvs	ip!, {r0, r1, r5, r6}^
     454:	6e692f62 	cdpvs	15, 6, cr2, cr9, cr2, {3}
     458:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     45c:	752f0065 	strvc	r0, [pc, #-101]!	; 3ff <_Min_Heap_Size+0x3ff>
     460:	6c2f7273 	sfmvs	f7, 4, [pc], #-460	; 29c <_Min_Heap_Size+0x29c>
     464:	672f6269 	strvs	r6, [pc, -r9, ror #4]!
     468:	612f6363 			; <UNDEFINED> instruction: 0x612f6363
     46c:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     470:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     474:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     478:	332e382f 			; <UNDEFINED> instruction: 0x332e382f
     47c:	692f312e 	stmdbvs	pc!, {r1, r2, r3, r5, r8, ip, sp}	; <UNPREDICTABLE>
     480:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     484:	00006564 	andeq	r6, r0, r4, ror #10
     488:	5f627375 	svcpl	0x00627375
     48c:	2e62696c 	vnmulcs.f16	s13, s4, s25	; <UNPREDICTABLE>
     490:	00010063 	andeq	r0, r1, r3, rrx
     494:	726f6300 	rsbvc	r6, pc, #0, 6
     498:	6d635f65 	stclvs	15, cr5, [r3, #-404]!	; 0xfffffe6c
     49c:	00682e33 	rsbeq	r2, r8, r3, lsr lr
     4a0:	75000002 	strvc	r0, [r0, #-2]
     4a4:	6c5f6273 	lfmvs	f6, 2, [pc], {115}	; 0x73
     4a8:	682e6269 	stmdavs	lr!, {r0, r3, r5, r6, r9, sp, lr}
     4ac:	00000100 	andeq	r0, r0, r0, lsl #2
     4b0:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
     4b4:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
     4b8:	00000300 	andeq	r0, r0, r0, lsl #6
     4bc:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     4c0:	35316c32 	ldrcc	r6, [r1, #-3122]!	; 0xfffff3ce
     4c4:	2e637831 	mcrcs	8, 3, r7, cr3, cr1, {1}
     4c8:	00020068 	andeq	r0, r2, r8, rrx
     4cc:	73797300 	cmnvc	r9, #0, 6
     4d0:	5f6d6574 	svcpl	0x006d6574
     4d4:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     4d8:	78316c32 	ldmdavc	r1!, {r1, r4, r5, sl, fp, sp, lr}
     4dc:	00682e78 	rsbeq	r2, r8, r8, ror lr
     4e0:	00000002 	andeq	r0, r0, r2
     4e4:	05003105 	streq	r3, [r0, #-261]	; 0xfffffefb
     4e8:	00036402 	andeq	r6, r3, r2, lsl #8
     4ec:	011c0308 	tsteq	ip, r8, lsl #6
     4f0:	05013205 	streq	r3, [r1, #-517]	; 0xfffffdfb
     4f4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     4f8:	7a03062b 	bvc	c1dac <_Min_Stack_Size+0xc19ac>
     4fc:	012c0520 			; <UNDEFINED> instruction: 0x012c0520
     500:	01060105 	tsteq	r6, r5, lsl #2
     504:	3f065c05 	svccc	0x00065c05
     508:	05015d05 	streq	r5, [r1, #-3333]	; 0xfffff2fb
     50c:	20010601 	andcs	r0, r1, r1, lsl #12
     510:	21066305 	tstcs	r6, r5, lsl #6
     514:	05016405 	streq	r6, [r1, #-1029]	; 0xfffffbfb
     518:	20010601 	andcs	r0, r1, r1, lsl #12
     51c:	03061105 	movweq	r1, #24837	; 0x6105
     520:	0305201e 	movweq	r2, #20510	; 0x501e
     524:	06100513 			; <UNDEFINED> instruction: 0x06100513
     528:	06030501 	streq	r0, [r3], -r1, lsl #10
     52c:	06100559 			; <UNDEFINED> instruction: 0x06100559
     530:	06030501 	streq	r0, [r3], -r1, lsl #10
     534:	060f054c 	streq	r0, [pc], -ip, asr #10
     538:	06030501 	streq	r0, [r3], -r1, lsl #10
     53c:	060f0559 			; <UNDEFINED> instruction: 0x060f0559
     540:	06030501 	streq	r0, [r3], -r1, lsl #10
     544:	0107054b 	tsteq	r7, fp, asr #10
     548:	0f050106 	svceq	0x00050106
     54c:	002e0511 	eoreq	r0, lr, r1, lsl r5
     550:	06030402 	streq	r0, [r3], -r2, lsl #8
     554:	00030521 	andeq	r0, r3, r1, lsr #10
     558:	06030402 	streq	r0, [r3], -r2, lsl #8
     55c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
     560:	21062003 	tstcs	r6, r3
     564:	01060f05 	tsteq	r6, r5, lsl #30
     568:	2f060305 	svccs	0x00060305
     56c:	01060f05 	tsteq	r6, r5, lsl #30
     570:	2f060305 	svccs	0x00060305
     574:	01060f05 	tsteq	r6, r5, lsl #30
     578:	2f060305 	svccs	0x00060305
     57c:	01060f05 	tsteq	r6, r5, lsl #30
     580:	2f060305 	svccs	0x00060305
     584:	01060f05 	tsteq	r6, r5, lsl #30
     588:	0603052e 	streq	r0, [r3], -lr, lsr #10
     58c:	0502042f 	streq	r0, [r2, #-1071]	; 0xfffffbd1
     590:	0b990316 	bleq	fe6411f0 <BootRAM+0xd5b1991>
     594:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
     598:	01062705 	tsteq	r6, r5, lsl #14
     59c:	0501044a 	streq	r0, [r1, #-1098]	; 0xfffffbb6
     5a0:	e6030603 	str	r0, [r3], -r3, lsl #12
     5a4:	0f050174 	svceq	0x00050174
     5a8:	01050106 	tsteq	r5, r6, lsl #2
     5ac:	064f0559 			; <UNDEFINED> instruction: 0x064f0559
     5b0:	ac00e603 	stcge	6, cr14, [r0], {3}
     5b4:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
     5b8:	0511064f 	ldreq	r0, [r1, #-1615]	; 0xfffff9b1
     5bc:	09052118 	stmdbeq	r5, {r3, r4, r8, sp}
     5c0:	56180522 	ldrpl	r0, [r8], -r2, lsr #10
     5c4:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
     5c8:	05051413 	streq	r1, [r5, #-1043]	; 0xfffffbed
     5cc:	59062e06 	stmdbpl	r6, {r1, r2, r9, sl, fp, sp}
     5d0:	05200601 	streq	r0, [r0, #-1537]!	; 0xfffff9ff
     5d4:	05950603 	ldreq	r0, [r5, #1539]	; 0x603
     5d8:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
     5dc:	13210603 			; <UNDEFINED> instruction: 0x13210603
     5e0:	3c130614 	ldccc	6, cr0, [r3], {20}
     5e4:	19052e06 	stmdbne	r5, {r1, r2, r9, sl, fp, sp}
     5e8:	061d0559 			; <UNDEFINED> instruction: 0x061d0559
     5ec:	05052e01 	streq	r2, [r5, #-3585]	; 0xfffff1ff
     5f0:	20770306 	rsbscs	r0, r7, r6, lsl #6
     5f4:	06070501 	streq	r0, [r7], -r1, lsl #10
     5f8:	331205b3 	tstcc	r2, #750780416	; 0x2cc00000
     5fc:	30060305 	andcc	r0, r6, r5, lsl #6
     600:	01061205 	tsteq	r6, r5, lsl #4
     604:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
     608:	4a060505 	bmi	181a24 <_Min_Stack_Size+0x181624>
     60c:	23056706 	movwcs	r6, #22278	; 0x5706
     610:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     614:	16052106 	strne	r2, [r5], -r6, lsl #2
     618:	07050106 	streq	r0, [r5, -r6, lsl #2]
     61c:	2d160521 	cfldr32cs	mvfx0, [r6, #-132]	; 0xffffff7c
     620:	2f060505 	svccs	0x00060505
     624:	2e060705 	cdpcs	7, 0, cr0, cr6, cr5, {0}
     628:	01580621 	cmpeq	r8, r1, lsr #12
     62c:	0c05013e 	stfeqs	f0, [r5], {62}	; 0x3e
     630:	2e0f0306 	cdpcs	3, 0, cr0, cr15, cr6, {0}
     634:	051e0505 	ldreq	r0, [lr, #-1285]	; 0xfffffafb
     638:	05220603 	streq	r0, [r2, #-1539]!	; 0xfffff9fd
     63c:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
     640:	19052101 	stmdbne	r5, {r0, r8, sp}
     644:	20650306 	rsbcs	r0, r5, r6, lsl #6
     648:	01061d05 	tsteq	r6, r5, lsl #26
     64c:	060e052e 	streq	r0, [lr], -lr, lsr #10
     650:	06120521 	ldreq	r0, [r2], -r1, lsr #10
     654:	05052e01 	streq	r2, [r5, #-3585]	; 0xfffff1ff
     658:	200d0306 	andcs	r0, sp, r6, lsl #6
     65c:	01062305 	tsteq	r6, r5, lsl #6
     660:	21060505 	tstcs	r6, r5, lsl #10
     664:	13062605 	movwne	r2, #26117	; 0x6605
     668:	061f0705 	ldreq	r0, [pc], -r5, lsl #14
     66c:	06260521 	strteq	r0, [r6], -r1, lsr #10
     670:	1d313915 			; <UNDEFINED> instruction: 0x1d313915
     674:	21060705 	tstcs	r6, r5, lsl #14
     678:	16062705 	strne	r2, [r6], -r5, lsl #14
     67c:	052e3305 	streq	r3, [lr, #-773]!	; 0xfffffcfb
     680:	07052a2e 	streq	r2, [r5, -lr, lsr #20]
     684:	13133006 	tstne	r3, #6
     688:	01063305 	tsteq	r6, r5, lsl #6
     68c:	052e2705 	streq	r2, [lr, #-1797]!	; 0xfffff8fb
     690:	27053017 	smladcs	r5, r7, r0, r3
     694:	0605051e 			; <UNDEFINED> instruction: 0x0605051e
     698:	06170530 			; <UNDEFINED> instruction: 0x06170530
     69c:	06050501 	streq	r0, [r5], -r1, lsl #10
     6a0:	2006012f 	andcs	r0, r6, pc, lsr #2
     6a4:	08065605 	stmdaeq	r6, {r0, r2, r9, sl, ip, lr}
     6a8:	13030525 	movwne	r0, #13605	; 0x3525
     6ac:	11065605 	tstne	r6, r5, lsl #12
     6b0:	05250305 	streq	r0, [r5, #-773]!	; 0xfffffcfb
     6b4:	03052c09 	movweq	r2, #23561	; 0x5c09
     6b8:	1c180530 	cfldr32ne	mvfx0, [r8], {48}	; 0x30
     6bc:	05240305 	streq	r0, [r4, #-773]!	; 0xfffffcfb
     6c0:	03054618 	movweq	r4, #22040	; 0x5618
     6c4:	14133d06 	ldrne	r3, [r3], #-3334	; 0xfffff2fa
     6c8:	03280601 			; <UNDEFINED> instruction: 0x03280601
     6cc:	91062078 	tstls	r6, r8, ror r0
     6d0:	0c05a001 	stceq	0, cr10, [r5], {1}
     6d4:	03050106 	movweq	r0, #20742	; 0x5106
     6d8:	14132106 	ldrne	r2, [r3], #-262	; 0xfffffefa
     6dc:	2f062e06 	svccs	0x00062e06
     6e0:	054b1905 	strbeq	r1, [fp, #-2309]	; 0xfffff6fb
     6e4:	2e01061d 	mcrcs	6, 0, r0, cr1, cr13, {0}
     6e8:	05311205 	ldreq	r1, [r1, #-517]!	; 0xfffffdfb
     6ec:	05300603 	ldreq	r0, [r0, #-1539]!	; 0xfffff9fd
     6f0:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     6f4:	06240603 	strteq	r0, [r4], -r3, lsl #12
     6f8:	2e05053c 	mcrcs	5, 0, r0, cr5, cr12, {1}
     6fc:	05210674 	streq	r0, [r1, #-1652]!	; 0xfffff98c
     700:	05130624 	ldreq	r0, [r3, #-1572]	; 0xfffff9dc
     704:	05052d23 	streq	r2, [r5, #-3363]	; 0xfffff2dd
     708:	24052106 	strcs	r2, [r5], #-262	; 0xfffffefa
     70c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     710:	23052f06 	movwcs	r2, #24326	; 0x5f06
     714:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     718:	24052106 	strcs	r2, [r5], #-262	; 0xfffffefa
     71c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     720:	09053006 	stmdbeq	r5, {r1, r2, ip, sp}
     724:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     728:	2e052106 	adfcss	f2, f5, f6
     72c:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
     730:	3c0d0305 	stccc	3, cr0, [sp], {5}
     734:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
     738:	01061405 	tsteq	r6, r5, lsl #8
     73c:	05230c05 	streq	r0, [r3, #-3077]!	; 0xfffff3fb
     740:	03052b14 	movweq	r2, #23316	; 0x5b14
     744:	14052f06 	strne	r2, [r5], #-3846	; 0xfffff0fa
     748:	0c050106 	stfeqs	f0, [r5], {6}
     74c:	1e140522 	cfmul64ne	mvdx0, mvdx4, mvdx2
     750:	30060305 	andcc	r0, r6, r5, lsl #6
     754:	13060105 	movwne	r0, #24837	; 0x6105
     758:	03061905 	movweq	r1, #26885	; 0x6905
     75c:	1d05205e 	stcne	0, cr2, [r5, #-376]	; 0xfffffe88
     760:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
     764:	05210619 	streq	r0, [r1, #-1561]!	; 0xfffff9e7
     768:	2e01061d 	mcrcs	6, 0, r0, cr1, cr13, {0}
     76c:	21060e05 	tstcs	r6, r5, lsl #28
     770:	01061205 	tsteq	r6, r5, lsl #4
     774:	0605052e 	streq	r0, [r5], -lr, lsr #10
     778:	05200f03 	streq	r0, [r0, #-3843]!	; 0xfffff0fd
     77c:	05010623 	streq	r0, [r1, #-1571]	; 0xfffff9dd
     780:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
     784:	05130607 	ldreq	r0, [r3, #-1543]	; 0xfffff9f9
     788:	05051f23 	streq	r1, [r5, #-3875]	; 0xfffff0dd
     78c:	47052106 	strmi	r2, [r5, -r6, lsl #2]
     790:	07051306 	streq	r1, [r5, -r6, lsl #6]
     794:	0521061f 	streq	r0, [r1, #-1567]!	; 0xfffff9e1
     798:	05010647 	streq	r0, [r1, #-1607]	; 0xfffff9b9
     79c:	07053c26 	streq	r3, [r5, -r6, lsr #24]
     7a0:	50054b06 	andpl	r4, r5, r6, lsl #22
     7a4:	49050106 	stmdbmi	r5, {r1, r2, r8}
     7a8:	66270532 			; <UNDEFINED> instruction: 0x66270532
     7ac:	68060505 	stmdavs	r6, {r0, r2, r8, sl}
     7b0:	05019f01 	streq	r9, [r1, #-3841]	; 0xfffff0ff
     7b4:	47059907 	strmi	r9, [r5, -r7, lsl #18]
     7b8:	26050106 	strcs	r0, [r5], -r6, lsl #2
     7bc:	0607053c 			; <UNDEFINED> instruction: 0x0607053c
     7c0:	5505134b 	strpl	r1, [r5, #-843]	; 0xfffffcb5
     7c4:	19050106 	stmdbne	r5, {r1, r2, r8}
     7c8:	c80c0306 	stmdagt	ip, {r1, r2, r8, r9}
     7cc:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
     7d0:	05110619 	ldreq	r0, [r1, #-1561]	; 0xfffff9e7
     7d4:	05052109 	streq	r2, [r5, #-265]	; 0xfffffef7
     7d8:	2f2f063c 	svccs	0x002f063c
     7dc:	01060f05 	tsteq	r6, r5, lsl #30
     7e0:	052f0e05 	streq	r0, [pc, #-3589]!	; fffff9e3 <BootRAM+0xef70184>
     7e4:	05051f0f 	streq	r1, [r5, #-3855]	; 0xfffff0f1
     7e8:	0e052f06 	cdpeq	15, 0, cr2, cr5, cr6, {0}
     7ec:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     7f0:	10053d06 	andne	r3, r5, r6, lsl #26
     7f4:	24050106 	strcs	r0, [r5], #-262	; 0xfffffefa
     7f8:	1e100522 	cfmul64ne	mvdx0, mvdx0, mvdx2
     7fc:	2f060505 	svccs	0x00060505
     800:	06010905 	streq	r0, [r1], -r5, lsl #18
     804:	11100501 	tstne	r0, r1, lsl #10
     808:	02000705 	andeq	r0, r0, #1310720	; 0x140000
     80c:	30060304 	andcc	r0, r6, r4, lsl #6
     810:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
     814:	1f060304 	svcne	0x00060304
     818:	02002405 	andeq	r2, r0, #83886080	; 0x5000000
     81c:	052f0304 	streq	r0, [pc, #-772]!	; 520 <_Min_Stack_Size+0x120>
     820:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
     824:	05052e03 	streq	r2, [r5, #-3587]	; 0xfffff1fd
     828:	03040200 	movweq	r0, #16896	; 0x4200
     82c:	0524062d 	streq	r0, [r4, #-1581]!	; 0xfffff9d3
     830:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
     834:	0f053d05 	svceq	0x00053d05
     838:	0605051f 			; <UNDEFINED> instruction: 0x0605051f
     83c:	0567592f 	strbeq	r5, [r7, #-2351]!	; 0xfffff6d1
     840:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     844:	052f0605 	streq	r0, [pc, #-1541]!	; 247 <_Min_Heap_Size+0x247>
     848:	09053103 	stmdbeq	r5, {r0, r1, r8, ip, sp}
     84c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     850:	052f063c 	streq	r0, [pc, #-1596]!	; 21c <_Min_Heap_Size+0x21c>
     854:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
     858:	05052e0d 	streq	r2, [r5, #-3597]	; 0xfffff1f3
     85c:	08052f06 	stmdaeq	r5, {r1, r2, r8, r9, sl, fp, sp}
     860:	07050106 	streq	r0, [r5, -r6, lsl #2]
     864:	052f0666 	streq	r0, [pc, #-1638]!	; 206 <_Min_Heap_Size+0x206>
     868:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
     86c:	4b062007 	blmi	188890 <_Min_Stack_Size+0x188490>
     870:	84050501 	strhi	r0, [r5], #-1281	; 0xfffffaff
     874:	01060805 	tsteq	r6, r5, lsl #16
     878:	06200705 	strteq	r0, [r0], -r5, lsl #14
     87c:	0610052f 	ldreq	r0, [r0], -pc, lsr #10
     880:	20070501 	andcs	r0, r7, r1, lsl #10
     884:	06015906 	streq	r5, [r1], -r6, lsl #18
     888:	06030582 	streq	r0, [r3], -r2, lsl #11
     88c:	06090516 			; <UNDEFINED> instruction: 0x06090516
     890:	3c050501 	cfstr32cc	mvfx0, [r5], {1}
     894:	052f2f06 	streq	r2, [pc, #-3846]!	; fffff996 <BootRAM+0xef70137>
     898:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
     89c:	05670605 	strbeq	r0, [r7, #-1541]!	; 0xfffff9fb
     8a0:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
     8a4:	054d0603 	strbeq	r0, [sp, #-1539]	; 0xfffff9fd
     8a8:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
     8ac:	2f063c05 	svccs	0x00063c05
     8b0:	01060f05 	tsteq	r6, r5, lsl #30
     8b4:	83060505 	movwhi	r0, #25861	; 0x6505
     8b8:	01060f05 	tsteq	r6, r5, lsl #30
     8bc:	054c0105 	strbeq	r0, [ip, #-261]	; 0xfffffefb
     8c0:	0f030643 	svceq	0x00030643
     8c4:	130305f2 	movwne	r0, #13810	; 0x35f2
     8c8:	11064305 	tstne	r6, r5, lsl #6
     8cc:	05260305 	streq	r0, [r6, #-773]!	; 0xfffffcfb
     8d0:	10051b33 	andne	r1, r5, r3, lsr fp
     8d4:	06030520 	streq	r0, [r3], -r0, lsr #10
     8d8:	063f054b 	ldrteq	r0, [pc], -fp, asr #10
     8dc:	1d170515 	cfldr32ne	mvfx0, [r7, #-84]	; 0xffffffac
     8e0:	05233805 	streq	r3, [r3, #-2053]!	; 0xfffff7fb
     8e4:	0305470c 	movweq	r4, #22284	; 0x570c
     8e8:	05132206 	ldreq	r2, [r3, #-518]	; 0xfffffdfa
     8ec:	05010638 	streq	r0, [r1, #-1592]	; 0xfffff9c8
     8f0:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
     8f4:	03050107 	movweq	r0, #20743	; 0x5107
     8f8:	01040200 	mrseq	r0, R12_usr
     8fc:	3f060106 	svccc	0x00060106
     900:	05201406 	streq	r1, [r0, #-1030]!	; 0xfffffbfa
     904:	03053a10 	movweq	r3, #23056	; 0x5a10
     908:	06012206 	streq	r2, [r1], -r6, lsl #4
     90c:	9101053c 	tstls	r1, ip, lsr r5
     910:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
     914:	1b060304 	blne	18152c <_Min_Stack_Size+0x18112c>
     918:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
     91c:	01060304 	tsteq	r6, r4, lsl #6
     920:	03040200 	movweq	r0, #16896	; 0x4200
     924:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
     928:	22052003 	andcs	r2, r5, #3
     92c:	02050006 	andeq	r0, r5, #6
     930:	080007bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, r9, sl}
     934:	017dff03 	cmneq	sp, r3, lsl #30	; <UNPREDICTABLE>
     938:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
     93c:	05110622 	ldreq	r0, [r1, #-1570]	; 0xfffff9de
     940:	2405210b 	strcs	r2, [r5], #-267	; 0xfffffef5
     944:	200b0520 	andcs	r0, fp, r0, lsr #10
     948:	052e2405 	streq	r2, [lr, #-1029]!	; 0xfffffbfb
     94c:	3d062005 	stccc	0, cr2, [r6, #-20]	; 0xffffffec
     950:	01061005 	tsteq	r6, r5
     954:	5b060305 	blpl	181570 <_Min_Stack_Size+0x181170>
     958:	01060805 	tsteq	r6, r5, lsl #16
     95c:	05200505 	streq	r0, [r0, #-1285]!	; 0xfffffafb
     960:	054b0603 	strbeq	r0, [fp, #-1539]	; 0xfffff9fd
     964:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
     968:	03052005 	movweq	r2, #20485	; 0x5005
     96c:	0c052106 	stfeqs	f2, [r5], {6}
     970:	03050106 	movweq	r0, #20742	; 0x5106
     974:	03042106 	movweq	r2, #16646	; 0x4106
     978:	00d90306 	sbcseq	r0, r9, r6, lsl #6
     97c:	01045801 	tsteq	r4, r1, lsl #16
     980:	7fa80306 	svcvc	0x00a80306
     984:	05030401 	streq	r0, [r3, #-1025]	; 0xfffffbff
     988:	00d70314 	sbcseq	r0, r7, r4, lsl r3
     98c:	13030501 	movwne	r0, #13569	; 0x3501
     990:	043c2006 	ldrteq	r2, [ip], #-6
     994:	aa030601 	bge	c21a0 <_Min_Stack_Size+0xc1da0>
     998:	0505017f 	streq	r0, [r5, #-383]	; 0xfffffe81
     99c:	0d051506 	cfstr32eq	mvfx1, [r5, #-24]	; 0xffffffe8
     9a0:	0603051d 			; <UNDEFINED> instruction: 0x0603051d
     9a4:	0d05143d 	cfstrseq	mvf1, [r5, #-244]	; 0xffffff0c
     9a8:	0b051306 	bleq	1455c8 <_Min_Stack_Size+0x1451c8>
     9ac:	0605052b 	streq	r0, [r5], -fp, lsr #10
     9b0:	060d0531 			; <UNDEFINED> instruction: 0x060d0531
     9b4:	22010501 	andcs	r0, r1, #4194304	; 0x400000
     9b8:	03062d05 	movweq	r2, #27909	; 0x6d05
     9bc:	056601f7 	strbeq	r0, [r6, #-503]!	; 0xfffffe09
     9c0:	2d051303 	stccs	3, cr1, [r5, #-12]
     9c4:	33051106 	movwcc	r1, #20742	; 0x5106
     9c8:	20100521 	andscs	r0, r0, r1, lsr #10
     9cc:	4b060305 	blmi	1815e8 <_Min_Stack_Size+0x1811e8>
     9d0:	10062d05 	andne	r2, r6, r5, lsl #26
     9d4:	20221105 	eorcs	r1, r2, r5, lsl #2
     9d8:	2f060305 	svccs	0x00060305
     9dc:	01060505 	tsteq	r6, r5, lsl #10
     9e0:	21060305 	tstcs	r6, r5, lsl #6
     9e4:	063e0513 			; <UNDEFINED> instruction: 0x063e0513
     9e8:	1f0f0501 	svcne	0x000f0501
     9ec:	05213705 	streq	r3, [r1, #-1797]!	; 0xfffff8fb
     9f0:	05590603 	ldrbeq	r0, [r9, #-1539]	; 0xfffff9fd
     9f4:	01060107 	tsteq	r6, r7, lsl #2
     9f8:	05202010 	streq	r2, [r0, #-16]!
     9fc:	04020005 	streq	r0, [r2], #-5
     a00:	05310603 	ldreq	r0, [r1, #-1539]!	; 0xfffff9fd
     a04:	0402000e 	streq	r0, [r2], #-14
     a08:	05010603 	streq	r0, [r1, #-1539]	; 0xfffff9fd
     a0c:	04020003 	streq	r0, [r2], #-3
     a10:	0c052d03 	stceq	13, cr2, [r5], {3}
     a14:	03040200 	movweq	r0, #16896	; 0x4200
     a18:	00030521 	andeq	r0, r3, r1, lsr #10
     a1c:	2d030402 	cfstrscs	mvf0, [r3, #-8]
     a20:	06012306 	streq	r2, [r1], -r6, lsl #6
     a24:	91066620 	tstls	r6, r0, lsr #12
     a28:	13060105 	movwne	r0, #24837	; 0x6105
     a2c:	03062305 	movweq	r2, #25349	; 0x6305
     a30:	05207e88 	streq	r7, [r0, #-3720]!	; 0xfffff178
     a34:	05131303 	ldreq	r1, [r3, #-771]	; 0xfffffcfd
     a38:	22100623 	andscs	r0, r0, #36700160	; 0x2300000
     a3c:	053d1605 	ldreq	r1, [sp, #-1541]!	; 0xfffff9fb
     a40:	03053b23 	movweq	r3, #23331	; 0x5b23
     a44:	05142f06 	ldreq	r2, [r4, #-3846]	; 0xfffff0fa
     a48:	06010605 	streq	r0, [r1], -r5, lsl #12
     a4c:	0607053d 			; <UNDEFINED> instruction: 0x0607053d
     a50:	2f062e01 	svccs	0x00062e01
     a54:	13050304 	movwne	r0, #21252	; 0x5304
     a58:	0100cb03 	tsteq	r0, r3, lsl #22
     a5c:	04130305 	ldreq	r0, [r3], #-773	; 0xfffffcfb
     a60:	06110501 	ldreq	r0, [r1], -r1, lsl #10
     a64:	017fb503 	cmneq	pc, r3, lsl #10
     a68:	0a050304 	beq	141680 <_Min_Stack_Size+0x141280>
     a6c:	2000cb03 	andcs	ip, r0, r3, lsl #22
     a70:	01042e2e 	tsteq	r4, lr, lsr #28
     a74:	03060705 	movweq	r0, #26373	; 0x6705
     a78:	05017fb5 	streq	r7, [r1, #-4021]	; 0xfffff04b
     a7c:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
     a80:	05210607 	streq	r0, [r1, #-1543]!	; 0xfffff9f9
     a84:	010a0303 	tsteq	sl, r3, lsl #6
     a88:	01061d05 	tsteq	r6, r5, lsl #26
     a8c:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
     a90:	05300603 	ldreq	r0, [r0, #-1539]!	; 0xfffff9fd
     a94:	06010605 	streq	r0, [r1], -r5, lsl #12
     a98:	06070530 			; <UNDEFINED> instruction: 0x06070530
     a9c:	06050501 	streq	r0, [r5], -r1, lsl #10
     aa0:	06070521 	streq	r0, [r7], -r1, lsr #10
     aa4:	05210601 	streq	r0, [r1, #-1537]!	; 0xfffff9ff
     aa8:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
     aac:	0b052007 	bleq	148ad0 <_Min_Stack_Size+0x1486d0>
     ab0:	580a0306 	stmdapl	sl, {r1, r2, r8, r9}
     ab4:	14050304 	strne	r0, [r5], #-772	; 0xfffffcfc
     ab8:	05012203 	streq	r2, [r1, #-515]	; 0xfffffdfd
     abc:	2e061303 	cdpcs	3, 0, cr1, cr6, cr3, {0}
     ac0:	0501043c 	streq	r0, [r1, #-1084]	; 0xfffffbc4
     ac4:	45030607 	strmi	r0, [r3, #-1543]	; 0xfffff9f9
     ac8:	06090501 	streq	r0, [r9], -r1, lsl #10
     acc:	060b0501 	streq	r0, [fp], -r1, lsl #10
     ad0:	05581003 	ldrbeq	r1, [r8, #-3]
     ad4:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
     ad8:	1705220b 	strne	r2, [r5, -fp, lsl #4]
     adc:	060b051e 			; <UNDEFINED> instruction: 0x060b051e
     ae0:	05130621 	ldreq	r0, [r3, #-1569]	; 0xfffff9df
     ae4:	0b053b14 	bleq	14f73c <_Min_Stack_Size+0x14f33c>
     ae8:	052f2f06 	streq	r2, [pc, #-3846]!	; fffffbea <BootRAM+0xef7038b>
     aec:	010f0305 	tsteq	pc, r5, lsl #6
     af0:	01061405 	tsteq	r6, r5, lsl #8
     af4:	05200705 	streq	r0, [r0, #-1797]!	; 0xfffff8fb
     af8:	2e4e0303 	cdpcs	3, 4, cr0, cr14, cr3, {0}
     afc:	32030705 	andcc	r0, r3, #1310720	; 0x140000
     b00:	06250520 	strteq	r0, [r5], -r0, lsr #10
     b04:	062a0520 	strteq	r0, [sl], -r0, lsr #10
     b08:	06050501 	streq	r0, [r5], -r1, lsl #10
     b0c:	0314053d 	tsteq	r4, #255852544	; 0xf400000
     b10:	0305014a 	movweq	r0, #20810	; 0x514a
     b14:	060d0513 			; <UNDEFINED> instruction: 0x060d0513
     b18:	06030501 	streq	r0, [r3], -r1, lsl #10
     b1c:	060b053d 			; <UNDEFINED> instruction: 0x060b053d
     b20:	06030501 	streq	r0, [r3], -r1, lsl #10
     b24:	052e062f 	streq	r0, [lr, #-1583]!	; 0xfffff9d1
     b28:	00c70301 	sbceq	r0, r7, r1, lsl #6
     b2c:	060b0501 	streq	r0, [fp], -r1, lsl #10
     b30:	042e6403 	strteq	r6, [lr], #-1027	; 0xfffffbfd
     b34:	03140503 	tsteq	r4, #12582912	; 0xc00000
     b38:	0305011f 	movweq	r0, #20767	; 0x511f
     b3c:	044a0613 	strbeq	r0, [sl], #-1555	; 0xfffff9ed
     b40:	06050501 	streq	r0, [r5], -r1, lsl #10
     b44:	05016403 	streq	r6, [r1, #-1027]	; 0xfffffbfd
     b48:	2001060b 	andcs	r0, r1, fp, lsl #12
     b4c:	21060505 	tstcs	r6, r5, lsl #10
     b50:	01060e05 	tsteq	r6, r5, lsl #28
     b54:	05210505 	streq	r0, [r1, #-1285]!	; 0xfffffafb
     b58:	0505490e 	streq	r4, [r5, #-2318]	; 0xfffff6f2
     b5c:	2e062f06 	cdpcs	15, 0, cr2, cr6, cr6, {0}
     b60:	05170620 	ldreq	r0, [r7, #-1568]	; 0xfffff9e0
     b64:	06010607 	streq	r0, [r1], -r7, lsl #12
     b68:	06160521 	ldreq	r0, [r6], -r1, lsr #10
     b6c:	20090501 	andcs	r0, r9, r1, lsl #10
     b70:	12052f06 	andne	r2, r5, #6, 30
     b74:	09050106 	stmdbeq	r5, {r1, r2, r8}
     b78:	03042f06 	movweq	r2, #20230	; 0x4f06
     b7c:	11031405 	tstne	r3, r5, lsl #8
     b80:	13030501 	movwne	r0, #13569	; 0x3501
     b84:	01040106 	tsteq	r4, r6, lsl #2
     b88:	03062c05 	movweq	r2, #27653	; 0x6c05
     b8c:	0304017a 	movweq	r0, #16762	; 0x417a
     b90:	05171405 	ldreq	r1, [r7, #-1029]	; 0xfffffbfb
     b94:	4a061303 	bmi	1857a8 <_Min_Stack_Size+0x1853a8>
     b98:	0d050104 	stfeqs	f0, [r5, #-16]
     b9c:	01700306 	cmneq	r0, r6, lsl #6
     ba0:	01060f05 	tsteq	r6, r5, lsl #30
     ba4:	2f060905 	svccs	0x00060905
     ba8:	01061705 	tsteq	r6, r5, lsl #14
     bac:	2f060905 	svccs	0x00060905
     bb0:	14050304 	strne	r0, [r5], #-772	; 0xfffffcfc
     bb4:	05010d03 	streq	r0, [r1, #-3331]	; 0xfffff2fd
     bb8:	20061303 	andcs	r1, r6, r3, lsl #6
     bbc:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
     bc0:	01760306 	cmneq	r6, r6, lsl #6
     bc4:	01060905 	tsteq	r6, r5, lsl #18
     bc8:	06580705 	ldrbeq	r0, [r8], -r5, lsl #14
     bcc:	05050121 	streq	r0, [r5, #-289]	; 0xfffffedf
     bd0:	060f05ae 	streq	r0, [pc], -lr, lsr #11
     bd4:	2f070501 	svccs	0x00070501
     bd8:	051f0f05 	ldreq	r0, [pc, #-3845]	; fffffcdb <BootRAM+0xef7047c>
     bdc:	0f052107 	svceq	0x00052107
     be0:	0605051f 			; <UNDEFINED> instruction: 0x0605051f
     be4:	06070521 	streq	r0, [r7], -r1, lsr #10
     be8:	000f0201 	andeq	r0, pc, r1, lsl #4
     bec:	06d60101 	ldrbeq	r0, [r6], r1, lsl #2
     bf0:	00030000 	andeq	r0, r3, r0
     bf4:	000000fc 	strdeq	r0, [r0], -ip
     bf8:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
     bfc:	0101000d 	tsteq	r1, sp
     c00:	00000101 	andeq	r0, r0, r1, lsl #2
     c04:	00000100 	andeq	r0, r0, r0, lsl #2
     c08:	63727301 	cmnvs	r2, #67108864	; 0x4000000
     c0c:	62696c00 	rsbvs	r6, r9, #0, 24
     c10:	636e692f 	cmnvs	lr, #770048	; 0xbc000
     c14:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     c18:	73752f00 	cmnvc	r5, #0, 30
     c1c:	696c2f72 	stmdbvs	ip!, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
     c20:	63672f62 	cmnvs	r7, #392	; 0x188
     c24:	72612f63 	rsbvc	r2, r1, #396	; 0x18c
     c28:	6f6e2d6d 	svcvs	0x006e2d6d
     c2c:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     c30:	2f696261 	svccs	0x00696261
     c34:	2e332e38 	mrccs	14, 1, r2, cr3, cr8, {1}
     c38:	6e692f31 	mcrvs	15, 3, r2, cr9, cr1, {1}
     c3c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     c40:	752f0065 	strvc	r0, [pc, #-101]!	; be3 <_Min_Stack_Size+0x7e3>
     c44:	692f7273 	stmdbvs	pc!, {r0, r1, r4, r5, r6, r9, ip, sp, lr}	; <UNPREDICTABLE>
     c48:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     c4c:	6e2f6564 	cfsh64vs	mvdx6, mvdx15, #52
     c50:	696c7765 	stmdbvs	ip!, {r0, r2, r5, r6, r8, r9, sl, ip, sp, lr}^
     c54:	79732f62 	ldmdbvc	r3!, {r1, r5, r6, r8, r9, sl, fp, sp}^
     c58:	75000073 	strvc	r0, [r0, #-115]	; 0xffffff8d
     c5c:	635f6273 	cmpvs	pc, #805306375	; 0x30000007
     c60:	7373616c 	cmnvc	r3, #108, 2
     c64:	6364635f 	cmnvs	r4, #2080374785	; 0x7c000001
     c68:	0100632e 	tsteq	r0, lr, lsr #6
     c6c:	61750000 	cmnvs	r5, r0
     c70:	682e7472 	stmdavs	lr!, {r1, r4, r5, r6, sl, ip, sp, lr}
     c74:	00000100 	andeq	r0, r0, r0, lsl #2
     c78:	5f627375 	svcpl	0x00627375
     c7c:	2e62696c 	vnmulcs.f16	s13, s4, s25	; <UNPREDICTABLE>
     c80:	00010068 	andeq	r0, r1, r8, rrx
     c84:	726f6300 	rsbvc	r6, pc, #0, 6
     c88:	6d635f65 	stclvs	15, cr5, [r3, #-404]!	; 0xfffffe6c
     c8c:	00682e33 	rsbeq	r2, r8, r3, lsr lr
     c90:	73000002 	movwvc	r0, #2
     c94:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
     c98:	00682e74 	rsbeq	r2, r8, r4, ror lr
     c9c:	73000003 	movwvc	r0, #3
     ca0:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     ca4:	3135316c 	teqcc	r5, ip, ror #2
     ca8:	682e6378 	stmdavs	lr!, {r3, r4, r5, r6, r8, r9, sp, lr}
     cac:	00000200 	andeq	r0, r0, r0, lsl #4
     cb0:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
     cb4:	735f6d65 	cmpvc	pc, #6464	; 0x1940
     cb8:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     cbc:	7878316c 	ldmdavc	r8!, {r2, r3, r5, r6, r8, ip, sp}^
     cc0:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
     cc4:	74730000 	ldrbtvc	r0, [r3], #-0
     cc8:	66656464 	strbtvs	r6, [r5], -r4, ror #8
     ccc:	0300682e 	movweq	r6, #2094	; 0x82e
     cd0:	745f0000 	ldrbvc	r0, [pc], #-0	; cd8 <_Min_Stack_Size+0x8d8>
     cd4:	73657079 	cmnvc	r5, #121	; 0x79
     cd8:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
     cdc:	65720000 	ldrbvs	r0, [r2, #-0]!
     ce0:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
     ce4:	00040068 	andeq	r0, r4, r8, rrx
     ce8:	636f6c00 	cmnvs	pc, #0, 24
     cec:	00682e6b 	rsbeq	r2, r8, fp, ror #28
     cf0:	00000004 	andeq	r0, r0, r4
     cf4:	05002105 	streq	r2, [r0, #-261]	; 0xfffffefb
     cf8:	00098c02 	andeq	r8, r9, r2, lsl #24
     cfc:	02960308 	addseq	r0, r6, #8, 6	; 0x20000000
     d00:	01220501 			; <UNDEFINED> instruction: 0x01220501
     d04:	01060105 	tsteq	r6, r5, lsl #2
     d08:	28050204 	stmdacs	r5, {r2, r9}
     d0c:	7ea80306 	cdpvc	3, 10, cr0, cr8, cr6, {0}
     d10:	1303053c 	movwne	r0, #13628	; 0x353c
     d14:	01060f05 	tsteq	r6, r5, lsl #30
     d18:	05201905 	streq	r1, [r0, #-2309]!	; 0xfffff6fb
     d1c:	0105201f 	tsteq	r5, pc, lsl r0
     d20:	06280521 	strteq	r0, [r8], -r1, lsr #10
     d24:	13030530 	movwne	r0, #13616	; 0x3530
     d28:	03090513 	movweq	r0, #38163	; 0x9513
     d2c:	0305017a 	movweq	r0, #20858	; 0x517a
     d30:	060f0513 			; <UNDEFINED> instruction: 0x060f0513
     d34:	20190501 	andscs	r0, r9, r1, lsl #10
     d38:	05232805 	streq	r2, [r3, #-2053]!	; 0xfffff7fb
     d3c:	03052205 	movweq	r2, #20997	; 0x5205
     d40:	15052f06 	strne	r2, [r5, #-3846]	; 0xfffff0fa
     d44:	07050106 	streq	r0, [r5, -r6, lsl #2]
     d48:	2f060520 	svccs	0x00060520
     d4c:	051f0705 	ldreq	r0, [pc, #-1797]	; 64f <_Min_Stack_Size+0x24f>
     d50:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
     d54:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
     d58:	053d0603 	ldreq	r0, [sp, #-1539]!	; 0xfffff9fd
     d5c:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
     d60:	053d0603 	ldreq	r0, [sp, #-1539]!	; 0xfffff9fd
     d64:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
     d68:	01051c25 	tsteq	r5, r5, lsr #24
     d6c:	06330525 	ldrteq	r0, [r3], -r5, lsr #10
     d70:	13030522 	movwne	r0, #13602	; 0x3522
     d74:	72030905 	andvc	r0, r3, #81920	; 0x14000
     d78:	13030501 	movwne	r0, #13569	; 0x3501
     d7c:	01060f05 	tsteq	r6, r5, lsl #30
     d80:	05201905 	streq	r1, [r0, #-2309]!	; 0xfffff6fb
     d84:	0505201f 	streq	r2, [r5, #-31]	; 0xffffffe1
     d88:	05200d03 	streq	r0, [r0, #-3331]!	; 0xfffff2fd
     d8c:	053b0606 	ldreq	r0, [fp, #-1542]!	; 0xfffff9fa
     d90:	11051405 	tstne	r5, r5, lsl #8
     d94:	16050106 	strne	r0, [r5], -r6, lsl #2
     d98:	06050520 	streq	r0, [r5], -r0, lsr #10
     d9c:	0608052f 	streq	r0, [r8], -pc, lsr #10
     da0:	200c0501 	andcs	r0, ip, r1, lsl #10
     da4:	3c061005 	stccc	0, cr1, [r6], {5}
     da8:	01061805 	tsteq	r6, r5, lsl #16
     dac:	1401053c 	strne	r0, [r1], #-1340	; 0xfffffac4
     db0:	03061d05 	movweq	r1, #27909	; 0x6d05
     db4:	0305203c 	movweq	r2, #20540	; 0x503c
     db8:	061d0513 			; <UNDEFINED> instruction: 0x061d0513
     dbc:	210d0511 	tstcs	sp, r1, lsl r5
     dc0:	062e0505 	strteq	r0, [lr], -r5, lsl #10
     dc4:	061a052f 	ldreq	r0, [sl], -pc, lsr #10
     dc8:	06050501 	streq	r0, [r5], -r1, lsl #10
     dcc:	052e0621 	streq	r0, [lr, #-1569]!	; 0xfffff9df
     dd0:	05051701 	streq	r1, [r5, #-1793]	; 0xfffff8ff
     dd4:	09052e29 	stmdbeq	r5, {r0, r3, r5, r9, sl, fp, sp}
     dd8:	13051306 	movwne	r1, #21254	; 0x5306
     ddc:	0b050106 	bleq	1411fc <_Min_Stack_Size+0x140dfc>
     de0:	06050520 	streq	r0, [r5], -r0, lsr #10
     de4:	0309052f 	movweq	r0, #38191	; 0x952f
     de8:	05017fad 	streq	r7, [r1, #-4013]	; 0xfffff053
     dec:	0f051303 	svceq	0x00051303
     df0:	19050106 	stmdbne	r5, {r1, r2, r8}
     df4:	0307053c 	movweq	r0, #30012	; 0x753c
     df8:	052e00d2 	streq	r0, [lr, #-210]!	; 0xffffff2e
     dfc:	04020026 	streq	r0, [r2], #-38	; 0xffffffda
     e00:	052e0601 	streq	r0, [lr, #-1537]!	; 0xfffff9ff
     e04:	04020033 	streq	r0, [r2], #-51	; 0xffffffcd
     e08:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     e0c:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
     e10:	01054a01 	tsteq	r5, r1, lsl #20
     e14:	060c0523 	streq	r0, [ip], -r3, lsr #10
     e18:	0618051e 			; <UNDEFINED> instruction: 0x0618051e
     e1c:	4c010501 	cfstr32mi	mvfx0, [r1], {1}
     e20:	00062d05 	andeq	r2, r6, r5, lsl #26
     e24:	0a300205 	beq	c01640 <_Min_Stack_Size+0xc01240>
     e28:	06140800 	ldreq	r0, [r4], -r0, lsl #16
     e2c:	03052001 	movweq	r2, #20481	; 0x5001
     e30:	0f052106 	svceq	0x00052106
     e34:	08050106 	stmdaeq	r5, {r1, r2, r8}
     e38:	01040200 	mrseq	r0, R12_usr
     e3c:	2f01053c 	svccs	0x0001053c
     e40:	02000f05 	andeq	r0, r0, #5, 30
     e44:	1f060204 	svcne	0x00060204
     e48:	02040200 	andeq	r0, r4, #0, 4
     e4c:	04020001 	streq	r0, [r2], #-1
     e50:	00010602 	andeq	r0, r1, r2, lsl #12
     e54:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
     e58:	02040200 	andeq	r0, r4, #0, 4
     e5c:	1b053c06 	blne	14fe7c <_Min_Stack_Size+0x14fa7c>
     e60:	5c020500 	cfstr32pl	mvfx0, [r2], {-0}
     e64:	1508000a 	strne	r0, [r8, #-10]
     e68:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
     e6c:	0511061b 	ldreq	r0, [r1, #-1563]	; 0xfffff9e5
     e70:	0c052115 	stfeqs	f2, [r5], {21}
     e74:	01040200 	mrseq	r0, R12_usr
     e78:	0008053c 	andeq	r0, r8, ip, lsr r5
     e7c:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
     e80:	05210105 	streq	r0, [r1, #-261]!	; 0xfffffefb
     e84:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
     e88:	001f0602 	andseq	r0, pc, r2, lsl #12
     e8c:	01020402 	tsteq	r2, r2, lsl #8
     e90:	02040200 	andeq	r0, r4, #0, 4
     e94:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
     e98:	3c060204 	sfmcc	f0, 4, [r6], {4}
     e9c:	05002c05 	streq	r2, [r0, #-3077]	; 0xfffff3fb
     ea0:	000a8402 	andeq	r8, sl, r2, lsl #8
     ea4:	01061508 	tsteq	r6, r8, lsl #10
     ea8:	06030520 	streq	r0, [r3], -r0, lsr #10
     eac:	060f0521 	streq	r0, [pc], -r1, lsr #10
     eb0:	017fa003 	cmneq	pc, r3
     eb4:	0308052e 	movweq	r0, #34094	; 0x852e
     eb8:	050100e0 	streq	r0, [r1, #-224]	; 0xffffff20
     ebc:	22053201 	andcs	r3, r5, #268435456	; 0x10000000
     ec0:	01040200 	mrseq	r0, R12_usr
     ec4:	09051d06 	stmdbeq	r5, {r1, r2, r8, sl, fp, ip}
     ec8:	01040200 	mrseq	r0, R12_usr
     ecc:	017f9e03 	cmneq	pc, r3, lsl #28
     ed0:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
     ed4:	05130104 	ldreq	r0, [r3, #-260]	; 0xfffffefc
     ed8:	0402000f 	streq	r0, [r2], #-15
     edc:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     ee0:	04020019 	streq	r0, [r2], #-25	; 0xffffffe7
     ee4:	0b052001 	bleq	148ef0 <_Min_Stack_Size+0x148af0>
     ee8:	01040200 	mrseq	r0, R12_usr
     eec:	2000e103 	andcs	lr, r0, r3, lsl #2
     ef0:	02000a05 	andeq	r0, r0, #20480	; 0x5000
     ef4:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
     ef8:	053d0605 	ldreq	r0, [sp, #-1541]!	; 0xfffff9fb
     efc:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
     f00:	052e3c0f 	streq	r3, [lr, #-3087]!	; 0xfffff3f1
     f04:	05000628 	streq	r0, [r0, #-1576]	; 0xfffff9d8
     f08:	000ab002 	andeq	fp, sl, r2
     f0c:	03051608 	movweq	r1, #22024	; 0x5608
     f10:	06280513 			; <UNDEFINED> instruction: 0x06280513
     f14:	030f0511 	movweq	r0, #62737	; 0xf511
     f18:	2e3c7f9a 	mrccs	15, 1, r7, cr12, cr10, {4}
     f1c:	e7030805 	str	r0, [r3, -r5, lsl #16]
     f20:	052e0100 	streq	r0, [lr, #-256]!	; 0xffffff00
     f24:	05260603 	streq	r0, [r6, #-1539]!	; 0xfffff9fd
     f28:	06010605 	streq	r0, [r1], -r5, lsl #12
     f2c:	0607052f 	streq	r0, [r7], -pc, lsr #10
     f30:	06100501 	ldreq	r0, [r0], -r1, lsl #10
     f34:	06140520 	ldreq	r0, [r4], -r0, lsr #10
     f38:	3c230513 	cfstr32cc	mvfx0, [r3], #-76	; 0xffffffb4
     f3c:	051f1705 	ldreq	r1, [pc, #-1797]	; 83f <_Min_Stack_Size+0x43f>
     f40:	32052123 	andcc	r2, r5, #-1073741816	; 0xc0000008
     f44:	1f17052e 	svcne	0x0017052e
     f48:	21060d05 	tstcs	r6, r5, lsl #26
     f4c:	05011c05 	streq	r1, [r1, #-3077]	; 0xfffff3fb
     f50:	3205012b 	andcc	r0, r5, #-1073741814	; 0xc000000a
     f54:	01050106 	tsteq	r5, r6, lsl #2
     f58:	00220522 	eoreq	r0, r2, r2, lsr #10
     f5c:	06010402 	streq	r0, [r1], -r2, lsl #8
     f60:	05207703 	streq	r7, [r0, #-1795]!	; 0xfffff8fd
     f64:	04020009 	streq	r0, [r2], #-9
     f68:	7f970301 	svcvc	0x00970301
     f6c:	00030501 	andeq	r0, r3, r1, lsl #10
     f70:	13010402 	movwne	r0, #5122	; 0x1402
     f74:	02000f05 	andeq	r0, r0, #5, 30
     f78:	01060104 	tsteq	r6, r4, lsl #2
     f7c:	02001905 	andeq	r1, r0, #81920	; 0x14000
     f80:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
     f84:	0402000b 	streq	r0, [r2], #-11
     f88:	00e80301 	rsceq	r0, r8, r1, lsl #6
     f8c:	000a0520 	andeq	r0, sl, r0, lsr #10
     f90:	20010402 	andcs	r0, r1, r2, lsl #8
     f94:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
     f98:	01060e05 	tsteq	r6, r5, lsl #28
     f9c:	053c0c05 	ldreq	r0, [ip, #-3077]!	; 0xfffff3fb
     fa0:	052f0605 	streq	r0, [pc, #-1541]!	; 9a3 <_Min_Stack_Size+0x5a3>
     fa4:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
     fa8:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
     fac:	02003c01 	andeq	r3, r0, #256	; 0x100
     fb0:	044a0104 	strbeq	r0, [sl], #-260	; 0xfffffefc
     fb4:	06500501 	ldrbeq	r0, [r0], -r1, lsl #10
     fb8:	08020500 	stmdaeq	r2, {r8, sl}
     fbc:	0308000b 	movweq	r0, #32779	; 0x800b
     fc0:	03050178 	movweq	r0, #20856	; 0x5178
     fc4:	08070513 	stmdaeq	r7, {r0, r1, r4, r8, sl}
     fc8:	060d0514 			; <UNDEFINED> instruction: 0x060d0514
     fcc:	06070501 	streq	r0, [r7], -r1, lsl #10
     fd0:	060d052f 	streq	r0, [sp], -pc, lsr #10
     fd4:	03200501 			; <UNDEFINED> instruction: 0x03200501
     fd8:	0705201b 	smladeq	r5, fp, r0, r2
     fdc:	01052106 	tsteq	r5, r6, lsl #2
     fe0:	07051606 	streq	r1, [r5, -r6, lsl #12]
     fe4:	20630306 	rsbcs	r0, r3, r6, lsl #6
     fe8:	01060d05 	tsteq	r6, r5, lsl #26
     fec:	2f060705 	svccs	0x00060705
     ff0:	01060d05 	tsteq	r6, r5, lsl #26
     ff4:	31060705 	tstcc	r6, r5, lsl #14
     ff8:	01060d05 	tsteq	r6, r5, lsl #26
     ffc:	2f060705 	svccs	0x00060705
    1000:	01060d05 	tsteq	r6, r5, lsl #26
    1004:	31060705 	tstcc	r6, r5, lsl #14
    1008:	0b052006 	bleq	149028 <_Min_Stack_Size+0x148c28>
    100c:	11056806 	tstne	r5, r6, lsl #16
    1010:	09030106 	stmdbeq	r3, {r1, r2, r8}
    1014:	060b0520 	streq	r0, [fp], -r0, lsr #10
    1018:	16070521 	strne	r0, [r7], -r1, lsr #10
    101c:	01062005 	tsteq	r6, r5
    1020:	03060b05 	movweq	r0, #27397	; 0x6b05
    1024:	11053c75 	tstne	r5, r5, ror ip
    1028:	0b050106 	bleq	141448 <_Min_Stack_Size+0x141048>
    102c:	11053106 	tstne	r5, r6, lsl #2
    1030:	0b050106 	bleq	141450 <_Min_Stack_Size+0x141050>
    1034:	11053106 	tstne	r5, r6, lsl #2
    1038:	47050106 	strmi	r0, [r5, -r6, lsl #2]
    103c:	02050006 	andeq	r0, r5, #6
    1040:	08000b84 	stmdaeq	r0, {r2, r7, r8, r9, fp}
    1044:	05012903 	streq	r2, [r1, #-2307]	; 0xfffff6fd
    1048:	05051303 	streq	r1, [r5, #-771]	; 0xfffffcfd
    104c:	59060106 	stmdbpl	r6, {r1, r2, r8}
    1050:	01060705 	tsteq	r6, r5, lsl #14
    1054:	0d053d06 	stceq	13, cr3, [r5, #-24]	; 0xffffffe8
    1058:	0e050106 	adfeqs	f0, f5, f6
    105c:	1e0d0522 	cfsh32ne	mvfx0, mvfx13, #18
    1060:	21060705 	tstcs	r6, r5, lsl #14
    1064:	01060d05 	tsteq	r6, r5, lsl #26
    1068:	2f060705 	svccs	0x00060705
    106c:	01060e05 	tsteq	r6, r5, lsl #28
    1070:	05230a05 	streq	r0, [r3, #-2565]!	; 0xfffff5fb
    1074:	4e052101 	adfmis	f2, f5, f1
    1078:	03053e06 	movweq	r3, #24070	; 0x5e06
    107c:	064e0513 			; <UNDEFINED> instruction: 0x064e0513
    1080:	21050511 	tstcs	r5, r1, lsl r5
    1084:	07055906 	streq	r5, [r5, -r6, lsl #18]
    1088:	3d060106 	stfccs	f0, [r6, #-24]	; 0xffffffe8
    108c:	01060905 	tsteq	r6, r5, lsl #18
    1090:	19030e05 	stmdbne	r3, {r0, r2, r9, sl, fp}
    1094:	06070520 	streq	r0, [r7], -r0, lsr #10
    1098:	042e6803 	strteq	r6, [lr], #-2051	; 0xfffff7fd
    109c:	03130503 	tsteq	r3, #12582912	; 0xc00000
    10a0:	03050146 	movweq	r0, #20806	; 0x5146
    10a4:	060a0513 			; <UNDEFINED> instruction: 0x060a0513
    10a8:	2e202e01 	cdpcs	14, 2, cr2, cr0, cr1, {0}
    10ac:	07050104 	streq	r0, [r5, -r4, lsl #2]
    10b0:	013a0306 	teqeq	sl, r6, lsl #6
    10b4:	67580101 	ldrbvs	r0, [r8, -r1, lsl #2]
    10b8:	01061405 	tsteq	r6, r5, lsl #8
    10bc:	05200905 	streq	r0, [r0, #-2309]!	; 0xfffff6fb
    10c0:	3a052e27 	bcc	14c964 <_Min_Stack_Size+0x14c564>
    10c4:	0627053c 			; <UNDEFINED> instruction: 0x0627053c
    10c8:	3a05013c 	bcc	1415c0 <_Min_Stack_Size+0x1411c0>
    10cc:	07050101 	streq	r0, [r5, -r1, lsl #2]
    10d0:	06140524 	ldreq	r0, [r4], -r4, lsr #10
    10d4:	20090501 	andcs	r0, r9, r1, lsl #10
    10d8:	15052106 	strne	r2, [r5, #-262]	; 0xfffffefa
    10dc:	09050106 	stmdbeq	r5, {r1, r2, r8}
    10e0:	15055906 	strne	r5, [r5, #-2310]	; 0xfffff6fa
    10e4:	05440106 	strbeq	r0, [r4, #-262]	; 0xfffffefa
    10e8:	7903060d 	stmdbvc	r3, {r0, r2, r3, r9, sl}
    10ec:	061a052e 	ldreq	r0, [sl], -lr, lsr #10
    10f0:	2e0f0501 	cfsh32cs	mvfx0, mvfx15, #1
    10f4:	2f060905 	svccs	0x00060905
    10f8:	01061505 	tsteq	r6, r5, lsl #10
    10fc:	59060905 	stmdbpl	r6, {r0, r2, r8, fp}
    1100:	01061505 	tsteq	r6, r5, lsl #10
    1104:	4b060905 	blmi	183520 <_Min_Stack_Size+0x183120>
    1108:	01061505 	tsteq	r6, r5, lsl #10
    110c:	15030105 	strne	r0, [r3, #-261]	; 0xfffffefb
    1110:	060d054a 	streq	r0, [sp], -sl, asr #10
    1114:	05206c03 	streq	r6, [r0, #-3075]!	; 0xfffff3fd
    1118:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    111c:	0905200f 	stmdbeq	r5, {r0, r1, r2, r3, sp}
    1120:	15052f06 	strne	r2, [r5, #-3846]	; 0xfffff0fa
    1124:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1128:	15055906 	strne	r5, [r5, #-2310]	; 0xfffff6fa
    112c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1130:	15054b06 	strne	r4, [r5, #-2822]	; 0xfffff4fa
    1134:	0a050106 	beq	141554 <_Min_Stack_Size+0x141154>
    1138:	204a1003 	subcs	r1, sl, r3
    113c:	00062105 	andeq	r2, r6, r5, lsl #2
    1140:	0c680205 	sfmeq	f0, 2, [r8], #-20	; 0xffffffec
    1144:	05190800 	ldreq	r0, [r9, #-2048]	; 0xfffff800
    1148:	12051303 	andne	r1, r5, #201326592	; 0xc000000
    114c:	0a050106 	beq	14156c <_Min_Stack_Size+0x14116c>
    1150:	0603054a 	streq	r0, [r3], -sl, asr #10
    1154:	06160521 	ldreq	r0, [r6], -r1, lsr #10
    1158:	3a210501 	bcc	842564 <_Min_Stack_Size+0x842164>
    115c:	05221605 	streq	r1, [r2, #-1541]!	; 0xfffff9fb
    1160:	0a054b13 	beq	153db4 <_Min_Stack_Size+0x1539b4>
    1164:	052f223c 	streq	r2, [pc, #-572]!	; f30 <_Min_Stack_Size+0xb30>
    1168:	0a051c16 	beq	1481c8 <_Min_Stack_Size+0x147dc8>
    116c:	06030520 	streq	r0, [r3], -r0, lsr #10
    1170:	0a051321 	beq	145dfc <_Min_Stack_Size+0x1459fc>
    1174:	03050106 	movweq	r0, #20742	; 0x5106
    1178:	05132106 	ldreq	r2, [r3, #-262]	; 0xfffffefa
    117c:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    1180:	16052101 	strne	r2, [r5], -r1, lsl #2
    1184:	03052406 	movweq	r2, #21510	; 0x5406
    1188:	05010113 	streq	r0, [r1, #-275]	; 0xfffffeed
    118c:	051f0616 	ldreq	r0, [pc, #-1558]	; b7e <_Min_Stack_Size+0x77e>
    1190:	20062103 	andcs	r2, r6, r3, lsl #2
    1194:	061e1406 	ldreq	r1, [lr], -r6, lsl #8
    1198:	20202e2e 	eorcs	r2, r0, lr, lsr #28
    119c:	1e140601 	cfmsub32ne	mvax0, mvfx0, mvfx4, mvfx1
    11a0:	01202e06 			; <UNDEFINED> instruction: 0x01202e06
    11a4:	2e200101 	sufcss	f0, f0, f1
    11a8:	2001202e 	andcs	r2, r1, lr, lsr #32
    11ac:	20202e2e 	eorcs	r2, r0, lr, lsr #28
    11b0:	01202e01 			; <UNDEFINED> instruction: 0x01202e01
    11b4:	2e200101 	sufcss	f0, f0, f1
    11b8:	0101202e 	tsteq	r1, lr, lsr #32
    11bc:	06202006 	strteq	r2, [r0], -r6
    11c0:	2e3c583c 	mrccs	8, 1, r5, cr12, cr12, {1}
    11c4:	202e2020 	eorcs	r2, lr, r0, lsr #32
    11c8:	04042e2e 	streq	r2, [r4], #-3630	; 0xfffff1d2
    11cc:	b7031605 	strlt	r1, [r3, -r5, lsl #12]
    11d0:	03050109 	movweq	r0, #20745	; 0x5109
    11d4:	06270514 			; <UNDEFINED> instruction: 0x06270514
    11d8:	01043c01 	tsteq	r4, r1, lsl #24
    11dc:	03060305 	movweq	r0, #25349	; 0x6305
    11e0:	4c0176c9 	stcmi	6, cr7, [r1], {201}	; 0xc9
    11e4:	06010567 	streq	r0, [r1], -r7, ror #10
    11e8:	2c030514 	cfstr32cs	mvfx0, [r3], {20}
    11ec:	00061605 	andeq	r1, r6, r5, lsl #12
    11f0:	0d580205 	lfmeq	f0, 2, [r8, #-20]	; 0xffffffec
    11f4:	05160800 	ldreq	r0, [r6, #-2048]	; 0xfffff800
    11f8:	04131303 	ldreq	r1, [r3], #-771	; 0xfffffcfd
    11fc:	03090502 	movweq	r0, #38146	; 0x9502
    1200:	05017e8d 	streq	r7, [r1, #-3725]	; 0xfffff173
    1204:	01061303 	tsteq	r6, r3, lsl #6
    1208:	16050104 	strne	r0, [r5], -r4, lsl #2
    120c:	0101f003 	tsteq	r1, r3	; <UNPREDICTABLE>
    1210:	0f050204 	svceq	0x00050204
    1214:	207e9003 	rsbscs	r9, lr, r3
    1218:	16050104 	strne	r0, [r5], -r4, lsl #2
    121c:	2001f003 	andcs	pc, r1, r3
    1220:	0f050204 	svceq	0x00050204
    1224:	207e9003 	rsbscs	r9, lr, r3
    1228:	04201905 	strteq	r1, [r0], #-2309	; 0xfffff6fb
    122c:	030d0501 	movweq	r0, #54529	; 0xd501
    1230:	052001f2 	streq	r0, [r0, #-498]!	; 0xfffffe0e
    1234:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
    1238:	2e010605 	cfmadd32cs	mvax0, mvfx0, mvfx1, mvfx5
    123c:	09052106 	stmdbeq	r5, {r1, r2, r8, sp}
    1240:	07050106 	streq	r0, [r5, -r6, lsl #2]
    1244:	3d4b062e 	stclcc	6, cr0, [fp, #-184]	; 0xffffff48
    1248:	0503044b 	streq	r0, [r3, #-1099]	; 0xfffffbb5
    124c:	7ef60314 	mrcvc	3, 7, r0, cr6, cr4, {0}
    1250:	13030501 	movwne	r0, #13569	; 0x3501
    1254:	01045806 	tsteq	r4, r6, lsl #16
    1258:	018d0306 	orreq	r0, sp, r6, lsl #6
    125c:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    1260:	7e840309 	cdpvc	3, 8, cr0, cr4, cr9, {0}
    1264:	13030501 	movwne	r0, #13569	; 0x3501
    1268:	01060f05 	tsteq	r6, r5, lsl #30
    126c:	05201905 	streq	r1, [r0, #-2309]!	; 0xfffff6fb
    1270:	0104201f 	tsteq	r4, pc, lsl r0
    1274:	fb030705 	blx	c2e92 <_Min_Stack_Size+0xc2a92>
    1278:	05052001 	streq	r2, [r5, #-1]
    127c:	052f063c 	streq	r0, [pc, #-1596]!	; c48 <_Min_Stack_Size+0x848>
    1280:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
    1284:	59062e07 	stmdbpl	r6, {r0, r1, r2, r9, sl, fp, sp}
    1288:	13050304 	movwne	r0, #21252	; 0x5304
    128c:	017efd03 	cmneq	lr, r3, lsl #26	; <UNPREDICTABLE>
    1290:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    1294:	4a01060a 	bmi	42ac4 <_Min_Stack_Size+0x426c4>
    1298:	07050104 	streq	r0, [r5, -r4, lsl #2]
    129c:	01830306 	orreq	r0, r3, r6, lsl #6
    12a0:	052e0601 	streq	r0, [lr, #-1537]!	; 0xfffff9ff
    12a4:	2e720316 	mrccs	3, 3, r0, cr2, cr6, {0}
    12a8:	03061005 	movweq	r1, #24581	; 0x6005
    12ac:	053c7f99 	ldreq	r7, [ip, #-3993]!	; 0xfffff067
    12b0:	20200608 	eorcs	r0, r0, r8, lsl #12
    12b4:	06030520 	streq	r0, [r3], -r0, lsr #10
    12b8:	0100f903 	tsteq	r0, r3, lsl #18	; <UNPREDICTABLE>
    12bc:	053c3c01 	ldreq	r3, [ip, #-3073]!	; 0xfffff3ff
    12c0:	023d0601 	eorseq	r0, sp, #1048576	; 0x100000
    12c4:	01010009 	tsteq	r1, r9
    12c8:	00000110 	andeq	r0, r0, r0, lsl r1
    12cc:	007b0003 	rsbseq	r0, fp, r3
    12d0:	01020000 	mrseq	r0, (UNDEF: 2)
    12d4:	000d0efb 	strdeq	r0, [sp], -fp
    12d8:	01010101 	tsteq	r1, r1, lsl #2
    12dc:	01000000 	mrseq	r0, (UNDEF: 0)
    12e0:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    12e4:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    12e8:	2f2e2e2f 	svccs	0x002e2e2f
    12ec:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    12f0:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    12f4:	2f2e2e2f 	svccs	0x002e2e2f
    12f8:	6e2f2e2e 	cdpvs	14, 2, cr2, cr15, cr14, {1}
    12fc:	696c7765 	stmdbvs	ip!, {r0, r2, r5, r6, r8, r9, sl, ip, sp, lr}^
    1300:	696c2f62 	stmdbvs	ip!, {r1, r5, r6, r8, r9, sl, fp, sp}^
    1304:	6d2f6362 	stcvs	3, cr6, [pc, #-392]!	; 1184 <_Min_Stack_Size+0xd84>
    1308:	00637369 	rsbeq	r7, r3, r9, ror #6
    130c:	7273752f 	rsbsvc	r7, r3, #197132288	; 0xbc00000
    1310:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    1314:	6363672f 	cmnvs	r3, #12320768	; 0xbc0000
    1318:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
    131c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    1320:	61652d65 	cmnvs	r5, r5, ror #26
    1324:	382f6962 	stmdacc	pc!, {r1, r5, r6, r8, fp, sp, lr}	; <UNPREDICTABLE>
    1328:	312e332e 			; <UNDEFINED> instruction: 0x312e332e
    132c:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    1330:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    1334:	6e690000 	cdpvs	0, 6, cr0, cr9, cr0, {0}
    1338:	632e7469 			; <UNDEFINED> instruction: 0x632e7469
    133c:	00000100 	andeq	r0, r0, r0, lsl #2
    1340:	64647473 	strbtvs	r7, [r4], #-1139	; 0xfffffb8d
    1344:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
    1348:	00000200 	andeq	r0, r0, r0, lsl #4
    134c:	00010500 	andeq	r0, r1, r0, lsl #10
    1350:	0dec0205 	sfmeq	f0, 2, [ip, #20]!
    1354:	1e030800 	cdpne	8, 0, cr0, cr3, cr0, {0}
    1358:	13030501 	movwne	r0, #13569	; 0x3501
    135c:	01051413 	tsteq	r5, r3, lsl r4
    1360:	1f050e06 	svcne	0x00050e06
    1364:	06030524 	streq	r0, [r3], -r4, lsr #10
    1368:	2001063d 	andcs	r0, r1, sp, lsr r6
    136c:	05200a05 	streq	r0, [r0, #-2565]!	; 0xfffff5fb
    1370:	04020005 	streq	r0, [r2], #-5
    1374:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
    1378:	0402001b 	streq	r0, [r2], #-27	; 0xffffffe5
    137c:	05110603 	ldreq	r0, [r1, #-1539]	; 0xfffff9fd
    1380:	0402001a 	streq	r0, [r2], #-26	; 0xffffffe6
    1384:	05052103 	streq	r2, [r5, #-259]	; 0xfffffefd
    1388:	03040200 	movweq	r0, #16896	; 0x4200
    138c:	0003052e 	andeq	r0, r3, lr, lsr #10
    1390:	1f030402 	svcne	0x00030402
    1394:	1c053206 	sfmne	f3, 4, [r5], {6}
    1398:	05201506 	streq	r1, [r0, #-1286]!	; 0xfffffafa
    139c:	31061d03 	tstcc	r6, r3, lsl #26
    13a0:	01061c05 	tsteq	r6, r5, lsl #24
    13a4:	21060305 	tstcs	r6, r5, lsl #6
    13a8:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    13ac:	0505200a 	streq	r2, [r5, #-10]
    13b0:	03040200 	movweq	r0, #16896	; 0x4200
    13b4:	1b052106 	blne	1497d4 <_Min_Stack_Size+0x1493d4>
    13b8:	03040200 	movweq	r0, #16896	; 0x4200
    13bc:	17051106 	strne	r1, [r5, -r6, lsl #2]
    13c0:	03040200 	movweq	r0, #16896	; 0x4200
    13c4:	00050521 	andeq	r0, r5, r1, lsr #10
    13c8:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    13cc:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    13d0:	051f0304 	ldreq	r0, [pc, #-772]	; 10d4 <_Min_Stack_Size+0xcd4>
    13d4:	02203001 	eoreq	r3, r0, #1
    13d8:	01010008 	tsteq	r1, r8

Disassembly of section .debug_str:

00000000 <.debug_str>:
       0:	494c4143 	stmdbmi	ip, {r0, r1, r6, r8, lr}^
       4:	50005242 	andpl	r5, r0, r2, asr #4
       8:	52445055 	subpl	r5, r4, #85	; 0x55
       c:	4b434c00 	blmi	10d3014 <_Min_Stack_Size+0x10d2c14>
      10:	72730052 	rsbsvc	r0, r3, #82	; 0x52
      14:	616d2f63 	cmnvs	sp, r3, ror #30
      18:	632e6e69 			; <UNDEFINED> instruction: 0x632e6e69
      1c:	44535400 	ldrbmi	r5, [r3], #-1024	; 0xfffffc00
      20:	4b420052 	blmi	1080170 <_Min_Stack_Size+0x107fd70>
      24:	52363250 	eorspl	r3, r6, #80, 4
      28:	59544f00 	ldmdbpl	r4, {r8, r9, sl, fp, lr}^
      2c:	00524550 	subseq	r4, r2, r0, asr r5
      30:	33504b42 	cmpcc	r0, #67584	; 0x10800
      34:	42005230 	andmi	r5, r0, #48, 4
      38:	5233504b 	eorspl	r5, r3, #75	; 0x4b
      3c:	45525000 	ldrbmi	r5, [r2, #-0]
      40:	4f4d0052 	svcmi	0x004d0052
      44:	00524544 	subseq	r4, r2, r4, asr #10
      48:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
      4c:	6e6f6c20 	cdpvs	12, 6, cr6, cr15, cr0, {1}
      50:	6e752067 	cdpvs	0, 7, cr2, cr5, cr7, {3}
      54:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
      58:	69206465 	stmdbvs	r0!, {r0, r2, r5, r6, sl, sp, lr}
      5c:	5000746e 	andpl	r7, r0, lr, ror #8
      60:	454b4752 	strbmi	r4, [fp, #-1874]	; 0xfffff8ae
      64:	52005259 	andpl	r5, r0, #-1879048187	; 0x90000005
      68:	545f4354 	ldrbpl	r4, [pc], #-852	; 70 <_Min_Heap_Size+0x70>
      6c:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
      70:	55006665 	strpl	r6, [r0, #-1637]	; 0xfffff99b
      74:	735f4253 	cmpvc	pc, #805306373	; 0x30000005
      78:	70757465 	rsbsvc	r7, r5, r5, ror #8
      7c:	6e6f6c00 	cdpvs	12, 6, cr6, cr15, cr0, {0}
      80:	6f6c2067 	svcvs	0x006c2067
      84:	6920676e 	stmdbvs	r0!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
      88:	4200746e 	andmi	r7, r0, #1845493760	; 0x6e000000
      8c:	00525253 	subseq	r5, r2, r3, asr r2
      90:	53414c46 	movtpl	r4, #7238	; 0x1c46
      94:	79545f48 	ldmdbvc	r4, {r3, r6, r8, r9, sl, fp, ip, lr}^
      98:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
      9c:	45500066 	ldrbmi	r0, [r0, #-102]	; 0xffffff9a
      a0:	63005243 	movwvs	r5, #579	; 0x243
      a4:	6b636f6c 	blvs	18dbe5c <_Min_Stack_Size+0x18dba5c>
      a8:	0053485f 	subseq	r4, r3, pc, asr r8
      ac:	32504b42 	subscc	r4, r0, #67584	; 0x10800
      b0:	54005237 	strpl	r5, [r0], #-567	; 0xfffffdc9
      b4:	52535353 	subspl	r5, r3, #1275068417	; 0x4c000001
      b8:	504b4200 	subpl	r4, fp, r0, lsl #4
      bc:	00523133 	subseq	r3, r2, r3, lsr r1
      c0:	32425041 	subcc	r5, r2, #65	; 0x41
      c4:	52545352 	subspl	r5, r4, #1207959553	; 0x48000001
      c8:	504b4200 	subpl	r4, fp, r0, lsl #4
      cc:	41005234 	tstmi	r0, r4, lsr r2
      d0:	424d524c 	submi	r5, sp, #76, 4	; 0xc0000004
      d4:	00525353 	subseq	r5, r2, r3, asr r3
      d8:	4c424841 	mcrrmi	8, 4, r4, r2, cr1
      dc:	524e4550 	subpl	r4, lr, #80, 10	; 0x14000000
      e0:	504b4200 	subpl	r4, fp, r0, lsl #4
      e4:	00523631 	subseq	r3, r2, r1, lsr r6
      e8:	4b54504f 	blmi	151422c <_Min_Stack_Size+0x1513e2c>
      ec:	00525945 	subseq	r5, r2, r5, asr #18
      f0:	5f627375 	svcpl	0x00627375
      f4:	73616c63 	cmnvc	r1, #25344	; 0x6300
      f8:	6f705f73 	svcvs	0x00705f73
      fc:	75006c6c 	strvc	r6, [r0, #-3180]	; 0xfffff394
     100:	31746e69 	cmncc	r4, r9, ror #28
     104:	00745f36 	rsbseq	r5, r4, r6, lsr pc
     108:	32504b42 	subscc	r4, r0, #67584	; 0x10800
     10c:	50005230 	andpl	r5, r0, r0, lsr r2
     110:	59454b44 	stmdbpl	r5, {r2, r6, r8, r9, fp, lr}^
     114:	534f0052 	movtpl	r0, #61522	; 0xf052
     118:	44454550 	strbmi	r4, [r5], #-1360	; 0xfffffab0
     11c:	6e690052 	mcrvs	0, 3, r0, cr9, cr2, {2}
     120:	32337469 	eorscc	r7, r3, #1761607680	; 0x69000000
     124:	504b4200 	subpl	r4, fp, r0, lsl #4
     128:	00523832 	subseq	r3, r2, r2, lsr r8
     12c:	706d6574 	rsbvc	r6, sp, r4, ror r5
     130:	524c4100 	subpl	r4, ip, #0, 2
     134:	5353414d 	cmppl	r3, #1073741843	; 0x40000013
     138:	79530052 	ldmdbvc	r3, {r1, r4, r6}^
     13c:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
     140:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
     144:	636f6c43 	cmnvs	pc, #17152	; 0x4300
     148:	4b42006b 	blmi	10802fc <_Min_Stack_Size+0x107fefc>
     14c:	00523550 	subseq	r3, r2, r0, asr r5
     150:	31504b42 	cmpcc	r0, r2, asr #22
     154:	47005237 	smladxmi	r0, r7, r2, r5
     158:	5f4f4950 	svcpl	0x004f4950
     15c:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     160:	00666544 	rsbeq	r6, r6, r4, asr #10
     164:	5f434352 	svcpl	0x00434352
     168:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     16c:	00666544 	rsbeq	r6, r6, r4, asr #10
     170:	31504b42 	cmpcc	r0, r2, asr #22
     174:	42005235 	andmi	r5, r0, #1342177283	; 0x50000003
     178:	3132504b 	teqcc	r2, fp, asr #32
     17c:	68730052 	ldmdavs	r3!, {r1, r4, r6}^
     180:	2074726f 	rsbscs	r7, r4, pc, ror #4
     184:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
     188:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
     18c:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
     190:	656c7300 	strbvs	r7, [ip, #-768]!	; 0xfffffd00
     194:	41007065 	tstmi	r0, r5, rrx
     198:	4c314250 	lfmmi	f4, 4, [r1], #-320	; 0xfffffec0
     19c:	524e4550 	subpl	r4, lr, #80, 10	; 0x14000000
     1a0:	54535400 	ldrbpl	r5, [r3], #-1024	; 0xfffffc00
     1a4:	41540052 	cmpmi	r4, r2, asr r0
     1a8:	00524346 	subseq	r4, r2, r6, asr #6
     1ac:	31504b42 	cmpcc	r0, r2, asr #22
     1b0:	42005230 	andmi	r5, r0, #48, 4
     1b4:	3932504b 	ldmdbcc	r2!, {r0, r1, r3, r6, ip, lr}
     1b8:	50410052 	subpl	r0, r1, r2, asr r0
     1bc:	504c3242 	subpl	r3, ip, r2, asr #4
     1c0:	00524e45 	subseq	r4, r2, r5, asr #28
     1c4:	5f525750 	svcpl	0x00525750
     1c8:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     1cc:	00666544 	rsbeq	r6, r6, r4, asr #10
     1d0:	36504b42 	ldrbcc	r4, [r0], -r2, asr #22
     1d4:	4b420052 	blmi	1080324 <_Min_Stack_Size+0x107ff24>
     1d8:	52383150 	eorspl	r3, r8, #80, 2
     1dc:	4c414300 	mcrrmi	3, 0, r4, r1, cr0
     1e0:	75710052 	ldrbvc	r0, [r1, #-82]!	; 0xffffffae
     1e4:	7a747261 	bvc	1d1cb70 <_Min_Stack_Size+0x1d1c770>
     1e8:	504b4200 	subpl	r4, fp, r0, lsl #4
     1ec:	00523232 	subseq	r3, r2, r2, lsr r2
     1f0:	52505257 	subspl	r5, r0, #1879048197	; 0x70000005
     1f4:	52570031 	subspl	r0, r7, #49	; 0x31
     1f8:	00325250 	eorseq	r5, r2, r0, asr r2
     1fc:	31504b42 	cmpcc	r0, r2, asr #22
     200:	41005231 	tstmi	r0, r1, lsr r2
     204:	53524248 	cmppl	r2, #72, 4	; 0x80000004
     208:	74005254 	strvc	r5, [r0], #-596	; 0xfffffdac
     20c:	00656d69 	rsbeq	r6, r5, r9, ror #26
     210:	31425041 	cmpcc	r2, r1, asr #32
     214:	52545352 	subspl	r5, r4, #1207959553	; 0x48000001
     218:	655f5f00 	ldrbvs	r5, [pc, #-3840]	; fffff320 <BootRAM+0xef6fac1>
     21c:	6c62616e 	stfvse	f6, [r2], #-440	; 0xfffffe48
     220:	72695f65 	rsbvc	r5, r9, #404	; 0x194
     224:	4c410071 	mcrrmi	0, 7, r0, r1, cr1
     228:	52414d52 	subpl	r4, r1, #5248	; 0x1480
     22c:	504b4200 	subpl	r4, fp, r0, lsl #4
     230:	42005237 	andmi	r5, r0, #1879048195	; 0x70000003
     234:	3931504b 	ldmdbcc	r1!, {r0, r1, r3, r6, ip, lr}
     238:	45520052 	ldrbmi	r0, [r2, #-82]	; 0xffffffae
     23c:	56524553 			; <UNDEFINED> instruction: 0x56524553
     240:	00374445 	eorseq	r4, r7, r5, asr #8
     244:	74737953 	ldrbtvc	r7, [r3], #-2387	; 0xfffff6ad
     248:	6e496d65 	cdpvs	13, 4, cr6, cr9, cr5, {3}
     24c:	42007469 	andmi	r7, r0, #1761607680	; 0x69000000
     250:	3332504b 	teqcc	r2, #75	; 0x4b
     254:	6e750052 	mrcvs	0, 3, r0, cr5, cr2, {2}
     258:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
     25c:	63206465 			; <UNDEFINED> instruction: 0x63206465
     260:	00726168 	rsbseq	r6, r2, r8, ror #2
     264:	64656d2f 	strbtvs	r6, [r5], #-3375	; 0xfffff2d1
     268:	652f6169 	strvs	r6, [pc, #-361]!	; 107 <_Min_Heap_Size+0x107>
     26c:	642f7478 	strtvs	r7, [pc], #-1144	; 274 <_Min_Heap_Size+0x274>
     270:	702f7665 	eorvc	r7, pc, r5, ror #12
     274:	2f676f72 	svccs	0x00676f72
     278:	2f6d7261 	svccs	0x006d7261
     27c:	2f627375 	svccs	0x00627375
     280:	44432e35 	strbmi	r2, [r3], #-3637	; 0xfffff1cb
     284:	314c5f43 	cmpcc	ip, r3, asr #30
     288:	7365745f 	cmnvc	r5, #1593835520	; 0x5f000000
     28c:	54490074 	strbpl	r0, [r9], #-116	; 0xffffff8c
     290:	78525f4d 	ldmdavc	r2, {r0, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
     294:	66667542 	strbtvs	r7, [r6], -r2, asr #10
     298:	73007265 	movwvc	r7, #613	; 0x265
     29c:	74726f68 	ldrbtvc	r6, [r2], #-3944	; 0xfffff098
     2a0:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
     2a4:	504b4200 	subpl	r4, fp, r0, lsl #4
     2a8:	52005230 	andpl	r5, r0, #48, 4
     2ac:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     2b0:	00444556 	subeq	r4, r4, r6, asr r5
     2b4:	31504b42 	cmpcc	r0, r2, asr #22
     2b8:	41005232 	tstmi	r0, r2, lsr r2
     2bc:	45324250 	ldrmi	r4, [r2, #-592]!	; 0xfffffdb0
     2c0:	4100524e 	tstmi	r0, lr, asr #4
     2c4:	424d524c 	submi	r5, sp, #76, 4	; 0xc0000004
     2c8:	46430052 			; <UNDEFINED> instruction: 0x46430052
     2cc:	42005247 	andmi	r5, r0, #1879048196	; 0x70000004
     2d0:	5238504b 	eorspl	r5, r8, #75	; 0x4b
     2d4:	6e697500 	cdpvs	5, 6, cr7, cr9, cr0, {0}
     2d8:	5f323374 	svcpl	0x00323374
     2dc:	55570074 	ldrbpl	r0, [r7, #-116]	; 0xffffff8c
     2e0:	42005254 	andmi	r5, r0, #84, 4	; 0x40000005
     2e4:	3432504b 	ldrtcc	r5, [r2], #-75	; 0xffffffb5
     2e8:	4b420052 	blmi	1080438 <_Min_Stack_Size+0x1080038>
     2ec:	00523150 	subseq	r3, r2, r0, asr r1
     2f0:	31425041 	cmpcc	r2, r1, asr #32
     2f4:	00524e45 	subseq	r4, r2, r5, asr #28
     2f8:	31504b42 	cmpcc	r0, r2, asr #22
     2fc:	63005233 	movwvs	r5, #563	; 0x233
     300:	6b636f6c 	blvs	18dc0b8 <_Min_Stack_Size+0x18dbcb8>
     304:	00534d5f 	subseq	r4, r3, pc, asr sp
     308:	46494853 			; <UNDEFINED> instruction: 0x46494853
     30c:	49005254 	stmdbmi	r0, {r2, r4, r6, r9, ip, lr}
     310:	52435343 	subpl	r5, r3, #201326593	; 0xc000001
     314:	504b4200 	subpl	r4, fp, r0, lsl #4
     318:	75005239 	strvc	r5, [r0, #-569]	; 0xfffffdc7
     31c:	38746e69 	ldmdacc	r4!, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
     320:	5000745f 	andpl	r7, r0, pc, asr r4
     324:	59454b45 	stmdbpl	r5, {r0, r2, r6, r8, r9, fp, lr}^
     328:	4b420052 	blmi	1080478 <_Min_Stack_Size+0x1080078>
     32c:	52353250 	eorspl	r3, r5, #80, 4
     330:	504b4200 	subpl	r4, fp, r0, lsl #4
     334:	72005232 	andvc	r5, r0, #536870915	; 0x20000003
     338:	696e6965 	stmdbvs	lr!, {r0, r2, r5, r6, r8, fp, sp, lr}^
     33c:	4b420074 	blmi	1080514 <_Min_Stack_Size+0x1080114>
     340:	52343150 	eorspl	r3, r4, #80, 2
     344:	69616d00 	stmdbvs	r1!, {r8, sl, fp, sp, lr}^
     348:	4e47006e 	cdpmi	0, 4, cr0, cr7, cr14, {3}
     34c:	31432055 	qdaddcc	r2, r5, r3
     350:	2e382037 	mrccs	0, 1, r2, cr8, cr7, {1}
     354:	20312e33 	eorscs	r2, r1, r3, lsr lr
     358:	39313032 	ldmdbcc	r1!, {r1, r4, r5, ip, sp}
     35c:	33303730 	teqcc	r0, #48, 14	; 0xc00000
     360:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
     364:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
     368:	5b202965 	blpl	80a904 <_Min_Stack_Size+0x80a504>
     36c:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
     370:	72622d38 	rsbvc	r2, r2, #56, 26	; 0xe00
     374:	68636e61 	stmdavs	r3!, {r0, r5, r6, r9, sl, fp, sp, lr}^
     378:	76657220 	strbtvc	r7, [r5], -r0, lsr #4
     37c:	6f697369 	svcvs	0x00697369
     380:	3732206e 	ldrcc	r2, [r2, -lr, rrx]!
     384:	37323033 			; <UNDEFINED> instruction: 0x37323033
     388:	6d2d205d 	stcvs	0, cr2, [sp, #-372]!	; 0xfffffe8c
     38c:	6d756874 	ldclvs	8, cr6, [r5, #-464]!	; 0xfffffe30
     390:	6d2d2062 	stcvs	0, cr2, [sp, #-392]!	; 0xfffffe78
     394:	3d757063 	ldclcc	0, cr7, [r5, #-396]!	; 0xfffffe74
     398:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
     39c:	6d2d7865 	stcvs	8, cr7, [sp, #-404]!	; 0xfffffe6c
     3a0:	6d2d2033 	stcvs	0, cr2, [sp, #-204]!	; 0xffffff34
     3a4:	616f6c66 	cmnvs	pc, r6, ror #24
     3a8:	62612d74 	rsbvs	r2, r1, #116, 26	; 0x1d00
     3ac:	6f733d69 	svcvs	0x00733d69
     3b0:	2d207466 	cfstrscs	mvf7, [r0, #-408]!	; 0xfffffe68
     3b4:	6372616d 	cmnvs	r2, #1073741851	; 0x4000001b
     3b8:	72613d68 	rsbvc	r3, r1, #104, 26	; 0x1a00
     3bc:	2d37766d 	ldccs	6, cr7, [r7, #-436]!	; 0xfffffe4c
     3c0:	672d206d 	strvs	r2, [sp, -sp, rrx]!
     3c4:	72617764 	rsbvc	r7, r1, #100, 14	; 0x1900000
     3c8:	20322d66 	eorscs	r2, r2, r6, ror #26
     3cc:	20734f2d 	rsbscs	r4, r3, sp, lsr #30
     3d0:	6f6e662d 	svcvs	0x006e662d
     3d4:	6975622d 	ldmdbvs	r5!, {r0, r2, r3, r5, r9, sp, lr}^
     3d8:	6e69746c 	cdpvs	4, 6, cr7, cr9, cr12, {3}
     3dc:	42484100 	submi	r4, r8, #0, 2
     3e0:	00524e45 	subseq	r4, r2, r5, asr #28
     3e4:	314d4954 	cmpcc	sp, r4, asr r9
     3e8:	52495f31 	subpl	r5, r9, #49, 30	; 0xc4
     3ec:	77006e51 	smlsdvc	r0, r1, lr, r6
     3f0:	65646e49 	strbvs	r6, [r4, #-3657]!	; 0xfffff1b7
     3f4:	59530078 	ldmdbpl	r3, {r3, r4, r5, r6}^
     3f8:	47464353 	smlsldmi	r4, r6, r3, r3
     3fc:	7079545f 	rsbsvc	r5, r9, pc, asr r4
     400:	66654465 	strbtvs	r4, [r5], -r5, ror #8
     404:	66756200 	ldrbtvs	r6, [r5], -r0, lsl #4
     408:	54003631 	strpl	r3, [r0], #-1585	; 0xfffff9cf
     40c:	5f394d49 	svcpl	0x00394d49
     410:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     414:	414d4400 	cmpmi	sp, r0, lsl #8
     418:	68435f31 	stmdavs	r3, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
     41c:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xfffff19f
     420:	495f376c 	ldmdbmi	pc, {r2, r3, r5, r6, r8, r9, sl, ip, sp}^	; <UNPREDICTABLE>
     424:	006e5152 	rsbeq	r5, lr, r2, asr r1
     428:	32433249 	subcc	r3, r3, #-1879048188	; 0x90000004
     42c:	5f52455f 	svcpl	0x0052455f
     430:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     434:	43565300 	cmpmi	r6, #0, 6
     438:	5152495f 	cmppl	r2, pc, asr r9
     43c:	4954006e 	ldmdbmi	r4, {r1, r2, r3, r5, r6}^
     440:	495f344d 	ldmdbmi	pc, {r0, r2, r3, r6, sl, ip, sp}^	; <UNPREDICTABLE>
     444:	006e5152 	rsbeq	r5, lr, r2, asr r1
     448:	31414d44 	cmpcc	r1, r4, asr #26
     44c:	6168435f 	cmnvs	r8, pc, asr r3
     450:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
     454:	52495f32 	subpl	r5, r9, #50, 30	; 0xc8
     458:	70006e51 	andvc	r6, r0, r1, asr lr
     45c:	645f616d 	ldrbvs	r6, [pc], #-365	; 464 <_Min_Stack_Size+0x64>
     460:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
     464:	6200745f 	andvs	r7, r0, #1593835520	; 0x5f000000
     468:	7165526d 	cmnvc	r5, sp, ror #4
     46c:	74736575 	ldrbtvc	r6, [r3], #-1397	; 0xfffffa8b
     470:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     474:	74657300 	strbtvc	r7, [r5], #-768	; 0xfffffd00
     478:	705f7075 	subsvc	r7, pc, r5, ror r0	; <UNPREDICTABLE>
     47c:	656b6361 	strbvs	r6, [fp, #-865]!	; 0xfffffc9f
     480:	4c460074 	mcrrmi	0, 7, r0, r6, cr4
     484:	5f485341 	svcpl	0x00485341
     488:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     48c:	74796200 	ldrbtvc	r6, [r9], #-512	; 0xfffffe00
     490:	65727365 	ldrbvs	r7, [r2, #-869]!	; 0xfffffc9b
     494:	45006461 	strmi	r6, [r0, #-1121]	; 0xfffffb9f
     498:	30495458 	subcc	r5, r9, r8, asr r4
     49c:	5152495f 	cmppl	r2, pc, asr r9
     4a0:	5845006e 	stmdapl	r5, {r1, r2, r3, r5, r6}^
     4a4:	35314954 	ldrcc	r4, [r1, #-2388]!	; 0xfffff6ac
     4a8:	5f30315f 	svcpl	0x0030315f
     4ac:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     4b0:	73616c00 	cmnvc	r1, #0, 24
     4b4:	64646174 	strbtvs	r6, [r4], #-372	; 0xfffffe8c
     4b8:	65500072 	ldrbvs	r0, [r0, #-114]	; 0xffffff8e
     4bc:	5653646e 	ldrbpl	r6, [r3], -lr, ror #8
     4c0:	5152495f 	cmppl	r2, pc, asr r9
     4c4:	454d006e 	strbmi	r0, [sp, #-110]	; 0xffffff92
     4c8:	504d524d 	subpl	r5, sp, sp, asr #4
     4cc:	43435200 	movtmi	r5, #12800	; 0x3200
     4d0:	5152495f 	cmppl	r2, pc, asr r9
     4d4:	5677006e 	ldrbtpl	r0, [r7], -lr, rrx
     4d8:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
     4dc:	6d654d00 	stclvs	13, cr4, [r5, #-0]
     4e0:	4d79726f 	lfmmi	f7, 2, [r9, #-444]!	; 0xfffffe44
     4e4:	67616e61 	strbvs	r6, [r1, -r1, ror #28]!
     4e8:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
     4ec:	52495f74 	subpl	r5, r9, #116, 30	; 0x1d0
     4f0:	65006e51 	strvs	r6, [r0, #-3665]	; 0xfffff1af
     4f4:	635f3070 	cmpvs	pc, #112	; 0x70
     4f8:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
     4fc:	54534900 	ldrbpl	r4, [r3], #-2304	; 0xfffff700
     500:	41540052 	cmpmi	r4, r2, asr r0
     504:	5245504d 	subpl	r5, r5, #77	; 0x4d
     508:	4154535f 	cmpmi	r4, pc, asr r3
     50c:	495f504d 	ldmdbmi	pc, {r0, r2, r3, r6, ip, lr}^	; <UNPREDICTABLE>
     510:	006e5152 	rsbeq	r5, lr, r2, asr r1
     514:	52455349 	subpl	r5, r5, #603979777	; 0x24000001
     518:	646e6500 	strbtvs	r6, [lr], #-1280	; 0xfffffb00
     51c:	61635f70 	smcvs	13808	; 0x35f0
     520:	61626c6c 	cmnvs	r2, ip, ror #24
     524:	645f6b63 	ldrbvs	r6, [pc], #-2915	; 52c <_Min_Stack_Size+0x12c>
     528:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
     52c:	4400746c 	strmi	r7, [r0], #-1132	; 0xfffffb94
     530:	5f32414d 	svcpl	0x0032414d
     534:	6e616843 	cdpvs	8, 6, cr6, cr1, cr3, {2}
     538:	346c656e 	strbtcc	r6, [ip], #-1390	; 0xfffffa92
     53c:	5152495f 	cmppl	r2, pc, asr r9
     540:	5352006e 	cmppl	r2, #110	; 0x6e
     544:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     548:	53003144 	movwpl	r3, #324	; 0x144
     54c:	5f314950 	svcpl	0x00314950
     550:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     554:	73755f00 	cmnvc	r5, #0, 30
     558:	70655f62 	rsbvc	r5, r5, r2, ror #30
     55c:	6972775f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}^
     560:	54006574 	strpl	r6, [r0], #-1396	; 0xfffffa8c
     564:	5f364d49 	svcpl	0x00364d49
     568:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     56c:	414d4400 	cmpmi	sp, r0, lsl #8
     570:	68435f31 	stmdavs	r3, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
     574:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xfffff19f
     578:	495f346c 	ldmdbmi	pc, {r2, r3, r5, r6, sl, ip, sp}^	; <UNPREDICTABLE>
     57c:	006e5152 	rsbeq	r5, lr, r2, asr r1
     580:	4349564e 	movtmi	r5, #38478	; 0x964e
     584:	616e455f 	cmnvs	lr, pc, asr r5
     588:	49656c62 	stmdbmi	r5!, {r1, r5, r6, sl, fp, sp, lr}^
     58c:	43005152 	movwmi	r5, #338	; 0x152
     590:	5f504d4f 	svcpl	0x00504d4f
     594:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     598:	42535500 	subsmi	r5, r3, #0, 10
     59c:	7079545f 	rsbsvc	r5, r9, pc, asr r4
     5a0:	66654465 	strbtvs	r4, [r5], -r5, ror #8
     5a4:	44414400 	strbmi	r4, [r1], #-1024	; 0xfffffc00
     5a8:	55005244 	strpl	r5, [r0, #-580]	; 0xfffffdbc
     5ac:	4c5f4253 	lfmmi	f4, 2, [pc], {83}	; 0x53
     5b0:	52495f50 	subpl	r5, r9, #80, 30	; 0x140
     5b4:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
     5b8:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     5bc:	62737500 	rsbsvs	r7, r3, #0, 10
     5c0:	616c635f 	cmnvs	ip, pc, asr r3
     5c4:	675f7373 			; <UNDEFINED> instruction: 0x675f7373
     5c8:	735f7465 	cmpvc	pc, #1694498816	; 0x65000000
     5cc:	645f6474 	ldrbvs	r6, [pc], #-1140	; 5d4 <_Min_Stack_Size+0x1d4>
     5d0:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
     5d4:	51524900 	cmppl	r2, r0, lsl #18
     5d8:	79545f6e 	ldmdbvc	r4, {r1, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
     5dc:	65006570 	strvs	r6, [r0, #-1392]	; 0xfffffa90
     5e0:	735f3070 	cmpvc	pc, #112	; 0x70
     5e4:	00646e65 	rsbeq	r6, r4, r5, ror #28
     5e8:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
     5ec:	495f3254 	ldmdbmi	pc, {r2, r4, r6, r9, ip, sp}^	; <UNPREDICTABLE>
     5f0:	006e5152 	rsbeq	r5, lr, r2, asr r1
     5f4:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
     5f8:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
     5fc:	6f697461 	svcvs	0x00697461
     600:	5045006e 	subpl	r0, r5, lr, rrx
     604:	52005230 	andpl	r5, r0, #48, 4
     608:	575f4354 			; <UNDEFINED> instruction: 0x575f4354
     60c:	5f50554b 	svcpl	0x0050554b
     610:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     614:	42535500 	subsmi	r5, r3, #0, 10
     618:	6464415f 	strbtvs	r4, [r4], #-351	; 0xfffffea1
     61c:	70650072 	rsbvc	r0, r5, r2, ror r0
     620:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
     624:	74756f5f 	ldrbtvc	r6, [r5], #-3935	; 0xfffff0a1
     628:	30706500 	rsbscc	r6, r0, r0, lsl #10
     62c:	6675625f 			; <UNDEFINED> instruction: 0x6675625f
     630:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
     634:	495f3249 	ldmdbmi	pc, {r0, r3, r6, r9, ip, sp}^	; <UNPREDICTABLE>
     638:	006e5152 	rsbeq	r5, lr, r2, asr r1
     63c:	31434441 	cmpcc	r3, r1, asr #8
     640:	5152495f 	cmppl	r2, pc, asr r9
     644:	3249006e 	subcc	r0, r9, #110	; 0x6e
     648:	455f3243 	ldrbmi	r3, [pc, #-579]	; 40d <_Min_Stack_Size+0xd>
     64c:	52495f56 	subpl	r5, r9, #344	; 0x158
     650:	45006e51 	strmi	r6, [r0, #-3665]	; 0xfffff1af
     654:	00523150 	subseq	r3, r2, r0, asr r1
     658:	33495053 	movtcc	r5, #36947	; 0x9053
     65c:	5152495f 	cmppl	r2, pc, asr r9
     660:	7375006e 	cmnvc	r5, #110	; 0x6e
     664:	70655f62 	rsbvc	r5, r5, r2, ror #30
     668:	61746164 	cmnvs	r4, r4, ror #2
     66c:	4300745f 	movwmi	r7, #1119	; 0x45f
     670:	5f504d4f 	svcpl	0x00504d4f
     674:	5f514341 	svcpl	0x00514341
     678:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     67c:	414d4400 	cmpmi	sp, r0, lsl #8
     680:	68435f31 	stmdavs	r3, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
     684:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xfffff19f
     688:	495f366c 	ldmdbmi	pc, {r2, r3, r5, r6, r9, sl, ip, sp}^	; <UNPREDICTABLE>
     68c:	006e5152 	rsbeq	r5, lr, r2, asr r1
     690:	32414d44 	subcc	r4, r1, #68, 26	; 0x1100
     694:	6168435f 	cmnvs	r8, pc, asr r3
     698:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
     69c:	52495f31 	subpl	r5, r9, #49, 30	; 0xc4
     6a0:	5f006e51 	svcpl	0x00006e51
     6a4:	5f627375 	svcpl	0x00627375
     6a8:	725f7065 	subsvc	r7, pc, #101	; 0x65
     6ac:	00646165 	rsbeq	r6, r4, r5, ror #2
     6b0:	334d4954 	movtcc	r4, #55636	; 0xd954
     6b4:	5152495f 	cmppl	r2, pc, asr r9
     6b8:	4d44006e 	stclmi	0, cr0, [r4, #-440]	; 0xfffffe48
     6bc:	435f3141 	cmpmi	pc, #1073741840	; 0x40000010
     6c0:	6e6e6168 	powvsez	f6, f6, #0.0
     6c4:	5f316c65 	svcpl	0x00316c65
     6c8:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     6cc:	62737500 	rsbsvs	r7, r3, #0, 10
     6d0:	616c635f 	cmnvs	ip, pc, asr r3
     6d4:	695f7373 	ldmdbvs	pc, {r0, r1, r4, r5, r6, r8, r9, ip, sp, lr}^	; <UNPREDICTABLE>
     6d8:	0074696e 	rsbseq	r6, r4, lr, ror #18
     6dc:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
     6e0:	45005243 	strmi	r5, [r0, #-579]	; 0xfffffdbd
     6e4:	00523250 	subseq	r3, r2, r0, asr r2
     6e8:	314d4954 	cmpcc	sp, r4, asr r9
     6ec:	52495f30 	subpl	r5, r9, #48, 30	; 0xc0
     6f0:	57006e51 	smlsdpl	r0, r1, lr, r6
     6f4:	5f474457 	svcpl	0x00474457
     6f8:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     6fc:	62737500 	rsbsvs	r7, r3, #0, 10
     700:	616c635f 	cmnvs	ip, pc, asr r3
     704:	645f7373 	ldrbvs	r7, [pc], #-883	; 70c <_Min_Stack_Size+0x30c>
     708:	6f637369 	svcvs	0x00637369
     70c:	63656e6e 	cmnvs	r5, #1760	; 0x6e0
     710:	50450074 	subpl	r0, r5, r4, ror r0
     714:	42005233 	andmi	r5, r0, #805306371	; 0x30000003
     718:	61467375 	hvcvs	26421	; 0x6735
     71c:	5f746c75 	svcpl	0x00746c75
     720:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     724:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
     728:	495f3449 	ldmdbmi	pc, {r0, r3, r6, sl, ip, sp}^	; <UNPREDICTABLE>
     72c:	006e5152 	rsbeq	r5, lr, r2, asr r1
     730:	5f445650 	svcpl	0x00445650
     734:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     738:	66706500 	ldrbtvs	r6, [r0], -r0, lsl #10
     73c:	5f636e75 	svcpl	0x00636e75
     740:	73750074 	cmnvc	r5, #116	; 0x74
     744:	78745f62 	ldmdavc	r4!, {r1, r5, r6, r8, r9, sl, fp, ip, lr}^
     748:	756f635f 	strbvc	r6, [pc, #-863]!	; 3f1 <_Min_Heap_Size+0x3f1>
     74c:	4900746e 	stmdbmi	r0, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
     750:	00525043 	subseq	r5, r2, r3, asr #32
     754:	32414d44 	subcc	r4, r1, #68, 26	; 0x1100
     758:	6168435f 	cmnvs	r8, pc, asr r3
     75c:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
     760:	52495f33 	subpl	r5, r9, #51, 30	; 0xcc
     764:	54006e51 	strpl	r6, [r0], #-3665	; 0xfffff1af
     768:	5f354d49 	svcpl	0x00354d49
     76c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     770:	414d4400 	cmpmi	sp, r0, lsl #8
     774:	68435f31 	stmdavs	r3, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
     778:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xfffff19f
     77c:	495f336c 	ldmdbmi	pc, {r2, r3, r5, r6, r8, r9, ip, sp}^	; <UNPREDICTABLE>
     780:	006e5152 	rsbeq	r5, lr, r2, asr r1
     784:	2f637273 	svccs	0x00637273
     788:	5f627375 	svcpl	0x00627375
     78c:	2e62696c 	vnmulcs.f16	s13, s4, s25	; <UNPREDICTABLE>
     790:	32490063 	subcc	r0, r9, #99	; 0x63
     794:	455f3143 	ldrbmi	r3, [pc, #-323]	; 659 <_Min_Stack_Size+0x259>
     798:	52495f56 	subpl	r5, r9, #344	; 0x158
     79c:	72006e51 	andvc	r6, r0, #1296	; 0x510
     7a0:	756e5f78 	strbvc	r5, [lr, #-3960]!	; 0xfffff088
     7a4:	6c625f6d 	stclvs	15, cr5, [r2], #-436	; 0xfffffe4c
     7a8:	736b636f 	cmnvc	fp, #-1140850687	; 0xbc000001
     7ac:	62737500 	rsbsvs	r7, r3, #0, 10
     7b0:	616c635f 	cmnvs	ip, pc, asr r3
     7b4:	655f7373 	ldrbvs	r7, [pc, #-883]	; 449 <_Min_Stack_Size+0x49>
     7b8:	695f3070 	ldmdbvs	pc, {r4, r5, r6, ip, sp}^	; <UNPREDICTABLE>
     7bc:	7874006e 	ldmdavc	r4!, {r1, r2, r3, r5, r6}^
     7c0:	6f6c625f 	svcvs	0x006c625f
     7c4:	69736b63 	ldmdbvs	r3!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^
     7c8:	5300657a 	movwpl	r6, #1402	; 0x57a
     7cc:	00524954 	subseq	r4, r2, r4, asr r9
     7d0:	5f435452 	svcpl	0x00435452
     7d4:	72616c41 	rsbvc	r6, r1, #16640	; 0x4100
     7d8:	52495f6d 	subpl	r5, r9, #436	; 0x1b4
     7dc:	72006e51 	andvc	r6, r0, #1296	; 0x510
     7e0:	69735f78 	ldmdbvs	r3!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     7e4:	4500657a 	strmi	r6, [r0, #-1402]	; 0xfffffa86
     7e8:	00523550 	subseq	r3, r2, r0, asr r5
     7ec:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     7f0:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     7f4:	45520030 	ldrbmi	r0, [r2, #-48]	; 0xffffffd0
     7f8:	56524553 			; <UNDEFINED> instruction: 0x56524553
     7fc:	00314445 	eorseq	r4, r1, r5, asr #8
     800:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     804:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     808:	45520032 	ldrbmi	r0, [r2, #-50]	; 0xffffffce
     80c:	56524553 			; <UNDEFINED> instruction: 0x56524553
     810:	00334445 	eorseq	r4, r3, r5, asr #8
     814:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     818:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     81c:	45520034 	ldrbmi	r0, [r2, #-52]	; 0xffffffcc
     820:	56524553 			; <UNDEFINED> instruction: 0x56524553
     824:	00354445 	eorseq	r4, r5, r5, asr #8
     828:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     82c:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     830:	53550036 	cmppl	r5, #54	; 0x36
     834:	53465f42 	movtpl	r5, #28482	; 0x6f42
     838:	554b575f 	strbpl	r5, [fp, #-1887]	; 0xfffff8a1
     83c:	52495f50 	subpl	r5, r9, #80, 30	; 0x140
     840:	52006e51 	andpl	r6, r0, #1296	; 0x510
     844:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     848:	39444556 	stmdbcc	r4, {r1, r2, r4, r6, r8, sl, lr}^
     84c:	53455200 	movtpl	r5, #20992	; 0x5200
     850:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     854:	55004144 	strpl	r4, [r0, #-324]	; 0xfffffebc
     858:	54524153 	ldrbpl	r4, [r2], #-339	; 0xfffffead
     85c:	52495f31 	subpl	r5, r9, #49, 30	; 0xc4
     860:	75006e51 	strvc	r6, [r0, #-3665]	; 0xfffff1af
     864:	655f6273 	ldrbvs	r6, [pc, #-627]	; 5f9 <_Min_Stack_Size+0x1f9>
     868:	6e695f70 	mcrvs	15, 3, r5, cr9, cr0, {3}
     86c:	4e007469 	cdpmi	4, 0, cr7, cr0, cr9, {3}
     870:	614d6e6f 	cmpvs	sp, pc, ror #28
     874:	62616b73 	rsbvs	r6, r1, #117760	; 0x1cc00
     878:	6e49656c 	cdpvs	5, 4, cr6, cr9, cr12, {3}
     87c:	52495f74 	subpl	r5, r9, #116, 30	; 0x1d0
     880:	77006e51 	smlsdvc	r0, r1, lr, r6
     884:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
     888:	45006874 	strmi	r6, [r0, #-2164]	; 0xfffff78c
     88c:	00523650 	subseq	r3, r2, r0, asr r6
     890:	7466656c 	strbtvc	r6, [r6], #-1388	; 0xfffffa94
     894:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
     898:	495f3149 	ldmdbmi	pc, {r0, r3, r6, r8, ip, sp}^	; <UNPREDICTABLE>
     89c:	006e5152 	rsbeq	r5, lr, r2, asr r1
     8a0:	71655262 	cmnvc	r5, r2, ror #4
     8a4:	74736575 	ldrbtvc	r6, [r3], #-1397	; 0xfffffa8b
     8a8:	49564e00 	ldmdbmi	r6, {r9, sl, fp, lr}^
     8ac:	79545f43 	ldmdbvc	r4, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
     8b0:	43006570 	movwmi	r6, #1392	; 0x570
     8b4:	0052544e 	subseq	r5, r2, lr, asr #8
     8b8:	32414d44 	subcc	r4, r1, #68, 26	; 0x1100
     8bc:	6168435f 	cmnvs	r8, pc, asr r3
     8c0:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
     8c4:	52495f35 	subpl	r5, r9, #53, 30	; 0xd4
     8c8:	49006e51 	stmdbmi	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
     8cc:	5f314332 	svcpl	0x00314332
     8d0:	495f5245 	ldmdbmi	pc, {r0, r2, r6, r9, ip, lr}^	; <UNPREDICTABLE>
     8d4:	006e5152 	rsbeq	r5, lr, r2, asr r1
     8d8:	54737953 	ldrbtpl	r7, [r3], #-2387	; 0xfffff6ad
     8dc:	5f6b6369 	svcpl	0x006b6369
     8e0:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     8e4:	6e706500 	cdpvs	5, 7, cr6, cr0, cr0, {0}
     8e8:	54006d75 	strpl	r6, [r0], #-3445	; 0xfffff28b
     8ec:	5f324d49 	svcpl	0x00324d49
     8f0:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     8f4:	62737500 	rsbsvs	r7, r3, #0, 10
     8f8:	616c635f 	cmnvs	ip, pc, asr r3
     8fc:	655f7373 	ldrbvs	r7, [pc, #-883]	; 591 <_Min_Stack_Size+0x191>
     900:	6f5f3070 	svcvs	0x005f3070
     904:	45007475 	strmi	r7, [r0, #-1141]	; 0xfffffb8b
     908:	00523750 	subseq	r3, r2, r0, asr r7
     90c:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
     910:	705f6769 	subsvc	r6, pc, r9, ror #14
     914:	5f6b6361 	svcpl	0x006b6361
     918:	73750074 	cmnvc	r5, #116	; 0x74
     91c:	78725f62 	ldmdavc	r2!, {r1, r5, r6, r8, r9, sl, fp, ip, lr}^
     920:	6464615f 	strbtvs	r6, [r4], #-351	; 0xfffffea1
     924:	78740072 	ldmdavc	r4!, {r1, r4, r5, r6}^
     928:	6d756e5f 	ldclvs	14, cr6, [r5, #-380]!	; 0xfffffe84
     92c:	6f6c625f 	svcvs	0x006c625f
     930:	00736b63 	rsbseq	r6, r3, r3, ror #22
     934:	5f425355 	svcpl	0x00425355
     938:	495f5048 	ldmdbmi	pc, {r3, r6, ip, lr}^	; <UNPREDICTABLE>
     93c:	006e5152 	rsbeq	r5, lr, r2, asr r1
     940:	75626544 	strbvc	r6, [r2, #-1348]!	; 0xfffffabc
     944:	6e6f4d67 	cdpvs	13, 6, cr4, cr15, cr7, {3}
     948:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
     94c:	5152495f 	cmppl	r2, pc, asr r9
     950:	7355006e 	cmpvc	r5, #110	; 0x6e
     954:	46656761 	strbtmi	r6, [r5], -r1, ror #14
     958:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     95c:	5152495f 	cmppl	r2, pc, asr r9
     960:	7872006e 	ldmdavc	r2!, {r1, r2, r3, r5, r6}^
     964:	6f6c625f 	svcvs	0x006c625f
     968:	69736b63 	ldmdbvs	r3!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^
     96c:	6500657a 	strvs	r6, [r0, #-1402]	; 0xfffffa86
     970:	6e756670 	mrcvs	6, 3, r6, cr5, cr0, {3}
     974:	6e695f63 	cdpvs	15, 6, cr5, cr9, cr3, {3}
     978:	62737500 	rsbsvs	r7, r3, #0, 10
     97c:	5f70655f 	svcpl	0x0070655f
     980:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
     984:	756f645f 	strbvc	r6, [pc, #-1119]!	; 52d <_Min_Stack_Size+0x12d>
     988:	00656c62 	rsbeq	r6, r5, r2, ror #24
     98c:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
     990:	5f355f39 	svcpl	0x00355f39
     994:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     998:	34504500 	ldrbcc	r4, [r0], #-1280	; 0xfffffb00
     99c:	43490052 	movtmi	r0, #36946	; 0x9052
     9a0:	53005245 	movwpl	r5, #581	; 0x245
     9a4:	5f324950 	svcpl	0x00324950
     9a8:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     9ac:	42414900 	submi	r4, r1, #0, 18
     9b0:	49540052 	ldmdbmi	r4, {r1, r4, r6}^
     9b4:	495f374d 	ldmdbmi	pc, {r0, r2, r3, r6, r8, r9, sl, ip, sp}^	; <UNPREDICTABLE>
     9b8:	006e5152 	rsbeq	r5, lr, r2, asr r1
     9bc:	31414d44 	cmpcc	r1, r4, asr #26
     9c0:	6168435f 	cmnvs	r8, pc, asr r3
     9c4:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
     9c8:	52495f35 	subpl	r5, r9, #53, 30	; 0xd4
     9cc:	42006e51 	andmi	r6, r0, #1296	; 0x510
     9d0:	4c424154 	stfmie	f4, [r2], {84}	; 0x54
     9d4:	41440045 	cmpmi	r4, r5, asr #32
     9d8:	52495f43 	subpl	r5, r9, #268	; 0x10c
     9dc:	65006e51 	strvs	r6, [r0, #-3665]	; 0xfffff1af
     9e0:	79745f70 	ldmdbvc	r4!, {r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     9e4:	45006570 	strmi	r6, [r0, #-1392]	; 0xfffffa90
     9e8:	33495458 	movtcc	r5, #37976	; 0x9458
     9ec:	5152495f 	cmppl	r2, pc, asr r9
     9f0:	6964006e 	stmdbvs	r4!, {r1, r2, r3, r5, r6}^
     9f4:	6e695f72 	mcrvs	15, 3, r5, cr9, cr2, {3}
     9f8:	62737500 	rsbsvs	r7, r3, #0, 10
     9fc:	5f78745f 	svcpl	0x0078745f
     a00:	72646461 	rsbvc	r6, r4, #1627389952	; 0x61000000
     a04:	50534900 	subspl	r4, r3, r0, lsl #18
     a08:	73750052 	cmnvc	r5, #82	; 0x52
     a0c:	78725f62 	ldmdavc	r2!, {r1, r5, r6, r8, r9, sl, fp, ip, lr}^
     a10:	756f635f 	strbvc	r6, [pc, #-863]!	; 6b9 <_Min_Stack_Size+0x2b9>
     a14:	7200746e 	andvc	r7, r0, #1845493760	; 0x6e000000
     a18:	756f6378 	strbvc	r6, [pc, #-888]!	; 6a8 <_Min_Stack_Size+0x2a8>
     a1c:	4400746e 	strmi	r7, [r0], #-1134	; 0xfffffb92
     a20:	5f32414d 	svcpl	0x0032414d
     a24:	6e616843 	cdpvs	8, 6, cr6, cr1, cr3, {2}
     a28:	326c656e 	rsbcc	r6, ip, #461373440	; 0x1b800000
     a2c:	5152495f 	cmppl	r2, pc, asr r9
     a30:	5355006e 	cmppl	r5, #110	; 0x6e
     a34:	33545241 	cmpcc	r4, #268435460	; 0x10000004
     a38:	5152495f 	cmppl	r2, pc, asr r9
     a3c:	4552006e 	ldrbmi	r0, [r2, #-110]	; 0xffffff92
     a40:	56524553 			; <UNDEFINED> instruction: 0x56524553
     a44:	00384445 	eorseq	r4, r8, r5, asr #8
     a48:	5f425355 	svcpl	0x00425355
     a4c:	495f504c 	ldmdbmi	pc, {r2, r3, r6, ip, lr}^	; <UNPREDICTABLE>
     a50:	006e5152 	rsbeq	r5, lr, r2, asr r1
     a54:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     a58:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     a5c:	45520042 	ldrbmi	r0, [r2, #-66]	; 0xffffffbe
     a60:	56524553 			; <UNDEFINED> instruction: 0x56524553
     a64:	00434445 	subeq	r4, r3, r5, asr #8
     a68:	69726170 	ldmdbvs	r2!, {r4, r5, r6, r8, sp, lr}^
     a6c:	66007974 			; <UNDEFINED> instruction: 0x66007974
     a70:	3875746d 	ldmdacc	r5!, {r0, r2, r3, r5, r6, sl, ip, sp, lr}^
     a74:	63775f00 	cmnvs	r7, #0, 30
     a78:	626d6f74 	rsbvs	r6, sp, #116, 30	; 0x1d0
     a7c:	6174735f 	cmnvs	r4, pc, asr r3
     a80:	5f006574 	svcpl	0x00006574
     a84:	00383472 	eorseq	r3, r8, r2, ror r4
     a88:	64756162 	ldrbtvs	r6, [r5], #-354	; 0xfffffe9e
     a8c:	65746172 	ldrbvs	r6, [r4, #-370]!	; 0xfffffe8e
     a90:	52415500 	subpl	r5, r1, #0, 10
     a94:	775f3154 			; <UNDEFINED> instruction: 0x775f3154
     a98:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
     a9c:	69735f00 	ldmdbvs	r3!, {r8, r9, sl, fp, ip, lr}^
     aa0:	6c616e67 	stclvs	14, cr6, [r1], #-412	; 0xfffffe64
     aa4:	6675625f 			; <UNDEFINED> instruction: 0x6675625f
     aa8:	626c5f00 	rsbvs	r5, ip, #0, 30
     aac:	7a697366 	bvc	1a5d84c <_Min_Stack_Size+0x1a5d44c>
     ab0:	665f0065 	ldrbvs	r0, [pc], -r5, rrx
     ab4:	7367616c 	cmnvc	r7, #108, 2
     ab8:	666f5f00 	strbtvs	r5, [pc], -r0, lsl #30
     abc:	00745f66 	rsbseq	r5, r4, r6, ror #30
     ac0:	616d6e5f 	cmnvs	sp, pc, asr lr
     ac4:	636f6c6c 	cmnvs	pc, #108, 24	; 0x6c00
     ac8:	74616400 	strbtvc	r6, [r1], #-1024	; 0xfffffc00
     acc:	756f5f61 	strbvc	r5, [pc, #-3937]!	; fffffb73 <BootRAM+0xef70314>
     ad0:	61635f74 	smcvs	13812	; 0x35f4
     ad4:	61626c6c 	cmnvs	r2, ip, ror #24
     ad8:	63006b63 	movwvs	r6, #2915	; 0xb63
     adc:	635f6c74 	cmpvs	pc, #116, 24	; 0x7400
     ae0:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
     ae4:	006b6361 	rsbeq	r6, fp, r1, ror #6
     ae8:	434f4c5f 	movtmi	r4, #64607	; 0xfc5f
     aec:	45525f4b 	ldrbmi	r5, [r2, #-3915]	; 0xfffff0b5
     af0:	53525543 	cmppl	r2, #281018368	; 0x10c00000
     af4:	5f455649 	svcpl	0x00455649
     af8:	755f0054 	ldrbvc	r0, [pc, #-84]	; aac <_Min_Stack_Size+0x6ac>
     afc:	6570736e 	ldrbvs	r7, [r0, #-878]!	; 0xfffffc92
     b00:	69666963 	stmdbvs	r6!, {r0, r1, r5, r6, r8, fp, sp, lr}^
     b04:	6c5f6465 	cfldrdvs	mvd6, [pc], {101}	; 0x65
     b08:	6c61636f 	stclvs	3, cr6, [r1], #-444	; 0xfffffe44
     b0c:	6e695f65 	cdpvs	15, 6, cr5, cr9, cr5, {3}
     b10:	5f006f66 	svcpl	0x00006f66
     b14:	6c72626d 	lfmvs	f6, 2, [r2], #-436	; 0xfffffe4c
     b18:	735f6e65 	cmpvc	pc, #1616	; 0x650
     b1c:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
     b20:	656e5f00 	strbvs	r5, [lr, #-3840]!	; 0xfffff100
     b24:	735f0077 	cmpvc	pc, #119	; 0x77
     b28:	756f6474 	strbvc	r6, [pc, #-1140]!	; 6bc <_Min_Stack_Size+0x2bc>
     b2c:	665f0074 			; <UNDEFINED> instruction: 0x665f0074
     b30:	5f736f70 	svcpl	0x00736f70
     b34:	72730074 	rsbsvc	r0, r3, #116	; 0x74
     b38:	73752f63 	cmnvc	r5, #396	; 0x18c
     b3c:	6c635f62 	stclvs	15, cr5, [r3], #-392	; 0xfffffe78
     b40:	5f737361 	svcpl	0x00737361
     b44:	2e636463 	cdpcs	4, 6, cr6, cr3, cr3, {3}
     b48:	665f0063 	ldrbvs	r0, [pc], -r3, rrx
     b4c:	5f00736e 	svcpl	0x0000736e
     b50:	6b6f6f63 	blvs	1bdc8e4 <_Min_Stack_Size+0x1bdc4e4>
     b54:	63006569 	movwvs	r6, #1385	; 0x569
     b58:	6c5f6364 	mrrcvs	3, 6, r6, pc, cr4	; <UNPREDICTABLE>
     b5c:	63656e69 	cmnvs	r5, #1680	; 0x690
     b60:	6e69646f 	cdpvs	4, 6, cr6, cr9, cr15, {3}
     b64:	6d5f0067 	ldclvs	0, cr0, [pc, #-412]	; 9d0 <_Min_Stack_Size+0x5d0>
     b68:	61747362 	cmnvs	r4, r2, ror #6
     b6c:	5f006574 	svcpl	0x00006574
     b70:	5f6d745f 	svcpl	0x006d745f
     b74:	79616477 	stmdbvc	r1!, {r0, r1, r2, r4, r5, r6, sl, sp, lr}^
     b78:	72617500 	rsbvc	r7, r1, #0, 10
     b7c:	725f3174 	subsvc	r3, pc, #116, 2
     b80:	725f0078 	subsvc	r0, pc, #120	; 0x78
     b84:	6c757365 	ldclvs	3, cr7, [r5], #-404	; 0xfffffe6c
     b88:	5f5f0074 	svcpl	0x005f0074
     b8c:	454c4946 	strbmi	r4, [ip, #-2374]	; 0xfffff6ba
     b90:	745f5f00 	ldrbvc	r5, [pc], #-3840	; b98 <_Min_Stack_Size+0x798>
     b94:	6f685f6d 	svcvs	0x00685f6d
     b98:	47007275 	smlsdxmi	r0, r5, r2, r7
     b9c:	00525054 	subseq	r5, r2, r4, asr r0
     ba0:	6f635f5f 	svcvs	0x00635f5f
     ba4:	00746e75 	rsbseq	r6, r4, r5, ror lr
     ba8:	6d745f5f 	ldclvs	15, cr5, [r4, #-380]!	; 0xfffffe84
     bac:	6e696d5f 	mcrvs	13, 3, r6, cr9, cr15, {2}
     bb0:	656e5f00 	strbvs	r5, [lr, #-3840]!	; 0xfffff100
     bb4:	00667478 	rsbeq	r7, r6, r8, ror r4
     bb8:	6e61725f 	mcrvs	2, 3, r7, cr1, cr15, {2}
     bbc:	00383464 	eorseq	r3, r8, r4, ror #8
     bc0:	7365725f 	cmnvc	r5, #-268435451	; 0xf0000005
     bc4:	5f746c75 	svcpl	0x00746c75
     bc8:	5355006b 	cmppl	r5, #107	; 0x6b
     bcc:	6f435f42 	svcvs	0x00435f42
     bd0:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
     bd4:	63736544 	cmnvs	r3, #68, 10	; 0x11000000
     bd8:	74706972 	ldrbtvc	r6, [r0], #-2418	; 0xfffff68e
     bdc:	5f00726f 	svcpl	0x0000726f
     be0:	74637361 	strbtvc	r7, [r3], #-865	; 0xfffffc9f
     be4:	5f656d69 	svcpl	0x00656d69
     be8:	00667562 	rsbeq	r7, r6, r2, ror #10
     bec:	46735f5f 	uhsaxmi	r5, r3, pc	; <UNPREDICTABLE>
     bf0:	00454c49 	subeq	r4, r5, r9, asr #24
     bf4:	7364775f 	cmnvc	r4, #24903680	; 0x17c0000
     bf8:	5f685f00 	svcpl	0x00685f00
     bfc:	6e727265 	cdpvs	2, 7, cr7, cr2, cr5, {3}
     c00:	735f006f 	cmpvc	pc, #111	; 0x6f
     c04:	006b6565 	rsbeq	r6, fp, r5, ror #10
     c08:	7562755f 	strbvc	r7, [r2, #-1375]!	; 0xfffffaa1
     c0c:	655f0066 	ldrbvs	r0, [pc, #-102]	; bae <_Min_Stack_Size+0x7ae>
     c10:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
     c14:	79636e65 	stmdbvc	r3!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
     c18:	745f5f00 	ldrbvc	r5, [pc], #-3840	; c20 <_Min_Stack_Size+0x820>
     c1c:	65735f6d 	ldrbvs	r5, [r3, #-3949]!	; 0xfffff093
     c20:	5f5f0063 	svcpl	0x005f0063
     c24:	795f6d74 	ldmdbvc	pc, {r2, r4, r5, r6, r8, sl, fp, sp, lr}^	; <UNPREDICTABLE>
     c28:	00796164 	rsbseq	r6, r9, r4, ror #2
     c2c:	636e695f 	cmnvs	lr, #1556480	; 0x17c000
     c30:	72617500 	rsbvc	r7, r1, #0, 10
     c34:	75625f74 	strbvc	r5, [r2, #-3956]!	; 0xfffff08c
     c38:	72775f66 	rsbsvc	r5, r7, #408	; 0x198
     c3c:	00657469 	rsbeq	r7, r5, r9, ror #8
     c40:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
     c44:	6675625f 			; <UNDEFINED> instruction: 0x6675625f
     c48:	6165725f 	cmnvs	r5, pc, asr r2
     c4c:	6d5f0064 	ldclvs	0, cr0, [pc, #-400]	; ac4 <_Min_Stack_Size+0x6c4>
     c50:	74727362 	ldrbtvc	r7, [r2], #-866	; 0xfffffc9e
     c54:	7363776f 	cmnvc	r3, #29097984	; 0x1bc0000
     c58:	6174735f 	cmnvs	r4, pc, asr r3
     c5c:	55006574 	strpl	r6, [r0, #-1396]	; 0xfffffa8c
     c60:	54524153 	ldrbpl	r4, [r2], #-339	; 0xfffffead
     c64:	7079545f 	rsbsvc	r5, r9, pc, asr r4
     c68:	66654465 	strbtvs	r4, [r5], -r5, ror #8
     c6c:	765f5f00 	ldrbvc	r5, [pc], -r0, lsl #30
     c70:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
     c74:	35705f00 	ldrbcc	r5, [r0, #-3840]!	; 0xfffff100
     c78:	6d5f0073 	ldclvs	0, cr0, [pc, #-460]	; ab4 <_Min_Stack_Size+0x6b4>
     c7c:	6e656c62 	cdpvs	12, 6, cr6, cr5, cr2, {3}
     c80:	6174735f 	cmnvs	r4, pc, asr r3
     c84:	5f006574 	svcpl	0x00006574
     c88:	5f6d745f 	svcpl	0x006d745f
     c8c:	7961646d 	stmdbvc	r1!, {r0, r2, r3, r5, r6, sl, sp, lr}^
     c90:	69735f00 	ldmdbvs	r3!, {r8, r9, sl, fp, ip, lr}^
     c94:	75665f67 	strbvc	r5, [r6, #-3943]!	; 0xfffff099
     c98:	5f00636e 	svcpl	0x0000636e
     c9c:	7472626d 	ldrbtvc	r6, [r2], #-621	; 0xfffffd93
     ca0:	5f63776f 	svcpl	0x0063776f
     ca4:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
     ca8:	665f0065 	ldrbvs	r0, [pc], -r5, rrx
     cac:	6b636f6c 	blvs	18dca64 <_Min_Stack_Size+0x18dc664>
     cb0:	5f00745f 	svcpl	0x0000745f
     cb4:	6863775f 	stmdavs	r3!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}^
     cb8:	6f695f00 	svcvs	0x00695f00
     cbc:	5f007362 	svcpl	0x00007362
     cc0:	736f6c63 	cmnvc	pc, #25344	; 0x6300
     cc4:	5f5f0065 	svcpl	0x005f0065
     cc8:	64696473 	strbtvs	r6, [r9], #-1139	; 0xfffffb8d
     ccc:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
     cd0:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
     cd4:	006e6964 	rsbeq	r6, lr, r4, ror #18
     cd8:	6d61675f 	stclvs	7, cr6, [r1, #-380]!	; 0xfffffe84
     cdc:	735f616d 	cmpvc	pc, #1073741851	; 0x4000001b
     ce0:	676e6769 	strbvs	r6, [lr, -r9, ror #14]!
     ce4:	5f006d61 	svcpl	0x00006d61
     ce8:	65736162 	ldrbvs	r6, [r3, #-354]!	; 0xfffffe9e
     cec:	41535500 	cmpmi	r3, r0, lsl #10
     cf0:	5f315452 	svcpl	0x00315452
     cf4:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
     cf8:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     cfc:	5f007265 	svcpl	0x00007265
     d00:	65657266 	strbvs	r7, [r5, #-614]!	; 0xfffffd9a
     d04:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
     d08:	756d5f00 	strbvc	r5, [sp, #-3840]!	; 0xfffff100
     d0c:	5f00746c 	svcpl	0x0000746c
     d10:	6f4c555f 	svcvs	0x004c555f
     d14:	5f00676e 	svcpl	0x0000676e
     d18:	74726377 	ldrbtvc	r6, [r2], #-887	; 0xfffffc89
     d1c:	5f626d6f 	svcpl	0x00626d6f
     d20:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
     d24:	665f0065 	ldrbvs	r0, [pc], -r5, rrx
     d28:	00656c69 	rsbeq	r6, r5, r9, ror #24
     d2c:	6c635f5f 	stclvs	15, cr5, [r3], #-380	; 0xfffffe84
     d30:	756e6165 	strbvc	r6, [lr, #-357]!	; 0xfffffe9b
     d34:	6d5f0070 	ldclvs	0, cr0, [pc, #-448]	; b7c <_Min_Stack_Size+0x77c>
     d38:	61747362 	cmnvs	r4, r2, ror #6
     d3c:	745f6574 	ldrbvc	r6, [pc], #-1396	; d44 <_Min_Stack_Size+0x944>
     d40:	745f5f00 	ldrbvc	r5, [pc], #-3840	; d48 <_Min_Stack_Size+0x948>
     d44:	73695f6d 	cmnvc	r9, #436	; 0x1b4
     d48:	00747364 	rsbseq	r7, r4, r4, ror #6
     d4c:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
     d50:	65725f31 	ldrbvs	r5, [r2, #-3889]!	; 0xfffff0cf
     d54:	5f006461 	svcpl	0x00006461
     d58:	72736377 	rsbsvc	r6, r3, #-603979775	; 0xdc000001
     d5c:	626d6f74 	rsbvs	r6, sp, #116, 30	; 0x1d0
     d60:	74735f73 	ldrbtvc	r5, [r3], #-3955	; 0xfffff08d
     d64:	00657461 	rsbeq	r7, r5, r1, ror #8
     d68:	646e695f 	strbtvs	r6, [lr], #-2399	; 0xfffff6a1
     d6c:	52415500 	subpl	r5, r1, #0, 10
     d70:	675f3154 			; <UNDEFINED> instruction: 0x675f3154
     d74:	00737465 	rsbseq	r7, r3, r5, ror #8
     d78:	6d745f5f 	ldclvs	15, cr5, [r4, #-380]!	; 0xfffffe84
     d7c:	6e6f6d5f 	mcrvs	13, 3, r6, cr15, cr15, {2}
     d80:	6e6f6c00 	cdpvs	12, 6, cr6, cr15, cr0, {0}
     d84:	6f642067 	svcvs	0x00642067
     d88:	656c6275 	strbvs	r6, [ip, #-629]!	; 0xfffffd8b
     d8c:	735f5f00 	cmpvc	pc, #0, 30
     d90:	00667562 	rsbeq	r7, r6, r2, ror #10
     d94:	6d745f5f 	ldclvs	15, cr5, [r4, #-380]!	; 0xfffffe84
     d98:	6165795f 	cmnvs	r5, pc, asr r9
     d9c:	615f0072 	cmpvs	pc, r2, ror r0	; <UNPREDICTABLE>
     da0:	69786574 	ldmdbvs	r8!, {r2, r4, r5, r6, r8, sl, sp, lr}^
     da4:	425f0074 	subsmi	r0, pc, #116	; 0x74
     da8:	6e696769 	cdpvs	7, 6, cr6, cr9, cr9, {3}
     dac:	53620074 	cmnpl	r2, #116	; 0x74
     db0:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
     db4:	5f5f0067 	svcpl	0x005f0067
     db8:	5f006673 	svcpl	0x00006673
     dbc:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
     dc0:	61645f00 	cmnvs	r4, r0, lsl #30
     dc4:	5f006174 	svcpl	0x00006174
     dc8:	6863775f 	stmdavs	r3!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}^
     dcc:	675f0062 	ldrbvs	r0, [pc, -r2, rrx]
     dd0:	61626f6c 	cmnvs	r2, ip, ror #30
     dd4:	6d695f6c 	stclvs	15, cr5, [r9, #-432]!	; 0xfffffe50
     dd8:	65727570 	ldrbvs	r7, [r2, #-1392]!	; 0xfffffa90
     ddc:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
     de0:	6e6f5f00 	cdpvs	15, 6, cr5, cr15, cr0, {0}
     de4:	6978655f 	ldmdbvs	r8!, {r0, r1, r2, r3, r4, r6, r8, sl, sp, lr}^
     de8:	72615f74 	rsbvc	r5, r1, #116, 30	; 0x1d0
     dec:	5f007367 	svcpl	0x00007367
     df0:	7366666f 	cmnvc	r6, #116391936	; 0x6f00000
     df4:	55007465 	strpl	r7, [r0, #-1125]	; 0xfffffb9b
     df8:	535f4253 	cmppl	pc, #805306373	; 0x30000005
     dfc:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
     e00:	72655367 	rsbvc	r5, r5, #-1677721599	; 0x9c000001
     e04:	446c6169 	strbtmi	r6, [ip], #-361	; 0xfffffe97
     e08:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
     e0c:	6f747069 	svcvs	0x00747069
     e10:	6c5f0072 	mrrcvs	0, 7, r0, pc, cr2	; <UNPREDICTABLE>
     e14:	6c61636f 	stclvs	3, cr6, [r1], #-444	; 0xfffffe44
     e18:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
     e1c:	6675625f 			; <UNDEFINED> instruction: 0x6675625f
     e20:	6f6c5f00 	svcvs	0x006c5f00
     e24:	5f006b63 	svcpl	0x00006b63
     e28:	73756e75 	cmnvc	r5, #1872	; 0x750
     e2c:	5f006465 	svcpl	0x00006465
     e30:	6c747663 	ldclvs	6, cr7, [r4], #-396	; 0xfffffe74
     e34:	5f006e65 	svcpl	0x00006e65
     e38:	7778616d 	ldrbvc	r6, [r8, -sp, ror #2]!
     e3c:	5f007364 	svcpl	0x00007364
     e40:	6134366c 	teqvs	r4, ip, ror #12
     e44:	6675625f 			; <UNDEFINED> instruction: 0x6675625f
     e48:	6c625f00 	stclvs	15, cr5, [r2], #-0
     e4c:	7a69736b 	bvc	1a5dc00 <_Min_Stack_Size+0x1a5d800>
     e50:	5f5f0065 	svcpl	0x005f0065
     e54:	75006d74 	strvc	r6, [r0, #-3444]	; 0xfffff28c
     e58:	5f747261 	svcpl	0x00747261
     e5c:	5f667562 	svcpl	0x00667562
     e60:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
     e64:	42535500 	subsmi	r5, r3, #0, 10
     e68:	7665445f 			; <UNDEFINED> instruction: 0x7665445f
     e6c:	51656369 	cmnpl	r5, r9, ror #6
     e70:	696c6175 	stmdbvs	ip!, {r0, r2, r4, r5, r6, r8, sp, lr}^
     e74:	72656966 	rsbvc	r6, r5, #1671168	; 0x198000
     e78:	63736544 	cmnvs	r3, #68, 10	; 0x11000000
     e7c:	74706972 	ldrbtvc	r6, [r0], #-2418	; 0xfffff68e
     e80:	5500726f 	strpl	r7, [r0, #-623]	; 0xfffffd91
     e84:	535f4253 	cmppl	pc, #805306373	; 0x30000005
     e88:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
     e8c:	6e614c67 	cdpvs	12, 6, cr4, cr1, cr7, {3}
     e90:	73654467 	cmnvc	r5, #1728053248	; 0x67000000
     e94:	70697263 	rsbvc	r7, r9, r3, ror #4
     e98:	00726f74 	rsbseq	r6, r2, r4, ror pc
     e9c:	6f696e5f 	svcvs	0x00696e5f
     ea0:	5f007362 	svcpl	0x00007362
     ea4:	5f6f7364 	svcpl	0x006f7364
     ea8:	646e6168 	strbtvs	r6, [lr], #-360	; 0xfffffe98
     eac:	5f00656c 	svcpl	0x0000656c
     eb0:	62747663 	rsbsvs	r7, r4, #103809024	; 0x6300000
     eb4:	5f006675 	svcpl	0x00006675
     eb8:	64746567 	ldrbtvs	r6, [r4], #-1383	; 0xfffffa99
     ebc:	5f657461 	svcpl	0x00657461
     ec0:	00727265 	rsbseq	r7, r2, r5, ror #4
     ec4:	64726f77 	ldrbtvs	r6, [r2], #-3959	; 0xfffff089
     ec8:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
     ecc:	42535500 	subsmi	r5, r3, #0, 10
     ed0:	7665445f 			; <UNDEFINED> instruction: 0x7665445f
     ed4:	44656369 	strbtmi	r6, [r5], #-873	; 0xfffffc97
     ed8:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
     edc:	6f747069 	svcvs	0x00747069
     ee0:	615f0072 	cmpvs	pc, r2, ror r0	; <UNPREDICTABLE>
     ee4:	64006464 	strvs	r6, [r0], #-1124	; 0xfffffb9c
     ee8:	5f617461 	svcpl	0x00617461
     eec:	635f6e69 	cmpvs	pc, #1680	; 0x690
     ef0:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
     ef4:	006b6361 	rsbeq	r6, fp, r1, ror #6
     ef8:	73654462 	cmnvc	r5, #1644167168	; 0x62000000
     efc:	70697263 	rsbvc	r7, r9, r3, ror #4
     f00:	54726f74 	ldrbtpl	r6, [r2], #-3956	; 0xfffff08c
     f04:	00657079 	rsbeq	r7, r5, r9, ror r0
     f08:	5f425355 	svcpl	0x00425355
     f0c:	69727453 	ldmdbvs	r2!, {r0, r1, r4, r6, sl, ip, sp, lr}^
     f10:	614d676e 	cmpvs	sp, lr, ror #14
     f14:	6166756e 	cmnvs	r6, lr, ror #10
     f18:	72757463 	rsbsvc	r7, r5, #1660944384	; 0x63000000
     f1c:	44676e69 	strbtmi	r6, [r7], #-3689	; 0xfffff197
     f20:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
     f24:	6f747069 	svcvs	0x00747069
     f28:	675f0072 			; <UNDEFINED> instruction: 0x675f0072
     f2c:	0065756c 	rsbeq	r7, r5, ip, ror #10
     f30:	67735f5f 			; <UNDEFINED> instruction: 0x67735f5f
     f34:	0065756c 	rsbeq	r7, r5, ip, ror #10
     f38:	7274735f 	rsbsvc	r7, r4, #2080374785	; 0x7c000001
     f3c:	5f6b6f74 	svcpl	0x006b6f74
     f40:	7473616c 	ldrbtvc	r6, [r3], #-364	; 0xfffffe94
     f44:	626d5f00 	rsbvs	r5, sp, #0, 30
     f48:	63776f74 	cmnvs	r7, #116, 30	; 0x1d0
     f4c:	6174735f 	cmnvs	r4, pc, asr r3
     f50:	75006574 	strvc	r6, [r0, #-1396]	; 0xfffffa8c
     f54:	31747261 	cmncc	r4, r1, ror #4
     f58:	0078745f 	rsbseq	r7, r8, pc, asr r4
     f5c:	636f6c5f 	cmnvs	pc, #24320	; 0x5f00
     f60:	00656c61 	rsbeq	r6, r5, r1, ror #24
     f64:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
     f68:	6675625f 			; <UNDEFINED> instruction: 0x6675625f
     f6c:	00726566 	rsbseq	r6, r2, r6, ror #10
     f70:	616e665f 	cmnvs	lr, pc, asr r6
     f74:	00736772 	rsbseq	r6, r3, r2, ror r7
     f78:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
     f7c:	75705f31 	ldrbvc	r5, [r0, #-3889]!	; 0xfffff0cf
     f80:	5f007374 	svcpl	0x00007374
     f84:	6e656572 	mcrvs	5, 3, r6, cr5, cr2, {3}
     f88:	53550074 	cmppl	r5, #116	; 0x74
     f8c:	74535f42 	ldrbvc	r5, [r3], #-3906	; 0xfffff0be
     f90:	676e6972 			; <UNDEFINED> instruction: 0x676e6972
     f94:	646f7250 	strbtvs	r7, [pc], #-592	; f9c <_Min_Stack_Size+0xb9c>
     f98:	63736544 	cmnvs	r3, #68, 10	; 0x11000000
     f9c:	74706972 	ldrbtvc	r6, [r0], #-2418	; 0xfffff68e
     fa0:	5f00726f 	svcpl	0x0000726f
     fa4:	79746e66 	ldmdbvc	r4!, {r1, r2, r5, r6, r9, sl, fp, sp, lr}^
     fa8:	00736570 	rsbseq	r6, r3, r0, ror r5
     fac:	75626e5f 	strbvc	r6, [r2, #-3679]!	; 0xfffff1a1
     fb0:	755f0066 	ldrbvc	r0, [pc, #-102]	; f52 <_Min_Stack_Size+0xb52>
     fb4:	6573756e 	ldrbvs	r7, [r3, #-1390]!	; 0xfffffa92
     fb8:	61725f64 	cmnvs	r2, r4, ror #30
     fbc:	6200646e 	andvs	r6, r0, #1845493760	; 0x6e000000
     fc0:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
     fc4:	5f006874 	svcpl	0x00006874
     fc8:	67616c66 	strbvs	r6, [r1, -r6, ror #24]!
     fcc:	5f003273 	svcpl	0x00003273
     fd0:	635f7369 	cmpvs	pc, #-1543503871	; 0xa4000001
     fd4:	5f006178 	svcpl	0x00006178
     fd8:	64656573 	strbtvs	r6, [r5], #-1395	; 0xfffffa8d
     fdc:	61725f00 	cmnvs	r2, r0, lsl #30
     fe0:	6e5f646e 	cdpvs	4, 5, cr6, cr15, cr14, {3}
     fe4:	00747865 	rsbseq	r7, r4, r5, ror #16
     fe8:	6574615f 	ldrbvs	r6, [r4, #-351]!	; 0xfffffea1
     fec:	30746978 	rsbscc	r6, r4, r8, ror r9
     ff0:	6c5f5f00 	mrrcvs	15, 0, r5, pc, cr0	; <UNPREDICTABLE>
     ff4:	6c61636f 	stclvs	3, cr6, [r1], #-444	; 0xfffffe44
     ff8:	00745f65 	rsbseq	r5, r4, r5, ror #30
     ffc:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
    1000:	00727265 	rsbseq	r7, r2, r5, ror #4
    1004:	746e6977 	strbtvc	r6, [lr], #-2423	; 0xfffff689
    1008:	7300745f 	movwvc	r7, #1119	; 0x45f
    100c:	62706f74 	rsbsvs	r6, r0, #116, 30	; 0x1d0
    1010:	00737469 	rsbseq	r7, r3, r9, ror #8
    1014:	6e695f5f 	mcrvs	15, 3, r5, cr9, cr15, {2}
    1018:	615f7469 	cmpvs	pc, r9, ror #8
    101c:	79617272 	stmdbvc	r1!, {r1, r4, r5, r6, r9, ip, sp, lr}^
    1020:	6174735f 	cmnvs	r4, pc, asr r3
    1024:	73007472 	movwvc	r7, #1138	; 0x472
    1028:	5f657a69 	svcpl	0x00657a69
    102c:	5f5f0074 	svcpl	0x005f0074
    1030:	6362696c 	cmnvs	r2, #108, 18	; 0x1b0000
    1034:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
    1038:	72615f74 	rsbvc	r5, r1, #116, 30	; 0x1d0
    103c:	00796172 	rsbseq	r6, r9, r2, ror r1
    1040:	6975622f 	ldmdbvs	r5!, {r0, r1, r2, r3, r5, r9, sp, lr}^
    1044:	6e2f646c 	cdpvs	4, 2, cr6, cr15, cr12, {3}
    1048:	696c7765 	stmdbvs	ip!, {r0, r2, r5, r6, r8, r9, sl, ip, sp, lr}^
    104c:	476b2d62 	strbmi	r2, [fp, -r2, ror #26]!
    1050:	45777667 	ldrbmi	r7, [r7, #-1639]!	; 0xfffff999
    1054:	77656e2f 	strbvc	r6, [r5, -pc, lsr #28]!
    1058:	2d62696c 			; <UNDEFINED> instruction: 0x2d62696c
    105c:	2e332e33 	mrccs	14, 1, r2, cr3, cr3, {1}
    1060:	75622f30 	strbvc	r2, [r2, #-3888]!	; 0xfffff0d0
    1064:	5f646c69 	svcpl	0x00646c69
    1068:	6f6e616e 	svcvs	0x006e616e
    106c:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
    1070:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    1074:	61652d65 	cmnvs	r5, r5, ror #26
    1078:	742f6962 	strtvc	r6, [pc], #-2402	; 1080 <_Min_Stack_Size+0xc80>
    107c:	626d7568 	rsbvs	r7, sp, #104, 10	; 0x1a000000
    1080:	2d37762f 	ldccs	6, cr7, [r7, #-188]!	; 0xffffff44
    1084:	6f6e2f6d 	svcvs	0x006e2f6d
    1088:	6e2f7066 	cdpvs	0, 2, cr7, cr15, cr6, {3}
    108c:	696c7765 	stmdbvs	ip!, {r0, r2, r5, r6, r8, r9, sl, ip, sp, lr}^
    1090:	696c2f62 	stmdbvs	ip!, {r1, r5, r6, r8, r9, sl, fp, sp}^
    1094:	6d2f6362 	stcvs	3, cr6, [pc, #-392]!	; f14 <_Min_Stack_Size+0xb14>
    1098:	00637369 	rsbeq	r7, r3, r9, ror #6
    109c:	72705f5f 	rsbsvc	r5, r0, #380	; 0x17c
    10a0:	696e6965 	stmdbvs	lr!, {r0, r2, r5, r6, r8, fp, sp, lr}^
    10a4:	72615f74 	rsbvc	r5, r1, #116, 30	; 0x1d0
    10a8:	5f796172 	svcpl	0x00796172
    10ac:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
    10b0:	4e470074 	mcrmi	0, 2, r0, cr7, cr4, {3}
    10b4:	31432055 	qdaddcc	r2, r5, r3
    10b8:	2e382037 	mrccs	0, 1, r2, cr8, cr7, {1}
    10bc:	20312e33 	eorscs	r2, r1, r3, lsr lr
    10c0:	39313032 	ldmdbcc	r1!, {r1, r4, r5, ip, sp}
    10c4:	33303730 	teqcc	r0, #48, 14	; 0xc00000
    10c8:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
    10cc:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
    10d0:	5b202965 	blpl	80b66c <_Min_Stack_Size+0x80b26c>
    10d4:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    10d8:	72622d38 	rsbvc	r2, r2, #56, 26	; 0xe00
    10dc:	68636e61 	stmdavs	r3!, {r0, r5, r6, r9, sl, fp, sp, lr}^
    10e0:	76657220 	strbtvc	r7, [r5], -r0, lsr #4
    10e4:	6f697369 	svcvs	0x00697369
    10e8:	3732206e 	ldrcc	r2, [r2, -lr, rrx]!
    10ec:	37323033 			; <UNDEFINED> instruction: 0x37323033
    10f0:	6d2d205d 	stcvs	0, cr2, [sp, #-372]!	; 0xfffffe8c
    10f4:	616f6c66 	cmnvs	pc, r6, ror #24
    10f8:	62612d74 	rsbvs	r2, r1, #116, 26	; 0x1d00
    10fc:	6f733d69 	svcvs	0x00733d69
    1100:	2d207466 	cfstrscs	mvf7, [r0, #-408]!	; 0xfffffe68
    1104:	7568746d 	strbvc	r7, [r8, #-1133]!	; 0xfffffb93
    1108:	2d20626d 	sfmcs	f6, 4, [r0, #-436]!	; 0xfffffe4c
    110c:	6f6c666d 	svcvs	0x006c666d
    1110:	612d7461 			; <UNDEFINED> instruction: 0x612d7461
    1114:	733d6962 	teqvc	sp, #1605632	; 0x188000
    1118:	2074666f 	rsbscs	r6, r4, pc, ror #12
    111c:	72616d2d 	rsbvc	r6, r1, #2880	; 0xb40
    1120:	613d6863 	teqvs	sp, r3, ror #16
    1124:	37766d72 			; <UNDEFINED> instruction: 0x37766d72
    1128:	2d206d2d 	stccs	13, cr6, [r0, #-180]!	; 0xffffff4c
    112c:	4f2d2067 	svcmi	0x002d2067
    1130:	662d2032 			; <UNDEFINED> instruction: 0x662d2032
    1134:	622d6f6e 	eorvs	r6, sp, #440	; 0x1b8
    1138:	746c6975 	strbtvc	r6, [ip], #-2421	; 0xfffff68b
    113c:	5f006e69 	svcpl	0x00006e69
    1140:	6572705f 	ldrbvs	r7, [r2, #-95]!	; 0xffffffa1
    1144:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
    1148:	7272615f 	rsbsvc	r6, r2, #-1073741801	; 0xc0000017
    114c:	655f7961 	ldrbvs	r7, [pc, #-2401]	; 7f3 <_Min_Stack_Size+0x3f3>
    1150:	5f00646e 	svcpl	0x0000646e
    1154:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
    1158:	72615f74 	rsbvc	r5, r1, #116, 30	; 0x1d0
    115c:	5f796172 	svcpl	0x00796172
    1160:	00646e65 	rsbeq	r6, r4, r5, ror #28
    1164:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1168:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    116c:	2f2e2e2f 	svccs	0x002e2e2f
    1170:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1174:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1178:	2f2e2e2f 	svccs	0x002e2e2f
    117c:	6c77656e 	cfldr64vs	mvdx6, [r7], #-440	; 0xfffffe48
    1180:	6c2f6269 	sfmvs	f6, 4, [pc], #-420	; fe4 <_Min_Stack_Size+0xbe4>
    1184:	2f636269 	svccs	0x00636269
    1188:	6373696d 	cmnvs	r3, #1785856	; 0x1b4000
    118c:	696e692f 	stmdbvs	lr!, {r0, r1, r2, r3, r5, r8, fp, sp, lr}^
    1190:	00632e74 	rsbeq	r2, r3, r4, ror lr

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <_Min_Stack_Size+0x10d0924>
   4:	35312820 	ldrcc	r2, [r1, #-2080]!	; 0xfffff7e0
   8:	322d383a 	eorcc	r3, sp, #3801088	; 0x3a0000
   c:	2d393130 	ldfcss	f3, [r9, #-192]!	; 0xffffff40
  10:	312d3371 			; <UNDEFINED> instruction: 0x312d3371
  14:	2e382029 	cdpcs	0, 3, cr2, cr8, cr9, {1}
  18:	20312e33 	eorscs	r2, r1, r3, lsr lr
  1c:	39313032 	ldmdbcc	r1!, {r1, r4, r5, ip, sp}
  20:	33303730 	teqcc	r0, #48, 14	; 0xc00000
  24:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
  28:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
  2c:	5b202965 	blpl	80a5c8 <_Min_Stack_Size+0x80a1c8>
  30:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
  34:	72622d38 	rsbvc	r2, r2, #56, 26	; 0xe00
  38:	68636e61 	stmdavs	r3!, {r0, r5, r6, r9, sl, fp, sp, lr}^
  3c:	76657220 	strbtvc	r7, [r5], -r0, lsr #4
  40:	6f697369 	svcvs	0x00697369
  44:	3732206e 	ldrcc	r2, [r2, -lr, rrx]!
  48:	37323033 			; <UNDEFINED> instruction: 0x37323033
  4c:	Address 0x000000000000004c is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	08000150 	stmdaeq	r0, {r4, r6, r8}
  1c:	00000098 	muleq	r0, r8, r0
  20:	0000000c 	andeq	r0, r0, ip
  24:	00000000 	andeq	r0, r0, r0
  28:	080001e8 	stmdaeq	r0, {r3, r5, r6, r7, r8}
  2c:	00000124 	andeq	r0, r0, r4, lsr #2
  30:	0000000c 	andeq	r0, r0, ip
  34:	00000000 	andeq	r0, r0, r0
  38:	0800030c 	stmdaeq	r0, {r2, r3, r8, r9}
  3c:	00000048 	andeq	r0, r0, r8, asr #32
  40:	0000000c 	andeq	r0, r0, ip
  44:	00000000 	andeq	r0, r0, r0
  48:	08000354 	stmdaeq	r0, {r2, r4, r6, r8, r9}
  4c:	00000002 	andeq	r0, r0, r2
  50:	0000000c 	andeq	r0, r0, ip
  54:	00000000 	andeq	r0, r0, r0
  58:	08000356 	stmdaeq	r0, {r1, r2, r4, r6, r8, r9}
  5c:	00000002 	andeq	r0, r0, r2
  60:	0000000c 	andeq	r0, r0, ip
  64:	00000000 	andeq	r0, r0, r0
  68:	08000358 	stmdaeq	r0, {r3, r4, r6, r8, r9}
  6c:	0000000c 	andeq	r0, r0, ip
  70:	00000014 	andeq	r0, r0, r4, lsl r0
  74:	00000000 	andeq	r0, r0, r0
  78:	08000e80 	stmdaeq	r0, {r7, r9, sl, fp}
  7c:	00000084 	andeq	r0, r0, r4, lsl #1
  80:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
  84:	00018e02 	andeq	r8, r1, r2, lsl #28
  88:	0000000c 	andeq	r0, r0, ip
  8c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
  90:	7c020001 	stcvc	0, cr0, [r2], {1}
  94:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  98:	0000000c 	andeq	r0, r0, ip
  9c:	00000088 	andeq	r0, r0, r8, lsl #1
  a0:	08000364 	stmdaeq	r0, {r2, r5, r6, r8, r9}
  a4:	00000002 	andeq	r0, r0, r2
  a8:	0000000c 	andeq	r0, r0, ip
  ac:	00000088 	andeq	r0, r0, r8, lsl #1
  b0:	08000366 	stmdaeq	r0, {r1, r2, r5, r6, r8, r9}
  b4:	00000002 	andeq	r0, r0, r2
  b8:	0000000c 	andeq	r0, r0, ip
  bc:	00000088 	andeq	r0, r0, r8, lsl #1
  c0:	08000368 	stmdaeq	r0, {r3, r5, r6, r8, r9}
  c4:	00000002 	andeq	r0, r0, r2
  c8:	0000000c 	andeq	r0, r0, ip
  cc:	00000088 	andeq	r0, r0, r8, lsl #1
  d0:	0800036a 	stmdaeq	r0, {r1, r3, r5, r6, r8, r9}
  d4:	00000002 	andeq	r0, r0, r2
  d8:	0000000c 	andeq	r0, r0, ip
  dc:	00000088 	andeq	r0, r0, r8, lsl #1
  e0:	0800036c 	stmdaeq	r0, {r2, r3, r5, r6, r8, r9}
  e4:	00000004 	andeq	r0, r0, r4
  e8:	0000000c 	andeq	r0, r0, ip
  ec:	00000088 	andeq	r0, r0, r8, lsl #1
  f0:	08000370 	stmdaeq	r0, {r4, r5, r6, r8, r9}
  f4:	00000004 	andeq	r0, r0, r4
  f8:	0000000c 	andeq	r0, r0, ip
  fc:	00000088 	andeq	r0, r0, r8, lsl #1
 100:	08000374 	stmdaeq	r0, {r2, r4, r5, r6, r8, r9}
 104:	0000006c 	andeq	r0, r0, ip, rrx
 108:	0000001c 	andeq	r0, r0, ip, lsl r0
 10c:	00000088 	andeq	r0, r0, r8, lsl #1
 110:	080003e0 	stmdaeq	r0, {r5, r6, r7, r8, r9}
 114:	00000118 	andeq	r0, r0, r8, lsl r1
 118:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
 11c:	86048505 	strhi	r8, [r4], -r5, lsl #10
 120:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 124:	00000001 	andeq	r0, r0, r1
 128:	0000001c 	andeq	r0, r0, ip, lsl r0
 12c:	00000088 	andeq	r0, r0, r8, lsl #1
 130:	080004f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, sl}
 134:	00000148 	andeq	r0, r0, r8, asr #2
 138:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
 13c:	86048505 	strhi	r8, [r4], -r5, lsl #10
 140:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 144:	00000001 	andeq	r0, r0, r1
 148:	00000018 	andeq	r0, r0, r8, lsl r0
 14c:	00000088 	andeq	r0, r0, r8, lsl #1
 150:	08000640 	stmdaeq	r0, {r6, r9, sl}
 154:	00000128 	andeq	r0, r0, r8, lsr #2
 158:	83100e41 	tsthi	r0, #1040	; 0x410
 15c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
 160:	00018e02 	andeq	r8, r1, r2, lsl #28
 164:	0000001c 	andeq	r0, r0, ip, lsl r0
 168:	00000088 	andeq	r0, r0, r8, lsl #1
 16c:	08000768 	stmdaeq	r0, {r3, r5, r6, r8, r9, sl}
 170:	00000054 	andeq	r0, r0, r4, asr r0
 174:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
 178:	86048505 	strhi	r8, [r4], -r5, lsl #10
 17c:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 180:	00000001 	andeq	r0, r0, r1
 184:	0000001c 	andeq	r0, r0, ip, lsl r0
 188:	00000088 	andeq	r0, r0, r8, lsl #1
 18c:	080007bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, r9, sl}
 190:	0000005c 	andeq	r0, r0, ip, asr r0
 194:	83180e41 	tsthi	r8, #1040	; 0x410
 198:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
 19c:	87038604 	strhi	r8, [r3, -r4, lsl #12]
 1a0:	00018e02 	andeq	r8, r1, r2, lsl #28
 1a4:	00000018 	andeq	r0, r0, r8, lsl r0
 1a8:	00000088 	andeq	r0, r0, r8, lsl #1
 1ac:	08000818 	stmdaeq	r0, {r3, r4, fp}
 1b0:	0000005a 	andeq	r0, r0, sl, asr r0
 1b4:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 1b8:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
 1bc:	00000001 	andeq	r0, r0, r1
 1c0:	00000020 	andeq	r0, r0, r0, lsr #32
 1c4:	00000088 	andeq	r0, r0, r8, lsl #1
 1c8:	08000872 	stmdaeq	r0, {r1, r4, r5, r6, fp}
 1cc:	0000011a 	andeq	r0, r0, sl, lsl r1
 1d0:	84180e41 	ldrhi	r0, [r8], #-3649	; 0xfffff1bf
 1d4:	86038504 	strhi	r8, [r3], -r4, lsl #10
 1d8:	02018e02 	andeq	r8, r1, #2, 28
 1dc:	100e0a46 	andne	r0, lr, r6, asr #20
 1e0:	00000b41 	andeq	r0, r0, r1, asr #22
 1e4:	0000000c 	andeq	r0, r0, ip
 1e8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 1ec:	7c020001 	stcvc	0, cr0, [r2], {1}
 1f0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 1f4:	0000000c 	andeq	r0, r0, ip
 1f8:	000001e4 	andeq	r0, r0, r4, ror #3
 1fc:	0800098c 	stmdaeq	r0, {r2, r3, r7, r8, fp}
 200:	00000002 	andeq	r0, r0, r2
 204:	0000000c 	andeq	r0, r0, ip
 208:	000001e4 	andeq	r0, r0, r4, ror #3
 20c:	0800098e 	stmdaeq	r0, {r1, r2, r3, r7, r8, fp}
 210:	00000002 	andeq	r0, r0, r2
 214:	0000000c 	andeq	r0, r0, ip
 218:	000001e4 	andeq	r0, r0, r4, ror #3
 21c:	08000990 	stmdaeq	r0, {r4, r7, r8, fp}
 220:	00000002 	andeq	r0, r0, r2
 224:	0000000c 	andeq	r0, r0, ip
 228:	000001e4 	andeq	r0, r0, r4, ror #3
 22c:	08000992 	stmdaeq	r0, {r1, r4, r7, r8, fp}
 230:	0000000a 	andeq	r0, r0, sl
 234:	0000000c 	andeq	r0, r0, ip
 238:	000001e4 	andeq	r0, r0, r4, ror #3
 23c:	0800099c 	stmdaeq	r0, {r2, r3, r4, r7, r8, fp}
 240:	00000026 	andeq	r0, r0, r6, lsr #32
 244:	0000000c 	andeq	r0, r0, ip
 248:	000001e4 	andeq	r0, r0, r4, ror #3
 24c:	080009c2 	stmdaeq	r0, {r1, r6, r7, r8, fp}
 250:	00000022 	andeq	r0, r0, r2, lsr #32
 254:	0000001c 	andeq	r0, r0, ip, lsl r0
 258:	000001e4 	andeq	r0, r0, r4, ror #3
 25c:	080009e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, fp}
 260:	0000004c 	andeq	r0, r0, ip, asr #32
 264:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
 268:	49018e02 	stmdbmi	r1, {r1, r9, sl, fp, pc}
 26c:	0ec4ce0a 	cdpeq	14, 12, cr12, cr4, cr10, {0}
 270:	000b4200 	andeq	r4, fp, r0, lsl #4
 274:	0000001c 	andeq	r0, r0, ip, lsl r0
 278:	000001e4 	andeq	r0, r0, r4, ror #3
 27c:	08000a30 	stmdaeq	r0, {r4, r5, r9, fp}
 280:	0000002c 	andeq	r0, r0, ip, lsr #32
 284:	83180e41 	tsthi	r8, #1040	; 0x410
 288:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
 28c:	87038604 	strhi	r8, [r3, -r4, lsl #12]
 290:	00018e02 	andeq	r8, r1, r2, lsl #28
 294:	00000018 	andeq	r0, r0, r8, lsl r0
 298:	000001e4 	andeq	r0, r0, r4, ror #3
 29c:	08000a5c 	stmdaeq	r0, {r2, r3, r4, r6, r9, fp}
 2a0:	00000028 	andeq	r0, r0, r8, lsr #32
 2a4:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
 2a8:	86038504 	strhi	r8, [r3], -r4, lsl #10
 2ac:	00018e02 	andeq	r8, r1, r2, lsl #28
 2b0:	00000018 	andeq	r0, r0, r8, lsl r0
 2b4:	000001e4 	andeq	r0, r0, r4, ror #3
 2b8:	08000a84 	stmdaeq	r0, {r2, r7, r9, fp}
 2bc:	0000002c 	andeq	r0, r0, ip, lsr #32
 2c0:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
 2c4:	86038504 	strhi	r8, [r3], -r4, lsl #10
 2c8:	00018e02 	andeq	r8, r1, r2, lsl #28
 2cc:	0000001c 	andeq	r0, r0, ip, lsl r0
 2d0:	000001e4 	andeq	r0, r0, r4, ror #3
 2d4:	08000ab0 	stmdaeq	r0, {r4, r5, r7, r9, fp}
 2d8:	00000058 	andeq	r0, r0, r8, asr r0
 2dc:	83180e41 	tsthi	r8, #1040	; 0x410
 2e0:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
 2e4:	87038604 	strhi	r8, [r3, -r4, lsl #12]
 2e8:	00018e02 	andeq	r8, r1, r2, lsl #28
 2ec:	0000000c 	andeq	r0, r0, ip
 2f0:	000001e4 	andeq	r0, r0, r4, ror #3
 2f4:	08000b08 	stmdaeq	r0, {r3, r8, r9, fp}
 2f8:	0000007c 	andeq	r0, r0, ip, ror r0
 2fc:	0000000c 	andeq	r0, r0, ip
 300:	000001e4 	andeq	r0, r0, r4, ror #3
 304:	08000b84 	stmdaeq	r0, {r2, r7, r8, r9, fp}
 308:	00000024 	andeq	r0, r0, r4, lsr #32
 30c:	00000014 	andeq	r0, r0, r4, lsl r0
 310:	000001e4 	andeq	r0, r0, r4, ror #3
 314:	08000ba8 	stmdaeq	r0, {r3, r5, r7, r8, r9, fp}
 318:	000000c0 	andeq	r0, r0, r0, asr #1
 31c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
 320:	00018e02 	andeq	r8, r1, r2, lsl #28
 324:	00000014 	andeq	r0, r0, r4, lsl r0
 328:	000001e4 	andeq	r0, r0, r4, ror #3
 32c:	08000c68 	stmdaeq	r0, {r3, r5, r6, sl, fp}
 330:	00000032 	andeq	r0, r0, r2, lsr r0
 334:	84080e49 	strhi	r0, [r8], #-3657	; 0xfffff1b7
 338:	00018e02 	andeq	r8, r1, r2, lsl #28
 33c:	0000001c 	andeq	r0, r0, ip, lsl r0
 340:	000001e4 	andeq	r0, r0, r4, ror #3
 344:	08000c9a 	stmdaeq	r0, {r1, r3, r4, r7, sl, fp}
 348:	000000be 	strheq	r0, [r0], -lr
 34c:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
 350:	02018e02 	andeq	r8, r1, #2, 28
 354:	0ec4ce49 	cdpeq	14, 12, cr12, cr4, cr9, {2}
 358:	00000000 	andeq	r0, r0, r0
 35c:	0000001c 	andeq	r0, r0, ip, lsl r0
 360:	000001e4 	andeq	r0, r0, r4, ror #3
 364:	08000d58 	stmdaeq	r0, {r3, r4, r6, r8, sl, fp}
 368:	00000094 	muleq	r0, r4, r0
 36c:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 370:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
 374:	500e4201 	andpl	r4, lr, r1, lsl #4
 378:	000c0e7f 	andeq	r0, ip, pc, ror lr
 37c:	0000000c 	andeq	r0, r0, ip
 380:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 384:	7c020001 	stcvc	0, cr0, [r2], {1}
 388:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 38c:	00000018 	andeq	r0, r0, r8, lsl r0
 390:	0000037c 	andeq	r0, r0, ip, ror r3
 394:	08000dec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, sl, fp}
 398:	00000048 	andeq	r0, r0, r8, asr #32
 39c:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
 3a0:	86038504 	strhi	r8, [r3], -r4, lsl #10
 3a4:	00018e02 	andeq	r8, r1, r2, lsl #28
