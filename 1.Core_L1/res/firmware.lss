
res/firmware.elf:     file format elf32-littlearm


Disassembly of section .isr_vector:

08000000 <g_pfnVectors>:
 8000000:	20007fff 	strdcs	r7, [r0], -pc	; <UNPREDICTABLE>
 8000004:	08000999 	stmdaeq	r0, {r0, r3, r4, r7, r8, fp}
 8000008:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 800000c:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 8000010:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 8000014:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 8000018:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
	...
 800002c:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 8000030:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 8000034:	00000000 	andeq	r0, r0, r0
 8000038:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 800003c:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 8000040:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 8000044:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 8000048:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 800004c:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 8000050:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 8000054:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 8000058:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 800005c:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 8000060:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 8000064:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 8000068:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 800006c:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 8000070:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 8000074:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 8000078:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 800007c:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 8000080:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 8000084:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 8000088:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 800008c:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 8000090:	080004cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl}
 8000094:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 8000098:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 800009c:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 80000a0:	00000000 	andeq	r0, r0, r0
 80000a4:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 80000a8:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 80000ac:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 80000b0:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 80000b4:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 80000b8:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 80000bc:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 80000c0:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 80000c4:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 80000c8:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 80000cc:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 80000d0:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 80000d4:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 80000d8:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 80000dc:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 80000e0:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 80000e4:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 80000e8:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 80000ec:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 80000f0:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 80000f4:	00000000 	andeq	r0, r0, r0
 80000f8:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 80000fc:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
	...
 8000108:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 800010c:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 8000110:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 8000114:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 8000118:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
 800011c:	00000000 	andeq	r0, r0, r0
 8000120:	080009e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp}
	...
 8000138:	f108f85f 			; <UNDEFINED> instruction: 0xf108f85f

Disassembly of section .text:

0800013c <init32-0x14>:
 800013c:	08000ae8 	stmdaeq	r0, {r3, r5, r6, r7, r9, fp}
 8000140:	20000000 	andcs	r0, r0, r0
 8000144:	20000004 	andcs	r0, r0, r4
 8000148:	20000004 	andcs	r0, r0, r4
 800014c:	2000005c 	andcs	r0, r0, ip, asr r0

08000150 <init32>:
#define CLOCK_FAIL_LSI -4

#define RTC_LSE 1

void init32(uint8_t reinit){
  RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 8000150:	4b21      	ldr	r3, [pc, #132]	; (80001d8 <init32+0x88>)
  PWR->CR |= PWR_CR_DBP;
 8000152:	4922      	ldr	r1, [pc, #136]	; (80001dc <init32+0x8c>)
  RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 8000154:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8000156:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800015a:	625a      	str	r2, [r3, #36]	; 0x24
  PWR->CR |= PWR_CR_DBP;
 800015c:	680a      	ldr	r2, [r1, #0]
 800015e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8000162:	600a      	str	r2, [r1, #0]
  
  if(!reinit){
    //if(RCC->CSR & RCC_CSR_RTCEN)return;
  }
  
  RCC->CSR |= RCC_CSR_RTCRST;
 8000164:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000166:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 800016a:	635a      	str	r2, [r3, #52]	; 0x34
  RCC->CSR &=~RCC_CSR_RTCRST;
 800016c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800016e:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8000172:	635a      	str	r2, [r3, #52]	; 0x34
  
#if RTC_LSE
  RCC->CSR |= RCC_CSR_LSEON; while(!(RCC->CSR & RCC_CSR_LSERDY)){}
 8000174:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000176:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800017a:	635a      	str	r2, [r3, #52]	; 0x34
 800017c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800017e:	0591      	lsls	r1, r2, #22
 8000180:	d5fc      	bpl.n	800017c <init32+0x2c>
#else
  RCC->CSR |= RCC_CSR_LSION; while(!(RCC->CSR & RCC_CSR_LSIRDY)){}
#endif
  
  RCC->CSR &=~RCC_CSR_RTCSEL;
 8000182:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000184:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 8000188:	635a      	str	r2, [r3, #52]	; 0x34
#if RTC_LSE
  RCC->CSR |= RCC_CSR_RTCSEL_LSE; // NOCLOCK / LSI / LSE / HSE
 800018a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800018c:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8000190:	635a      	str	r2, [r3, #52]	; 0x34
#else
  RCC->CSR |= RCC_CSR_RTCSEL_LSI; // NOCLOCK / LSI / LSE / HSE
#endif
  RCC->CSR |= RCC_CSR_RTCEN;
 8000192:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000194:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8000198:	635a      	str	r2, [r3, #52]	; 0x34
  
  RTC->WPR = 0xCA;
 800019a:	22ca      	movs	r2, #202	; 0xca
 800019c:	4b10      	ldr	r3, [pc, #64]	; (80001e0 <init32+0x90>)
 800019e:	625a      	str	r2, [r3, #36]	; 0x24
  RTC->WPR = 0x53;
 80001a0:	2253      	movs	r2, #83	; 0x53
 80001a2:	625a      	str	r2, [r3, #36]	; 0x24
  RTC->ISR |= RTC_ISR_INIT;
 80001a4:	68da      	ldr	r2, [r3, #12]
 80001a6:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80001aa:	60da      	str	r2, [r3, #12]
  while(!(RTC->ISR & RTC_ISR_INITF)){}
 80001ac:	68da      	ldr	r2, [r3, #12]
 80001ae:	0652      	lsls	r2, r2, #25
 80001b0:	d5fc      	bpl.n	80001ac <init32+0x5c>
  //LSE
  RTC->PRER &=~(RTC_PRER_PREDIV_A | RTC_PRER_PREDIV_S);
 80001b2:	6919      	ldr	r1, [r3, #16]
 80001b4:	4a0b      	ldr	r2, [pc, #44]	; (80001e4 <init32+0x94>)
 80001b6:	400a      	ands	r2, r1
 80001b8:	611a      	str	r2, [r3, #16]
#if RTC_LSE
  RTC->PRER |= 255;
 80001ba:	691a      	ldr	r2, [r3, #16]
 80001bc:	f042 02ff 	orr.w	r2, r2, #255	; 0xff
 80001c0:	611a      	str	r2, [r3, #16]
  RTC->PRER |= (127 << 16);
 80001c2:	691a      	ldr	r2, [r3, #16]
 80001c4:	f442 02fe 	orr.w	r2, r2, #8323072	; 0x7f0000
 80001c8:	611a      	str	r2, [r3, #16]
  //RTC->TR &=~RTC_TR_SU;
  //RTC->DR = 0;
  //RTC->DR &=~RTC_DR_DU;
  
  
  RTC->ISR &=~RTC_ISR_INIT;
 80001ca:	68da      	ldr	r2, [r3, #12]
 80001cc:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80001d0:	60da      	str	r2, [r3, #12]
  RTC->WPR = 0xFF;
 80001d2:	22ff      	movs	r2, #255	; 0xff
 80001d4:	625a      	str	r2, [r3, #36]	; 0x24
}
 80001d6:	4770      	bx	lr
 80001d8:	40023800 	andmi	r3, r2, r0, lsl #16
 80001dc:	40007000 	andmi	r7, r0, r0
 80001e0:	40002800 	andmi	r2, r0, r0, lsl #16
 80001e4:	ff808000 			; <UNDEFINED> instruction: 0xff808000

080001e8 <clock_HS>:
int8_t clock_HS(int8_t quartz){
  uint16_t i;
  uint32_t tmp;
  
  //clock by MSI
  tmp = RCC->CFGR;
 80001e8:	4b45      	ldr	r3, [pc, #276]	; (8000300 <clock_HS+0x118>)
 80001ea:	689a      	ldr	r2, [r3, #8]
  tmp &=~RCC_CFGR_SW;
 80001ec:	f022 0203 	bic.w	r2, r2, #3
  tmp |= RCC_CFGR_SW_MSI; // MSI / HSI / HSE / PLL
  RCC->CFGR = tmp;
 80001f0:	609a      	str	r2, [r3, #8]
 80001f2:	f640 72ff 	movw	r2, #4095	; 0xfff
  for(i=0;i<0x0FFF;i++){
    if((RCC->CFGR & RCC_CFGR_SWS)==RCC_CFGR_SWS_MSI){i=0x1FFF; break;}
 80001f6:	6899      	ldr	r1, [r3, #8]
 80001f8:	f011 0f0c 	tst.w	r1, #12
 80001fc:	d047      	beq.n	800028e <clock_HS+0xa6>
 80001fe:	3a01      	subs	r2, #1
 8000200:	b292      	uxth	r2, r2
  for(i=0;i<0x0FFF;i++){
 8000202:	2a00      	cmp	r2, #0
 8000204:	d1f7      	bne.n	80001f6 <clock_HS+0xe>
  }
  if(i != 0x1FFF)return CLOCK_FAIL_MSI;
 8000206:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800020a:	4770      	bx	lr
 800020c:	2000      	movs	r0, #0
    }
    if(i != 0x1FFF)return CLOCK_FAIL_HSI;
  }
  
  // configure flash
  FLASH->ACR |= FLASH_ACR_ACC64;
 800020e:	4b3d      	ldr	r3, [pc, #244]	; (8000304 <clock_HS+0x11c>)
 8000210:	681a      	ldr	r2, [r3, #0]
 8000212:	f042 0204 	orr.w	r2, r2, #4
 8000216:	601a      	str	r2, [r3, #0]
  FLASH->ACR |= FLASH_ACR_PRFTEN;
 8000218:	681a      	ldr	r2, [r3, #0]
 800021a:	f042 0202 	orr.w	r2, r2, #2
 800021e:	601a      	str	r2, [r3, #0]
  FLASH->ACR |= FLASH_ACR_LATENCY;
 8000220:	681a      	ldr	r2, [r3, #0]
 8000222:	f042 0201 	orr.w	r2, r2, #1
 8000226:	601a      	str	r2, [r3, #0]

  
  tmp = RCC->CFGR;
 8000228:	4a35      	ldr	r2, [pc, #212]	; (8000300 <clock_HS+0x118>)
 800022a:	6893      	ldr	r3, [r2, #8]
  tmp &=~ (RCC_CFGR_PLLSRC | RCC_CFGR_PLLMUL | RCC_CFGR_PLLDIV);
 800022c:	f423 037d 	bic.w	r3, r3, #16580608	; 0xfd0000
  
  if(quartz){
 8000230:	b1a8      	cbz	r0, 800025e <clock_HS+0x76>
    tmp |= RCC_CFGR_PLLSRC;  //PLL src = HSE
    tmp |= RCC_CFGR_PLLMUL12;//PLLCLK = F_HSE * 12 = 96 MHz
    tmp |= RCC_CFGR_PLLDIV3; //PLLCLK = F_HSE * 12 / 3 = 32 MHz
 8000232:	f443 0311 	orr.w	r3, r3, #9502720	; 0x910000
  tmp |= RCC_CFGR_HPRE_DIV1;
  //AHB = PLLCLK/HPRE = 32 MHz
  tmp &=~RCC_CFGR_PPRE2;
  tmp |= RCC_CFGR_PPRE2_DIV1;
  //APB2 = HCLK/PPRE2 = 32 MHz
  tmp &=~RCC_CFGR_PPRE1;
 8000236:	4934      	ldr	r1, [pc, #208]	; (8000308 <clock_HS+0x120>)
 8000238:	4019      	ands	r1, r3
  tmp |= RCC_CFGR_PPRE1_DIV1;
  //APB1 = HCLK/PPRE1 = 32 MHz
  RCC->CFGR = tmp;
 800023a:	6091      	str	r1, [r2, #8]
  
  RCC->CR |= RCC_CR_PLLON;
 800023c:	6813      	ldr	r3, [r2, #0]
 800023e:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000242:	6013      	str	r3, [r2, #0]
 8000244:	f640 73ff 	movw	r3, #4095	; 0xfff
  for(i=0;i<0x0FFF;i++){
    if(RCC->CR & RCC_CR_PLLRDY){i=0x1FFF; break;}
 8000248:	4a2d      	ldr	r2, [pc, #180]	; (8000300 <clock_HS+0x118>)
 800024a:	6811      	ldr	r1, [r2, #0]
 800024c:	0189      	lsls	r1, r1, #6
 800024e:	d40d      	bmi.n	800026c <clock_HS+0x84>
 8000250:	3b01      	subs	r3, #1
 8000252:	b29b      	uxth	r3, r3
  for(i=0;i<0x0FFF;i++){
 8000254:	2b00      	cmp	r3, #0
 8000256:	d1f8      	bne.n	800024a <clock_HS+0x62>
  }
  if(i != 0x1FFF)return CLOCK_FAIL_PLL; //can not enable PLL
 8000258:	f06f 0002 	mvn.w	r0, #2
 800025c:	4770      	bx	lr
    tmp |= RCC_CFGR_PLLDIV3; //PLLCLK = F_HSI * 6 / 3 = 32 MHz
 800025e:	f443 0308 	orr.w	r3, r3, #8912896	; 0x880000
 8000262:	e7e8      	b.n	8000236 <clock_HS+0x4e>
  tmp |= RCC_CFGR_SW_PLL; // MSI / HSI / HSE / PLL
  RCC->CFGR = tmp;
  for(i=0;i<0x0FFF;i++){
    if((RCC->CFGR & RCC_CFGR_SWS)==RCC_CFGR_SWS_PLL){i=0x1FFF; break;}
  }
  if(i != 0x1FFF)return CLOCK_FAIL_PLL;
 8000264:	3000      	adds	r0, #0
 8000266:	bf18      	it	ne
 8000268:	2001      	movne	r0, #1
  
  if(quartz)return CLOCK_HSE;
    else return CLOCK_HSI;
}
 800026a:	4770      	bx	lr
  tmp = RCC->CFGR;
 800026c:	6893      	ldr	r3, [r2, #8]
    if((RCC->CFGR & RCC_CFGR_SWS)==RCC_CFGR_SWS_PLL){i=0x1FFF; break;}
 800026e:	4924      	ldr	r1, [pc, #144]	; (8000300 <clock_HS+0x118>)
  tmp |= RCC_CFGR_SW_PLL; // MSI / HSI / HSE / PLL
 8000270:	f043 0303 	orr.w	r3, r3, #3
  RCC->CFGR = tmp;
 8000274:	6093      	str	r3, [r2, #8]
 8000276:	f640 73ff 	movw	r3, #4095	; 0xfff
    if((RCC->CFGR & RCC_CFGR_SWS)==RCC_CFGR_SWS_PLL){i=0x1FFF; break;}
 800027a:	688a      	ldr	r2, [r1, #8]
 800027c:	f002 020c 	and.w	r2, r2, #12
 8000280:	2a0c      	cmp	r2, #12
 8000282:	d0ef      	beq.n	8000264 <clock_HS+0x7c>
 8000284:	3b01      	subs	r3, #1
 8000286:	b29b      	uxth	r3, r3
  for(i=0;i<0x0FFF;i++){
 8000288:	2b00      	cmp	r3, #0
 800028a:	d1f6      	bne.n	800027a <clock_HS+0x92>
 800028c:	e7e4      	b.n	8000258 <clock_HS+0x70>
  RCC->CR &=~ RCC_CR_HSEON;
 800028e:	681a      	ldr	r2, [r3, #0]
 8000290:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8000294:	601a      	str	r2, [r3, #0]
  RCC->CR &=~ RCC_CR_HSION;
 8000296:	681a      	ldr	r2, [r3, #0]
 8000298:	f022 0201 	bic.w	r2, r2, #1
 800029c:	601a      	str	r2, [r3, #0]
  RCC->CR &=~ RCC_CR_HSEBYP;
 800029e:	681a      	ldr	r2, [r3, #0]
 80002a0:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 80002a4:	601a      	str	r2, [r3, #0]
  RCC->CR &=~ RCC_CR_PLLON;
 80002a6:	681a      	ldr	r2, [r3, #0]
 80002a8:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 80002ac:	601a      	str	r2, [r3, #0]
  RCC->CR &=~ RCC_CR_RTCPRE;
 80002ae:	681a      	ldr	r2, [r3, #0]
 80002b0:	f022 42c0 	bic.w	r2, r2, #1610612736	; 0x60000000
 80002b4:	601a      	str	r2, [r3, #0]
  RCC->CR |= RCC_CR_RTCPRE_1; //0b00=2 MHz ; 0b01=4MHz ; 0b10=8MHz ; 0b11=16MHz
 80002b6:	681a      	ldr	r2, [r3, #0]
 80002b8:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 80002bc:	601a      	str	r2, [r3, #0]
  if(quartz){
 80002be:	b168      	cbz	r0, 80002dc <clock_HS+0xf4>
    RCC->CR |= RCC_CR_HSEON;
 80002c0:	681a      	ldr	r2, [r3, #0]
 80002c2:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80002c6:	601a      	str	r2, [r3, #0]
 80002c8:	f640 73ff 	movw	r3, #4095	; 0xfff
      if(RCC->CR & RCC_CR_HSERDY){i=0x1FFF; break;}
 80002cc:	4a0c      	ldr	r2, [pc, #48]	; (8000300 <clock_HS+0x118>)
 80002ce:	6811      	ldr	r1, [r2, #0]
 80002d0:	0389      	lsls	r1, r1, #14
 80002d2:	d49c      	bmi.n	800020e <clock_HS+0x26>
 80002d4:	3b01      	subs	r3, #1
 80002d6:	b29b      	uxth	r3, r3
    for(i=0;i<0x0FFF;i++){
 80002d8:	2b00      	cmp	r3, #0
 80002da:	d1f8      	bne.n	80002ce <clock_HS+0xe6>
    RCC->CR |= RCC_CR_HSION;
 80002dc:	4a08      	ldr	r2, [pc, #32]	; (8000300 <clock_HS+0x118>)
 80002de:	6813      	ldr	r3, [r2, #0]
 80002e0:	f043 0301 	orr.w	r3, r3, #1
 80002e4:	6013      	str	r3, [r2, #0]
 80002e6:	f640 73ff 	movw	r3, #4095	; 0xfff
      if(RCC->CR & RCC_CR_HSIRDY){i=0x1FFF; break;}
 80002ea:	6811      	ldr	r1, [r2, #0]
 80002ec:	0788      	lsls	r0, r1, #30
 80002ee:	d48d      	bmi.n	800020c <clock_HS+0x24>
 80002f0:	3b01      	subs	r3, #1
 80002f2:	b29b      	uxth	r3, r3
    for(i=0;i<0x0FFF;i++){
 80002f4:	2b00      	cmp	r3, #0
 80002f6:	d1f8      	bne.n	80002ea <clock_HS+0x102>
    if(i != 0x1FFF)return CLOCK_FAIL_HSI;
 80002f8:	f06f 0001 	mvn.w	r0, #1
 80002fc:	4770      	bx	lr
 80002fe:	bf00      	nop
 8000300:	40023800 	andmi	r3, r2, r0, lsl #16
 8000304:	40023c00 	andmi	r3, r2, r0, lsl #24
 8000308:	ff9bc00f 			; <UNDEFINED> instruction: 0xff9bc00f

0800030c <clock_MS>:
void clock_MS(){
  uint16_t i;
  uint32_t tmp;
  
  //clock by MSI
  tmp = RCC->CFGR;
 800030c:	4b10      	ldr	r3, [pc, #64]	; (8000350 <clock_MS+0x44>)
 800030e:	689a      	ldr	r2, [r3, #8]
  tmp &=~RCC_CFGR_SW;
 8000310:	f022 0203 	bic.w	r2, r2, #3
  tmp |= RCC_CFGR_SW_MSI; // MSI / HSI / HSE / PLL
  RCC->CFGR = tmp;
 8000314:	609a      	str	r2, [r3, #8]
 8000316:	f640 72ff 	movw	r2, #4095	; 0xfff
  for(i=0;i<0x0FFF;i++){
    if((RCC->CFGR & RCC_CFGR_SWS)==RCC_CFGR_SWS_MSI){i=0x1FFF; break;}
 800031a:	6899      	ldr	r1, [r3, #8]
 800031c:	f011 0f0c 	tst.w	r1, #12
 8000320:	d004      	beq.n	800032c <clock_MS+0x20>
 8000322:	3a01      	subs	r2, #1
 8000324:	b292      	uxth	r2, r2
  for(i=0;i<0x0FFF;i++){
 8000326:	2a00      	cmp	r2, #0
 8000328:	d1f7      	bne.n	800031a <clock_MS+0xe>
 800032a:	4770      	bx	lr
  }
  if(i != 0x1FFF)return;;
  
  //disable HSE, PLL
  RCC->CR &=~ RCC_CR_HSEON;
 800032c:	681a      	ldr	r2, [r3, #0]
 800032e:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8000332:	601a      	str	r2, [r3, #0]
  RCC->CR &=~ RCC_CR_HSION;
 8000334:	681a      	ldr	r2, [r3, #0]
 8000336:	f022 0201 	bic.w	r2, r2, #1
 800033a:	601a      	str	r2, [r3, #0]
  RCC->CR &=~ RCC_CR_HSEBYP;
 800033c:	681a      	ldr	r2, [r3, #0]
 800033e:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8000342:	601a      	str	r2, [r3, #0]
  RCC->CR &=~ RCC_CR_PLLON;
 8000344:	681a      	ldr	r2, [r3, #0]
 8000346:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 800034a:	601a      	str	r2, [r3, #0]
}
 800034c:	4770      	bx	lr
 800034e:	bf00      	nop
 8000350:	40023800 	andmi	r3, r2, r0, lsl #16

08000354 <_init>:
 8000354:	4770      	bx	lr

08000356 <SystemInit>:
#include "hardware.h"
#include "usb_lib.h"
#include "clock.h"

void __attribute__((weak)) _init(void){}
void __attribute__((weak)) SystemInit(void){}
 8000356:	4770      	bx	lr

08000358 <sleep>:

void sleep(uint32_t time){
  while(time--)asm volatile("nop");
 8000358:	f110 30ff 	adds.w	r0, r0, #4294967295	; 0xffffffff
 800035c:	d200      	bcs.n	8000360 <sleep+0x8>
}
 800035e:	4770      	bx	lr
  while(time--)asm volatile("nop");
 8000360:	bf00      	nop
 8000362:	e7f9      	b.n	8000358 <sleep>

08000364 <usb_class_init>:

#define STM32ENDPOINTS          8
#define usb_epdata   ((volatile usb_epdata_t*)(USB_PMAADDR))
#define LASTADDR_DEFAULT                (STM32ENDPOINTS * 8)

__attribute__((weak))void usb_class_init(){}
 8000364:	4770      	bx	lr
 8000366:	4770      	bx	lr

08000368 <usb_class_poll>:
 8000368:	4770      	bx	lr
__attribute__((weak))void usb_class_disconnect(){}
__attribute__((weak))void usb_class_poll(){}
__attribute__((weak))char usb_class_ep0_in(config_pack_t *req, void **data, uint16_t *size){return 0;}
 800036a:	2000      	movs	r0, #0
 800036c:	4770      	bx	lr
__attribute__((weak))char usb_class_ep0_out(config_pack_t *req, uint16_t offset, uint16_t rx_size){return 0;}
 800036e:	2000      	movs	r0, #0
 8000370:	4770      	bx	lr

08000372 <USB_setup>:
epfunc_t epfunc_out[STM32ENDPOINTS];

static config_pack_t setup_packet;

void USB_setup(){
  RCC->APB1ENR |= RCC_APB1ENR_USBEN;
 8000372:	4b16      	ldr	r3, [pc, #88]	; (80003cc <USB_setup+0x5a>)
 8000374:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8000376:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 800037a:	625a      	str	r2, [r3, #36]	; 0x24
  RCC->APB2ENR |= RCC_APB2ENR_SYSCFGEN;
 800037c:	6a1a      	ldr	r2, [r3, #32]
 800037e:	f042 0201 	orr.w	r2, r2, #1
 8000382:	621a      	str	r2, [r3, #32]
  
  SYSCFG->PMC &=~ SYSCFG_PMC_USB_PU;
 8000384:	4a12      	ldr	r2, [pc, #72]	; (80003d0 <USB_setup+0x5e>)
 8000386:	6853      	ldr	r3, [r2, #4]
 8000388:	f023 0301 	bic.w	r3, r3, #1
 800038c:	6053      	str	r3, [r2, #4]
  USB->CNTR   = USB_CNTR_FRES; // Force USB Reset
 800038e:	2201      	movs	r2, #1
 8000390:	4b10      	ldr	r3, [pc, #64]	; (80003d4 <USB_setup+0x62>)
 8000392:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
 8000396:	4a10      	ldr	r2, [pc, #64]	; (80003d8 <USB_setup+0x66>)
  for(uint32_t ctr = 0; ctr < 100000; ++ctr) asm volatile("nop"); // wait >1ms
 8000398:	bf00      	nop
 800039a:	3a01      	subs	r2, #1
 800039c:	d1fc      	bne.n	8000398 <USB_setup+0x26>
  USB->CNTR   = 0;
 800039e:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
  USB->BTABLE = 0;
 80003a2:	f8a3 2050 	strh.w	r2, [r3, #80]	; 0x50
  USB->DADDR  = 0;
 80003a6:	f8a3 204c 	strh.w	r2, [r3, #76]	; 0x4c
  USB->ISTR   = 0;
 80003aa:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
  USB->CNTR   = USB_CNTR_RESETM | USB_CNTR_WKUPM;
 80003ae:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
 80003b2:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
 * Enable a device specific interupt in the NVIC interrupt controller.
 * The interrupt number cannot be a negative value.
 */
static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
 80003b6:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
 80003ba:	4b08      	ldr	r3, [pc, #32]	; (80003dc <USB_setup+0x6a>)
 80003bc:	601a      	str	r2, [r3, #0]
  NVIC_EnableIRQ(USB_LP_IRQn);
  SYSCFG->PMC |= SYSCFG_PMC_USB_PU;
 80003be:	4a04      	ldr	r2, [pc, #16]	; (80003d0 <USB_setup+0x5e>)
 80003c0:	6853      	ldr	r3, [r2, #4]
 80003c2:	f043 0301 	orr.w	r3, r3, #1
 80003c6:	6053      	str	r3, [r2, #4]
}
 80003c8:	4770      	bx	lr
 80003ca:	bf00      	nop
 80003cc:	40023800 	andmi	r3, r2, r0, lsl #16
 80003d0:	40010000 	andmi	r0, r1, r0
 80003d4:	40005c00 	andmi	r5, r0, r0, lsl #24
 80003d8:	000186a0 	andeq	r8, r1, r0, lsr #13
 80003dc:	e000e100 	and	lr, r0, r0, lsl #2

080003e0 <usb_ep_init>:
    if( bytesread >= setup_packet.wLength )usb_ep_write(0, NULL, 0);
  }
}

static uint16_t lastaddr = LASTADDR_DEFAULT;
void usb_ep_init(uint8_t epnum, uint8_t ep_type, uint16_t size, epfunc_t func){
 80003e0:	b5f0      	push	{r4, r5, r6, r7, lr}
  uint8_t dir_in = (epnum & 0x80);
  epnum &= 0x0F;
 80003e2:	f000 060f 	and.w	r6, r0, #15
  
  if(dir_in){
 80003e6:	00b5      	lsls	r5, r6, #2
 80003e8:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 80003ec:	f505 45b8 	add.w	r5, r5, #23552	; 0x5c00
    ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 80003f0:	882c      	ldrh	r4, [r5, #0]
 80003f2:	b240      	sxtb	r0, r0
  if(dir_in){
 80003f4:	2800      	cmp	r0, #0
    ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 80003f6:	bfb5      	itete	lt
 80003f8:	f024 04c0 	biclt.w	r4, r4, #192	; 0xc0
  }else{
    ENDP_STAT_RX(epnum, USB_EP_RX_DIS);
 80003fc:	f024 04f0 	bicge.w	r4, r4, #240	; 0xf0
    ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 8000400:	0524      	lsllt	r4, r4, #20
    ENDP_STAT_RX(epnum, USB_EP_RX_DIS);
 8000402:	04a4      	lslge	r4, r4, #18
    ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 8000404:	bfb4      	ite	lt
 8000406:	0d24      	lsrlt	r4, r4, #20
    ENDP_STAT_RX(epnum, USB_EP_RX_DIS);
 8000408:	0ca4      	lsrge	r4, r4, #18
 800040a:	f444 4400 	orr.w	r4, r4, #32768	; 0x8000
 800040e:	f044 0480 	orr.w	r4, r4, #128	; 0x80
 8000412:	802c      	strh	r4, [r5, #0]
  }
  
  uint16_t buf = USB_EPx(epnum);
 8000414:	882c      	ldrh	r4, [r5, #0]
  buf = (buf & ~(USB_EP_DTOG_RX | USB_EP_DTOG_TX | USB_EPTX_STAT | USB_EPRX_STAT)) | USB_EP_CTR_RX | USB_EP_CTR_TX;
  buf = (buf & ~USB_EPADDR_FIELD) | epnum;
  //buf = (buf & ~USB_EP_T_FIELD) | ep_type;
  buf &=~ USB_EP_T_FIELD;
  switch(ep_type){
 8000416:	2902      	cmp	r1, #2
 8000418:	f404 6410 	and.w	r4, r4, #2304	; 0x900
 800041c:	ea44 0406 	orr.w	r4, r4, r6
 8000420:	d005      	beq.n	800042e <usb_ep_init+0x4e>
 8000422:	2903      	cmp	r1, #3
 8000424:	d023      	beq.n	800046e <usb_ep_init+0x8e>
 8000426:	bb29      	cbnz	r1, 8000474 <usb_ep_init+0x94>
    case USB_ENDP_CTRL: buf |= USB_EP_CONTROL; break;
 8000428:	f444 4102 	orr.w	r1, r4, #33280	; 0x8200
 800042c:	e001      	b.n	8000432 <usb_ep_init+0x52>
  buf &=~ USB_EP_T_FIELD;
 800042e:	f444 4100 	orr.w	r1, r4, #32768	; 0x8000
    case USB_ENDP_BULK: buf |= USB_EP_BULK; break;
    case USB_ENDP_INTR: buf |= USB_EP_INTERRUPT; break;
    default: buf |= USB_EP_ISOCHRONOUS; //в дескрипторах изохронные точки могут иметь расширенные настройки
 8000432:	f041 0180 	orr.w	r1, r1, #128	; 0x80
  }
  USB_EPx(epnum) = buf;
 8000436:	4f22      	ldr	r7, [pc, #136]	; (80004c0 <usb_ep_init+0xe0>)
 8000438:	8029      	strh	r1, [r5, #0]
  
  if( dir_in ){
 800043a:	0131      	lsls	r1, r6, #4
 800043c:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8000440:	2800      	cmp	r0, #0
 8000442:	883c      	ldrh	r4, [r7, #0]
 8000444:	f501 41c0 	add.w	r1, r1, #24576	; 0x6000
 8000448:	4638      	mov	r0, r7
 800044a:	da16      	bge.n	800047a <usb_ep_init+0x9a>
    usb_epdata[epnum].usb_tx_addr = lastaddr;
 800044c:	600c      	str	r4, [r1, #0]
    epfunc_in[epnum] = func;
 800044e:	491d      	ldr	r1, [pc, #116]	; (80004c4 <usb_ep_init+0xe4>)
 8000450:	f841 3026 	str.w	r3, [r1, r6, lsl #2]
    ENDP_STAT_TX(epnum, USB_EP_TX_NAK);
 8000454:	882b      	ldrh	r3, [r5, #0]
 8000456:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 800045a:	051b      	lsls	r3, r3, #20
 800045c:	0d1b      	lsrs	r3, r3, #20
 800045e:	f483 4300 	eor.w	r3, r3, #32768	; 0x8000
 8000462:	f083 03a0 	eor.w	r3, r3, #160	; 0xa0
      usb_epdata[epnum].rx_num_blocks = size / 32 - 1;
    }
    epfunc_out[epnum] = func;
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
  }
  lastaddr += size;
 8000466:	4422      	add	r2, r4
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
 8000468:	802b      	strh	r3, [r5, #0]
  lastaddr += size;
 800046a:	8002      	strh	r2, [r0, #0]
}
 800046c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    case USB_ENDP_INTR: buf |= USB_EP_INTERRUPT; break;
 800046e:	f444 4106 	orr.w	r1, r4, #34304	; 0x8600
 8000472:	e7de      	b.n	8000432 <usb_ep_init+0x52>
    default: buf |= USB_EP_ISOCHRONOUS; //в дескрипторах изохронные точки могут иметь расширенные настройки
 8000474:	f444 4104 	orr.w	r1, r4, #33792	; 0x8400
 8000478:	e7db      	b.n	8000432 <usb_ep_init+0x52>
    usb_epdata[epnum].usb_rx_addr = lastaddr;
 800047a:	608c      	str	r4, [r1, #8]
      usb_epdata[epnum].rx_blocksize = 0;
 800047c:	898f      	ldrh	r7, [r1, #12]
    if(size < 64){
 800047e:	2a3f      	cmp	r2, #63	; 0x3f
      usb_epdata[epnum].rx_blocksize = 1;
 8000480:	bf8b      	itete	hi
 8000482:	f447 4700 	orrhi.w	r7, r7, #32768	; 0x8000
      usb_epdata[epnum].rx_blocksize = 0;
 8000486:	f36f 37cf 	bfcls	r7, #15, #1
      usb_epdata[epnum].rx_blocksize = 1;
 800048a:	818f      	strhhi	r7, [r1, #12]
      usb_epdata[epnum].rx_blocksize = 0;
 800048c:	818f      	strhls	r7, [r1, #12]
      usb_epdata[epnum].rx_num_blocks = size / 32 - 1;
 800048e:	f8b1 c00c 	ldrh.w	ip, [r1, #12]
 8000492:	bf8a      	itet	hi
 8000494:	0957      	lsrhi	r7, r2, #5
      usb_epdata[epnum].rx_num_blocks = size / 2;
 8000496:	f3c2 0744 	ubfxls	r7, r2, #1, #5
      usb_epdata[epnum].rx_num_blocks = size / 32 - 1;
 800049a:	f107 37ff 	addhi.w	r7, r7, #4294967295	; 0xffffffff
 800049e:	f367 2c8e 	bfi	ip, r7, #10, #5
 80004a2:	f8a1 c00c 	strh.w	ip, [r1, #12]
    epfunc_out[epnum] = func;
 80004a6:	4908      	ldr	r1, [pc, #32]	; (80004c8 <usb_ep_init+0xe8>)
 80004a8:	f841 3026 	str.w	r3, [r1, r6, lsl #2]
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
 80004ac:	882b      	ldrh	r3, [r5, #0]
 80004ae:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80004b2:	049b      	lsls	r3, r3, #18
 80004b4:	0c9b      	lsrs	r3, r3, #18
 80004b6:	f483 4330 	eor.w	r3, r3, #45056	; 0xb000
 80004ba:	f083 0380 	eor.w	r3, r3, #128	; 0x80
 80004be:	e7d2      	b.n	8000466 <usb_ep_init+0x86>
 80004c0:	20000000 	andcs	r0, r0, r0
 80004c4:	20000018 	andcs	r0, r0, r8, lsl r0
 80004c8:	20000038 	andcs	r0, r0, r8, lsr r0

080004cc <USB_LP_IRQHandler>:

// standard IRQ handler
void USB_LP_IRQHandler(){
 80004cc:	b538      	push	{r3, r4, r5, lr}
  if(USB->ISTR & USB_ISTR_RESET){
 80004ce:	4c42      	ldr	r4, [pc, #264]	; (80005d8 <USB_LP_IRQHandler+0x10c>)
 80004d0:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 80004d4:	055d      	lsls	r5, r3, #21
 80004d6:	d52c      	bpl.n	8000532 <USB_LP_IRQHandler+0x66>
    usb_class_disconnect();
 80004d8:	f000 fa30 	bl	800093c <usb_class_disconnect>
    USB->CNTR = USB_CNTR_RESETM | USB_CNTR_CTRM | USB_CNTR_SUSPM | USB_CNTR_WKUPM;
 80004dc:	f44f 431c 	mov.w	r3, #39936	; 0x9c00
    lastaddr = LASTADDR_DEFAULT;
 80004e0:	2240      	movs	r2, #64	; 0x40
    USB->CNTR = USB_CNTR_RESETM | USB_CNTR_CTRM | USB_CNTR_SUSPM | USB_CNTR_WKUPM;
 80004e2:	f8a4 3040 	strh.w	r3, [r4, #64]	; 0x40
    lastaddr = LASTADDR_DEFAULT;
 80004e6:	4b3d      	ldr	r3, [pc, #244]	; (80005dc <USB_LP_IRQHandler+0x110>)
 80004e8:	493d      	ldr	r1, [pc, #244]	; (80005e0 <USB_LP_IRQHandler+0x114>)
 80004ea:	801a      	strh	r2, [r3, #0]
    USB->DADDR = USB_DADDR_EF;
 80004ec:	2380      	movs	r3, #128	; 0x80
    for(uint8_t i=0; i<STM32ENDPOINTS; i++){
      epfunc_in[i] = epfunc_out[i] = NULL;
 80004ee:	2200      	movs	r2, #0
    USB->DADDR = USB_DADDR_EF;
 80004f0:	f8a4 304c 	strh.w	r3, [r4, #76]	; 0x4c
 80004f4:	2408      	movs	r4, #8
 80004f6:	4b3b      	ldr	r3, [pc, #236]	; (80005e4 <USB_LP_IRQHandler+0x118>)
      epfunc_in[i] = epfunc_out[i] = NULL;
 80004f8:	3c01      	subs	r4, #1
    for(uint8_t i=0; i<STM32ENDPOINTS; i++){
 80004fa:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
      epfunc_in[i] = epfunc_out[i] = NULL;
 80004fe:	f841 2b04 	str.w	r2, [r1], #4
 8000502:	f843 2b04 	str.w	r2, [r3], #4
    for(uint8_t i=0; i<STM32ENDPOINTS; i++){
 8000506:	d1f7      	bne.n	80004f8 <USB_LP_IRQHandler+0x2c>
    }
    // state is default - wait for enumeration
    USB->ISTR = (uint16_t)~USB_ISTR_RESET;
 8000508:	f64f 32ff 	movw	r2, #64511	; 0xfbff
 800050c:	4b32      	ldr	r3, [pc, #200]	; (80005d8 <USB_LP_IRQHandler+0x10c>)
    usb_ep_init(0x00, USB_ENDP_CTRL, USB_EP0_BUFSZ, ep0_out);
 800050e:	4621      	mov	r1, r4
    USB->ISTR = (uint16_t)~USB_ISTR_RESET;
 8000510:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
    usb_ep_init(0x00, USB_ENDP_CTRL, USB_EP0_BUFSZ, ep0_out);
 8000514:	4620      	mov	r0, r4
 8000516:	4b34      	ldr	r3, [pc, #208]	; (80005e8 <USB_LP_IRQHandler+0x11c>)
 8000518:	2240      	movs	r2, #64	; 0x40
 800051a:	f7ff ff61 	bl	80003e0 <usb_ep_init>
    usb_ep_init(0x80, USB_ENDP_CTRL, USB_EP0_BUFSZ, ep0_in);
 800051e:	4b33      	ldr	r3, [pc, #204]	; (80005ec <USB_LP_IRQHandler+0x120>)
 8000520:	2240      	movs	r2, #64	; 0x40
 8000522:	4621      	mov	r1, r4
 8000524:	2080      	movs	r0, #128	; 0x80
 8000526:	f7ff ff5b 	bl	80003e0 <usb_ep_init>
    ep0_buf = NULL;
 800052a:	4b31      	ldr	r3, [pc, #196]	; (80005f0 <USB_LP_IRQHandler+0x124>)
 800052c:	601c      	str	r4, [r3, #0]
    usb_class_init();
 800052e:	f7ff ff19 	bl	8000364 <usb_class_init>
  }
  
  if(USB->ISTR & USB_ISTR_CTR){
 8000532:	4b29      	ldr	r3, [pc, #164]	; (80005d8 <USB_LP_IRQHandler+0x10c>)
 8000534:	f8b3 2044 	ldrh.w	r2, [r3, #68]	; 0x44
 8000538:	0414      	lsls	r4, r2, #16
 800053a:	d529      	bpl.n	8000590 <USB_LP_IRQHandler+0xc4>
    uint8_t epnum = USB->ISTR & USB_ISTR_EP_ID;
 800053c:	f8b3 5044 	ldrh.w	r5, [r3, #68]	; 0x44
 8000540:	f005 050f 	and.w	r5, r5, #15
    if(USB_EPx(epnum) & USB_EP_CTR_RX){ //OUT
 8000544:	00ac      	lsls	r4, r5, #2
 8000546:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
 800054a:	f504 44b8 	add.w	r4, r4, #23552	; 0x5c00
 800054e:	8823      	ldrh	r3, [r4, #0]
 8000550:	0418      	lsls	r0, r3, #16
 8000552:	d50c      	bpl.n	800056e <USB_LP_IRQHandler+0xa2>
      epfunc_out[epnum](epnum);
 8000554:	4b22      	ldr	r3, [pc, #136]	; (80005e0 <USB_LP_IRQHandler+0x114>)
 8000556:	4628      	mov	r0, r5
 8000558:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 800055c:	4798      	blx	r3
      ENDP_CTR_RX_CLR(epnum);
 800055e:	8823      	ldrh	r3, [r4, #0]
 8000560:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8000564:	051b      	lsls	r3, r3, #20
 8000566:	0d1b      	lsrs	r3, r3, #20
 8000568:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800056c:	8023      	strh	r3, [r4, #0]
    }
    if(USB_EPx(epnum) & USB_EP_CTR_TX){//IN
 800056e:	8823      	ldrh	r3, [r4, #0]
 8000570:	0619      	lsls	r1, r3, #24
 8000572:	d50d      	bpl.n	8000590 <USB_LP_IRQHandler+0xc4>
      epfunc_in[epnum](epnum | 0x80);
 8000574:	4b1b      	ldr	r3, [pc, #108]	; (80005e4 <USB_LP_IRQHandler+0x118>)
 8000576:	f045 0080 	orr.w	r0, r5, #128	; 0x80
 800057a:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 800057e:	4798      	blx	r3
      ENDP_CTR_TX_CLR(epnum);
 8000580:	8823      	ldrh	r3, [r4, #0]
 8000582:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8000586:	051b      	lsls	r3, r3, #20
 8000588:	0d1b      	lsrs	r3, r3, #20
 800058a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800058e:	8023      	strh	r3, [r4, #0]
    }
  }
  
  if(USB->ISTR & USB_ISTR_SUSP){ // suspend -> still no connection, may sleep
 8000590:	4c11      	ldr	r4, [pc, #68]	; (80005d8 <USB_LP_IRQHandler+0x10c>)
 8000592:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 8000596:	051a      	lsls	r2, r3, #20
 8000598:	d50b      	bpl.n	80005b2 <USB_LP_IRQHandler+0xe6>
    usb_class_disconnect();
 800059a:	f000 f9cf 	bl	800093c <usb_class_disconnect>
    USB->CNTR |= USB_CNTR_FSUSP | USB_CNTR_LP_MODE;
 800059e:	f8b4 3040 	ldrh.w	r3, [r4, #64]	; 0x40
 80005a2:	f043 030c 	orr.w	r3, r3, #12
 80005a6:	f8a4 3040 	strh.w	r3, [r4, #64]	; 0x40
    USB->ISTR = (uint16_t)~USB_ISTR_SUSP;
 80005aa:	f24f 73ff 	movw	r3, #63487	; 0xf7ff
 80005ae:	f8a4 3044 	strh.w	r3, [r4, #68]	; 0x44
  }
  
  if(USB->ISTR & USB_ISTR_WKUP){ // wakeup
 80005b2:	4a09      	ldr	r2, [pc, #36]	; (80005d8 <USB_LP_IRQHandler+0x10c>)
 80005b4:	f8b2 3044 	ldrh.w	r3, [r2, #68]	; 0x44
 80005b8:	04db      	lsls	r3, r3, #19
 80005ba:	d50b      	bpl.n	80005d4 <USB_LP_IRQHandler+0x108>
    USB->CNTR &= ~(USB_CNTR_FSUSP | USB_CNTR_LP_MODE); // clear suspend flags
 80005bc:	f8b2 3040 	ldrh.w	r3, [r2, #64]	; 0x40
 80005c0:	f023 030c 	bic.w	r3, r3, #12
 80005c4:	041b      	lsls	r3, r3, #16
 80005c6:	0c1b      	lsrs	r3, r3, #16
 80005c8:	f8a2 3040 	strh.w	r3, [r2, #64]	; 0x40
    USB->ISTR = (uint16_t)~USB_ISTR_WKUP;
 80005cc:	f64e 73ff 	movw	r3, #61439	; 0xefff
 80005d0:	f8a2 3044 	strh.w	r3, [r2, #68]	; 0x44
  }
}
 80005d4:	bd38      	pop	{r3, r4, r5, pc}
 80005d6:	bf00      	nop
 80005d8:	40005c00 	andmi	r5, r0, r0, lsl #24
 80005dc:	20000000 	andcs	r0, r0, r0
 80005e0:	20000038 	andcs	r0, r0, r8, lsr r0
 80005e4:	20000018 	andcs	r0, r0, r8, lsl r0
 80005e8:	08000701 	stmdaeq	r0, {r0, r8, r9, sl}
 80005ec:	0800064f 	stmdaeq	r0, {r0, r1, r2, r3, r6, r9, sl}
 80005f0:	20000004 	andcs	r0, r0, r4

080005f4 <usb_ep_write>:

void usb_ep_write(uint8_t epnum, const uint8_t *buf, uint16_t size){
 80005f4:	b5f0      	push	{r4, r5, r6, r7, lr}
  uint8_t i;
  uint16_t N2 = (size + 1) >> 1;
  // the buffer is 16-bit, so we should copy data as it would be uint16_t
  uint16_t *buf16 = (uint16_t *)buf;
  uint32_t *out = (uint32_t*)((uint16_t *)(USB_PMAADDR + usb_epdata[epnum].usb_tx_addr*2));
  for(i = 0; i < N2; ++i, ++out){
 80005f6:	2500      	movs	r5, #0
  uint32_t *out = (uint32_t*)((uint16_t *)(USB_PMAADDR + usb_epdata[epnum].usb_tx_addr*2));
 80005f8:	f000 000f 	and.w	r0, r0, #15
 80005fc:	0104      	lsls	r4, r0, #4
 80005fe:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
 8000602:	f504 44c0 	add.w	r4, r4, #24576	; 0x6000
 8000606:	6823      	ldr	r3, [r4, #0]
  uint16_t N2 = (size + 1) >> 1;
 8000608:	1c56      	adds	r6, r2, #1
  uint32_t *out = (uint32_t*)((uint16_t *)(USB_PMAADDR + usb_epdata[epnum].usb_tx_addr*2));
 800060a:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
 800060e:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
  uint16_t N2 = (size + 1) >> 1;
 8000612:	0876      	lsrs	r6, r6, #1
  uint32_t *out = (uint32_t*)((uint16_t *)(USB_PMAADDR + usb_epdata[epnum].usb_tx_addr*2));
 8000614:	005b      	lsls	r3, r3, #1
  for(i = 0; i < N2; ++i, ++out){
 8000616:	b2ef      	uxtb	r7, r5
 8000618:	42b7      	cmp	r7, r6
 800061a:	f105 0c01 	add.w	ip, r5, #1
 800061e:	d310      	bcc.n	8000642 <usb_ep_write+0x4e>
    *out = buf16[i];
  }
  usb_epdata[epnum].usb_tx_count = size;
  
  ENDP_STAT_TX(epnum, USB_EP_TX_VALID);
 8000620:	0080      	lsls	r0, r0, #2
 8000622:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
  usb_epdata[epnum].usb_tx_count = size;
 8000626:	6062      	str	r2, [r4, #4]
  ENDP_STAT_TX(epnum, USB_EP_TX_VALID);
 8000628:	f500 40b8 	add.w	r0, r0, #23552	; 0x5c00
 800062c:	8803      	ldrh	r3, [r0, #0]
 800062e:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 8000632:	051b      	lsls	r3, r3, #20
 8000634:	0d1b      	lsrs	r3, r3, #20
 8000636:	f483 4300 	eor.w	r3, r3, #32768	; 0x8000
 800063a:	f083 03b0 	eor.w	r3, r3, #176	; 0xb0
 800063e:	8003      	strh	r3, [r0, #0]
}
 8000640:	bdf0      	pop	{r4, r5, r6, r7, pc}
    *out = buf16[i];
 8000642:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8000646:	f843 7025 	str.w	r7, [r3, r5, lsl #2]
 800064a:	4665      	mov	r5, ip
 800064c:	e7e3      	b.n	8000616 <usb_ep_write+0x22>

0800064e <ep0_in>:
static void ep0_in(uint8_t epnum){
 800064e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if( (USB->DADDR & USB_DADDR_ADD) != USB_Addr ){
 8000650:	4b13      	ldr	r3, [pc, #76]	; (80006a0 <ep0_in+0x52>)
 8000652:	4c14      	ldr	r4, [pc, #80]	; (80006a4 <ep0_in+0x56>)
 8000654:	f8b3 104c 	ldrh.w	r1, [r3, #76]	; 0x4c
 8000658:	7922      	ldrb	r2, [r4, #4]
 800065a:	f001 017f 	and.w	r1, r1, #127	; 0x7f
 800065e:	4291      	cmp	r1, r2
    USB->DADDR = USB_DADDR_EF | USB_Addr;
 8000660:	bf1c      	itt	ne
 8000662:	f042 0280 	orrne.w	r2, r2, #128	; 0x80
 8000666:	f8a3 204c 	strhne.w	r2, [r3, #76]	; 0x4c
  if( (USB_EPx(0) & USB_EPTX_STAT) == USB_EP_TX_VALID )return;
 800066a:	881b      	ldrh	r3, [r3, #0]
 800066c:	f003 0330 	and.w	r3, r3, #48	; 0x30
 8000670:	2b30      	cmp	r3, #48	; 0x30
 8000672:	d014      	beq.n	800069e <ep0_in+0x50>
  if(ep0_buf == NULL)return;
 8000674:	6825      	ldr	r5, [r4, #0]
 8000676:	b195      	cbz	r5, 800069e <ep0_in+0x50>
  uint16_t left = ep0_count;
 8000678:	88e7      	ldrh	r7, [r4, #6]
  usb_ep_write(0, ep0_buf, left);
 800067a:	4629      	mov	r1, r5
 800067c:	2f40      	cmp	r7, #64	; 0x40
 800067e:	463e      	mov	r6, r7
 8000680:	bf28      	it	cs
 8000682:	2640      	movcs	r6, #64	; 0x40
 8000684:	2000      	movs	r0, #0
 8000686:	4632      	mov	r2, r6
 8000688:	f7ff ffb4 	bl	80005f4 <usb_ep_write>
  if(left < USB_EP0_BUFSZ){
 800068c:	2f3f      	cmp	r7, #63	; 0x3f
  ep0_count -= left;
 800068e:	eba7 0306 	sub.w	r3, r7, r6
 8000692:	80e3      	strh	r3, [r4, #6]
    ep0_buf = NULL;
 8000694:	bf93      	iteet	ls
 8000696:	2300      	movls	r3, #0
  ep0_buf += left;
 8000698:	19ad      	addhi	r5, r5, r6
 800069a:	6025      	strhi	r5, [r4, #0]
    ep0_buf = NULL;
 800069c:	6023      	strls	r3, [r4, #0]
}
 800069e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80006a0:	40005c00 	andmi	r5, r0, r0, lsl #24
 80006a4:	20000004 	andcs	r0, r0, r4

080006a8 <usb_ep_read>:

int usb_ep_read(uint8_t epnum, uint16_t *buf){
 80006a8:	b530      	push	{r4, r5, lr}
  int sz = usb_epdata[epnum].rx_count;
 80006aa:	0103      	lsls	r3, r0, #4
 80006ac:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80006b0:	f503 43c0 	add.w	r3, r3, #24576	; 0x6000
int usb_ep_read(uint8_t epnum, uint16_t *buf){
 80006b4:	4602      	mov	r2, r0
  int sz = usb_epdata[epnum].rx_count;
 80006b6:	68d8      	ldr	r0, [r3, #12]
 80006b8:	f3c0 0009 	ubfx	r0, r0, #0, #10
  if(!sz) return 0;
 80006bc:	b1f8      	cbz	r0, 80006fe <usb_ep_read+0x56>
  int n = (sz + 1) >> 1;
  uint32_t *in = (uint32_t*)((uint16_t *)(USB_PMAADDR + usb_epdata[epnum].usb_rx_addr*2));
 80006be:	689b      	ldr	r3, [r3, #8]
  int n = (sz + 1) >> 1;
 80006c0:	1c44      	adds	r4, r0, #1
  uint32_t *in = (uint32_t*)((uint16_t *)(USB_PMAADDR + usb_epdata[epnum].usb_rx_addr*2));
 80006c2:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
 80006c6:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 80006ca:	005b      	lsls	r3, r3, #1
  int n = (sz + 1) >> 1;
 80006cc:	1064      	asrs	r4, r4, #1
 80006ce:	3902      	subs	r1, #2
 80006d0:	eb03 0484 	add.w	r4, r3, r4, lsl #2
  for(int i = 0; i < n; ++i, ++in)
    buf[i] = *(uint16_t*)in;
 80006d4:	f833 5b04 	ldrh.w	r5, [r3], #4
  for(int i = 0; i < n; ++i, ++in)
 80006d8:	42a3      	cmp	r3, r4
    buf[i] = *(uint16_t*)in;
 80006da:	f821 5f02 	strh.w	r5, [r1, #2]!
  for(int i = 0; i < n; ++i, ++in)
 80006de:	d1f9      	bne.n	80006d4 <usb_ep_read+0x2c>
  
  ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
 80006e0:	0093      	lsls	r3, r2, #2
 80006e2:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80006e6:	f503 43b8 	add.w	r3, r3, #23552	; 0x5c00
 80006ea:	881a      	ldrh	r2, [r3, #0]
 80006ec:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 80006f0:	0492      	lsls	r2, r2, #18
 80006f2:	0c92      	lsrs	r2, r2, #18
 80006f4:	f482 4230 	eor.w	r2, r2, #45056	; 0xb000
 80006f8:	f082 0280 	eor.w	r2, r2, #128	; 0x80
 80006fc:	801a      	strh	r2, [r3, #0]
  return sz;
}
 80006fe:	bd30      	pop	{r4, r5, pc}

08000700 <ep0_out>:
static void ep0_out(uint8_t epnum){
 8000700:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint16_t rxcount = usb_epdata[0].rx_count;
 8000702:	4b3f      	ldr	r3, [pc, #252]	; (8000800 <ep0_out+0x100>)
 8000704:	4c3f      	ldr	r4, [pc, #252]	; (8000804 <ep0_out+0x104>)
 8000706:	68dd      	ldr	r5, [r3, #12]
  uint8_t setup = !!(USB_EPx(0) & USB_EP_SETUP);
 8000708:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 800070c:	881b      	ldrh	r3, [r3, #0]
  uint16_t rxcount = usb_epdata[0].rx_count;
 800070e:	f3c5 0509 	ubfx	r5, r5, #0, #10
  if( setup ){
 8000712:	f413 6600 	ands.w	r6, r3, #2048	; 0x800
 8000716:	d009      	beq.n	800072c <ep0_out+0x2c>
    if( setup_packet.bmRequestType & 0x80 ){ //предыдущий пакет=IN, этот точно будет запросом
 8000718:	f994 3008 	ldrsb.w	r3, [r4, #8]
 800071c:	2b00      	cmp	r3, #0
 800071e:	da17      	bge.n	8000750 <ep0_out+0x50>
      bytesread = 0;
 8000720:	2500      	movs	r5, #0
      usb_ep_read(0, (uint16_t*)&setup_packet);
 8000722:	4939      	ldr	r1, [pc, #228]	; (8000808 <ep0_out+0x108>)
 8000724:	2000      	movs	r0, #0
 8000726:	f7ff ffbf 	bl	80006a8 <usb_ep_read>
      bytesread = 0;
 800072a:	8225      	strh	r5, [r4, #16]
  uint8_t req = setup_packet.bmRequestType & 0x7F;
 800072c:	7a22      	ldrb	r2, [r4, #8]
 800072e:	f002 037f 	and.w	r3, r2, #127	; 0x7f
  if(setup_packet.bmRequestType & 0x80){
 8000732:	0612      	lsls	r2, r2, #24
 8000734:	d53c      	bpl.n	80007b0 <ep0_out+0xb0>
    if( !setup )return; //какой-то костыль. Иначе вызывается два раза
 8000736:	b34e      	cbz	r6, 800078c <ep0_out+0x8c>
    if(req == (USB_REQ_STANDARD | USB_REQ_DEVICE)){
 8000738:	bb73      	cbnz	r3, 8000798 <ep0_out+0x98>
      switch(setup_packet.bRequest){
 800073a:	7a60      	ldrb	r0, [r4, #9]
 800073c:	2806      	cmp	r0, #6
 800073e:	d00c      	beq.n	800075a <ep0_out+0x5a>
 8000740:	2808      	cmp	r0, #8
 8000742:	d025      	beq.n	8000790 <ep0_out+0x90>
 8000744:	bb40      	cbnz	r0, 8000798 <ep0_out+0x98>
          usb_ep_write(0, (uint8_t*)"\0", 2); // send status: Bus Powered
 8000746:	2202      	movs	r2, #2
 8000748:	4930      	ldr	r1, [pc, #192]	; (800080c <ep0_out+0x10c>)
    if( bytesread >= setup_packet.wLength )usb_ep_write(0, NULL, 0);
 800074a:	f7ff ff53 	bl	80005f4 <usb_ep_write>
 800074e:	e01d      	b.n	800078c <ep0_out+0x8c>
      if( bytesread >= setup_packet.wLength ){
 8000750:	89e2      	ldrh	r2, [r4, #14]
 8000752:	8a23      	ldrh	r3, [r4, #16]
 8000754:	429a      	cmp	r2, r3
 8000756:	d8e9      	bhi.n	800072c <ep0_out+0x2c>
 8000758:	e7e2      	b.n	8000720 <ep0_out+0x20>
          const void *data = ZLPP;
 800075a:	2201      	movs	r2, #1
          usb_class_get_std_descr(setup_packet.wValue, &data, &size);
 800075c:	a901      	add	r1, sp, #4
          const void *data = ZLPP;
 800075e:	9201      	str	r2, [sp, #4]
          usb_class_get_std_descr(setup_packet.wValue, &data, &size);
 8000760:	8960      	ldrh	r0, [r4, #10]
 8000762:	f10d 0202 	add.w	r2, sp, #2
          uint16_t size = 0;
 8000766:	f8ad 3002 	strh.w	r3, [sp, #2]
          usb_class_get_std_descr(setup_packet.wValue, &data, &size);
 800076a:	f000 f855 	bl	8000818 <usb_class_get_std_descr>
    if(setup_packet.wLength < size) size = setup_packet.wLength;
 800076e:	89e3      	ldrh	r3, [r4, #14]
 8000770:	f8bd 2002 	ldrh.w	r2, [sp, #2]
  ep0_in(0x80);
 8000774:	2080      	movs	r0, #128	; 0x80
    if(setup_packet.wLength < size) size = setup_packet.wLength;
 8000776:	429a      	cmp	r2, r3
 8000778:	bf88      	it	hi
 800077a:	f8ad 3002 	strhhi.w	r3, [sp, #2]
  ep0_count = size;
 800077e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000782:	80e3      	strh	r3, [r4, #6]
  ep0_buf = buf;
 8000784:	9b01      	ldr	r3, [sp, #4]
 8000786:	6023      	str	r3, [r4, #0]
  ep0_in(0x80);
 8000788:	f7ff ff61 	bl	800064e <ep0_in>
}
 800078c:	b002      	add	sp, #8
 800078e:	bd70      	pop	{r4, r5, r6, pc}
          usb_ep_write(0, &configuration, 1);
 8000790:	2201      	movs	r2, #1
 8000792:	491f      	ldr	r1, [pc, #124]	; (8000810 <ep0_out+0x110>)
 8000794:	4618      	mov	r0, r3
 8000796:	e7d8      	b.n	800074a <ep0_out+0x4a>
    void *data = ZLPP;
 8000798:	2301      	movs	r3, #1
 800079a:	9301      	str	r3, [sp, #4]
    uint16_t size = 0;
 800079c:	2300      	movs	r3, #0
    usb_class_ep0_in( &setup_packet, &data, &size );
 800079e:	f10d 0202 	add.w	r2, sp, #2
 80007a2:	a901      	add	r1, sp, #4
 80007a4:	4818      	ldr	r0, [pc, #96]	; (8000808 <ep0_out+0x108>)
    uint16_t size = 0;
 80007a6:	f8ad 3002 	strh.w	r3, [sp, #2]
    usb_class_ep0_in( &setup_packet, &data, &size );
 80007aa:	f000 f873 	bl	8000894 <usb_class_ep0_in>
 80007ae:	e7de      	b.n	800076e <ep0_out+0x6e>
    if(req == (USB_REQ_STANDARD | USB_REQ_DEVICE)){
 80007b0:	b96b      	cbnz	r3, 80007ce <ep0_out+0xce>
      if(setup_packet.bRequest == SET_ADDRESS){
 80007b2:	7a62      	ldrb	r2, [r4, #9]
 80007b4:	2a05      	cmp	r2, #5
 80007b6:	d105      	bne.n	80007c4 <ep0_out+0xc4>
        USB_Addr = setup_packet.wValue;
 80007b8:	8962      	ldrh	r2, [r4, #10]
 80007ba:	7122      	strb	r2, [r4, #4]
    if( bytesread >= setup_packet.wLength )usb_ep_write(0, NULL, 0);
 80007bc:	2200      	movs	r2, #0
 80007be:	4611      	mov	r1, r2
 80007c0:	4610      	mov	r0, r2
 80007c2:	e7c2      	b.n	800074a <ep0_out+0x4a>
      }else if(setup_packet.bRequest == SET_CONFIGURATION){
 80007c4:	2a09      	cmp	r2, #9
 80007c6:	d102      	bne.n	80007ce <ep0_out+0xce>
        configuration = setup_packet.wValue;
 80007c8:	8962      	ldrh	r2, [r4, #10]
 80007ca:	74a2      	strb	r2, [r4, #18]
        usb_ep_write(0, NULL, 0);
 80007cc:	e7f6      	b.n	80007bc <ep0_out+0xbc>
    if(!usb_class_ep0_out( &setup_packet, bytesread, rxcount )){
 80007ce:	462a      	mov	r2, r5
 80007d0:	8a21      	ldrh	r1, [r4, #16]
 80007d2:	480d      	ldr	r0, [pc, #52]	; (8000808 <ep0_out+0x108>)
 80007d4:	f000 f890 	bl	80008f8 <usb_class_ep0_out>
 80007d8:	b950      	cbnz	r0, 80007f0 <ep0_out+0xf0>
      ENDP_STAT_RX(0, USB_EP_RX_VALID);
 80007da:	4a0e      	ldr	r2, [pc, #56]	; (8000814 <ep0_out+0x114>)
 80007dc:	8813      	ldrh	r3, [r2, #0]
 80007de:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80007e2:	049b      	lsls	r3, r3, #18
 80007e4:	0c9b      	lsrs	r3, r3, #18
 80007e6:	f483 4330 	eor.w	r3, r3, #45056	; 0xb000
 80007ea:	f083 0380 	eor.w	r3, r3, #128	; 0x80
 80007ee:	8013      	strh	r3, [r2, #0]
    bytesread += rxcount;
 80007f0:	8a23      	ldrh	r3, [r4, #16]
 80007f2:	441d      	add	r5, r3
    if( bytesread >= setup_packet.wLength )usb_ep_write(0, NULL, 0);
 80007f4:	89e3      	ldrh	r3, [r4, #14]
    bytesread += rxcount;
 80007f6:	b2ad      	uxth	r5, r5
    if( bytesread >= setup_packet.wLength )usb_ep_write(0, NULL, 0);
 80007f8:	42ab      	cmp	r3, r5
    bytesread += rxcount;
 80007fa:	8225      	strh	r5, [r4, #16]
    if( bytesread >= setup_packet.wLength )usb_ep_write(0, NULL, 0);
 80007fc:	d8c6      	bhi.n	800078c <ep0_out+0x8c>
 80007fe:	e7dd      	b.n	80007bc <ep0_out+0xbc>
 8000800:	40006000 	andmi	r6, r0, r0
 8000804:	20000004 	andcs	r0, r0, r4
 8000808:	2000000c 	andcs	r0, r0, ip
 800080c:	08000a68 	stmdaeq	r0, {r3, r5, r6, r9, fp}
 8000810:	20000016 	andcs	r0, r0, r6, lsl r0
 8000814:	40005c00 	andmi	r5, r0, r0, lsl #24

08000818 <usb_class_get_std_descr>:
USB_STRING(USB_StringManufacturingDescriptor, u"COKPOWEHEU"); //Vendor
USB_STRING(USB_StringProdDescriptor, u"USB test"); //Product
USB_STRING(USB_StringSerialDescriptor, u"1"); //Serial (BCD)

void usb_class_get_std_descr(uint16_t descr, const void **data, uint16_t *size){
  switch(descr & 0xFF00){
 8000818:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 800081c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000820:	d010      	beq.n	8000844 <usb_class_get_std_descr+0x2c>
 8000822:	d803      	bhi.n	800082c <usb_class_get_std_descr+0x14>
 8000824:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8000828:	d007      	beq.n	800083a <usb_class_get_std_descr+0x22>
 800082a:	4770      	bx	lr
 800082c:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8000830:	d010      	beq.n	8000854 <usb_class_get_std_descr+0x3c>
 8000832:	f5b3 6fc0 	cmp.w	r3, #1536	; 0x600
 8000836:	d009      	beq.n	800084c <usb_class_get_std_descr+0x34>
 8000838:	4770      	bx	lr
    case DEVICE_DESCRIPTOR:
      *data = &USB_DeviceDescriptor;
 800083a:	4b0f      	ldr	r3, [pc, #60]	; (8000878 <usb_class_get_std_descr+0x60>)
 800083c:	600b      	str	r3, [r1, #0]
      *size = sizeof(USB_DeviceDescriptor);
 800083e:	2312      	movs	r3, #18
          *data = &USB_StringSerialDescriptor;
          break;
        default:
          return;
      }
      *size = ((uint8_t*)*data)[0]; //data->bLength
 8000840:	8013      	strh	r3, [r2, #0]
      break;
    default:
      break;
  }
}
 8000842:	4770      	bx	lr
      *data = &USB_ConfigDescriptor;
 8000844:	4b0d      	ldr	r3, [pc, #52]	; (800087c <usb_class_get_std_descr+0x64>)
 8000846:	600b      	str	r3, [r1, #0]
      *size = sizeof(USB_ConfigDescriptor);
 8000848:	231b      	movs	r3, #27
 800084a:	e7f9      	b.n	8000840 <usb_class_get_std_descr+0x28>
      *data = &USB_DeviceQualifierDescriptor;
 800084c:	4b0c      	ldr	r3, [pc, #48]	; (8000880 <usb_class_get_std_descr+0x68>)
 800084e:	600b      	str	r3, [r1, #0]
      *size = USB_DeviceQualifierDescriptor[0];
 8000850:	230a      	movs	r3, #10
 8000852:	e7f5      	b.n	8000840 <usb_class_get_std_descr+0x28>
      switch(descr & 0xFF){
 8000854:	b2c0      	uxtb	r0, r0
 8000856:	2803      	cmp	r0, #3
 8000858:	d8f3      	bhi.n	8000842 <usb_class_get_std_descr+0x2a>
 800085a:	e8df f000 	tbb	[pc, r0]
 800085e:	0b090702 	bleq	824246e <__exidx_end+0x241986>
          *data = &USB_StringLangDescriptor;
 8000862:	4b08      	ldr	r3, [pc, #32]	; (8000884 <usb_class_get_std_descr+0x6c>)
          *data = &USB_StringSerialDescriptor;
 8000864:	600b      	str	r3, [r1, #0]
      *size = ((uint8_t*)*data)[0]; //data->bLength
 8000866:	680b      	ldr	r3, [r1, #0]
 8000868:	781b      	ldrb	r3, [r3, #0]
 800086a:	e7e9      	b.n	8000840 <usb_class_get_std_descr+0x28>
          *data = &USB_StringManufacturingDescriptor;
 800086c:	4b06      	ldr	r3, [pc, #24]	; (8000888 <usb_class_get_std_descr+0x70>)
 800086e:	e7f9      	b.n	8000864 <usb_class_get_std_descr+0x4c>
          *data = &USB_StringProdDescriptor;
 8000870:	4b06      	ldr	r3, [pc, #24]	; (800088c <usb_class_get_std_descr+0x74>)
 8000872:	e7f7      	b.n	8000864 <usb_class_get_std_descr+0x4c>
          *data = &USB_StringSerialDescriptor;
 8000874:	4b06      	ldr	r3, [pc, #24]	; (8000890 <usb_class_get_std_descr+0x78>)
 8000876:	e7f5      	b.n	8000864 <usb_class_get_std_descr+0x4c>
 8000878:	08000a6a 	stmdaeq	r0, {r1, r3, r5, r6, r9, fp}
 800087c:	08000a7c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r9, fp}
 8000880:	08000a97 	stmdaeq	r0, {r0, r1, r2, r4, r7, r9, fp}
 8000884:	08000aa2 	stmdaeq	r0, {r1, r5, r7, r9, fp}
 8000888:	08000aa6 	stmdaeq	r0, {r1, r2, r5, r7, r9, fp}
 800088c:	08000abc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9, fp}
 8000890:	08000ace 	stmdaeq	r0, {r1, r2, r3, r6, r7, r9, fp}

08000894 <usb_class_ep0_in>:

char usb_class_ep0_in(config_pack_t *req, void **data, uint16_t *size){
 8000894:	b530      	push	{r4, r5, lr}
  if( req->bmRequestType == (USB_REQ_INTERFACE | 0x80) ){
 8000896:	7803      	ldrb	r3, [r0, #0]
 8000898:	2b81      	cmp	r3, #129	; 0x81
 800089a:	d10c      	bne.n	80008b6 <usb_class_ep0_in+0x22>
    if( req->bRequest == GET_DESCRIPTOR ){
 800089c:	7843      	ldrb	r3, [r0, #1]
 800089e:	2b06      	cmp	r3, #6
 80008a0:	d11f      	bne.n	80008e2 <usb_class_ep0_in+0x4e>
      if( req->wValue == HID_REPORT_DESCRIPTOR){
 80008a2:	8843      	ldrh	r3, [r0, #2]
 80008a4:	f5b3 5f08 	cmp.w	r3, #8704	; 0x2200
 80008a8:	d11b      	bne.n	80008e2 <usb_class_ep0_in+0x4e>
        *data = (void**)&USB_HIDDescriptor;
 80008aa:	4b0f      	ldr	r3, [pc, #60]	; (80008e8 <usb_class_ep0_in+0x54>)
        *size = sizeof(USB_HIDDescriptor);
        return 1;
 80008ac:	2001      	movs	r0, #1
        *data = (void**)&USB_HIDDescriptor;
 80008ae:	600b      	str	r3, [r1, #0]
        *size = sizeof(USB_HIDDescriptor);
 80008b0:	2316      	movs	r3, #22
 80008b2:	8013      	strh	r3, [r2, #0]
      *size = sizeof(hid_data);
      return 1;
    }
  }
  return 0;
}
 80008b4:	bd30      	pop	{r4, r5, pc}
  if( req->bmRequestType == (USB_REQ_CLASS | USB_REQ_INTERFACE | 0x80) ){
 80008b6:	2ba1      	cmp	r3, #161	; 0xa1
 80008b8:	d113      	bne.n	80008e2 <usb_class_ep0_in+0x4e>
    if( req->bRequest == HIDREQ_GET_REPORT ){
 80008ba:	7840      	ldrb	r0, [r0, #1]
 80008bc:	2801      	cmp	r0, #1
 80008be:	d110      	bne.n	80008e2 <usb_class_ep0_in+0x4e>
      if(GPI_ON(JBTN))hid_data.rled = 1; else hid_data.rled = 0;
 80008c0:	4b0a      	ldr	r3, [pc, #40]	; (80008ec <usb_class_ep0_in+0x58>)
 80008c2:	4c0b      	ldr	r4, [pc, #44]	; (80008f0 <usb_class_ep0_in+0x5c>)
 80008c4:	691b      	ldr	r3, [r3, #16]
      hid_data.gled = num;
 80008c6:	4d0b      	ldr	r5, [pc, #44]	; (80008f4 <usb_class_ep0_in+0x60>)
      if(GPI_ON(JBTN))hid_data.rled = 1; else hid_data.rled = 0;
 80008c8:	f083 0320 	eor.w	r3, r3, #32
 80008cc:	f3c3 1340 	ubfx	r3, r3, #5, #1
 80008d0:	7023      	strb	r3, [r4, #0]
      hid_data.gled = num;
 80008d2:	782b      	ldrb	r3, [r5, #0]
 80008d4:	7063      	strb	r3, [r4, #1]
      num++;
 80008d6:	3301      	adds	r3, #1
 80008d8:	702b      	strb	r3, [r5, #0]
      *size = sizeof(hid_data);
 80008da:	2302      	movs	r3, #2
      *data = &hid_data;
 80008dc:	600c      	str	r4, [r1, #0]
      *size = sizeof(hid_data);
 80008de:	8013      	strh	r3, [r2, #0]
      return 1;
 80008e0:	e7e8      	b.n	80008b4 <usb_class_ep0_in+0x20>
  return 0;
 80008e2:	2000      	movs	r0, #0
 80008e4:	e7e6      	b.n	80008b4 <usb_class_ep0_in+0x20>
 80008e6:	bf00      	nop
 80008e8:	08000ad2 	stmdaeq	r0, {r1, r4, r6, r7, r9, fp}
 80008ec:	40020400 	andmi	r0, r2, r0, lsl #8
 80008f0:	20000058 	andcs	r0, r0, r8, asr r0
 80008f4:	20000017 	andcs	r0, r0, r7, lsl r0

080008f8 <usb_class_ep0_out>:

char usb_class_ep0_out(config_pack_t *req, uint16_t offset, uint16_t rx_size){
 80008f8:	b510      	push	{r4, lr}
  if(rx_size == 0)return 1; //прочитан только запрос - не интересно
 80008fa:	b18a      	cbz	r2, 8000920 <usb_class_ep0_out+0x28>
  //анализом запроса не заморачиваемя. Считаем, что ничего кроме нужного не придет
  if(rx_size != sizeof(hid_data))return 0; //защита если вдруг придет мусор
 80008fc:	2a02      	cmp	r2, #2
 80008fe:	d117      	bne.n	8000930 <usb_class_ep0_out+0x38>
  usb_ep_read(0, (void*)&hid_data);
 8000900:	4c0c      	ldr	r4, [pc, #48]	; (8000934 <usb_class_ep0_out+0x3c>)
 8000902:	2000      	movs	r0, #0
 8000904:	4621      	mov	r1, r4
 8000906:	f7ff fecf 	bl	80006a8 <usb_ep_read>
  
  if(hid_data.rled)GPO_ON(RLED); else GPO_OFF(RLED);
 800090a:	7822      	ldrb	r2, [r4, #0]
 800090c:	4b0a      	ldr	r3, [pc, #40]	; (8000938 <usb_class_ep0_out+0x40>)
 800090e:	b14a      	cbz	r2, 8000924 <usb_class_ep0_out+0x2c>
 8000910:	f44f 7280 	mov.w	r2, #256	; 0x100
 8000914:	619a      	str	r2, [r3, #24]
  if(hid_data.gled)GPO_ON(GLED); else GPO_OFF(GLED);
 8000916:	7862      	ldrb	r2, [r4, #1]
 8000918:	b13a      	cbz	r2, 800092a <usb_class_ep0_out+0x32>
 800091a:	f44f 7200 	mov.w	r2, #512	; 0x200
 800091e:	619a      	str	r2, [r3, #24]
  if(rx_size == 0)return 1; //прочитан только запрос - не интересно
 8000920:	2001      	movs	r0, #1
  
  return 1;
}
 8000922:	bd10      	pop	{r4, pc}
  if(hid_data.rled)GPO_ON(RLED); else GPO_OFF(RLED);
 8000924:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8000928:	e7f4      	b.n	8000914 <usb_class_ep0_out+0x1c>
  if(hid_data.gled)GPO_ON(GLED); else GPO_OFF(GLED);
 800092a:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 800092e:	e7f6      	b.n	800091e <usb_class_ep0_out+0x26>
  if(rx_size != sizeof(hid_data))return 0; //защита если вдруг придет мусор
 8000930:	2000      	movs	r0, #0
 8000932:	e7f6      	b.n	8000922 <usb_class_ep0_out+0x2a>
 8000934:	20000058 	andcs	r0, r0, r8, asr r0
 8000938:	40020400 	andmi	r0, r2, r0, lsl #8

0800093c <usb_class_disconnect>:

void usb_class_disconnect(){
  GPO_OFF(GLED);
 800093c:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8000940:	4b02      	ldr	r3, [pc, #8]	; (800094c <usb_class_disconnect+0x10>)
 8000942:	619a      	str	r2, [r3, #24]
  GPO_OFF(RLED);
 8000944:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8000948:	619a      	str	r2, [r3, #24]
}
 800094a:	4770      	bx	lr
 800094c:	40020400 	andmi	r0, r2, r0, lsl #8

08000950 <__libc_init_array>:
 8000950:	b570      	push	{r4, r5, r6, lr}
 8000952:	4e0d      	ldr	r6, [pc, #52]	; (8000988 <__libc_init_array+0x38>)
 8000954:	4d0d      	ldr	r5, [pc, #52]	; (800098c <__libc_init_array+0x3c>)
 8000956:	1b76      	subs	r6, r6, r5
 8000958:	10b6      	asrs	r6, r6, #2
 800095a:	d006      	beq.n	800096a <__libc_init_array+0x1a>
 800095c:	2400      	movs	r4, #0
 800095e:	3401      	adds	r4, #1
 8000960:	f855 3b04 	ldr.w	r3, [r5], #4
 8000964:	4798      	blx	r3
 8000966:	42a6      	cmp	r6, r4
 8000968:	d1f9      	bne.n	800095e <__libc_init_array+0xe>
 800096a:	4e09      	ldr	r6, [pc, #36]	; (8000990 <__libc_init_array+0x40>)
 800096c:	4d09      	ldr	r5, [pc, #36]	; (8000994 <__libc_init_array+0x44>)
 800096e:	f7ff fcf1 	bl	8000354 <_init>
 8000972:	1b76      	subs	r6, r6, r5
 8000974:	10b6      	asrs	r6, r6, #2
 8000976:	d006      	beq.n	8000986 <__libc_init_array+0x36>
 8000978:	2400      	movs	r4, #0
 800097a:	3401      	adds	r4, #1
 800097c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000980:	4798      	blx	r3
 8000982:	42a6      	cmp	r6, r4
 8000984:	d1f9      	bne.n	800097a <__libc_init_array+0x2a>
 8000986:	bd70      	pop	{r4, r5, r6, pc}
 8000988:	08000ae8 	stmdaeq	r0, {r3, r5, r6, r7, r9, fp}
 800098c:	08000ae8 	stmdaeq	r0, {r3, r5, r6, r7, r9, fp}
 8000990:	08000ae8 	stmdaeq	r0, {r3, r5, r6, r7, r9, fp}
 8000994:	08000ae8 	stmdaeq	r0, {r3, r5, r6, r7, r9, fp}

08000998 <Reset_Handler>:
 8000998:	2100      	movs	r1, #0
 800099a:	e003      	b.n	80009a4 <LoopCopyDataInit>

0800099c <CopyDataInit>:
 800099c:	4b0b      	ldr	r3, [pc, #44]	; (80009cc <LoopFillZerobss+0x14>)
 800099e:	585b      	ldr	r3, [r3, r1]
 80009a0:	5043      	str	r3, [r0, r1]
 80009a2:	3104      	adds	r1, #4

080009a4 <LoopCopyDataInit>:
 80009a4:	480a      	ldr	r0, [pc, #40]	; (80009d0 <LoopFillZerobss+0x18>)
 80009a6:	4b0b      	ldr	r3, [pc, #44]	; (80009d4 <LoopFillZerobss+0x1c>)
 80009a8:	1842      	adds	r2, r0, r1
 80009aa:	429a      	cmp	r2, r3
 80009ac:	d3f6      	bcc.n	800099c <CopyDataInit>
 80009ae:	4a0a      	ldr	r2, [pc, #40]	; (80009d8 <LoopFillZerobss+0x20>)
 80009b0:	e002      	b.n	80009b8 <LoopFillZerobss>

080009b2 <FillZerobss>:
 80009b2:	2300      	movs	r3, #0
 80009b4:	f842 3b04 	str.w	r3, [r2], #4

080009b8 <LoopFillZerobss>:
 80009b8:	4b08      	ldr	r3, [pc, #32]	; (80009dc <LoopFillZerobss+0x24>)
 80009ba:	429a      	cmp	r2, r3
 80009bc:	d3f9      	bcc.n	80009b2 <FillZerobss>
 80009be:	f7ff fcca 	bl	8000356 <SystemInit>
 80009c2:	f7ff ffc5 	bl	8000950 <__libc_init_array>
 80009c6:	f000 f80d 	bl	80009e4 <main>
 80009ca:	4770      	bx	lr
 80009cc:	08000ae8 	stmdaeq	r0, {r3, r5, r6, r7, r9, fp}
 80009d0:	20000000 	andcs	r0, r0, r0
 80009d4:	20000004 	andcs	r0, r0, r4
 80009d8:	20000004 	andcs	r0, r0, r4
 80009dc:	2000005c 	andcs	r0, r0, ip, asr r0

080009e0 <ADC1_IRQHandler>:
 80009e0:	e7fe      	b.n	80009e0 <ADC1_IRQHandler>
	...

080009e4 <main>:

int main(void){
 80009e4:	b510      	push	{r4, lr}
  clock_HS(1);
 80009e6:	2001      	movs	r0, #1
 80009e8:	f7ff fbfe 	bl	80001e8 <clock_HS>
  RCC->AHBENR |= RCC_AHBENR_GPIOAEN | RCC_AHBENR_GPIOBEN | RCC_AHBENR_GPIOCEN | RCC_AHBENR_GPIODEN;
 80009ec:	4a1a      	ldr	r2, [pc, #104]	; (8000a58 <main+0x74>)
 80009ee:	69d3      	ldr	r3, [r2, #28]
 80009f0:	f043 030f 	orr.w	r3, r3, #15
 80009f4:	61d3      	str	r3, [r2, #28]
  GPIO_config(GLED); GPIO_config(RLED);
 80009f6:	4b19      	ldr	r3, [pc, #100]	; (8000a5c <main+0x78>)
 80009f8:	681a      	ldr	r2, [r3, #0]
 80009fa:	f422 2240 	bic.w	r2, r2, #786432	; 0xc0000
 80009fe:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 8000a02:	601a      	str	r2, [r3, #0]
 8000a04:	689a      	ldr	r2, [r3, #8]
 8000a06:	f442 2240 	orr.w	r2, r2, #786432	; 0xc0000
 8000a0a:	609a      	str	r2, [r3, #8]
 8000a0c:	681a      	ldr	r2, [r3, #0]
 8000a0e:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 8000a12:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8000a16:	601a      	str	r2, [r3, #0]
 8000a18:	689a      	ldr	r2, [r3, #8]
 8000a1a:	f442 3240 	orr.w	r2, r2, #196608	; 0x30000
 8000a1e:	609a      	str	r2, [r3, #8]
  GPIO_config(LBTN); GPIO_config(JBTN);
 8000a20:	4a0f      	ldr	r2, [pc, #60]	; (8000a60 <main+0x7c>)
 8000a22:	6811      	ldr	r1, [r2, #0]
 8000a24:	f021 6140 	bic.w	r1, r1, #201326592	; 0xc000000
 8000a28:	6011      	str	r1, [r2, #0]
 8000a2a:	6891      	ldr	r1, [r2, #8]
 8000a2c:	f041 6140 	orr.w	r1, r1, #201326592	; 0xc000000
 8000a30:	6091      	str	r1, [r2, #8]
 8000a32:	681a      	ldr	r2, [r3, #0]
 8000a34:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
 8000a38:	601a      	str	r2, [r3, #0]
 8000a3a:	689a      	ldr	r2, [r3, #8]
 8000a3c:	f442 6240 	orr.w	r2, r2, #3072	; 0xc00
 8000a40:	609a      	str	r2, [r3, #8]
  
  USB_setup();
 8000a42:	f7ff fc96 	bl	8000372 <USB_setup>
static __INLINE void __enable_irq()               { __ASM volatile ("cpsie i"); }
 8000a46:	b662      	cpsie	i
  __enable_irq();
  while (1){
    usb_class_poll();
    sleep(100000);
 8000a48:	4c06      	ldr	r4, [pc, #24]	; (8000a64 <main+0x80>)
    usb_class_poll();
 8000a4a:	f7ff fc8d 	bl	8000368 <usb_class_poll>
    sleep(100000);
 8000a4e:	4620      	mov	r0, r4
 8000a50:	f7ff fc82 	bl	8000358 <sleep>
 8000a54:	e7f9      	b.n	8000a4a <main+0x66>
 8000a56:	bf00      	nop
 8000a58:	40023800 	andmi	r3, r2, r0, lsl #16
 8000a5c:	40020400 	andmi	r0, r2, r0, lsl #8
 8000a60:	40020800 	andmi	r0, r2, r0, lsl #16
 8000a64:	000186a0 	andeq	r8, r1, r0, lsr #13

Disassembly of section .rodata:

08000a68 <USB_DeviceDescriptor-0x2>:
	...

08000a6a <USB_DeviceDescriptor>:
static const uint8_t USB_DeviceDescriptor[] = {
 8000a6a:	02000112 	andeq	r0, r0, #-2147483644	; 0x80000004
 8000a6e:	40000000 	andmi	r0, r0, r0
 8000a72:	05df16c0 	ldrbeq	r1, [pc, #1728]	; 800113a <__exidx_end+0x652>
 8000a76:	02010001 	andeq	r0, r1, #1
 8000a7a:	 	andeq	r0, r9, #-1073741824	; 0xc0000000

08000a7c <USB_ConfigDescriptor>:
static const uint8_t USB_ConfigDescriptor[] = {
 8000a7c:	001b0209 	andseq	r0, fp, r9, lsl #4
 8000a80:	80000101 	andhi	r0, r0, r1, lsl #2
 8000a84:	00040932 	andeq	r0, r4, r2, lsr r9
 8000a88:	00030000 	andeq	r0, r3, r0
 8000a8c:	21090000 	mrscs	r0, (UNDEF: 9)
 8000a90:	01000101 	tsteq	r0, r1, lsl #2
 8000a94:	 	beq	8006324 <__exidx_end+0x583c>

08000a97 <USB_DeviceQualifierDescriptor>:
static const uint8_t USB_DeviceQualifierDescriptor[] = {
 8000a97:	0200060a 	andeq	r0, r0, #10485760	; 0xa00000
 8000a9b:	40000000 	andmi	r0, r0, r0
 8000a9f:	 	streq	r0, [r0], #-1

08000aa2 <USB_StringLangDescriptor>:
USB_STRING(USB_StringLangDescriptor, u"\x0409"); //lang US
 8000aa2:	04090304 	streq	r0, [r9], #-772	; 0xfffffcfc

08000aa6 <USB_StringManufacturingDescriptor>:
USB_STRING(USB_StringManufacturingDescriptor, u"COKPOWEHEU"); //Vendor
 8000aa6:	00430316 	subeq	r0, r3, r6, lsl r3
 8000aaa:	004b004f 	subeq	r0, fp, pc, asr #32
 8000aae:	004f0050 	subeq	r0, pc, r0, asr r0	; <UNPREDICTABLE>
 8000ab2:	00450057 	subeq	r0, r5, r7, asr r0
 8000ab6:	00450048 	subeq	r0, r5, r8, asr #32
 8000aba:	 	tsteq	r2, #85	; 0x55

08000abc <USB_StringProdDescriptor>:
USB_STRING(USB_StringProdDescriptor, u"USB test"); //Product
 8000abc:	00550312 	subseq	r0, r5, r2, lsl r3
 8000ac0:	00420053 	subeq	r0, r2, r3, asr r0
 8000ac4:	00740020 	rsbseq	r0, r4, r0, lsr #32
 8000ac8:	00730065 	rsbseq	r0, r3, r5, rrx
 8000acc:	 	movweq	r0, #16500	; 0x4074

08000ace <USB_StringSerialDescriptor>:
USB_STRING(USB_StringSerialDescriptor, u"1"); //Serial (BCD)
 8000ace:	00310304 	eorseq	r0, r1, r4, lsl #6

08000ad2 <USB_HIDDescriptor>:
static const uint8_t USB_HIDDescriptor[] = {
 8000ad2:	09ff0006 	ldmibeq	pc!, {r1, r2}^	; <UNPREDICTABLE>
 8000ad6:	1501a101 	strne	sl, [r1, #-257]	; 0xfffffeff
 8000ada:	00ff2600 	rscseq	r2, pc, r0, lsl #12
 8000ade:	02950875 	addseq	r0, r5, #7667712	; 0x750000
 8000ae2:	02b20009 	adcseq	r0, r2, #9
 8000ae6:	Address 0x0000000008000ae6 is out of bounds.


Disassembly of section .data:

20000000 <lastaddr>:
20000000:	00000040 	andeq	r0, r0, r0, asr #32

Disassembly of section .bss:

20000004 <ep0_buf>:
20000004:	00000000 	andeq	r0, r0, r0

20000008 <USB_Addr>:
	...

2000000a <ep0_count>:
	...

2000000c <setup_packet>:
	...

20000014 <bytesread.4393>:
	...

20000016 <configuration>:
	...

20000017 <num.5058>:
	...

20000018 <epfunc_in>:
	...

20000038 <epfunc_out>:
	...

20000058 <hid_data>:
}hid_data;
20000058:	00000000 	andeq	r0, r0, r0

Disassembly of section ._user_heap_stack:

2000005c <._user_heap_stack>:
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002e41 	andeq	r2, r0, r1, asr #28
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000024 	andeq	r0, r0, r4, lsr #32
  10:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
  14:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
  18:	0600334d 	streq	r3, [r0], -sp, asr #6
  1c:	094d070a 	stmdbeq	sp, {r1, r3, r8, r9, sl}^
  20:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  24:	17011501 	strne	r1, [r1, -r1, lsl #10]
  28:	1a011803 	bne	4603c <_Min_Stack_Size+0x45c3c>
  2c:	Address 0x000000000000002c is out of bounds.


Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	00000928 	andeq	r0, r0, r8, lsr #18
       4:	00000002 	andeq	r0, r0, r2
       8:	01040000 	mrseq	r0, (UNDEF: 4)
       c:	00000320 	andeq	r0, r0, r0, lsr #6
      10:	0000120c 	andeq	r1, r0, ip, lsl #4
      14:	0003b300 	andeq	fp, r3, r0, lsl #6
	...
      28:	06010200 	streq	r0, [r1], -r0, lsl #4
      2c:	00000258 	andeq	r0, r0, r8, asr r2
      30:	0002f203 	andeq	pc, r2, r3, lsl #4
      34:	17220400 	strne	r0, [r2, -r0, lsl #8]!
      38:	00000029 	andeq	r0, r0, r9, lsr #32
      3c:	71050202 	tstvc	r5, r2, lsl #4
      40:	02000002 	andeq	r0, r0, #2
      44:	00820504 	addeq	r0, r2, r4, lsl #10
      48:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
      4c:	00007d05 	andeq	r7, r0, r5, lsl #26
      50:	02f10300 	rscseq	r0, r1, #0, 6
      54:	2e040000 	cdpcs	0, 0, cr0, cr4, cr0, {0}
      58:	00005d18 	andeq	r5, r0, r8, lsl sp
      5c:	08010200 	stmdaeq	r1, {r9}
      60:	00000256 	andeq	r0, r0, r6, asr r2
      64:	0000ff03 	andeq	pc, r0, r3, lsl #30
      68:	19310400 	ldmdbne	r1!, {sl}
      6c:	00000070 	andeq	r0, r0, r0, ror r0
      70:	7e070202 	cdpvc	2, 0, cr0, cr7, cr2, {0}
      74:	03000001 	movweq	r0, #1
      78:	000002ab 	andeq	r0, r0, fp, lsr #5
      7c:	88193404 	ldmdahi	r9, {r2, sl, ip, sp}
      80:	04000000 	streq	r0, [r0], #-0
      84:	00000077 	andeq	r0, r0, r7, ror r0
      88:	4d070402 	cfstrsmi	mvf0, [r7, #-8]
      8c:	02000000 	andeq	r0, r0, #0
      90:	00480708 	subeq	r0, r8, r8, lsl #14
      94:	04050000 	streq	r0, [r5], #-0
      98:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
      9c:	00960400 	addseq	r0, r6, r0, lsl #8
      a0:	04020000 	streq	r0, [r2], #-0
      a4:	00005207 	andeq	r5, r0, r7, lsl #4
      a8:	02640600 	rsbeq	r0, r4, #0, 12
      ac:	ce030000 	cdpgt	0, 0, cr0, cr3, cr0, {0}
      b0:	009d1506 	addseq	r1, sp, r6, lsl #10
      b4:	01010000 	mrseq	r0, (UNDEF: 1)
      b8:	00013a07 	andeq	r3, r1, r7, lsl #20
      bc:	114c0500 	cmpne	ip, r0, lsl #10
      c0:	00000077 	andeq	r0, r0, r7, ror r0
      c4:	84080101 	strhi	r0, [r8], #-257	; 0xfffffeff
      c8:	09012506 	stmdbeq	r1, {r1, r2, r8, sl, sp}
      cc:	00000181 	andeq	r0, r0, r1, lsl #3
      d0:	52434109 	subpl	r4, r3, #1073741826	; 0x40000002
      d4:	01270600 			; <UNDEFINED> instruction: 0x01270600
      d8:	00008311 	andeq	r8, r0, r1, lsl r3
      dc:	00230200 	eoreq	r0, r3, r0, lsl #4
      e0:	00009e0a 	andeq	r9, r0, sl, lsl #28
      e4:	01280600 			; <UNDEFINED> instruction: 0x01280600
      e8:	00008311 	andeq	r8, r0, r1, lsl r3
      ec:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
      f0:	00010f0a 	andeq	r0, r1, sl, lsl #30
      f4:	01290600 			; <UNDEFINED> instruction: 0x01290600
      f8:	00008311 	andeq	r8, r0, r1, lsl r3
      fc:	08230200 	stmdaeq	r3!, {r9}
     100:	0002f90a 	andeq	pc, r2, sl, lsl #18
     104:	012a0600 			; <UNDEFINED> instruction: 0x012a0600
     108:	00008311 	andeq	r8, r0, r1, lsl r3
     10c:	0c230200 	sfmeq	f0, 4, [r3], #-0
     110:	00005f0a 	andeq	r5, r0, sl, lsl #30
     114:	012b0600 			; <UNDEFINED> instruction: 0x012b0600
     118:	00008311 	andeq	r8, r0, r1, lsl r3
     11c:	10230200 	eorne	r0, r3, r0, lsl #4
     120:	0000e80a 	andeq	lr, r0, sl, lsl #16
     124:	012c0600 			; <UNDEFINED> instruction: 0x012c0600
     128:	00008311 	andeq	r8, r0, r1, lsl r3
     12c:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     130:	00525309 	subseq	r5, r2, r9, lsl #6
     134:	11012d06 	tstne	r1, r6, lsl #26
     138:	00000083 	andeq	r0, r0, r3, lsl #1
     13c:	09182302 	ldmdbeq	r8, {r1, r8, r9, sp}
     140:	0052424f 	subseq	r4, r2, pc, asr #4
     144:	11012e06 	tstne	r1, r6, lsl #28
     148:	00000083 	andeq	r0, r0, r3, lsl #1
     14c:	0a1c2302 	beq	708d5c <_Min_Stack_Size+0x70895c>
     150:	000001f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     154:	11012f06 	tstne	r1, r6, lsl #30
     158:	00000083 	andeq	r0, r0, r3, lsl #1
     15c:	0a202302 	beq	808d6c <_Min_Stack_Size+0x80896c>
     160:	00000281 	andeq	r0, r0, r1, lsl #5
     164:	0e013006 	cdpeq	0, 0, cr3, cr1, cr6, {0}
     168:	00000181 	andeq	r0, r0, r1, lsl #3
     16c:	0a242302 	beq	908d7c <_Min_Stack_Size+0x90897c>
     170:	000001f6 	strdeq	r0, [r0], -r6
     174:	11013106 	tstne	r1, r6, lsl #2
     178:	00000083 	andeq	r0, r0, r3, lsl #1
     17c:	01802303 	orreq	r2, r0, r3, lsl #6
     180:	00770b00 	rsbseq	r0, r7, r0, lsl #22
     184:	01910000 	orrseq	r0, r1, r0
     188:	a20c0000 	andge	r0, ip, #0
     18c:	16000000 	strne	r0, [r0], -r0
     190:	00900d00 	addseq	r0, r0, r0, lsl #26
     194:	32060000 	andcc	r0, r6, #0
     198:	00c60301 	sbceq	r0, r6, r1, lsl #6
     19c:	2c080000 	stccs	0, cr0, [r8], {-0}
     1a0:	09014f06 	stmdbeq	r1, {r1, r2, r8, r9, sl, fp, lr}
     1a4:	00000249 	andeq	r0, r0, r9, asr #4
     1a8:	0000420a 	andeq	r4, r0, sl, lsl #4
     1ac:	01510600 	cmpeq	r1, r0, lsl #12
     1b0:	00008311 	andeq	r8, r0, r1, lsl r3
     1b4:	00230200 	eoreq	r0, r3, r0, lsl #4
     1b8:	0000290a 	andeq	r2, r0, sl, lsl #18
     1bc:	01520600 	cmpeq	r2, r0, lsl #12
     1c0:	00008311 	andeq	r8, r0, r1, lsl r3
     1c4:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     1c8:	0001160a 	andeq	r1, r1, sl, lsl #12
     1cc:	01530600 	cmpeq	r3, r0, lsl #12
     1d0:	00008311 	andeq	r8, r0, r1, lsl r3
     1d4:	08230200 	stmdaeq	r3!, {r9}
     1d8:	0000070a 	andeq	r0, r0, sl, lsl #14
     1dc:	01540600 	cmpeq	r4, r0, lsl #12
     1e0:	00008311 	andeq	r8, r0, r1, lsl r3
     1e4:	0c230200 	sfmeq	f0, 4, [r3], #-0
     1e8:	52444909 	subpl	r4, r4, #147456	; 0x24000
     1ec:	01550600 	cmpeq	r5, r0, lsl #12
     1f0:	00008311 	andeq	r8, r0, r1, lsl r3
     1f4:	10230200 	eorne	r0, r3, r0, lsl #4
     1f8:	52444f09 	subpl	r4, r4, #9, 30	; 0x24
     1fc:	01560600 	cmpeq	r6, r0, lsl #12
     200:	00008311 	andeq	r8, r0, r1, lsl r3
     204:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     208:	00008b0a 	andeq	r8, r0, sl, lsl #22
     20c:	01570600 	cmpeq	r7, r0, lsl #12
     210:	00008311 	andeq	r8, r0, r1, lsl r3
     214:	18230200 	stmdane	r3!, {r9}
     218:	00000d0a 	andeq	r0, r0, sl, lsl #26
     21c:	01580600 	cmpeq	r8, r0, lsl #12
     220:	00008311 	andeq	r8, r0, r1, lsl r3
     224:	1c230200 	sfmne	f0, 4, [r3], #-0
     228:	52464109 	subpl	r4, r6, #1073741826	; 0x40000002
     22c:	01590600 	cmpeq	r9, r0, lsl #12
     230:	00025911 	andeq	r5, r2, r1, lsl r9
     234:	20230200 	eorcs	r0, r3, r0, lsl #4
     238:	52524209 	subspl	r4, r2, #-1879048192	; 0x90000000
     23c:	015a0600 	cmpeq	sl, r0, lsl #12
     240:	00008311 	andeq	r8, r0, r1, lsl r3
     244:	28230200 	stmdacs	r3!, {r9}
     248:	00830b00 	addeq	r0, r3, r0, lsl #22
     24c:	02590000 	subseq	r0, r9, #0
     250:	a20c0000 	andge	r0, ip, #0
     254:	01000000 	mrseq	r0, (UNDEF: 0)
     258:	02490400 	subeq	r0, r9, #0, 8
     25c:	570d0000 	strpl	r0, [sp, -r0]
     260:	06000001 	streq	r0, [r0], -r1
     264:	9e03015b 	mcrls	1, 0, r0, cr3, cr11, {2}
     268:	08000001 	stmdaeq	r0, {r0}
     26c:	01890608 	orreq	r0, r9, r8, lsl #12
     270:	00029509 	andeq	r9, r2, r9, lsl #10
     274:	52430900 	subpl	r0, r3, #0, 18
     278:	018b0600 	orreq	r0, fp, r0, lsl #12
     27c:	00008311 	andeq	r8, r0, r1, lsl r3
     280:	00230200 	eoreq	r0, r3, r0, lsl #4
     284:	52534309 	subspl	r4, r3, #603979776	; 0x24000000
     288:	018c0600 	orreq	r0, ip, r0, lsl #12
     28c:	00008311 	andeq	r8, r0, r1, lsl r3
     290:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     294:	01c40d00 	biceq	r0, r4, r0, lsl #26
     298:	8d060000 	stchi	0, cr0, [r6, #-0]
     29c:	026b0301 	rsbeq	r0, fp, #67108864	; 0x4000000
     2a0:	38080000 	stmdacc	r8, {}	; <UNPREDICTABLE>
     2a4:	09019306 	stmdbeq	r1, {r1, r2, r8, r9, ip, pc}
     2a8:	0000038c 	andeq	r0, r0, ip, lsl #7
     2ac:	00524309 	subseq	r4, r2, r9, lsl #6
     2b0:	11019506 	tstne	r1, r6, lsl #10
     2b4:	00000083 	andeq	r0, r0, r3, lsl #1
     2b8:	0a002302 	beq	8ec8 <_Min_Stack_Size+0x8ac8>
     2bc:	000002e5 	andeq	r0, r0, r5, ror #5
     2c0:	11019606 	tstne	r1, r6, lsl #12
     2c4:	00000083 	andeq	r0, r0, r3, lsl #1
     2c8:	0a042302 	beq	108ed8 <_Min_Stack_Size+0x108ad8>
     2cc:	000002a0 	andeq	r0, r0, r0, lsr #5
     2d0:	11019706 	tstne	r1, r6, lsl #14
     2d4:	00000083 	andeq	r0, r0, r3, lsl #1
     2d8:	09082302 	stmdbeq	r8, {r1, r8, r9, sp}
     2dc:	00524943 	subseq	r4, r2, r3, asr #18
     2e0:	11019806 	tstne	r1, r6, lsl #16
     2e4:	00000083 	andeq	r0, r0, r3, lsl #1
     2e8:	0a0c2302 	beq	308ef8 <_Min_Stack_Size+0x308af8>
     2ec:	00000203 	andeq	r0, r0, r3, lsl #4
     2f0:	11019906 	tstne	r1, r6, lsl #18
     2f4:	00000083 	andeq	r0, r0, r3, lsl #1
     2f8:	0a102302 	beq	408f08 <_Min_Stack_Size+0x408b08>
     2fc:	000000c0 	andeq	r0, r0, r0, asr #1
     300:	11019a06 	tstne	r1, r6, lsl #20
     304:	00000083 	andeq	r0, r0, r3, lsl #1
     308:	0a142302 	beq	508f18 <_Min_Stack_Size+0x508b18>
     30c:	00000210 	andeq	r0, r0, r0, lsl r2
     310:	11019b06 	tstne	r1, r6, lsl #22
     314:	00000083 	andeq	r0, r0, r3, lsl #1
     318:	0a182302 	beq	608f28 <_Min_Stack_Size+0x608b28>
     31c:	000003d9 	ldrdeq	r0, [r0], -r9
     320:	11019c06 	tstne	r1, r6, lsl #24
     324:	00000083 	andeq	r0, r0, r3, lsl #1
     328:	0a1c2302 	beq	708f38 <_Min_Stack_Size+0x708b38>
     32c:	00000291 	muleq	r0, r1, r2
     330:	11019d06 	tstne	r1, r6, lsl #26
     334:	00000083 	andeq	r0, r0, r3, lsl #1
     338:	0a202302 	beq	808f48 <_Min_Stack_Size+0x808b48>
     33c:	000002c6 	andeq	r0, r0, r6, asr #5
     340:	11019e06 	tstne	r1, r6, lsl #28
     344:	00000083 	andeq	r0, r0, r3, lsl #1
     348:	0a242302 	beq	908f58 <_Min_Stack_Size+0x908b58>
     34c:	000000d8 	ldrdeq	r0, [r0], -r8
     350:	11019f06 	tstne	r1, r6, lsl #30
     354:	00000083 	andeq	r0, r0, r3, lsl #1
     358:	0a282302 	beq	a08f68 <_Min_Stack_Size+0xa08b68>
     35c:	000001ba 			; <UNDEFINED> instruction: 0x000001ba
     360:	1101a006 	tstne	r1, r6
     364:	00000083 	andeq	r0, r0, r3, lsl #1
     368:	0a2c2302 	beq	b08f78 <_Min_Stack_Size+0xb08b78>
     36c:	00000197 	muleq	r0, r7, r1
     370:	1101a106 	tstne	r1, r6, lsl #2
     374:	00000083 	andeq	r0, r0, r3, lsl #1
     378:	09302302 	ldmdbeq	r0!, {r1, r8, r9, sp}
     37c:	00525343 	subseq	r5, r2, r3, asr #6
     380:	1101a206 	tstne	r1, r6, lsl #4
     384:	00000083 	andeq	r0, r0, r3, lsl #1
     388:	00342302 	eorseq	r2, r4, r2, lsl #6
     38c:	0001640d 	andeq	r6, r1, sp, lsl #8
     390:	01a30600 			; <UNDEFINED> instruction: 0x01a30600
     394:	0002a203 	andeq	sl, r2, r3, lsl #4
     398:	06d00800 	ldrbeq	r0, [r0], r0, lsl #16
     39c:	f50901c0 			; <UNDEFINED> instruction: 0xf50901c0
     3a0:	09000006 	stmdbeq	r0, {r1, r2}
     3a4:	06005254 			; <UNDEFINED> instruction: 0x06005254
     3a8:	831101c2 	tsthi	r1, #-2147483600	; 0x80000030
     3ac:	02000000 	andeq	r0, r0, #0
     3b0:	44090023 	strmi	r0, [r9], #-35	; 0xffffffdd
     3b4:	c3060052 	movwgt	r0, #24658	; 0x6052
     3b8:	00831101 	addeq	r1, r3, r1, lsl #2
     3bc:	23020000 	movwcs	r0, #8192	; 0x2000
     3c0:	52430904 	subpl	r0, r3, #4, 18	; 0x10000
     3c4:	01c40600 	biceq	r0, r4, r0, lsl #12
     3c8:	00008311 	andeq	r8, r0, r1, lsl r3
     3cc:	08230200 	stmdaeq	r3!, {r9}
     3d0:	52534909 	subspl	r4, r3, #147456	; 0x24000
     3d4:	01c50600 	biceq	r0, r5, r0, lsl #12
     3d8:	00008311 	andeq	r8, r0, r1, lsl r3
     3dc:	0c230200 	sfmeq	f0, 4, [r3], #-0
     3e0:	00003d0a 	andeq	r3, r0, sl, lsl #26
     3e4:	01c60600 	biceq	r0, r6, r0, lsl #12
     3e8:	00008311 	andeq	r8, r0, r1, lsl r3
     3ec:	10230200 	eorne	r0, r3, r0, lsl #4
     3f0:	0002b40a 	andeq	fp, r2, sl, lsl #8
     3f4:	01c70600 	biceq	r0, r7, r0, lsl #12
     3f8:	00008311 	andeq	r8, r0, r1, lsl r3
     3fc:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     400:	0000000a 	andeq	r0, r0, sl
     404:	01c80600 	biceq	r0, r8, r0, lsl #12
     408:	00008311 	andeq	r8, r0, r1, lsl r3
     40c:	18230200 	stmdane	r3!, {r9}
     410:	0002260a 	andeq	r2, r2, sl, lsl #12
     414:	01c90600 	biceq	r0, r9, r0, lsl #12
     418:	00008311 	andeq	r8, r0, r1, lsl r3
     41c:	1c230200 	sfmne	f0, 4, [r3], #-0
     420:	0002990a 	andeq	r9, r2, sl, lsl #18
     424:	01ca0600 	biceq	r0, sl, r0, lsl #12
     428:	00008311 	andeq	r8, r0, r1, lsl r3
     42c:	20230200 	eorcs	r0, r3, r0, lsl #4
     430:	52505709 	subspl	r5, r0, #2359296	; 0x240000
     434:	01cb0600 	biceq	r0, fp, r0, lsl #12
     438:	00008311 	andeq	r8, r0, r1, lsl r3
     43c:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
     440:	52535309 	subspl	r5, r3, #603979776	; 0x24000000
     444:	01cc0600 	biceq	r0, ip, r0, lsl #12
     448:	00008311 	andeq	r8, r0, r1, lsl r3
     44c:	28230200 	stmdacs	r3!, {r9}
     450:	0002de0a 	andeq	sp, r2, sl, lsl #28
     454:	01cd0600 	biceq	r0, sp, r0, lsl #12
     458:	00008311 	andeq	r8, r0, r1, lsl r3
     45c:	2c230200 	sfmcs	f0, 4, [r3], #-0
     460:	0001a10a 	andeq	sl, r1, sl, lsl #2
     464:	01ce0600 	biceq	r0, lr, r0, lsl #12
     468:	00008311 	andeq	r8, r0, r1, lsl r3
     46c:	30230200 	eorcc	r0, r3, r0, lsl #4
     470:	00001d0a 	andeq	r1, r0, sl, lsl #26
     474:	01cf0600 	biceq	r0, pc, r0, lsl #12
     478:	00008311 	andeq	r8, r0, r1, lsl r3
     47c:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
     480:	0000b30a 	andeq	fp, r0, sl, lsl #6
     484:	01d00600 	bicseq	r0, r0, r0, lsl #12
     488:	00008311 	andeq	r8, r0, r1, lsl r3
     48c:	38230200 	stmdacc	r3!, {r9}
     490:	0001dd0a 	andeq	sp, r1, sl, lsl #26
     494:	01d10600 	bicseq	r0, r1, r0, lsl #12
     498:	00008311 	andeq	r8, r0, r1, lsl r3
     49c:	3c230200 	sfmcc	f0, 4, [r3], #-0
     4a0:	0001a60a 	andeq	sl, r1, sl, lsl #12
     4a4:	01d20600 	bicseq	r0, r2, r0, lsl #12
     4a8:	00008311 	andeq	r8, r0, r1, lsl r3
     4ac:	40230200 	eormi	r0, r3, r0, lsl #4
     4b0:	0001310a 	andeq	r3, r1, sl, lsl #2
     4b4:	01d30600 	bicseq	r0, r3, r0, lsl #12
     4b8:	00008311 	andeq	r8, r0, r1, lsl r3
     4bc:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
     4c0:	0000cf0a 	andeq	ip, r0, sl, lsl #30
     4c4:	01d40600 	bicseq	r0, r4, r0, lsl #12
     4c8:	00008311 	andeq	r8, r0, r1, lsl r3
     4cc:	48230200 	stmdami	r3!, {r9}
     4d0:	00023a0a 	andeq	r3, r2, sl, lsl #20
     4d4:	01d50600 	bicseq	r0, r5, r0, lsl #12
     4d8:	0000770c 	andeq	r7, r0, ip, lsl #14
     4dc:	4c230200 	sfmmi	f0, 4, [r3], #-0
     4e0:	00027b0a 	andeq	r7, r2, sl, lsl #22
     4e4:	01d60600 	bicseq	r0, r6, r0, lsl #12
     4e8:	00008311 	andeq	r8, r0, r1, lsl r3
     4ec:	50230200 	eorpl	r0, r3, r0, lsl #4
     4f0:	0002c00a 	andeq	ip, r2, sl
     4f4:	01d70600 	bicseq	r0, r7, r0, lsl #12
     4f8:	00008311 	andeq	r8, r0, r1, lsl r3
     4fc:	54230200 	strtpl	r0, [r3], #-512	; 0xfffffe00
     500:	0003070a 	andeq	r0, r3, sl, lsl #14
     504:	01d80600 	bicseq	r0, r8, r0, lsl #12
     508:	00008311 	andeq	r8, r0, r1, lsl r3
     50c:	58230200 	stmdapl	r3!, {r9}
     510:	0000370a 	andeq	r3, r0, sl, lsl #14
     514:	01d90600 	bicseq	r0, r9, r0, lsl #12
     518:	00008311 	andeq	r8, r0, r1, lsl r3
     51c:	5c230200 	sfmpl	f0, 4, [r3], #-0
     520:	0000c90a 	andeq	ip, r0, sl, lsl #18
     524:	01da0600 	bicseq	r0, sl, r0, lsl #12
     528:	00008311 	andeq	r8, r0, r1, lsl r3
     52c:	60230200 	eorvs	r0, r3, r0, lsl #4
     530:	00014a0a 	andeq	r4, r1, sl, lsl #20
     534:	01db0600 	bicseq	r0, fp, r0, lsl #12
     538:	00008311 	andeq	r8, r0, r1, lsl r3
     53c:	64230200 	strtvs	r0, [r3], #-512	; 0xfffffe00
     540:	0001d00a 	andeq	sp, r1, sl
     544:	01dc0600 	bicseq	r0, ip, r0, lsl #12
     548:	00008311 	andeq	r8, r0, r1, lsl r3
     54c:	68230200 	stmdavs	r3!, {r9}
     550:	00022d0a 	andeq	r2, r2, sl, lsl #26
     554:	01dd0600 	bicseq	r0, sp, r0, lsl #12
     558:	00008311 	andeq	r8, r0, r1, lsl r3
     55c:	6c230200 	sfmvs	f0, 4, [r3], #-0
     560:	0002a50a 	andeq	sl, r2, sl, lsl #10
     564:	01de0600 	bicseq	r0, lr, r0, lsl #12
     568:	00008311 	andeq	r8, r0, r1, lsl r3
     56c:	70230200 	eorvc	r0, r3, r0, lsl #4
     570:	0002eb0a 	andeq	lr, r2, sl, lsl #22
     574:	01df0600 	bicseq	r0, pc, r0, lsl #12
     578:	00008311 	andeq	r8, r0, r1, lsl r3
     57c:	74230200 	strtvc	r0, [r3], #-512	; 0xfffffe00
     580:	0001ac0a 	andeq	sl, r1, sl, lsl #24
     584:	01e00600 	mvneq	r0, r0, lsl #12
     588:	00008311 	andeq	r8, r0, r1, lsl r3
     58c:	78230200 	stmdavc	r3!, {r9}
     590:	0001fc0a 	andeq	pc, r1, sl, lsl #24
     594:	01e10600 	mvneq	r0, r0, lsl #12
     598:	00008311 	andeq	r8, r0, r1, lsl r3
     59c:	7c230200 	sfmvc	f0, 4, [r3], #-0
     5a0:	00028a0a 	andeq	r8, r2, sl, lsl #20
     5a4:	01e20600 	mvneq	r0, r0, lsl #12
     5a8:	00008311 	andeq	r8, r0, r1, lsl r3
     5ac:	80230300 	eorhi	r0, r3, r0, lsl #6
     5b0:	02ce0a01 	sbceq	r0, lr, #4096	; 0x1000
     5b4:	e3060000 	movw	r0, #24576	; 0x6000
     5b8:	00831101 	addeq	r1, r3, r1, lsl #2
     5bc:	23030000 	movwcs	r0, #12288	; 0x3000
     5c0:	140a0184 	strne	r0, [sl], #-388	; 0xfffffe7c
     5c4:	06000003 	streq	r0, [r0], -r3
     5c8:	831101e4 	tsthi	r1, #228, 2	; 0x39
     5cc:	03000000 	movweq	r0, #0
     5d0:	0a018823 	beq	62664 <_Min_Stack_Size+0x62264>
     5d4:	00000170 	andeq	r0, r0, r0, ror r1
     5d8:	1101e506 	tstne	r1, r6, lsl #10
     5dc:	00000083 	andeq	r0, r0, r3, lsl #1
     5e0:	018c2303 	orreq	r2, ip, r3, lsl #6
     5e4:	0000e10a 	andeq	lr, r0, sl, lsl #2
     5e8:	01e60600 	mvneq	r0, r0, lsl #12
     5ec:	00008311 	andeq	r8, r0, r1, lsl r3
     5f0:	90230300 	eorls	r0, r3, r0, lsl #6
     5f4:	01500a01 	cmpeq	r0, r1, lsl #20
     5f8:	e7060000 	str	r0, [r6, -r0]
     5fc:	00831101 	addeq	r1, r3, r1, lsl #2
     600:	23030000 	movwcs	r0, #12288	; 0x3000
     604:	d60a0194 			; <UNDEFINED> instruction: 0xd60a0194
     608:	06000001 	streq	r0, [r0], -r1
     60c:	831101e8 	tsthi	r1, #232, 2	; 0x3a
     610:	03000000 	movweq	r0, #0
     614:	0a019823 	beq	666a8 <_Min_Stack_Size+0x662a8>
     618:	00000233 	andeq	r0, r0, r3, lsr r2
     61c:	1101e906 	tstne	r1, r6, lsl #18
     620:	00000083 	andeq	r0, r0, r3, lsl #1
     624:	019c2303 	orrseq	r2, ip, r3, lsl #6
     628:	0001080a 	andeq	r0, r1, sl, lsl #16
     62c:	01ea0600 	mvneq	r0, r0, lsl #12
     630:	00008311 	andeq	r8, r0, r1, lsl r3
     634:	a0230300 	eorge	r0, r3, r0, lsl #6
     638:	01770a01 	cmneq	r7, r1, lsl #20
     63c:	eb060000 	bl	180644 <_Min_Stack_Size+0x180244>
     640:	00831101 	addeq	r1, r3, r1, lsl #2
     644:	23030000 	movwcs	r0, #12288	; 0x3000
     648:	e90a01a4 	stmdb	sl, {r2, r5, r7, r8}
     64c:	06000001 	streq	r0, [r0], -r1
     650:	831101ec 	tsthi	r1, #236, 2	; 0x3b
     654:	03000000 	movweq	r0, #0
     658:	0a01a823 	beq	6a6ec <_Min_Stack_Size+0x6a2ec>
     65c:	0000024f 	andeq	r0, r0, pc, asr #4
     660:	1101ed06 	tstne	r1, r6, lsl #26
     664:	00000083 	andeq	r0, r0, r3, lsl #1
     668:	01ac2303 			; <UNDEFINED> instruction: 0x01ac2303
     66c:	0002b90a 	andeq	fp, r2, sl, lsl #18
     670:	01ee0600 	mvneq	r0, r0, lsl #12
     674:	00008311 	andeq	r8, r0, r1, lsl r3
     678:	b0230300 	eorlt	r0, r3, r0, lsl #6
     67c:	03000a01 	movweq	r0, #2561	; 0xa01
     680:	ef060000 	svc	0x00060000
     684:	00831101 	addeq	r1, r3, r1, lsl #2
     688:	23030000 	movwcs	r0, #12288	; 0x3000
     68c:	220a01b4 	andcs	r0, sl, #180, 2	; 0x2d
     690:	06000000 	streq	r0, [r0], -r0
     694:	831101f0 	tsthi	r1, #240, 2	; 0x3c
     698:	03000000 	movweq	r0, #0
     69c:	0a01b823 	beq	6e730 <_Min_Stack_Size+0x6e330>
     6a0:	000000ac 	andeq	r0, r0, ip, lsr #1
     6a4:	1101f106 	tstne	r1, r6, lsl #2	; <UNPREDICTABLE>
     6a8:	00000083 	andeq	r0, r0, r3, lsl #1
     6ac:	01bc2303 			; <UNDEFINED> instruction: 0x01bc2303
     6b0:	0001250a 	andeq	r2, r1, sl, lsl #10
     6b4:	01f20600 	mvnseq	r0, r0, lsl #12
     6b8:	00008311 	andeq	r8, r0, r1, lsl r3
     6bc:	c0230300 	eorgt	r0, r3, r0, lsl #6
     6c0:	01b30a01 			; <UNDEFINED> instruction: 0x01b30a01
     6c4:	f3060000 	vhadd.u8	d0, d6, d0
     6c8:	00831101 	addeq	r1, r3, r1, lsl #2
     6cc:	23030000 	movwcs	r0, #12288	; 0x3000
     6d0:	300a01c4 	andcc	r0, sl, r4, asr #3
     6d4:	06000000 	streq	r0, [r0], -r0
     6d8:	831101f4 	tsthi	r1, #244, 2	; 0x3d
     6dc:	03000000 	movweq	r0, #0
     6e0:	0a01c823 	beq	72774 <_Min_Stack_Size+0x72374>
     6e4:	000000b9 	strheq	r0, [r0], -r9
     6e8:	1101f506 	tstne	r1, r6, lsl #10	; <UNPREDICTABLE>
     6ec:	00000083 	andeq	r0, r0, r3, lsl #1
     6f0:	01cc2303 	biceq	r2, ip, r3, lsl #6
     6f4:	00670d00 	rsbeq	r0, r7, r0, lsl #26
     6f8:	f6060000 			; <UNDEFINED> instruction: 0xf6060000
     6fc:	03990301 	orrseq	r0, r9, #67108864	; 0x4000000
     700:	010e0000 	mrseq	r0, (UNDEF: 14)
     704:	0000031b 	andeq	r0, r0, fp, lsl r3
     708:	01050e02 	tsteq	r5, r2, lsl #28
     70c:	00000096 	muleq	r0, r6, r0
     710:	080009e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, fp}
     714:	08000a68 	stmdaeq	r0, {r3, r5, r6, r9, fp}
     718:	00000000 	andeq	r0, r0, r0
     71c:	0007f401 	andeq	pc, r7, r1, lsl #8
     720:	09f60f00 	ldmibeq	r6!, {r8, r9, sl, fp}^
     724:	0a0c0800 	beq	30272c <_Min_Stack_Size+0x30232c>
     728:	07430800 	strbeq	r0, [r3, -r0, lsl #16]
     72c:	2c100000 	ldccs	0, cr0, [r0], {-0}
     730:	02000001 	andeq	r0, r0, #1
     734:	00770311 	rsbseq	r0, r7, r1, lsl r3
     738:	00280000 	eoreq	r0, r8, r0
     73c:	00200000 	eoreq	r0, r0, r0
     740:	0f000000 	svceq	0x00000000
     744:	08000a0c 	stmdaeq	r0, {r2, r3, r9, fp}
     748:	08000a20 	stmdaeq	r0, {r5, r9, fp}
     74c:	00000765 	andeq	r0, r0, r5, ror #14
     750:	00012c10 	andeq	r2, r1, r0, lsl ip
     754:	16110200 	ldrne	r0, [r1], -r0, lsl #4
     758:	00000077 	andeq	r0, r0, r7, ror r0
     75c:	0000006c 	andeq	r0, r0, ip, rrx
     760:	00000064 	andeq	r0, r0, r4, rrx
     764:	0a200f00 	beq	80436c <_Min_Stack_Size+0x803f6c>
     768:	0a320800 	beq	c82770 <_Min_Stack_Size+0xc82370>
     76c:	07870800 	streq	r0, [r7, r0, lsl #16]
     770:	2c100000 	ldccs	0, cr0, [r0], {-0}
     774:	02000001 	andeq	r0, r0, #1
     778:	00770312 	rsbseq	r0, r7, r2, lsl r3
     77c:	00ae0000 	adceq	r0, lr, r0
     780:	00a80000 	adceq	r0, r8, r0
     784:	0f000000 	svceq	0x00000000
     788:	08000a32 	stmdaeq	r0, {r1, r4, r5, r9, fp}
     78c:	08000a42 	stmdaeq	r0, {r1, r6, r9, fp}
     790:	000007a9 	andeq	r0, r0, r9, lsr #15
     794:	00012c10 	andeq	r2, r1, r0, lsl ip
     798:	16120200 	ldrne	r0, [r2], -r0, lsl #4
     79c:	00000077 	andeq	r0, r0, r7, ror r0
     7a0:	000000e6 	andeq	r0, r0, r6, ror #1
     7a4:	000000e0 	andeq	r0, r0, r0, ror #1
     7a8:	09051100 	stmdbeq	r5, {r8, ip}
     7ac:	0a460000 	beq	11807b4 <_Min_Stack_Size+0x11803b4>
     7b0:	46010800 	strmi	r0, [r1], -r0, lsl #16
     7b4:	4808000a 	stmdami	r8, {r1, r3}
     7b8:	0208000a 	andeq	r0, r8, #10
     7bc:	ec120315 	ldc	3, cr0, [r2], {21}
     7c0:	83080009 	movwhi	r0, #32777	; 0x8009
     7c4:	d1000008 	tstle	r0, r8
     7c8:	13000007 	movwne	r0, #7
     7cc:	31015001 	tstcc	r1, r1
     7d0:	0a461400 	beq	11857d8 <_Min_Stack_Size+0x11853d8>
     7d4:	090f0800 	stmdbeq	pc, {fp}	; <UNPREDICTABLE>
     7d8:	4e140000 	cdpmi	0, 1, cr0, cr4, cr0, {0}
     7dc:	1d08000a 	stcne	0, cr0, [r8, #-40]	; 0xffffffd8
     7e0:	15000009 	strne	r0, [r0, #-9]
     7e4:	08000a54 	stmdaeq	r0, {r2, r4, r6, r9, fp}
     7e8:	000007f4 	strdeq	r0, [r0], -r4
     7ec:	02500113 	subseq	r0, r0, #-1073741820	; 0xc0000004
     7f0:	00000074 	andeq	r0, r0, r4, ror r0
     7f4:	01910116 	orrseq	r0, r1, r6, lsl r1
     7f8:	0a020000 	beq	80800 <_Min_Stack_Size+0x80400>
     7fc:	03580106 	cmpeq	r8, #-2147483647	; 0x80000001
     800:	03640800 	cmneq	r4, #0, 16
     804:	7d020800 	stcvc	8, cr0, [r2, #-0]
     808:	08230100 	stmdaeq	r3!, {r8}
     80c:	0b170000 	bleq	5c0814 <_Min_Stack_Size+0x5c0414>
     810:	02000002 	andeq	r0, r0, #2
     814:	0077150a 	rsbseq	r1, r7, sl, lsl #10
     818:	011b0000 	tsteq	fp, r0
     81c:	01150000 	tsteq	r5, r0
     820:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
     824:	00024401 	andeq	r4, r2, r1, lsl #8
     828:	1c080200 	sfmne	f0, 4, [r8], {-0}
     82c:	00035601 	andeq	r5, r3, r1, lsl #12
     830:	00035808 	andeq	r5, r3, r8, lsl #16
     834:	007d0208 	rsbseq	r0, sp, r8, lsl #4
     838:	28011901 	stmdacs	r1, {r0, r8, fp, ip}
     83c:	02000008 	andeq	r0, r0, #8
     840:	1a011c07 	bne	47864 <_Min_Stack_Size+0x47464>
     844:	0002d501 	andeq	sp, r2, r1, lsl #10
     848:	06a00100 	strteq	r0, [r0], r0, lsl #2
     84c:	0800030c 	stmdaeq	r0, {r2, r3, r8, r9}
     850:	08000354 	stmdaeq	r0, {r2, r4, r6, r8, r9}
     854:	01007d02 	tsteq	r0, r2, lsl #26
     858:	00000883 	andeq	r0, r0, r3, lsl #17
     85c:	0100691b 	tsteq	r0, fp, lsl r9
     860:	00640ca1 	rsbeq	r0, r4, r1, lsr #25
     864:	014e0000 	mrseq	r0, (UNDEF: 78)
     868:	01460000 	mrseq	r0, (UNDEF: 70)
     86c:	741b0000 	ldrvc	r0, [fp], #-0
     870:	0100706d 	tsteq	r0, sp, rrx
     874:	00770ca2 	rsbseq	r0, r7, r2, lsr #25
     878:	01960000 	orrseq	r0, r6, r0
     87c:	01920000 	orrseq	r0, r2, r0
     880:	1c000000 	stcne	0, cr0, [r0], {-0}
     884:	0000a301 	andeq	sl, r0, r1, lsl #6
     888:	08480100 	stmdaeq	r8, {r8}^
     88c:	00003001 	andeq	r3, r0, r1
     890:	0001e800 	andeq	lr, r1, r0, lsl #16
     894:	00030c08 	andeq	r0, r3, r8, lsl #24
     898:	007d0208 	rsbseq	r0, sp, r8, lsl #4
     89c:	0008dc01 	andeq	sp, r8, r1, lsl #24
     8a0:	01e21700 	mvneq	r1, r0, lsl #14
     8a4:	48010000 	stmdami	r1, {}	; <UNPREDICTABLE>
     8a8:	00003018 	andeq	r3, r0, r8, lsl r0
     8ac:	0001bd00 	andeq	fp, r1, r0, lsl #26
     8b0:	0001b500 	andeq	fp, r1, r0, lsl #10
     8b4:	00691b00 	rsbeq	r1, r9, r0, lsl #22
     8b8:	640c4901 	strvs	r4, [ip], #-2305	; 0xfffff6ff
     8bc:	1b000000 	blne	8c4 <_Min_Stack_Size+0x4c4>
     8c0:	f7000002 			; <UNDEFINED> instruction: 0xf7000002
     8c4:	1b000001 	blne	8d0 <_Min_Stack_Size+0x4d0>
     8c8:	00706d74 	rsbseq	r6, r0, r4, ror sp
     8cc:	770c4a01 	strvc	r4, [ip, -r1, lsl #20]
     8d0:	5a000000 	bpl	8d8 <_Min_Stack_Size+0x4d8>
     8d4:	36000003 	strcc	r0, [r0], -r3
     8d8:	00000003 	andeq	r0, r0, r3
     8dc:	011e0116 	tsteq	lr, r6, lsl r1
     8e0:	18010000 	stmdane	r1, {}	; <UNPREDICTABLE>
     8e4:	01500106 	cmpeq	r0, r6, lsl #2
     8e8:	01e80800 	mvneq	r0, r0, lsl #16
     8ec:	7d020800 	stcvc	8, cr0, [r2, #-0]
     8f0:	09050100 	stmdbeq	r5, {r8}
     8f4:	0d1d0000 	ldceq	0, cr0, [sp, #-0]
     8f8:	01000003 	tsteq	r0, r3
     8fc:	00511518 	subseq	r1, r1, r8, lsl r5
     900:	50010000 	andpl	r0, r1, r0
     904:	02191e00 	andseq	r1, r9, #0, 28
     908:	b4030000 	strlt	r0, [r3], #-0
     90c:	1f031604 	svcne	0x00031604
     910:	00730101 	rsbseq	r0, r3, r1, lsl #2
     914:	00730000 	rsbseq	r0, r3, r0
     918:	24070000 	strcs	r0, [r7], #-0
     91c:	01011f06 	tsteq	r1, r6, lsl #30
     920:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     924:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     928:	00063f07 	andeq	r3, r6, r7, lsl #30
     92c:	00000eab 	andeq	r0, r0, fp, lsr #29
     930:	02170002 	andseq	r0, r7, #2
     934:	01040000 	mrseq	r0, (UNDEF: 4)
     938:	00000320 	andeq	r0, r0, r0, lsr #6
     93c:	0007500c 	andeq	r5, r7, ip
     940:	0003b300 	andeq	fp, r3, r0, lsl #6
     944:	00036400 	andeq	r6, r3, r0, lsl #8
     948:	00081808 	andeq	r1, r8, r8, lsl #16
     94c:	00043308 	andeq	r3, r4, r8, lsl #6
     950:	06010200 	streq	r0, [r1], -r0, lsl #4
     954:	00000258 	andeq	r0, r0, r8, asr r2
     958:	71050202 	tstvc	r5, r2, lsl #4
     95c:	02000002 	andeq	r0, r0, #2
     960:	00820504 	addeq	r0, r2, r4, lsl #10
     964:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
     968:	00007d05 	andeq	r7, r0, r5, lsl #26
     96c:	02f10300 	rscseq	r0, r1, #0, 6
     970:	2e030000 	cdpcs	0, 0, cr0, cr3, cr0, {0}
     974:	00005718 	andeq	r5, r0, r8, lsl r7
     978:	00410400 	subeq	r0, r1, r0, lsl #8
     97c:	41050000 	mrsmi	r0, (UNDEF: 5)
     980:	02000000 	andeq	r0, r0, #0
     984:	02560801 	subseq	r0, r6, #65536	; 0x10000
     988:	ff030000 			; <UNDEFINED> instruction: 0xff030000
     98c:	03000000 	movweq	r0, #0
     990:	006f1931 	rsbeq	r1, pc, r1, lsr r9	; <UNPREDICTABLE>
     994:	5e040000 	cdppl	0, 0, cr0, cr4, cr0, {0}
     998:	02000000 	andeq	r0, r0, #0
     99c:	017e0702 	cmneq	lr, r2, lsl #14
     9a0:	ab030000 	blge	c09a8 <_Min_Stack_Size+0xc05a8>
     9a4:	03000002 	movweq	r0, #2
     9a8:	00871934 	addeq	r1, r7, r4, lsr r9
     9ac:	76040000 	strvc	r0, [r4], -r0
     9b0:	02000000 	andeq	r0, r0, #0
     9b4:	004d0704 	subeq	r0, sp, r4, lsl #14
     9b8:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
     9bc:	00004807 	andeq	r4, r0, r7, lsl #16
     9c0:	05040600 	streq	r0, [r4, #-1536]	; 0xfffffa00
     9c4:	00746e69 	rsbseq	r6, r4, r9, ror #28
     9c8:	00009504 	andeq	r9, r0, r4, lsl #10
     9cc:	07040200 	streq	r0, [r4, -r0, lsl #4]
     9d0:	00000052 	andeq	r0, r0, r2, asr r0
     9d4:	00070503 	andeq	r0, r7, r3, lsl #10
     9d8:	0f1a0400 	svceq	0x001a0400
     9dc:	000000b4 	strheq	r0, [r0], -r4
     9e0:	00ba0407 	adcseq	r0, sl, r7, lsl #8
     9e4:	01080000 	mrseq	r0, (UNDEF: 8)
     9e8:	000000c6 	andeq	r0, r0, r6, asr #1
     9ec:	00004109 	andeq	r4, r0, r9, lsl #2
     9f0:	080a0000 	stmdaeq	sl, {}	; <UNPREDICTABLE>
     9f4:	1b091b04 	blne	24760c <_Min_Stack_Size+0x24720c>
     9f8:	0b000001 	bleq	a04 <_Min_Stack_Size+0x604>
     9fc:	00000457 	andeq	r0, r0, r7, asr r4
     a00:	410b1c04 	tstmi	fp, r4, lsl #24
     a04:	02000000 	andeq	r0, r0, #0
     a08:	5f0b0023 	svcpl	0x000b0023
     a0c:	04000008 	streq	r0, [r0], #-8
     a10:	00410b1d 	subeq	r0, r1, sp, lsl fp
     a14:	23020000 	movwcs	r0, #8192	; 0x2000
     a18:	04d30b01 	ldrbeq	r0, [r3], #2817	; 0xb01
     a1c:	1e040000 	cdpne	0, 0, cr0, cr4, cr0, {0}
     a20:	00005e0c 	andeq	r5, r0, ip, lsl #28
     a24:	02230200 	eoreq	r0, r3, #0, 4
     a28:	0003eb0b 	andeq	lr, r3, fp, lsl #22
     a2c:	0c1f0400 	cfldrseq	mvf0, [pc], {-0}
     a30:	0000005e 	andeq	r0, r0, lr, asr r0
     a34:	0b042302 	bleq	109644 <_Min_Stack_Size+0x109244>
     a38:	00000842 	andeq	r0, r0, r2, asr #16
     a3c:	5e0c2004 	cdppl	0, 0, cr2, cr12, cr4, {0}
     a40:	02000000 	andeq	r0, r0, #0
     a44:	03000623 	movweq	r0, #1571	; 0x623
     a48:	000008d7 	ldrdeq	r0, [r0], -r7
     a4c:	c6022104 	strgt	r2, [r2], -r4, lsl #2
     a50:	0c000000 	stceq	0, cr0, [r0], {-0}
     a54:	00250105 	eoreq	r0, r5, r5, lsl #2
     a58:	58050000 	stmdapl	r5, {}	; <UNPREDICTABLE>
     a5c:	00029e01 	andeq	r9, r2, r1, lsl #28
     a60:	082e0d00 	stmdaeq	lr!, {r8, sl, fp}
     a64:	0d720000 	ldcleq	0, cr0, [r2, #-0]
     a68:	000004da 	ldrdeq	r0, [r0], -sl
     a6c:	06e30d74 			; <UNDEFINED> instruction: 0x06e30d74
     a70:	0d750000 	ldcleq	0, cr0, [r5, #-0]
     a74:	0000090f 	andeq	r0, r0, pc, lsl #18
     a78:	04310d76 	ldrteq	r0, [r1], #-3446	; 0xfffff28a
     a7c:	0d7b0000 	ldcleq	0, cr0, [fp, #-0]
     a80:	000008fd 	strdeq	r0, [r0], -sp
     a84:	04b70d7c 	ldrteq	r0, [r7], #3452	; 0xd7c
     a88:	0d7e0000 	ldcleq	0, cr0, [lr, #-0]
     a8c:	000008a3 	andeq	r0, r0, r3, lsr #17
     a90:	06bf0e7f 			; <UNDEFINED> instruction: 0x06bf0e7f
     a94:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
     a98:	000006fc 	strdeq	r0, [r0], -ip
     a9c:	04ff0e01 	ldrbteq	r0, [pc], #3585	; aa4 <_Min_Stack_Size+0x6a4>
     aa0:	0e020000 	cdpeq	0, 0, cr0, cr2, cr0, {0}
     aa4:	000005e0 	andeq	r0, r0, r0, ror #11
     aa8:	04720e03 	ldrbteq	r0, [r2], #-3587	; 0xfffff1fd
     aac:	0e040000 	cdpeq	0, 0, cr0, cr4, cr0, {0}
     ab0:	000004ca 	andeq	r0, r0, sl, asr #9
     ab4:	04870e05 	streq	r0, [r7], #3589	; 0xe05
     ab8:	0e060000 	cdpeq	0, 0, cr0, cr6, cr0, {0}
     abc:	00000854 	andeq	r0, r0, r4, asr r8
     ac0:	060a0e07 	streq	r0, [sl], -r7, lsl #28
     ac4:	0e080000 	cdpeq	0, 0, cr0, cr8, cr0, {0}
     ac8:	00000991 	muleq	r0, r1, r9
     acc:	06f10e09 	ldrbteq	r0, [r1], r9, lsl #28
     ad0:	0e0a0000 	cdpeq	0, 0, cr0, cr10, cr0, {0}
     ad4:	00000686 	andeq	r0, r0, r6, lsl #13
     ad8:	04440e0b 	strbeq	r0, [r4], #-3595	; 0xfffff1f5
     adc:	0e0c0000 	cdpeq	0, 0, cr0, cr12, cr0, {0}
     ae0:	0000073d 	andeq	r0, r0, sp, lsr r7
     ae4:	05460e0d 	strbeq	r0, [r6, #-3597]	; 0xfffff1f3
     ae8:	0e0e0000 	cdpeq	0, 0, cr0, cr14, cr0, {0}
     aec:	00000966 	andeq	r0, r0, r6, ror #18
     af0:	06560e0f 	ldrbeq	r0, [r6], -pc, lsl #28
     af4:	0e100000 	cdpeq	0, 1, cr0, cr0, cr0, {0}
     af8:	00000411 	andeq	r0, r0, r1, lsl r4
     afc:	06150e11 			; <UNDEFINED> instruction: 0x06150e11
     b00:	0e120000 	cdpeq	0, 1, cr0, cr2, cr0, {0}
     b04:	000008f1 	strdeq	r0, [r0], -r1
     b08:	09f20e13 	ldmibeq	r2!, {r0, r1, r4, r9, sl, fp}^
     b0c:	0e140000 	cdpeq	0, 1, cr0, cr4, cr0, {0}
     b10:	00000980 	andeq	r0, r0, r0, lsl #19
     b14:	05680e15 	strbeq	r0, [r8, #-3605]!	; 0xfffff1eb
     b18:	0e160000 	cdpeq	0, 1, cr0, cr6, cr0, {0}
     b1c:	00000936 	andeq	r0, r0, r6, lsr r9
     b20:	04070e17 	streq	r0, [r7], #-3607	; 0xfffff1e9
     b24:	0e190000 	cdpeq	0, 1, cr0, cr9, cr0, {0}
     b28:	000006b4 			; <UNDEFINED> instruction: 0x000006b4
     b2c:	03e00e1a 	mvneq	r0, #416	; 0x1a0
     b30:	0e1b0000 	cdpeq	0, 1, cr0, cr11, cr0, {0}
     b34:	000008b6 			; <UNDEFINED> instruction: 0x000008b6
     b38:	067c0e1c 			; <UNDEFINED> instruction: 0x067c0e1c
     b3c:	0e1d0000 	cdpeq	0, 1, cr0, cr13, cr0, {0}
     b40:	0000043a 	andeq	r0, r0, sl, lsr r4
     b44:	075e0e1e 	smmlaeq	lr, lr, lr, r0
     b48:	0e1f0000 	cdpeq	0, 1, cr0, cr15, cr0, {0}
     b4c:	0000088a 	andeq	r0, r0, sl, lsl #17
     b50:	061f0e20 	ldreq	r0, [pc], -r0, lsr #28
     b54:	0e210000 	cdpeq	0, 2, cr0, cr1, cr0, {0}
     b58:	00000424 	andeq	r0, r0, r4, lsr #8
     b5c:	05320e22 	ldreq	r0, [r2, #-3618]!	; 0xfffff1de
     b60:	0e230000 	cdpeq	0, 2, cr0, cr3, cr0, {0}
     b64:	0000094d 	andeq	r0, r0, sp, asr #18
     b68:	08160e24 	ldmdaeq	r6, {r2, r5, r9, sl, fp}
     b6c:	0e250000 	cdpeq	0, 2, cr0, cr5, cr0, {0}
     b70:	000005c1 	andeq	r0, r0, r1, asr #11
     b74:	09dc0e26 	ldmibeq	ip, {r1, r2, r5, r9, sl, fp}^
     b78:	0e270000 	cdpeq	0, 2, cr0, cr7, cr0, {0}
     b7c:	00000492 	muleq	r0, r2, r4
     b80:	078f0e28 	streq	r0, [pc, r8, lsr #28]
     b84:	0e290000 	cdpeq	0, 2, cr0, cr9, cr0, {0}
     b88:	000007f1 	strdeq	r0, [r0], -r1
     b8c:	053c0e2a 	ldreq	r0, [ip, #-3626]!	; 0xfffff1d6
     b90:	0e2b0000 	cdpeq	0, 2, cr0, cr11, cr0, {0}
     b94:	0000095c 	andeq	r0, r0, ip, asr r9
     b98:	07330e2c 	ldreq	r0, [r3, -ip, lsr #28]!
     b9c:	0e2e0000 	cdpeq	0, 2, cr0, cr14, cr0, {0}
     ba0:	00000631 	andeq	r0, r0, r1, lsr r6
     ba4:	06690e2f 	strbteq	r0, [r9], -pc, lsr #28
     ba8:	0e320000 	cdpeq	0, 3, cr0, cr2, cr0, {0}
     bac:	000009c9 	andeq	r0, r0, r9, asr #19
     bb0:	07200e33 			; <UNDEFINED> instruction: 0x07200e33
     bb4:	0e340000 	cdpeq	0, 3, cr0, cr4, cr0, {0}
     bb8:	00000516 	andeq	r0, r0, r6, lsl r5
     bbc:	08770e35 	ldmdaeq	r7!, {r0, r2, r4, r5, r9, sl, fp}^
     bc0:	0e360000 	cdpeq	0, 3, cr0, cr6, cr0, {0}
     bc4:	00000648 	andeq	r0, r0, r8, asr #12
     bc8:	ae030038 	mcrge	0, 0, r0, cr3, cr8, {1}
     bcc:	05000005 	streq	r0, [r0, #-5]
     bd0:	01270398 			; <UNDEFINED> instruction: 0x01270398
     bd4:	040f0000 	streq	r0, [pc], #-0	; bdc <_Min_Stack_Size+0x7dc>
     bd8:	0984020e 	stmibeq	r4, {r1, r2, r3, r9}
     bdc:	00000382 	andeq	r0, r0, r2, lsl #7
     be0:	0005110b 	andeq	r1, r5, fp, lsl #2
     be4:	11860200 	orrne	r0, r6, r0, lsl #4
     be8:	00000392 	muleq	r0, r2, r3
     bec:	0b002302 	bleq	97fc <_Min_Stack_Size+0x93fc>
     bf0:	000007ab 	andeq	r0, r0, fp, lsr #15
     bf4:	97118702 	ldrls	r8, [r1, -r2, lsl #14]
     bf8:	02000003 	andeq	r0, r0, #3
     bfc:	480b2023 	stmdami	fp, {r0, r1, r5, sp}
     c00:	02000009 	andeq	r0, r0, #9
     c04:	03921188 	orrseq	r1, r2, #136, 2	; 0x22
     c08:	23030000 	movwcs	r0, #12288	; 0x3000
     c0c:	290b0180 	stmdbcs	fp, {r7, r8}
     c10:	02000005 	andeq	r0, r0, #5
     c14:	03971189 	orrseq	r1, r7, #1073741858	; 0x40000022
     c18:	23030000 	movwcs	r0, #12288	; 0x3000
     c1c:	af0b01a0 	svcge	0x000b01a0
     c20:	02000009 	andeq	r0, r0, #9
     c24:	0392118a 	orrseq	r1, r2, #-2147483614	; 0x80000022
     c28:	23030000 	movwcs	r0, #12288	; 0x3000
     c2c:	bf0b0280 	svclt	0x000b0280
     c30:	02000007 	andeq	r0, r0, #7
     c34:	0397118b 	orrseq	r1, r7, #-1073741790	; 0xc0000022
     c38:	23030000 	movwcs	r0, #12288	; 0x3000
     c3c:	1b0b02a0 	blne	2c16c4 <_Min_Stack_Size+0x2c12c4>
     c40:	02000007 	andeq	r0, r0, #7
     c44:	0392118c 	orrseq	r1, r2, #140, 2	; 0x23
     c48:	23030000 	movwcs	r0, #12288	; 0x3000
     c4c:	c90b0380 	stmdbgt	fp, {r7, r8, r9}
     c50:	02000007 	andeq	r0, r0, #7
     c54:	0397118d 	orrseq	r1, r7, #1073741859	; 0x40000023
     c58:	23030000 	movwcs	r0, #12288	; 0x3000
     c5c:	570b03a0 	strpl	r0, [fp, -r0, lsr #7]
     c60:	02000009 	andeq	r0, r0, #9
     c64:	0392118e 	orrseq	r1, r2, #-2147483613	; 0x80000023
     c68:	23030000 	movwcs	r0, #12288	; 0x3000
     c6c:	d30b0480 	movwle	r0, #46208	; 0xb480
     c70:	02000007 	andeq	r0, r0, #7
     c74:	03a7118f 			; <UNDEFINED> instruction: 0x03a7118f
     c78:	23030000 	movwcs	r0, #12288	; 0x3000
     c7c:	491004a0 	ldmdbmi	r0, {r5, r7, sl}
     c80:	90020050 	andls	r0, r2, r0, asr r0
     c84:	0003c711 	andeq	ip, r3, r1, lsl r7
     c88:	80230300 	eorhi	r0, r3, r0, lsl #6
     c8c:	07dd0b06 	ldrbeq	r0, [sp, r6, lsl #22]
     c90:	91020000 	mrsls	r0, (UNDEF: 2)
     c94:	0003cc11 	andeq	ip, r3, r1, lsl ip
     c98:	f0230300 			; <UNDEFINED> instruction: 0xf0230300
     c9c:	078a0b07 	streq	r0, [sl, r7, lsl #22]
     ca0:	92020000 	andls	r0, r2, #0
     ca4:	00008211 	andeq	r8, r0, r1, lsl r2
     ca8:	80230300 	eorhi	r0, r3, r0, lsl #6
     cac:	8211001c 	andshi	r0, r1, #28
     cb0:	92000000 	andls	r0, r0, #0
     cb4:	12000003 	andne	r0, r0, #3
     cb8:	000000a1 	andeq	r0, r0, r1, lsr #1
     cbc:	82040007 	andhi	r0, r4, #7
     cc0:	11000003 	tstne	r0, r3
     cc4:	00000076 	andeq	r0, r0, r6, ror r0
     cc8:	000003a7 	andeq	r0, r0, r7, lsr #7
     ccc:	0000a112 	andeq	sl, r0, r2, lsl r1
     cd0:	11001700 	tstne	r0, r0, lsl #14
     cd4:	00000076 	andeq	r0, r0, r6, ror r0
     cd8:	000003b7 			; <UNDEFINED> instruction: 0x000003b7
     cdc:	0000a112 	andeq	sl, r0, r2, lsl r1
     ce0:	11003700 	tstne	r0, r0, lsl #14
     ce4:	0000004d 	andeq	r0, r0, sp, asr #32
     ce8:	000003c7 	andeq	r0, r0, r7, asr #7
     cec:	0000a112 	andeq	sl, r0, r2, lsl r1
     cf0:	0400ef00 	streq	lr, [r0], #-3840	; 0xfffff100
     cf4:	000003b7 			; <UNDEFINED> instruction: 0x000003b7
     cf8:	00007611 	andeq	r7, r0, r1, lsl r6
     cfc:	0003dd00 	andeq	sp, r3, r0, lsl #26
     d00:	00a11300 	adceq	r1, r1, r0, lsl #6
     d04:	02830000 	addeq	r0, r3, #0
     d08:	08680300 	stmdaeq	r8!, {r8, r9}^
     d0c:	93020000 	movwls	r0, #8192	; 0x2000
     d10:	0002aa04 	andeq	sl, r2, r4, lsl #20
     d14:	02641400 	rsbeq	r1, r4, #0, 8
     d18:	ce020000 	cdpgt	0, 0, cr0, cr2, cr0, {0}
     d1c:	009c1506 	addseq	r1, ip, r6, lsl #10
     d20:	01010000 	mrseq	r0, (UNDEF: 1)
     d24:	00013a15 	andeq	r3, r1, r5, lsl sl
     d28:	114c0600 	cmpne	ip, r0, lsl #12
     d2c:	00000076 	andeq	r0, r0, r6, ror r0
     d30:	18160101 	ldmdane	r6, {r0, r8}
     d34:	09016105 	stmdbeq	r1, {r0, r2, r8, sp, lr}
     d38:	00000441 	andeq	r0, r0, r1, asr #8
     d3c:	0004c317 	andeq	ip, r4, r7, lsl r3
     d40:	01630500 	cmneq	r3, r0, lsl #10
     d44:	00008211 	andeq	r8, r0, r1, lsl r2
     d48:	00230200 	eoreq	r0, r3, r0, lsl #4
     d4c:	434d5018 	movtmi	r5, #53272	; 0xd018
     d50:	01640500 	cmneq	r4, r0, lsl #10
     d54:	00008211 	andeq	r8, r0, r1, lsl r2
     d58:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     d5c:	0006a817 	andeq	sl, r6, r7, lsl r8
     d60:	01650500 	cmneq	r5, r0, lsl #10
     d64:	00045111 	andeq	r5, r4, r1, lsl r1
     d68:	08230200 	stmdaeq	r3!, {r9}
     d6c:	00821100 	addeq	r1, r2, r0, lsl #2
     d70:	04510000 	ldrbeq	r0, [r1], #-0
     d74:	a1120000 	tstge	r2, r0
     d78:	03000000 	movweq	r0, #0
     d7c:	04410400 	strbeq	r0, [r1], #-1024	; 0xfffffc00
     d80:	f2190000 	vhadd.s16	d0, d9, d0
     d84:	05000003 	streq	r0, [r0, #-3]
     d88:	06030166 	streq	r0, [r3], -r6, ror #2
     d8c:	16000004 	strne	r0, [r0], -r4
     d90:	01930538 	orrseq	r0, r3, r8, lsr r5
     d94:	00054d09 	andeq	r4, r5, r9, lsl #26
     d98:	52431800 	subpl	r1, r3, #0, 16
     d9c:	01950500 	orrseq	r0, r5, r0, lsl #10
     da0:	00008211 	andeq	r8, r0, r1, lsl r2
     da4:	00230200 	eoreq	r0, r3, r0, lsl #4
     da8:	0002e517 	andeq	lr, r2, r7, lsl r5
     dac:	01960500 	orrseq	r0, r6, r0, lsl #10
     db0:	00008211 	andeq	r8, r0, r1, lsl r2
     db4:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     db8:	0002a017 	andeq	sl, r2, r7, lsl r0
     dbc:	01970500 	orrseq	r0, r7, r0, lsl #10
     dc0:	00008211 	andeq	r8, r0, r1, lsl r2
     dc4:	08230200 	stmdaeq	r3!, {r9}
     dc8:	52494318 	subpl	r4, r9, #24, 6	; 0x60000000
     dcc:	01980500 	orrseq	r0, r8, r0, lsl #10
     dd0:	00008211 	andeq	r8, r0, r1, lsl r2
     dd4:	0c230200 	sfmeq	f0, 4, [r3], #-0
     dd8:	00020317 	andeq	r0, r2, r7, lsl r3
     ddc:	01990500 	orrseq	r0, r9, r0, lsl #10
     de0:	00008211 	andeq	r8, r0, r1, lsl r2
     de4:	10230200 	eorne	r0, r3, r0, lsl #4
     de8:	0000c017 	andeq	ip, r0, r7, lsl r0
     dec:	019a0500 	orrseq	r0, sl, r0, lsl #10
     df0:	00008211 	andeq	r8, r0, r1, lsl r2
     df4:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     df8:	00021017 	andeq	r1, r2, r7, lsl r0
     dfc:	019b0500 	orrseq	r0, fp, r0, lsl #10
     e00:	00008211 	andeq	r8, r0, r1, lsl r2
     e04:	18230200 	stmdane	r3!, {r9}
     e08:	0003d917 	andeq	sp, r3, r7, lsl r9
     e0c:	019c0500 	orrseq	r0, ip, r0, lsl #10
     e10:	00008211 	andeq	r8, r0, r1, lsl r2
     e14:	1c230200 	sfmne	f0, 4, [r3], #-0
     e18:	00029117 	andeq	r9, r2, r7, lsl r1
     e1c:	019d0500 	orrseq	r0, sp, r0, lsl #10
     e20:	00008211 	andeq	r8, r0, r1, lsl r2
     e24:	20230200 	eorcs	r0, r3, r0, lsl #4
     e28:	0002c617 	andeq	ip, r2, r7, lsl r6
     e2c:	019e0500 	orrseq	r0, lr, r0, lsl #10
     e30:	00008211 	andeq	r8, r0, r1, lsl r2
     e34:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
     e38:	0000d817 	andeq	sp, r0, r7, lsl r8
     e3c:	019f0500 	orrseq	r0, pc, r0, lsl #10
     e40:	00008211 	andeq	r8, r0, r1, lsl r2
     e44:	28230200 	stmdacs	r3!, {r9}
     e48:	0001ba17 	andeq	fp, r1, r7, lsl sl
     e4c:	01a00500 	lsleq	r0, r0, #10
     e50:	00008211 	andeq	r8, r0, r1, lsl r2
     e54:	2c230200 	sfmcs	f0, 4, [r3], #-0
     e58:	00019717 	andeq	r9, r1, r7, lsl r7
     e5c:	01a10500 			; <UNDEFINED> instruction: 0x01a10500
     e60:	00008211 	andeq	r8, r0, r1, lsl r2
     e64:	30230200 	eorcc	r0, r3, r0, lsl #4
     e68:	52534318 	subspl	r4, r3, #24, 6	; 0x60000000
     e6c:	01a20500 			; <UNDEFINED> instruction: 0x01a20500
     e70:	00008211 	andeq	r8, r0, r1, lsl r2
     e74:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
     e78:	01641900 	cmneq	r4, r0, lsl #18
     e7c:	a3050000 	movwge	r0, #20480	; 0x5000
     e80:	04630301 	strbteq	r0, [r3], #-769	; 0xfffffcff
     e84:	54160000 	ldrpl	r0, [r6], #-0
     e88:	09023705 	stmdbeq	r2, {r0, r2, r8, r9, sl, ip, sp}
     e8c:	00000705 	andeq	r0, r0, r5, lsl #14
     e90:	0005db17 	andeq	sp, r5, r7, lsl fp
     e94:	02390500 	eorseq	r0, r9, #0, 10
     e98:	00006a11 	andeq	r6, r0, r1, lsl sl
     e9c:	00230200 	eoreq	r0, r3, r0, lsl #4
     ea0:	0007ab17 	andeq	sl, r7, r7, lsl fp
     ea4:	023a0500 	eorseq	r0, sl, #0, 10
     ea8:	00006a11 	andeq	r6, r0, r1, lsl sl
     eac:	02230200 	eoreq	r0, r3, #0, 4
     eb0:	00062c17 	andeq	r2, r6, r7, lsl ip
     eb4:	023b0500 	eorseq	r0, fp, #0, 10
     eb8:	00006a11 	andeq	r6, r0, r1, lsl sl
     ebc:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     ec0:	0007b517 	andeq	fp, r7, r7, lsl r5
     ec4:	023c0500 	eorseq	r0, ip, #0, 10
     ec8:	00006a11 	andeq	r6, r0, r1, lsl sl
     ecc:	06230200 	strteq	r0, [r3], -r0, lsl #4
     ed0:	0006af17 	andeq	sl, r6, r7, lsl pc
     ed4:	023d0500 	eorseq	r0, sp, #0, 10
     ed8:	00006a11 	andeq	r6, r0, r1, lsl sl
     edc:	08230200 	stmdaeq	r3!, {r9}
     ee0:	0007bf17 	andeq	fp, r7, r7, lsl pc
     ee4:	023e0500 	eorseq	r0, lr, #0, 10
     ee8:	00006a11 	andeq	r6, r0, r1, lsl sl
     eec:	0a230200 	beq	8c16f4 <_Min_Stack_Size+0x8c12f4>
     ef0:	0006de17 	andeq	sp, r6, r7, lsl lr
     ef4:	023f0500 	eorseq	r0, pc, #0, 10
     ef8:	00006a11 	andeq	r6, r0, r1, lsl sl
     efc:	0c230200 	sfmeq	f0, 4, [r3], #-0
     f00:	0007c917 	andeq	ip, r7, r7, lsl r9
     f04:	02400500 	subeq	r0, r0, #0, 10
     f08:	00006a11 	andeq	r6, r0, r1, lsl sl
     f0c:	0e230200 	cdpeq	2, 2, cr0, cr3, cr0, {0}
     f10:	00094317 	andeq	r4, r9, r7, lsl r3
     f14:	02410500 	subeq	r0, r1, #0, 10
     f18:	00006a11 	andeq	r6, r0, r1, lsl sl
     f1c:	10230200 	eorne	r0, r3, r0, lsl #4
     f20:	0007d317 	andeq	sp, r7, r7, lsl r3
     f24:	02420500 	subeq	r0, r2, #0, 10
     f28:	00006a11 	andeq	r6, r0, r1, lsl sl
     f2c:	12230200 	eorne	r0, r3, #0, 4
     f30:	0007a617 	andeq	sl, r7, r7, lsl r6
     f34:	02430500 	subeq	r0, r3, #0, 10
     f38:	00006a11 	andeq	r6, r0, r1, lsl sl
     f3c:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     f40:	0007dd17 	andeq	sp, r7, r7, lsl sp
     f44:	02440500 	subeq	r0, r4, #0, 10
     f48:	00006a11 	andeq	r6, r0, r1, lsl sl
     f4c:	16230200 	strtne	r0, [r3], -r0, lsl #4
     f50:	00084a17 	andeq	r4, r8, r7, lsl sl
     f54:	02450500 	subeq	r0, r5, #0, 10
     f58:	00006a11 	andeq	r6, r0, r1, lsl sl
     f5c:	18230200 	stmdane	r3!, {r9}
     f60:	0007e717 	andeq	lr, r7, r7, lsl r7
     f64:	02460500 	subeq	r0, r6, #0, 10
     f68:	00006a11 	andeq	r6, r0, r1, lsl sl
     f6c:	1a230200 	bne	8c1774 <_Min_Stack_Size+0x8c1374>
     f70:	0008d217 	andeq	sp, r8, r7, lsl r2
     f74:	02470500 	subeq	r0, r7, #0, 10
     f78:	00006a11 	andeq	r6, r0, r1, lsl sl
     f7c:	1c230200 	sfmne	f0, 4, [r3], #-0
     f80:	00023a17 	andeq	r3, r2, r7, lsl sl
     f84:	02480500 	subeq	r0, r8, #0, 10
     f88:	00071511 	andeq	r1, r7, r1, lsl r5
     f8c:	1e230200 	cdpne	2, 2, cr0, cr3, cr0, {0}
     f90:	00087217 	andeq	r7, r8, r7, lsl r2
     f94:	02490500 	subeq	r0, r9, #0, 10
     f98:	00006a11 	andeq	r6, r0, r1, lsl sl
     f9c:	40230200 	eormi	r0, r3, r0, lsl #4
     fa0:	0009e817 	andeq	lr, r9, r7, lsl r8
     fa4:	024a0500 	subeq	r0, sl, #0, 10
     fa8:	00006a11 	andeq	r6, r0, r1, lsl sl
     fac:	42230200 	eormi	r0, r3, #0, 4
     fb0:	0004fa17 	andeq	pc, r4, r7, lsl sl	; <UNPREDICTABLE>
     fb4:	024b0500 	subeq	r0, fp, #0, 10
     fb8:	00006a11 	andeq	r6, r0, r1, lsl sl
     fbc:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
     fc0:	00080217 	andeq	r0, r8, r7, lsl r2
     fc4:	024c0500 	subeq	r0, ip, #0, 10
     fc8:	00006a11 	andeq	r6, r0, r1, lsl sl
     fcc:	46230200 	strtmi	r0, [r3], -r0, lsl #4
     fd0:	524e4618 	subpl	r4, lr, #24, 12	; 0x1800000
     fd4:	024d0500 	subeq	r0, sp, #0, 10
     fd8:	00006a11 	andeq	r6, r0, r1, lsl sl
     fdc:	48230200 	stmdami	r3!, {r9}
     fe0:	00080c17 	andeq	r0, r8, r7, lsl ip
     fe4:	024e0500 	subeq	r0, lr, #0, 10
     fe8:	00006a11 	andeq	r6, r0, r1, lsl sl
     fec:	4a230200 	bmi	8c17f4 <_Min_Stack_Size+0x8c13f4>
     ff0:	00057e17 	andeq	r7, r5, r7, lsl lr
     ff4:	024f0500 	subeq	r0, pc, #0, 10
     ff8:	00006a11 	andeq	r6, r0, r1, lsl sl
     ffc:	4c230200 	sfmmi	f0, 4, [r3], #-0
    1000:	0009fe17 	andeq	pc, r9, r7, lsl lr	; <UNPREDICTABLE>
    1004:	02500500 	subseq	r0, r0, #0, 10
    1008:	00006a11 	andeq	r6, r0, r1, lsl sl
    100c:	4e230200 	cdpmi	2, 2, cr0, cr3, cr0, {0}
    1010:	00097917 	andeq	r7, r9, r7, lsl r9
    1014:	02510500 	subseq	r0, r1, #0, 10
    1018:	00006a11 	andeq	r6, r0, r1, lsl sl
    101c:	50230200 	eorpl	r0, r3, r0, lsl #4
    1020:	000a0817 	andeq	r0, sl, r7, lsl r8
    1024:	02520500 	subseq	r0, r2, #0, 10
    1028:	00006a11 	andeq	r6, r0, r1, lsl sl
    102c:	52230200 	eorpl	r0, r3, #0, 4
    1030:	006a1100 	rsbeq	r1, sl, r0, lsl #2
    1034:	07150000 	ldreq	r0, [r5, -r0]
    1038:	a1120000 	tstge	r2, r0
    103c:	10000000 	andne	r0, r0, r0
    1040:	07050400 	streq	r0, [r5, -r0, lsl #8]
    1044:	72190000 	andsvc	r0, r9, #0
    1048:	05000005 	streq	r0, [r0, #-5]
    104c:	5a030253 	bpl	c19a0 <_Min_Stack_Size+0xc15a0>
    1050:	0a000005 	beq	106c <_Min_Stack_Size+0xc6c>
    1054:	07230104 	streq	r0, [r3, -r4, lsl #2]!
    1058:	00000767 	andeq	r0, r0, r7, ror #14
    105c:	0009b81a 	andeq	fp, r9, sl, lsl r8
    1060:	12240100 	eorne	r0, r4, #0, 2
    1064:	00000076 	andeq	r0, r0, r6, ror r0
    1068:	02160a04 	andseq	r0, r6, #4, 20	; 0x4000
    106c:	6b1a0023 	blvs	681100 <_Min_Stack_Size+0x680d00>
    1070:	01000007 	tsteq	r0, r7
    1074:	00761225 	rsbseq	r1, r6, r5, lsr #4
    1078:	05040000 	streq	r0, [r4, #-0]
    107c:	00230211 	eoreq	r0, r3, r1, lsl r2
    1080:	00091f1a 	andeq	r1, r9, sl, lsl pc
    1084:	12260100 	eorne	r0, r6, #0, 2
    1088:	00000076 	andeq	r0, r0, r6, ror r0
    108c:	02100104 	andseq	r0, r0, #4, 2
    1090:	1b000023 	blne	1124 <_Min_Stack_Size+0xd24>
    1094:	0e210104 	sufeqs	f0, f1, f4
    1098:	00000782 	andeq	r0, r0, r2, lsl #15
    109c:	0009b41c 	andeq	fp, r9, ip, lsl r4
    10a0:	10220100 	eorne	r0, r2, r0, lsl #2
    10a4:	00000076 	andeq	r0, r0, r6, ror r0
    10a8:	0007271d 	andeq	r2, r7, sp, lsl r7
    10ac:	67040000 	strvs	r0, [r4, -r0]
    10b0:	0a000007 	beq	10d4 <_Min_Stack_Size+0xcd4>
    10b4:	091d0110 	ldmdbeq	sp, {r4, r8}
    10b8:	000007c6 	andeq	r0, r0, r6, asr #15
    10bc:	0009a30b 	andeq	sl, r9, fp, lsl #6
    10c0:	171e0100 	ldrne	r0, [lr, -r0, lsl #2]
    10c4:	00000082 	andeq	r0, r0, r2, lsl #1
    10c8:	0b002302 	bleq	9cd8 <_Min_Stack_Size+0x98d8>
    10cc:	0000070e 	andeq	r0, r0, lr, lsl #14
    10d0:	82171f01 	andshi	r1, r7, #1, 30
    10d4:	02000000 	andeq	r0, r0, #0
    10d8:	e50b0423 	str	r0, [fp, #-1059]	; 0xfffffbdd
    10dc:	01000008 	tsteq	r0, r8
    10e0:	00821720 	addeq	r1, r2, r0, lsr #14
    10e4:	23020000 	movwcs	r0, #8192	; 0x2000
    10e8:	07821e08 	streq	r1, [r2, r8, lsl #28]
    10ec:	23020000 	movwcs	r0, #8192	; 0x2000
    10f0:	3b03000c 	blcc	c1128 <_Min_Stack_Size+0xc0d28>
    10f4:	01000006 	tsteq	r0, r6
    10f8:	07870229 	streq	r0, [r7, r9, lsr #4]
    10fc:	a8110000 	ldmdage	r1, {}	; <UNPREDICTABLE>
    1100:	e2000000 	and	r0, r0, #0
    1104:	12000007 	andne	r0, r0, #7
    1108:	000000a1 	andeq	r0, r0, r1, lsr #1
    110c:	2c1f0007 	ldccs	0, cr0, [pc], {7}
    1110:	01000009 	tsteq	r0, r9
    1114:	07d20a2b 	ldrbeq	r0, [r2, fp, lsr #20]
    1118:	05010000 	streq	r0, [r1, #-0]
    111c:	00001803 	andeq	r1, r0, r3, lsl #16
    1120:	05f71f20 	ldrbeq	r1, [r7, #3872]!	; 0xf20
    1124:	2c010000 	stccs	0, cr0, [r1], {-0}
    1128:	0007d20a 	andeq	sp, r7, sl, lsl #4
    112c:	03050100 	movweq	r0, #20736	; 0x5100
    1130:	20000038 	andcs	r0, r0, r8, lsr r0
    1134:	00046520 	andeq	r6, r4, r0, lsr #10
    1138:	162e0100 	strtne	r0, [lr], -r0, lsl #2
    113c:	0000011b 	andeq	r0, r0, fp, lsl r1
    1140:	000c0305 	andeq	r0, ip, r5, lsl #6
    1144:	ee202000 	cdp	0, 2, cr2, cr0, cr0, {0}
    1148:	01000005 	tsteq	r0, r5
    114c:	00411040 	subeq	r1, r1, r0, asr #32
    1150:	03050000 	movweq	r0, #20480	; 0x5000
    1154:	20000008 	andcs	r0, r0, r8
    1158:	00060220 	andeq	r0, r6, r0, lsr #4
    115c:	17410100 	strbne	r0, [r1, -r0, lsl #2]
    1160:	0000083e 	andeq	r0, r0, lr, lsr r8
    1164:	00040305 	andeq	r0, r4, r5, lsl #6
    1168:	04072000 	streq	r2, [r7], #-0
    116c:	00000052 	andeq	r0, r0, r2, asr r0
    1170:	0004f020 	andeq	pc, r4, r0, lsr #32
    1174:	11420100 	mrsne	r0, (UNDEF: 82)
    1178:	0000005e 	andeq	r0, r0, lr, asr r0
    117c:	000a0305 	andeq	r0, sl, r5, lsl #6
    1180:	cd202000 	stcgt	0, cr2, [r0, #-0]
    1184:	01000005 	tsteq	r0, r5
    1188:	0041105d 	subeq	r1, r1, sp, asr r0
    118c:	03050000 	movweq	r0, #20480	; 0x5000
    1190:	20000016 	andcs	r0, r0, r6, lsl r0
    1194:	0004ae20 	andeq	sl, r4, r0, lsr #28
    1198:	11a30100 			; <UNDEFINED> instruction: 0x11a30100
    119c:	0000005e 	andeq	r0, r0, lr, asr r0
    11a0:	00000305 	andeq	r0, r0, r5, lsl #6
    11a4:	01212000 			; <UNDEFINED> instruction: 0x01212000
    11a8:	00000897 	muleq	r0, r7, r8
    11ac:	05010801 	streq	r0, [r1, #-2049]	; 0xfffff7ff
    11b0:	00009501 	andeq	r9, r0, r1, lsl #10
    11b4:	0006a800 	andeq	sl, r6, r0, lsl #16
    11b8:	00070008 	andeq	r0, r7, r8
    11bc:	00044f08 	andeq	r4, r4, r8, lsl #30
    11c0:	09190100 	ldmdbeq	r9, {r8}
    11c4:	b0220000 	eorlt	r0, r2, r0
    11c8:	01000008 	tsteq	r0, r8
    11cc:	41190108 	tstmi	r9, r8, lsl #2
    11d0:	73000000 	movwvc	r0, #0
    11d4:	6f000004 	svcvs	0x00000004
    11d8:	23000004 	movwcs	r0, #4
    11dc:	00667562 	rsbeq	r7, r6, r2, ror #10
    11e0:	2a010801 	bcs	431ec <_Min_Stack_Size+0x42dec>
    11e4:	00000919 	andeq	r0, r0, r9, lsl r9
    11e8:	0000049a 	muleq	r0, sl, r4
    11ec:	00000494 	muleq	r0, r4, r4
    11f0:	007a7324 	rsbseq	r7, sl, r4, lsr #6
    11f4:	07010901 	streq	r0, [r1, -r1, lsl #18]
    11f8:	00000095 	muleq	r0, r5, r0
    11fc:	000004ca 	andeq	r0, r0, sl, asr #9
    1200:	000004c8 	andeq	r0, r0, r8, asr #9
    1204:	01006e24 	tsteq	r0, r4, lsr #28
    1208:	9507010b 	strls	r0, [r7, #-267]	; 0xfffffef5
    120c:	e3000000 	movw	r0, #0
    1210:	dd000004 	stcle	0, cr0, [r0, #-16]
    1214:	24000004 	strcs	r0, [r0], #-4
    1218:	01006e69 	tsteq	r0, r9, ror #28
    121c:	1f0d010c 	svcne	0x000d010c
    1220:	1a000009 	bne	124c <_Min_Stack_Size+0xe4c>
    1224:	14000005 	strne	r0, [r0], #-5
    1228:	25000005 	strcs	r0, [r0, #-5]
    122c:	00000050 	andeq	r0, r0, r0, asr r0
    1230:	01006924 	tsteq	r0, r4, lsr #18
    1234:	950b010d 	strls	r0, [fp, #-269]	; 0xfffffef3
    1238:	47000000 	strmi	r0, [r0, -r0]
    123c:	45000005 	strmi	r0, [r0, #-5]
    1240:	00000005 	andeq	r0, r0, r5
    1244:	5e040700 	cdppl	7, 0, cr0, cr4, cr0, {0}
    1248:	07000000 	streq	r0, [r0, -r0]
    124c:	00007604 	andeq	r7, r0, r4, lsl #12
    1250:	a1012600 	tstge	r1, r0, lsl #12
    1254:	01000004 	tsteq	r0, r4
    1258:	f40106f9 	vst1.64	{d0-d2}, [r1 :256], r9
    125c:	4e080005 	cdpmi	0, 0, cr0, cr8, cr5, {0}
    1260:	5b080006 	blpl	201280 <_Min_Stack_Size+0x200e80>
    1264:	01000005 	tsteq	r0, r5
    1268:	000009be 			; <UNDEFINED> instruction: 0x000009be
    126c:	0008b027 	andeq	fp, r8, r7, lsr #32
    1270:	1bf90100 	blne	ffe41678 <BootRAM+0xedb1e19>
    1274:	00000041 	andeq	r0, r0, r1, asr #32
    1278:	00000581 	andeq	r0, r0, r1, lsl #11
    127c:	0000057b 	andeq	r0, r0, fp, ror r5
    1280:	66756228 	ldrbtvs	r6, [r5], -r8, lsr #4
    1284:	31f90100 	mvnscc	r0, r0, lsl #2
    1288:	0000083e 	andeq	r0, r0, lr, lsr r8
    128c:	a1295101 			; <UNDEFINED> instruction: 0xa1295101
    1290:	01000007 	tsteq	r0, r7
    1294:	005e3ff9 	ldrsheq	r3, [lr], #-249	; 0xffffff07
    1298:	52010000 	andpl	r0, r1, #0
    129c:	0100692a 	tsteq	r0, sl, lsr #18
    12a0:	00410bfb 	strdeq	r0, [r1], #-187	; 0xffffff45
    12a4:	05b70000 	ldreq	r0, [r7, #0]!
    12a8:	05b30000 	ldreq	r0, [r3, #0]!
    12ac:	4e2a0000 	cdpmi	0, 2, cr0, cr10, cr0, {0}
    12b0:	fc010032 	stc2	0, cr0, [r1], {50}	; 0x32
    12b4:	00005e0c 	andeq	r5, r0, ip, lsl #28
    12b8:	0005d700 	andeq	sp, r5, r0, lsl #14
    12bc:	0005d500 	andeq	sp, r5, r0, lsl #10
    12c0:	04012b00 	streq	r2, [r1], #-2816	; 0xfffff500
    12c4:	fe010000 	cdp2	0, 0, cr0, cr1, cr0, {0}
    12c8:	0009190d 	andeq	r1, r9, sp, lsl #18
    12cc:	0005ec00 	andeq	lr, r5, r0, lsl #24
    12d0:	0005ea00 	andeq	lr, r5, r0, lsl #20
    12d4:	756f2a00 	strbvc	r2, [pc, #-2560]!	; 8dc <_Min_Stack_Size+0x4dc>
    12d8:	ff010074 			; <UNDEFINED> instruction: 0xff010074
    12dc:	00091f0d 	andeq	r1, r9, sp, lsl #30
    12e0:	00060500 	andeq	r0, r6, r0, lsl #10
    12e4:	0005ff00 	andeq	pc, r5, r0, lsl #30
    12e8:	012c0000 			; <UNDEFINED> instruction: 0x012c0000
    12ec:	00000584 	andeq	r0, r0, r4, lsl #11
    12f0:	cc06d001 	stcgt	0, cr13, [r6], {1}
    12f4:	f4080004 	vst4.8	{d0-d3}, [r8], r4
    12f8:	3c080005 	stccc	0, cr0, [r8], {5}
    12fc:	01000006 	tsteq	r0, r6
    1300:	00000aa3 	andeq	r0, r0, r3, lsr #21
    1304:	0000302d 	andeq	r3, r0, sp, lsr #32
    1308:	0009f400 	andeq	pc, r9, r0, lsl #8
    130c:	00692a00 	rsbeq	r2, r9, r0, lsl #20
    1310:	4111d601 	tstmi	r1, r1, lsl #12
    1314:	60000000 	andvs	r0, r0, r0
    1318:	5c000006 	stcpl	0, cr0, [r0], {6}
    131c:	00000006 	andeq	r0, r0, r6
    1320:	00053c2e 	andeq	r3, r5, lr, lsr #24
    1324:	00059008 	andeq	r9, r5, r8
    1328:	000a3508 	andeq	r3, sl, r8, lsl #10
    132c:	08b02b00 	ldmeq	r0!, {r8, r9, fp, sp}
    1330:	e2010000 	and	r0, r1, #0
    1334:	0000410d 	andeq	r4, r0, sp, lsl #2
    1338:	00068500 	andeq	r8, r6, r0, lsl #10
    133c:	00068300 	andeq	r8, r6, r0, lsl #6
    1340:	055e2f00 	ldrbeq	r2, [lr, #-3840]	; 0xfffff100
    1344:	0a250800 	beq	94334c <_Min_Stack_Size+0x942f4c>
    1348:	01300000 	teqeq	r0, r0
    134c:	00750250 	rsbseq	r0, r5, r0, asr r2
    1350:	05803100 	streq	r3, [r0, #256]	; 0x100
    1354:	01300800 	teqeq	r0, r0, lsl #16
    1358:	00750550 	rsbseq	r0, r5, r0, asr r5
    135c:	00218008 	eoreq	r8, r1, r8
    1360:	04dc3200 	ldrbeq	r3, [ip], #512	; 0x200
    1364:	0e5f0800 	cdpeq	8, 5, cr0, cr15, cr0, {0}
    1368:	1e330000 	cdpne	0, 3, cr0, cr3, cr0, {0}
    136c:	a3080005 	movwge	r0, #32773	; 0x8005
    1370:	6700000a 	strvs	r0, [r0, -sl]
    1374:	3000000a 	andcc	r0, r0, sl
    1378:	74025001 	strvc	r5, [r2], #-1
    137c:	51013000 	mrspl	r3, (UNDEF: 1)
    1380:	30007402 	andcc	r7, r0, r2, lsl #8
    1384:	08025201 	stmdaeq	r2, {r0, r9, ip, lr}
    1388:	53013040 	movwpl	r3, #4160	; 0x1040
    138c:	07010305 	streq	r0, [r1, -r5, lsl #6]
    1390:	33000800 	movwcc	r0, #2048	; 0x800
    1394:	0800052a 	stmdaeq	r0, {r1, r3, r5, r8, sl}
    1398:	00000aa3 	andeq	r0, r0, r3, lsr #21
    139c:	00000a90 	muleq	r0, r0, sl
    13a0:	02500130 	subseq	r0, r0, #48, 2
    13a4:	01308009 	teqeq	r0, r9
    13a8:	00740251 	rsbseq	r0, r4, r1, asr r2
    13ac:	02520130 	subseq	r0, r2, #48, 2
    13b0:	01304008 	teqeq	r0, r8
    13b4:	4f030553 	svcmi	0x00030553
    13b8:	00080006 	andeq	r0, r8, r6
    13bc:	00053232 	andeq	r3, r5, r2, lsr r2
    13c0:	000e6808 	andeq	r6, lr, r8, lsl #16
    13c4:	059e3200 	ldreq	r3, [lr, #512]	; 0x200
    13c8:	0e5f0800 	cdpeq	8, 5, cr0, cr15, cr0, {0}
    13cc:	26000000 	strcs	r0, [r0], -r0
    13d0:	00082201 	andeq	r2, r8, r1, lsl #4
    13d4:	06a40100 	strteq	r0, [r4], r0, lsl #2
    13d8:	0003e001 	andeq	lr, r3, r1
    13dc:	0004cc08 	andeq	ip, r4, r8, lsl #24
    13e0:	00069808 	andeq	r9, r6, r8, lsl #16
    13e4:	0b370100 	bleq	dc17ec <_Min_Stack_Size+0xdc13ec>
    13e8:	b0270000 	eorlt	r0, r7, r0
    13ec:	01000008 	tsteq	r0, r8
    13f0:	00411aa4 	subeq	r1, r1, r4, lsr #21
    13f4:	06bc0000 	ldrteq	r0, [ip], r0
    13f8:	06b80000 	ldrteq	r0, [r8], r0
    13fc:	89270000 	stmdbhi	r7!, {}	; <UNPREDICTABLE>
    1400:	01000009 	tsteq	r0, r9
    1404:	004129a4 	subeq	r2, r1, r4, lsr #19
    1408:	06ea0000 	strbteq	r0, [sl], r0
    140c:	06da0000 	ldrbeq	r0, [sl], r0
    1410:	a1270000 			; <UNDEFINED> instruction: 0xa1270000
    1414:	01000007 	tsteq	r0, r7
    1418:	005e3ba4 	subseq	r3, lr, r4, lsr #23
    141c:	075c0000 	ldrbeq	r0, [ip, -r0]
    1420:	07560000 	ldrbeq	r0, [r6, -r0]
    1424:	a7270000 	strge	r0, [r7, -r0]!
    1428:	0100000b 	tsteq	r0, fp
    142c:	00a84aa4 	adceq	r4, r8, r4, lsr #21
    1430:	07920000 	ldreq	r0, [r2, r0]
    1434:	07880000 	streq	r0, [r8, r0]
    1438:	9c2b0000 	stcls	0, cr0, [fp], #-0
    143c:	01000009 	tsteq	r0, r9
    1440:	00410ba5 	subeq	r0, r1, r5, lsr #23
    1444:	07e40000 	strbeq	r0, [r4, r0]!
    1448:	07e00000 	strbeq	r0, [r0, r0]!
    144c:	622a0000 	eorvs	r0, sl, #0
    1450:	01006675 	tsteq	r0, r5, ror r6
    1454:	005e0cae 	subseq	r0, lr, lr, lsr #25
    1458:	08170000 	ldmdaeq	r7, {}	; <UNPREDICTABLE>
    145c:	080d0000 	stmdaeq	sp, {}	; <UNPREDICTABLE>
    1460:	34000000 	strcc	r0, [r0], #-0
    1464:	000008ca 	andeq	r0, r0, sl, asr #17
    1468:	010d5f01 	tsteq	sp, r1, lsl #30
    146c:	08000700 	stmdaeq	r0, {r8, r9, sl}
    1470:	08000818 	stmdaeq	r0, {r3, r4, fp}
    1474:	0000087c 	andeq	r0, r0, ip, ror r8
    1478:	000cbc01 	andeq	fp, ip, r1, lsl #24
    147c:	08b02700 	ldmeq	r0!, {r8, r9, sl, sp}
    1480:	5f010000 	svcpl	0x00010000
    1484:	0000411d 	andeq	r4, r0, sp, lsl r1
    1488:	0008bc00 	andeq	fp, r8, r0, lsl #24
    148c:	0008b400 	andeq	fp, r8, r0, lsl #8
    1490:	047d2000 	ldrbteq	r2, [sp], #-0
    1494:	60010000 	andvs	r0, r1, r0
    1498:	00005e13 	andeq	r5, r0, r3, lsl lr
    149c:	14030500 	strne	r0, [r3], #-1280	; 0xfffffb00
    14a0:	2b200000 	blcs	8014a8 <_Min_Stack_Size+0x8010a8>
    14a4:	000009c1 	andeq	r0, r0, r1, asr #19
    14a8:	5e0c6101 	adfple	f6, f4, f1
    14ac:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
    14b0:	f6000008 			; <UNDEFINED> instruction: 0xf6000008
    14b4:	2b000008 	blcs	14dc <_Min_Stack_Size+0x10dc>
    14b8:	00000077 	andeq	r0, r0, r7, ror r0
    14bc:	410b6201 	tstmi	fp, r1, lsl #4
    14c0:	34000000 	strcc	r0, [r0], #-0
    14c4:	32000009 	andcc	r0, r0, #9
    14c8:	2a000009 	bcs	14f4 <_Min_Stack_Size+0x10f4>
    14cc:	00716572 	rsbseq	r6, r1, r2, ror r5
    14d0:	410b7201 	tstmi	fp, r1, lsl #4
    14d4:	5d000000 	stcpl	0, cr0, [r0, #-0]
    14d8:	51000009 	tstpl	r0, r9
    14dc:	2d000009 	stccs	0, cr0, [r0, #-36]	; 0xffffffdc
    14e0:	00000068 	andeq	r0, r0, r8, rrx
    14e4:	00000c7c 	andeq	r0, r0, ip, ror ip
    14e8:	000a4d20 	andeq	r4, sl, r0, lsr #26
    14ec:	0b890100 	bleq	fe2418f4 <BootRAM+0xd1b2095>
    14f0:	00000cbc 			; <UNDEFINED> instruction: 0x00000cbc
    14f4:	206c9102 	rsbcs	r9, ip, r2, lsl #2
    14f8:	000007a1 	andeq	r0, r0, r1, lsr #15
    14fc:	5e0e8a01 	vmlapl.f32	s16, s28, s2
    1500:	02000000 	andeq	r0, r0, #0
    1504:	5a2e6a91 	bpl	b9bf50 <_Min_Stack_Size+0xb9bb50>
    1508:	6e080007 	cdpvs	0, 0, cr0, cr8, cr7, {0}
    150c:	1c080007 	stcne	0, cr0, [r8], {7}
    1510:	2000000c 	andcs	r0, r0, ip
    1514:	00000a4d 	andeq	r0, r0, sp, asr #20
    1518:	be177a01 	vnmlslt.f32	s14, s14, s2
    151c:	0200000c 	andeq	r0, r0, #12
    1520:	a1206c91 			; <UNDEFINED> instruction: 0xa1206c91
    1524:	01000007 	tsteq	r0, r7
    1528:	005e147b 	subseq	r1, lr, fp, ror r4
    152c:	91020000 	mrsls	r0, (UNDEF: 2)
    1530:	076e356a 	strbeq	r3, [lr, -sl, ror #10]!
    1534:	0ea00800 	cdpeq	8, 10, cr0, cr0, cr0, {0}
    1538:	01300000 	teqeq	r0, r0
    153c:	6c910251 	lfmvs	f0, 4, [r1], {81}	; 0x51
    1540:	02520130 	subseq	r0, r2, #48, 2
    1544:	00006a91 	muleq	r0, r1, sl
    1548:	000cc536 	andeq	ip, ip, r6, lsr r5
    154c:	00077e00 	andeq	r7, r7, r0, lsl #28
    1550:	00880108 	addeq	r0, r8, r8, lsl #2
    1554:	8d010000 	stchi	0, cr0, [r1, #-0]
    1558:	000c5c05 	andeq	r5, ip, r5, lsl #24
    155c:	0cdf3700 	ldcleq	7, cr3, [pc], {0}
    1560:	09b30000 	ldmibeq	r3!, {}	; <UNPREDICTABLE>
    1564:	09b10000 	ldmibeq	r1!, {}	; <UNPREDICTABLE>
    1568:	d3370000 	teqle	r7, #0
    156c:	c900000c 	stmdbgt	r0, {r2, r3}
    1570:	c7000009 	strgt	r0, [r0, -r9]
    1574:	35000009 	strcc	r0, [r0, #-9]
    1578:	0800078c 	stmdaeq	r0, {r2, r3, r7, r8, r9, sl}
    157c:	00000cec 	andeq	r0, r0, ip, ror #25
    1580:	02500130 	subseq	r0, r0, #48, 2
    1584:	00008009 	andeq	r8, r0, r9
    1588:	0007ae35 	andeq	sl, r7, r5, lsr lr
    158c:	000e0108 	andeq	r0, lr, r8, lsl #2
    1590:	50013000 	andpl	r3, r1, r0
    1594:	000c0305 	andeq	r0, ip, r5, lsl #6
    1598:	01302000 	teqeq	r0, r0
    159c:	6c910251 	lfmvs	f0, 4, [r1], {81}	; 0x51
    15a0:	02520130 	subseq	r0, r2, #48, 2
    15a4:	00006a91 	muleq	r0, r1, sl
    15a8:	00072a33 	andeq	r2, r7, r3, lsr sl
    15ac:	00087a08 	andeq	r7, r8, r8, lsl #20
    15b0:	000c9900 	andeq	r9, ip, r0, lsl #18
    15b4:	50013000 	andpl	r3, r1, r0
    15b8:	30007502 	andcc	r7, r0, r2, lsl #10
    15bc:	03055101 	movweq	r5, #20737	; 0x5101
    15c0:	2000000c 	andcs	r0, r0, ip
    15c4:	074e3200 	strbeq	r3, [lr, -r0, lsl #4]
    15c8:	09250800 	stmdbeq	r5!, {fp}
    15cc:	d8350000 	ldmdale	r5!, {}	; <UNPREDICTABLE>
    15d0:	a5080007 	strge	r0, [r8, #-7]
    15d4:	3000000d 	andcc	r0, r0, sp
    15d8:	03055001 	movweq	r5, #20481	; 0x5001
    15dc:	2000000c 	andcs	r0, r0, ip
    15e0:	02520130 	subseq	r0, r2, #48, 2
    15e4:	00000075 	andeq	r0, r0, r5, ror r0
    15e8:	04070438 	streq	r0, [r7], #-1080	; 0xfffffbc8
    15ec:	00000cc4 	andeq	r0, r0, r4, asr #25
    15f0:	05b83a39 	ldreq	r3, [r8, #2617]!	; 0xa39
    15f4:	57010000 	strpl	r0, [r1, -r0]
    15f8:	ec030114 	stfs	f0, [r3], {20}
    15fc:	3b00000c 	blcc	1634 <_Min_Stack_Size+0x1234>
    1600:	00667562 	rsbeq	r7, r6, r2, ror #10
    1604:	3e2c5701 	cdpcc	7, 2, cr5, cr12, cr1, {0}
    1608:	3c000008 	stccc	0, cr0, [r0], {8}
    160c:	000007a1 	andeq	r0, r0, r1, lsr #15
    1610:	5e3a5701 	cdppl	7, 3, cr5, cr10, cr1, {0}
    1614:	00000000 	andeq	r0, r0, r0
    1618:	00078334 	andeq	r8, r7, r4, lsr r3
    161c:	0d440100 	stfeqe	f0, [r4, #-0]
    1620:	00064e01 	andeq	r4, r6, r1, lsl #28
    1624:	0006a808 	andeq	sl, r6, r8, lsl #16
    1628:	0009dd08 	andeq	sp, r9, r8, lsl #26
    162c:	0d4a0100 	stfeqe	f0, [sl, #-0]
    1630:	b0270000 	eorlt	r0, r7, r0
    1634:	01000008 	tsteq	r0, r8
    1638:	00411c44 	subeq	r1, r1, r4, asr #24
    163c:	0a010000 	beq	41644 <_Min_Stack_Size+0x41244>
    1640:	09fd0000 	ldmibeq	sp!, {}^	; <UNPREDICTABLE>
    1644:	4f2b0000 	svcmi	0x002b0000
    1648:	01000008 	tsteq	r0, r8
    164c:	005e0c4b 	subseq	r0, lr, fp, asr #24
    1650:	0a260000 	beq	981658 <_Min_Stack_Size+0x981258>
    1654:	0a220000 	beq	88165c <_Min_Stack_Size+0x88125c>
    1658:	8c350000 	ldchi	0, cr0, [r5], #-0
    165c:	25080006 	strcs	r0, [r8, #-6]
    1660:	30000009 	andcc	r0, r0, r9
    1664:	30015001 	andcc	r5, r1, r1
    1668:	02510130 	subseq	r0, r1, #48, 2
    166c:	01300071 	teqeq	r0, r1, ror r0
    1670:	00720252 	rsbseq	r0, r2, r2, asr r2
    1674:	013d0000 	teqeq	sp, r0
    1678:	00000073 	andeq	r0, r0, r3, ror r0
    167c:	72063001 	andvc	r3, r6, #1
    1680:	e0080003 	and	r0, r8, r3
    1684:	02080003 	andeq	r0, r8, #3
    1688:	a501007d 	strge	r0, [r1, #-125]	; 0xffffff83
    168c:	2d00000d 	stccs	0, cr0, [r0, #-52]	; 0xffffffcc
    1690:	00000018 	andeq	r0, r0, r8, lsl r0
    1694:	00000d81 	andeq	r0, r0, r1, lsl #27
    1698:	7274632a 	rsbsvc	r6, r4, #-1476395008	; 0xa8000000
    169c:	10360100 	eorsne	r0, r6, r0, lsl #2
    16a0:	00000076 	andeq	r0, r0, r6, ror r0
    16a4:	00000a4c 	andeq	r0, r0, ip, asr #20
    16a8:	00000a44 	andeq	r0, r0, r4, asr #20
    16ac:	0e723e00 	cdpeq	14, 7, cr3, cr2, cr0, {0}
    16b0:	03b60000 			; <UNDEFINED> instruction: 0x03b60000
    16b4:	b6010800 	strlt	r0, [r1], -r0, lsl #16
    16b8:	be080003 	cdplt	0, 0, cr0, cr8, cr3, {0}
    16bc:	01080003 	tsteq	r8, r3
    16c0:	8137033c 	teqhi	r7, ip, lsr r3
    16c4:	9b00000e 	blls	1704 <_Min_Stack_Size+0x1304>
    16c8:	9900000a 	stmdbls	r0, {r1, r3}
    16cc:	0000000a 	andeq	r0, r0, sl
    16d0:	c0013f00 	andgt	r3, r1, r0, lsl #30
    16d4:	01000008 	tsteq	r0, r8
    16d8:	f4011b1b 			; <UNDEFINED> instruction: 0xf4011b1b
    16dc:	6e00000d 	cdpvs	0, 0, cr0, cr0, cr13, {0}
    16e0:	72080003 	andvc	r0, r8, #3
    16e4:	02080003 	andeq	r0, r8, #3
    16e8:	f401007d 	vst4.16	{d0-d3}, [r1 :256]!
    16ec:	4000000d 	andmi	r0, r0, sp
    16f0:	00716572 	rsbseq	r6, r1, r2, ror r5
    16f4:	fb3c1b01 	blx	f08302 <_Min_Stack_Size+0xf07f02>
    16f8:	b300000d 	movwlt	r0, #13
    16fc:	af00000a 	svcge	0x0000000a
    1700:	2900000a 	stmdbcs	r0, {r1, r3}
    1704:	00000b2d 	andeq	r0, r0, sp, lsr #22
    1708:	5e4a1b01 	vmlapl.f64	d17, d10, d1
    170c:	01000000 	mrseq	r0, (UNDEF: 0)
    1710:	079e2951 			; <UNDEFINED> instruction: 0x079e2951
    1714:	1b010000 	blne	4171c <_Min_Stack_Size+0x4131c>
    1718:	00005e5b 	andeq	r5, r0, fp, asr lr
    171c:	00520100 	subseq	r0, r2, r0, lsl #2
    1720:	5f080102 	svcpl	0x00080102
    1724:	07000002 	streq	r0, [r0, -r2]
    1728:	00011b04 	andeq	r1, r1, r4, lsl #22
    172c:	79013f00 	stmdbvc	r1, {r8, r9, sl, fp, ip, sp}
    1730:	01000007 	tsteq	r0, r7
    1734:	f4011b1a 			; <UNDEFINED> instruction: 0xf4011b1a
    1738:	6a00000d 	bvs	1774 <_Min_Stack_Size+0x1374>
    173c:	6e080003 	cdpvs	0, 0, cr0, cr8, cr3, {0}
    1740:	02080003 	andeq	r0, r8, #3
    1744:	5001007d 	andpl	r0, r1, sp, ror r0
    1748:	4000000e 	andmi	r0, r0, lr
    174c:	00716572 	rsbseq	r6, r1, r2, ror r5
    1750:	fb3b1a01 	blx	ec7f5e <_Min_Stack_Size+0xec7b5e>
    1754:	d800000d 	stmdale	r0, {r0, r2, r3}
    1758:	d400000a 	strle	r0, [r0], #-10
    175c:	2900000a 	stmdbcs	r0, {r1, r3}
    1760:	00000a4d 	andeq	r0, r0, sp, asr #20
    1764:	50471a01 	subpl	r1, r7, r1, lsl #20
    1768:	0100000e 	tsteq	r0, lr
    176c:	07a12951 	sbfxeq	r2, r1, #18, #2
    1770:	1a010000 	bne	41778 <_Min_Stack_Size+0x41378>
    1774:	00091957 	andeq	r1, r9, r7, asr r9
    1778:	00520100 	subseq	r0, r2, r0, lsl #2
    177c:	0cbc0407 	cfldrseq	mvf0, [ip], #28
    1780:	01410000 	mrseq	r0, (UNDEF: 65)
    1784:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1788:	411b1901 	tstmi	fp, r1, lsl #18
    178c:	0006c901 	andeq	ip, r6, r1, lsl #18
    1790:	1b180100 	blne	601b98 <_Min_Stack_Size+0x601798>
    1794:	06990142 	ldreq	r0, [r9], r2, asr #2
    1798:	17010000 	strne	r0, [r1, -r0]
    179c:	5943011b 	stmdbpl	r3, {r0, r1, r3, r4, r8}^
    17a0:	02000005 	andeq	r0, r0, #5
    17a4:	011605de 			; <UNDEFINED> instruction: 0x011605de
    17a8:	000e8f03 	andeq	r8, lr, r3, lsl #30
    17ac:	06ba4400 	ldrteq	r4, [sl], r0, lsl #8
    17b0:	de020000 	cdple	0, 0, cr0, cr2, cr0, {0}
    17b4:	029e2f05 	addseq	r2, lr, #5, 30
    17b8:	45000000 	strmi	r0, [r0, #-0]
    17bc:	00000e68 	andeq	r0, r0, r8, ror #28
    17c0:	08000364 	stmdaeq	r0, {r2, r5, r6, r8, r9}
    17c4:	08000366 	stmdaeq	r0, {r1, r2, r5, r6, r8, r9}
    17c8:	01007d02 	tsteq	r0, r2, lsl #26
    17cc:	96010146 	strls	r0, [r1], -r6, asr #2
    17d0:	96000005 	strls	r0, [r0], -r5
    17d4:	04000005 	streq	r0, [r0], #-5
    17d8:	16000636 			; <UNDEFINED> instruction: 0x16000636
    17dc:	0200000f 	andeq	r0, r0, #15
    17e0:	00065300 	andeq	r5, r6, r0, lsl #6
    17e4:	20010400 	andcs	r0, r1, r0, lsl #8
    17e8:	0c000003 	stceq	0, cr0, [r0], {3}
    17ec:	00000c90 	muleq	r0, r0, ip
    17f0:	000003b3 			; <UNDEFINED> instruction: 0x000003b3
    17f4:	08000818 	stmdaeq	r0, {r3, r4, fp}
    17f8:	08000950 	stmdaeq	r0, {r4, r6, r8, fp}
    17fc:	00000a13 	andeq	r0, r0, r3, lsl sl
    1800:	58060102 	stmdapl	r6, {r1, r8}
    1804:	02000002 	andeq	r0, r0, #2
    1808:	02710502 	rsbseq	r0, r1, #8388608	; 0x800000
    180c:	04020000 	streq	r0, [r2], #-0
    1810:	00008205 	andeq	r8, r0, r5, lsl #4
    1814:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    1818:	0000007d 	andeq	r0, r0, sp, ror r0
    181c:	0002f103 	andeq	pc, r2, r3, lsl #2
    1820:	182e0200 	stmdane	lr!, {r9}
    1824:	00000052 	andeq	r0, r0, r2, asr r0
    1828:	00004104 	andeq	r4, r0, r4, lsl #2
    182c:	08010200 	stmdaeq	r1, {r9}
    1830:	00000256 	andeq	r0, r0, r6, asr r2
    1834:	0000ff03 	andeq	pc, r0, r3, lsl #30
    1838:	19310200 	ldmdbne	r1!, {r9}
    183c:	00000065 	andeq	r0, r0, r5, rrx
    1840:	7e070202 	cdpvc	2, 0, cr0, cr7, cr2, {0}
    1844:	03000001 	movweq	r0, #1
    1848:	000002ab 	andeq	r0, r0, fp, lsr #5
    184c:	7d193402 	cfldrsvc	mvf3, [r9, #-8]
    1850:	05000000 	streq	r0, [r0, #-0]
    1854:	0000006c 	andeq	r0, r0, ip, rrx
    1858:	4d070402 	cfstrsmi	mvf0, [r7, #-8]
    185c:	02000000 	andeq	r0, r0, #0
    1860:	00480708 	subeq	r0, r8, r8, lsl #14
    1864:	04060000 	streq	r0, [r6], #-0
    1868:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    186c:	008b0500 	addeq	r0, fp, r0, lsl #10
    1870:	04020000 	streq	r0, [r2], #-0
    1874:	00005207 	andeq	r5, r0, r7, lsl #4
    1878:	03080700 	movweq	r0, #34560	; 0x8700
    187c:	00f3091b 	rscseq	r0, r3, fp, lsl r9
    1880:	57080000 	strpl	r0, [r8, -r0]
    1884:	03000004 	movweq	r0, #4
    1888:	00410b1c 	subeq	r0, r1, ip, lsl fp
    188c:	23020000 	movwcs	r0, #8192	; 0x2000
    1890:	085f0800 	ldmdaeq	pc, {fp}^	; <UNPREDICTABLE>
    1894:	1d030000 	stcne	0, cr0, [r3, #-0]
    1898:	0000410b 	andeq	r4, r0, fp, lsl #2
    189c:	01230200 			; <UNDEFINED> instruction: 0x01230200
    18a0:	0004d308 	andeq	sp, r4, r8, lsl #6
    18a4:	0c1e0300 	ldceq	3, cr0, [lr], {-0}
    18a8:	00000059 	andeq	r0, r0, r9, asr r0
    18ac:	08022302 	stmdaeq	r2, {r1, r8, r9, sp}
    18b0:	000003eb 	andeq	r0, r0, fp, ror #7
    18b4:	590c1f03 	stmdbpl	ip, {r0, r1, r8, r9, sl, fp, ip}
    18b8:	02000000 	andeq	r0, r0, #0
    18bc:	42080423 	andmi	r0, r8, #587202560	; 0x23000000
    18c0:	03000008 	movweq	r0, #8
    18c4:	00590c20 	subseq	r0, r9, r0, lsr #24
    18c8:	23020000 	movwcs	r0, #8192	; 0x2000
    18cc:	d7030006 	strle	r0, [r3, -r6]
    18d0:	03000008 	movweq	r0, #8
    18d4:	009e0221 	addseq	r0, lr, r1, lsr #4
    18d8:	64090000 	strvs	r0, [r9], #-0
    18dc:	04000002 	streq	r0, [r0], #-2
    18e0:	921506ce 	andsls	r0, r5, #216006656	; 0xce00000
    18e4:	01000000 	mrseq	r0, (UNDEF: 0)
    18e8:	013a0a01 	teqeq	sl, r1, lsl #20
    18ec:	4c050000 	stcmi	0, cr0, [r5], {-0}
    18f0:	00006c11 	andeq	r6, r0, r1, lsl ip
    18f4:	0b010100 	bleq	41cfc <_Min_Stack_Size+0x418fc>
    18f8:	014f062c 	cmpeq	pc, ip, lsr #12
    18fc:	0001c709 	andeq	ip, r1, r9, lsl #14
    1900:	00420c00 	subeq	r0, r2, r0, lsl #24
    1904:	51060000 	mrspl	r0, (UNDEF: 6)
    1908:	00781101 	rsbseq	r1, r8, r1, lsl #2
    190c:	23020000 	movwcs	r0, #8192	; 0x2000
    1910:	00290c00 	eoreq	r0, r9, r0, lsl #24
    1914:	52060000 	andpl	r0, r6, #0
    1918:	00781101 	rsbseq	r1, r8, r1, lsl #2
    191c:	23020000 	movwcs	r0, #8192	; 0x2000
    1920:	01160c04 	tsteq	r6, r4, lsl #24
    1924:	53060000 	movwpl	r0, #24576	; 0x6000
    1928:	00781101 	rsbseq	r1, r8, r1, lsl #2
    192c:	23020000 	movwcs	r0, #8192	; 0x2000
    1930:	00070c08 	andeq	r0, r7, r8, lsl #24
    1934:	54060000 	strpl	r0, [r6], #-0
    1938:	00781101 	rsbseq	r1, r8, r1, lsl #2
    193c:	23020000 	movwcs	r0, #8192	; 0x2000
    1940:	44490d0c 	strbmi	r0, [r9], #-3340	; 0xfffff2f4
    1944:	55060052 	strpl	r0, [r6, #-82]	; 0xffffffae
    1948:	00781101 	rsbseq	r1, r8, r1, lsl #2
    194c:	23020000 	movwcs	r0, #8192	; 0x2000
    1950:	444f0d10 	strbmi	r0, [pc], #-3344	; 1958 <_Min_Stack_Size+0x1558>
    1954:	56060052 			; <UNDEFINED> instruction: 0x56060052
    1958:	00781101 	rsbseq	r1, r8, r1, lsl #2
    195c:	23020000 	movwcs	r0, #8192	; 0x2000
    1960:	008b0c14 	addeq	r0, fp, r4, lsl ip
    1964:	57060000 	strpl	r0, [r6, -r0]
    1968:	00781101 	rsbseq	r1, r8, r1, lsl #2
    196c:	23020000 	movwcs	r0, #8192	; 0x2000
    1970:	000d0c18 	andeq	r0, sp, r8, lsl ip
    1974:	58060000 	stmdapl	r6, {}	; <UNPREDICTABLE>
    1978:	00781101 	rsbseq	r1, r8, r1, lsl #2
    197c:	23020000 	movwcs	r0, #8192	; 0x2000
    1980:	46410d1c 			; <UNDEFINED> instruction: 0x46410d1c
    1984:	59060052 	stmdbpl	r6, {r1, r4, r6}
    1988:	01d71101 	bicseq	r1, r7, r1, lsl #2
    198c:	23020000 	movwcs	r0, #8192	; 0x2000
    1990:	52420d20 	subpl	r0, r2, #32, 26	; 0x800
    1994:	5a060052 	bpl	181ae4 <_Min_Stack_Size+0x1816e4>
    1998:	00781101 	rsbseq	r1, r8, r1, lsl #2
    199c:	23020000 	movwcs	r0, #8192	; 0x2000
    19a0:	780e0028 	stmdavc	lr, {r3, r5}
    19a4:	d7000000 	strle	r0, [r0, -r0]
    19a8:	0f000001 	svceq	0x00000001
    19ac:	00000097 	muleq	r0, r7, r0
    19b0:	c7050001 	strgt	r0, [r5, -r1]
    19b4:	10000001 	andne	r0, r0, r1
    19b8:	00000157 	andeq	r0, r0, r7, asr r1
    19bc:	03015b06 	movweq	r5, #6918	; 0x1b06
    19c0:	0000011c 	andeq	r0, r0, ip, lsl r1
    19c4:	6b040802 	blvs	1039d4 <_Min_Stack_Size+0x1035d4>
    19c8:	1000000c 	andne	r0, r0, ip
    19cc:	00000d8a 	andeq	r0, r0, sl, lsl #27
    19d0:	17016507 	strne	r6, [r1, -r7, lsl #10]
    19d4:	00000097 	muleq	r0, r7, r0
    19d8:	000e7603 	andeq	r7, lr, r3, lsl #12
    19dc:	0e2e0800 	cdpeq	8, 2, cr0, cr14, cr0, {0}
    19e0:	00000033 	andeq	r0, r0, r3, lsr r0
    19e4:	000a9b03 	andeq	r9, sl, r3, lsl #22
    19e8:	0e740800 	cdpeq	8, 7, cr0, cr4, cr0, {0}
    19ec:	00000033 	andeq	r0, r0, r3, lsr r0
    19f0:	a5080411 	strge	r0, [r8, #-1041]	; 0xfffffbef
    19f4:	00023703 	andeq	r3, r2, r3, lsl #14
    19f8:	0bcd1200 	bleq	ff346200 <BootRAM+0xe2b69a1>
    19fc:	a7080000 	strge	r0, [r8, -r0]
    1a00:	0001f00c 	andeq	pc, r1, ip
    1a04:	0cbe1200 	lfmeq	f1, 4, [lr]
    1a08:	a8080000 	stmdage	r8, {}	; <UNPREDICTABLE>
    1a0c:	00023713 	andeq	r3, r2, r3, lsl r7
    1a10:	520e0000 	andpl	r0, lr, #0
    1a14:	47000000 	strmi	r0, [r0, -r0]
    1a18:	0f000002 	svceq	0x00000002
    1a1c:	00000097 	muleq	r0, r7, r0
    1a20:	08070003 	stmdaeq	r7, {r0, r1}
    1a24:	6f09a208 	svcvs	0x0009a208
    1a28:	08000002 	stmdaeq	r0, {r1}
    1a2c:	00000acc 	andeq	r0, r0, ip, asr #21
    1a30:	8b07a408 	blhi	1eaa58 <_Min_Stack_Size+0x1ea658>
    1a34:	02000000 	andeq	r0, r0, #0
    1a38:	6d080023 	stcvs	0, cr0, [r8, #-140]	; 0xffffff74
    1a3c:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    1a40:	021505a9 	andseq	r0, r5, #708837376	; 0x2a400000
    1a44:	23020000 	movwcs	r0, #8192	; 0x2000
    1a48:	3e030004 	cdpcc	0, 0, cr0, cr3, cr4, {0}
    1a4c:	0800000c 	stmdaeq	r0, {r2, r3}
    1a50:	024703aa 	subeq	r0, r7, #-1476395006	; 0xa8000002
    1a54:	04130000 	ldreq	r0, [r3], #-0
    1a58:	000c1703 	andeq	r1, ip, r3, lsl #14
    1a5c:	19160900 	ldmdbne	r6, {r8, fp}
    1a60:	0000007d 	andeq	r0, r0, sp, ror r0
    1a64:	000a7303 	andeq	r7, sl, r3, lsl #6
    1a68:	0d0c0a00 	vstreq	s0, [ip, #-0]
    1a6c:	0000008b 	andeq	r0, r0, fp, lsl #1
    1a70:	000bc403 	andeq	ip, fp, r3, lsl #8
    1a74:	1b230900 	blne	8c3e7c <_Min_Stack_Size+0x8c3a7c>
    1a78:	00000289 	andeq	r0, r0, r9, lsl #5
    1a7c:	000c8814 	andeq	r8, ip, r4, lsl r8
    1a80:	34091800 	strcc	r1, [r9], #-2048	; 0xfffff800
    1a84:	00030708 	andeq	r0, r3, r8, lsl #14
    1a88:	0ecc0800 	cdpeq	8, 12, cr0, cr12, cr0, {0}
    1a8c:	36090000 	strcc	r0, [r9], -r0
    1a90:	00030713 	andeq	r0, r3, r3, lsl r7
    1a94:	00230200 	eoreq	r0, r3, r0, lsl #4
    1a98:	006b5f15 	rsbeq	r5, fp, r5, lsl pc
    1a9c:	8b073709 	blhi	1cf6c8 <_Min_Stack_Size+0x1cf2c8>
    1aa0:	02000000 	andeq	r0, r0, #0
    1aa4:	3a080423 	bcc	202b38 <_Min_Stack_Size+0x202738>
    1aa8:	0900000d 	stmdbeq	r0, {r0, r2, r3}
    1aac:	008b0b37 	addeq	r0, fp, r7, lsr fp
    1ab0:	23020000 	movwcs	r0, #8192	; 0x2000
    1ab4:	0cb80808 	ldceq	8, cr0, [r8], #32
    1ab8:	37090000 	strcc	r0, [r9, -r0]
    1abc:	00008b14 	andeq	r8, r0, r4, lsl fp
    1ac0:	0c230200 	sfmeq	f0, 4, [r3], #-0
    1ac4:	000b2008 	andeq	r2, fp, r8
    1ac8:	1b370900 	blne	dc3ed0 <_Min_Stack_Size+0xdc3ad0>
    1acc:	0000008b 	andeq	r0, r0, fp, lsl #1
    1ad0:	15102302 	ldrne	r2, [r0, #-770]	; 0xfffffcfe
    1ad4:	0900785f 	stmdbeq	r0, {r0, r1, r2, r3, r4, r6, fp, ip, sp, lr}
    1ad8:	030d0b38 	movweq	r0, #56120	; 0xdb38
    1adc:	23020000 	movwcs	r0, #8192	; 0x2000
    1ae0:	04160014 	ldreq	r0, [r6], #-20	; 0xffffffec
    1ae4:	000002a1 	andeq	r0, r0, r1, lsr #5
    1ae8:	00027d0e 	andeq	r7, r2, lr, lsl #26
    1aec:	00031d00 	andeq	r1, r3, r0, lsl #26
    1af0:	00970f00 	addseq	r0, r7, r0, lsl #30
    1af4:	00000000 	andeq	r0, r0, r0
    1af8:	000d5514 	andeq	r5, sp, r4, lsl r5
    1afc:	3c092400 	cfstrscc	mvf2, [r9], {-0}
    1b00:	0003b208 	andeq	fp, r3, r8, lsl #4
    1b04:	0b3f0800 	bleq	fc3b0c <_Min_Stack_Size+0xfc370c>
    1b08:	3e090000 	cdpcc	0, 0, cr0, cr9, cr0, {0}
    1b0c:	00008b09 	andeq	r8, r0, r9, lsl #22
    1b10:	00230200 	eoreq	r0, r3, r0, lsl #4
    1b14:	000ad408 	andeq	sp, sl, r8, lsl #8
    1b18:	093f0900 	ldmdbeq	pc!, {r8, fp}	; <UNPREDICTABLE>
    1b1c:	0000008b 	andeq	r0, r0, fp, lsl #1
    1b20:	08042302 	stmdaeq	r4, {r1, r8, r9, sp}
    1b24:	00000ac2 	andeq	r0, r0, r2, asr #21
    1b28:	8b094009 	blhi	251b54 <_Min_Stack_Size+0x251754>
    1b2c:	02000000 	andeq	r0, r0, #0
    1b30:	98080823 	stmdals	r8, {r0, r1, r5, fp}
    1b34:	0900000b 	stmdbeq	r0, {r0, r1, r3}
    1b38:	008b0941 	addeq	r0, fp, r1, asr #18
    1b3c:	23020000 	movwcs	r0, #8192	; 0x2000
    1b40:	0c62080c 	stcleq	8, cr0, [r2], #-48	; 0xffffffd0
    1b44:	42090000 	andmi	r0, r9, #0
    1b48:	00008b09 	andeq	r8, r0, r9, lsl #22
    1b4c:	10230200 	eorne	r0, r3, r0, lsl #4
    1b50:	000cd808 	andeq	sp, ip, r8, lsl #16
    1b54:	09430900 	stmdbeq	r3, {r8, fp}^
    1b58:	0000008b 	andeq	r0, r0, fp, lsl #1
    1b5c:	08142302 	ldmdaeq	r4, {r1, r8, r9, sp}
    1b60:	00000ab0 			; <UNDEFINED> instruction: 0x00000ab0
    1b64:	8b094409 	blhi	252b90 <_Min_Stack_Size+0x252790>
    1b68:	02000000 	andeq	r0, r0, #0
    1b6c:	48081823 	stmdami	r8, {r0, r1, r5, fp, ip}
    1b70:	0900000b 	stmdbeq	r0, {r0, r1, r3}
    1b74:	008b0945 	addeq	r0, fp, r5, asr #18
    1b78:	23020000 	movwcs	r0, #8192	; 0x2000
    1b7c:	0c4e081c 	mcrreq	8, 1, r0, lr, cr12
    1b80:	46090000 	strmi	r0, [r9], -r0
    1b84:	00008b09 	andeq	r8, r0, r9, lsl #22
    1b88:	20230200 	eorcs	r0, r3, r0, lsl #4
    1b8c:	0a241700 	beq	907794 <_Min_Stack_Size+0x907394>
    1b90:	01080000 	mrseq	r0, (UNDEF: 8)
    1b94:	00084f09 	andeq	r4, r8, r9, lsl #30
    1b98:	08000004 	stmdaeq	r0, {r2}
    1b9c:	00000e36 	andeq	r0, r0, r6, lsr lr
    1ba0:	000a5009 	andeq	r5, sl, r9
    1ba4:	02000004 	andeq	r0, r0, #4
    1ba8:	91080023 	tstls	r8, r3, lsr #32
    1bac:	0900000d 	stmdbeq	r0, {r0, r2, r3}
    1bb0:	04000951 	streq	r0, [r0], #-2385	; 0xfffff6af
    1bb4:	23030000 	movwcs	r0, #12288	; 0x3000
    1bb8:	6d080180 	stfvss	f0, [r8, #-512]	; 0xfffffe00
    1bbc:	0900000e 	stmdbeq	r0, {r1, r2, r3}
    1bc0:	027d0a53 	rsbseq	r0, sp, #339968	; 0x53000
    1bc4:	23030000 	movwcs	r0, #12288	; 0x3000
    1bc8:	b9080280 	stmdblt	r8, {r7, r9}
    1bcc:	0900000e 	stmdbeq	r0, {r1, r2, r3}
    1bd0:	027d0a56 	rsbseq	r0, sp, #352256	; 0x56000
    1bd4:	23030000 	movwcs	r0, #12288	; 0x3000
    1bd8:	0e000284 	cdpeq	2, 0, cr0, cr0, cr4, {4}
    1bdc:	0000027b 	andeq	r0, r0, fp, ror r2
    1be0:	00000410 	andeq	r0, r0, r0, lsl r4
    1be4:	0000970f 	andeq	r9, r0, pc, lsl #14
    1be8:	17001f00 	strne	r1, [r0, -r0, lsl #30]
    1bec:	00000c77 	andeq	r0, r0, r7, ror ip
    1bf0:	62090190 	andvs	r0, r9, #144, 2	; 0x24
    1bf4:	00045c08 	andeq	r5, r4, r8, lsl #24
    1bf8:	0ecc0800 	cdpeq	8, 12, cr0, cr12, cr0, {0}
    1bfc:	63090000 	movwvs	r0, #36864	; 0x9000
    1c00:	00045c12 	andeq	r5, r4, r2, lsl ip
    1c04:	00230200 	eoreq	r0, r3, r0, lsl #4
    1c08:	000b5708 	andeq	r5, fp, r8, lsl #14
    1c0c:	06640900 	strbteq	r0, [r4], -r0, lsl #18
    1c10:	0000008b 	andeq	r0, r0, fp, lsl #1
    1c14:	08042302 	stmdaeq	r4, {r1, r8, r9, sp}
    1c18:	00000aa3 	andeq	r0, r0, r3, lsr #21
    1c1c:	62096609 	andvs	r6, r9, #9437184	; 0x900000
    1c20:	02000004 	andeq	r0, r0, #4
    1c24:	24080823 	strcs	r0, [r8], #-2083	; 0xfffff7dd
    1c28:	0900000a 	stmdbeq	r0, {r1, r3}
    1c2c:	03b21e67 			; <UNDEFINED> instruction: 0x03b21e67
    1c30:	23030000 	movwcs	r0, #12288	; 0x3000
    1c34:	16000188 	strne	r0, [r0], -r8, lsl #3
    1c38:	00041004 	andeq	r1, r4, r4
    1c3c:	04720e00 	ldrbteq	r0, [r2], #-3584	; 0xfffff200
    1c40:	04720000 	ldrbteq	r0, [r2], #-0
    1c44:	970f0000 	strls	r0, [pc, -r0]
    1c48:	1f000000 	svcne	0x00000000
    1c4c:	78041600 	stmdavc	r4, {r9, sl, ip}
    1c50:	18000004 	stmdane	r0, {r2}
    1c54:	0ddc1401 	cfldrdeq	mvd1, [ip, #4]
    1c58:	09080000 	stmdbeq	r8, {}	; <UNPREDICTABLE>
    1c5c:	04a6087a 	strteq	r0, [r6], #2170	; 0x87a
    1c60:	01080000 	mrseq	r0, (UNDEF: 8)
    1c64:	0900000c 	stmdbeq	r0, {r2, r3}
    1c68:	04a6117b 	strteq	r1, [r6], #379	; 0x17b
    1c6c:	23020000 	movwcs	r0, #8192	; 0x2000
    1c70:	07a00800 	streq	r0, [r0, r0, lsl #16]!
    1c74:	7c090000 	stcvc	0, cr0, [r9], {-0}
    1c78:	00008b06 	andeq	r8, r0, r6, lsl #22
    1c7c:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    1c80:	52041600 	andpl	r1, r4, #0, 12
    1c84:	14000000 	strne	r0, [r0], #-0
    1c88:	00000b18 	andeq	r0, r0, r8, lsl fp
    1c8c:	08ba0968 	ldmeq	sl!, {r3, r5, r6, r8, fp}
    1c90:	0000061f 	andeq	r0, r0, pc, lsl r6
    1c94:	00705f15 	rsbseq	r5, r0, r5, lsl pc
    1c98:	a612bb09 	ldrge	fp, [r2], -r9, lsl #22
    1c9c:	02000004 	andeq	r0, r0, #4
    1ca0:	5f150023 	svcpl	0x00150023
    1ca4:	bc090072 	stclt	0, cr0, [r9], {114}	; 0x72
    1ca8:	00008b07 	andeq	r8, r0, r7, lsl #22
    1cac:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    1cb0:	00775f15 	rsbseq	r5, r7, r5, lsl pc
    1cb4:	8b07bd09 	blhi	1f10e0 <_Min_Stack_Size+0x1f0ce0>
    1cb8:	02000000 	andeq	r0, r0, #0
    1cbc:	6c080823 	stcvs	8, cr0, [r8], {35}	; 0x23
    1cc0:	0900000a 	stmdbeq	r0, {r1, r3}
    1cc4:	002c09be 	strhteq	r0, [ip], -lr
    1cc8:	23020000 	movwcs	r0, #8192	; 0x2000
    1ccc:	0c2e080c 	stceq	8, cr0, [lr], #-48	; 0xffffffd0
    1cd0:	bf090000 	svclt	0x00090000
    1cd4:	00002c09 	andeq	r2, r0, r9, lsl #24
    1cd8:	0e230200 	cdpeq	2, 2, cr0, cr3, cr0, {0}
    1cdc:	66625f15 	uqadd16vs	r5, r2, r5
    1ce0:	11c00900 	bicne	r0, r0, r0, lsl #18
    1ce4:	0000047a 	andeq	r0, r0, sl, ror r4
    1ce8:	08102302 	ldmdaeq	r0, {r1, r8, r9, sp}
    1cec:	00000a63 	andeq	r0, r0, r3, ror #20
    1cf0:	8b07c109 	blhi	1f211c <_Min_Stack_Size+0x1f1d1c>
    1cf4:	02000000 	andeq	r0, r0, #0
    1cf8:	a8081823 	stmdage	r8, {r0, r1, r5, fp, ip}
    1cfc:	0900000a 	stmdbeq	r0, {r1, r3}
    1d00:	027b0ac8 	rsbseq	r0, fp, #200, 20	; 0xc8000
    1d04:	23020000 	movwcs	r0, #8192	; 0x2000
    1d08:	089d081c 	ldmeq	sp, {r2, r3, r4, fp}
    1d0c:	ca090000 	bgt	241d14 <_Min_Stack_Size+0x241914>
    1d10:	0007d01d 	andeq	sp, r7, sp, lsl r0
    1d14:	20230200 	eorcs	r0, r3, r0, lsl #4
    1d18:	0004a708 	andeq	sl, r4, r8, lsl #14
    1d1c:	1dcc0900 	vstrne.16	s1, [ip]	; <UNPREDICTABLE>
    1d20:	000007fb 	strdeq	r0, [r0], -fp
    1d24:	08242302 	stmdaeq	r4!, {r1, r8, r9, sp}
    1d28:	00000edd 	ldrdeq	r0, [r0], -sp
    1d2c:	200dcf09 	andcs	ip, sp, r9, lsl #30
    1d30:	02000008 	andeq	r0, r0, #8
    1d34:	d9082823 	stmdble	r8, {r0, r1, r5, fp, sp}
    1d38:	0900000b 	stmdbeq	r0, {r0, r1, r3}
    1d3c:	083b09d0 	ldmdaeq	fp!, {r4, r6, r7, r8, fp}
    1d40:	23020000 	movwcs	r0, #8192	; 0x2000
    1d44:	755f152c 	ldrbvc	r1, [pc, #-1324]	; 1820 <_Min_Stack_Size+0x1420>
    1d48:	d3090062 	movwle	r0, #36962	; 0x9062
    1d4c:	00047a11 	andeq	r7, r4, r1, lsl sl
    1d50:	30230200 	eorcc	r0, r3, r0, lsl #4
    1d54:	70755f15 	rsbsvc	r5, r5, r5, lsl pc
    1d58:	12d40900 	sbcsne	r0, r4, #0, 18
    1d5c:	000004a6 	andeq	r0, r0, r6, lsr #9
    1d60:	15382302 	ldrne	r2, [r8, #-770]!	; 0xfffffcfe
    1d64:	0072755f 	rsbseq	r7, r2, pc, asr r5
    1d68:	8b07d509 	blhi	1f7194 <_Min_Stack_Size+0x1f6d94>
    1d6c:	02000000 	andeq	r0, r0, #0
    1d70:	eb083c23 	bl	210e04 <_Min_Stack_Size+0x210a04>
    1d74:	0900000e 	stmdbeq	r0, {r1, r2, r3}
    1d78:	084111d8 	stmdaeq	r1, {r3, r4, r6, r7, r8, ip}^
    1d7c:	23020000 	movwcs	r0, #8192	; 0x2000
    1d80:	0e7d0840 	cdpeq	8, 7, cr0, cr13, cr0, {2}
    1d84:	d9090000 	stmdble	r9, {}	; <UNPREDICTABLE>
    1d88:	00085111 	andeq	r5, r8, r1, lsl r1
    1d8c:	43230200 			; <UNDEFINED> instruction: 0x43230200
    1d90:	626c5f15 	rsbvs	r5, ip, #21, 30	; 0x54
    1d94:	11dc0900 	bicsne	r0, ip, r0, lsl #18
    1d98:	0000047a 	andeq	r0, r0, sl, ror r4
    1d9c:	08442302 	stmdaeq	r4, {r1, r8, r9, sp}^
    1da0:	00000d4c 	andeq	r0, r0, ip, asr #26
    1da4:	8b07df09 	blhi	1f99d0 <_Min_Stack_Size+0x1f95d0>
    1da8:	02000000 	andeq	r0, r0, #0
    1dac:	2c084c23 	stccs	12, cr4, [r8], {35}	; 0x23
    1db0:	0900000b 	stmdbeq	r0, {r0, r1, r3}
    1db4:	01fd0ae0 	mvnseq	r0, r0, ror #21
    1db8:	23020000 	movwcs	r0, #8192	; 0x2000
    1dbc:	0a4c0850 	beq	1303f04 <_Min_Stack_Size+0x1303b04>
    1dc0:	e3090000 	movw	r0, #36864	; 0x9000
    1dc4:	00063e12 	andeq	r3, r6, r2, lsl lr
    1dc8:	54230200 	strtpl	r0, [r3], #-512	; 0xfffffe00
    1dcc:	000d5a08 	andeq	r5, sp, r8, lsl #20
    1dd0:	0ce70900 			; <UNDEFINED> instruction: 0x0ce70900
    1dd4:	00000295 	muleq	r0, r5, r2
    1dd8:	08582302 	ldmdaeq	r8, {r1, r8, r9, sp}^
    1ddc:	00000c7f 	andeq	r0, r0, pc, ror ip
    1de0:	6f0ee909 	svcvs	0x000ee909
    1de4:	02000002 	andeq	r0, r0, #2
    1de8:	b1085c23 	tstlt	r8, r3, lsr #24
    1dec:	0900000e 	stmdbeq	r0, {r1, r2, r3}
    1df0:	008b09ea 	addeq	r0, fp, sl, ror #19
    1df4:	23020000 	movwcs	r0, #8192	; 0x2000
    1df8:	01190064 	tsteq	r9, r4, rrx
    1dfc:	0000008b 	andeq	r0, r0, fp, lsl #1
    1e00:	0000063e 	andeq	r0, r0, lr, lsr r6
    1e04:	00063e1a 	andeq	r3, r6, sl, lsl lr
    1e08:	027b1a00 	rsbseq	r1, fp, #0, 20
    1e0c:	be1a0000 	cdplt	0, 1, cr0, cr10, cr0, {0}
    1e10:	1a000007 	bne	1e34 <_Min_Stack_Size+0x1a34>
    1e14:	0000008b 	andeq	r0, r0, fp, lsl #1
    1e18:	49041600 	stmdbmi	r4, {r9, sl, ip}
    1e1c:	04000006 	streq	r0, [r0], #-6
    1e20:	0000063e 	andeq	r0, r0, lr, lsr r6
    1e24:	000e4d1b 	andeq	r4, lr, fp, lsl sp
    1e28:	09042800 	stmdbeq	r4, {fp, sp}
    1e2c:	be080265 	cdplt	2, 0, cr0, cr8, cr5, {3}
    1e30:	0c000007 	stceq	0, cr0, [r0], {7}
    1e34:	00000c5b 	andeq	r0, r0, fp, asr ip
    1e38:	07026709 	streq	r6, [r2, -r9, lsl #14]
    1e3c:	0000008b 	andeq	r0, r0, fp, lsl #1
    1e40:	0c002302 	stceq	3, cr2, [r0], {2}
    1e44:	00000beb 	andeq	r0, r0, fp, ror #23
    1e48:	0b026c09 	bleq	9ce74 <_Min_Stack_Size+0x9ca74>
    1e4c:	000008b3 			; <UNDEFINED> instruction: 0x000008b3
    1e50:	0c042302 	stceq	3, cr2, [r4], {2}
    1e54:	00000a93 	muleq	r0, r3, sl
    1e58:	14026c09 	strne	r6, [r2], #-3081	; 0xfffff3f7
    1e5c:	000008b3 			; <UNDEFINED> instruction: 0x000008b3
    1e60:	0c082302 	stceq	3, cr2, [r8], {2}
    1e64:	00000ee3 	andeq	r0, r0, r3, ror #29
    1e68:	1e026c09 	cdpne	12, 0, cr6, cr2, cr9, {0}
    1e6c:	000008b3 			; <UNDEFINED> instruction: 0x000008b3
    1e70:	0c0c2302 	stceq	3, cr2, [ip], {2}
    1e74:	00000b52 	andeq	r0, r0, r2, asr fp
    1e78:	08026e09 	stmdaeq	r2, {r0, r3, r9, sl, fp, sp, lr}
    1e7c:	0000008b 	andeq	r0, r0, fp, lsl #1
    1e80:	0c102302 	ldceq	3, cr2, [r0], {2}
    1e84:	00000b34 	andeq	r0, r0, r4, lsr fp
    1e88:	08026f09 	stmdaeq	r2, {r0, r3, r8, r9, sl, fp, sp, lr}
    1e8c:	00000aec 	andeq	r0, r0, ip, ror #21
    1e90:	0c142302 	ldceq	3, cr2, [r4], {2}
    1e94:	00000e98 	muleq	r0, r8, lr
    1e98:	07027209 	streq	r7, [r2, -r9, lsl #4]
    1e9c:	0000008b 	andeq	r0, r0, fp, lsl #1
    1ea0:	0c302302 	ldceq	3, cr2, [r0], #-8
    1ea4:	00000e2e 	andeq	r0, r0, lr, lsr #28
    1ea8:	16027309 	strne	r7, [r2], -r9, lsl #6
    1eac:	00000b02 	andeq	r0, r0, r2, lsl #22
    1eb0:	0c342302 	ldceq	3, cr2, [r4], #-8
    1eb4:	00000be0 	andeq	r0, r0, r0, ror #23
    1eb8:	07027509 	streq	r7, [r2, -r9, lsl #10]
    1ebc:	0000008b 	andeq	r0, r0, fp, lsl #1
    1ec0:	0c382302 	ldceq	3, cr2, [r8], #-8
    1ec4:	00000c34 	andeq	r0, r0, r4, lsr ip
    1ec8:	0a027709 	beq	9faf4 <_Min_Stack_Size+0x9f6f4>
    1ecc:	00000b14 	andeq	r0, r0, r4, lsl fp
    1ed0:	0c3c2302 	ldceq	3, cr2, [ip], #-8
    1ed4:	00000aba 			; <UNDEFINED> instruction: 0x00000aba
    1ed8:	13027a09 	movwne	r7, #10761	; 0x2a09
    1edc:	00000307 	andeq	r0, r0, r7, lsl #6
    1ee0:	0c402302 	mcrreq	3, 0, r2, r0, cr2
    1ee4:	00000aec 	andeq	r0, r0, ip, ror #21
    1ee8:	07027b09 	streq	r7, [r2, -r9, lsl #22]
    1eec:	0000008b 	andeq	r0, r0, fp, lsl #1
    1ef0:	0c442302 	mcrreq	3, 0, r2, r4, cr2
    1ef4:	00000b75 	andeq	r0, r0, r5, ror fp
    1ef8:	13027c09 	movwne	r7, #11273	; 0x2c09
    1efc:	00000307 	andeq	r0, r0, r7, lsl #6
    1f00:	0c482302 	mcrreq	3, 0, r2, r8, cr2
    1f04:	00000c07 	andeq	r0, r0, r7, lsl #24
    1f08:	14027d09 	strne	r7, [r2], #-3337	; 0xfffff2f7
    1f0c:	00000b1a 	andeq	r0, r0, sl, lsl fp
    1f10:	0c4c2302 	mcrreq	3, 0, r2, ip, cr2
    1f14:	00000d32 	andeq	r0, r0, r2, lsr sp
    1f18:	07028009 	streq	r8, [r2, -r9]
    1f1c:	0000008b 	andeq	r0, r0, fp, lsl #1
    1f20:	0c502302 	mrrceq	3, 0, r2, r0, cr2
    1f24:	00000d9d 	muleq	r0, sp, sp
    1f28:	09028109 	stmdbeq	r2, {r0, r3, r8, pc}
    1f2c:	000007be 			; <UNDEFINED> instruction: 0x000007be
    1f30:	0c542302 	mrrceq	3, 0, r2, r4, cr2
    1f34:	00000d2d 	andeq	r0, r0, sp, lsr #26
    1f38:	0702a409 	streq	sl, [r2, -r9, lsl #8]
    1f3c:	00000ac7 	andeq	r0, r0, r7, asr #21
    1f40:	0c582302 	mrrceq	3, 0, r2, r8, cr2
    1f44:	00000c77 	andeq	r0, r0, r7, ror ip
    1f48:	1302a809 	movwne	sl, #10249	; 0x2809
    1f4c:	0000045c 	andeq	r0, r0, ip, asr r4
    1f50:	02c82303 	sbceq	r2, r8, #201326592	; 0xc000000
    1f54:	000bbb0c 	andeq	fp, fp, ip, lsl #22
    1f58:	02a90900 	adceq	r0, r9, #0, 18
    1f5c:	00041012 	andeq	r1, r4, r2, lsl r0
    1f60:	cc230300 	stcgt	3, cr0, [r3], #-0
    1f64:	0ba20c02 	bleq	fe884f74 <BootRAM+0xd7f5715>
    1f68:	ad090000 	stcge	0, cr0, [r9, #-0]
    1f6c:	0b2c0c02 	bleq	b04f7c <_Min_Stack_Size+0xb04b7c>
    1f70:	23030000 	movwcs	r0, #12288	; 0x3000
    1f74:	0b0c05dc 	bleq	3036ec <_Min_Stack_Size+0x3032ec>
    1f78:	0900000e 	stmdbeq	r0, {r1, r2, r3}
    1f7c:	6e1002b2 	mrcvs	2, 0, r0, cr0, cr2, {5}
    1f80:	03000008 	movweq	r0, #8
    1f84:	0c05e023 	stceq	0, cr14, [r5], {35}	; 0x23
    1f88:	00000cb3 			; <UNDEFINED> instruction: 0x00000cb3
    1f8c:	0a02b409 	beq	aefb8 <_Min_Stack_Size+0xaebb8>
    1f90:	00000b38 	andeq	r0, r0, r8, lsr fp
    1f94:	05ec2303 	strbeq	r2, [ip, #771]!	; 0x303
    1f98:	c4041600 	strgt	r1, [r4], #-1536	; 0xfffffa00
    1f9c:	02000007 	andeq	r0, r0, #7
    1fa0:	025f0801 	subseq	r0, pc, #65536	; 0x10000
    1fa4:	c4040000 	strgt	r0, [r4], #-0
    1fa8:	16000007 	strne	r0, [r0], -r7
    1fac:	00061f04 	andeq	r1, r6, r4, lsl #30
    1fb0:	8b011900 	blhi	483b8 <_Min_Stack_Size+0x47fb8>
    1fb4:	f5000000 			; <UNDEFINED> instruction: 0xf5000000
    1fb8:	1a000007 	bne	1fdc <_Min_Stack_Size+0x1bdc>
    1fbc:	0000063e 	andeq	r0, r0, lr, lsr r6
    1fc0:	00027b1a 	andeq	r7, r2, sl, lsl fp
    1fc4:	07f51a00 	ldrbeq	r1, [r5, r0, lsl #20]!
    1fc8:	8b1a0000 	blhi	681fd0 <_Min_Stack_Size+0x681bd0>
    1fcc:	00000000 	andeq	r0, r0, r0
    1fd0:	07cb0416 	bfieq	r0, r6, #8, #4
    1fd4:	04160000 	ldreq	r0, [r6], #-0
    1fd8:	000007d6 	ldrdeq	r0, [r0], -r6
    1fdc:	02090119 	andeq	r0, r9, #1073741830	; 0x40000006
    1fe0:	08200000 	stmdaeq	r0!, {}	; <UNPREDICTABLE>
    1fe4:	3e1a0000 	cdpcc	0, 1, cr0, cr10, cr0, {0}
    1fe8:	1a000006 	bne	2008 <_Min_Stack_Size+0x1c08>
    1fec:	0000027b 	andeq	r0, r0, fp, ror r2
    1ff0:	0002091a 	andeq	r0, r2, sl, lsl r9
    1ff4:	008b1a00 	addeq	r1, fp, r0, lsl #20
    1ff8:	16000000 	strne	r0, [r0], -r0
    1ffc:	00080104 	andeq	r0, r8, r4, lsl #2
    2000:	8b011900 	blhi	48408 <_Min_Stack_Size+0x48008>
    2004:	3b000000 	blcc	200c <_Min_Stack_Size+0x1c0c>
    2008:	1a000008 	bne	2030 <_Min_Stack_Size+0x1c30>
    200c:	0000063e 	andeq	r0, r0, lr, lsr r6
    2010:	00027b1a 	andeq	r7, r2, sl, lsl fp
    2014:	04160000 	ldreq	r0, [r6], #-0
    2018:	00000826 	andeq	r0, r0, r6, lsr #16
    201c:	0000520e 	andeq	r5, r0, lr, lsl #4
    2020:	00085100 	andeq	r5, r8, r0, lsl #2
    2024:	00970f00 	addseq	r0, r7, r0, lsl #30
    2028:	00020000 	andeq	r0, r2, r0
    202c:	0000520e 	andeq	r5, r0, lr, lsl #4
    2030:	00086100 	andeq	r6, r8, r0, lsl #2
    2034:	00970f00 	addseq	r0, r7, r0, lsl #30
    2038:	00000000 	andeq	r0, r0, r0
    203c:	000b2510 	andeq	r2, fp, r0, lsl r5
    2040:	01240900 			; <UNDEFINED> instruction: 0x01240900
    2044:	0004ac1a 	andeq	sl, r4, sl, lsl ip
    2048:	0e051c00 	cdpeq	12, 0, cr1, cr5, cr0, {0}
    204c:	090c0000 	stmdbeq	ip, {}	; <UNPREDICTABLE>
    2050:	ad080128 	stfges	f0, [r8, #-160]	; 0xffffff60
    2054:	0c000008 	stceq	0, cr0, [r0], {8}
    2058:	00000ecc 	andeq	r0, r0, ip, asr #29
    205c:	11012a09 	tstne	r1, r9, lsl #20
    2060:	000008ad 	andeq	r0, r0, sp, lsr #17
    2064:	0c002302 	stceq	3, cr2, [r0], {2}
    2068:	00000d83 	andeq	r0, r0, r3, lsl #27
    206c:	07012b09 	streq	r2, [r1, -r9, lsl #22]
    2070:	0000008b 	andeq	r0, r0, fp, lsl #1
    2074:	0c042302 	stceq	3, cr2, [r4], {2}
    2078:	00000bd3 	ldrdeq	r0, [r0], -r3
    207c:	0b012c09 	bleq	4d0a8 <_Min_Stack_Size+0x4cca8>
    2080:	000008b3 			; <UNDEFINED> instruction: 0x000008b3
    2084:	00082302 	andeq	r2, r8, r2, lsl #6
    2088:	086e0416 	stmdaeq	lr!, {r1, r2, r4, sl}^
    208c:	04160000 	ldreq	r0, [r6], #-0
    2090:	00000861 	andeq	r0, r0, r1, ror #16
    2094:	000ae41c 	andeq	lr, sl, ip, lsl r4
    2098:	44090e00 	strmi	r0, [r9], #-3584	; 0xfffff200
    209c:	08f80801 	ldmeq	r8!, {r0, fp}^
    20a0:	c10c0000 	mrsgt	r0, (UNDEF: 12)
    20a4:	0900000e 	stmdbeq	r0, {r1, r2, r3}
    20a8:	f8120145 			; <UNDEFINED> instruction: 0xf8120145
    20ac:	02000008 	andeq	r0, r0, #8
    20b0:	110c0023 	tstne	ip, r3, lsr #32
    20b4:	0900000c 	stmdbeq	r0, {r2, r3}
    20b8:	f8120146 			; <UNDEFINED> instruction: 0xf8120146
    20bc:	02000008 	andeq	r0, r0, #8
    20c0:	c70c0623 	strgt	r0, [ip, -r3, lsr #12]
    20c4:	0900000d 	stmdbeq	r0, {r0, r2, r3}
    20c8:	65120147 	ldrvs	r0, [r2, #-327]	; 0xfffffeb9
    20cc:	02000000 	andeq	r0, r0, #0
    20d0:	0e000c23 	cdpeq	12, 0, cr0, cr0, cr3, {1}
    20d4:	00000065 	andeq	r0, r0, r5, rrx
    20d8:	00000908 	andeq	r0, r0, r8, lsl #18
    20dc:	0000970f 	andeq	r9, r0, pc, lsl #14
    20e0:	0b000200 	bleq	28e8 <_Min_Stack_Size+0x24e8>
    20e4:	028509d0 	addeq	r0, r5, #208, 18	; 0x340000
    20e8:	000a4c07 	andeq	r4, sl, r7, lsl #24
    20ec:	0e830c00 	cdpeq	12, 8, cr0, cr3, cr0, {0}
    20f0:	87090000 	strhi	r0, [r9, -r0]
    20f4:	00971802 	addseq	r1, r7, r2, lsl #16
    20f8:	23020000 	movwcs	r0, #8192	; 0x2000
    20fc:	0e130c00 	cdpeq	12, 1, cr0, cr3, cr0, {0}
    2100:	88090000 	stmdahi	r9, {}	; <UNPREDICTABLE>
    2104:	07be1202 	ldreq	r1, [lr, r2, lsl #4]!
    2108:	23020000 	movwcs	r0, #8192	; 0x2000
    210c:	0b0b0c04 	bleq	2c5124 <_Min_Stack_Size+0x2c4d24>
    2110:	89090000 	stmdbhi	r9, {}	; <UNPREDICTABLE>
    2114:	0a4c1002 	beq	1306124 <_Min_Stack_Size+0x1305d24>
    2118:	23020000 	movwcs	r0, #8192	; 0x2000
    211c:	0cfd0c08 	ldcleq	12, cr0, [sp], #32
    2120:	8a090000 	bhi	242128 <_Min_Stack_Size+0x241d28>
    2124:	031d1702 	tsteq	sp, #524288	; 0x80000
    2128:	23020000 	movwcs	r0, #8192	; 0x2000
    212c:	0bf20c24 	bleq	ffc851c4 <BootRAM+0xebf5965>
    2130:	8b090000 	blhi	242138 <_Min_Stack_Size+0x241d38>
    2134:	008b0f02 	addeq	r0, fp, r2, lsl #30
    2138:	23020000 	movwcs	r0, #8192	; 0x2000
    213c:	0ec70c48 	cdpeq	12, 12, cr0, cr7, cr8, {2}
    2140:	8c090000 	stchi	0, cr0, [r9], {-0}
    2144:	00842c02 	addeq	r2, r4, r2, lsl #24
    2148:	23020000 	movwcs	r0, #8192	; 0x2000
    214c:	0a520c50 	beq	1485294 <_Min_Stack_Size+0x1484e94>
    2150:	8d090000 	stchi	0, cr0, [r9, #-0]
    2154:	08b91a02 	ldmeq	r9!, {r1, r9, fp, ip}
    2158:	23020000 	movwcs	r0, #8192	; 0x2000
    215c:	0b8b0c58 	bleq	fe2c52c4 <BootRAM+0xd235a65>
    2160:	8e090000 	cdphi	0, 0, cr0, cr9, cr0, {0}
    2164:	026f1602 	rsbeq	r1, pc, #2097152	; 0x200000
    2168:	23020000 	movwcs	r0, #8192	; 0x2000
    216c:	0e200c68 	cdpeq	12, 2, cr0, cr0, cr8, {3}
    2170:	8f090000 	svchi	0x00090000
    2174:	026f1602 	rsbeq	r1, pc, #2097152	; 0x200000
    2178:	23020000 	movwcs	r0, #8192	; 0x2000
    217c:	0a320c70 	beq	c85344 <_Min_Stack_Size+0xc84f44>
    2180:	90090000 	andls	r0, r9, r0
    2184:	026f1602 	rsbeq	r1, pc, #2097152	; 0x200000
    2188:	23020000 	movwcs	r0, #8192	; 0x2000
    218c:	0d420c78 	stcleq	12, cr0, [r2, #-480]	; 0xfffffe20
    2190:	91090000 	mrsls	r0, (UNDEF: 9)
    2194:	0a5c1002 	beq	17061a4 <_Min_Stack_Size+0x1705da4>
    2198:	23030000 	movwcs	r0, #12288	; 0x3000
    219c:	570c0180 	strpl	r0, [ip, -r0, lsl #3]
    21a0:	0900000a 	stmdbeq	r0, {r1, r3}
    21a4:	6c100292 	lfmvs	f0, 4, [r0], {146}	; 0x92
    21a8:	0300000a 	movweq	r0, #10
    21ac:	0c018823 	stceq	8, cr8, [r1], {35}	; 0x23
    21b0:	00000da5 	andeq	r0, r0, r5, lsr #27
    21b4:	0f029309 	svceq	0x00029309
    21b8:	0000008b 	andeq	r0, r0, fp, lsl #1
    21bc:	01a02303 	lsleq	r2, r3, #6
    21c0:	000a850c 	andeq	r8, sl, ip, lsl #10
    21c4:	02940900 	addseq	r0, r4, #0, 18
    21c8:	00026f16 	andeq	r6, r2, r6, lsl pc
    21cc:	a4230300 	strtge	r0, [r3], #-768	; 0xfffffd00
    21d0:	0bac0c01 	bleq	feb051dc <BootRAM+0xda7597d>
    21d4:	95090000 	strls	r0, [r9, #-0]
    21d8:	026f1602 	rsbeq	r1, pc, #2097152	; 0x200000
    21dc:	23030000 	movwcs	r0, #12288	; 0x3000
    21e0:	5c0c01ac 	stfpls	f0, [ip], {172}	; 0xac
    21e4:	0900000b 	stmdbeq	r0, {r0, r1, r3}
    21e8:	6f160296 	svcvs	0x00160296
    21ec:	03000002 	movweq	r0, #2
    21f0:	0c01b423 	cfstrseq	mvf11, [r1], {35}	; 0x23
    21f4:	00000c1f 	andeq	r0, r0, pc, lsl ip
    21f8:	16029709 	strne	r9, [r2], -r9, lsl #14
    21fc:	0000026f 	andeq	r0, r0, pc, ror #4
    2200:	01bc2303 			; <UNDEFINED> instruction: 0x01bc2303
    2204:	000b7a0c 	andeq	r7, fp, ip, lsl #20
    2208:	02980900 	addseq	r0, r8, #0, 18
    220c:	00026f16 	andeq	r6, r2, r6, lsl pc
    2210:	c4230300 	strtgt	r0, [r3], #-768	; 0xfffffd00
    2214:	0c590c01 	mrrceq	12, 0, r0, r9, cr1
    2218:	99090000 	stmdbls	r9, {}	; <UNPREDICTABLE>
    221c:	008b0802 	addeq	r0, fp, r2, lsl #16
    2220:	23030000 	movwcs	r0, #12288	; 0x3000
    2224:	0e0001cc 	adfeqdm	f0, f0, #4.0
    2228:	000007c4 	andeq	r0, r0, r4, asr #15
    222c:	00000a5c 	andeq	r0, r0, ip, asr sl
    2230:	0000970f 	andeq	r9, r0, pc, lsl #14
    2234:	0e001900 	vmlaeq.f16	s2, s0, s0	; <UNPREDICTABLE>
    2238:	000007c4 	andeq	r0, r0, r4, asr #15
    223c:	00000a6c 	andeq	r0, r0, ip, ror #20
    2240:	0000970f 	andeq	r9, r0, pc, lsl #14
    2244:	0e000700 	cdpeq	7, 0, cr0, cr0, cr0, {0}
    2248:	000007c4 	andeq	r0, r0, r4, asr #15
    224c:	00000a7c 	andeq	r0, r0, ip, ror sl
    2250:	0000970f 	andeq	r9, r0, pc, lsl #14
    2254:	0b001700 	bleq	7e5c <_Min_Stack_Size+0x7a5c>
    2258:	029e09f0 	addseq	r0, lr, #240, 18	; 0x3c0000
    225c:	000aa707 	andeq	sl, sl, r7, lsl #14
    2260:	0add0c00 	beq	ff745268 <BootRAM+0xe6b5a09>
    2264:	a1090000 	mrsge	r0, (UNDEF: 9)
    2268:	0aa71b02 	beq	fe9c8e78 <BootRAM+0xd939619>
    226c:	23020000 	movwcs	r0, #8192	; 0x2000
    2270:	0a400c00 	beq	1005278 <_Min_Stack_Size+0x1004e78>
    2274:	a2090000 	andge	r0, r9, #0
    2278:	0ab71802 	beq	fedc8288 <BootRAM+0xdd38a29>
    227c:	23020000 	movwcs	r0, #8192	; 0x2000
    2280:	a60e0078 			; <UNDEFINED> instruction: 0xa60e0078
    2284:	b7000004 	strlt	r0, [r0, -r4]
    2288:	0f00000a 	svceq	0x0000000a
    228c:	00000097 	muleq	r0, r7, r0
    2290:	970e001d 	smladls	lr, sp, r0, r0
    2294:	c7000000 	strgt	r0, [r0, -r0]
    2298:	0f00000a 	svceq	0x0000000a
    229c:	00000097 	muleq	r0, r7, r0
    22a0:	f01d001d 			; <UNDEFINED> instruction: 0xf01d001d
    22a4:	03028309 	movweq	r8, #8969	; 0x2309
    22a8:	00000aec 	andeq	r0, r0, ip, ror #21
    22ac:	000e4d1e 	andeq	r4, lr, lr, lsl sp
    22b0:	029a0900 	addseq	r0, sl, #0, 18
    22b4:	0009080b 	andeq	r0, r9, fp, lsl #16
    22b8:	0d251e00 	stceq	14, cr1, [r5, #-0]
    22bc:	a3090000 	movwge	r0, #36864	; 0x9000
    22c0:	0a7c0b02 	beq	1f04ed0 <_Min_Stack_Size+0x1f04ad0>
    22c4:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    22c8:	000007c4 	andeq	r0, r0, r4, asr #15
    22cc:	00000afc 	strdeq	r0, [r0], -ip
    22d0:	0000970f 	andeq	r9, r0, pc, lsl #14
    22d4:	1f001800 	svcne	0x00001800
    22d8:	00000ed2 	ldrdeq	r0, [r0], -r2
    22dc:	fc041601 	stc2	6, cr1, [r4], {1}
    22e0:	2000000a 	andcs	r0, r0, sl
    22e4:	000b1401 	andeq	r1, fp, r1, lsl #8
    22e8:	063e1a00 	ldrteq	r1, [lr], -r0, lsl #20
    22ec:	16000000 	strne	r0, [r0], -r0
    22f0:	000b0804 	andeq	r0, fp, r4, lsl #16
    22f4:	07041600 	streq	r1, [r4, -r0, lsl #12]
    22f8:	20000003 	andcs	r0, r0, r3
    22fc:	000b2c01 	andeq	r2, fp, r1, lsl #24
    2300:	008b1a00 	addeq	r1, fp, r0, lsl #20
    2304:	16000000 	strne	r0, [r0], -r0
    2308:	000b3204 	andeq	r3, fp, r4, lsl #4
    230c:	20041600 	andcs	r1, r4, r0, lsl #12
    2310:	0e00000b 	cdpeq	0, 0, cr0, cr0, cr11, {0}
    2314:	00000861 	andeq	r0, r0, r1, ror #16
    2318:	00000b48 	andeq	r0, r0, r8, asr #22
    231c:	0000970f 	andeq	r9, r0, pc, lsl #14
    2320:	09000200 	stmdbeq	r0, {r9}
    2324:	00000ccc 	andeq	r0, r0, ip, asr #25
    2328:	17033309 	strne	r3, [r3, -r9, lsl #6]
    232c:	0000063e 	andeq	r0, r0, lr, lsr r6
    2330:	c5090101 	strgt	r0, [r9, #-257]	; 0xfffffeff
    2334:	0900000c 	stmdbeq	r0, {r2, r3}
    2338:	441d0334 	ldrmi	r0, [sp], #-820	; 0xfffffccc
    233c:	01000006 	tsteq	r0, r6
    2340:	004d0e01 	subeq	r0, sp, r1, lsl #28
    2344:	0b760000 	bleq	1d8234c <_Min_Stack_Size+0x1d81f4c>
    2348:	970f0000 	strls	r0, [pc, -r0]
    234c:	11000000 	mrsne	r0, (UNDEF: 0)
    2350:	0b660400 	bleq	1983358 <_Min_Stack_Size+0x1982f58>
    2354:	b2210000 	eorlt	r0, r1, #0
    2358:	0100000d 	tsteq	r0, sp
    235c:	0b76161a 	bleq	1d87bcc <_Min_Stack_Size+0x1d877cc>
    2360:	03050000 	movweq	r0, #20480	; 0x5000
    2364:	08000a6a 	stmdaeq	r0, {r1, r3, r5, r6, r9, fp}
    2368:	00004d0e 	andeq	r4, r0, lr, lsl #26
    236c:	000b9d00 	andeq	r9, fp, r0, lsl #26
    2370:	00970f00 	addseq	r0, r7, r0, lsl #30
    2374:	00090000 	andeq	r0, r9, r0
    2378:	000b8d04 	andeq	r8, fp, r4, lsl #26
    237c:	0d602100 	stfeqe	f2, [r0, #-0]
    2380:	2d010000 	stccs	0, cr0, [r1, #-0]
    2384:	000b9d16 	andeq	r9, fp, r6, lsl sp
    2388:	97030500 	strls	r0, [r3, -r0, lsl #10]
    238c:	1408000a 	strne	r0, [r8], #-10
    2390:	00000e3e 	andeq	r0, r0, lr, lsr lr
    2394:	083b0102 	ldmdaeq	fp!, {r1, r8}
    2398:	00000be0 	andeq	r0, r0, r0, ror #23
    239c:	000d7e08 	andeq	r7, sp, r8, lsl #28
    23a0:	0b3c0100 	bleq	f027a8 <_Min_Stack_Size+0xf023a8>
    23a4:	00000041 	andeq	r0, r0, r1, asr #32
    23a8:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
    23ac:	00000c49 	andeq	r0, r0, r9, asr #24
    23b0:	410b3d01 	tstmi	fp, r1, lsl #26
    23b4:	02000000 	andeq	r0, r0, #0
    23b8:	22000123 	andcs	r0, r0, #-1073741816	; 0xc0000008
    23bc:	00000a49 	andeq	r0, r0, r9, asr #20
    23c0:	b4023e01 	strlt	r3, [r2], #-3585	; 0xfffff1ff
    23c4:	0100000b 	tsteq	r0, fp
    23c8:	00580305 	subseq	r0, r8, r5, lsl #6
    23cc:	4d0e2000 	stcmi	0, cr2, [lr, #-0]
    23d0:	03000000 	movweq	r0, #0
    23d4:	0f00000c 	svceq	0x0000000c
    23d8:	00000097 	muleq	r0, r7, r0
    23dc:	f3040015 	vqadd.u8	d0, d4, d5
    23e0:	2100000b 	tstcs	r0, fp
    23e4:	00000a12 	andeq	r0, r0, r2, lsl sl
    23e8:	03164001 	tsteq	r6, #1
    23ec:	0500000c 	streq	r0, [r0, #-12]
    23f0:	000ad203 	andeq	sp, sl, r3, lsl #4
    23f4:	004d0e08 	subeq	r0, sp, r8, lsl #28
    23f8:	0c2a0000 	stceq	0, cr0, [sl], #-0
    23fc:	970f0000 	strls	r0, [pc, -r0]
    2400:	1a000000 	bne	2408 <_Min_Stack_Size+0x2008>
    2404:	0c1a0400 	cfldrseq	mvf0, [sl], {-0}
    2408:	f6210000 			; <UNDEFINED> instruction: 0xf6210000
    240c:	0100000a 	tsteq	r0, sl
    2410:	0c2a164d 	stceq	6, cr1, [sl], #-308	; 0xfffffecc
    2414:	03050000 	movweq	r0, #20480	; 0x5000
    2418:	08000a7c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r9, fp}
    241c:	000d0c14 	andeq	r0, sp, r4, lsl ip
    2420:	71010400 	tstvc	r1, r0, lsl #8
    2424:	000c7c01 	andeq	r7, ip, r1, lsl #24
    2428:	0e900800 	cdpeq	8, 9, cr0, cr0, cr0, {0}
    242c:	71010000 	mrsvc	r0, (UNDEF: 1)
    2430:	00004101 	andeq	r4, r0, r1, lsl #2
    2434:	00230200 	eoreq	r0, r3, r0, lsl #4
    2438:	000dcc08 	andeq	ip, sp, r8, lsl #24
    243c:	01710100 	cmneq	r1, r0, lsl #2
    2440:	00000041 	andeq	r0, r0, r1, asr #32
    2444:	08012302 	stmdaeq	r1, {r1, r8, r9, sp}
    2448:	00000cab 	andeq	r0, r0, fp, lsr #25
    244c:	81017101 	tsthi	r1, r1, lsl #2
    2450:	0200000c 	andeq	r0, r0, #12
    2454:	04000223 	streq	r0, [r0], #-547	; 0xfffffddd
    2458:	00000c41 	andeq	r0, r0, r1, asr #24
    245c:	0000590e 	andeq	r5, r0, lr, lsl #18
    2460:	000c9100 	andeq	r9, ip, r0, lsl #2
    2464:	00970f00 	addseq	r0, r7, r0, lsl #30
    2468:	00000000 	andeq	r0, r0, r0
    246c:	000d0c21 	andeq	r0, sp, r1, lsr #24
    2470:	01710100 	cmneq	r1, r0, lsl #2
    2474:	00000c7c 	andeq	r0, r0, ip, ror ip
    2478:	0aa20305 	beq	fe883094 <BootRAM+0xd7f3835>
    247c:	e3140800 	tst	r4, #0, 16
    2480:	1600000d 	strne	r0, [r0], -sp
    2484:	de017201 	cdple	2, 0, cr7, cr1, cr1, {0}
    2488:	0800000c 	stmdaeq	r0, {r2, r3}
    248c:	00000e90 	muleq	r0, r0, lr
    2490:	41017201 	tstmi	r1, r1, lsl #4
    2494:	02000000 	andeq	r0, r0, #0
    2498:	cc080023 	stcgt	0, cr0, [r8], {35}	; 0x23
    249c:	0100000d 	tsteq	r0, sp
    24a0:	00410172 	subeq	r0, r1, r2, ror r1
    24a4:	23020000 	movwcs	r0, #8192	; 0x2000
    24a8:	0cab0801 	stceq	8, cr0, [fp], #4
    24ac:	72010000 	andvc	r0, r1, #0
    24b0:	000ce301 	andeq	lr, ip, r1, lsl #6
    24b4:	02230200 	eoreq	r0, r3, #0, 4
    24b8:	0ca30400 	cfstrseq	mvf0, [r3]
    24bc:	590e0000 	stmdbpl	lr, {}	; <UNPREDICTABLE>
    24c0:	f3000000 	vhadd.u8	d0, d0, d0
    24c4:	0f00000c 	svceq	0x0000000c
    24c8:	00000097 	muleq	r0, r7, r0
    24cc:	e3210009 			; <UNDEFINED> instruction: 0xe3210009
    24d0:	0100000d 	tsteq	r0, sp
    24d4:	0cde0172 	ldfeqe	f0, [lr], {114}	; 0x72
    24d8:	03050000 	movweq	r0, #20480	; 0x5000
    24dc:	08000aa6 	stmdaeq	r0, {r1, r2, r5, r7, r9, fp}
    24e0:	000e5414 	andeq	r5, lr, r4, lsl r4
    24e4:	73011200 	movwvc	r1, #4608	; 0x1200
    24e8:	000d4001 	andeq	r4, sp, r1
    24ec:	0e900800 	cdpeq	8, 9, cr0, cr0, cr0, {0}
    24f0:	73010000 	movwvc	r0, #4096	; 0x1000
    24f4:	00004101 	andeq	r4, r0, r1, lsl #2
    24f8:	00230200 	eoreq	r0, r3, r0, lsl #4
    24fc:	000dcc08 	andeq	ip, sp, r8, lsl #24
    2500:	01730100 	cmneq	r3, r0, lsl #2
    2504:	00000041 	andeq	r0, r0, r1, asr #32
    2508:	08012302 	stmdaeq	r1, {r1, r8, r9, sp}
    250c:	00000cab 	andeq	r0, r0, fp, lsr #25
    2510:	45017301 	strmi	r7, [r1, #-769]	; 0xfffffcff
    2514:	0200000d 	andeq	r0, r0, #13
    2518:	04000223 	streq	r0, [r0], #-547	; 0xfffffddd
    251c:	00000d05 	andeq	r0, r0, r5, lsl #26
    2520:	0000590e 	andeq	r5, r0, lr, lsl #18
    2524:	000d5500 	andeq	r5, sp, r0, lsl #10
    2528:	00970f00 	addseq	r0, r7, r0, lsl #30
    252c:	00070000 	andeq	r0, r7, r0
    2530:	000e5421 	andeq	r5, lr, r1, lsr #8
    2534:	01730100 	cmneq	r3, r0, lsl #2
    2538:	00000d40 	andeq	r0, r0, r0, asr #26
    253c:	0abc0305 	beq	fef03158 <BootRAM+0xde738f9>
    2540:	e2140800 	ands	r0, r4, #0, 16
    2544:	0400000c 	streq	r0, [r0], #-12
    2548:	a2017401 	andge	r7, r1, #16777216	; 0x1000000
    254c:	0800000d 	stmdaeq	r0, {r0, r2, r3}
    2550:	00000e90 	muleq	r0, r0, lr
    2554:	41017401 	tstmi	r1, r1, lsl #8
    2558:	02000000 	andeq	r0, r0, #0
    255c:	cc080023 	stcgt	0, cr0, [r8], {35}	; 0x23
    2560:	0100000d 	tsteq	r0, sp
    2564:	00410174 	subeq	r0, r1, r4, ror r1
    2568:	23020000 	movwcs	r0, #8192	; 0x2000
    256c:	0cab0801 	stceq	8, cr0, [fp], #4
    2570:	74010000 	strvc	r0, [r1], #-0
    2574:	000c8101 	andeq	r8, ip, r1, lsl #2
    2578:	02230200 	eoreq	r0, r3, #0, 4
    257c:	0d670400 	cfstrdeq	mvd0, [r7, #-0]
    2580:	e2210000 	eor	r0, r1, #0
    2584:	0100000c 	tsteq	r0, ip
    2588:	0da20174 	stfeqs	f0, [r2, #464]!	; 0x1d0
    258c:	03050000 	movweq	r0, #20480	; 0x5000
    2590:	08000ace 	stmdaeq	r0, {r1, r2, r3, r6, r7, r9, fp}
    2594:	06c90123 	strbeq	r0, [r9], r3, lsr #2
    2598:	c1010000 	mrsgt	r0, (UNDEF: 1)
    259c:	00093c06 	andeq	r3, r9, r6, lsl #24
    25a0:	00095008 	andeq	r5, r9, r8
    25a4:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    25a8:	c0012401 	andgt	r2, r1, r1, lsl #8
    25ac:	01000008 	tsteq	r0, r8
    25b0:	c40106b5 	strgt	r0, [r1], #-1717	; 0xfffff94b
    25b4:	f8000007 			; <UNDEFINED> instruction: 0xf8000007
    25b8:	3c080008 	stccc	0, cr0, [r8], {8}
    25bc:	f9080009 			; <UNDEFINED> instruction: 0xf9080009
    25c0:	0100000a 	tsteq	r0, sl
    25c4:	00000e3f 	andeq	r0, r0, pc, lsr lr
    25c8:	71657225 	cmnvc	r5, r5, lsr #4
    25cc:	27b50100 	ldrcs	r0, [r5, r0, lsl #2]!
    25d0:	00000e3f 	andeq	r0, r0, pc, lsr lr
    25d4:	00000b21 	andeq	r0, r0, r1, lsr #22
    25d8:	00000b19 	andeq	r0, r0, r9, lsl fp
    25dc:	000b2d26 	andeq	r2, fp, r6, lsr #26
    25e0:	35b50100 	ldrcc	r0, [r5, #256]!	; 0x100
    25e4:	00000059 	andeq	r0, r0, r9, asr r0
    25e8:	00000b61 	andeq	r0, r0, r1, ror #22
    25ec:	00000b5b 	andeq	r0, r0, fp, asr fp
    25f0:	00079e26 	andeq	r9, r7, r6, lsr #28
    25f4:	46b50100 	ldrtmi	r0, [r5], r0, lsl #2
    25f8:	00000059 	andeq	r0, r0, r9, asr r0
    25fc:	00000b93 	muleq	r0, r3, fp
    2600:	00000b8d 	andeq	r0, r0, sp, lsl #23
    2604:	00090a27 	andeq	r0, r9, r7, lsr #20
    2608:	000f0b08 	andeq	r0, pc, r8, lsl #22
    260c:	50012800 	andpl	r2, r1, r0, lsl #16
    2610:	01283001 			; <UNDEFINED> instruction: 0x01283001
    2614:	00740251 	rsbseq	r0, r4, r1, asr r2
    2618:	04160000 	ldreq	r0, [r6], #-0
    261c:	000000f3 	strdeq	r0, [r0], -r3
    2620:	07790124 	ldrbeq	r0, [r9, -r4, lsr #2]!
    2624:	9c010000 	stcls	0, cr0, [r1], {-0}
    2628:	07c40106 	strbeq	r0, [r4, r6, lsl #2]
    262c:	08940000 	ldmeq	r4, {}	; <UNPREDICTABLE>
    2630:	08f80800 	ldmeq	r8!, {fp}^
    2634:	0bbf0800 	bleq	fefc463c <BootRAM+0xdf34ddd>
    2638:	a7010000 	strge	r0, [r1, -r0]
    263c:	2500000e 	strcs	r0, [r0, #-14]
    2640:	00716572 	rsbseq	r6, r1, r2, ror r5
    2644:	3f269c01 	svccc	0x00269c01
    2648:	e700000e 	str	r0, [r0, -lr]
    264c:	df00000b 	svcle	0x0000000b
    2650:	2900000b 	stmdbcs	r0, {r0, r1, r3}
    2654:	00000a4d 	andeq	r0, r0, sp, asr #20
    2658:	a7329c01 	ldrge	r9, [r2, -r1, lsl #24]!
    265c:	0100000e 	tsteq	r0, lr
    2660:	07a12951 	sbfxeq	r2, r1, #18, #2
    2664:	9c010000 	stcls	0, cr0, [r1], {-0}
    2668:	000ead42 	andeq	sl, lr, r2, asr #26
    266c:	2a520100 	bcs	1482a74 <_Min_Stack_Size+0x1482674>
    2670:	006d756e 	rsbeq	r7, sp, lr, ror #10
    2674:	4112a601 	tstmi	r2, r1, lsl #12
    2678:	05000000 	streq	r0, [r0, #-0]
    267c:	00001703 	andeq	r1, r0, r3, lsl #14
    2680:	04160020 	ldreq	r0, [r6], #-32	; 0xffffffe0
    2684:	0000027b 	andeq	r0, r0, fp, ror r2
    2688:	00590416 	subseq	r0, r9, r6, lsl r4
    268c:	012b0000 			; <UNDEFINED> instruction: 0x012b0000
    2690:	00000596 	muleq	r0, r6, r5
    2694:	01067601 	tsteq	r6, r1, lsl #12
    2698:	08000818 	stmdaeq	r0, {r3, r4, fp}
    269c:	08000894 	stmdaeq	r0, {r2, r4, r7, fp}
    26a0:	01007d02 	tsteq	r0, r2, lsl #26
    26a4:	00000efe 	strdeq	r0, [r0], -lr
    26a8:	0005a826 	andeq	sl, r5, r6, lsr #16
    26ac:	27760100 	ldrbcs	r0, [r6, -r0, lsl #2]!
    26b0:	00000059 	andeq	r0, r0, r9, asr r0
    26b4:	00000c29 	andeq	r0, r0, r9, lsr #24
    26b8:	00000c21 	andeq	r0, r0, r1, lsr #24
    26bc:	000a4d29 	andeq	r4, sl, r9, lsr #26
    26c0:	3b760100 	blcc	1d82ac8 <_Min_Stack_Size+0x1d826c8>
    26c4:	00000efe 	strdeq	r0, [r0], -lr
    26c8:	a1295101 			; <UNDEFINED> instruction: 0xa1295101
    26cc:	01000007 	tsteq	r0, r7
    26d0:	0ead4b76 			; <UNDEFINED> instruction: 0x0ead4b76
    26d4:	52010000 	andpl	r0, r1, #0
    26d8:	04041600 	streq	r1, [r4], #-1536	; 0xfffffa00
    26dc:	1600000f 	strne	r0, [r0], -pc
    26e0:	000f0a04 	andeq	r0, pc, r4, lsl #20
    26e4:	012d2c00 			; <UNDEFINED> instruction: 0x012d2c00
    26e8:	00089701 	andeq	r9, r8, r1, lsl #14
    26ec:	00089700 	andeq	r9, r8, r0, lsl #14
    26f0:	05270300 	streq	r0, [r7, #-768]!	; 0xfffffd00
    26f4:	00011600 	andeq	r1, r1, r0, lsl #12
    26f8:	ee000400 	cfcpys	mvf0, mvf0
    26fc:	04000008 	streq	r0, [r0], #-8
    2700:	000f8f01 	andeq	r8, pc, r1, lsl #30
    2704:	10410c00 	subne	r0, r1, r0, lsl #24
    2708:	0f1d0000 	svceq	0x001d0000
    270c:	09500000 	ldmdbeq	r0, {}^	; <UNPREDICTABLE>
    2710:	00480800 	subeq	r0, r8, r0, lsl #16
    2714:	0cd10000 	ldcleq	0, cr0, [r1], {0}
    2718:	01020000 	mrseq	r0, (UNDEF: 2)
    271c:	00025806 	andeq	r5, r2, r6, lsl #16
    2720:	08010200 	stmdaeq	r1, {r9}
    2724:	00000256 	andeq	r0, r0, r6, asr r2
    2728:	71050202 	tstvc	r5, r2, lsl #4
    272c:	02000002 	andeq	r0, r0, #2
    2730:	017e0702 	cmneq	lr, r2, lsl #14
    2734:	04020000 	streq	r0, [r2], #-0
    2738:	00008205 	andeq	r8, r0, r5, lsl #4
    273c:	07040200 	streq	r0, [r4, -r0, lsl #4]
    2740:	0000004d 	andeq	r0, r0, sp, asr #32
    2744:	7d050802 	stcvc	8, cr0, [r5, #-8]
    2748:	02000000 	andeq	r0, r0, #0
    274c:	00480708 	subeq	r0, r8, r8, lsl #14
    2750:	04030000 	streq	r0, [r3], #-0
    2754:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    2758:	07040200 	streq	r0, [r4, -r0, lsl #4]
    275c:	00000052 	andeq	r0, r0, r2, asr r0
    2760:	000f0404 	andeq	r0, pc, r4, lsl #8
    2764:	17d80200 	ldrbne	r0, [r8, r0, lsl #4]
    2768:	00000064 	andeq	r0, r0, r4, rrx
    276c:	6b040802 	blvs	10477c <_Min_Stack_Size+0x10437c>
    2770:	0200000c 	andeq	r0, r0, #12
    2774:	025f0801 	subseq	r0, pc, #65536	; 0x10000
    2778:	90050000 	andls	r0, r5, r0
    277c:	90000000 	andls	r0, r0, r0
    2780:	06000000 	streq	r0, [r0], -r0
    2784:	96040700 	strls	r0, [r4], -r0, lsl #14
    2788:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    278c:	000f7909 	andeq	r7, pc, r9, lsl #18
    2790:	0f130100 	svceq	0x00130100
    2794:	00000085 	andeq	r0, r0, r5, lsl #1
    2798:	00101c09 	andseq	r1, r0, r9, lsl #24
    279c:	0f140100 	svceq	0x00140100
    27a0:	00000085 	andeq	r0, r0, r5, lsl #1
    27a4:	000ef109 	andeq	pc, lr, r9, lsl #2
    27a8:	0f150100 	svceq	0x00150100
    27ac:	00000085 	andeq	r0, r0, r5, lsl #1
    27b0:	00103009 	andseq	r3, r0, r9
    27b4:	0f160100 	svceq	0x00160100
    27b8:	00000085 	andeq	r0, r0, r5, lsl #1
    27bc:	000f0b0a 	andeq	r0, pc, sl, lsl #22
    27c0:	011e0100 	tsteq	lr, r0, lsl #2
    27c4:	08000950 	stmdaeq	r0, {r4, r6, r8, fp}
    27c8:	00000048 	andeq	r0, r0, r8, asr #32
    27cc:	010d9c01 	tsteq	sp, r1, lsl #24
    27d0:	f40b0000 	vst4.8	{d0-d3}, [fp], r0
    27d4:	01000004 	tsteq	r0, r4
    27d8:	006b0a20 	rsbeq	r0, fp, r0, lsr #20
    27dc:	0c6b0000 	stcleq	0, cr0, [fp], #-0
    27e0:	0c630000 	stcleq	0, cr0, [r3], #-0
    27e4:	690c0000 	stmdbvs	ip, {}	; <UNPREDICTABLE>
    27e8:	0a210100 	beq	842bf0 <_Min_Stack_Size+0x8427f0>
    27ec:	0000006b 	andeq	r0, r0, fp, rrx
    27f0:	00000cb7 			; <UNDEFINED> instruction: 0x00000cb7
    27f4:	00000ca7 	andeq	r0, r0, r7, lsr #25
    27f8:	0009720d 	andeq	r7, r9, sp, lsl #4
    27fc:	00010d08 	andeq	r0, r1, r8, lsl #26
    2800:	280e0000 	stmdacs	lr, {}	; <UNPREDICTABLE>
    2804:	28000008 	stmdacs	r0, {r3}
    2808:	01000008 	tsteq	r0, r8
    280c:	Address 0x000000000000280c is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
   c:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
  10:	00061001 	andeq	r1, r6, r1
  14:	00240200 	eoreq	r0, r4, r0, lsl #4
  18:	0b3e0b0b 	bleq	f82c4c <_Min_Stack_Size+0xf8284c>
  1c:	00000e03 	andeq	r0, r0, r3, lsl #28
  20:	03001603 	movweq	r1, #1539	; 0x603
  24:	3b0b3a0e 	blcc	2ce864 <_Min_Stack_Size+0x2ce464>
  28:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
  2c:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
  30:	13490035 	movtne	r0, #36917	; 0x9035
  34:	24050000 	strcs	r0, [r5], #-0
  38:	3e0b0b00 	vmlacc.f64	d0, d11, d0
  3c:	0008030b 	andeq	r0, r8, fp, lsl #6
  40:	00340600 	eorseq	r0, r4, r0, lsl #12
  44:	0b3a0e03 	bleq	e83858 <_Min_Stack_Size+0xe83458>
  48:	0b39053b 	bleq	e4153c <_Min_Stack_Size+0xe4113c>
  4c:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; ffffff30 <BootRAM+0xef706d1>
  50:	00000c3c 	andeq	r0, r0, ip, lsr ip
  54:	03003407 	movweq	r3, #1031	; 0x407
  58:	3b0b3a0e 	blcc	2ce898 <_Min_Stack_Size+0x2ce498>
  5c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
  60:	3c0c3f13 	stccc	15, cr3, [ip], {19}
  64:	0800000c 	stmdaeq	r0, {r2, r3}
  68:	0b0b0113 	bleq	2c04bc <_Min_Stack_Size+0x2c00bc>
  6c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
  70:	13010b39 	movwne	r0, #6969	; 0x1b39
  74:	0d090000 	stceq	0, cr0, [r9, #-0]
  78:	3a080300 	bcc	200c80 <_Min_Stack_Size+0x200880>
  7c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
  80:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
  84:	0a00000a 	beq	b4 <_Min_Heap_Size+0xb4>
  88:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
  8c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
  90:	13490b39 	movtne	r0, #39737	; 0x9b39
  94:	00000a38 	andeq	r0, r0, r8, lsr sl
  98:	4901010b 	stmdbmi	r1, {r0, r1, r3, r8}
  9c:	00130113 	andseq	r0, r3, r3, lsl r1
  a0:	00210c00 	eoreq	r0, r1, r0, lsl #24
  a4:	0b2f1349 	bleq	bc4dd0 <_Min_Stack_Size+0xbc49d0>
  a8:	160d0000 	strne	r0, [sp], -r0
  ac:	3a0e0300 	bcc	380cb4 <_Min_Stack_Size+0x3808b4>
  b0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
  b4:	0013490b 	andseq	r4, r3, fp, lsl #18
  b8:	012e0e00 			; <UNDEFINED> instruction: 0x012e0e00
  bc:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
  c0:	0b3b0b3a 	bleq	ec2db0 <_Min_Stack_Size+0xec29b0>
  c4:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
  c8:	01111349 	tsteq	r1, r9, asr #6
  cc:	06400112 			; <UNDEFINED> instruction: 0x06400112
  d0:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
  d4:	0f000013 	svceq	0x00000013
  d8:	0111010b 	tsteq	r1, fp, lsl #2
  dc:	13010112 	movwne	r0, #4370	; 0x1112
  e0:	34100000 	ldrcc	r0, [r0], #-0
  e4:	3a0e0300 	bcc	380cec <_Min_Stack_Size+0x3808ec>
  e8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  ec:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
  f0:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
  f4:	1d110000 	ldcne	0, cr0, [r1, #-0]
  f8:	52133100 	andspl	r3, r3, #0, 2
  fc:	0b42b801 	bleq	10ae108 <_Min_Stack_Size+0x10add08>
 100:	01120111 	tsteq	r2, r1, lsl r1
 104:	0b590b58 	bleq	1642e6c <_Min_Stack_Size+0x1642a6c>
 108:	00000b57 	andeq	r0, r0, r7, asr fp
 10c:	01828912 	orreq	r8, r2, r2, lsl r9
 110:	31011101 	tstcc	r1, r1, lsl #2
 114:	00130113 	andseq	r0, r3, r3, lsl r1
 118:	828a1300 	addhi	r1, sl, #0, 6
 11c:	0a020001 	beq	80128 <_Min_Stack_Size+0x7fd28>
 120:	000a4291 	muleq	sl, r1, r2
 124:	82891400 	addhi	r1, r9, #0, 8
 128:	01110001 	tsteq	r1, r1
 12c:	00001331 	andeq	r1, r0, r1, lsr r3
 130:	01828915 	orreq	r8, r2, r5, lsl r9
 134:	31011101 	tstcc	r1, r1, lsl #2
 138:	16000013 			; <UNDEFINED> instruction: 0x16000013
 13c:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 8c <_Min_Heap_Size+0x8c>
 140:	0b3a0e03 	bleq	e83954 <_Min_Stack_Size+0xe83554>
 144:	0b390b3b 	bleq	e42e38 <_Min_Stack_Size+0xe42a38>
 148:	01110c27 	tsteq	r1, r7, lsr #24
 14c:	0a400112 	beq	100059c <_Min_Stack_Size+0x100019c>
 150:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
 154:	17000013 	smladne	r0, r3, r0, r0
 158:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
 15c:	0b3b0b3a 	bleq	ec2e4c <_Min_Stack_Size+0xec2a4c>
 160:	13490b39 	movtne	r0, #39737	; 0x9b39
 164:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
 168:	18000006 	stmdane	r0, {r1, r2}
 16c:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; bc <_Min_Heap_Size+0xbc>
 170:	0b3a0e03 	bleq	e83984 <_Min_Stack_Size+0xe83584>
 174:	0b390b3b 	bleq	e42e68 <_Min_Stack_Size+0xe42a68>
 178:	01110c27 	tsteq	r1, r7, lsr #24
 17c:	0a400112 	beq	10005cc <_Min_Stack_Size+0x10001cc>
 180:	000c4297 	muleq	ip, r7, r2
 184:	002e1900 	eoreq	r1, lr, r0, lsl #18
 188:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
 18c:	0b3b0b3a 	bleq	ec2e7c <_Min_Stack_Size+0xec2a7c>
 190:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
 194:	2e1a0000 	cdpcs	0, 1, cr0, cr10, cr0, {0}
 198:	030c3f01 	movweq	r3, #52993	; 0xcf01
 19c:	3b0b3a0e 	blcc	2ce9dc <_Min_Stack_Size+0x2ce5dc>
 1a0:	110b390b 	tstne	fp, fp, lsl #18
 1a4:	40011201 	andmi	r1, r1, r1, lsl #4
 1a8:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
 1ac:	00001301 	andeq	r1, r0, r1, lsl #6
 1b0:	0300341b 	movweq	r3, #1051	; 0x41b
 1b4:	3b0b3a08 	blcc	2ce9dc <_Min_Stack_Size+0x2ce5dc>
 1b8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 1bc:	b7060213 	smladlt	r6, r3, r2, r0
 1c0:	00000642 	andeq	r0, r0, r2, asr #12
 1c4:	3f012e1c 	svccc	0x00012e1c
 1c8:	3a0e030c 	bcc	380e00 <_Min_Stack_Size+0x380a00>
 1cc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 1d0:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
 1d4:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
 1d8:	970a4001 	strls	r4, [sl, -r1]
 1dc:	13010c42 	movwne	r0, #7234	; 0x1c42
 1e0:	051d0000 	ldreq	r0, [sp, #-0]
 1e4:	3a0e0300 	bcc	380dec <_Min_Stack_Size+0x3809ec>
 1e8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 1ec:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 1f0:	1e00000a 	cdpne	0, 0, cr0, cr0, cr10, {0}
 1f4:	0e03002e 	cdpeq	0, 0, cr0, cr3, cr14, {1}
 1f8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 1fc:	0b200b39 	bleq	802ee8 <_Min_Stack_Size+0x802ae8>
 200:	2e1f0000 	cdpcs	0, 1, cr0, cr15, cr0, {0}
 204:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
 208:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
 20c:	0b3a0e03 	bleq	e83a20 <_Min_Stack_Size+0xe83620>
 210:	0b390b3b 	bleq	e42f04 <_Min_Stack_Size+0xe42b04>
 214:	01000000 	mrseq	r0, (UNDEF: 0)
 218:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
 21c:	0e030b13 	vmoveq.32	d3[0], r0
 220:	01110e1b 	tsteq	r1, fp, lsl lr
 224:	06100112 			; <UNDEFINED> instruction: 0x06100112
 228:	24020000 	strcs	r0, [r2], #-0
 22c:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 230:	000e030b 	andeq	r0, lr, fp, lsl #6
 234:	00160300 	andseq	r0, r6, r0, lsl #6
 238:	0b3a0e03 	bleq	e83a4c <_Min_Stack_Size+0xe8364c>
 23c:	0b390b3b 	bleq	e42f30 <_Min_Stack_Size+0xe42b30>
 240:	00001349 	andeq	r1, r0, r9, asr #6
 244:	49003504 	stmdbmi	r0, {r2, r8, sl, ip, sp}
 248:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
 24c:	13490026 	movtne	r0, #36902	; 0x9026
 250:	24060000 	strcs	r0, [r6], #-0
 254:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 258:	0008030b 	andeq	r0, r8, fp, lsl #6
 25c:	000f0700 	andeq	r0, pc, r0, lsl #14
 260:	13490b0b 	movtne	r0, #39691	; 0x9b0b
 264:	15080000 	strne	r0, [r8, #-0]
 268:	010c2701 	tsteq	ip, r1, lsl #14
 26c:	09000013 	stmdbeq	r0, {r0, r1, r4}
 270:	13490005 	movtne	r0, #36869	; 0x9005
 274:	130a0000 	movwne	r0, #40960	; 0xa000
 278:	3a0b0b01 	bcc	2c2e84 <_Min_Stack_Size+0x2c2a84>
 27c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 280:	0013010b 	andseq	r0, r3, fp, lsl #2
 284:	000d0b00 	andeq	r0, sp, r0, lsl #22
 288:	0b3a0e03 	bleq	e83a9c <_Min_Stack_Size+0xe8369c>
 28c:	0b390b3b 	bleq	e42f80 <_Min_Stack_Size+0xe42b80>
 290:	0a381349 	beq	e04fbc <_Min_Stack_Size+0xe04bbc>
 294:	040c0000 	streq	r0, [ip], #-0
 298:	0b0b3e01 	bleq	2cfaa4 <_Min_Stack_Size+0x2cf6a4>
 29c:	3a13490b 	bcc	4d26d0 <_Min_Stack_Size+0x4d22d0>
 2a0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 2a4:	0013010b 	andseq	r0, r3, fp, lsl #2
 2a8:	00280d00 	eoreq	r0, r8, r0, lsl #26
 2ac:	0d1c0e03 	ldceq	14, cr0, [ip, #-12]
 2b0:	280e0000 	stmdacs	lr, {}	; <UNPREDICTABLE>
 2b4:	1c0e0300 	stcne	3, cr0, [lr], {-0}
 2b8:	0f00000b 	svceq	0x0000000b
 2bc:	050b0113 	streq	r0, [fp, #-275]	; 0xfffffeed
 2c0:	0b3b0b3a 	bleq	ec2fb0 <_Min_Stack_Size+0xec2bb0>
 2c4:	13010b39 	movwne	r0, #6969	; 0x1b39
 2c8:	0d100000 	ldceq	0, cr0, [r0, #-0]
 2cc:	3a080300 	bcc	200ed4 <_Min_Stack_Size+0x200ad4>
 2d0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 2d4:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 2d8:	1100000a 	tstne	r0, sl
 2dc:	13490101 	movtne	r0, #37121	; 0x9101
 2e0:	00001301 	andeq	r1, r0, r1, lsl #6
 2e4:	49002112 	stmdbmi	r0, {r1, r4, r8, sp}
 2e8:	000b2f13 	andeq	r2, fp, r3, lsl pc
 2ec:	00211300 	eoreq	r1, r1, r0, lsl #6
 2f0:	052f1349 	streq	r1, [pc, #-841]!	; ffffffaf <BootRAM+0xef70750>
 2f4:	34140000 	ldrcc	r0, [r4], #-0
 2f8:	3a0e0300 	bcc	380f00 <_Min_Stack_Size+0x380b00>
 2fc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 300:	3f13490b 	svccc	0x0013490b
 304:	000c3c0c 	andeq	r3, ip, ip, lsl #24
 308:	00341500 	eorseq	r1, r4, r0, lsl #10
 30c:	0b3a0e03 	bleq	e83b20 <_Min_Stack_Size+0xe83720>
 310:	0b390b3b 	bleq	e43004 <_Min_Stack_Size+0xe42c04>
 314:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 1f8 <_Min_Heap_Size+0x1f8>
 318:	00000c3c 	andeq	r0, r0, ip, lsr ip
 31c:	0b011316 	bleq	44f7c <_Min_Stack_Size+0x44b7c>
 320:	3b0b3a0b 	blcc	2ceb54 <_Min_Stack_Size+0x2ce754>
 324:	010b3905 	tsteq	fp, r5, lsl #18
 328:	17000013 	smladne	r0, r3, r0, r0
 32c:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 330:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 334:	13490b39 	movtne	r0, #39737	; 0x9b39
 338:	00000a38 	andeq	r0, r0, r8, lsr sl
 33c:	03000d18 	movweq	r0, #3352	; 0xd18
 340:	3b0b3a08 	blcc	2ceb68 <_Min_Stack_Size+0x2ce768>
 344:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 348:	000a3813 	andeq	r3, sl, r3, lsl r8
 34c:	00161900 	andseq	r1, r6, r0, lsl #18
 350:	0b3a0e03 	bleq	e83b64 <_Min_Stack_Size+0xe83764>
 354:	0b39053b 	bleq	e41848 <_Min_Stack_Size+0xe41448>
 358:	00001349 	andeq	r1, r0, r9, asr #6
 35c:	03000d1a 	movweq	r0, #3354	; 0xd1a
 360:	3b0b3a0e 	blcc	2ceba0 <_Min_Stack_Size+0x2ce7a0>
 364:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 368:	0d0b0b13 	vstreq	d0, [fp, #-76]	; 0xffffffb4
 36c:	380b0c0b 	stmdacc	fp, {r0, r1, r3, sl, fp}
 370:	1b00000a 	blne	3a0 <_Min_Heap_Size+0x3a0>
 374:	0b0b0117 	bleq	2c07d8 <_Min_Stack_Size+0x2c03d8>
 378:	0b3b0b3a 	bleq	ec3068 <_Min_Stack_Size+0xec2c68>
 37c:	13010b39 	movwne	r0, #6969	; 0x1b39
 380:	0d1c0000 	ldceq	0, cr0, [ip, #-0]
 384:	3a0e0300 	bcc	380f8c <_Min_Stack_Size+0x380b8c>
 388:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 38c:	0013490b 	andseq	r4, r3, fp, lsl #18
 390:	000d1d00 	andeq	r1, sp, r0, lsl #26
 394:	00001349 	andeq	r1, r0, r9, asr #6
 398:	49000d1e 	stmdbmi	r0, {r1, r2, r3, r4, r8, sl, fp}
 39c:	000a3813 	andeq	r3, sl, r3, lsl r8
 3a0:	00341f00 	eorseq	r1, r4, r0, lsl #30
 3a4:	0b3a0e03 	bleq	e83bb8 <_Min_Stack_Size+0xe837b8>
 3a8:	0b390b3b 	bleq	e4309c <_Min_Stack_Size+0xe42c9c>
 3ac:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 290 <_Min_Heap_Size+0x290>
 3b0:	00000a02 	andeq	r0, r0, r2, lsl #20
 3b4:	03003420 	movweq	r3, #1056	; 0x420
 3b8:	3b0b3a0e 	blcc	2cebf8 <_Min_Stack_Size+0x2ce7f8>
 3bc:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 3c0:	000a0213 	andeq	r0, sl, r3, lsl r2
 3c4:	012e2100 			; <UNDEFINED> instruction: 0x012e2100
 3c8:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
 3cc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 3d0:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
 3d4:	01111349 	tsteq	r1, r9, asr #6
 3d8:	06400112 			; <UNDEFINED> instruction: 0x06400112
 3dc:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
 3e0:	22000013 	andcs	r0, r0, #19
 3e4:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
 3e8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 3ec:	13490b39 	movtne	r0, #39737	; 0x9b39
 3f0:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
 3f4:	23000006 	movwcs	r0, #6
 3f8:	08030005 	stmdaeq	r3, {r0, r2}
 3fc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 400:	13490b39 	movtne	r0, #39737	; 0x9b39
 404:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
 408:	24000006 	strcs	r0, [r0], #-6
 40c:	08030034 	stmdaeq	r3, {r2, r4, r5}
 410:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 414:	13490b39 	movtne	r0, #39737	; 0x9b39
 418:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
 41c:	25000006 	strcs	r0, [r0, #-6]
 420:	0655010b 	ldrbeq	r0, [r5], -fp, lsl #2
 424:	2e260000 	cdpcs	0, 2, cr0, cr6, cr0, {0}
 428:	030c3f01 	movweq	r3, #52993	; 0xcf01
 42c:	3b0b3a0e 	blcc	2cec6c <_Min_Stack_Size+0x2ce86c>
 430:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 434:	1201110c 	andne	r1, r1, #12, 2
 438:	97064001 	strls	r4, [r6, -r1]
 43c:	13010c42 	movwne	r0, #7234	; 0x1c42
 440:	05270000 	streq	r0, [r7, #-0]!
 444:	3a0e0300 	bcc	38104c <_Min_Stack_Size+0x380c4c>
 448:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 44c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 450:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
 454:	05280000 	streq	r0, [r8, #-0]!
 458:	3a080300 	bcc	201060 <_Min_Stack_Size+0x200c60>
 45c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 460:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 464:	2900000a 	stmdbcs	r0, {r1, r3}
 468:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
 46c:	0b3b0b3a 	bleq	ec315c <_Min_Stack_Size+0xec2d5c>
 470:	13490b39 	movtne	r0, #39737	; 0x9b39
 474:	00000a02 	andeq	r0, r0, r2, lsl #20
 478:	0300342a 	movweq	r3, #1066	; 0x42a
 47c:	3b0b3a08 	blcc	2ceca4 <_Min_Stack_Size+0x2ce8a4>
 480:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 484:	b7060213 	smladlt	r6, r3, r2, r0
 488:	00000642 	andeq	r0, r0, r2, asr #12
 48c:	0300342b 	movweq	r3, #1067	; 0x42b
 490:	3b0b3a0e 	blcc	2cecd0 <_Min_Stack_Size+0x2ce8d0>
 494:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 498:	b7060213 	smladlt	r6, r3, r2, r0
 49c:	00000642 	andeq	r0, r0, r2, asr #12
 4a0:	3f012e2c 	svccc	0x00012e2c
 4a4:	3a0e030c 	bcc	3810dc <_Min_Stack_Size+0x380cdc>
 4a8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 4ac:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
 4b0:	97064001 	strls	r4, [r6, -r1]
 4b4:	13010c42 	movwne	r0, #7234	; 0x1c42
 4b8:	0b2d0000 	bleq	b404c0 <_Min_Stack_Size+0xb400c0>
 4bc:	01065501 	tsteq	r6, r1, lsl #10
 4c0:	2e000013 	mcrcs	0, 0, r0, cr0, cr3, {0}
 4c4:	0111010b 	tsteq	r1, fp, lsl #2
 4c8:	13010112 	movwne	r0, #4370	; 0x1112
 4cc:	892f0000 	stmdbhi	pc!, {}	; <UNPREDICTABLE>
 4d0:	11010182 	smlabbne	r1, r2, r1, r0
 4d4:	00130101 	andseq	r0, r3, r1, lsl #2
 4d8:	828a3000 	addhi	r3, sl, #0
 4dc:	0a020001 	beq	804e8 <_Min_Stack_Size+0x800e8>
 4e0:	000a4291 	muleq	sl, r1, r2
 4e4:	82893100 	addhi	r3, r9, #0, 2
 4e8:	01110101 	tsteq	r1, r1, lsl #2
 4ec:	89320000 	ldmdbhi	r2!, {}	; <UNPREDICTABLE>
 4f0:	11000182 	smlabbne	r0, r2, r1, r0
 4f4:	00133101 	andseq	r3, r3, r1, lsl #2
 4f8:	82893300 	addhi	r3, r9, #0, 6
 4fc:	01110101 	tsteq	r1, r1, lsl #2
 500:	13011331 	movwne	r1, #4913	; 0x1331
 504:	2e340000 	cdpcs	0, 3, cr0, cr4, cr0, {0}
 508:	3a0e0301 	bcc	381114 <_Min_Stack_Size+0x380d14>
 50c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 510:	110c270b 	tstne	ip, fp, lsl #14
 514:	40011201 	andmi	r1, r1, r1, lsl #4
 518:	0c429706 	mcrreq	7, 0, r9, r2, cr6
 51c:	00001301 	andeq	r1, r0, r1, lsl #6
 520:	01828935 	orreq	r8, r2, r5, lsr r9
 524:	31011101 	tstcc	r1, r1, lsl #2
 528:	36000013 			; <UNDEFINED> instruction: 0x36000013
 52c:	1331011d 	teqne	r1, #1073741831	; 0x40000007
 530:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
 534:	5806550b 	stmdapl	r6, {r0, r1, r3, r8, sl, ip, lr}
 538:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
 53c:	0013010b 	andseq	r0, r3, fp, lsl #2
 540:	00053700 	andeq	r3, r5, r0, lsl #14
 544:	06021331 			; <UNDEFINED> instruction: 0x06021331
 548:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
 54c:	000f3800 	andeq	r3, pc, r0, lsl #16
 550:	00000b0b 	andeq	r0, r0, fp, lsl #22
 554:	00002639 	andeq	r2, r0, r9, lsr r6
 558:	012e3a00 			; <UNDEFINED> instruction: 0x012e3a00
 55c:	0b3a0e03 	bleq	e83d70 <_Min_Stack_Size+0xe83970>
 560:	0b390b3b 	bleq	e43254 <_Min_Stack_Size+0xe42e54>
 564:	0b200c27 	bleq	803608 <_Min_Stack_Size+0x803208>
 568:	00001301 	andeq	r1, r0, r1, lsl #6
 56c:	0300053b 	movweq	r0, #1339	; 0x53b
 570:	3b0b3a08 	blcc	2ced98 <_Min_Stack_Size+0x2ce998>
 574:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 578:	3c000013 	stccc	0, cr0, [r0], {19}
 57c:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
 580:	0b3b0b3a 	bleq	ec3270 <_Min_Stack_Size+0xec2e70>
 584:	13490b39 	movtne	r0, #39737	; 0x9b39
 588:	2e3d0000 	cdpcs	0, 3, cr0, cr13, cr0, {0}
 58c:	030c3f01 	movweq	r3, #52993	; 0xcf01
 590:	3b0b3a0e 	blcc	2cedd0 <_Min_Stack_Size+0x2ce9d0>
 594:	110b390b 	tstne	fp, fp, lsl #18
 598:	40011201 	andmi	r1, r1, r1, lsl #4
 59c:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
 5a0:	00001301 	andeq	r1, r0, r1, lsl #6
 5a4:	31011d3e 	tstcc	r1, lr, lsr sp
 5a8:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
 5ac:	01110b42 	tsteq	r1, r2, asr #22
 5b0:	0b580112 	bleq	1600a00 <_Min_Stack_Size+0x1600600>
 5b4:	0b570b59 	bleq	15c3320 <_Min_Stack_Size+0x15c2f20>
 5b8:	2e3f0000 	cdpcs	0, 3, cr0, cr15, cr0, {0}
 5bc:	030c3f01 	movweq	r3, #52993	; 0xcf01
 5c0:	3b0b3a0e 	blcc	2cee00 <_Min_Stack_Size+0x2cea00>
 5c4:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 5c8:	1113490c 	tstne	r3, ip, lsl #18
 5cc:	40011201 	andmi	r1, r1, r1, lsl #4
 5d0:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
 5d4:	00001301 	andeq	r1, r0, r1, lsl #6
 5d8:	03000540 	movweq	r0, #1344	; 0x540
 5dc:	3b0b3a08 	blcc	2cee04 <_Min_Stack_Size+0x2cea04>
 5e0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 5e4:	b7060213 	smladlt	r6, r3, r2, r0
 5e8:	00000642 	andeq	r0, r0, r2, asr #12
 5ec:	3f002e41 	svccc	0x00002e41
 5f0:	3a0e030c 	bcc	381228 <_Min_Stack_Size+0x380e28>
 5f4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 5f8:	4200000b 	andmi	r0, r0, #11
 5fc:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 54c <_Min_Stack_Size+0x14c>
 600:	0b3a0e03 	bleq	e83e14 <_Min_Stack_Size+0xe83a14>
 604:	0b390b3b 	bleq	e432f8 <_Min_Stack_Size+0xe42ef8>
 608:	00000b20 	andeq	r0, r0, r0, lsr #22
 60c:	03012e43 	movweq	r2, #7747	; 0x1e43
 610:	3b0b3a0e 	blcc	2cee50 <_Min_Stack_Size+0x2cea50>
 614:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
 618:	010b200c 	tsteq	fp, ip
 61c:	44000013 	strmi	r0, [r0], #-19	; 0xffffffed
 620:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
 624:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 628:	13490b39 	movtne	r0, #39737	; 0x9b39
 62c:	2e450000 	cdpcs	0, 4, cr0, cr5, cr0, {0}
 630:	11133100 	tstne	r3, r0, lsl #2
 634:	40011201 	andmi	r1, r1, r1, lsl #4
 638:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
 63c:	2e460000 	cdpcs	0, 4, cr0, cr6, cr0, {0}
 640:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
 644:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
 648:	0b3a0e03 	bleq	e83e5c <_Min_Stack_Size+0xe83a5c>
 64c:	0b390b3b 	bleq	e43340 <_Min_Stack_Size+0xe42f40>
 650:	01000000 	mrseq	r0, (UNDEF: 0)
 654:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
 658:	0e030b13 	vmoveq.32	d3[0], r0
 65c:	01110e1b 	tsteq	r1, fp, lsl lr
 660:	06100112 			; <UNDEFINED> instruction: 0x06100112
 664:	24020000 	strcs	r0, [r2], #-0
 668:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 66c:	000e030b 	andeq	r0, lr, fp, lsl #6
 670:	00160300 	andseq	r0, r6, r0, lsl #6
 674:	0b3a0e03 	bleq	e83e88 <_Min_Stack_Size+0xe83a88>
 678:	0b390b3b 	bleq	e4336c <_Min_Stack_Size+0xe42f6c>
 67c:	00001349 	andeq	r1, r0, r9, asr #6
 680:	49002604 	stmdbmi	r0, {r2, r9, sl, sp}
 684:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
 688:	13490035 	movtne	r0, #36917	; 0x9035
 68c:	24060000 	strcs	r0, [r6], #-0
 690:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 694:	0008030b 	andeq	r0, r8, fp, lsl #6
 698:	01130700 	tsteq	r3, r0, lsl #14
 69c:	0b3a0b0b 	bleq	e832d0 <_Min_Stack_Size+0xe82ed0>
 6a0:	0b390b3b 	bleq	e43394 <_Min_Stack_Size+0xe42f94>
 6a4:	00001301 	andeq	r1, r0, r1, lsl #6
 6a8:	03000d08 	movweq	r0, #3336	; 0xd08
 6ac:	3b0b3a0e 	blcc	2ceeec <_Min_Stack_Size+0x2ceaec>
 6b0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 6b4:	000a3813 	andeq	r3, sl, r3, lsl r8
 6b8:	00340900 	eorseq	r0, r4, r0, lsl #18
 6bc:	0b3a0e03 	bleq	e83ed0 <_Min_Stack_Size+0xe83ad0>
 6c0:	0b39053b 	bleq	e41bb4 <_Min_Stack_Size+0xe417b4>
 6c4:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 5a8 <_Min_Stack_Size+0x1a8>
 6c8:	00000c3c 	andeq	r0, r0, ip, lsr ip
 6cc:	0300340a 	movweq	r3, #1034	; 0x40a
 6d0:	3b0b3a0e 	blcc	2cef10 <_Min_Stack_Size+0x2ceb10>
 6d4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 6d8:	3c0c3f13 	stccc	15, cr3, [ip], {19}
 6dc:	0b00000c 	bleq	714 <_Min_Stack_Size+0x314>
 6e0:	0b0b0113 	bleq	2c0b34 <_Min_Stack_Size+0x2c0734>
 6e4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 6e8:	13010b39 	movwne	r0, #6969	; 0x1b39
 6ec:	0d0c0000 	stceq	0, cr0, [ip, #-0]
 6f0:	3a0e0300 	bcc	3812f8 <_Min_Stack_Size+0x380ef8>
 6f4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 6f8:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 6fc:	0d00000a 	stceq	0, cr0, [r0, #-40]	; 0xffffffd8
 700:	0803000d 	stmdaeq	r3, {r0, r2, r3}
 704:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 708:	13490b39 	movtne	r0, #39737	; 0x9b39
 70c:	00000a38 	andeq	r0, r0, r8, lsr sl
 710:	4901010e 	stmdbmi	r1, {r1, r2, r3, r8}
 714:	00130113 	andseq	r0, r3, r3, lsl r1
 718:	00210f00 	eoreq	r0, r1, r0, lsl #30
 71c:	0b2f1349 	bleq	bc5448 <_Min_Stack_Size+0xbc5048>
 720:	16100000 	ldrne	r0, [r0], -r0
 724:	3a0e0300 	bcc	38132c <_Min_Stack_Size+0x380f2c>
 728:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 72c:	0013490b 	andseq	r4, r3, fp, lsl #18
 730:	01171100 	tsteq	r7, r0, lsl #2
 734:	0b3a0b0b 	bleq	e83368 <_Min_Stack_Size+0xe82f68>
 738:	0b390b3b 	bleq	e4342c <_Min_Stack_Size+0xe4302c>
 73c:	00001301 	andeq	r1, r0, r1, lsl #6
 740:	03000d12 	movweq	r0, #3346	; 0xd12
 744:	3b0b3a0e 	blcc	2cef84 <_Min_Stack_Size+0x2ceb84>
 748:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 74c:	13000013 	movwne	r0, #19
 750:	0b0b000f 	bleq	2c0794 <_Min_Stack_Size+0x2c0394>
 754:	13140000 	tstne	r4, #0
 758:	0b0e0301 	bleq	381364 <_Min_Stack_Size+0x380f64>
 75c:	3b0b3a0b 	blcc	2cef90 <_Min_Stack_Size+0x2ceb90>
 760:	010b390b 	tsteq	fp, fp, lsl #18
 764:	15000013 	strne	r0, [r0, #-19]	; 0xffffffed
 768:	0803000d 	stmdaeq	r3, {r0, r2, r3}
 76c:	0b3b0b3a 	bleq	ec345c <_Min_Stack_Size+0xec305c>
 770:	13490b39 	movtne	r0, #39737	; 0x9b39
 774:	00000a38 	andeq	r0, r0, r8, lsr sl
 778:	0b000f16 	bleq	43d8 <_Min_Stack_Size+0x3fd8>
 77c:	0013490b 	andseq	r4, r3, fp, lsl #18
 780:	01131700 	tsteq	r3, r0, lsl #14
 784:	050b0e03 	streq	r0, [fp, #-3587]	; 0xfffff1fd
 788:	0b3b0b3a 	bleq	ec3478 <_Min_Stack_Size+0xec3078>
 78c:	13010b39 	movwne	r0, #6969	; 0x1b39
 790:	15180000 	ldrne	r0, [r8, #-0]
 794:	000c2700 	andeq	r2, ip, r0, lsl #14
 798:	01151900 	tsteq	r5, r0, lsl #18
 79c:	13490c27 	movtne	r0, #39975	; 0x9c27
 7a0:	00001301 	andeq	r1, r0, r1, lsl #6
 7a4:	4900051a 	stmdbmi	r0, {r1, r3, r4, r8, sl}
 7a8:	1b000013 	blne	7fc <_Min_Stack_Size+0x3fc>
 7ac:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
 7b0:	0b3a050b 	bleq	e81be4 <_Min_Stack_Size+0xe817e4>
 7b4:	0b39053b 	bleq	e41ca8 <_Min_Stack_Size+0xe418a8>
 7b8:	00001301 	andeq	r1, r0, r1, lsl #6
 7bc:	0301131c 	movweq	r1, #4892	; 0x131c
 7c0:	3a0b0b0e 	bcc	2c3400 <_Min_Stack_Size+0x2c3000>
 7c4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 7c8:	0013010b 	andseq	r0, r3, fp, lsl #2
 7cc:	01171d00 	tsteq	r7, r0, lsl #26
 7d0:	0b3a0b0b 	bleq	e83404 <_Min_Stack_Size+0xe83004>
 7d4:	0b39053b 	bleq	e41cc8 <_Min_Stack_Size+0xe418c8>
 7d8:	00001301 	andeq	r1, r0, r1, lsl #6
 7dc:	03000d1e 	movweq	r0, #3358	; 0xd1e
 7e0:	3b0b3a0e 	blcc	2cf020 <_Min_Stack_Size+0x2cec20>
 7e4:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 7e8:	1f000013 	svcne	0x00000013
 7ec:	0e030013 	mcreq	0, 0, r0, cr3, cr3, {0}
 7f0:	00000c3c 	andeq	r0, r0, ip, lsr ip
 7f4:	27011520 	strcs	r1, [r1, -r0, lsr #10]
 7f8:	0013010c 	andseq	r0, r3, ip, lsl #2
 7fc:	00342100 	eorseq	r2, r4, r0, lsl #2
 800:	0b3a0e03 	bleq	e84014 <_Min_Stack_Size+0xe83c14>
 804:	0b390b3b 	bleq	e434f8 <_Min_Stack_Size+0xe430f8>
 808:	0a021349 	beq	85534 <_Min_Stack_Size+0x85134>
 80c:	34220000 	strtcc	r0, [r2], #-0
 810:	3a0e0300 	bcc	381418 <_Min_Stack_Size+0x381018>
 814:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 818:	3f13490b 	svccc	0x0013490b
 81c:	000a020c 	andeq	r0, sl, ip, lsl #4
 820:	002e2300 	eoreq	r2, lr, r0, lsl #6
 824:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
 828:	0b3b0b3a 	bleq	ec3518 <_Min_Stack_Size+0xec3118>
 82c:	01110b39 	tsteq	r1, r9, lsr fp
 830:	0a400112 	beq	1000c80 <_Min_Stack_Size+0x1000880>
 834:	000c4297 	muleq	ip, r7, r2
 838:	012e2400 			; <UNDEFINED> instruction: 0x012e2400
 83c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
 840:	0b3b0b3a 	bleq	ec3530 <_Min_Stack_Size+0xec3130>
 844:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
 848:	01111349 	tsteq	r1, r9, asr #6
 84c:	06400112 			; <UNDEFINED> instruction: 0x06400112
 850:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
 854:	25000013 	strcs	r0, [r0, #-19]	; 0xffffffed
 858:	08030005 	stmdaeq	r3, {r0, r2}
 85c:	0b3b0b3a 	bleq	ec354c <_Min_Stack_Size+0xec314c>
 860:	13490b39 	movtne	r0, #39737	; 0x9b39
 864:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
 868:	26000006 	strcs	r0, [r0], -r6
 86c:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
 870:	0b3b0b3a 	bleq	ec3560 <_Min_Stack_Size+0xec3160>
 874:	13490b39 	movtne	r0, #39737	; 0x9b39
 878:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
 87c:	27000006 	strcs	r0, [r0, -r6]
 880:	01018289 	smlabbeq	r1, r9, r2, r8
 884:	13310111 	teqne	r1, #1073741828	; 0x40000004
 888:	8a280000 	bhi	a00890 <_Min_Stack_Size+0xa00490>
 88c:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
 890:	0a42910a 	beq	10a4cc0 <_Min_Stack_Size+0x10a48c0>
 894:	05290000 	streq	r0, [r9, #-0]!
 898:	3a0e0300 	bcc	3814a0 <_Min_Stack_Size+0x3810a0>
 89c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 8a0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 8a4:	2a00000a 	bcs	8d4 <_Min_Stack_Size+0x4d4>
 8a8:	08030034 	stmdaeq	r3, {r2, r4, r5}
 8ac:	0b3b0b3a 	bleq	ec359c <_Min_Stack_Size+0xec319c>
 8b0:	13490b39 	movtne	r0, #39737	; 0x9b39
 8b4:	00000a02 	andeq	r0, r0, r2, lsl #20
 8b8:	3f012e2b 	svccc	0x00012e2b
 8bc:	3a0e030c 	bcc	3814f4 <_Min_Stack_Size+0x3810f4>
 8c0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 8c4:	110c270b 	tstne	ip, fp, lsl #14
 8c8:	40011201 	andmi	r1, r1, r1, lsl #4
 8cc:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
 8d0:	00001301 	andeq	r1, r0, r1, lsl #6
 8d4:	0000262c 	andeq	r2, r0, ip, lsr #12
 8d8:	002e2d00 	eoreq	r2, lr, r0, lsl #26
 8dc:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
 8e0:	030e4087 	movweq	r4, #57479	; 0xe087
 8e4:	3b0b3a0e 	blcc	2cf124 <_Min_Stack_Size+0x2ced24>
 8e8:	000b390b 	andeq	r3, fp, fp, lsl #18
 8ec:	11010000 	mrsne	r0, (UNDEF: 1)
 8f0:	130e2501 	movwne	r2, #58625	; 0xe501
 8f4:	1b0e030b 	blne	381528 <_Min_Stack_Size+0x381128>
 8f8:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
 8fc:	00171006 	andseq	r1, r7, r6
 900:	00240200 	eoreq	r0, r4, r0, lsl #4
 904:	0b3e0b0b 	bleq	f83538 <_Min_Stack_Size+0xf83138>
 908:	00000e03 	andeq	r0, r0, r3, lsl #28
 90c:	0b002403 	bleq	9920 <_Min_Stack_Size+0x9520>
 910:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
 914:	04000008 	streq	r0, [r0], #-8
 918:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
 91c:	0b3b0b3a 	bleq	ec360c <_Min_Stack_Size+0xec320c>
 920:	13490b39 	movtne	r0, #39737	; 0x9b39
 924:	01050000 	mrseq	r0, (UNDEF: 5)
 928:	01134901 	tsteq	r3, r1, lsl #18
 92c:	06000013 			; <UNDEFINED> instruction: 0x06000013
 930:	00000021 	andeq	r0, r0, r1, lsr #32
 934:	0b000f07 	bleq	4558 <_Min_Stack_Size+0x4158>
 938:	0013490b 	andseq	r4, r3, fp, lsl #18
 93c:	00150800 	andseq	r0, r5, r0, lsl #16
 940:	00001927 	andeq	r1, r0, r7, lsr #18
 944:	03003409 	movweq	r3, #1033	; 0x409
 948:	3b0b3a0e 	blcc	2cf188 <_Min_Stack_Size+0x2ced88>
 94c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 950:	3c193f13 	ldccc	15, cr3, [r9], {19}
 954:	0a000019 	beq	9c0 <_Min_Stack_Size+0x5c0>
 958:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 95c:	0b3a0e03 	bleq	e84170 <_Min_Stack_Size+0xe83d70>
 960:	0b390b3b 	bleq	e43654 <_Min_Stack_Size+0xe43254>
 964:	01111927 	tsteq	r1, r7, lsr #18
 968:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 96c:	01194296 			; <UNDEFINED> instruction: 0x01194296
 970:	0b000013 	bleq	9c4 <_Min_Stack_Size+0x5c4>
 974:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 978:	0b3b0b3a 	bleq	ec3668 <_Min_Stack_Size+0xec3268>
 97c:	13490b39 	movtne	r0, #39737	; 0x9b39
 980:	42b71702 	adcsmi	r1, r7, #524288	; 0x80000
 984:	0c000017 	stceq	0, cr0, [r0], {23}
 988:	08030034 	stmdaeq	r3, {r2, r4, r5}
 98c:	0b3b0b3a 	bleq	ec367c <_Min_Stack_Size+0xec327c>
 990:	13490b39 	movtne	r0, #39737	; 0x9b39
 994:	42b71702 	adcsmi	r1, r7, #524288	; 0x80000
 998:	0d000017 	stceq	0, cr0, [r0, #-92]	; 0xffffffa4
 99c:	00018289 	andeq	r8, r1, r9, lsl #5
 9a0:	13310111 	teqne	r1, #1073741828	; 0x40000004
 9a4:	2e0e0000 	cdpcs	0, 0, cr0, cr14, cr0, {0}
 9a8:	3c193f00 	ldccc	15, cr3, [r9], {-0}
 9ac:	030e6e19 	movweq	r6, #60953	; 0xee19
 9b0:	3b0b3a0e 	blcc	2cf1f0 <_Min_Stack_Size+0x2cedf0>
 9b4:	000b390b 	andeq	r3, fp, fp, lsl #18
	...

Disassembly of section .debug_loc:

00000000 <.debug_loc>:
   0:	080009e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, fp}
   4:	080009e6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r8, fp}
   8:	007d0002 	rsbseq	r0, sp, r2
   c:	080009e6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r8, fp}
  10:	08000a68 	stmdaeq	r0, {r3, r5, r6, r9, fp}
  14:	087d0002 	ldmdaeq	sp!, {r1}^
	...
  20:	00010100 	andeq	r0, r1, r0, lsl #2
  24:	00000000 	andeq	r0, r0, r0
  28:	080009fa 	stmdaeq	r0, {r1, r3, r4, r5, r6, r7, r8, fp}
  2c:	08000a06 	stmdaeq	r0, {r1, r2, r9, fp}
  30:	06520001 	ldrbeq	r0, [r2], -r1
  34:	0a08000a 	beq	200064 <_Min_Stack_Size+0x1ffc64>
  38:	0808000a 	stmdaeq	r8, {r1, r3}
  3c:	11007200 	mrsne	r7, R8_usr
  40:	1a4fffff 	bne	1400044 <_Min_Stack_Size+0x13ffc44>
  44:	000a0a9f 	muleq	sl, pc, sl	; <UNPREDICTABLE>
  48:	000a0e08 	andeq	r0, sl, r8, lsl #28
  4c:	52000108 	andpl	r0, r0, #8, 2
  50:	08000a0e 	stmdaeq	r0, {r1, r2, r3, r9, fp}
  54:	08000a18 	stmdaeq	r0, {r3, r4, r9, fp}
  58:	08730002 	ldmdaeq	r3!, {r1}^
	...
  64:	00010100 	andeq	r0, r1, r0, lsl #2
  68:	00000000 	andeq	r0, r0, r0
  6c:	08000a0e 	stmdaeq	r0, {r1, r2, r3, r9, fp}
  70:	08000a1a 	stmdaeq	r0, {r1, r3, r4, r9, fp}
  74:	1a520001 	bne	1480080 <_Min_Stack_Size+0x147fc80>
  78:	1e08000a 	cdpne	0, 0, cr0, cr8, cr10, {0}
  7c:	0808000a 	stmdaeq	r8, {r1, r3}
  80:	11007200 	mrsne	r7, R8_usr
  84:	1a73ffff 	bne	1d00088 <_Min_Stack_Size+0x1cffc88>
  88:	000a1e9f 	muleq	sl, pc, lr	; <UNPREDICTABLE>
  8c:	000a2208 	andeq	r2, sl, r8, lsl #4
  90:	52000108 	andpl	r0, r0, #8, 2
  94:	08000a22 	stmdaeq	r0, {r1, r5, r9, fp}
  98:	08000a2a 	stmdaeq	r0, {r1, r3, r5, r9, fp}
  9c:	08730002 	ldmdaeq	r3!, {r1}^
	...
  a8:	00010100 	andeq	r0, r1, r0, lsl #2
  ac:	0a240000 	beq	9000b4 <_Min_Stack_Size+0x8ffcb4>
  b0:	0a2c0800 	beq	b020b8 <_Min_Stack_Size+0xb01cb8>
  b4:	00010800 	andeq	r0, r1, r0, lsl #16
  b8:	000a2c51 	andeq	r2, sl, r1, asr ip
  bc:	000a3008 	andeq	r3, sl, r8
  c0:	71000a08 	tstvc	r0, r8, lsl #20
  c4:	ffff1100 			; <UNDEFINED> instruction: 0xffff1100
  c8:	1a7f9fff 	bne	1fe80cc <_Min_Stack_Size+0x1fe7ccc>
  cc:	000a309f 	muleq	sl, pc, r0	; <UNPREDICTABLE>
  d0:	000a4508 	andeq	r4, sl, r8, lsl #10
  d4:	51000108 	tstpl	r0, r8, lsl #2
	...
  e0:	00010100 	andeq	r0, r1, r0, lsl #2
  e4:	0a340000 	beq	d000ec <_Min_Stack_Size+0xcffcec>
  e8:	0a3c0800 	beq	f020f0 <_Min_Stack_Size+0xf01cf0>
  ec:	00010800 	andeq	r0, r1, r0, lsl #16
  f0:	000a3c52 	andeq	r3, sl, r2, asr ip
  f4:	000a4008 	andeq	r4, sl, r8
  f8:	72000708 	andvc	r0, r0, #8, 14	; 0x200000
  fc:	f3ff0b00 	vtbl.8	d16, {d15-d18}, d0
 100:	0a409f1a 	beq	1027d70 <_Min_Stack_Size+0x1027970>
 104:	0a450800 	beq	114210c <_Min_Stack_Size+0x1141d0c>
 108:	00010800 	andeq	r0, r1, r0, lsl #16
 10c:	00000052 	andeq	r0, r0, r2, asr r0
 110:	00000000 	andeq	r0, r0, r0
 114:	02020000 	andeq	r0, r2, #0
 118:	58000000 	stmdapl	r0, {}	; <UNPREDICTABLE>
 11c:	58080003 	stmdapl	r8, {r0, r1}
 120:	01080003 	tsteq	r8, r3
 124:	03585000 	cmpeq	r8, #0
 128:	035c0800 	cmpeq	ip, #0, 16
 12c:	00010800 	andeq	r0, r1, r0, lsl #16
 130:	00035c50 	andeq	r5, r3, r0, asr ip
 134:	00036408 	andeq	r6, r3, r8, lsl #8
 138:	70000308 	andvc	r0, r0, r8, lsl #6
 13c:	00009f01 	andeq	r9, r0, r1, lsl #30
 140:	00000000 	andeq	r0, r0, r0
 144:	00010000 	andeq	r0, r1, r0
 148:	00000000 	andeq	r0, r0, r0
 14c:	03160000 	tsteq	r6, #0
 150:	031a0800 	tsteq	sl, #0, 16
 154:	00020800 	andeq	r0, r2, r0, lsl #16
 158:	031a9f30 	tsteq	sl, #48, 30	; 0xc0
 15c:	03220800 			; <UNDEFINED> instruction: 0x03220800
 160:	00070800 	andeq	r0, r7, r0, lsl #16
 164:	720fff0a 	andvc	pc, pc, #10, 30	; 0x28
 168:	229f1c00 	addscs	r1, pc, #0, 24
 16c:	24080003 	strcs	r0, [r8], #-3
 170:	07080003 	streq	r0, [r8, -r3]
 174:	10000a00 	andne	r0, r0, r0, lsl #20
 178:	9f1c0072 	svcls	0x001c0072
 17c:	0800032c 	stmdaeq	r0, {r2, r3, r5, r8, r9}
 180:	08000354 	stmdaeq	r0, {r2, r4, r6, r8, r9}
 184:	ff0a0004 			; <UNDEFINED> instruction: 0xff0a0004
 188:	00009f1f 	andeq	r9, r0, pc, lsl pc
	...
 194:	03100000 	tsteq	r0, #0
 198:	031a0800 	tsteq	sl, #0, 16
 19c:	00010800 	andeq	r0, r1, r0, lsl #16
 1a0:	00031a52 	andeq	r1, r3, r2, asr sl
 1a4:	00033408 	andeq	r3, r3, r8, lsl #8
 1a8:	73000208 	movwvc	r0, #520	; 0x208
 1ac:	00000008 	andeq	r0, r0, r8
	...
 1bc:	0001e800 	andeq	lr, r1, r0, lsl #16
 1c0:	00020a08 	andeq	r0, r2, r8, lsl #20
 1c4:	50000108 	andpl	r0, r0, r8, lsl #2
 1c8:	0800020a 	stmdaeq	r0, {r1, r3, r9}
 1cc:	0800028e 	stmdaeq	r0, {r1, r2, r3, r7, r9}
 1d0:	01f30004 	mvnseq	r0, r4
 1d4:	028e9f50 	addeq	r9, lr, #80, 30	; 0x140
 1d8:	02ea0800 	rsceq	r0, sl, #0, 16
 1dc:	00010800 	andeq	r0, r1, r0, lsl #16
 1e0:	0002ea50 	andeq	lr, r2, r0, asr sl
 1e4:	00030c08 	andeq	r0, r3, r8, lsl #24
 1e8:	f3000408 	vshl.u8	d0, d8, d0
 1ec:	009f5001 	addseq	r5, pc, r1
 1f0:	00000000 	andeq	r0, r0, r0
 1f4:	01000000 	mrseq	r0, (UNDEF: 0)
 1f8:	00000000 	andeq	r0, r0, r0
 1fc:	01000000 	mrseq	r0, (UNDEF: 0)
 200:	00000000 	andeq	r0, r0, r0
 204:	01010000 	mrseq	r0, (UNDEF: 1)
 208:	00000000 	andeq	r0, r0, r0
 20c:	01010000 	mrseq	r0, (UNDEF: 1)
 210:	00000000 	andeq	r0, r0, r0
 214:	00000100 	andeq	r0, r0, r0, lsl #2
 218:	f2000000 	vhadd.s8	d0, d0, d0
 21c:	f6080001 			; <UNDEFINED> instruction: 0xf6080001
 220:	02080001 	andeq	r0, r8, #1
 224:	f69f3000 			; <UNDEFINED> instruction: 0xf69f3000
 228:	fe080001 	cdp2	0, 0, cr0, cr8, cr1, {0}
 22c:	07080001 	streq	r0, [r8, -r1]
 230:	0fff0a00 	svceq	0x00ff0a00
 234:	9f1c0072 	svcls	0x001c0072
 238:	080001fe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, r8}
 23c:	08000200 	stmdaeq	r0, {r9}
 240:	000a0007 	andeq	r0, sl, r7
 244:	1c007210 	sfmne	f7, 4, [r0], {16}
 248:	00020c9f 	muleq	r2, pc, ip	; <UNPREDICTABLE>
 24c:	00020e08 	andeq	r0, r2, r8, lsl #28
 250:	0a000708 	beq	1e78 <_Min_Stack_Size+0x1a78>
 254:	00730fff 	ldrshteq	r0, [r3], #-255	; 0xffffff01
 258:	02449f1c 	subeq	r9, r4, #28, 30	; 0x70
 25c:	024a0800 	subeq	r0, sl, #0, 16
 260:	00020800 	andeq	r0, r2, r0, lsl #16
 264:	024a9f30 	subeq	r9, sl, #48, 30	; 0xc0
 268:	02500800 	subseq	r0, r0, #0, 16
 26c:	00070800 	andeq	r0, r7, r0, lsl #16
 270:	730fff0a 	movwvc	pc, #65290	; 0xff0a	; <UNPREDICTABLE>
 274:	509f1c00 	addspl	r1, pc, r0, lsl #24
 278:	52080002 	andpl	r0, r8, #2
 27c:	07080002 	streq	r0, [r8, -r2]
 280:	10000a00 	andne	r0, r0, r0, lsl #20
 284:	9f1c0073 	svcls	0x001c0073
 288:	08000264 	stmdaeq	r0, {r2, r5, r6, r9}
 28c:	08000276 	stmdaeq	r0, {r1, r2, r4, r5, r6, r9}
 290:	ff0a0004 			; <UNDEFINED> instruction: 0xff0a0004
 294:	02769f1f 	rsbseq	r9, r6, #31, 30	; 0x7c
 298:	027a0800 	rsbseq	r0, sl, #0, 16
 29c:	00020800 	andeq	r0, r2, r0, lsl #16
 2a0:	027a9f30 	rsbseq	r9, sl, #48, 30	; 0xc0
 2a4:	02840800 	addeq	r0, r4, #0, 16
 2a8:	00070800 	andeq	r0, r7, r0, lsl #16
 2ac:	730fff0a 	movwvc	pc, #65290	; 0xff0a	; <UNPREDICTABLE>
 2b0:	849f1c00 	ldrhi	r1, [pc], #3072	; 2b8 <_Min_Heap_Size+0x2b8>
 2b4:	86080002 	strhi	r0, [r8], -r2
 2b8:	07080002 	streq	r0, [r8, -r2]
 2bc:	10000a00 	andne	r0, r0, r0, lsl #20
 2c0:	9f1c0073 	svcls	0x001c0073
 2c4:	0800028e 	stmdaeq	r0, {r1, r2, r3, r7, r9}
 2c8:	080002c8 	stmdaeq	r0, {r3, r6, r7, r9}
 2cc:	ff0a0004 			; <UNDEFINED> instruction: 0xff0a0004
 2d0:	02c89f1f 	sbceq	r9, r8, #31, 30	; 0x7c
 2d4:	02ce0800 	sbceq	r0, lr, #0, 16
 2d8:	00020800 	andeq	r0, r2, r0, lsl #16
 2dc:	02ce9f30 	sbceq	r9, lr, #48, 30	; 0xc0
 2e0:	02d40800 	sbcseq	r0, r4, #0, 16
 2e4:	00070800 	andeq	r0, r7, r0, lsl #16
 2e8:	730fff0a 	movwvc	pc, #65290	; 0xff0a	; <UNPREDICTABLE>
 2ec:	d49f1c00 	ldrle	r1, [pc], #3072	; 2f4 <_Min_Heap_Size+0x2f4>
 2f0:	d6080002 	strle	r0, [r8], -r2
 2f4:	07080002 	streq	r0, [r8, -r2]
 2f8:	10000a00 	andne	r0, r0, r0, lsl #20
 2fc:	9f1c0073 	svcls	0x001c0073
 300:	080002e6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r9}
 304:	080002ea 	stmdaeq	r0, {r1, r3, r5, r6, r7, r9}
 308:	9f300002 	svcls	0x00300002
 30c:	080002ea 	stmdaeq	r0, {r1, r3, r5, r6, r7, r9}
 310:	080002f0 	stmdaeq	r0, {r4, r5, r6, r7, r9}
 314:	ff0a0007 			; <UNDEFINED> instruction: 0xff0a0007
 318:	1c00730f 	stcne	3, cr7, [r0], {15}
 31c:	0002f09f 	muleq	r2, pc, r0	; <UNPREDICTABLE>
 320:	0002f208 	andeq	pc, r2, r8, lsl #4
 324:	0a000708 	beq	1f4c <_Min_Stack_Size+0x1b4c>
 328:	00731000 	rsbseq	r1, r3, r0
 32c:	00009f1c 	andeq	r9, r0, ip, lsl pc
	...
 338:	01000000 	mrseq	r0, (UNDEF: 0)
 33c:	00020201 	andeq	r0, r2, r1, lsl #4
 340:	03010100 	movweq	r0, #4352	; 0x1100
 344:	00000003 	andeq	r0, r0, r3
 348:	00010100 	andeq	r0, r1, r0, lsl #2
 34c:	00000000 	andeq	r0, r0, r0
 350:	00010100 	andeq	r0, r1, r0, lsl #2
 354:	00000000 	andeq	r0, r0, r0
 358:	01ec0000 	mvneq	r0, r0
 35c:	01f60800 	mvnseq	r0, r0, lsl #16
 360:	00010800 	andeq	r0, r1, r0, lsl #16
 364:	0001f652 	andeq	pc, r1, r2, asr r6	; <UNPREDICTABLE>
 368:	00020c08 	andeq	r0, r2, r8, lsl #24
 36c:	73000208 	movwvc	r0, #520	; 0x208
 370:	00022c08 	andeq	r2, r2, r8, lsl #24
 374:	00023208 	andeq	r3, r2, r8, lsl #4
 378:	53000108 	movwpl	r0, #264	; 0x108
 37c:	08000232 	stmdaeq	r0, {r1, r4, r5, r9}
 380:	08000232 	stmdaeq	r0, {r1, r4, r5, r9}
 384:	00730007 	rsbseq	r0, r3, r7
 388:	21243c40 			; <UNDEFINED> instruction: 0x21243c40
 38c:	0002329f 	muleq	r2, pc, r2	; <UNPREDICTABLE>
 390:	00023608 	andeq	r3, r2, r8, lsl #12
 394:	73000708 	movwvc	r0, #1800	; 0x708
 398:	24404100 	strbcs	r4, [r0], #-256	; 0xffffff00
 39c:	02369f21 	eorseq	r9, r6, #33, 30	; 0x84
 3a0:	02360800 	eorseq	r0, r6, #0, 16
 3a4:	00010800 	andeq	r0, r1, r0, lsl #16
 3a8:	00023653 	andeq	r3, r2, r3, asr r6
 3ac:	00023608 	andeq	r3, r2, r8, lsl #12
 3b0:	73000708 	movwvc	r0, #1800	; 0x708
 3b4:	ff0f0b00 			; <UNDEFINED> instruction: 0xff0f0b00
 3b8:	02369f1a 	eorseq	r9, r6, #26, 30	; 0x68
 3bc:	023a0800 	eorseq	r0, sl, #0, 16
 3c0:	00070800 	andeq	r0, r7, r0, lsl #16
 3c4:	0f0b0073 	svceq	0x000b0073
 3c8:	3a9f1ac7 	bcc	fe7c6eec <BootRAM+0xd73768d>
 3cc:	4a080002 	bmi	2003dc <_Min_Stack_Size+0x1fffdc>
 3d0:	01080002 	tsteq	r8, r2
 3d4:	025e5100 	subseq	r5, lr, #0, 2
 3d8:	025e0800 	subseq	r0, lr, #0, 16
 3dc:	00010800 	andeq	r0, r1, r0, lsl #16
 3e0:	00025e53 	andeq	r5, r2, r3, asr lr
 3e4:	00026208 	andeq	r6, r2, r8, lsl #4
 3e8:	73000708 	movwvc	r0, #1800	; 0x708
 3ec:	243f4000 	ldrtcs	r4, [pc], #-0	; 3f4 <_Min_Heap_Size+0x3f4>
 3f0:	02629f21 	rsbeq	r9, r2, #33, 30	; 0x84
 3f4:	02640800 	rsbeq	r0, r4, #0, 16
 3f8:	00010800 	andeq	r0, r1, r0, lsl #16
 3fc:	00026453 	andeq	r6, r2, r3, asr r4
 400:	00026c08 	andeq	r6, r2, r8, lsl #24
 404:	71000208 	tstvc	r0, r8, lsl #4
 408:	00026e08 	andeq	r6, r2, r8, lsl #28
 40c:	00026e08 	andeq	r6, r2, r8, lsl #28
 410:	53000108 	movwpl	r0, #264	; 0x108
 414:	0800026e 	stmdaeq	r0, {r1, r2, r3, r5, r6, r9}
 418:	08000274 	stmdaeq	r0, {r2, r4, r5, r6, r9}
 41c:	00730006 	rsbseq	r0, r3, r6
 420:	9f1afc09 	svcls	0x001afc09
 424:	08000274 	stmdaeq	r0, {r2, r4, r5, r6, r9}
 428:	0800027a 	stmdaeq	r0, {r1, r3, r4, r5, r6, r9}
 42c:	7a530001 	bvc	14c0438 <_Min_Stack_Size+0x14c0038>
 430:	8e080002 	cdphi	0, 0, cr0, cr8, cr2, {0}
 434:	02080002 	andeq	r0, r8, #2
 438:	8e087100 	adfhie	f7, f0, f0
 43c:	96080002 	strls	r0, [r8], -r2
 440:	02080002 	andeq	r0, r8, #2
 444:	00087300 	andeq	r7, r8, r0, lsl #6
 448:	00000000 	andeq	r0, r0, r0
 44c:	44000000 	strmi	r0, [r0], #-0
 450:	46000003 	strmi	r0, [r0], -r3
 454:	02000003 	andeq	r0, r0, #3
 458:	46007d00 	strmi	r7, [r0], -r0, lsl #26
 45c:	9c000003 	stcls	0, cr0, [r0], {3}
 460:	02000003 	andeq	r0, r0, #3
 464:	000c7d00 	andeq	r7, ip, r0, lsl #26
	...
 470:	44000000 	strmi	r0, [r0], #-0
 474:	54000003 	strpl	r0, [r0], #-3
 478:	01000003 	tsteq	r0, r3
 47c:	03545000 	cmpeq	r4, #0
 480:	039c0000 	orrseq	r0, ip, #0
 484:	00040000 	andeq	r0, r4, r0
 488:	9f5001f3 	svcls	0x005001f3
	...
 498:	03440000 	movteq	r0, #16384	; 0x4000
 49c:	036c0000 	cmneq	ip, #0
 4a0:	00010000 	andeq	r0, r1, r0
 4a4:	00036c51 	andeq	r6, r3, r1, asr ip
 4a8:	00037000 	andeq	r7, r3, r0
 4ac:	71000300 	mrsvc	r0, LR_irq
 4b0:	03709f02 	cmneq	r0, #2, 30
 4b4:	039c0000 	orrseq	r0, ip, #0
 4b8:	00040000 	andeq	r0, r4, r0
 4bc:	9f5101f3 	svcls	0x005101f3
	...
 4c8:	03580000 	cmpeq	r8, #0
 4cc:	039c0000 	orrseq	r0, ip, #0
 4d0:	00010000 	andeq	r0, r1, r0
 4d4:	00000050 	andeq	r0, r0, r0, asr r0
 4d8:	00000000 	andeq	r0, r0, r0
 4dc:	00000100 	andeq	r0, r0, r0, lsl #2
 4e0:	5a010000 	bpl	404e8 <_Min_Stack_Size+0x400e8>
 4e4:	6a000003 	bvs	4f8 <_Min_Stack_Size+0xf8>
 4e8:	05000003 	streq	r0, [r0, #-3]
 4ec:	31017000 	mrscc	r7, (UNDEF: 1)
 4f0:	036a9f26 	cmneq	sl, #38, 30	; 0x98
 4f4:	03700000 	cmneq	r0, #0
 4f8:	00010000 	andeq	r0, r1, r0
 4fc:	00037054 	andeq	r7, r3, r4, asr r0
 500:	00039a00 	andeq	r9, r3, r0, lsl #20
 504:	70000500 	andvc	r0, r0, r0, lsl #10
 508:	9f263101 	svcls	0x00263101
	...
 518:	03680000 	cmneq	r8, #0
 51c:	03740000 	cmneq	r4, #0
 520:	00010000 	andeq	r0, r1, r0
 524:	00037453 	andeq	r7, r3, r3, asr r4
 528:	00037a00 	andeq	r7, r3, r0, lsl #20
 52c:	73000300 	movwvc	r0, #768	; 0x300
 530:	037a9f7c 	cmneq	sl, #124, 30	; 0x1f0
 534:	037e0000 	cmneq	lr, #0
 538:	00010000 	andeq	r0, r1, r0
 53c:	00000053 	andeq	r0, r0, r3, asr r0
 540:	00000000 	andeq	r0, r0, r0
 544:	68000200 	stmdavs	r0, {r9}
 548:	70000003 	andvc	r0, r0, r3
 54c:	02000003 	andeq	r0, r0, #3
 550:	009f3000 	addseq	r3, pc, r0
 554:	00000000 	andeq	r0, r0, r0
 558:	90000000 	andls	r0, r0, r0
 55c:	92000002 	andls	r0, r0, #2
 560:	02000002 	andeq	r0, r0, #2
 564:	92007d00 	andls	r7, r0, #0, 26
 568:	ea000002 	b	578 <_Min_Stack_Size+0x178>
 56c:	02000002 	andeq	r0, r0, #2
 570:	00147d00 	andseq	r7, r4, r0, lsl #26
	...
 57c:	00000202 	andeq	r0, r0, r2, lsl #4
 580:	00029000 	andeq	r9, r2, r0
 584:	00029000 	andeq	r9, r2, r0
 588:	50000100 	andpl	r0, r0, r0, lsl #2
 58c:	00000290 	muleq	r0, r0, r2
 590:	00000298 	muleq	r0, r8, r2
 594:	00700005 	rsbseq	r0, r0, r5
 598:	989f1a3f 	ldmls	pc, {r0, r1, r2, r3, r4, r5, r9, fp, ip}	; <UNPREDICTABLE>
 59c:	ea000002 	b	5ac <_Min_Stack_Size+0x1ac>
 5a0:	06000002 	streq	r0, [r0], -r2
 5a4:	5001f300 	andpl	pc, r1, r0, lsl #6
 5a8:	009f1a3f 	addseq	r1, pc, pc, lsr sl	; <UNPREDICTABLE>
 5ac:	00000000 	andeq	r0, r0, r0
 5b0:	01000000 	mrseq	r0, (UNDEF: 0)
 5b4:	b2000000 	andlt	r0, r0, #0
 5b8:	e6000002 	str	r0, [r0], -r2
 5bc:	01000002 	tsteq	r0, r2
 5c0:	02e65500 	rsceq	r5, r6, #0, 10
 5c4:	02ea0000 	rsceq	r0, sl, #0
 5c8:	00010000 	andeq	r0, r1, r0
 5cc:	0000005c 	andeq	r0, r0, ip, asr r0
 5d0:	00000000 	andeq	r0, r0, r0
 5d4:	b0000000 	andlt	r0, r0, r0
 5d8:	ea000002 	b	5e8 <_Min_Stack_Size+0x1e8>
 5dc:	01000002 	tsteq	r0, r2
 5e0:	00005600 	andeq	r5, r0, r0, lsl #12
 5e4:	00000000 	andeq	r0, r0, r0
 5e8:	00010000 	andeq	r0, r1, r0
 5ec:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
 5f0:	000002ea 	andeq	r0, r0, sl, ror #5
 5f4:	00510001 	subseq	r0, r1, r1
	...
 600:	00000101 	andeq	r0, r0, r1, lsl #2
 604:	0002b200 	andeq	fp, r2, r0, lsl #4
 608:	0002b200 	andeq	fp, r2, r0, lsl #4
 60c:	53000100 	movwpl	r0, #256	; 0x100
 610:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
 614:	000002ca 	andeq	r0, r0, sl, asr #5
 618:	00750008 	rsbseq	r0, r5, r8
 61c:	00732432 	rsbseq	r2, r3, r2, lsr r4
 620:	02de9f22 	sbcseq	r9, lr, #34, 30	; 0x88
 624:	02e60000 	rsceq	r0, r6, #0
 628:	00080000 	andeq	r0, r8, r0
 62c:	24320075 	ldrtcs	r0, [r2], #-117	; 0xffffff8b
 630:	9f220073 	svcls	0x00220073
	...
 63c:	00000168 	andeq	r0, r0, r8, ror #2
 640:	0000016a 	andeq	r0, r0, sl, ror #2
 644:	007d0002 	rsbseq	r0, sp, r2
 648:	0000016a 	andeq	r0, r0, sl, ror #2
 64c:	00000290 	muleq	r0, r0, r2
 650:	107d0002 	rsbsne	r0, sp, r2
	...
 65c:	00000002 	andeq	r0, r0, r2
 660:	00000190 	muleq	r0, r0, r1
 664:	00000194 	muleq	r0, r4, r1
 668:	9f300002 	svcls	0x00300002
 66c:	00000194 	muleq	r0, r4, r1
 670:	00000196 	muleq	r0, r6, r1
 674:	74380005 	ldrtvc	r0, [r8], #-5
 678:	009f1c00 	addseq	r1, pc, r0, lsl #24
	...
 684:	0001e000 	andeq	lr, r1, r0
 688:	00022c00 	andeq	r2, r2, r0, lsl #24
 68c:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
 698:	0000007c 	andeq	r0, r0, ip, ror r0
 69c:	0000007e 	andeq	r0, r0, lr, ror r0
 6a0:	007d0002 	rsbseq	r0, sp, r2
 6a4:	0000007e 	andeq	r0, r0, lr, ror r0
 6a8:	00000168 	andeq	r0, r0, r8, ror #2
 6ac:	147d0002 	ldrbtne	r0, [sp], #-2
	...
 6bc:	0000007c 	andeq	r0, r0, ip, ror r0
 6c0:	00000082 	andeq	r0, r0, r2, lsl #1
 6c4:	82500001 	subshi	r0, r0, #1
 6c8:	68000000 	stmdavs	r0, {}	; <UNPREDICTABLE>
 6cc:	01000001 	tsteq	r0, r1
 6d0:	00005600 	andeq	r5, r0, r0, lsl #12
	...
 6e8:	007c0000 	rsbseq	r0, ip, r0
 6ec:	00c80000 	sbceq	r0, r8, r0
 6f0:	00010000 	andeq	r0, r1, r0
 6f4:	0000c851 	andeq	ip, r0, r1, asr r8
 6f8:	0000ca00 	andeq	ip, r0, r0, lsl #20
 6fc:	f3000400 	vshl.u8	d0, d0, d0
 700:	ca9f5101 	bgt	fe7d4b0c <BootRAM+0xd7452ad>
 704:	ce000000 	cdpgt	0, 0, cr0, cr0, cr0, {0}
 708:	01000000 	mrseq	r0, (UNDEF: 0)
 70c:	00ce5100 	sbceq	r5, lr, r0, lsl #2
 710:	010a0000 	mrseq	r0, (UNDEF: 10)
 714:	00040000 	andeq	r0, r4, r0
 718:	9f5101f3 	svcls	0x005101f3
 71c:	0000010a 	andeq	r0, r0, sl, lsl #2
 720:	0000010e 	andeq	r0, r0, lr, lsl #2
 724:	0e510001 	cdpeq	0, 5, cr0, cr1, cr1, {0}
 728:	10000001 	andne	r0, r0, r1
 72c:	04000001 	streq	r0, [r0], #-1
 730:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
 734:	0001109f 	muleq	r1, pc, r0	; <UNPREDICTABLE>
 738:	00011400 	andeq	r1, r1, r0, lsl #8
 73c:	51000100 	mrspl	r0, (UNDEF: 16)
 740:	00000114 	andeq	r0, r0, r4, lsl r1
 744:	00000168 	andeq	r0, r0, r8, ror #2
 748:	01f30004 	mvnseq	r0, r4
 74c:	00009f51 	andeq	r9, r0, r1, asr pc
	...
 75c:	0000007c 	andeq	r0, r0, ip, ror r0
 760:	00000104 	andeq	r0, r0, r4, lsl #2
 764:	04520001 	ldrbeq	r0, [r2], #-1
 768:	06000001 	streq	r0, [r0], -r1
 76c:	04000001 	streq	r0, [r0], #-1
 770:	5201f300 	andpl	pc, r1, #0, 6
 774:	00010a9f 	muleq	r1, pc, sl	; <UNPREDICTABLE>
 778:	00016800 	andeq	r6, r1, r0, lsl #16
 77c:	52000100 	andpl	r0, r0, #0, 2
	...
 790:	007c0000 	rsbseq	r0, ip, r0
 794:	00f20000 	rscseq	r0, r2, r0
 798:	00010000 	andeq	r0, r1, r0
 79c:	0000f253 	andeq	pc, r0, r3, asr r2	; <UNPREDICTABLE>
 7a0:	00010200 	andeq	r0, r1, r0, lsl #4
 7a4:	76000700 	strvc	r0, [r0], -r0, lsl #14
 7a8:	71243200 			; <UNDEFINED> instruction: 0x71243200
 7ac:	01022200 	mrseq	r2, R10_usr
 7b0:	010a0000 	mrseq	r0, (UNDEF: 10)
 7b4:	00040000 	andeq	r0, r4, r0
 7b8:	9f5301f3 	svcls	0x005301f3
 7bc:	0000010a 	andeq	r0, r0, sl, lsl #2
 7c0:	0000014a 	andeq	r0, r0, sl, asr #2
 7c4:	4a530001 	bmi	14c07d0 <_Min_Stack_Size+0x14c03d0>
 7c8:	68000001 	stmdavs	r0, {r0}
 7cc:	07000001 	streq	r0, [r0, -r1]
 7d0:	32007600 	andcc	r7, r0, #0, 12
 7d4:	22007124 	andcs	r7, r0, #36, 2
	...
 7e0:	00000002 	andeq	r0, r0, r2
 7e4:	0000007c 	andeq	r0, r0, ip, ror r0
 7e8:	000000e6 	andeq	r0, r0, r6, ror #1
 7ec:	00700006 	rsbseq	r0, r0, r6
 7f0:	9f1a8009 	svcls	0x001a8009
 7f4:	000000e6 	andeq	r0, r0, r6, ror #1
 7f8:	00000168 	andeq	r0, r0, r8, ror #2
 7fc:	01f30007 	mvnseq	r0, r7
 800:	1a800950 	bne	fe002d48 <BootRAM+0xcf734e9>
 804:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
 808:	00000000 	andeq	r0, r0, r0
 80c:	01010000 	mrseq	r0, (UNDEF: 1)
 810:	00000202 	andeq	r0, r0, r2, lsl #4
 814:	b2000000 	andlt	r0, r0, #0
 818:	b2000000 	andlt	r0, r0, #0
 81c:	01000000 	mrseq	r0, (UNDEF: 0)
 820:	00b25400 	adcseq	r5, r2, r0, lsl #8
 824:	00b20000 	adcseq	r0, r2, r0
 828:	000b0000 	andeq	r0, fp, r0
 82c:	0f0a0074 	svceq	0x000a0074
 830:	800b1a0f 	andhi	r1, fp, pc, lsl #20
 834:	b29f2180 	addslt	r2, pc, #128, 2
 838:	b8000000 	stmdalt	r0, {}	; <UNPREDICTABLE>
 83c:	11000000 	mrsne	r0, (UNDEF: 0)
 840:	0a007400 	beq	1d848 <_Min_Stack_Size+0x1d448>
 844:	761a0f00 	ldrvc	r0, [sl], -r0, lsl #30
 848:	1aff0800 	bne	fffc2850 <BootRAM+0xef32ff1>
 84c:	80800b21 	addhi	r0, r0, r1, lsr #22
 850:	00bc9f21 	adcseq	r9, ip, r1, lsr #30
 854:	00d20000 	sbcseq	r0, r2, r0
 858:	00070000 	andeq	r0, r7, r0
 85c:	800b0074 	andhi	r0, fp, r4, ror r0
 860:	0a9f2180 	beq	fe7c8e68 <BootRAM+0xd739609>
 864:	16000001 	strne	r0, [r0], -r1
 868:	07000001 	streq	r0, [r0, -r1]
 86c:	0b007400 	bleq	1d874 <_Min_Stack_Size+0x1d474>
 870:	9f218080 	svcls	0x00218080
	...
 87c:	0000039c 	muleq	r0, ip, r3
 880:	0000039e 	muleq	r0, lr, r3
 884:	007d0002 	rsbseq	r0, sp, r2
 888:	0000039e 	muleq	r0, lr, r3
 88c:	0000042a 	andeq	r0, r0, sl, lsr #8
 890:	187d0002 	ldmdane	sp!, {r1}^
 894:	0000042a 	andeq	r0, r0, sl, lsr #8
 898:	0000042c 	andeq	r0, r0, ip, lsr #8
 89c:	107d0002 	rsbsne	r0, sp, r2
 8a0:	0000042c 	andeq	r0, r0, ip, lsr #8
 8a4:	000004b4 			; <UNDEFINED> instruction: 0x000004b4
 8a8:	187d0002 	ldmdane	sp!, {r1}^
	...
 8bc:	0000039c 	muleq	r0, ip, r3
 8c0:	000003c2 	andeq	r0, r0, r2, asr #7
 8c4:	c2500001 	subsgt	r0, r0, #1
 8c8:	ec000003 	stc	0, cr0, [r0], {3}
 8cc:	04000003 	streq	r0, [r0], #-3
 8d0:	5001f300 	andpl	pc, r1, r0, lsl #6
 8d4:	0003ec9f 	muleq	r3, pc, ip	; <UNPREDICTABLE>
 8d8:	0003f600 	andeq	pc, r3, r0, lsl #12
 8dc:	50000100 	andpl	r0, r0, r0, lsl #2
 8e0:	000003f6 	strdeq	r0, [r0], -r6
 8e4:	000004b4 			; <UNDEFINED> instruction: 0x000004b4
 8e8:	01f30004 	mvnseq	r0, r4
 8ec:	00009f50 	andeq	r9, r0, r0, asr pc
 8f0:	00000000 	andeq	r0, r0, r0
 8f4:	00010000 	andeq	r0, r1, r0
 8f8:	01000000 	mrseq	r0, (UNDEF: 0)
 8fc:	03c80000 	biceq	r0, r8, #0
 900:	03e60000 	mvneq	r0, #0
 904:	00010000 	andeq	r0, r1, r0
 908:	0003f655 	andeq	pc, r3, r5, asr r6	; <UNPREDICTABLE>
 90c:	00042800 	andeq	r2, r4, r0, lsl #16
 910:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
 914:	0000042c 	andeq	r0, r0, ip, lsr #8
 918:	00000458 	andeq	r0, r0, r8, asr r4
 91c:	60550001 	subsvs	r0, r5, r1
 920:	90000004 	andls	r0, r0, r4
 924:	01000004 	tsteq	r0, r4
 928:	00005500 	andeq	r5, r0, r0, lsl #10
 92c:	00000000 	andeq	r0, r0, r0
 930:	00010000 	andeq	r0, r1, r0
 934:	000003ae 	andeq	r0, r0, lr, lsr #7
 938:	000003b8 			; <UNDEFINED> instruction: 0x000003b8
 93c:	0073000b 	rsbseq	r0, r3, fp
 940:	1a08000a 	bne	200970 <_Min_Stack_Size+0x200570>
 944:	2e302440 	cfnegscs	mvf2, mvf0
 948:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
 958:	00010000 	andeq	r0, r1, r0
 95c:	0003ce00 	andeq	ip, r3, r0, lsl #28
 960:	0003e600 	andeq	lr, r3, r0, lsl #12
 964:	53000100 	movwpl	r0, #256	; 0x100
 968:	000003f6 	strdeq	r0, [r0], -r6
 96c:	00000409 	andeq	r0, r0, r9, lsl #8
 970:	2c530001 	mrrccs	0, 0, r0, r3, cr1
 974:	36000004 	strcc	r0, [r0], -r4
 978:	01000004 	tsteq	r0, r4
 97c:	04365300 	ldrteq	r5, [r6], #-768	; 0xfffffd00
 980:	04490000 	strbeq	r0, [r9], #-0
 984:	000b0000 	andeq	r0, fp, r0
 988:	00000c03 	andeq	r0, r0, r3, lsl #24
 98c:	08019420 	stmdaeq	r1, {r5, sl, ip, pc}
 990:	4c9f1a7f 	vldmiami	pc, {s2-s128}
 994:	58000004 	stmdapl	r0, {r2}
 998:	01000004 	tsteq	r0, r4
 99c:	04605300 	strbteq	r5, [r0], #-768	; 0xfffffd00
 9a0:	04730000 	ldrbteq	r0, [r3], #-0
 9a4:	00010000 	andeq	r0, r1, r0
 9a8:	00000053 	andeq	r0, r0, r3, asr r0
 9ac:	00000000 	andeq	r0, r0, r0
 9b0:	1a000100 	bne	db8 <_Min_Stack_Size+0x9b8>
 9b4:	27000004 	strcs	r0, [r0, -r4]
 9b8:	02000004 	andeq	r0, r0, #4
 9bc:	006a9100 	rsbeq	r9, sl, r0, lsl #2
 9c0:	00000000 	andeq	r0, r0, r0
 9c4:	01000000 	mrseq	r0, (UNDEF: 0)
 9c8:	00041a00 	andeq	r1, r4, r0, lsl #20
 9cc:	00042700 	andeq	r2, r4, r0, lsl #14
 9d0:	91000200 	mrsls	r0, R8_usr
 9d4:	0000006c 	andeq	r0, r0, ip, rrx
 9d8:	00000000 	andeq	r0, r0, r0
 9dc:	0002ea00 	andeq	lr, r2, r0, lsl #20
 9e0:	0002ec00 	andeq	lr, r2, r0, lsl #24
 9e4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
 9e8:	0002ec00 	andeq	lr, r2, r0, lsl #24
 9ec:	00034400 	andeq	r4, r3, r0, lsl #8
 9f0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
 9f4:	00000018 	andeq	r0, r0, r8, lsl r0
	...
 a00:	0002ea00 	andeq	lr, r2, r0, lsl #20
 a04:	00032200 	andeq	r2, r3, r0, lsl #4
 a08:	50000100 	andpl	r0, r0, r0, lsl #2
 a0c:	00000322 	andeq	r0, r0, r2, lsr #6
 a10:	00000344 	andeq	r0, r0, r4, asr #6
 a14:	01f30004 	mvnseq	r0, r4
 a18:	00009f50 	andeq	r9, r0, r0, asr pc
	...
 a24:	03160000 	tsteq	r6, #0
 a28:	03200000 	nopeq	{0}	; <UNPREDICTABLE>
 a2c:	00010000 	andeq	r0, r1, r0
 a30:	00032057 	andeq	r2, r3, r7, asr r0
 a34:	00033a00 	andeq	r3, r3, r0, lsl #20
 a38:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
 a44:	00000002 	andeq	r0, r0, r2
 a48:	00000000 	andeq	r0, r0, r0
 a4c:	00000032 	andeq	r0, r0, r2, lsr r0
 a50:	00000034 	andeq	r0, r0, r4, lsr r0
 a54:	9f300002 	svcls	0x00300002
 a58:	00000034 	andeq	r0, r0, r4, lsr r0
 a5c:	00000036 	andeq	r0, r0, r6, lsr r0
 a60:	a00c0009 	andge	r0, ip, r9
 a64:	72000186 	andvc	r0, r0, #-2147483615	; 0x80000021
 a68:	369f1c00 	ldrcc	r1, [pc], r0, lsl #24
 a6c:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
 a70:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
 a74:	86a10c00 	strthi	r0, [r1], r0, lsl #24
 a78:	00720001 	rsbseq	r0, r2, r1
 a7c:	00389f1c 	eorseq	r9, r8, ip, lsl pc
 a80:	004e0000 	subeq	r0, lr, r0
 a84:	00090000 	andeq	r0, r9, r0
 a88:	0186a00c 	orreq	sl, r6, ip
 a8c:	1c007200 	sfmne	f7, 4, [r0], {-0}
 a90:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
 a94:	00000000 	andeq	r0, r0, r0
 a98:	52000100 	andpl	r0, r0, #0, 2
 a9c:	5a000000 	bpl	aa4 <_Min_Stack_Size+0x6a4>
 aa0:	02000000 	andeq	r0, r0, #0
 aa4:	009f4400 	addseq	r4, pc, r0, lsl #8
	...
 ab0:	0a000000 	beq	ab8 <_Min_Stack_Size+0x6b8>
 ab4:	0c000000 	stceq	0, cr0, [r0], {-0}
 ab8:	01000000 	mrseq	r0, (UNDEF: 0)
 abc:	000c5000 	andeq	r5, ip, r0
 ac0:	000e0000 	andeq	r0, lr, r0
 ac4:	00040000 	andeq	r0, r4, r0
 ac8:	9f5001f3 	svcls	0x005001f3
	...
 ad8:	00000006 	andeq	r0, r0, r6
 adc:	00000008 	andeq	r0, r0, r8
 ae0:	08500001 	ldmdaeq	r0, {r0}^
 ae4:	0a000000 	beq	aec <_Min_Stack_Size+0x6ec>
 ae8:	04000000 	streq	r0, [r0], #-0
 aec:	5001f300 	andpl	pc, r1, r0, lsl #6
 af0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
 af4:	00000000 	andeq	r0, r0, r0
 af8:	0000e000 	andeq	lr, r0, r0
 afc:	0000e200 	andeq	lr, r0, r0, lsl #4
 b00:	7d000200 	sfmvc	f0, 4, [r0, #-0]
 b04:	0000e200 	andeq	lr, r0, r0, lsl #4
 b08:	00012400 	andeq	r2, r1, r0, lsl #8
 b0c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
 b10:	00000008 	andeq	r0, r0, r8
	...
 b20:	0000e000 	andeq	lr, r0, r0
 b24:	0000ec00 	andeq	lr, r0, r0, lsl #24
 b28:	50000100 	andpl	r0, r0, r0, lsl #2
 b2c:	000000ec 	andeq	r0, r0, ip, ror #1
 b30:	00000118 	andeq	r0, r0, r8, lsl r1
 b34:	01f30004 	mvnseq	r0, r4
 b38:	01189f50 	tsteq	r8, r0, asr pc
 b3c:	011a0000 	tsteq	sl, r0
 b40:	00010000 	andeq	r0, r1, r0
 b44:	00011a50 	andeq	r1, r1, r0, asr sl
 b48:	00012400 	andeq	r2, r1, r0, lsl #8
 b4c:	f3000400 	vshl.u8	d0, d0, d0
 b50:	009f5001 	addseq	r5, pc, r1
	...
 b60:	0000e000 	andeq	lr, r0, r0
 b64:	0000ee00 	andeq	lr, r0, r0, lsl #28
 b68:	51000100 	mrspl	r0, (UNDEF: 16)
 b6c:	000000ee 	andeq	r0, r0, lr, ror #1
 b70:	00000118 	andeq	r0, r0, r8, lsl r1
 b74:	01f30004 	mvnseq	r0, r4
 b78:	01189f51 	tsteq	r8, r1, asr pc
 b7c:	01240000 			; <UNDEFINED> instruction: 0x01240000
 b80:	00010000 	andeq	r0, r1, r0
 b84:	00000051 	andeq	r0, r0, r1, asr r0
	...
 b90:	e0000000 	and	r0, r0, r0
 b94:	f1000000 	cps	#0
 b98:	01000000 	mrseq	r0, (UNDEF: 0)
 b9c:	00f15200 	rscseq	r5, r1, r0, lsl #4
 ba0:	01180000 	tsteq	r8, r0
 ba4:	00040000 	andeq	r0, r4, r0
 ba8:	9f5201f3 	svcls	0x005201f3
 bac:	00000118 	andeq	r0, r0, r8, lsl r1
 bb0:	00000124 	andeq	r0, r0, r4, lsr #2
 bb4:	00520001 	subseq	r0, r2, r1
 bb8:	00000000 	andeq	r0, r0, r0
 bbc:	7c000000 	stcvc	0, cr0, [r0], {-0}
 bc0:	7e000000 	cdpvc	0, 0, cr0, cr0, cr0, {0}
 bc4:	02000000 	andeq	r0, r0, #0
 bc8:	7e007d00 	cdpvc	13, 0, cr7, cr0, cr0, {0}
 bcc:	e0000000 	and	r0, r0, r0
 bd0:	02000000 	andeq	r0, r0, #0
 bd4:	000c7d00 	andeq	r7, ip, r0, lsl #26
	...
 be4:	7c000000 	stcvc	0, cr0, [r0], {-0}
 be8:	96000000 	strls	r0, [r0], -r0
 bec:	01000000 	mrseq	r0, (UNDEF: 0)
 bf0:	00965000 	addseq	r5, r6, r0
 bf4:	009e0000 	addseq	r0, lr, r0
 bf8:	00040000 	andeq	r0, r4, r0
 bfc:	9f5001f3 	svcls	0x005001f3
 c00:	0000009e 	muleq	r0, lr, r0
 c04:	000000a4 	andeq	r0, r0, r4, lsr #1
 c08:	a4500001 	ldrbge	r0, [r0], #-1
 c0c:	e0000000 	and	r0, r0, r0
 c10:	04000000 	streq	r0, [r0], #-0
 c14:	5001f300 	andpl	pc, r1, r0, lsl #6
 c18:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
 c2c:	00002800 	andeq	r2, r0, r0, lsl #16
 c30:	50000100 	andpl	r0, r0, r0, lsl #2
 c34:	00000028 	andeq	r0, r0, r8, lsr #32
 c38:	0000002c 	andeq	r0, r0, ip, lsr #32
 c3c:	01f30004 	mvnseq	r0, r4
 c40:	002c9f50 	eoreq	r9, ip, r0, asr pc
 c44:	003e0000 	eorseq	r0, lr, r0
 c48:	00010000 	andeq	r0, r1, r0
 c4c:	00003e50 	andeq	r3, r0, r0, asr lr
 c50:	00007c00 	andeq	r7, r0, r0, lsl #24
 c54:	f3000400 	vshl.u8	d0, d0, d0
 c58:	009f5001 	addseq	r5, pc, r1
	...
 c68:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
 c6c:	0a000000 	beq	c74 <_Min_Stack_Size+0x874>
 c70:	05000000 	streq	r0, [r0, #-0]
 c74:	32007600 	andcc	r7, r0, #0, 12
 c78:	000a9f26 	andeq	r9, sl, r6, lsr #30
 c7c:	001c0000 	andseq	r0, ip, r0
 c80:	00010000 	andeq	r0, r1, r0
 c84:	00002456 	andeq	r2, r0, r6, asr r4
 c88:	00002600 	andeq	r2, r0, r0, lsl #12
 c8c:	76000500 	strvc	r0, [r0], -r0, lsl #10
 c90:	9f263200 	svcls	0x00263200
 c94:	00000026 	andeq	r0, r0, r6, lsr #32
 c98:	00000038 	andeq	r0, r0, r8, lsr r0
 c9c:	00560001 	subseq	r0, r6, r1
 ca0:	00000000 	andeq	r0, r0, r0
 ca4:	01000000 	mrseq	r0, (UNDEF: 0)
 ca8:	00000000 	andeq	r0, r0, r0
 cac:	01000000 	mrseq	r0, (UNDEF: 0)
 cb0:	00000000 	andeq	r0, r0, r0
 cb4:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
 cb8:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
 cbc:	02000000 	andeq	r0, r0, #0
 cc0:	0e9f3000 	cdpeq	0, 9, cr3, cr15, cr0, {0}
 cc4:	10000000 	andne	r0, r0, r0
 cc8:	01000000 	mrseq	r0, (UNDEF: 0)
 ccc:	00105400 	andseq	r5, r0, r0, lsl #8
 cd0:	00160000 	andseq	r0, r6, r0
 cd4:	00030000 	andeq	r0, r3, r0
 cd8:	169f7f74 			; <UNDEFINED> instruction: 0x169f7f74
 cdc:	1a000000 	bne	ce4 <_Min_Stack_Size+0x8e4>
 ce0:	01000000 	mrseq	r0, (UNDEF: 0)
 ce4:	00245400 	eoreq	r5, r4, r0, lsl #8
 ce8:	002a0000 	eoreq	r0, sl, r0
 cec:	00020000 	andeq	r0, r2, r0
 cf0:	002a9f30 	eoreq	r9, sl, r0, lsr pc
 cf4:	002c0000 	eoreq	r0, ip, r0
 cf8:	00010000 	andeq	r0, r1, r0
 cfc:	00002c54 	andeq	r2, r0, r4, asr ip
 d00:	00003200 	andeq	r3, r0, r0, lsl #4
 d04:	74000300 	strvc	r0, [r0], #-768	; 0xfffffd00
 d08:	00329f7f 	eorseq	r9, r2, pc, ror pc
 d0c:	00360000 	eorseq	r0, r6, r0
 d10:	00010000 	andeq	r0, r1, r0
 d14:	00000054 	andeq	r0, r0, r4, asr r0
 d18:	00000000 	andeq	r0, r0, r0
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	08000150 	stmdaeq	r0, {r4, r6, r8}
  14:	00000214 	andeq	r0, r0, r4, lsl r2
  18:	080009e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, fp}
  1c:	00000084 	andeq	r0, r0, r4, lsl #1
	...
  28:	0000001c 	andeq	r0, r0, ip, lsl r0
  2c:	092c0002 	stmdbeq	ip!, {r1}
  30:	00040000 	andeq	r0, r4, r0
  34:	00000000 	andeq	r0, r0, r0
  38:	08000364 	stmdaeq	r0, {r2, r5, r6, r8, r9}
  3c:	000004b4 			; <UNDEFINED> instruction: 0x000004b4
	...
  48:	0000001c 	andeq	r0, r0, ip, lsl r0
  4c:	17db0002 	ldrbne	r0, [fp, r2]
  50:	00040000 	andeq	r0, r4, r0
  54:	00000000 	andeq	r0, r0, r0
  58:	08000818 	stmdaeq	r0, {r3, r4, fp}
  5c:	00000138 	andeq	r0, r0, r8, lsr r1
	...
  68:	0000001c 	andeq	r0, r0, ip, lsl r0
  6c:	26f50002 	ldrbtcs	r0, [r5], r2
  70:	00040000 	andeq	r0, r4, r0
  74:	00000000 	andeq	r0, r0, r0
  78:	08000950 	stmdaeq	r0, {r4, r6, r8, fp}
  7c:	00000048 	andeq	r0, r0, r8, asr #32
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	08000150 	stmdaeq	r0, {r4, r6, r8}
   4:	08000364 	stmdaeq	r0, {r2, r5, r6, r8, r9}
   8:	080009e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, fp}
   c:	08000a68 	stmdaeq	r0, {r3, r5, r6, r9, fp}
	...
  18:	00000032 	andeq	r0, r0, r2, lsr r0
  1c:	00000032 	andeq	r0, r0, r2, lsr r0
  20:	00000034 	andeq	r0, r0, r4, lsr r0
  24:	0000003a 	andeq	r0, r0, sl, lsr r0
	...
  30:	0000018a 	andeq	r0, r0, sl, lsl #3
  34:	0000018c 	andeq	r0, r0, ip, lsl #3
  38:	00000190 	muleq	r0, r0, r1
  3c:	00000190 	muleq	r0, r0, r1
  40:	00000194 	muleq	r0, r4, r1
  44:	000001a4 	andeq	r0, r0, r4, lsr #3
	...
  50:	00000368 	andeq	r0, r0, r8, ror #6
  54:	00000368 	andeq	r0, r0, r8, ror #6
  58:	00000370 	andeq	r0, r0, r0, ror r3
  5c:	0000037c 	andeq	r0, r0, ip, ror r3
	...
  68:	000003d2 	ldrdeq	r0, [r0], -r2
  6c:	000003e6 	andeq	r0, r0, r6, ror #7
  70:	000003f6 	strdeq	r0, [r0], -r6
  74:	00000428 	andeq	r0, r0, r8, lsr #8
  78:	0000042c 	andeq	r0, r0, ip, lsr #8
  7c:	0000044c 	andeq	r0, r0, ip, asr #8
	...
  88:	00000410 	andeq	r0, r0, r0, lsl r4
  8c:	00000412 	andeq	r0, r0, r2, lsl r4
  90:	0000041a 	andeq	r0, r0, sl, lsl r4
  94:	00000428 	andeq	r0, r0, r8, lsr #8
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	0000042f 	andeq	r0, r0, pc, lsr #8
   4:	00af0003 	adceq	r0, pc, r3
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	73010000 	movwvc	r0, #4096	; 0x1000
  1c:	6c006372 	stcvs	3, cr6, [r0], {114}	; 0x72
  20:	692f6269 	stmdbvs	pc!, {r0, r3, r5, r6, r9, sp, lr}	; <UNPREDICTABLE>
  24:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
  28:	2f006564 	svccs	0x00006564
  2c:	2f727375 	svccs	0x00727375
  30:	2f62696c 	svccs	0x0062696c
  34:	2f636367 	svccs	0x00636367
  38:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
  3c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
  40:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
  44:	2e382f69 	cdpcs	15, 3, cr2, cr8, cr9, {3}
  48:	2f312e33 	svccs	0x00312e33
  4c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
  50:	00656475 	rsbeq	r6, r5, r5, ror r4
  54:	6f6c6300 	svcvs	0x006c6300
  58:	682e6b63 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
  5c:	00000100 	andeq	r0, r0, r0, lsl #2
  60:	6e69616d 	powvsez	f6, f1, #5.0
  64:	0100632e 	tsteq	r0, lr, lsr #6
  68:	6f630000 	svcvs	0x00630000
  6c:	635f6572 	cmpvs	pc, #478150656	; 0x1c800000
  70:	682e336d 	stmdavs	lr!, {r0, r2, r3, r5, r6, r8, r9, ip, sp}
  74:	00000200 	andeq	r0, r0, r0, lsl #4
  78:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
  7c:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
  80:	00000300 	andeq	r0, r0, r0, lsl #6
  84:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
  88:	735f6d65 	cmpvc	pc, #6464	; 0x1940
  8c:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
  90:	7878316c 	ldmdavc	r8!, {r2, r3, r5, r6, r8, ip, sp}^
  94:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
  98:	74730000 	ldrbtvc	r0, [r3], #-0
  9c:	6c32336d 	ldcvs	3, cr3, [r2], #-436	; 0xfffffe4c
  a0:	78313531 	ldmdavc	r1!, {r0, r4, r5, r8, sl, ip, sp}
  a4:	00682e63 	rsbeq	r2, r8, r3, ror #28
  a8:	75000002 	strvc	r0, [r0, #-2]
  ac:	6c5f6273 	lfmvs	f6, 2, [pc], {115}	; 0x73
  b0:	682e6269 	stmdavs	lr!, {r0, r3, r5, r6, r9, sp, lr}
  b4:	00000100 	andeq	r0, r0, r0, lsl #2
  b8:	001c0500 	andseq	r0, ip, r0, lsl #10
  bc:	01500205 	cmpeq	r0, r5, lsl #4
  c0:	17030800 	strne	r0, [r3, -r0, lsl #16]
  c4:	13030501 	movwne	r0, #13569	; 0x3501
  c8:	01061005 	tsteq	r6, r5
  cc:	05210b05 	streq	r0, [r1, #-2821]!	; 0xfffff4fb
  d0:	03051f10 	movweq	r1, #24336	; 0x5f10
  d4:	0b054b06 	bleq	152cf4 <_Min_Stack_Size+0x1528f4>
  d8:	03050106 	movweq	r0, #20742	; 0x5106
  dc:	14144c06 	ldrne	r4, [r4], #-3078	; 0xfffff3fa
  e0:	01060c05 	tsteq	r6, r5, lsl #24
  e4:	4b060305 	blmi	180d00 <_Min_Stack_Size+0x180900>
  e8:	01060c05 	tsteq	r6, r5, lsl #24
  ec:	4d060305 	stcmi	3, cr0, [r6, #-20]	; 0xffffffec
  f0:	01060c05 	tsteq	r6, r5, lsl #24
  f4:	4a061e05 	bmi	187910 <_Min_Stack_Size+0x187510>
  f8:	02004205 	andeq	r4, r0, #1342177280	; 0x50000000
  fc:	05010204 	streq	r0, [r1, #-516]	; 0xfffffdfc
 100:	04020029 	streq	r0, [r2], #-41	; 0xffffffd7
 104:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
 108:	04020023 	streq	r0, [r2], #-35	; 0xffffffdd
 10c:	03052002 	movweq	r2, #20482	; 0x5002
 110:	0c053306 	stceq	3, cr3, [r5], {6}
 114:	03050106 	movweq	r0, #20742	; 0x5106
 118:	0c054c06 	stceq	12, cr4, [r5], {6}
 11c:	03050106 	movweq	r0, #20742	; 0x5106
 120:	0c054e06 	stceq	14, cr4, [r5], {6}
 124:	03050106 	movweq	r0, #20742	; 0x5106
 128:	0c054c06 	stceq	12, cr4, [r5], {6}
 12c:	03050106 	movweq	r0, #20742	; 0x5106
 130:	0c053d06 	stceq	13, cr3, [r5], {6}
 134:	03050106 	movweq	r0, #20742	; 0x5106
 138:	0c052f06 	stceq	15, cr2, [r5], {6}
 13c:	03050106 	movweq	r0, #20742	; 0x5106
 140:	26054b06 	strcs	r4, [r5], -r6, lsl #22
 144:	01040200 	mrseq	r0, R12_usr
 148:	000e0501 	andeq	r0, lr, r1, lsl #10
 14c:	06010402 	streq	r0, [r1], -r2, lsl #8
 150:	00080501 	andeq	r0, r8, r1, lsl #10
 154:	20010402 	andcs	r0, r1, r2, lsl #8
 158:	30060305 	andcc	r0, r6, r5, lsl #6
 15c:	01060d05 	tsteq	r6, r5, lsl #26
 160:	4c060305 	stcmi	3, cr0, [r6], {5}
 164:	01060d05 	tsteq	r6, r5, lsl #26
 168:	4b060305 	blmi	180d84 <_Min_Stack_Size+0x180984>
 16c:	01060d05 	tsteq	r6, r5, lsl #26
 170:	03060305 	movweq	r0, #25349	; 0x6305
 174:	0c054a0b 			; <UNDEFINED> instruction: 0x0c054a0b
 178:	03050106 	movweq	r0, #20742	; 0x5106
 17c:	0c054b06 			; <UNDEFINED> instruction: 0x0c054b06
 180:	01050106 	tsteq	r5, r6, lsl #2
 184:	061f052f 	ldreq	r0, [pc], -pc, lsr #10
 188:	13030592 	movwne	r0, #13714	; 0x3592
 18c:	07051513 	smladeq	r5, r3, r5, r1
 190:	03050106 	movweq	r0, #20742	; 0x5106
 194:	07052f06 	streq	r2, [r5, -r6, lsl #30]
 198:	03050106 	movweq	r0, #20742	; 0x5106
 19c:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
 1a0:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
 1a4:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
 1a8:	0511060d 	ldreq	r0, [r1, #-1549]	; 0xfffff9f3
 1ac:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
 1b0:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
 1b4:	203c2007 	eorscs	r2, ip, r7
 1b8:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
 1bc:	051f0204 	ldreq	r0, [pc, #-516]	; ffffffc0 <BootRAM+0xef70761>
 1c0:	202e3119 	eorcs	r3, lr, r9, lsl r1
 1c4:	03060305 	movweq	r0, #25349	; 0x6305
 1c8:	0e05201d 	mcreq	0, 0, r2, cr5, cr13, {0}
 1cc:	03050106 	movweq	r0, #20742	; 0x5106
 1d0:	0e055906 	vmlaeq.f16	s10, s10, s12	; <UNPREDICTABLE>
 1d4:	03050106 	movweq	r0, #20742	; 0x5106
 1d8:	0e054b06 	vmlaeq.f64	d4, d5, d6
 1dc:	03050106 	movweq	r0, #20742	; 0x5106
 1e0:	07054d06 	streq	r4, [r5, -r6, lsl #26]
 1e4:	03050106 	movweq	r0, #20742	; 0x5106
 1e8:	07052f06 	streq	r2, [r5, -r6, lsl #30]
 1ec:	03050106 	movweq	r0, #20742	; 0x5106
 1f0:	05053006 	streq	r3, [r5, #-6]
 1f4:	21060106 	tstcs	r6, r6, lsl #2
 1f8:	09051313 	stmdbeq	r5, {r0, r1, r4, r8, r9, ip}
 1fc:	03050106 	movweq	r0, #20742	; 0x5106
 200:	14133406 	ldrne	r3, [r3], #-1030	; 0xfffffbfa
 204:	07051413 	smladeq	r5, r3, r4, r1
 208:	03050106 	movweq	r0, #20742	; 0x5106
 20c:	05142f06 	ldreq	r2, [r4, #-3846]	; 0xfffff0fa
 210:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
 214:	05220603 	streq	r0, [r2, #-1539]!	; 0xfffff9fd
 218:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
 21c:	054b0603 	strbeq	r0, [fp, #-1539]	; 0xfffff9fd
 220:	3011060b 	andscc	r0, r1, fp, lsl #12
 224:	20060505 	andcs	r0, r6, r5, lsl #10
 228:	01060b05 	tsteq	r6, r5, lsl #22
 22c:	2e200705 	cdpcs	7, 2, cr0, cr0, cr5, {0}
 230:	00030520 	andeq	r0, r3, r0, lsr #10
 234:	1f020402 	svcne	0x00020402
 238:	05311905 	ldreq	r1, [r1, #-2309]!	; 0xfffff6fb
 23c:	6d030605 	stcvs	6, cr0, [r3, #-20]	; 0xffffffec
 240:	0905133c 	stmdbeq	r5, {r2, r3, r4, r5, r8, r9, ip}
 244:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
 248:	1b030603 	blne	c1a5c <_Min_Stack_Size+0xc165c>
 24c:	19051420 	stmdbne	r5, {r5, sl, ip}
 250:	01051006 	tsteq	r5, r6
 254:	06030540 	streq	r0, [r3], -r0, asr #10
 258:	14207303 	strtne	r7, [r0], #-771	; 0xfffffcfd
 25c:	01060705 	tsteq	r6, r5, lsl #14
 260:	21060305 	tstcs	r6, r5, lsl #6
 264:	060c0513 			; <UNDEFINED> instruction: 0x060c0513
 268:	1d070515 	cfstr32ne	mvfx0, [r7, #-84]	; 0xffffffac
 26c:	2f060305 	svccs	0x00060305
 270:	01060d05 	tsteq	r6, r5, lsl #26
 274:	21060305 	tstcs	r6, r5, lsl #6
 278:	11060d05 	tstne	r6, r5, lsl #26
 27c:	30060505 	andcc	r0, r6, r5, lsl #10
 280:	01060c05 	tsteq	r6, r5, lsl #24
 284:	05201305 	streq	r1, [r0, #-773]!	; 0xfffffcfb
 288:	202e2e07 	eorcs	r2, lr, r7, lsl #28
 28c:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
 290:	061f0204 	ldreq	r0, [pc], -r4, lsl #4
 294:	3c7fbd03 	ldclcc	13, cr11, [pc], #-12	; 290 <_Min_Heap_Size+0x290>
 298:	060b0515 			; <UNDEFINED> instruction: 0x060b0515
 29c:	06030501 	streq	r0, [r3], -r1, lsl #10
 2a0:	060b054b 	streq	r0, [fp], -fp, asr #10
 2a4:	06030501 	streq	r0, [r3], -r1, lsl #10
 2a8:	060b054b 	streq	r0, [fp], -fp, asr #10
 2ac:	06030501 	streq	r0, [r3], -r1, lsl #10
 2b0:	060b054b 	streq	r0, [fp], -fp, asr #10
 2b4:	06030501 	streq	r0, [r3], -r1, lsl #10
 2b8:	060b054b 	streq	r0, [fp], -fp, asr #10
 2bc:	06030501 	streq	r0, [r3], -r1, lsl #10
 2c0:	060b054b 	streq	r0, [fp], -fp, asr #10
 2c4:	06030501 	streq	r0, [r3], -r1, lsl #10
 2c8:	0605054d 	streq	r0, [r5], -sp, asr #10
 2cc:	05210601 	streq	r0, [r1, #-1537]!	; 0xfffff9ff
 2d0:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
 2d4:	054b0605 	strbeq	r0, [fp, #-1541]	; 0xfffff9fb
 2d8:	3011060d 	andscc	r0, r1, sp, lsl #12
 2dc:	20060705 	andcs	r0, r6, r5, lsl #14
 2e0:	01060d05 	tsteq	r6, r5, lsl #26
 2e4:	2e200905 	vmulcs.f16	s0, s0, s10	; <UNPREDICTABLE>
 2e8:	00050520 	andeq	r0, r5, r0, lsr #10
 2ec:	1f020402 	svcne	0x00020402
 2f0:	0d053606 	stceq	6, cr3, [r5, #-24]	; 0xffffffe8
 2f4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
 2f8:	0d055906 	vstreq.16	s10, [r5, #-12]	; <UNPREDICTABLE>
 2fc:	07051106 	streq	r1, [r5, -r6, lsl #2]
 300:	0d053006 	stceq	0, cr3, [r5, #-24]	; 0xffffffe8
 304:	09050106 	stmdbeq	r5, {r1, r2, r8}
 308:	05202e20 	streq	r2, [r0, #-3616]!	; 0xfffff1e0
 30c:	04020005 	streq	r0, [r2], #-5
 310:	1b051f02 	blne	147f20 <_Min_Stack_Size+0x147b20>
 314:	06100531 			; <UNDEFINED> instruction: 0x06100531
 318:	059e3303 	ldreq	r3, [lr, #771]	; 0x303
 31c:	15131303 	ldrne	r1, [r3, #-771]	; 0xfffffcfd
 320:	01060705 	tsteq	r6, r5, lsl #14
 324:	2f060305 	svccs	0x00060305
 328:	01060705 	tsteq	r6, r5, lsl #14
 32c:	2f060305 	svccs	0x00060305
 330:	060d0513 			; <UNDEFINED> instruction: 0x060d0513
 334:	06030501 	streq	r0, [r3], -r1, lsl #10
 338:	060d0521 	streq	r0, [sp], -r1, lsr #10
 33c:	06050511 			; <UNDEFINED> instruction: 0x06050511
 340:	060c0530 			; <UNDEFINED> instruction: 0x060c0530
 344:	20070501 	andcs	r0, r7, r1, lsl #10
 348:	0305203c 	movweq	r2, #20540	; 0x503c
 34c:	02040200 	andeq	r0, r4, #0, 4
 350:	053f061f 	ldreq	r0, [pc, #-1567]!	; fffffd39 <BootRAM+0xef704da>
 354:	03050119 	movweq	r0, #20761	; 0x5119
 358:	060b0515 			; <UNDEFINED> instruction: 0x060b0515
 35c:	06030501 	streq	r0, [r3], -r1, lsl #10
 360:	060b054b 	streq	r0, [fp], -fp, asr #10
 364:	06030501 	streq	r0, [r3], -r1, lsl #10
 368:	060b054b 	streq	r0, [fp], -fp, asr #10
 36c:	06030501 	streq	r0, [r3], -r1, lsl #10
 370:	060b054b 	streq	r0, [fp], -fp, asr #10
 374:	4b010501 	blmi	41780 <_Min_Stack_Size+0x41380>
 378:	2c050204 	sfmcs	f0, 4, [r5], {4}
 37c:	7ed50306 	cdpvc	3, 13, cr0, cr5, cr6, {0}
 380:	012d0558 			; <UNDEFINED> instruction: 0x012d0558
 384:	01060105 	tsteq	r6, r5, lsl #2
 388:	22061a05 	andcs	r1, r6, #20480	; 0x5000
 38c:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
 390:	04020008 	streq	r0, [r2], #-8
 394:	00010601 	andeq	r0, r1, r1, lsl #12
 398:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
 39c:	05210105 	streq	r0, [r1, #-261]!	; 0xfffffefb
 3a0:	04020010 	streq	r0, [r2], #-16
 3a4:	021f0602 	andseq	r0, pc, #2097152	; 0x200000
 3a8:	01010002 	tsteq	r1, r2
 3ac:	0f050204 	svceq	0x00050204
 3b0:	e4020500 	str	r0, [r2], #-1280	; 0xfffffb00
 3b4:	03080009 	movweq	r0, #32777	; 0x8009
 3b8:	0305010d 	movweq	r0, #20749	; 0x510d
 3bc:	060f0513 			; <UNDEFINED> instruction: 0x060f0513
 3c0:	21030511 	tstcs	r3, r1, lsl r5
 3c4:	0f053d06 	svceq	0x00053d06
 3c8:	03050106 	movweq	r0, #20742	; 0x5106
 3cc:	2e015906 	vmlacs.f16	s10, s2, s12	; <UNPREDICTABLE>
 3d0:	20202e2e 	eorcs	r2, r0, lr, lsr #28
 3d4:	01202e01 			; <UNDEFINED> instruction: 0x01202e01
 3d8:	01011605 	tsteq	r1, r5, lsl #12
 3dc:	202e2e20 	eorcs	r2, lr, r0, lsr #28
 3e0:	202e0120 	eorcs	r0, lr, r0, lsr #2
 3e4:	13030501 	movwne	r0, #13569	; 0x3501
 3e8:	06200601 	strteq	r0, [r0], -r1, lsl #12
 3ec:	20012e20 	andcs	r2, r1, r0, lsr #28
 3f0:	202e0120 	eorcs	r0, lr, r0, lsr #2
 3f4:	01160501 	tsteq	r6, r1, lsl #10
 3f8:	012e2001 			; <UNDEFINED> instruction: 0x012e2001
 3fc:	2e012020 	cdpcs	0, 0, cr2, cr1, cr0, {1}
 400:	03050120 	movweq	r0, #20768	; 0x5120
 404:	03042f14 	movweq	r2, #20244	; 0x4f14
 408:	9f031605 	svcls	0x00031605
 40c:	35050109 	strcc	r0, [r5, #-265]	; 0xfffffef7
 410:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
 414:	e4030605 	str	r0, [r3], #-1541	; 0xfffff9fb
 418:	03052076 	movweq	r2, #20598	; 0x5076
 41c:	01040200 	mrseq	r0, R12_usr
 420:	05051e06 	streq	r1, [r5, #-3590]	; 0xfffff1fa
 424:	01040200 	mrseq	r0, R12_usr
 428:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
 42c:	0d022f01 	stceq	15, cr2, [r2, #-4]
 430:	dc010100 	stfles	f0, [r1], {-0}
 434:	03000005 	movweq	r0, #5
 438:	0000a700 	andeq	sl, r0, r0, lsl #14
 43c:	fb010200 	blx	40c46 <_Min_Stack_Size+0x40846>
 440:	01000d0e 	tsteq	r0, lr, lsl #26
 444:	00010101 	andeq	r0, r1, r1, lsl #2
 448:	00010000 	andeq	r0, r1, r0
 44c:	72730100 	rsbsvc	r0, r3, #0, 2
 450:	696c0063 	stmdbvs	ip!, {r0, r1, r5, r6}^
 454:	6e692f62 	cdpvs	15, 6, cr2, cr9, cr2, {3}
 458:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
 45c:	752f0065 	strvc	r0, [pc, #-101]!	; 3ff <_Min_Heap_Size+0x3ff>
 460:	6c2f7273 	sfmvs	f7, 4, [pc], #-460	; 29c <_Min_Heap_Size+0x29c>
 464:	672f6269 	strvs	r6, [pc, -r9, ror #4]!
 468:	612f6363 			; <UNDEFINED> instruction: 0x612f6363
 46c:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
 470:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
 474:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
 478:	332e382f 			; <UNDEFINED> instruction: 0x332e382f
 47c:	692f312e 	stmdbvs	pc!, {r1, r2, r3, r5, r8, ip, sp}	; <UNPREDICTABLE>
 480:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
 484:	00006564 	andeq	r6, r0, r4, ror #10
 488:	5f627375 	svcpl	0x00627375
 48c:	2e62696c 	vnmulcs.f16	s13, s4, s25	; <UNPREDICTABLE>
 490:	00010063 	andeq	r0, r1, r3, rrx
 494:	726f6300 	rsbvc	r6, pc, #0, 6
 498:	6d635f65 	stclvs	15, cr5, [r3, #-404]!	; 0xfffffe6c
 49c:	00682e33 	rsbeq	r2, r8, r3, lsr lr
 4a0:	73000002 	movwvc	r0, #2
 4a4:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
 4a8:	00682e74 	rsbeq	r2, r8, r4, ror lr
 4ac:	75000003 	strvc	r0, [r0, #-3]
 4b0:	6c5f6273 	lfmvs	f6, 2, [pc], {115}	; 0x73
 4b4:	682e6269 	stmdavs	lr!, {r0, r3, r5, r6, r9, sp, lr}
 4b8:	00000100 	andeq	r0, r0, r0, lsl #2
 4bc:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
 4c0:	35316c32 	ldrcc	r6, [r1, #-3122]!	; 0xfffff3ce
 4c4:	2e637831 	mcrcs	8, 3, r7, cr3, cr1, {1}
 4c8:	00020068 	andeq	r0, r2, r8, rrx
 4cc:	73797300 	cmnvc	r9, #0, 6
 4d0:	5f6d6574 	svcpl	0x006d6574
 4d4:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
 4d8:	78316c32 	ldmdavc	r1!, {r1, r4, r5, sl, fp, sp, lr}
 4dc:	00682e78 	rsbeq	r2, r8, r8, ror lr
 4e0:	00000002 	andeq	r0, r0, r2
 4e4:	05002b05 	streq	r2, [r0, #-2821]	; 0xfffff4fb
 4e8:	00036402 	andeq	r6, r3, r2, lsl #8
 4ec:	01160308 	tsteq	r6, r8, lsl #6
 4f0:	05012c05 	streq	r2, [r1, #-3077]	; 0xfffff3fb
 4f4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
 4f8:	053f065c 	ldreq	r0, [pc, #-1628]!	; fffffea4 <BootRAM+0xef70645>
 4fc:	0105015d 	tsteq	r5, sp, asr r1
 500:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
 504:	05210663 	streq	r0, [r1, #-1635]!	; 0xfffff99d
 508:	01050164 	tsteq	r5, r4, ror #2
 50c:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
 510:	15030611 	strne	r0, [r3, #-1553]	; 0xfffff9ef
 514:	13030520 	movwne	r0, #13600	; 0x3520
 518:	01061005 	tsteq	r6, r5
 51c:	59060305 	stmdbpl	r6, {r0, r2, r8, r9}
 520:	01061005 	tsteq	r6, r5
 524:	4c060305 	stcmi	3, cr0, [r6], {5}
 528:	01060f05 	tsteq	r6, r5, lsl #30
 52c:	59060305 	stmdbpl	r6, {r0, r2, r8, r9}
 530:	01060f05 	tsteq	r6, r5, lsl #30
 534:	4b060305 	blmi	181150 <_Min_Stack_Size+0x180d50>
 538:	06010705 	streq	r0, [r1], -r5, lsl #14
 53c:	110f0501 	tstne	pc, r1, lsl #10
 540:	02002e05 	andeq	r2, r0, #5, 28	; 0x50
 544:	21060304 	tstcs	r6, r4, lsl #6
 548:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
 54c:	20060304 	andcs	r0, r6, r4, lsl #6
 550:	03040200 	movweq	r0, #16896	; 0x4200
 554:	05210620 	streq	r0, [r1, #-1568]!	; 0xfffff9e0
 558:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
 55c:	052f0603 	streq	r0, [pc, #-1539]!	; ffffff61 <BootRAM+0xef70702>
 560:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
 564:	052f0603 	streq	r0, [pc, #-1539]!	; ffffff69 <BootRAM+0xef7070a>
 568:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
 56c:	052f0603 	streq	r0, [pc, #-1539]!	; ffffff71 <BootRAM+0xef70712>
 570:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
 574:	052f0603 	streq	r0, [pc, #-1539]!	; ffffff79 <BootRAM+0xef7071a>
 578:	2e01060f 	cfmadd32cs	mvax0, mvfx0, mvfx1, mvfx15
 57c:	2f060305 	svccs	0x00060305
 580:	16050204 	strne	r0, [r5], -r4, lsl #4
 584:	010ba203 	tsteq	fp, r3, lsl #4
 588:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
 58c:	4a010627 	bmi	41e30 <_Min_Stack_Size+0x41a30>
 590:	03050104 	movweq	r0, #20740	; 0x5104
 594:	74dd0306 	ldrbvc	r0, [sp], #774	; 0x306
 598:	060f0501 	streq	r0, [pc], -r1, lsl #10
 59c:	59010501 	stmdbpl	r1, {r0, r8, sl}
 5a0:	03064f05 	movweq	r4, #28421	; 0x6f05
 5a4:	05ba00e6 	ldreq	r0, [sl, #230]!	; 0xe6
 5a8:	05131303 	ldreq	r1, [r3, #-771]	; 0xfffffcfd
 5ac:	0510064f 	ldreq	r0, [r0, #-1615]	; 0xfffff9b1
 5b0:	03052209 	movweq	r2, #21001	; 0x5209
 5b4:	05053006 	streq	r3, [r5, #-6]
 5b8:	062d5906 	strteq	r5, [sp], -r6, lsl #18
 5bc:	3e060121 	adfccsp	f0, f6, f1
 5c0:	061e222c 	ldreq	r2, [lr], -ip, lsr #4
 5c4:	03050130 	movweq	r0, #20784	; 0x5130
 5c8:	060c0569 	streq	r0, [ip], -r9, ror #10
 5cc:	06030501 	streq	r0, [r3], -r1, lsl #10
 5d0:	06141321 	ldreq	r1, [r4], -r1, lsr #6
 5d4:	2e063c13 	mcrcs	12, 0, r3, cr6, cr3, {0}
 5d8:	054b1905 	strbeq	r1, [fp, #-2309]	; 0xfffff6fb
 5dc:	2e01061d 	mcrcs	6, 0, r0, cr1, cr13, {0}
 5e0:	051e0705 	ldreq	r0, [lr, #-1797]	; 0xfffff8fb
 5e4:	03053312 	movweq	r3, #21266	; 0x5312
 5e8:	12053006 	andne	r3, r5, #6
 5ec:	03052006 	movweq	r2, #20486	; 0x5006
 5f0:	05052206 	streq	r2, [r5, #-518]	; 0xfffffdfa
 5f4:	06583c06 	ldrbeq	r3, [r8], -r6, lsl #24
 5f8:	06230521 	strteq	r0, [r3], -r1, lsr #10
 5fc:	06050501 	streq	r0, [r5], -r1, lsl #10
 600:	06160521 	ldreq	r0, [r6], -r1, lsr #10
 604:	06050501 	streq	r0, [r5], -r1, lsl #10
 608:	2006013d 	andcs	r0, r6, sp, lsr r1
 60c:	0e030c05 	cdpeq	12, 0, cr0, cr3, cr5, {0}
 610:	1e050582 	cfsh32ne	mvfx0, mvfx5, #-62
 614:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
 618:	01060c05 	tsteq	r6, r5, lsl #24
 61c:	05210105 	streq	r0, [r1, #-261]!	; 0xfffffefb
 620:	69030619 	stmdbvs	r3, {r0, r3, r4, r9, sl}
 624:	061d0520 	ldreq	r0, [sp], -r0, lsr #10
 628:	0e052e01 	cdpeq	14, 0, cr2, cr5, cr1, {0}
 62c:	12052106 	andne	r2, r5, #-2147483647	; 0x80000001
 630:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
 634:	09030605 	stmdbeq	r3, {r0, r2, r9, sl}
 638:	06230520 	strteq	r0, [r3], -r0, lsr #10
 63c:	06050501 	streq	r0, [r5], -r1, lsl #10
 640:	06260521 	strteq	r0, [r6], -r1, lsr #10
 644:	1f070513 	svcne	0x00070513
 648:	26052106 	strcs	r2, [r5], -r6, lsl #2
 64c:	31391506 	teqcc	r9, r6, lsl #10
 650:	0607051d 			; <UNDEFINED> instruction: 0x0607051d
 654:	06270521 	strteq	r0, [r7], -r1, lsr #10
 658:	2e330516 	mrccs	5, 1, r0, cr3, cr6, {0}
 65c:	052a2e05 	streq	r2, [sl, #-3589]!	; 0xfffff1fb
 660:	13300607 	teqne	r0, #7340032	; 0x700000
 664:	06330513 			; <UNDEFINED> instruction: 0x06330513
 668:	2e270501 	cfsh64cs	mvdx0, mvdx7, #1
 66c:	4c060505 	cfstr32mi	mvfx0, [r6], {5}
 670:	01061705 	tsteq	r6, r5, lsl #14
 674:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
 678:	05200601 	streq	r0, [r0, #-1537]!	; 0xfffff9ff
 67c:	05ea0619 	strbeq	r0, [sl, #1561]!	; 0x619
 680:	19051303 	stmdbne	r5, {r0, r1, r8, r9, ip}
 684:	09051106 	stmdbeq	r5, {r1, r2, r8, ip}
 688:	3c050521 	cfstr32cc	mvfx0, [r5], {33}	; 0x21
 68c:	052f2f06 	streq	r2, [pc, #-3846]!	; fffff78e <BootRAM+0xef6ff2f>
 690:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
 694:	0f052f0e 	svceq	0x00052f0e
 698:	0605051f 			; <UNDEFINED> instruction: 0x0605051f
 69c:	060e052f 	streq	r0, [lr], -pc, lsr #10
 6a0:	06050501 	streq	r0, [r5], -r1, lsl #10
 6a4:	0610053d 			; <UNDEFINED> instruction: 0x0610053d
 6a8:	22240501 	eorcs	r0, r4, #4194304	; 0x400000
 6ac:	051e1005 	ldreq	r1, [lr, #-5]
 6b0:	052f0605 	streq	r0, [pc, #-1541]!	; b3 <_Min_Heap_Size+0xb3>
 6b4:	01060109 	tsteq	r6, r9, lsl #2
 6b8:	05111005 	ldreq	r1, [r1, #-5]
 6bc:	04020007 	streq	r0, [r2], #-7
 6c0:	05300603 	ldreq	r0, [r0, #-1539]!	; 0xfffff9fd
 6c4:	04020005 	streq	r0, [r2], #-5
 6c8:	051f0603 	ldreq	r0, [pc, #-1539]	; cd <_Min_Heap_Size+0xcd>
 6cc:	04020024 	streq	r0, [r2], #-36	; 0xffffffdc
 6d0:	14052f03 	strne	r2, [r5], #-3843	; 0xfffff0fd
 6d4:	03040200 	movweq	r0, #16896	; 0x4200
 6d8:	0005052e 	andeq	r0, r5, lr, lsr #10
 6dc:	2d030402 	cfstrscs	mvf0, [r3, #-8]
 6e0:	0f052406 	svceq	0x00052406
 6e4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
 6e8:	1f0f053d 	svcne	0x000f053d
 6ec:	2f060505 	svccs	0x00060505
 6f0:	0d056759 	stceq	7, cr6, [r5, #-356]	; 0xfffffe9c
 6f4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
 6f8:	03052f06 	movweq	r2, #24326	; 0x5f06
 6fc:	06090531 			; <UNDEFINED> instruction: 0x06090531
 700:	3c050501 	cfstr32cc	mvfx0, [r5], {1}
 704:	18052f06 	stmdane	r5, {r1, r2, r8, r9, sl, fp, sp}
 708:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
 70c:	0605052e 	streq	r0, [r5], -lr, lsr #10
 710:	0608052f 	streq	r0, [r8], -pc, lsr #10
 714:	66070501 	strvs	r0, [r7], -r1, lsl #10
 718:	11052f06 	tstne	r5, r6, lsl #30
 71c:	07050106 	streq	r0, [r5, -r6, lsl #2]
 720:	014b0620 	cmpeq	fp, r0, lsr #12
 724:	05840505 	streq	r0, [r4, #1285]	; 0x505
 728:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
 72c:	2f062007 	svccs	0x00062007
 730:	01061005 	tsteq	r6, r5
 734:	06200705 	strteq	r0, [r0], -r5, lsl #14
 738:	82060159 	andhi	r0, r6, #1073741846	; 0x40000016
 73c:	16060305 	strne	r0, [r6], -r5, lsl #6
 740:	01060905 	tsteq	r6, r5, lsl #18
 744:	063c0505 	ldrteq	r0, [ip], -r5, lsl #10
 748:	0f052f2f 	svceq	0x00052f2f
 74c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
 750:	0f056706 	svceq	0x00056706
 754:	03050106 	movweq	r0, #20742	; 0x5106
 758:	09054d06 	stmdbeq	r5, {r1, r2, r8, sl, fp, lr}
 75c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
 760:	052f063c 	streq	r0, [pc, #-1596]!	; 12c <_Min_Heap_Size+0x12c>
 764:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
 768:	05830605 	streq	r0, [r3, #1541]	; 0x605
 76c:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
 770:	44054c01 	strmi	r4, [r5], #-3073	; 0xfffff3ff
 774:	0305f406 	movweq	pc, #21510	; 0x5406	; <UNPREDICTABLE>
 778:	05131313 	ldreq	r1, [r3, #-787]	; 0xfffffced
 77c:	050f0644 	streq	r0, [pc, #-1604]	; 140 <_Min_Heap_Size+0x140>
 780:	44052703 	strmi	r2, [r5], #-1795	; 0xfffff8fd
 784:	4b052e1f 	blmi	14c008 <_Min_Stack_Size+0x14bc08>
 788:	1d170558 	cfldr32ne	mvfx0, [r7, #-352]	; 0xfffffea0
 78c:	05233805 	streq	r3, [r3, #-2053]!	; 0xfffff7fb
 790:	0305470c 	movweq	r4, #22284	; 0x570c
 794:	05132206 	ldreq	r2, [r3, #-518]	; 0xfffffdfa
 798:	05010638 	streq	r0, [r1, #-1592]	; 0xfffff9c8
 79c:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
 7a0:	04020010 	streq	r0, [r2], #-16
 7a4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
 7a8:	04020003 	streq	r0, [r2], #-3
 7ac:	4d062001 	stcmi	0, cr2, [r6, #-4]
 7b0:	22051406 	andcs	r1, r5, #100663296	; 0x6000000
 7b4:	0603053a 			; <UNDEFINED> instruction: 0x0603053a
 7b8:	3c060122 	stfccs	f0, [r6], {34}	; 0x22
 7bc:	05910105 	ldreq	r0, [r1, #261]	; 0x105
 7c0:	04020005 	streq	r0, [r2], #-5
 7c4:	051b0603 	ldreq	r0, [fp, #-1539]	; 0xfffff9fd
 7c8:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
 7cc:	05010603 	streq	r0, [r1, #-1539]	; 0xfffff9fd
 7d0:	0402000a 	streq	r0, [r2], #-10
 7d4:	22054a03 	andcs	r4, r5, #12288	; 0x3000
 7d8:	7ec30306 	cdpvc	3, 12, cr0, cr3, cr6, {0}
 7dc:	1303052e 	movwne	r0, #13614	; 0x352e
 7e0:	11062205 	tstne	r6, r5, lsl #4
 7e4:	05210b05 	streq	r0, [r1, #-2821]!	; 0xfffff4fb
 7e8:	0b052024 	bleq	148880 <_Min_Stack_Size+0x148480>
 7ec:	2e240520 	cfsh64cs	mvdx0, mvdx4, #16
 7f0:	06200505 	strteq	r0, [r0], -r5, lsl #10
 7f4:	0610053d 			; <UNDEFINED> instruction: 0x0610053d
 7f8:	06030501 	streq	r0, [r3], -r1, lsl #10
 7fc:	0608055b 			; <UNDEFINED> instruction: 0x0608055b
 800:	20050501 	andcs	r0, r5, r1, lsl #10
 804:	4b060305 	blmi	181420 <_Min_Stack_Size+0x181020>
 808:	01060e05 	tsteq	r6, r5, lsl #28
 80c:	05200505 	streq	r0, [r0, #-1285]!	; 0xfffffafb
 810:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
 814:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
 818:	06210603 	strteq	r0, [r1], -r3, lsl #12
 81c:	06580613 			; <UNDEFINED> instruction: 0x06580613
 820:	053e0620 	ldreq	r0, [lr, #-1568]!	; 0xfffff9e0
 824:	05150605 	ldreq	r0, [r5, #-1541]	; 0xfffff9fb
 828:	03051d0d 	movweq	r1, #23821	; 0x5d0d
 82c:	05143d06 	ldreq	r3, [r4, #-3334]	; 0xfffff2fa
 830:	0513060d 	ldreq	r0, [r3, #-1549]	; 0xfffff9f3
 834:	05052b0b 	streq	r2, [r5, #-2827]	; 0xfffff4f5
 838:	0d053106 	stfeqs	f3, [r5, #-24]	; 0xffffffe8
 83c:	01050106 	tsteq	r5, r6, lsl #2
 840:	062e0522 	strteq	r0, [lr], -r2, lsr #10
 844:	5801b303 	stmdapl	r1, {r0, r1, r8, r9, ip, sp, pc}
 848:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
 84c:	0511062e 	ldreq	r0, [r1, #-1582]	; 0xfffff9d2
 850:	2e052116 	mcrcs	1, 0, r2, cr5, cr6, {0}
 854:	211d0557 	tstcs	sp, r7, asr r5
 858:	06030520 	streq	r0, [r3], -r0, lsr #10
 85c:	0605052f 	streq	r0, [r5], -pc, lsr #10
 860:	06030501 	streq	r0, [r3], -r1, lsl #10
 864:	4a051321 	bmi	1454f0 <_Min_Stack_Size+0x1450f0>
 868:	0f050106 	svceq	0x00050106
 86c:	2137051f 	teqcs	r7, pc, lsl r5
 870:	59060305 	stmdbpl	r6, {r0, r2, r8, r9}
 874:	06010705 	streq	r0, [r1], -r5, lsl #14
 878:	20201001 	eorcs	r1, r0, r1
 87c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
 880:	31060304 	tstcc	r6, r4, lsl #6
 884:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
 888:	01060304 	tsteq	r6, r4, lsl #6
 88c:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
 890:	052d0304 	streq	r0, [sp, #-772]!	; 0xfffffcfc
 894:	0402000c 	streq	r0, [r2], #-12
 898:	03052103 	movweq	r2, #20739	; 0x5103
 89c:	03040200 	movweq	r0, #16896	; 0x4200
 8a0:	0123062d 			; <UNDEFINED> instruction: 0x0123062d
 8a4:	d7062006 	strle	r2, [r6, -r6]
 8a8:	13060105 	movwne	r0, #24837	; 0x6105
 8ac:	03062305 	movweq	r2, #25349	; 0x6305
 8b0:	05207ecd 	streq	r7, [r0, #-3789]!	; 0xfffff133
 8b4:	05131303 	ldreq	r1, [r3, #-771]	; 0xfffffcfd
 8b8:	22100623 	andscs	r0, r0, #36700160	; 0x2300000
 8bc:	053d1605 	ldreq	r1, [sp, #-1541]!	; 0xfffff9fb
 8c0:	03053b23 	movweq	r3, #23331	; 0x5b23
 8c4:	05142f06 	ldreq	r2, [r4, #-3846]	; 0xfffff0fa
 8c8:	06010605 	streq	r0, [r1], -r5, lsl #12
 8cc:	0607053d 			; <UNDEFINED> instruction: 0x0607053d
 8d0:	2f062e01 	svccs	0x00062e01
 8d4:	13061105 	movwne	r1, #24837	; 0x6105
 8d8:	2e1f0705 	cdpcs	7, 1, cr0, cr15, cr5, {0}
 8dc:	11052f06 	tstne	r5, r6, lsl #30
 8e0:	07050106 	streq	r0, [r5, -r6, lsl #2]
 8e4:	03052106 	movweq	r2, #20742	; 0x5106
 8e8:	05010a03 	streq	r0, [r1, #-2563]	; 0xfffff5fd
 8ec:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
 8f0:	0305200b 	movweq	r2, #20491	; 0x500b
 8f4:	05053006 	streq	r3, [r5, #-6]
 8f8:	30060106 	andcc	r0, r6, r6, lsl #2
 8fc:	01060705 	tsteq	r6, r5, lsl #14
 900:	21060505 	tstcs	r6, r5, lsl #10
 904:	01060705 	tsteq	r6, r5, lsl #14
 908:	1a052106 	bne	148d28 <_Min_Stack_Size+0x148928>
 90c:	07050106 	streq	r0, [r5, -r6, lsl #2]
 910:	060b0520 	streq	r0, [fp], -r0, lsr #10
 914:	06580a03 	ldrbeq	r0, [r8], -r3, lsl #20
 918:	002c052e 	eoreq	r0, ip, lr, lsr #10
 91c:	03010402 	movweq	r0, #5122	; 0x1402
 920:	0705011d 	smladeq	r5, sp, r1, r0
 924:	3c4b0306 	mcrrcc	3, 0, r0, fp, cr6
 928:	01060905 	tsteq	r6, r5, lsl #18
 92c:	03060b05 	movweq	r0, #27397	; 0x6b05
 930:	17055810 	smladne	r5, r0, r8, r5
 934:	0b050106 	bleq	140d54 <_Min_Stack_Size+0x140954>
 938:	1e170522 	cfmul64ne	mvdx0, mvdx7, mvdx2
 93c:	21060b05 	tstcs	r6, r5, lsl #22
 940:	14051306 	strne	r1, [r5], #-774	; 0xfffffcfa
 944:	060b053b 			; <UNDEFINED> instruction: 0x060b053b
 948:	05052f2f 	streq	r2, [r5, #-3887]	; 0xfffff0d1
 94c:	05010f03 	streq	r0, [r1, #-3843]	; 0xfffff0fd
 950:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
 954:	03052007 	movweq	r2, #20487	; 0x5007
 958:	052e4e03 	streq	r4, [lr, #-3587]!	; 0xfffff1fd
 95c:	20320307 	eorscs	r0, r2, r7, lsl #6
 960:	20062505 	andcs	r2, r6, r5, lsl #10
 964:	01062a05 	tsteq	r6, r5, lsl #20
 968:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
 96c:	4a031405 	bmi	c5988 <_Min_Stack_Size+0xc5588>
 970:	13030501 	movwne	r0, #13569	; 0x3501
 974:	01060d05 	tsteq	r6, r5, lsl #26
 978:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
 97c:	01060b05 	tsteq	r6, r5, lsl #22
 980:	2f060305 	svccs	0x00060305
 984:	01052e06 	tsteq	r5, r6, lsl #28
 988:	0100c703 	tsteq	r0, r3, lsl #14
 98c:	03060b05 	movweq	r0, #27397	; 0x6b05
 990:	05052e64 	streq	r2, [r5, #-3684]	; 0xfffff19c
 994:	060b054e 	streq	r0, [fp], -lr, asr #10
 998:	05052001 	streq	r2, [r5, #-1]
 99c:	0e052106 	adfeqs	f2, f5, f6
 9a0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
 9a4:	490e0521 	stmdbmi	lr, {r0, r5, r8, sl}
 9a8:	2f060505 	svccs	0x00060505
 9ac:	06202e06 	strteq	r2, [r0], -r6, lsl #28
 9b0:	06070517 			; <UNDEFINED> instruction: 0x06070517
 9b4:	05210601 	streq	r0, [r1, #-1537]!	; 0xfffff9ff
 9b8:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
 9bc:	2f062009 	svccs	0x00062009
 9c0:	01061205 	tsteq	r6, r5, lsl #4
 9c4:	2f060905 	svccs	0x00060905
 9c8:	02002c05 	andeq	r2, r0, #1280	; 0x500
 9cc:	0c030104 	stfeqs	f0, [r3], {4}
 9d0:	030d0501 	movweq	r0, #54529	; 0xd501
 9d4:	0f054a76 	svceq	0x00054a76
 9d8:	09050106 	stmdbeq	r5, {r1, r2, r8}
 9dc:	17052f06 	strne	r2, [r5, -r6, lsl #30]
 9e0:	09050106 	stmdbeq	r5, {r1, r2, r8}
 9e4:	05052f06 	streq	r2, [r5, #-3846]	; 0xfffff0fa
 9e8:	06090524 	streq	r0, [r9], -r4, lsr #10
 9ec:	58070501 	stmdapl	r7, {r0, r8, sl}
 9f0:	05012106 	streq	r2, [r1, #-262]	; 0xfffffefa
 9f4:	0f05ae05 	svceq	0x0005ae05
 9f8:	07050106 	streq	r0, [r5, -r6, lsl #2]
 9fc:	1f0f052f 	svcne	0x000f052f
 a00:	05210705 	streq	r0, [r1, #-1797]!	; 0xfffff8fb
 a04:	05051f0f 	streq	r1, [r5, #-3855]	; 0xfffff0f1
 a08:	07052106 	streq	r2, [r5, -r6, lsl #2]
 a0c:	0e020106 	adfeqs	f0, f2, f6
 a10:	ba010100 	blt	40e18 <_Min_Stack_Size+0x40a18>
 a14:	03000002 	movweq	r0, #2
 a18:	0000f900 	andeq	pc, r0, r0, lsl #18
 a1c:	fb010200 	blx	41226 <_Min_Stack_Size+0x40e26>
 a20:	01000d0e 	tsteq	r0, lr, lsl #26
 a24:	00010101 	andeq	r0, r1, r1, lsl #2
 a28:	00010000 	andeq	r0, r1, r0
 a2c:	72730100 	rsbsvc	r0, r3, #0, 2
 a30:	752f0063 	strvc	r0, [pc, #-99]!	; 9d5 <_Min_Stack_Size+0x5d5>
 a34:	6c2f7273 	sfmvs	f7, 4, [pc], #-460	; 870 <_Min_Stack_Size+0x470>
 a38:	672f6269 	strvs	r6, [pc, -r9, ror #4]!
 a3c:	612f6363 			; <UNDEFINED> instruction: 0x612f6363
 a40:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
 a44:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
 a48:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
 a4c:	332e382f 			; <UNDEFINED> instruction: 0x332e382f
 a50:	692f312e 	stmdbvs	pc!, {r1, r2, r3, r5, r8, ip, sp}	; <UNPREDICTABLE>
 a54:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
 a58:	6c006564 	cfstr32vs	mvfx6, [r0], {100}	; 0x64
 a5c:	692f6269 	stmdbvs	pc!, {r0, r3, r5, r6, r9, sp, lr}	; <UNPREDICTABLE>
 a60:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
 a64:	2f006564 	svccs	0x00006564
 a68:	2f727375 	svccs	0x00727375
 a6c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
 a70:	2f656475 	svccs	0x00656475
 a74:	6c77656e 	cfldr64vs	mvdx6, [r7], #-440	; 0xfffffe48
 a78:	732f6269 			; <UNDEFINED> instruction: 0x732f6269
 a7c:	00007379 	andeq	r7, r0, r9, ror r3
 a80:	5f627375 	svcpl	0x00627375
 a84:	73616c63 	cmnvc	r1, #25344	; 0x6300
 a88:	69685f73 	stmdbvs	r8!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 a8c:	61786564 	cmnvs	r8, r4, ror #10
 a90:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
 a94:	0100632e 	tsteq	r0, lr, lsr #6
 a98:	74730000 	ldrbtvc	r0, [r3], #-0
 a9c:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
 aa0:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
 aa4:	73750000 	cmnvc	r5, #0
 aa8:	696c5f62 	stmdbvs	ip!, {r1, r5, r6, r8, r9, sl, fp, ip, lr}^
 aac:	00682e62 	rsbeq	r2, r8, r2, ror #28
 ab0:	63000001 	movwvs	r0, #1
 ab4:	5f65726f 	svcpl	0x0065726f
 ab8:	2e336d63 	cdpcs	13, 3, cr6, cr3, cr3, {3}
 abc:	00030068 	andeq	r0, r3, r8, rrx
 ac0:	73797300 	cmnvc	r9, #0, 6
 ac4:	5f6d6574 	svcpl	0x006d6574
 ac8:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
 acc:	78316c32 	ldmdavc	r1!, {r1, r4, r5, sl, fp, sp, lr}
 ad0:	00682e78 	rsbeq	r2, r8, r8, ror lr
 ad4:	73000003 	movwvc	r0, #3
 ad8:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
 adc:	3135316c 	teqcc	r5, ip, ror #2
 ae0:	682e6378 	stmdavs	lr!, {r3, r4, r5, r6, r8, r9, sp, lr}
 ae4:	00000300 	andeq	r0, r0, r0, lsl #6
 ae8:	64647473 	strbtvs	r7, [r4], #-1139	; 0xfffffb8d
 aec:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
 af0:	00000200 	andeq	r0, r0, r0, lsl #4
 af4:	7079745f 	rsbsvc	r7, r9, pc, asr r4
 af8:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
 afc:	00000400 	andeq	r0, r0, r0, lsl #8
 b00:	6e656572 	mcrvs	5, 3, r6, cr5, cr2, {3}
 b04:	00682e74 	rsbeq	r2, r8, r4, ror lr
 b08:	6c000004 	stcvs	0, cr0, [r0], {4}
 b0c:	2e6b636f 	cdpcs	3, 6, cr6, cr11, cr15, {3}
 b10:	00040068 	andeq	r0, r4, r8, rrx
 b14:	50050000 	andpl	r0, r5, r0
 b18:	18020500 	stmdane	r2, {r8, sl}
 b1c:	03080008 	movweq	r0, #32776	; 0x8008
 b20:	050100f5 	streq	r0, [r1, #-245]	; 0xffffff0b
 b24:	07051303 	streq	r1, [r5, -r3, lsl #6]
 b28:	0d051408 	cfstrseq	mvf1, [r5, #-32]	; 0xffffffe0
 b2c:	07050106 	streq	r0, [r5, -r6, lsl #2]
 b30:	0d052f06 	stceq	15, cr2, [r5, #-24]	; 0xffffffe8
 b34:	20050106 	andcs	r0, r5, r6, lsl #2
 b38:	05201b03 	streq	r1, [r0, #-2819]!	; 0xfffff4fd
 b3c:	05210607 	streq	r0, [r1, #-1543]!	; 0xfffff9f9
 b40:	05160601 	ldreq	r0, [r6, #-1537]	; 0xfffff9ff
 b44:	63030607 	movwvs	r0, #13831	; 0x3607
 b48:	060d0520 	streq	r0, [sp], -r0, lsr #10
 b4c:	06070501 	streq	r0, [r7], -r1, lsl #10
 b50:	060d052f 	streq	r0, [sp], -pc, lsr #10
 b54:	06070501 	streq	r0, [r7], -r1, lsl #10
 b58:	060d0531 			; <UNDEFINED> instruction: 0x060d0531
 b5c:	06070501 	streq	r0, [r7], -r1, lsl #10
 b60:	060d052f 	streq	r0, [sp], -pc, lsr #10
 b64:	06070501 	streq	r0, [r7], -r1, lsl #10
 b68:	05200631 	streq	r0, [r0, #-1585]!	; 0xfffff9cf
 b6c:	0568060b 	strbeq	r0, [r8, #-1547]!	; 0xfffff9f5
 b70:	03010611 	movweq	r0, #5649	; 0x1611
 b74:	0b052009 	bleq	148ba0 <_Min_Stack_Size+0x1487a0>
 b78:	07052106 	streq	r2, [r5, -r6, lsl #2]
 b7c:	06200516 			; <UNDEFINED> instruction: 0x06200516
 b80:	060b0501 	streq	r0, [fp], -r1, lsl #10
 b84:	053c7503 	ldreq	r7, [ip, #-1283]!	; 0xfffffafd
 b88:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
 b8c:	0531060b 	ldreq	r0, [r1, #-1547]!	; 0xfffff9f5
 b90:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
 b94:	0531060b 	ldreq	r0, [r1, #-1547]!	; 0xfffff9f5
 b98:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
 b9c:	05000647 	streq	r0, [r0, #-1607]	; 0xfffff9b9
 ba0:	00089402 	andeq	r9, r8, r2, lsl #8
 ba4:	010c0308 	tsteq	ip, r8, lsl #6
 ba8:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
 bac:	05110647 	ldreq	r0, [r1, #-1607]	; 0xfffff9b9
 bb0:	0505210a 	streq	r2, [r5, #-266]	; 0xfffffef6
 bb4:	052f0620 	streq	r0, [pc, #-1568]!	; 59c <_Min_Stack_Size+0x19c>
 bb8:	06010607 	streq	r0, [r1], -r7, lsl #12
 bbc:	0609053d 			; <UNDEFINED> instruction: 0x0609053d
 bc0:	054b0601 	strbeq	r0, [fp, #-1537]	; 0xfffff9ff
 bc4:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
 bc8:	0f052210 	svceq	0x00052210
 bcc:	0609051e 			; <UNDEFINED> instruction: 0x0609051e
 bd0:	060f0521 	streq	r0, [pc], -r1, lsr #10
 bd4:	06090501 	streq	r0, [r9], -r1, lsl #10
 bd8:	0601052f 	streq	r0, [r1], -pc, lsr #10
 bdc:	05011103 	streq	r1, [r1, #-259]	; 0xfffffefd
 be0:	73030603 	movwvc	r0, #13827	; 0x3603
 be4:	05051320 	streq	r1, [r5, #-800]	; 0xfffffce0
 be8:	2f060106 	svccs	0x00060106
 bec:	01060c05 	tsteq	r6, r5, lsl #24
 bf0:	06200705 	strteq	r0, [r0], -r5, lsl #14
 bf4:	060a0530 			; <UNDEFINED> instruction: 0x060a0530
 bf8:	3d150501 	cfldr32cc	mvfx0, [r5, #-4]
 bfc:	051f0905 	ldreq	r0, [pc, #-2309]	; 2ff <_Min_Heap_Size+0x2ff>
 c00:	05590607 	ldrbeq	r0, [r9, #-1543]	; 0xfffff9f9
 c04:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
 c08:	052f0607 	streq	r0, [pc, #-1543]!	; 609 <_Min_Stack_Size+0x209>
 c0c:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
 c10:	052f0607 	streq	r0, [pc, #-1543]!	; 611 <_Min_Stack_Size+0x211>
 c14:	1f13060d 	svcne	0x0013060d
 c18:	21060705 	tstcs	r6, r5, lsl #14
 c1c:	01060d05 	tsteq	r6, r5, lsl #26
 c20:	21060705 	tstcs	r6, r5, lsl #14
 c24:	01060e05 	tsteq	r6, r5, lsl #28
 c28:	05230a05 	streq	r0, [r3, #-2565]!	; 0xfffff5fb
 c2c:	0500064e 	streq	r0, [r0, #-1614]	; 0xfffff9b2
 c30:	0008f802 	andeq	pc, r8, r2, lsl #16
 c34:	03051508 	movweq	r1, #21768	; 0x5508
 c38:	064e0513 			; <UNDEFINED> instruction: 0x064e0513
 c3c:	21050511 	tstcs	r5, r1, lsl r5
 c40:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
 c44:	01060505 	tsteq	r6, r5, lsl #10
 c48:	2f060305 	svccs	0x00060305
 c4c:	06202e06 	strteq	r2, [r0], -r6, lsl #28
 c50:	06050530 			; <UNDEFINED> instruction: 0x06050530
 c54:	00140501 	andseq	r0, r4, r1, lsl #10
 c58:	06010402 	streq	r0, [r1], -r2, lsl #8
 c5c:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
 c60:	27050101 	strcs	r0, [r5, -r1, lsl #2]
 c64:	02040200 	andeq	r0, r4, #0, 4
 c68:	03052e06 	movweq	r2, #24070	; 0x5e06
 c6c:	02040200 	andeq	r0, r4, #0, 4
 c70:	05052106 	streq	r2, [r5, #-262]	; 0xfffffefa
 c74:	02040200 	andeq	r0, r4, #0, 4
 c78:	14050106 	strne	r0, [r5], #-262	; 0xfffffefa
 c7c:	01040200 	mrseq	r0, R12_usr
 c80:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
 c84:	05010104 	streq	r0, [r1, #-260]	; 0xfffffefc
 c88:	04020027 	streq	r0, [r2], #-39	; 0xffffffd9
 c8c:	052e0602 	streq	r0, [lr, #-1538]!	; 0xfffff9fe
 c90:	207a031a 	rsbscs	r0, sl, sl, lsl r3
 c94:	09030105 	stmdbeq	r3, {r0, r2, r8}
 c98:	00270520 	eoreq	r0, r7, r0, lsr #10
 c9c:	06020402 	streq	r0, [r2], -r2, lsl #8
 ca0:	0402001c 	streq	r0, [r2], #-28	; 0xffffffe4
 ca4:	02000102 	andeq	r0, r0, #-2147483648	; 0x80000000
 ca8:	003d0204 	eorseq	r0, sp, r4, lsl #4
 cac:	01020402 	tsteq	r2, r2, lsl #8
 cb0:	38062905 	stmdacc	r6, {r0, r2, r8, fp, sp}
 cb4:	061c0520 	ldreq	r0, [ip], -r0, lsr #10
 cb8:	3c020500 	cfstr32cc	mvfx0, [r2], {-0}
 cbc:	03080009 	movweq	r0, #32777	; 0x8009
 cc0:	03050109 	movweq	r0, #20745	; 0x5109
 cc4:	014b0113 	cmpeq	fp, r3, lsl r1
 cc8:	3d060105 	stfccs	f0, [r6, #-20]	; 0xffffffec
 ccc:	01000302 	tsteq	r0, r2, lsl #6
 cd0:	00011001 	andeq	r1, r1, r1
 cd4:	7b000300 	blvc	18dc <_Min_Stack_Size+0x14dc>
 cd8:	02000000 	andeq	r0, r0, #0
 cdc:	0d0efb01 	vstreq	d15, [lr, #-4]
 ce0:	01010100 	mrseq	r0, (UNDEF: 17)
 ce4:	00000001 	andeq	r0, r0, r1
 ce8:	01000001 	tsteq	r0, r1
 cec:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
 cf0:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
 cf4:	2f2e2e2f 	svccs	0x002e2e2f
 cf8:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
 cfc:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
 d00:	2f2e2e2f 	svccs	0x002e2e2f
 d04:	6c77656e 	cfldr64vs	mvdx6, [r7], #-440	; 0xfffffe48
 d08:	6c2f6269 	sfmvs	f6, 4, [pc], #-420	; b6c <_Min_Stack_Size+0x76c>
 d0c:	2f636269 	svccs	0x00636269
 d10:	6373696d 	cmnvs	r3, #1785856	; 0x1b4000
 d14:	73752f00 	cmnvc	r5, #0, 30
 d18:	696c2f72 	stmdbvs	ip!, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
 d1c:	63672f62 	cmnvs	r7, #392	; 0x188
 d20:	72612f63 	rsbvc	r2, r1, #396	; 0x18c
 d24:	6f6e2d6d 	svcvs	0x006e2d6d
 d28:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
 d2c:	2f696261 	svccs	0x00696261
 d30:	2e332e38 	mrccs	14, 1, r2, cr3, cr8, {1}
 d34:	6e692f31 	mcrvs	15, 3, r2, cr9, cr1, {1}
 d38:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
 d3c:	69000065 	stmdbvs	r0, {r0, r2, r5, r6}
 d40:	2e74696e 	vsubcs.f16	s13, s8, s29	; <UNPREDICTABLE>
 d44:	00010063 	andeq	r0, r1, r3, rrx
 d48:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
 d4c:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
 d50:	00020068 	andeq	r0, r2, r8, rrx
 d54:	01050000 	mrseq	r0, (UNDEF: 5)
 d58:	50020500 	andpl	r0, r2, r0, lsl #10
 d5c:	03080009 	movweq	r0, #32777	; 0x8009
 d60:	0305011e 	movweq	r0, #20766	; 0x511e
 d64:	05141313 	ldreq	r1, [r4, #-787]	; 0xfffffced
 d68:	050e0601 	streq	r0, [lr, #-1537]	; 0xfffff9ff
 d6c:	0305241f 	movweq	r2, #21535	; 0x541f
 d70:	01063d06 	tsteq	r6, r6, lsl #26
 d74:	200a0520 	andcs	r0, sl, r0, lsr #10
 d78:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
 d7c:	21060304 	tstcs	r6, r4, lsl #6
 d80:	02001b05 	andeq	r1, r0, #5120	; 0x1400
 d84:	11060304 	tstne	r6, r4, lsl #6
 d88:	02001a05 	andeq	r1, r0, #20480	; 0x5000
 d8c:	05210304 	streq	r0, [r1, #-772]!	; 0xfffffcfc
 d90:	04020005 	streq	r0, [r2], #-5
 d94:	03052e03 	movweq	r2, #24067	; 0x5e03
 d98:	03040200 	movweq	r0, #16896	; 0x4200
 d9c:	0532061f 	ldreq	r0, [r2, #-1567]!	; 0xfffff9e1
 da0:	2015061c 	andscs	r0, r5, ip, lsl r6
 da4:	061d0305 	ldreq	r0, [sp], -r5, lsl #6
 da8:	061c0531 			; <UNDEFINED> instruction: 0x061c0531
 dac:	06030501 	streq	r0, [r3], -r1, lsl #10
 db0:	20010621 	andcs	r0, r1, r1, lsr #12
 db4:	05200a05 	streq	r0, [r0, #-2565]!	; 0xfffff5fb
 db8:	04020005 	streq	r0, [r2], #-5
 dbc:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
 dc0:	0402001b 	streq	r0, [r2], #-27	; 0xffffffe5
 dc4:	05110603 	ldreq	r0, [r1, #-1539]	; 0xfffff9fd
 dc8:	04020017 	streq	r0, [r2], #-23	; 0xffffffe9
 dcc:	05052103 	streq	r2, [r5, #-259]	; 0xfffffefd
 dd0:	03040200 	movweq	r0, #16896	; 0x4200
 dd4:	0003052e 	andeq	r0, r3, lr, lsr #10
 dd8:	1f030402 	svcne	0x00030402
 ddc:	20300105 	eorscs	r0, r0, r5, lsl #2
 de0:	01000802 	tsteq	r0, r2, lsl #16
 de4:	Address 0x0000000000000de4 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
       0:	494c4143 	stmdbmi	ip, {r0, r1, r6, r8, lr}^
       4:	50005242 	andpl	r5, r0, r2, asr #4
       8:	52445055 	subpl	r5, r4, #85	; 0x55
       c:	4b434c00 	blmi	10d3014 <_Min_Stack_Size+0x10d2c14>
      10:	72730052 	rsbsvc	r0, r3, #82	; 0x52
      14:	616d2f63 	cmnvs	sp, r3, ror #30
      18:	632e6e69 			; <UNDEFINED> instruction: 0x632e6e69
      1c:	44535400 	ldrbmi	r5, [r3], #-1024	; 0xfffffc00
      20:	4b420052 	blmi	1080170 <_Min_Stack_Size+0x107fd70>
      24:	52363250 	eorspl	r3, r6, #80, 4
      28:	59544f00 	ldmdbpl	r4, {r8, r9, sl, fp, lr}^
      2c:	00524550 	subseq	r4, r2, r0, asr r5
      30:	33504b42 	cmpcc	r0, #67584	; 0x10800
      34:	42005230 	andmi	r5, r0, #48, 4
      38:	5233504b 	eorspl	r5, r3, #75	; 0x4b
      3c:	45525000 	ldrbmi	r5, [r2, #-0]
      40:	4f4d0052 	svcmi	0x004d0052
      44:	00524544 	subseq	r4, r2, r4, asr #10
      48:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
      4c:	6e6f6c20 	cdpvs	12, 6, cr6, cr15, cr0, {1}
      50:	6e752067 	cdpvs	0, 7, cr2, cr5, cr7, {3}
      54:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
      58:	69206465 	stmdbvs	r0!, {r0, r2, r5, r6, sl, sp, lr}
      5c:	5000746e 	andpl	r7, r0, lr, ror #8
      60:	454b4752 	strbmi	r4, [fp, #-1874]	; 0xfffff8ae
      64:	52005259 	andpl	r5, r0, #-1879048187	; 0x90000005
      68:	545f4354 	ldrbpl	r4, [pc], #-852	; 70 <_Min_Heap_Size+0x70>
      6c:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
      70:	55006665 	strpl	r6, [r0, #-1637]	; 0xfffff99b
      74:	735f4253 	cmpvc	pc, #805306373	; 0x30000005
      78:	70757465 	rsbsvc	r7, r5, r5, ror #8
      7c:	6e6f6c00 	cdpvs	12, 6, cr6, cr15, cr0, {0}
      80:	6f6c2067 	svcvs	0x006c2067
      84:	6920676e 	stmdbvs	r0!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
      88:	4200746e 	andmi	r7, r0, #1845493760	; 0x6e000000
      8c:	00525253 	subseq	r5, r2, r3, asr r2
      90:	53414c46 	movtpl	r4, #7238	; 0x1c46
      94:	79545f48 	ldmdbvc	r4, {r3, r6, r8, r9, sl, fp, ip, lr}^
      98:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
      9c:	45500066 	ldrbmi	r0, [r0, #-102]	; 0xffffff9a
      a0:	63005243 	movwvs	r5, #579	; 0x243
      a4:	6b636f6c 	blvs	18dbe5c <_Min_Stack_Size+0x18dba5c>
      a8:	0053485f 	subseq	r4, r3, pc, asr r8
      ac:	32504b42 	subscc	r4, r0, #67584	; 0x10800
      b0:	54005237 	strpl	r5, [r0], #-567	; 0xfffffdc9
      b4:	52535353 	subspl	r5, r3, #1275068417	; 0x4c000001
      b8:	504b4200 	subpl	r4, fp, r0, lsl #4
      bc:	00523133 	subseq	r3, r2, r3, lsr r1
      c0:	32425041 	subcc	r5, r2, #65	; 0x41
      c4:	52545352 	subspl	r5, r4, #1207959553	; 0x48000001
      c8:	504b4200 	subpl	r4, fp, r0, lsl #4
      cc:	41005234 	tstmi	r0, r4, lsr r2
      d0:	424d524c 	submi	r5, sp, #76, 4	; 0xc0000004
      d4:	00525353 	subseq	r5, r2, r3, asr r3
      d8:	4c424841 	mcrrmi	8, 4, r4, r2, cr1
      dc:	524e4550 	subpl	r4, lr, #80, 10	; 0x14000000
      e0:	504b4200 	subpl	r4, fp, r0, lsl #4
      e4:	00523631 	subseq	r3, r2, r1, lsr r6
      e8:	4b54504f 	blmi	151422c <_Min_Stack_Size+0x1513e2c>
      ec:	00525945 	subseq	r5, r2, r5, asr #18
      f0:	5f627375 	svcpl	0x00627375
      f4:	73616c63 	cmnvc	r1, #25344	; 0x6300
      f8:	6f705f73 	svcvs	0x00705f73
      fc:	75006c6c 	strvc	r6, [r0, #-3180]	; 0xfffff394
     100:	31746e69 	cmncc	r4, r9, ror #28
     104:	00745f36 	rsbseq	r5, r4, r6, lsr pc
     108:	32504b42 	subscc	r4, r0, #67584	; 0x10800
     10c:	50005230 	andpl	r5, r0, r0, lsr r2
     110:	59454b44 	stmdbpl	r5, {r2, r6, r8, r9, fp, lr}^
     114:	534f0052 	movtpl	r0, #61522	; 0xf052
     118:	44454550 	strbmi	r4, [r5], #-1360	; 0xfffffab0
     11c:	6e690052 	mcrvs	0, 3, r0, cr9, cr2, {2}
     120:	32337469 	eorscc	r7, r3, #1761607680	; 0x69000000
     124:	504b4200 	subpl	r4, fp, r0, lsl #4
     128:	00523832 	subseq	r3, r2, r2, lsr r8
     12c:	706d6574 	rsbvc	r6, sp, r4, ror r5
     130:	524c4100 	subpl	r4, ip, #0, 2
     134:	5353414d 	cmppl	r3, #1073741843	; 0x40000013
     138:	79530052 	ldmdbvc	r3, {r1, r4, r6}^
     13c:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
     140:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
     144:	636f6c43 	cmnvs	pc, #17152	; 0x4300
     148:	4b42006b 	blmi	10802fc <_Min_Stack_Size+0x107fefc>
     14c:	00523550 	subseq	r3, r2, r0, asr r5
     150:	31504b42 	cmpcc	r0, r2, asr #22
     154:	47005237 	smladxmi	r0, r7, r2, r5
     158:	5f4f4950 	svcpl	0x004f4950
     15c:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     160:	00666544 	rsbeq	r6, r6, r4, asr #10
     164:	5f434352 	svcpl	0x00434352
     168:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     16c:	00666544 	rsbeq	r6, r6, r4, asr #10
     170:	31504b42 	cmpcc	r0, r2, asr #22
     174:	42005235 	andmi	r5, r0, #1342177283	; 0x50000003
     178:	3132504b 	teqcc	r2, fp, asr #32
     17c:	68730052 	ldmdavs	r3!, {r1, r4, r6}^
     180:	2074726f 	rsbscs	r7, r4, pc, ror #4
     184:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
     188:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
     18c:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
     190:	656c7300 	strbvs	r7, [ip, #-768]!	; 0xfffffd00
     194:	41007065 	tstmi	r0, r5, rrx
     198:	4c314250 	lfmmi	f4, 4, [r1], #-320	; 0xfffffec0
     19c:	524e4550 	subpl	r4, lr, #80, 10	; 0x14000000
     1a0:	54535400 	ldrbpl	r5, [r3], #-1024	; 0xfffffc00
     1a4:	41540052 	cmpmi	r4, r2, asr r0
     1a8:	00524346 	subseq	r4, r2, r6, asr #6
     1ac:	31504b42 	cmpcc	r0, r2, asr #22
     1b0:	42005230 	andmi	r5, r0, #48, 4
     1b4:	3932504b 	ldmdbcc	r2!, {r0, r1, r3, r6, ip, lr}
     1b8:	50410052 	subpl	r0, r1, r2, asr r0
     1bc:	504c3242 	subpl	r3, ip, r2, asr #4
     1c0:	00524e45 	subseq	r4, r2, r5, asr #28
     1c4:	5f525750 	svcpl	0x00525750
     1c8:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     1cc:	00666544 	rsbeq	r6, r6, r4, asr #10
     1d0:	36504b42 	ldrbcc	r4, [r0], -r2, asr #22
     1d4:	4b420052 	blmi	1080324 <_Min_Stack_Size+0x107ff24>
     1d8:	52383150 	eorspl	r3, r8, #80, 2
     1dc:	4c414300 	mcrrmi	3, 0, r4, r1, cr0
     1e0:	75710052 	ldrbvc	r0, [r1, #-82]!	; 0xffffffae
     1e4:	7a747261 	bvc	1d1cb70 <_Min_Stack_Size+0x1d1c770>
     1e8:	504b4200 	subpl	r4, fp, r0, lsl #4
     1ec:	00523232 	subseq	r3, r2, r2, lsr r2
     1f0:	52505257 	subspl	r5, r0, #1879048197	; 0x70000005
     1f4:	52570031 	subspl	r0, r7, #49	; 0x31
     1f8:	00325250 	eorseq	r5, r2, r0, asr r2
     1fc:	31504b42 	cmpcc	r0, r2, asr #22
     200:	41005231 	tstmi	r0, r1, lsr r2
     204:	53524248 	cmppl	r2, #72, 4	; 0x80000004
     208:	74005254 	strvc	r5, [r0], #-596	; 0xfffffdac
     20c:	00656d69 	rsbeq	r6, r5, r9, ror #26
     210:	31425041 	cmpcc	r2, r1, asr #32
     214:	52545352 	subspl	r5, r4, #1207959553	; 0x48000001
     218:	655f5f00 	ldrbvs	r5, [pc, #-3840]	; fffff320 <BootRAM+0xef6fac1>
     21c:	6c62616e 	stfvse	f6, [r2], #-440	; 0xfffffe48
     220:	72695f65 	rsbvc	r5, r9, #404	; 0x194
     224:	4c410071 	mcrrmi	0, 7, r0, r1, cr1
     228:	52414d52 	subpl	r4, r1, #5248	; 0x1480
     22c:	504b4200 	subpl	r4, fp, r0, lsl #4
     230:	42005237 	andmi	r5, r0, #1879048195	; 0x70000003
     234:	3931504b 	ldmdbcc	r1!, {r0, r1, r3, r6, ip, lr}
     238:	45520052 	ldrbmi	r0, [r2, #-82]	; 0xffffffae
     23c:	56524553 			; <UNDEFINED> instruction: 0x56524553
     240:	00374445 	eorseq	r4, r7, r5, asr #8
     244:	74737953 	ldrbtvc	r7, [r3], #-2387	; 0xfffff6ad
     248:	6e496d65 	cdpvs	13, 4, cr6, cr9, cr5, {3}
     24c:	42007469 	andmi	r7, r0, #1761607680	; 0x69000000
     250:	3332504b 	teqcc	r2, #75	; 0x4b
     254:	6e750052 	mrcvs	0, 3, r0, cr5, cr2, {2}
     258:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
     25c:	63206465 			; <UNDEFINED> instruction: 0x63206465
     260:	00726168 	rsbseq	r6, r2, r8, ror #2
     264:	5f4d5449 	svcpl	0x004d5449
     268:	75427852 	strbvc	r7, [r2, #-2130]	; 0xfffff7ae
     26c:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
     270:	6f687300 	svcvs	0x00687300
     274:	69207472 	stmdbvs	r0!, {r1, r4, r5, r6, sl, ip, sp, lr}
     278:	4200746e 	andmi	r7, r0, #1845493760	; 0x6e000000
     27c:	5230504b 	eorspl	r5, r0, #75	; 0x4b
     280:	53455200 	movtpl	r5, #20992	; 0x5200
     284:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     288:	4b420044 	blmi	10803a0 <_Min_Stack_Size+0x107ffa0>
     28c:	52323150 	eorspl	r3, r2, #80, 2
     290:	42504100 	subsmi	r4, r0, #0, 2
     294:	524e4532 	subpl	r4, lr, #209715200	; 0xc800000
     298:	524c4100 	subpl	r4, ip, #0, 2
     29c:	0052424d 	subseq	r4, r2, sp, asr #4
     2a0:	52474643 	subpl	r4, r7, #70254592	; 0x4300000
     2a4:	504b4200 	subpl	r4, fp, r0, lsl #4
     2a8:	75005238 	strvc	r5, [r0, #-568]	; 0xfffffdc8
     2ac:	33746e69 	cmncc	r4, #1680	; 0x690
     2b0:	00745f32 	rsbseq	r5, r4, r2, lsr pc
     2b4:	52545557 	subspl	r5, r4, #364904448	; 0x15c00000
     2b8:	504b4200 	subpl	r4, fp, r0, lsl #4
     2bc:	00523432 	subseq	r3, r2, r2, lsr r4
     2c0:	31504b42 	cmpcc	r0, r2, asr #22
     2c4:	50410052 	subpl	r0, r1, r2, asr r0
     2c8:	4e453142 	dvfmism	f3, f5, f2
     2cc:	4b420052 	blmi	108041c <_Min_Stack_Size+0x108001c>
     2d0:	52333150 	eorspl	r3, r3, #80, 2
     2d4:	6f6c6300 	svcvs	0x006c6300
     2d8:	4d5f6b63 	vldrmi	d22, [pc, #-396]	; 154 <_Min_Heap_Size+0x154>
     2dc:	48530053 	ldmdami	r3, {r0, r1, r4, r6}^
     2e0:	52544649 	subspl	r4, r4, #76546048	; 0x4900000
     2e4:	53434900 	movtpl	r4, #14592	; 0x3900
     2e8:	42005243 	andmi	r5, r0, #805306372	; 0x30000004
     2ec:	5239504b 	eorspl	r5, r9, #75	; 0x4b
     2f0:	6e697500 	cdpvs	5, 6, cr7, cr9, cr0, {0}
     2f4:	745f3874 	ldrbvc	r3, [pc], #-2164	; 2fc <_Min_Heap_Size+0x2fc>
     2f8:	4b455000 	blmi	1154300 <_Min_Stack_Size+0x1153f00>
     2fc:	00525945 	subseq	r5, r2, r5, asr #18
     300:	32504b42 	subscc	r4, r0, #67584	; 0x10800
     304:	42005235 	andmi	r5, r0, #1342177283	; 0x50000003
     308:	5232504b 	eorspl	r5, r2, #75	; 0x4b
     30c:	69657200 	stmdbvs	r5!, {r9, ip, sp, lr}^
     310:	0074696e 	rsbseq	r6, r4, lr, ror #18
     314:	31504b42 	cmpcc	r0, r2, asr #22
     318:	6d005234 	sfmvs	f5, 4, [r0, #-208]	; 0xffffff30
     31c:	006e6961 	rsbeq	r6, lr, r1, ror #18
     320:	20554e47 	subscs	r4, r5, r7, asr #28
     324:	20373143 	eorscs	r3, r7, r3, asr #2
     328:	2e332e38 	mrccs	14, 1, r2, cr3, cr8, {1}
     32c:	30322031 	eorscc	r2, r2, r1, lsr r0
     330:	37303931 			; <UNDEFINED> instruction: 0x37303931
     334:	28203330 	stmdacs	r0!, {r4, r5, r8, r9, ip, sp}
     338:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
     33c:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
     340:	63675b20 	cmnvs	r7, #32, 22	; 0x8000
     344:	2d382d63 	ldccs	13, cr2, [r8, #-396]!	; 0xfffffe74
     348:	6e617262 	cdpvs	2, 6, cr7, cr1, cr2, {3}
     34c:	72206863 	eorvc	r6, r0, #6488064	; 0x630000
     350:	73697665 	cmnvc	r9, #105906176	; 0x6500000
     354:	206e6f69 	rsbcs	r6, lr, r9, ror #30
     358:	30333732 	eorscc	r3, r3, r2, lsr r7
     35c:	205d3732 	subscs	r3, sp, r2, lsr r7
     360:	68746d2d 	ldmdavs	r4!, {r0, r2, r3, r5, r8, sl, fp, sp, lr}^
     364:	20626d75 	rsbcs	r6, r2, r5, ror sp
     368:	70636d2d 	rsbvc	r6, r3, sp, lsr #26
     36c:	6f633d75 	svcvs	0x00633d75
     370:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
     374:	20336d2d 	eorscs	r6, r3, sp, lsr #26
     378:	6c666d2d 	stclvs	13, cr6, [r6], #-180	; 0xffffff4c
     37c:	2d74616f 	ldfcse	f6, [r4, #-444]!	; 0xfffffe44
     380:	3d696261 	sfmcc	f6, 2, [r9, #-388]!	; 0xfffffe7c
     384:	74666f73 	strbtvc	r6, [r6], #-3955	; 0xfffff08d
     388:	616d2d20 	cmnvs	sp, r0, lsr #26
     38c:	3d686372 	stclcc	3, cr6, [r8, #-456]!	; 0xfffffe38
     390:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
     394:	206d2d37 	rsbcs	r2, sp, r7, lsr sp
     398:	7764672d 	strbvc	r6, [r4, -sp, lsr #14]!
     39c:	2d667261 	sfmcs	f7, 2, [r6, #-388]!	; 0xfffffe7c
     3a0:	4f2d2032 	svcmi	0x002d2032
     3a4:	662d2073 			; <UNDEFINED> instruction: 0x662d2073
     3a8:	622d6f6e 	eorvs	r6, sp, #440	; 0x1b8
     3ac:	746c6975 	strbtvc	r6, [ip], #-2421	; 0xfffff68b
     3b0:	2f006e69 	svccs	0x00006e69
     3b4:	6964656d 	stmdbvs	r4!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}^
     3b8:	78652f61 	stmdavc	r5!, {r0, r5, r6, r8, r9, sl, fp, sp}^
     3bc:	65642f74 	strbvs	r2, [r4, #-3956]!	; 0xfffff08c
     3c0:	72702f76 	rsbsvc	r2, r0, #472	; 0x1d8
     3c4:	612f676f 			; <UNDEFINED> instruction: 0x612f676f
     3c8:	752f6d72 	strvc	r6, [pc, #-3442]!	; fffff65e <BootRAM+0xef6fdff>
     3cc:	312f6273 			; <UNDEFINED> instruction: 0x312f6273
     3d0:	726f432e 	rsbvc	r4, pc, #-1207959552	; 0xb8000000
     3d4:	314c5f65 	cmpcc	ip, r5, ror #30
     3d8:	42484100 	submi	r4, r8, #0, 2
     3dc:	00524e45 	subseq	r4, r2, r5, asr #28
     3e0:	314d4954 	cmpcc	sp, r4, asr r9
     3e4:	52495f31 	subpl	r5, r9, #49, 30	; 0xc4
     3e8:	77006e51 	smlsdvc	r0, r1, lr, r6
     3ec:	65646e49 	strbvs	r6, [r4, #-3657]!	; 0xfffff1b7
     3f0:	59530078 	ldmdbpl	r3, {r3, r4, r5, r6}^
     3f4:	47464353 	smlsldmi	r4, r6, r3, r3
     3f8:	7079545f 	rsbsvc	r5, r9, pc, asr r4
     3fc:	66654465 	strbtvs	r4, [r5], -r5, ror #8
     400:	66756200 	ldrbtvs	r6, [r5], -r0, lsl #4
     404:	54003631 	strpl	r3, [r0], #-1585	; 0xfffff9cf
     408:	5f394d49 	svcpl	0x00394d49
     40c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     410:	414d4400 	cmpmi	sp, r0, lsl #8
     414:	68435f31 	stmdavs	r3, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
     418:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xfffff19f
     41c:	495f376c 	ldmdbmi	pc, {r2, r3, r5, r6, r8, r9, sl, ip, sp}^	; <UNPREDICTABLE>
     420:	006e5152 	rsbeq	r5, lr, r2, asr r1
     424:	32433249 	subcc	r3, r3, #-1879048188	; 0x90000004
     428:	5f52455f 	svcpl	0x0052455f
     42c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     430:	43565300 	cmpmi	r6, #0, 6
     434:	5152495f 	cmppl	r2, pc, asr r9
     438:	4954006e 	ldmdbmi	r4, {r1, r2, r3, r5, r6}^
     43c:	495f344d 	ldmdbmi	pc, {r0, r2, r3, r6, sl, ip, sp}^	; <UNPREDICTABLE>
     440:	006e5152 	rsbeq	r5, lr, r2, asr r1
     444:	31414d44 	cmpcc	r1, r4, asr #26
     448:	6168435f 	cmnvs	r8, pc, asr r3
     44c:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
     450:	52495f32 	subpl	r5, r9, #50, 30	; 0xc8
     454:	62006e51 	andvs	r6, r0, #1296	; 0x510
     458:	7165526d 	cmnvc	r5, sp, ror #4
     45c:	74736575 	ldrbtvc	r6, [r3], #-1397	; 0xfffffa8b
     460:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     464:	74657300 	strbtvc	r7, [r5], #-768	; 0xfffffd00
     468:	705f7075 	subsvc	r7, pc, r5, ror r0	; <UNPREDICTABLE>
     46c:	656b6361 	strbvs	r6, [fp, #-865]!	; 0xfffffc9f
     470:	4c460074 	mcrrmi	0, 7, r0, r6, cr4
     474:	5f485341 	svcpl	0x00485341
     478:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     47c:	74796200 	ldrbtvc	r6, [r9], #-512	; 0xfffffe00
     480:	65727365 	ldrbvs	r7, [r2, #-869]!	; 0xfffffc9b
     484:	45006461 	strmi	r6, [r0, #-1121]	; 0xfffffb9f
     488:	30495458 	subcc	r5, r9, r8, asr r4
     48c:	5152495f 	cmppl	r2, pc, asr r9
     490:	5845006e 	stmdapl	r5, {r1, r2, r3, r5, r6}^
     494:	35314954 	ldrcc	r4, [r1, #-2388]!	; 0xfffff6ac
     498:	5f30315f 	svcpl	0x0030315f
     49c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     4a0:	62737500 	rsbsvs	r7, r3, #0, 10
     4a4:	5f70655f 	svcpl	0x0070655f
     4a8:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
     4ac:	616c0065 	cmnvs	ip, r5, rrx
     4b0:	64617473 	strbtvs	r7, [r1], #-1139	; 0xfffffb8d
     4b4:	50007264 	andpl	r7, r0, r4, ror #4
     4b8:	53646e65 	cmnpl	r4, #1616	; 0x650
     4bc:	52495f56 	subpl	r5, r9, #344	; 0x158
     4c0:	4d006e51 	stcmi	14, cr6, [r0, #-324]	; 0xfffffebc
     4c4:	4d524d45 	ldclmi	13, cr4, [r2, #-276]	; 0xfffffeec
     4c8:	43520050 	cmpmi	r2, #80	; 0x50
     4cc:	52495f43 	subpl	r5, r9, #268	; 0x10c
     4d0:	77006e51 	smlsdvc	r0, r1, lr, r6
     4d4:	756c6156 	strbvc	r6, [ip, #-342]!	; 0xfffffeaa
     4d8:	654d0065 	strbvs	r0, [sp, #-101]	; 0xffffff9b
     4dc:	79726f6d 	ldmdbvc	r2!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
     4e0:	616e614d 	cmnvs	lr, sp, asr #2
     4e4:	656d6567 	strbvs	r6, [sp, #-1383]!	; 0xfffffa99
     4e8:	495f746e 	ldmdbmi	pc, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
     4ec:	006e5152 	rsbeq	r5, lr, r2, asr r1
     4f0:	5f307065 	svcpl	0x00307065
     4f4:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
     4f8:	53490074 	movtpl	r0, #36980	; 0x9074
     4fc:	54005254 	strpl	r5, [r0], #-596	; 0xfffffdac
     500:	45504d41 	ldrbmi	r4, [r0, #-3393]	; 0xfffff2bf
     504:	54535f52 	ldrbpl	r5, [r3], #-3922	; 0xfffff0ae
     508:	5f504d41 	svcpl	0x00504d41
     50c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     510:	45534900 	ldrbmi	r4, [r3, #-2304]	; 0xfffff700
     514:	4d440052 	stclmi	0, cr0, [r4, #-328]	; 0xfffffeb8
     518:	435f3241 	cmpmi	pc, #268435460	; 0x10000004
     51c:	6e6e6168 	powvsez	f6, f6, #0.0
     520:	5f346c65 	svcpl	0x00346c65
     524:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     528:	45535200 	ldrbmi	r5, [r3, #-512]	; 0xfffffe00
     52c:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     530:	50530031 	subspl	r0, r3, r1, lsr r0
     534:	495f3149 	ldmdbmi	pc, {r0, r3, r6, r8, ip, sp}^	; <UNPREDICTABLE>
     538:	006e5152 	rsbeq	r5, lr, r2, asr r1
     53c:	364d4954 			; <UNDEFINED> instruction: 0x364d4954
     540:	5152495f 	cmppl	r2, pc, asr r9
     544:	4d44006e 	stclmi	0, cr0, [r4, #-440]	; 0xfffffe48
     548:	435f3141 	cmpmi	pc, #1073741840	; 0x40000010
     54c:	6e6e6168 	powvsez	f6, f6, #0.0
     550:	5f346c65 	svcpl	0x00346c65
     554:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     558:	49564e00 	ldmdbmi	r6, {r9, sl, fp, lr}^
     55c:	6e455f43 	cdpvs	15, 4, cr5, cr5, cr3, {2}
     560:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
     564:	00515249 	subseq	r5, r1, r9, asr #4
     568:	504d4f43 	subpl	r4, sp, r3, asr #30
     56c:	5152495f 	cmppl	r2, pc, asr r9
     570:	5355006e 	cmppl	r5, #110	; 0x6e
     574:	79545f42 	ldmdbvc	r4, {r1, r6, r8, r9, sl, fp, ip, lr}^
     578:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
     57c:	41440066 	cmpmi	r4, r6, rrx
     580:	00524444 	subseq	r4, r2, r4, asr #8
     584:	5f425355 	svcpl	0x00425355
     588:	495f504c 	ldmdbmi	pc, {r2, r3, r6, ip, lr}^	; <UNPREDICTABLE>
     58c:	61485152 	cmpvs	r8, r2, asr r1
     590:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     594:	73750072 	cmnvc	r5, #114	; 0x72
     598:	6c635f62 	stclvs	15, cr5, [r3], #-392	; 0xfffffe78
     59c:	5f737361 	svcpl	0x00737361
     5a0:	5f746567 	svcpl	0x00746567
     5a4:	5f647473 	svcpl	0x00647473
     5a8:	63736564 	cmnvs	r3, #100, 10	; 0x19000000
     5ac:	52490072 	subpl	r0, r9, #114	; 0x72
     5b0:	545f6e51 	ldrbpl	r6, [pc], #-3665	; 5b8 <_Min_Stack_Size+0x1b8>
     5b4:	00657079 	rsbeq	r7, r5, r9, ror r0
     5b8:	5f307065 	svcpl	0x00307065
     5bc:	646e6573 	strbtvs	r6, [lr], #-1395	; 0xfffffa8d
     5c0:	41535500 	cmpmi	r3, r0, lsl #10
     5c4:	5f325452 	svcpl	0x00325452
     5c8:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     5cc:	6e6f6300 	cdpvs	3, 6, cr6, cr15, cr0, {0}
     5d0:	75676966 	strbvc	r6, [r7, #-2406]!	; 0xfffff69a
     5d4:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
     5d8:	45006e6f 	strmi	r6, [r0, #-3695]	; 0xfffff191
     5dc:	00523050 	subseq	r3, r2, r0, asr r0
     5e0:	5f435452 	svcpl	0x00435452
     5e4:	50554b57 	subspl	r4, r5, r7, asr fp
     5e8:	5152495f 	cmppl	r2, pc, asr r9
     5ec:	5355006e 	cmppl	r5, #110	; 0x6e
     5f0:	64415f42 	strbvs	r5, [r1], #-3906	; 0xfffff0be
     5f4:	65007264 	strvs	r7, [r0, #-612]	; 0xfffffd9c
     5f8:	6e756670 	mrcvs	6, 3, r6, cr5, cr0, {3}
     5fc:	756f5f63 	strbvc	r5, [pc, #-3939]!	; fffff6a1 <BootRAM+0xef6fe42>
     600:	70650074 	rsbvc	r0, r5, r4, ror r0
     604:	75625f30 	strbvc	r5, [r2, #-3888]!	; 0xfffff0d0
     608:	58450066 	stmdapl	r5, {r1, r2, r5, r6}^
     60c:	5f324954 	svcpl	0x00324954
     610:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     614:	43444100 	movtmi	r4, #16640	; 0x4100
     618:	52495f31 	subpl	r5, r9, #49, 30	; 0xc4
     61c:	49006e51 	stmdbmi	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
     620:	5f324332 	svcpl	0x00324332
     624:	495f5645 	ldmdbmi	pc, {r0, r2, r6, r9, sl, ip, lr}^	; <UNPREDICTABLE>
     628:	006e5152 	rsbeq	r5, lr, r2, asr r1
     62c:	52315045 	eorspl	r5, r1, #69	; 0x45
     630:	49505300 	ldmdbmi	r0, {r8, r9, ip, lr}^
     634:	52495f33 	subpl	r5, r9, #51, 30	; 0xcc
     638:	75006e51 	strvc	r6, [r0, #-3665]	; 0xfffff1af
     63c:	655f6273 	ldrbvs	r6, [pc, #-627]	; 3d1 <_Min_Heap_Size+0x3d1>
     640:	74616470 	strbtvc	r6, [r1], #-1136	; 0xfffffb90
     644:	00745f61 	rsbseq	r5, r4, r1, ror #30
     648:	504d4f43 	subpl	r4, sp, r3, asr #30
     64c:	5143415f 	cmppl	r3, pc, asr r1
     650:	5152495f 	cmppl	r2, pc, asr r9
     654:	4d44006e 	stclmi	0, cr0, [r4, #-440]	; 0xfffffe48
     658:	435f3141 	cmpmi	pc, #1073741840	; 0x40000010
     65c:	6e6e6168 	powvsez	f6, f6, #0.0
     660:	5f366c65 	svcpl	0x00366c65
     664:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     668:	414d4400 	cmpmi	sp, r0, lsl #8
     66c:	68435f32 	stmdavs	r3, {r1, r4, r5, r8, r9, sl, fp, ip, lr}^
     670:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xfffff19f
     674:	495f316c 	ldmdbmi	pc, {r2, r3, r5, r6, r8, ip, sp}^	; <UNPREDICTABLE>
     678:	006e5152 	rsbeq	r5, lr, r2, asr r1
     67c:	334d4954 	movtcc	r4, #55636	; 0xd954
     680:	5152495f 	cmppl	r2, pc, asr r9
     684:	4d44006e 	stclmi	0, cr0, [r4, #-440]	; 0xfffffe48
     688:	435f3141 	cmpmi	pc, #1073741840	; 0x40000010
     68c:	6e6e6168 	powvsez	f6, f6, #0.0
     690:	5f316c65 	svcpl	0x00316c65
     694:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     698:	62737500 	rsbsvs	r7, r3, #0, 10
     69c:	616c635f 	cmnvs	ip, pc, asr r3
     6a0:	695f7373 	ldmdbvs	pc, {r0, r1, r4, r5, r6, r8, r9, ip, sp, lr}^	; <UNPREDICTABLE>
     6a4:	0074696e 	rsbseq	r6, r4, lr, ror #18
     6a8:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
     6ac:	45005243 	strmi	r5, [r0, #-579]	; 0xfffffdbd
     6b0:	00523250 	subseq	r3, r2, r0, asr r2
     6b4:	314d4954 	cmpcc	sp, r4, asr r9
     6b8:	52495f30 	subpl	r5, r9, #48, 30	; 0xc0
     6bc:	57006e51 	smlsdpl	r0, r1, lr, r6
     6c0:	5f474457 	svcpl	0x00474457
     6c4:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     6c8:	62737500 	rsbsvs	r7, r3, #0, 10
     6cc:	616c635f 	cmnvs	ip, pc, asr r3
     6d0:	645f7373 	ldrbvs	r7, [pc], #-883	; 6d8 <_Min_Stack_Size+0x2d8>
     6d4:	6f637369 	svcvs	0x00637369
     6d8:	63656e6e 	cmnvs	r5, #1760	; 0x6e0
     6dc:	50450074 	subpl	r0, r5, r4, ror r0
     6e0:	42005233 	andmi	r5, r0, #805306371	; 0x30000003
     6e4:	61467375 	hvcvs	26421	; 0x6735
     6e8:	5f746c75 	svcpl	0x00746c75
     6ec:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     6f0:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
     6f4:	495f3449 	ldmdbmi	pc, {r0, r3, r6, sl, ip, sp}^	; <UNPREDICTABLE>
     6f8:	006e5152 	rsbeq	r5, lr, r2, asr r1
     6fc:	5f445650 	svcpl	0x00445650
     700:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     704:	66706500 	ldrbtvs	r6, [r0], -r0, lsl #10
     708:	5f636e75 	svcpl	0x00636e75
     70c:	73750074 	cmnvc	r5, #116	; 0x74
     710:	78745f62 	ldmdavc	r4!, {r1, r5, r6, r8, r9, sl, fp, ip, lr}^
     714:	756f635f 	strbvc	r6, [pc, #-863]!	; 3bd <_Min_Heap_Size+0x3bd>
     718:	4900746e 	stmdbmi	r0, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
     71c:	00525043 	subseq	r5, r2, r3, asr #32
     720:	32414d44 	subcc	r4, r1, #68, 26	; 0x1100
     724:	6168435f 	cmnvs	r8, pc, asr r3
     728:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
     72c:	52495f33 	subpl	r5, r9, #51, 30	; 0xcc
     730:	54006e51 	strpl	r6, [r0], #-3665	; 0xfffff1af
     734:	5f354d49 	svcpl	0x00354d49
     738:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     73c:	414d4400 	cmpmi	sp, r0, lsl #8
     740:	68435f31 	stmdavs	r3, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
     744:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xfffff19f
     748:	495f336c 	ldmdbmi	pc, {r2, r3, r5, r6, r8, r9, ip, sp}^	; <UNPREDICTABLE>
     74c:	006e5152 	rsbeq	r5, lr, r2, asr r1
     750:	2f637273 	svccs	0x00637273
     754:	5f627375 	svcpl	0x00627375
     758:	2e62696c 	vnmulcs.f16	s13, s4, s25	; <UNPREDICTABLE>
     75c:	32490063 	subcc	r0, r9, #99	; 0x63
     760:	455f3143 	ldrbmi	r3, [pc, #-323]	; 625 <_Min_Stack_Size+0x225>
     764:	52495f56 	subpl	r5, r9, #344	; 0x158
     768:	72006e51 	andvc	r6, r0, #1296	; 0x510
     76c:	756e5f78 	strbvc	r5, [lr, #-3960]!	; 0xfffff088
     770:	6c625f6d 	stclvs	15, cr5, [r2], #-436	; 0xfffffe4c
     774:	736b636f 	cmnvc	fp, #-1140850687	; 0xbc000001
     778:	62737500 	rsbsvs	r7, r3, #0, 10
     77c:	616c635f 	cmnvs	ip, pc, asr r3
     780:	655f7373 	ldrbvs	r7, [pc, #-883]	; 415 <_Min_Stack_Size+0x15>
     784:	695f3070 	ldmdbvs	pc, {r4, r5, r6, ip, sp}^	; <UNPREDICTABLE>
     788:	5453006e 	ldrbpl	r0, [r3], #-110	; 0xffffff92
     78c:	52005249 	andpl	r5, r0, #-1879048188	; 0x90000004
     790:	415f4354 	cmpmi	pc, r4, asr r3	; <UNPREDICTABLE>
     794:	6d72616c 	ldfvse	f6, [r2, #-432]!	; 0xfffffe50
     798:	5152495f 	cmppl	r2, pc, asr r9
     79c:	7872006e 	ldmdavc	r2!, {r1, r2, r3, r5, r6}^
     7a0:	7a69735f 	bvc	1a5d524 <_Min_Stack_Size+0x1a5d124>
     7a4:	50450065 	subpl	r0, r5, r5, rrx
     7a8:	52005235 	andpl	r5, r0, #1342177283	; 0x50000003
     7ac:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     7b0:	30444556 	subcc	r4, r4, r6, asr r5
     7b4:	53455200 	movtpl	r5, #20992	; 0x5200
     7b8:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     7bc:	52003144 	andpl	r3, r0, #68, 2
     7c0:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     7c4:	32444556 	subcc	r4, r4, #360710144	; 0x15800000
     7c8:	53455200 	movtpl	r5, #20992	; 0x5200
     7cc:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     7d0:	52003344 	andpl	r3, r0, #68, 6	; 0x10000001
     7d4:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     7d8:	34444556 	strbcc	r4, [r4], #-1366	; 0xfffffaaa
     7dc:	53455200 	movtpl	r5, #20992	; 0x5200
     7e0:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     7e4:	52003544 	andpl	r3, r0, #68, 10	; 0x11000000
     7e8:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     7ec:	36444556 			; <UNDEFINED> instruction: 0x36444556
     7f0:	42535500 	subsmi	r5, r3, #0, 10
     7f4:	5f53465f 	svcpl	0x0053465f
     7f8:	50554b57 	subspl	r4, r5, r7, asr fp
     7fc:	5152495f 	cmppl	r2, pc, asr r9
     800:	4552006e 	ldrbmi	r0, [r2, #-110]	; 0xffffff92
     804:	56524553 			; <UNDEFINED> instruction: 0x56524553
     808:	00394445 	eorseq	r4, r9, r5, asr #8
     80c:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     810:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     814:	53550041 	cmppl	r5, #65	; 0x41
     818:	31545241 	cmpcc	r4, r1, asr #4
     81c:	5152495f 	cmppl	r2, pc, asr r9
     820:	7375006e 	cmnvc	r5, #110	; 0x6e
     824:	70655f62 	rsbvc	r5, r5, r2, ror #30
     828:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
     82c:	6f4e0074 	svcvs	0x004e0074
     830:	73614d6e 	cmnvc	r1, #7040	; 0x1b80
     834:	6c62616b 	stfvse	f6, [r2], #-428	; 0xfffffe54
     838:	746e4965 	strbtvc	r4, [lr], #-2405	; 0xfffff69b
     83c:	5152495f 	cmppl	r2, pc, asr r9
     840:	4c77006e 	ldclmi	0, cr0, [r7], #-440	; 0xfffffe48
     844:	74676e65 	strbtvc	r6, [r7], #-3685	; 0xfffff19b
     848:	50450068 	subpl	r0, r5, r8, rrx
     84c:	6c005236 	sfmvs	f5, 4, [r0], {54}	; 0x36
     850:	00746665 	rsbseq	r6, r4, r5, ror #12
     854:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
     858:	52495f31 	subpl	r5, r9, #49, 30	; 0xc4
     85c:	62006e51 	andvs	r6, r0, #1296	; 0x510
     860:	75716552 	ldrbvc	r6, [r1, #-1362]!	; 0xfffffaae
     864:	00747365 	rsbseq	r7, r4, r5, ror #6
     868:	4349564e 	movtmi	r5, #38478	; 0x964e
     86c:	7079545f 	rsbsvc	r5, r9, pc, asr r4
     870:	4e430065 	cdpmi	0, 4, cr0, cr3, cr5, {3}
     874:	44005254 	strmi	r5, [r0], #-596	; 0xfffffdac
     878:	5f32414d 	svcpl	0x0032414d
     87c:	6e616843 	cdpvs	8, 6, cr6, cr1, cr3, {2}
     880:	356c656e 	strbcc	r6, [ip, #-1390]!	; 0xfffffa92
     884:	5152495f 	cmppl	r2, pc, asr r9
     888:	3249006e 	subcc	r0, r9, #110	; 0x6e
     88c:	455f3143 	ldrbmi	r3, [pc, #-323]	; 751 <_Min_Stack_Size+0x351>
     890:	52495f52 	subpl	r5, r9, #328	; 0x148
     894:	75006e51 	strvc	r6, [r0, #-3665]	; 0xfffff1af
     898:	655f6273 	ldrbvs	r6, [pc, #-627]	; 62d <_Min_Stack_Size+0x22d>
     89c:	65725f70 	ldrbvs	r5, [r2, #-3952]!	; 0xfffff090
     8a0:	53006461 	movwpl	r6, #1121	; 0x461
     8a4:	69547379 	ldmdbvs	r4, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}^
     8a8:	495f6b63 	ldmdbmi	pc, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^	; <UNPREDICTABLE>
     8ac:	006e5152 	rsbeq	r5, lr, r2, asr r1
     8b0:	756e7065 	strbvc	r7, [lr, #-101]!	; 0xffffff9b
     8b4:	4954006d 	ldmdbmi	r4, {r0, r2, r3, r5, r6}^
     8b8:	495f324d 	ldmdbmi	pc, {r0, r2, r3, r6, r9, ip, sp}^	; <UNPREDICTABLE>
     8bc:	006e5152 	rsbeq	r5, lr, r2, asr r1
     8c0:	5f627375 	svcpl	0x00627375
     8c4:	73616c63 	cmnvc	r1, #25344	; 0x6300
     8c8:	70655f73 	rsbvc	r5, r5, r3, ror pc
     8cc:	756f5f30 	strbvc	r5, [pc, #-3888]!	; fffff9a4 <BootRAM+0xef70145>
     8d0:	50450074 	subpl	r0, r5, r4, ror r0
     8d4:	63005237 	movwvs	r5, #567	; 0x237
     8d8:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
     8dc:	61705f67 	cmnvs	r0, r7, ror #30
     8e0:	745f6b63 	ldrbvc	r6, [pc], #-2915	; 8e8 <_Min_Stack_Size+0x4e8>
     8e4:	62737500 	rsbsvs	r7, r3, #0, 10
     8e8:	5f78725f 	svcpl	0x0078725f
     8ec:	72646461 	rsbvc	r6, r4, #1627389952	; 0x61000000
     8f0:	42535500 	subsmi	r5, r3, #0, 10
     8f4:	5f50485f 	svcpl	0x0050485f
     8f8:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     8fc:	62654400 	rsbvs	r4, r5, #0, 8
     900:	6f4d6775 	svcvs	0x004d6775
     904:	6f74696e 	svcvs	0x0074696e
     908:	52495f72 	subpl	r5, r9, #456	; 0x1c8
     90c:	55006e51 	strpl	r6, [r0, #-3665]	; 0xfffff1af
     910:	65676173 	strbvs	r6, [r7, #-371]!	; 0xfffffe8d
     914:	6c756146 	ldfvse	f6, [r5], #-280	; 0xfffffee8
     918:	52495f74 	subpl	r5, r9, #116, 30	; 0x1d0
     91c:	72006e51 	andvc	r6, r0, #1296	; 0x510
     920:	6c625f78 	stclvs	15, cr5, [r2], #-480	; 0xfffffe20
     924:	736b636f 	cmnvc	fp, #-1140850687	; 0xbc000001
     928:	00657a69 	rsbeq	r7, r5, r9, ror #20
     92c:	75667065 	strbvc	r7, [r6, #-101]!	; 0xffffff9b
     930:	695f636e 	ldmdbvs	pc, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^	; <UNPREDICTABLE>
     934:	5845006e 	stmdapl	r5, {r1, r2, r3, r5, r6}^
     938:	5f394954 	svcpl	0x00394954
     93c:	52495f35 	subpl	r5, r9, #53, 30	; 0xd4
     940:	45006e51 	strmi	r6, [r0, #-3665]	; 0xfffff1af
     944:	00523450 	subseq	r3, r2, r0, asr r4
     948:	52454349 	subpl	r4, r5, #603979777	; 0x24000001
     94c:	49505300 	ldmdbmi	r0, {r8, r9, ip, lr}^
     950:	52495f32 	subpl	r5, r9, #50, 30	; 0xc8
     954:	49006e51 	stmdbmi	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
     958:	00524241 	subseq	r4, r2, r1, asr #4
     95c:	374d4954 	smlsldcc	r4, sp, r4, r9
     960:	5152495f 	cmppl	r2, pc, asr r9
     964:	4d44006e 	stclmi	0, cr0, [r4, #-440]	; 0xfffffe48
     968:	435f3141 	cmpmi	pc, #1073741840	; 0x40000010
     96c:	6e6e6168 	powvsez	f6, f6, #0.0
     970:	5f356c65 	svcpl	0x00356c65
     974:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     978:	41544200 	cmpmi	r4, r0, lsl #4
     97c:	00454c42 	subeq	r4, r5, r2, asr #24
     980:	5f434144 	svcpl	0x00434144
     984:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     988:	5f706500 	svcpl	0x00706500
     98c:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
     990:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
     994:	495f3349 	ldmdbmi	pc, {r0, r3, r6, r8, r9, ip, sp}^	; <UNPREDICTABLE>
     998:	006e5152 	rsbeq	r5, lr, r2, asr r1
     99c:	5f726964 	svcpl	0x00726964
     9a0:	75006e69 	strvc	r6, [r0, #-3689]	; 0xfffff197
     9a4:	745f6273 	ldrbvc	r6, [pc], #-627	; 9ac <_Min_Stack_Size+0x5ac>
     9a8:	64615f78 	strbtvs	r5, [r1], #-3960	; 0xfffff088
     9ac:	49007264 	stmdbmi	r0, {r2, r5, r6, r9, ip, sp, lr}
     9b0:	00525053 	subseq	r5, r2, r3, asr r0
     9b4:	5f627375 	svcpl	0x00627375
     9b8:	635f7872 	cmpvs	pc, #7471104	; 0x720000
     9bc:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
     9c0:	63787200 	cmnvs	r8, #0, 4
     9c4:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
     9c8:	414d4400 	cmpmi	sp, r0, lsl #8
     9cc:	68435f32 	stmdavs	r3, {r1, r4, r5, r8, r9, sl, fp, ip, lr}^
     9d0:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xfffff19f
     9d4:	495f326c 	ldmdbmi	pc, {r2, r3, r5, r6, r9, ip, sp}^	; <UNPREDICTABLE>
     9d8:	006e5152 	rsbeq	r5, lr, r2, asr r1
     9dc:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
     9e0:	495f3354 	ldmdbmi	pc, {r2, r4, r6, r8, r9, ip, sp}^	; <UNPREDICTABLE>
     9e4:	006e5152 	rsbeq	r5, lr, r2, asr r1
     9e8:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     9ec:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     9f0:	53550038 	cmppl	r5, #56	; 0x38
     9f4:	504c5f42 	subpl	r5, ip, r2, asr #30
     9f8:	5152495f 	cmppl	r2, pc, asr r9
     9fc:	4552006e 	ldrbmi	r0, [r2, #-110]	; 0xffffff92
     a00:	56524553 			; <UNDEFINED> instruction: 0x56524553
     a04:	00424445 	subeq	r4, r2, r5, asr #8
     a08:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     a0c:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     a10:	53550043 	cmppl	r5, #67	; 0x43
     a14:	49485f42 	stmdbmi	r8, {r1, r6, r8, r9, sl, fp, ip, lr}^
     a18:	73654444 	cmnvc	r5, #68, 8	; 0x44000000
     a1c:	70697263 	rsbvc	r7, r9, r3, ror #4
     a20:	00726f74 	rsbseq	r6, r2, r4, ror pc
     a24:	5f6e6f5f 	svcpl	0x006e6f5f
     a28:	74697865 	strbtvc	r7, [r9], #-2149	; 0xfffff79b
     a2c:	6772615f 			; <UNDEFINED> instruction: 0x6772615f
     a30:	775f0073 			; <UNDEFINED> instruction: 0x775f0073
     a34:	6d6f7463 	cfstrdvs	mvd7, [pc, #-396]!	; 8b0 <_Min_Stack_Size+0x4b0>
     a38:	74735f62 	ldrbtvc	r5, [r3], #-3938	; 0xfffff09e
     a3c:	00657461 	rsbeq	r7, r5, r1, ror #8
     a40:	616d6e5f 	cmnvs	sp, pc, asr lr
     a44:	636f6c6c 	cmnvs	pc, #108, 24	; 0x6c00
     a48:	64696800 	strbtvs	r6, [r9], #-2048	; 0xfffff800
     a4c:	7461645f 	strbtvc	r6, [r1], #-1119	; 0xfffffba1
     a50:	725f0061 	subsvc	r0, pc, #97	; 0x61
     a54:	5f003834 	svcpl	0x00003834
     a58:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
     a5c:	625f6c61 	subsvs	r6, pc, #24832	; 0x6100
     a60:	5f006675 	svcpl	0x00006675
     a64:	7366626c 	cmnvc	r6, #108, 4	; 0xc0000006
     a68:	00657a69 	rsbeq	r7, r5, r9, ror #20
     a6c:	616c665f 	cmnvs	ip, pc, asr r6
     a70:	5f007367 	svcpl	0x00007367
     a74:	4b434f4c 	blmi	10d47ac <_Min_Stack_Size+0x10d43ac>
     a78:	4345525f 	movtmi	r5, #21087	; 0x525f
     a7c:	49535255 	ldmdbmi	r3, {r0, r2, r4, r6, r9, ip, lr}^
     a80:	545f4556 	ldrbpl	r4, [pc], #-1366	; a88 <_Min_Stack_Size+0x688>
     a84:	626d5f00 	rsbvs	r5, sp, #0, 30
     a88:	6e656c72 	mcrvs	12, 3, r6, cr5, cr2, {3}
     a8c:	6174735f 	cmnvs	r4, pc, asr r3
     a90:	5f006574 	svcpl	0x00006574
     a94:	6f647473 	svcvs	0x00647473
     a98:	5f007475 	svcpl	0x00007475
     a9c:	736f7066 	cmnvc	pc, #102	; 0x66
     aa0:	5f00745f 	svcpl	0x0000745f
     aa4:	00736e66 	rsbseq	r6, r3, r6, ror #28
     aa8:	6f6f635f 	svcvs	0x006f635f
     aac:	0065696b 	rsbeq	r6, r5, fp, ror #18
     ab0:	6d745f5f 	ldclvs	15, cr5, [r4, #-380]!	; 0xfffffe84
     ab4:	6164775f 	cmnvs	r4, pc, asr r7
     ab8:	725f0079 	subsvc	r0, pc, #121	; 0x79
     abc:	6c757365 	ldclvs	3, cr7, [r5], #-404	; 0xfffffe6c
     ac0:	5f5f0074 	svcpl	0x005f0074
     ac4:	685f6d74 	ldmdavs	pc, {r2, r4, r5, r6, r8, sl, fp, sp, lr}^	; <UNPREDICTABLE>
     ac8:	0072756f 	rsbseq	r7, r2, pc, ror #10
     acc:	6f635f5f 	svcvs	0x00635f5f
     ad0:	00746e75 	rsbseq	r6, r4, r5, ror lr
     ad4:	6d745f5f 	ldclvs	15, cr5, [r4, #-380]!	; 0xfffffe84
     ad8:	6e696d5f 	mcrvs	13, 3, r6, cr9, cr15, {2}
     adc:	656e5f00 	strbvs	r5, [lr, #-3840]!	; 0xfffff100
     ae0:	00667478 	rsbeq	r7, r6, r8, ror r4
     ae4:	6e61725f 	mcrvs	2, 3, r7, cr1, cr15, {2}
     ae8:	00383464 	eorseq	r3, r8, r4, ror #8
     aec:	7365725f 	cmnvc	r5, #-268435451	; 0xf0000005
     af0:	5f746c75 	svcpl	0x00746c75
     af4:	5355006b 	cmppl	r5, #107	; 0x6b
     af8:	6f435f42 	svcvs	0x00435f42
     afc:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
     b00:	63736544 	cmnvs	r3, #68, 10	; 0x11000000
     b04:	74706972 	ldrbtvc	r6, [r0], #-2418	; 0xfffff68e
     b08:	5f00726f 	svcpl	0x0000726f
     b0c:	74637361 	strbtvc	r7, [r3], #-865	; 0xfffffc9f
     b10:	5f656d69 	svcpl	0x00656d69
     b14:	00667562 	rsbeq	r7, r6, r2, ror #10
     b18:	46735f5f 	uhsaxmi	r5, r3, pc	; <UNPREDICTABLE>
     b1c:	00454c49 	subeq	r4, r5, r9, asr #24
     b20:	7364775f 	cmnvc	r4, #24903680	; 0x17c0000
     b24:	465f5f00 	ldrbmi	r5, [pc], -r0, lsl #30
     b28:	00454c49 	subeq	r4, r5, r9, asr #24
     b2c:	66666f5f 	uqsaxvs	r6, r6, pc	; <UNPREDICTABLE>
     b30:	00746573 	rsbseq	r6, r4, r3, ror r5
     b34:	656d655f 	strbvs	r6, [sp, #-1375]!	; 0xfffffaa1
     b38:	6e656772 	mcrvs	7, 3, r6, cr5, cr2, {3}
     b3c:	5f007963 	svcpl	0x00007963
     b40:	5f6d745f 	svcpl	0x006d745f
     b44:	00636573 	rsbeq	r6, r3, r3, ror r5
     b48:	6d745f5f 	ldclvs	15, cr5, [r4, #-380]!	; 0xfffffe84
     b4c:	6164795f 	cmnvs	r4, pc, asr r9
     b50:	695f0079 	ldmdbvs	pc, {r0, r3, r4, r5, r6}^	; <UNPREDICTABLE>
     b54:	5f00636e 	svcpl	0x0000636e
     b58:	00646e69 	rsbeq	r6, r4, r9, ror #28
     b5c:	73626d5f 	cmnvc	r2, #6080	; 0x17c0
     b60:	776f7472 			; <UNDEFINED> instruction: 0x776f7472
     b64:	735f7363 	cmpvc	pc, #-1946157055	; 0x8c000001
     b68:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
     b6c:	765f5f00 	ldrbvc	r5, [pc], -r0, lsl #30
     b70:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
     b74:	35705f00 	ldrbcc	r5, [r0, #-3840]!	; 0xfffff100
     b78:	775f0073 			; <UNDEFINED> instruction: 0x775f0073
     b7c:	74727363 	ldrbtvc	r7, [r2], #-867	; 0xfffffc9d
     b80:	73626d6f 	cmnvc	r2, #7104	; 0x1bc0
     b84:	6174735f 	cmnvs	r4, pc, asr r3
     b88:	5f006574 	svcpl	0x00006574
     b8c:	656c626d 	strbvs	r6, [ip, #-621]!	; 0xfffffd93
     b90:	74735f6e 	ldrbtvc	r5, [r3], #-3950	; 0xfffff092
     b94:	00657461 	rsbeq	r7, r5, r1, ror #8
     b98:	6d745f5f 	ldclvs	15, cr5, [r4, #-380]!	; 0xfffffe84
     b9c:	61646d5f 	cmnvs	r4, pc, asr sp
     ba0:	735f0079 	cmpvc	pc, #121	; 0x79
     ba4:	665f6769 	ldrbvs	r6, [pc], -r9, ror #14
     ba8:	00636e75 	rsbeq	r6, r3, r5, ror lr
     bac:	72626d5f 	rsbvc	r6, r2, #6080	; 0x17c0
     bb0:	63776f74 	cmnvs	r7, #116, 30	; 0x1d0
     bb4:	6174735f 	cmnvs	r4, pc, asr r3
     bb8:	5f006574 	svcpl	0x00006574
     bbc:	78657461 	stmdavc	r5!, {r0, r5, r6, sl, ip, sp, lr}^
     bc0:	00307469 	eorseq	r7, r0, r9, ror #8
     bc4:	6f6c665f 	svcvs	0x006c665f
     bc8:	745f6b63 	ldrbvc	r6, [pc], #-2915	; bd0 <_Min_Stack_Size+0x7d0>
     bcc:	775f5f00 	ldrbvc	r5, [pc, -r0, lsl #30]
     bd0:	5f006863 	svcpl	0x00006863
     bd4:	73626f69 	cmnvc	r2, #420	; 0x1a4
     bd8:	6c635f00 	stclvs	15, cr5, [r3], #-0
     bdc:	0065736f 	rsbeq	r7, r5, pc, ror #6
     be0:	64735f5f 	ldrbtvs	r5, [r3], #-3935	; 0xfffff0a1
     be4:	6e696469 	cdpvs	4, 6, cr6, cr9, cr9, {3}
     be8:	5f007469 	svcpl	0x00007469
     bec:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
     bf0:	675f006e 	ldrbvs	r0, [pc, -lr, rrx]
     bf4:	616d6d61 	cmnvs	sp, r1, ror #26
     bf8:	6769735f 			; <UNDEFINED> instruction: 0x6769735f
     bfc:	6d61676e 	stclvs	7, cr6, [r1, #-440]!	; 0xfffffe48
     c00:	61625f00 	cmnvs	r2, r0, lsl #30
     c04:	5f006573 	svcpl	0x00006573
     c08:	65657266 	strbvs	r7, [r5, #-614]!	; 0xfffffd9a
     c0c:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
     c10:	756d5f00 	strbvc	r5, [sp, #-3840]!	; 0xfffff100
     c14:	5f00746c 	svcpl	0x0000746c
     c18:	6f4c555f 	svcvs	0x004c555f
     c1c:	5f00676e 	svcpl	0x0000676e
     c20:	74726377 	ldrbtvc	r6, [r2], #-887	; 0xfffffc89
     c24:	5f626d6f 	svcpl	0x00626d6f
     c28:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
     c2c:	665f0065 	ldrbvs	r0, [pc], -r5, rrx
     c30:	00656c69 	rsbeq	r6, r5, r9, ror #24
     c34:	6c635f5f 	stclvs	15, cr5, [r3], #-380	; 0xfffffe84
     c38:	756e6165 	strbvc	r6, [lr, #-357]!	; 0xfffffe9b
     c3c:	6d5f0070 	ldclvs	0, cr0, [pc, #-448]	; a84 <_Min_Stack_Size+0x684>
     c40:	61747362 	cmnvs	r4, r2, ror #6
     c44:	745f6574 	ldrbvc	r6, [pc], #-1396	; c4c <_Min_Stack_Size+0x84c>
     c48:	656c6700 	strbvs	r6, [ip, #-1792]!	; 0xfffff900
     c4c:	5f5f0064 	svcpl	0x005f0064
     c50:	695f6d74 	ldmdbvs	pc, {r2, r4, r5, r6, r8, sl, fp, sp, lr}^	; <UNPREDICTABLE>
     c54:	74736473 	ldrbtvc	r6, [r3], #-1139	; 0xfffffb8d
     c58:	5f685f00 	svcpl	0x00685f00
     c5c:	6e727265 	cdpvs	2, 7, cr7, cr2, cr5, {3}
     c60:	5f5f006f 	svcpl	0x005f006f
     c64:	6d5f6d74 	ldclvs	13, cr6, [pc, #-464]	; a9c <_Min_Stack_Size+0x69c>
     c68:	6c006e6f 	stcvs	14, cr6, [r0], {111}	; 0x6f
     c6c:	20676e6f 	rsbcs	r6, r7, pc, ror #28
     c70:	62756f64 	rsbsvs	r6, r5, #100, 30	; 0x190
     c74:	5f00656c 	svcpl	0x0000656c
     c78:	78657461 	stmdavc	r5!, {r0, r5, r6, sl, ip, sp, lr}^
     c7c:	5f007469 	svcpl	0x00007469
     c80:	7473626d 	ldrbtvc	r6, [r3], #-621	; 0xfffffd93
     c84:	00657461 	rsbeq	r7, r5, r1, ror #8
     c88:	6769425f 			; <UNDEFINED> instruction: 0x6769425f
     c8c:	00746e69 	rsbseq	r6, r4, r9, ror #28
     c90:	2f637273 	svccs	0x00637273
     c94:	5f627375 	svcpl	0x00627375
     c98:	73616c63 	cmnvc	r1, #25344	; 0x6300
     c9c:	69685f73 	stmdbvs	r8!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     ca0:	61786564 	cmnvs	r8, r4, ror #10
     ca4:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
     ca8:	6200632e 	andvs	r6, r0, #-1207959552	; 0xb8000000
     cac:	69727453 	ldmdbvs	r2!, {r0, r1, r4, r6, sl, ip, sp, lr}^
     cb0:	5f00676e 	svcpl	0x0000676e
     cb4:	0066735f 	rsbeq	r7, r6, pc, asr r3
     cb8:	6769735f 			; <UNDEFINED> instruction: 0x6769735f
     cbc:	5f5f006e 	svcpl	0x005f006e
     cc0:	62686377 	rsbvs	r6, r8, #-603979775	; 0xdc000001
     cc4:	6c675f00 	stclvs	15, cr5, [r7], #-0
     cc8:	6c61626f 	sfmvs	f6, 2, [r1], #-444	; 0xfffffe44
     ccc:	706d695f 	rsbvc	r6, sp, pc, asr r9
     cd0:	5f657275 	svcpl	0x00657275
     cd4:	00727470 	rsbseq	r7, r2, r0, ror r4
     cd8:	6d745f5f 	ldclvs	15, cr5, [r4, #-380]!	; 0xfffffe84
     cdc:	6165795f 	cmnvs	r5, pc, asr r9
     ce0:	53550072 	cmppl	r5, #114	; 0x72
     ce4:	74535f42 	ldrbvc	r5, [r3], #-3906	; 0xfffff0be
     ce8:	676e6972 			; <UNDEFINED> instruction: 0x676e6972
     cec:	69726553 	ldmdbvs	r2!, {r0, r1, r4, r6, r8, sl, sp, lr}^
     cf0:	65446c61 	strbvs	r6, [r4, #-3169]	; 0xfffff39f
     cf4:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
     cf8:	726f7470 	rsbvc	r7, pc, #112, 8	; 0x70000000
     cfc:	6f6c5f00 	svcvs	0x006c5f00
     d00:	746c6163 	strbtvc	r6, [ip], #-355	; 0xfffffe9d
     d04:	5f656d69 	svcpl	0x00656d69
     d08:	00667562 	rsbeq	r7, r6, r2, ror #10
     d0c:	5f425355 	svcpl	0x00425355
     d10:	69727453 	ldmdbvs	r2!, {r0, r1, r4, r6, sl, ip, sp, lr}^
     d14:	614c676e 	cmpvs	ip, lr, ror #14
     d18:	6544676e 	strbvs	r6, [r4, #-1902]	; 0xfffff892
     d1c:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
     d20:	726f7470 	rsbvc	r7, pc, #112, 8	; 0x70000000
     d24:	6e755f00 	cdpvs	15, 7, cr5, cr5, cr0, {0}
     d28:	64657375 	strbtvs	r7, [r5], #-885	; 0xfffffc8b
     d2c:	656e5f00 	strbvs	r5, [lr, #-3840]!	; 0xfffff100
     d30:	635f0077 	cmpvs	pc, #119	; 0x77
     d34:	656c7476 	strbvs	r7, [ip, #-1142]!	; 0xfffffb8a
     d38:	6d5f006e 	ldclvs	0, cr0, [pc, #-440]	; b88 <_Min_Stack_Size+0x788>
     d3c:	64777861 	ldrbtvs	r7, [r7], #-2145	; 0xfffff79f
     d40:	6c5f0073 	mrrcvs	0, 7, r0, pc, cr3	; <UNPREDICTABLE>
     d44:	5f613436 	svcpl	0x00613436
     d48:	00667562 	rsbeq	r7, r6, r2, ror #10
     d4c:	6b6c625f 	blvs	1b196d0 <_Min_Stack_Size+0x1b192d0>
     d50:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
     d54:	745f5f00 	ldrbvc	r5, [pc], #-3840	; d5c <_Min_Stack_Size+0x95c>
     d58:	6c5f006d 	mrrcvs	0, 6, r0, pc, cr13	; <UNPREDICTABLE>
     d5c:	006b636f 	rsbeq	r6, fp, pc, ror #6
     d60:	5f425355 	svcpl	0x00425355
     d64:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
     d68:	75516563 	ldrbvc	r6, [r1, #-1379]	; 0xfffffa9d
     d6c:	66696c61 	strbtvs	r6, [r9], -r1, ror #24
     d70:	44726569 	ldrbtmi	r6, [r2], #-1385	; 0xfffffa97
     d74:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
     d78:	6f747069 	svcvs	0x00747069
     d7c:	6c720072 	ldclvs	0, cr0, [r2], #-456	; 0xfffffe38
     d80:	5f006465 	svcpl	0x00006465
     d84:	626f696e 	rsbvs	r6, pc, #1802240	; 0x1b8000
     d88:	69770073 	ldmdbvs	r7!, {r0, r1, r4, r5, r6}^
     d8c:	745f746e 	ldrbvc	r7, [pc], #-1134	; d94 <_Min_Stack_Size+0x994>
     d90:	73645f00 	cmnvc	r4, #0, 30
     d94:	61685f6f 	cmnvs	r8, pc, ror #30
     d98:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     d9c:	76635f00 	strbtvc	r5, [r3], -r0, lsl #30
     da0:	66756274 			; <UNDEFINED> instruction: 0x66756274
     da4:	65675f00 	strbvs	r5, [r7, #-3840]!	; 0xfffff100
     da8:	74616474 	strbtvc	r6, [r1], #-1140	; 0xfffffb8c
     dac:	72655f65 	rsbvc	r5, r5, #404	; 0x194
     db0:	53550072 	cmppl	r5, #114	; 0x72
     db4:	65445f42 	strbvs	r5, [r4, #-3906]	; 0xfffff0be
     db8:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
     dbc:	63736544 	cmnvs	r3, #68, 10	; 0x11000000
     dc0:	74706972 	ldrbtvc	r6, [r0], #-2418	; 0xfffff68e
     dc4:	5f00726f 	svcpl	0x0000726f
     dc8:	00646461 	rsbeq	r6, r4, r1, ror #8
     dcc:	73654462 	cmnvc	r5, #1644167168	; 0x62000000
     dd0:	70697263 	rsbvc	r7, r9, r3, ror #4
     dd4:	54726f74 	ldrbtpl	r6, [r2], #-3956	; 0xfffff08c
     dd8:	00657079 	rsbeq	r7, r5, r9, ror r0
     ddc:	62735f5f 	rsbsvs	r5, r3, #380	; 0x17c
     de0:	55006675 	strpl	r6, [r0, #-1653]	; 0xfffff98b
     de4:	535f4253 	cmppl	pc, #805306373	; 0x30000005
     de8:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
     dec:	6e614d67 	cdpvs	13, 6, cr4, cr1, cr7, {3}
     df0:	63616675 	cmnvs	r1, #122683392	; 0x7500000
     df4:	69727574 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, sl, ip, sp, lr}^
     df8:	6544676e 	strbvs	r6, [r4, #-1902]	; 0xfffff892
     dfc:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
     e00:	726f7470 	rsbvc	r7, pc, #112, 8	; 0x70000000
     e04:	6c675f00 	stclvs	15, cr5, [r7], #-0
     e08:	5f006575 	svcpl	0x00006575
     e0c:	6c67735f 	stclvs	3, cr7, [r7], #-380	; 0xfffffe84
     e10:	5f006575 	svcpl	0x00006575
     e14:	74727473 	ldrbtvc	r7, [r2], #-1139	; 0xfffffb8d
     e18:	6c5f6b6f 	mrrcvs	11, 6, r6, pc, cr15	; <UNPREDICTABLE>
     e1c:	00747361 	rsbseq	r7, r4, r1, ror #6
     e20:	74626d5f 	strbtvc	r6, [r2], #-3423	; 0xfffff2a1
     e24:	5f63776f 	svcpl	0x0063776f
     e28:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
     e2c:	6c5f0065 	mrrcvs	0, 6, r0, pc, cr5	; <UNPREDICTABLE>
     e30:	6c61636f 	stclvs	3, cr6, [r1], #-444	; 0xfffffe44
     e34:	665f0065 	ldrbvs	r0, [pc], -r5, rrx
     e38:	6772616e 	ldrbvs	r6, [r2, -lr, ror #2]!
     e3c:	61640073 	smcvs	16387	; 0x4003
     e40:	78656174 	stmdavc	r5!, {r2, r4, r5, r6, r8, sp, lr}^
     e44:	6e616863 	cdpvs	8, 6, cr6, cr1, cr3, {3}
     e48:	745f6567 	ldrbvc	r6, [pc], #-1383	; e50 <_Min_Stack_Size+0xa50>
     e4c:	65725f00 	ldrbvs	r5, [r2, #-3840]!	; 0xfffff100
     e50:	00746e65 	rsbseq	r6, r4, r5, ror #28
     e54:	5f425355 	svcpl	0x00425355
     e58:	69727453 	ldmdbvs	r2!, {r0, r1, r4, r6, sl, ip, sp, lr}^
     e5c:	7250676e 	subsvc	r6, r0, #28835840	; 0x1b80000
     e60:	6544646f 	strbvs	r6, [r4, #-1135]	; 0xfffffb91
     e64:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
     e68:	726f7470 	rsbvc	r7, pc, #112, 8	; 0x70000000
     e6c:	6e665f00 	cdpvs	15, 6, cr5, cr6, cr0, {0}
     e70:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
     e74:	6f5f0073 	svcvs	0x005f0073
     e78:	745f6666 	ldrbvc	r6, [pc], #-1638	; e80 <_Min_Stack_Size+0xa80>
     e7c:	626e5f00 	rsbvs	r5, lr, #0, 30
     e80:	5f006675 	svcpl	0x00006675
     e84:	73756e75 	cmnvc	r5, #1872	; 0x750
     e88:	725f6465 	subsvc	r6, pc, #1694498816	; 0x65000000
     e8c:	00646e61 	rsbeq	r6, r4, r1, ror #28
     e90:	6e654c62 	cdpvs	12, 6, cr4, cr5, cr2, {3}
     e94:	00687467 	rsbeq	r7, r8, r7, ror #8
     e98:	736e755f 	cmnvc	lr, #398458880	; 0x17c00000
     e9c:	69636570 	stmdbvs	r3!, {r4, r5, r6, r8, sl, sp, lr}^
     ea0:	64656966 	strbtvs	r6, [r5], #-2406	; 0xfffff69a
     ea4:	636f6c5f 	cmnvs	pc, #24320	; 0x5f00
     ea8:	5f656c61 	svcpl	0x00656c61
     eac:	6f666e69 	svcvs	0x00666e69
     eb0:	6c665f00 	stclvs	15, cr5, [r6], #-0
     eb4:	32736761 	rsbscc	r6, r3, #25427968	; 0x1840000
     eb8:	73695f00 	cmnvc	r9, #0, 30
     ebc:	6178635f 	cmnvs	r8, pc, asr r3
     ec0:	65735f00 	ldrbvs	r5, [r3, #-3840]!	; 0xfffff100
     ec4:	5f006465 	svcpl	0x00006465
     ec8:	646e6172 	strbtvs	r6, [lr], #-370	; 0xfffffe8e
     ecc:	78656e5f 	stmdavc	r5!, {r0, r1, r2, r3, r4, r6, r9, sl, fp, sp, lr}^
     ed0:	5f5f0074 	svcpl	0x005f0074
     ed4:	61636f6c 	cmnvs	r3, ip, ror #30
     ed8:	745f656c 	ldrbvc	r6, [pc], #-1388	; ee0 <_Min_Stack_Size+0xae0>
     edc:	65735f00 	ldrbvs	r5, [r3, #-3840]!	; 0xfffff100
     ee0:	5f006b65 	svcpl	0x00006b65
     ee4:	65647473 	strbvs	r7, [r4, #-1139]!	; 0xfffffb8d
     ee8:	5f007272 	svcpl	0x00007272
     eec:	66756275 			; <UNDEFINED> instruction: 0x66756275
     ef0:	695f5f00 	ldmdbvs	pc, {r8, r9, sl, fp, ip, lr}^	; <UNPREDICTABLE>
     ef4:	5f74696e 	svcpl	0x0074696e
     ef8:	61727261 	cmnvs	r2, r1, ror #4
     efc:	74735f79 	ldrbtvc	r5, [r3], #-3961	; 0xfffff087
     f00:	00747261 	rsbseq	r7, r4, r1, ror #4
     f04:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
     f08:	5f00745f 	svcpl	0x0000745f
     f0c:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
     f10:	6e695f63 	cdpvs	15, 6, cr5, cr9, cr3, {3}
     f14:	615f7469 	cmpvs	pc, r9, ror #8
     f18:	79617272 	stmdbvc	r1!, {r1, r4, r5, r6, r9, ip, sp, lr}^
     f1c:	75622f00 	strbvc	r2, [r2, #-3840]!	; 0xfffff100
     f20:	2f646c69 	svccs	0x00646c69
     f24:	6c77656e 	cfldr64vs	mvdx6, [r7], #-440	; 0xfffffe48
     f28:	6b2d6269 	blvs	b598d4 <_Min_Stack_Size+0xb594d4>
     f2c:	77766747 	ldrbvc	r6, [r6, -r7, asr #14]!
     f30:	656e2f45 	strbvs	r2, [lr, #-3909]!	; 0xfffff0bb
     f34:	62696c77 	rsbvs	r6, r9, #30464	; 0x7700
     f38:	332e332d 			; <UNDEFINED> instruction: 0x332e332d
     f3c:	622f302e 	eorvs	r3, pc, #46	; 0x2e
     f40:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
     f44:	6e616e5f 	mcrvs	14, 3, r6, cr1, cr15, {2}
     f48:	72612f6f 	rsbvc	r2, r1, #444	; 0x1bc
     f4c:	6f6e2d6d 	svcvs	0x006e2d6d
     f50:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     f54:	2f696261 	svccs	0x00696261
     f58:	6d756874 	ldclvs	8, cr6, [r5, #-464]!	; 0xfffffe30
     f5c:	37762f62 	ldrbcc	r2, [r6, -r2, ror #30]!
     f60:	6e2f6d2d 	cdpvs	13, 2, cr6, cr15, cr13, {1}
     f64:	2f70666f 	svccs	0x0070666f
     f68:	6c77656e 	cfldr64vs	mvdx6, [r7], #-440	; 0xfffffe48
     f6c:	6c2f6269 	sfmvs	f6, 4, [pc], #-420	; dd0 <_Min_Stack_Size+0x9d0>
     f70:	2f636269 	svccs	0x00636269
     f74:	6373696d 	cmnvs	r3, #1785856	; 0x1b4000
     f78:	705f5f00 	subsvc	r5, pc, r0, lsl #30
     f7c:	6e696572 	mcrvs	5, 3, r6, cr9, cr2, {3}
     f80:	615f7469 	cmpvs	pc, r9, ror #8
     f84:	79617272 	stmdbvc	r1!, {r1, r4, r5, r6, r9, ip, sp, lr}^
     f88:	6174735f 	cmnvs	r4, pc, asr r3
     f8c:	47007472 	smlsdxmi	r0, r2, r4, r7
     f90:	4320554e 			; <UNDEFINED> instruction: 0x4320554e
     f94:	38203731 	stmdacc	r0!, {r0, r4, r5, r8, r9, sl, ip, sp}
     f98:	312e332e 			; <UNDEFINED> instruction: 0x312e332e
     f9c:	31303220 	teqcc	r0, r0, lsr #4
     fa0:	30373039 	eorscc	r3, r7, r9, lsr r0
     fa4:	72282033 	eorvc	r2, r8, #51	; 0x33
     fa8:	61656c65 	cmnvs	r5, r5, ror #24
     fac:	20296573 	eorcs	r6, r9, r3, ror r5
     fb0:	6363675b 	cmnvs	r3, #23855104	; 0x16c0000
     fb4:	622d382d 	eorvs	r3, sp, #2949120	; 0x2d0000
     fb8:	636e6172 	cmnvs	lr, #-2147483620	; 0x8000001c
     fbc:	65722068 	ldrbvs	r2, [r2, #-104]!	; 0xffffff98
     fc0:	69736976 	ldmdbvs	r3!, {r1, r2, r4, r5, r6, r8, fp, sp, lr}^
     fc4:	32206e6f 	eorcc	r6, r0, #1776	; 0x6f0
     fc8:	32303337 	eorscc	r3, r0, #-603979776	; 0xdc000000
     fcc:	2d205d37 	stccs	13, cr5, [r0, #-220]!	; 0xffffff24
     fd0:	6f6c666d 	svcvs	0x006c666d
     fd4:	612d7461 			; <UNDEFINED> instruction: 0x612d7461
     fd8:	733d6962 	teqvc	sp, #1605632	; 0x188000
     fdc:	2074666f 	rsbscs	r6, r4, pc, ror #12
     fe0:	68746d2d 	ldmdavs	r4!, {r0, r2, r3, r5, r8, sl, fp, sp, lr}^
     fe4:	20626d75 	rsbcs	r6, r2, r5, ror sp
     fe8:	6c666d2d 	stclvs	13, cr6, [r6], #-180	; 0xffffff4c
     fec:	2d74616f 	ldfcse	f6, [r4, #-444]!	; 0xfffffe44
     ff0:	3d696261 	sfmcc	f6, 2, [r9, #-388]!	; 0xfffffe7c
     ff4:	74666f73 	strbtvc	r6, [r6], #-3955	; 0xfffff08d
     ff8:	616d2d20 	cmnvs	sp, r0, lsr #26
     ffc:	3d686372 	stclcc	3, cr6, [r8, #-456]!	; 0xfffffe38
    1000:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
    1004:	206d2d37 	rsbcs	r2, sp, r7, lsr sp
    1008:	2d20672d 	stccs	7, cr6, [r0, #-180]!	; 0xffffff4c
    100c:	2d20324f 	sfmcs	f3, 4, [r0, #-316]!	; 0xfffffec4
    1010:	2d6f6e66 	stclcs	14, cr6, [pc, #-408]!	; e80 <_Min_Stack_Size+0xa80>
    1014:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
    1018:	006e6974 	rsbeq	r6, lr, r4, ror r9
    101c:	72705f5f 	rsbsvc	r5, r0, #380	; 0x17c
    1020:	696e6965 	stmdbvs	lr!, {r0, r2, r5, r6, r8, fp, sp, lr}^
    1024:	72615f74 	rsbvc	r5, r1, #116, 30	; 0x1d0
    1028:	5f796172 	svcpl	0x00796172
    102c:	00646e65 	rsbeq	r6, r4, r5, ror #28
    1030:	6e695f5f 	mcrvs	15, 3, r5, cr9, cr15, {2}
    1034:	615f7469 	cmpvs	pc, r9, ror #8
    1038:	79617272 	stmdbvc	r1!, {r1, r4, r5, r6, r9, ip, sp, lr}^
    103c:	646e655f 	strbtvs	r6, [lr], #-1375	; 0xfffffaa1
    1040:	2f2e2e00 	svccs	0x002e2e00
    1044:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1048:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    104c:	2f2e2e2f 	svccs	0x002e2e2f
    1050:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1054:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1058:	77656e2f 	strbvc	r6, [r5, -pc, lsr #28]!
    105c:	2f62696c 	svccs	0x0062696c
    1060:	6362696c 	cmnvs	r2, #108, 18	; 0x1b0000
    1064:	73696d2f 	cmnvc	r9, #3008	; 0xbc0
    1068:	6e692f63 	cdpvs	15, 6, cr2, cr9, cr3, {3}
    106c:	632e7469 			; <UNDEFINED> instruction: 0x632e7469
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <_Min_Stack_Size+0x10d0924>
   4:	35312820 	ldrcc	r2, [r1, #-2080]!	; 0xfffff7e0
   8:	322d383a 	eorcc	r3, sp, #3801088	; 0x3a0000
   c:	2d393130 	ldfcss	f3, [r9, #-192]!	; 0xffffff40
  10:	312d3371 			; <UNDEFINED> instruction: 0x312d3371
  14:	2e382029 	cdpcs	0, 3, cr2, cr8, cr9, {1}
  18:	20312e33 	eorscs	r2, r1, r3, lsr lr
  1c:	39313032 	ldmdbcc	r1!, {r1, r4, r5, ip, sp}
  20:	33303730 	teqcc	r0, #48, 14	; 0xc00000
  24:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
  28:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
  2c:	5b202965 	blpl	80a5c8 <_Min_Stack_Size+0x80a1c8>
  30:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
  34:	72622d38 	rsbvc	r2, r2, #56, 26	; 0xe00
  38:	68636e61 	stmdavs	r3!, {r0, r5, r6, r9, sl, fp, sp, lr}^
  3c:	76657220 	strbtvc	r7, [r5], -r0, lsr #4
  40:	6f697369 	svcvs	0x00697369
  44:	3732206e 	ldrcc	r2, [r2, -lr, rrx]!
  48:	37323033 			; <UNDEFINED> instruction: 0x37323033
  4c:	Address 0x000000000000004c is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	08000150 	stmdaeq	r0, {r4, r6, r8}
  1c:	00000098 	muleq	r0, r8, r0
  20:	0000000c 	andeq	r0, r0, ip
  24:	00000000 	andeq	r0, r0, r0
  28:	080001e8 	stmdaeq	r0, {r3, r5, r6, r7, r8}
  2c:	00000124 	andeq	r0, r0, r4, lsr #2
  30:	0000000c 	andeq	r0, r0, ip
  34:	00000000 	andeq	r0, r0, r0
  38:	0800030c 	stmdaeq	r0, {r2, r3, r8, r9}
  3c:	00000048 	andeq	r0, r0, r8, asr #32
  40:	0000000c 	andeq	r0, r0, ip
  44:	00000000 	andeq	r0, r0, r0
  48:	08000354 	stmdaeq	r0, {r2, r4, r6, r8, r9}
  4c:	00000002 	andeq	r0, r0, r2
  50:	0000000c 	andeq	r0, r0, ip
  54:	00000000 	andeq	r0, r0, r0
  58:	08000356 	stmdaeq	r0, {r1, r2, r4, r6, r8, r9}
  5c:	00000002 	andeq	r0, r0, r2
  60:	0000000c 	andeq	r0, r0, ip
  64:	00000000 	andeq	r0, r0, r0
  68:	08000358 	stmdaeq	r0, {r3, r4, r6, r8, r9}
  6c:	0000000c 	andeq	r0, r0, ip
  70:	00000014 	andeq	r0, r0, r4, lsl r0
  74:	00000000 	andeq	r0, r0, r0
  78:	080009e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, fp}
  7c:	00000084 	andeq	r0, r0, r4, lsl #1
  80:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
  84:	00018e02 	andeq	r8, r1, r2, lsl #28
  88:	0000000c 	andeq	r0, r0, ip
  8c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
  90:	7c020001 	stcvc	0, cr0, [r2], {1}
  94:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  98:	0000000c 	andeq	r0, r0, ip
  9c:	00000088 	andeq	r0, r0, r8, lsl #1
  a0:	08000364 	stmdaeq	r0, {r2, r5, r6, r8, r9}
  a4:	00000002 	andeq	r0, r0, r2
  a8:	0000000c 	andeq	r0, r0, ip
  ac:	00000088 	andeq	r0, r0, r8, lsl #1
  b0:	08000366 	stmdaeq	r0, {r1, r2, r5, r6, r8, r9}
  b4:	00000002 	andeq	r0, r0, r2
  b8:	0000000c 	andeq	r0, r0, ip
  bc:	00000088 	andeq	r0, r0, r8, lsl #1
  c0:	08000368 	stmdaeq	r0, {r3, r5, r6, r8, r9}
  c4:	00000002 	andeq	r0, r0, r2
  c8:	0000000c 	andeq	r0, r0, ip
  cc:	00000088 	andeq	r0, r0, r8, lsl #1
  d0:	0800036a 	stmdaeq	r0, {r1, r3, r5, r6, r8, r9}
  d4:	00000004 	andeq	r0, r0, r4
  d8:	0000000c 	andeq	r0, r0, ip
  dc:	00000088 	andeq	r0, r0, r8, lsl #1
  e0:	0800036e 	stmdaeq	r0, {r1, r2, r3, r5, r6, r8, r9}
  e4:	00000004 	andeq	r0, r0, r4
  e8:	0000000c 	andeq	r0, r0, ip
  ec:	00000088 	andeq	r0, r0, r8, lsl #1
  f0:	08000372 	stmdaeq	r0, {r1, r4, r5, r6, r8, r9}
  f4:	0000006e 	andeq	r0, r0, lr, rrx
  f8:	0000001c 	andeq	r0, r0, ip, lsl r0
  fc:	00000088 	andeq	r0, r0, r8, lsl #1
 100:	080003e0 	stmdaeq	r0, {r5, r6, r7, r8, r9}
 104:	000000ec 	andeq	r0, r0, ip, ror #1
 108:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
 10c:	86048505 	strhi	r8, [r4], -r5, lsl #10
 110:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 114:	00000001 	andeq	r0, r0, r1
 118:	00000018 	andeq	r0, r0, r8, lsl r0
 11c:	00000088 	andeq	r0, r0, r8, lsl #1
 120:	080004cc 	stmdaeq	r0, {r2, r3, r6, r7, sl}
 124:	00000128 	andeq	r0, r0, r8, lsr #2
 128:	83100e41 	tsthi	r0, #1040	; 0x410
 12c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
 130:	00018e02 	andeq	r8, r1, r2, lsl #28
 134:	0000001c 	andeq	r0, r0, ip, lsl r0
 138:	00000088 	andeq	r0, r0, r8, lsl #1
 13c:	080005f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, sl}
 140:	0000005a 	andeq	r0, r0, sl, asr r0
 144:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
 148:	86048505 	strhi	r8, [r4], -r5, lsl #10
 14c:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 150:	00000001 	andeq	r0, r0, r1
 154:	0000001c 	andeq	r0, r0, ip, lsl r0
 158:	00000088 	andeq	r0, r0, r8, lsl #1
 15c:	0800064e 	stmdaeq	r0, {r1, r2, r3, r6, r9, sl}
 160:	0000005a 	andeq	r0, r0, sl, asr r0
 164:	83180e41 	tsthi	r8, #1040	; 0x410
 168:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
 16c:	87038604 	strhi	r8, [r3, -r4, lsl #12]
 170:	00018e02 	andeq	r8, r1, r2, lsl #28
 174:	00000018 	andeq	r0, r0, r8, lsl r0
 178:	00000088 	andeq	r0, r0, r8, lsl #1
 17c:	080006a8 	stmdaeq	r0, {r3, r5, r7, r9, sl}
 180:	00000058 	andeq	r0, r0, r8, asr r0
 184:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 188:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
 18c:	00000001 	andeq	r0, r0, r1
 190:	00000020 	andeq	r0, r0, r0, lsr #32
 194:	00000088 	andeq	r0, r0, r8, lsl #1
 198:	08000700 	stmdaeq	r0, {r8, r9, sl}
 19c:	00000118 	andeq	r0, r0, r8, lsl r1
 1a0:	84180e41 	ldrhi	r0, [r8], #-3649	; 0xfffff1bf
 1a4:	86038504 	strhi	r8, [r3], -r4, lsl #10
 1a8:	02018e02 	andeq	r8, r1, #2, 28
 1ac:	100e0a46 	andne	r0, lr, r6, asr #20
 1b0:	00000b41 	andeq	r0, r0, r1, asr #22
 1b4:	0000000c 	andeq	r0, r0, ip
 1b8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 1bc:	7c020001 	stcvc	0, cr0, [r2], {1}
 1c0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 1c4:	0000000c 	andeq	r0, r0, ip
 1c8:	000001b4 			; <UNDEFINED> instruction: 0x000001b4
 1cc:	08000818 	stmdaeq	r0, {r3, r4, fp}
 1d0:	0000007c 	andeq	r0, r0, ip, ror r0
 1d4:	00000018 	andeq	r0, r0, r8, lsl r0
 1d8:	000001b4 			; <UNDEFINED> instruction: 0x000001b4
 1dc:	08000894 	stmdaeq	r0, {r2, r4, r7, fp}
 1e0:	00000064 	andeq	r0, r0, r4, rrx
 1e4:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 1e8:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
 1ec:	00000001 	andeq	r0, r0, r1
 1f0:	00000014 	andeq	r0, r0, r4, lsl r0
 1f4:	000001b4 			; <UNDEFINED> instruction: 0x000001b4
 1f8:	080008f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, fp}
 1fc:	00000044 	andeq	r0, r0, r4, asr #32
 200:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
 204:	00018e02 	andeq	r8, r1, r2, lsl #28
 208:	0000000c 	andeq	r0, r0, ip
 20c:	000001b4 			; <UNDEFINED> instruction: 0x000001b4
 210:	0800093c 	stmdaeq	r0, {r2, r3, r4, r5, r8, fp}
 214:	00000014 	andeq	r0, r0, r4, lsl r0
 218:	0000000c 	andeq	r0, r0, ip
 21c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 220:	7c020001 	stcvc	0, cr0, [r2], {1}
 224:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 228:	00000018 	andeq	r0, r0, r8, lsl r0
 22c:	00000218 	andeq	r0, r0, r8, lsl r2
 230:	08000950 	stmdaeq	r0, {r4, r6, r8, fp}
 234:	00000048 	andeq	r0, r0, r8, asr #32
 238:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
 23c:	86038504 	strhi	r8, [r3], -r4, lsl #10
 240:	00018e02 	andeq	r8, r1, r2, lsl #28
